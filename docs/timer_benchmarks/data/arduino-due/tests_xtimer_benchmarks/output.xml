<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201029 18:15:07.175" rpa="false">
<suite id="s1" name="tests_xtimer_benchmarks" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 18:15:10.801" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 18:15:10.810" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 18:15:12.665" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 18:15:10.800" endtime="20201029 18:15:12.666"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 18:15:15.671" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20201029 18:15:12.668" endtime="20201029 18:15:15.672"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:10.798" endtime="20201029 18:15:15.674"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:15.678" endtime="20201029 18:15:15.947"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:15.675" endtime="20201029 18:15:15.948"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:15.960" endtime="20201029 18:15:18.983"></status>
</kw>
<msg timestamp="20201029 18:15:18.984" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:15.959" endtime="20201029 18:15:18.984"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:18.989" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:18.986" endtime="20201029 18:15:18.990"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:15:18.996" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:15:18.991" endtime="20201029 18:15:18.996"></status>
</kw>
<status status="FAIL" starttime="20201029 18:15:15.956" endtime="20201029 18:15:18.998"></status>
</kw>
<status status="FAIL" starttime="20201029 18:15:15.954" endtime="20201029 18:15:18.999"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:15.953" endtime="20201029 18:15:19.000"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:15:19.007" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:15:19.006" endtime="20201029 18:15:19.010"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:19.002" endtime="20201029 18:15:19.010"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:15.952" endtime="20201029 18:15:19.010"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:15.951" endtime="20201029 18:15:19.011"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:19.013" endtime="20201029 18:15:19.016"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:15.950" endtime="20201029 18:15:19.017"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:19.018" endtime="20201029 18:15:19.021"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:15.948" endtime="20201029 18:15:19.022"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:10.797" endtime="20201029 18:15:19.023"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:19.035" endtime="20201029 18:15:19.055"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:19.032" endtime="20201029 18:15:19.056"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:19.069" endtime="20201029 18:15:22.088"></status>
</kw>
<msg timestamp="20201029 18:15:22.088" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:19.068" endtime="20201029 18:15:22.088"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:22.091" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:22.089" endtime="20201029 18:15:22.091"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:15:22.094" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:15:22.092" endtime="20201029 18:15:22.094"></status>
</kw>
<status status="FAIL" starttime="20201029 18:15:19.065" endtime="20201029 18:15:22.095"></status>
</kw>
<status status="FAIL" starttime="20201029 18:15:19.063" endtime="20201029 18:15:22.095"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:19.061" endtime="20201029 18:15:22.096"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:15:22.099" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:15:22.099" endtime="20201029 18:15:22.100"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:22.096" endtime="20201029 18:15:22.100"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:19.060" endtime="20201029 18:15:22.100"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:19.059" endtime="20201029 18:15:22.100"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:22.101" endtime="20201029 18:15:22.103"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:19.058" endtime="20201029 18:15:22.103"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:19.057" endtime="20201029 18:15:22.103"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:19.030" endtime="20201029 18:15:22.104"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:22.111" endtime="20201029 18:15:22.122"></status>
</kw>
<msg timestamp="20201029 18:15:22.122" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:22.109" endtime="20201029 18:15:22.122"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:22.124" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:22.123" endtime="20201029 18:15:22.125"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:22.125" endtime="20201029 18:15:22.127"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:22.106" endtime="20201029 18:15:22.128"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:22.104" endtime="20201029 18:15:22.128"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:22.133" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201029 18:15:22.131" endtime="20201029 18:15:22.134"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:22.136" level="INFO">VALUE: xtimer</msg>
<status status="PASS" starttime="20201029 18:15:22.135" endtime="20201029 18:15:22.136"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:22.129" endtime="20201029 18:15:22.136"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 18:15:19.024" endtime="20201029 18:15:22.137" critical="yes"></status>
</test>
<status status="PASS" starttime="20201029 18:15:07.287" endtime="20201029 18:15:22.140"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 18:15:22.192" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 18:15:22.201" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 18:15:24.772" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 18:15:22.191" endtime="20201029 18:15:24.773"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 18:15:27.776" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20201029 18:15:24.774" endtime="20201029 18:15:27.777"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:22.190" endtime="20201029 18:15:27.778"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:27.783" endtime="20201029 18:15:28.050"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:27.780" endtime="20201029 18:15:28.050"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:28.063" endtime="20201029 18:15:31.086"></status>
</kw>
<msg timestamp="20201029 18:15:31.087" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:28.061" endtime="20201029 18:15:31.087"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:31.092" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:31.089" endtime="20201029 18:15:31.093"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:15:31.099" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:15:31.095" endtime="20201029 18:15:31.100"></status>
</kw>
<status status="FAIL" starttime="20201029 18:15:28.059" endtime="20201029 18:15:31.101"></status>
</kw>
<status status="FAIL" starttime="20201029 18:15:28.056" endtime="20201029 18:15:31.102"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:28.055" endtime="20201029 18:15:31.103"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:15:31.111" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:15:31.110" endtime="20201029 18:15:31.112"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:31.105" endtime="20201029 18:15:31.113"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:28.054" endtime="20201029 18:15:31.113"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:28.054" endtime="20201029 18:15:31.113"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:31.115" endtime="20201029 18:15:31.118"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:28.053" endtime="20201029 18:15:31.119"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:31.121" endtime="20201029 18:15:31.125"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:28.051" endtime="20201029 18:15:31.126"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:22.189" endtime="20201029 18:15:31.126"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:31.141" endtime="20201029 18:15:31.163"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:31.136" endtime="20201029 18:15:31.164"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:31.193" endtime="20201029 18:15:34.217"></status>
</kw>
<msg timestamp="20201029 18:15:34.218" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:31.189" endtime="20201029 18:15:37.560"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:37.566" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:37.563" endtime="20201029 18:15:37.567"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:15:37.573" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:15:37.568" endtime="20201029 18:15:37.573"></status>
</kw>
<status status="FAIL" starttime="20201029 18:15:31.184" endtime="20201029 18:15:37.575"></status>
</kw>
<status status="FAIL" starttime="20201029 18:15:31.178" endtime="20201029 18:15:37.576"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:31.176" endtime="20201029 18:15:37.577"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:15:37.585" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:15:37.583" endtime="20201029 18:15:37.586"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:37.579" endtime="20201029 18:15:37.586"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:31.174" endtime="20201029 18:15:37.587"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:31.173" endtime="20201029 18:15:37.587"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:37.589" endtime="20201029 18:15:37.592"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:31.170" endtime="20201029 18:15:37.593"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:31.166" endtime="20201029 18:15:37.594"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:31.133" endtime="20201029 18:15:37.595"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:37.614" endtime="20201029 18:15:37.632"></status>
</kw>
<msg timestamp="20201029 18:15:37.633" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:37.610" endtime="20201029 18:15:37.633"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:37.638" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:37.635" endtime="20201029 18:15:37.639"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:37.640" endtime="20201029 18:15:37.644"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:37.605" endtime="20201029 18:15:37.645"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:37.601" endtime="20201029 18:15:37.646"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:37.661" endtime="20201029 18:15:37.947"></status>
</kw>
<msg timestamp="20201029 18:15:37.949" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.465036903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.465046431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:37.657" endtime="20201029 18:15:37.950"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:37.955" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.465036903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.465046431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:37.950" endtime="20201029 18:15:37.955"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:37.956" endtime="20201029 18:15:37.958"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:37.652" endtime="20201029 18:15:37.958"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:37.648" endtime="20201029 18:15:37.959"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:37.962" level="INFO">${RESULT} = [{'diff': 9.528000000535997e-06}, {'diff': 9.26400000000882e-06}, {'diff': 1.1028000000301574e-05}, {'diff': 7.263999999729265e-06}, {'diff': 6.19400000001491e-06}, {'diff': 7.416999999954044e-06}, {'...</msg>
<status status="PASS" starttime="20201029 18:15:37.960" endtime="20201029 18:15:37.963"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:15:37.966" level="INFO">${GPIO_OVERHEAD} = {'diff': [9.528000000535997e-06, 9.26400000000882e-06, 1.1028000000301574e-05, 7.263999999729265e-06, 6.19400000001491e-06, 7.416999999954044e-06, 5.5549999995463395e-06, 1.1555000000385007e-05, 8.527...</msg>
<status status="PASS" starttime="20201029 18:15:37.963" endtime="20201029 18:15:37.966"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:37.971" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:15:37.969" endtime="20201029 18:15:37.971"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:37.973" level="INFO">VALUE: [9.528000000535997e-06, 9.26400000000882e-06, 1.1028000000301574e-05, 7.263999999729265e-06, 6.19400000001491e-06, 7.416999999954044e-06, 5.5549999995463395e-06, 1.1555000000385007e-05, 8.527000000313478e-06, 9.499999999995623e-06, 7.68000000039848e-06, 1.051399999951741e-05, 1.0652999999472001e-05, 8.110999999644264e-06, 6.971999999549894e-06, 7.861000000275453e-06, 8.750000000112834e-06, 8.069999999804622e-06, 8.388999999553448e-06, 5.5420000002470715e-06, 9.346999999770844e-06, 8.514000000126032e-06, 1.1014000000031388e-05, 9.957999999699041e-06, 8.985999999211458e-06]</msg>
<status status="PASS" starttime="20201029 18:15:37.972" endtime="20201029 18:15:37.973"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:37.967" endtime="20201029 18:15:37.974"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:37.598" endtime="20201029 18:15:37.974"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:37.597" endtime="20201029 18:15:37.975"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:37.983" endtime="20201029 18:15:37.994"></status>
</kw>
<msg timestamp="20201029 18:15:37.995" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:37.981" endtime="20201029 18:15:37.995"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:37.997" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:37.996" endtime="20201029 18:15:37.997"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:37.998" endtime="20201029 18:15:38.001"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:37.978" endtime="20201029 18:15:38.002"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:37.977" endtime="20201029 18:15:38.002"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:38.009" endtime="20201029 18:15:38.309"></status>
</kw>
<msg timestamp="20201029 18:15:38.312" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.465036903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.465046431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:38.007" endtime="20201029 18:15:38.313"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:38.321" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.465036903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.465046431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:38.314" endtime="20201029 18:15:38.321"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:38.322" endtime="20201029 18:15:38.323"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:38.004" endtime="20201029 18:15:38.324"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:38.003" endtime="20201029 18:15:38.324"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:38.328" level="INFO">${RESULT} = [{'diff': 9.528000000535997e-06}, {'diff': 9.26400000000882e-06}, {'diff': 1.1028000000301574e-05}, {'diff': 7.263999999729265e-06}, {'diff': 6.19400000001491e-06}, {'diff': 7.416999999954044e-06}, {'...</msg>
<status status="PASS" starttime="20201029 18:15:38.325" endtime="20201029 18:15:38.328"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:15:38.332" level="INFO">${GPIO_OVERHEAD} = {'diff': [9.528000000535997e-06, 9.26400000000882e-06, 1.1028000000301574e-05, 7.263999999729265e-06, 6.19400000001491e-06, 7.416999999954044e-06, 5.5549999995463395e-06, 1.1555000000385007e-05, 8.527...</msg>
<status status="PASS" starttime="20201029 18:15:38.329" endtime="20201029 18:15:38.333"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:38.337" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:15:38.336" endtime="20201029 18:15:38.337"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:38.339" level="INFO">VALUE: [9.528000000535997e-06, 9.26400000000882e-06, 1.1028000000301574e-05, 7.263999999729265e-06, 6.19400000001491e-06, 7.416999999954044e-06, 5.5549999995463395e-06, 1.1555000000385007e-05, 8.527000000313478e-06, 9.499999999995623e-06, 7.68000000039848e-06, 1.051399999951741e-05, 1.0652999999472001e-05, 8.110999999644264e-06, 6.971999999549894e-06, 7.861000000275453e-06, 8.750000000112834e-06, 8.069999999804622e-06, 8.388999999553448e-06, 5.5420000002470715e-06, 9.346999999770844e-06, 8.514000000126032e-06, 1.1014000000031388e-05, 9.957999999699041e-06, 8.985999999211458e-06, 9.236000000356626e-06, 9.097999999596595e-06, 9.472000000343428e-06, 7.63899999967066e-06, 8.0269999997995e-06, 9.402999999963413e-06, 1.0597000000167611e-05, 8.583000000506047e-06, 5.360999999481919e-06, 1.1624999999959584e-05, 9.096999999513855e-06, 6.902999999169879e-06, 9.32000000020139e-06, 9.721999999712239e-06, 1.0597000000167611e-05, 9.249999999738634e-06, 8.153000000454824e-06, 8.111000000532442e-06, 1.1318999999510027e-05, 6.7359999995630915e-06, 1.1082999999523224e-05, 8.930999999989808e-06, 8.12499999991445e-06, 7.318999999839093e-06, 1.0181000000386575e-05]</msg>
<status status="PASS" starttime="20201029 18:15:38.338" endtime="20201029 18:15:38.341"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:38.333" endtime="20201029 18:15:38.341"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:37.975" endtime="20201029 18:15:38.342"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:37.975" endtime="20201029 18:15:38.342"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:38.349" endtime="20201029 18:15:38.361"></status>
</kw>
<msg timestamp="20201029 18:15:38.362" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:38.348" endtime="20201029 18:15:38.362"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:38.364" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:38.363" endtime="20201029 18:15:38.364"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:38.365" endtime="20201029 18:15:38.367"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:38.345" endtime="20201029 18:15:38.367"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:38.344" endtime="20201029 18:15:38.368"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:38.374" endtime="20201029 18:15:38.699"></status>
</kw>
<msg timestamp="20201029 18:15:38.703" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.46523725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.465247764, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:15:38.373" endtime="20201029 18:15:38.703"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:38.712" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.46523725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.465247764, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:15:38.704" endtime="20201029 18:15:38.713"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:38.714" endtime="20201029 18:15:38.715"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:38.370" endtime="20201029 18:15:38.716"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:38.368" endtime="20201029 18:15:38.716"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:38.720" level="INFO">${RESULT} = [{'diff': 1.051399999951741e-05}, {'diff': 1.0652999999472001e-05}, {'diff': 8.110999999644264e-06}, {'diff': 6.971999999549894e-06}, {'diff': 7.861000000275453e-06}, {'diff': 8.750000000112834e-06}, ...</msg>
<status status="PASS" starttime="20201029 18:15:38.717" endtime="20201029 18:15:38.721"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:15:38.726" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.051399999951741e-05, 1.0652999999472001e-05, 8.110999999644264e-06, 6.971999999549894e-06, 7.861000000275453e-06, 8.750000000112834e-06, 8.069999999804622e-06, 8.388999999553448e-06, 5.542...</msg>
<status status="PASS" starttime="20201029 18:15:38.722" endtime="20201029 18:15:38.726"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:38.730" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:15:38.729" endtime="20201029 18:15:38.731"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:38.733" level="INFO">VALUE: [1.051399999951741e-05, 1.0652999999472001e-05, 8.110999999644264e-06, 6.971999999549894e-06, 7.861000000275453e-06, 8.750000000112834e-06, 8.069999999804622e-06, 8.388999999553448e-06, 5.5420000002470715e-06, 9.346999999770844e-06, 8.514000000126032e-06, 1.1014000000031388e-05, 9.957999999699041e-06, 8.985999999211458e-06, 9.236000000356626e-06, 9.097999999596595e-06, 9.472000000343428e-06, 7.63899999967066e-06, 8.0269999997995e-06, 9.402999999963413e-06, 1.0597000000167611e-05, 8.583000000506047e-06, 5.360999999481919e-06, 1.1624999999959584e-05, 9.096999999513855e-06, 6.902999999169879e-06, 9.32000000020139e-06, 9.721999999712239e-06, 1.0597000000167611e-05, 9.249999999738634e-06, 8.153000000454824e-06, 8.111000000532442e-06, 1.1318999999510027e-05, 6.7359999995630915e-06, 1.1082999999523224e-05, 8.930999999989808e-06, 8.12499999991445e-06, 7.318999999839093e-06, 1.0181000000386575e-05, 7.611000000018464e-06, 1.080599999969678e-05, 8.389000000441627e-06, 9.208999999898992e-06, 9.37499999942304e-06, 8.514000000126032e-06, 8.388999999553448e-06, 8.87499999979724e-06, 8.318999999978871e-06, 8.527000000313478e-06, 7.38899999941367e-06, 1.0763999999774398e-05, 7.985999999959859e-06, 7.749999999973056e-06, 5.778000000233874e-06, 7.028000000630641e-06, 8.889000000067426e-06, 7.124999999774673e-06, 1.21939999999654e-05, 9.680999999872597e-06, 9.51400000026581e-06, 7.3890000003018486e-06, 9.458000000073241e-06, 7.098000000205218e-06, 7.693999999780488e-06]</msg>
<status status="PASS" starttime="20201029 18:15:38.732" endtime="20201029 18:15:38.734"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:38.727" endtime="20201029 18:15:38.734"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:38.342" endtime="20201029 18:15:38.735"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:38.342" endtime="20201029 18:15:38.735"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:38.742" endtime="20201029 18:15:38.754"></status>
</kw>
<msg timestamp="20201029 18:15:38.755" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:38.741" endtime="20201029 18:15:38.755"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:38.757" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:38.756" endtime="20201029 18:15:38.758"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:38.758" endtime="20201029 18:15:38.760"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:38.738" endtime="20201029 18:15:38.760"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:38.737" endtime="20201029 18:15:38.761"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:38.767" endtime="20201029 18:15:39.083"></status>
</kw>
<msg timestamp="20201029 18:15:39.087" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.820727319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.820734222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:38.766" endtime="20201029 18:15:39.087"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:39.096" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.820727319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.820734222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:39.088" endtime="20201029 18:15:39.097"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:39.098" endtime="20201029 18:15:39.099"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:38.763" endtime="20201029 18:15:39.100"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:38.762" endtime="20201029 18:15:39.100"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:39.105" level="INFO">${RESULT} = [{'diff': 6.902999999169879e-06}, {'diff': 9.32000000020139e-06}, {'diff': 9.721999999712239e-06}, {'diff': 1.0597000000167611e-05}, {'diff': 9.249999999738634e-06}, {'diff': 8.153000000454824e-06}, {...</msg>
<status status="PASS" starttime="20201029 18:15:39.101" endtime="20201029 18:15:39.105"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:15:39.109" level="INFO">${GPIO_OVERHEAD} = {'diff': [6.902999999169879e-06, 9.32000000020139e-06, 9.721999999712239e-06, 1.0597000000167611e-05, 9.249999999738634e-06, 8.153000000454824e-06, 8.111000000532442e-06, 1.1318999999510027e-05, 6.735...</msg>
<status status="PASS" starttime="20201029 18:15:39.106" endtime="20201029 18:15:39.109"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:39.114" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:15:39.112" endtime="20201029 18:15:39.114"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:39.116" level="INFO">VALUE: [6.902999999169879e-06, 9.32000000020139e-06, 9.721999999712239e-06, 1.0597000000167611e-05, 9.249999999738634e-06, 8.153000000454824e-06, 8.111000000532442e-06, 1.1318999999510027e-05, 6.7359999995630915e-06, 1.1082999999523224e-05, 8.930999999989808e-06, 8.12499999991445e-06, 7.318999999839093e-06, 1.0181000000386575e-05, 7.611000000018464e-06, 1.080599999969678e-05, 8.389000000441627e-06, 9.208999999898992e-06, 9.37499999942304e-06, 8.514000000126032e-06, 8.388999999553448e-06, 8.87499999979724e-06, 8.318999999978871e-06, 8.527000000313478e-06, 7.38899999941367e-06, 1.0763999999774398e-05, 7.985999999959859e-06, 7.749999999973056e-06, 5.778000000233874e-06, 7.028000000630641e-06, 8.889000000067426e-06, 7.124999999774673e-06, 1.21939999999654e-05, 9.680999999872597e-06, 9.51400000026581e-06, 7.3890000003018486e-06, 9.458000000073241e-06, 7.098000000205218e-06, 7.693999999780488e-06, 1.0430999999755386e-05, 7.903000000197835e-06, 8.347999999713807e-06, 8.346999999631066e-06, 1.0722999999934757e-05, 1.075000000039239e-05, 1.0930000000186624e-05, 7.347000000379467e-06, 5.15300000003549e-06, 8.111000000532442e-06, 9.528000000535997e-06, 7.082999999852291e-06, 9.944000000317033e-06, 1.0181000000386575e-05, 1.1040999999600842e-05, 8.986000000099637e-06, 5.888999999648092e-06, 7.820000000435812e-06, 9.931000000129586e-06, 6.445000000354639e-06, 8.263999999869043e-06, 1.0569999999709978e-05, 1.1610999999689398e-05, 7.791000000700876e-06, 7.749999999973056e-06]</msg>
<status status="PASS" starttime="20201029 18:15:39.115" endtime="20201029 18:15:39.117"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:39.110" endtime="20201029 18:15:39.117"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:38.735" endtime="20201029 18:15:39.118"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:38.735" endtime="20201029 18:15:39.118"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:39.127" endtime="20201029 18:15:39.138"></status>
</kw>
<msg timestamp="20201029 18:15:39.138" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:39.124" endtime="20201029 18:15:39.138"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:39.141" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:39.139" endtime="20201029 18:15:39.141"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:39.142" endtime="20201029 18:15:39.144"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:39.122" endtime="20201029 18:15:39.144"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:39.120" endtime="20201029 18:15:39.145"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:39.152" endtime="20201029 18:15:39.465"></status>
</kw>
<msg timestamp="20201029 18:15:39.468" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.177442417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.177453181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:39.150" endtime="20201029 18:15:39.469"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:39.478" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.177442417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.177453181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:39.469" endtime="20201029 18:15:39.478"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:39.479" endtime="20201029 18:15:39.481"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:39.147" endtime="20201029 18:15:39.481"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:39.145" endtime="20201029 18:15:39.482"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:39.486" level="INFO">${RESULT} = [{'diff': 1.0763999999774398e-05}, {'diff': 7.985999999959859e-06}, {'diff': 7.749999999973056e-06}, {'diff': 5.778000000233874e-06}, {'diff': 7.028000000630641e-06}, {'diff': 8.889000000067426e-06}, ...</msg>
<status status="PASS" starttime="20201029 18:15:39.483" endtime="20201029 18:15:39.486"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:15:39.491" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.0763999999774398e-05, 7.985999999959859e-06, 7.749999999973056e-06, 5.778000000233874e-06, 7.028000000630641e-06, 8.889000000067426e-06, 7.124999999774673e-06, 1.21939999999654e-05, 9.6809...</msg>
<status status="PASS" starttime="20201029 18:15:39.487" endtime="20201029 18:15:39.492"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:39.496" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:15:39.495" endtime="20201029 18:15:39.496"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:39.499" level="INFO">VALUE: [1.0763999999774398e-05, 7.985999999959859e-06, 7.749999999973056e-06, 5.778000000233874e-06, 7.028000000630641e-06, 8.889000000067426e-06, 7.124999999774673e-06, 1.21939999999654e-05, 9.680999999872597e-06, 9.51400000026581e-06, 7.3890000003018486e-06, 9.458000000073241e-06, 7.098000000205218e-06, 7.693999999780488e-06, 1.0430999999755386e-05, 7.903000000197835e-06, 8.347999999713807e-06, 8.346999999631066e-06, 1.0722999999934757e-05, 1.075000000039239e-05, 1.0930000000186624e-05, 7.347000000379467e-06, 5.15300000003549e-06, 8.111000000532442e-06, 9.528000000535997e-06, 7.082999999852291e-06, 9.944000000317033e-06, 1.0181000000386575e-05, 1.1040999999600842e-05, 8.986000000099637e-06, 5.888999999648092e-06, 7.820000000435812e-06, 9.931000000129586e-06, 6.445000000354639e-06, 8.263999999869043e-06, 1.0569999999709978e-05, 1.1610999999689398e-05, 7.791000000700876e-06, 7.749999999973056e-06, 8.776999999682289e-06, 8.722000000460639e-06, 8.736000000730826e-06, 8.457999999933463e-06, 7.959000000390404e-06, 6.082999999712513e-06, 7.5129999999035135e-06, 8.860999999527053e-06, 1.1778000000184363e-05, 7.611000000018464e-06, 1.015300000073438e-05, 7.902000000115095e-06, 8.861000000415231e-06, 8.111000000532442e-06, 8.16600000064227e-06, 7.5700000001788226e-06, 6.153000000175268e-06, 9.70800000033023e-06, 1.0500000000135401e-05, 6.638999999530881e-06, 9.499999999995623e-06, 9.041000000209465e-06, 1.1778000000184363e-05, 7.583000000366269e-06, 8.223000000029401e-06]</msg>
<status status="PASS" starttime="20201029 18:15:39.497" endtime="20201029 18:15:39.499"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:39.492" endtime="20201029 18:15:39.500"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:39.119" endtime="20201029 18:15:39.500"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:39.118" endtime="20201029 18:15:39.500"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:39.508" endtime="20201029 18:15:39.518"></status>
</kw>
<msg timestamp="20201029 18:15:39.519" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:39.506" endtime="20201029 18:15:39.519"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:39.521" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:39.520" endtime="20201029 18:15:39.522"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:39.522" endtime="20201029 18:15:39.524"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:39.504" endtime="20201029 18:15:39.524"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:39.502" endtime="20201029 18:15:39.525"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:39.531" endtime="20201029 18:15:39.843"></status>
</kw>
<msg timestamp="20201029 18:15:39.847" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.56051375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.560520833, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:15:39.530" endtime="20201029 18:15:39.847"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:39.857" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.56051375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.560520833, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:15:39.848" endtime="20201029 18:15:39.857"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:39.858" endtime="20201029 18:15:39.860"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:39.527" endtime="20201029 18:15:39.860"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:39.525" endtime="20201029 18:15:39.861"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:39.865" level="INFO">${RESULT} = [{'diff': 7.082999999852291e-06}, {'diff': 9.944000000317033e-06}, {'diff': 1.0181000000386575e-05}, {'diff': 1.1040999999600842e-05}, {'diff': 8.986000000099637e-06}, {'diff': 5.888999999648092e-06},...</msg>
<status status="PASS" starttime="20201029 18:15:39.861" endtime="20201029 18:15:39.865"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:15:39.872" level="INFO">${GPIO_OVERHEAD} = {'diff': [7.082999999852291e-06, 9.944000000317033e-06, 1.0181000000386575e-05, 1.1040999999600842e-05, 8.986000000099637e-06, 5.888999999648092e-06, 7.820000000435812e-06, 9.931000000129586e-06, 6.44...</msg>
<status status="PASS" starttime="20201029 18:15:39.866" endtime="20201029 18:15:39.872"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:39.876" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:15:39.875" endtime="20201029 18:15:39.877"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:39.879" level="INFO">VALUE: [7.082999999852291e-06, 9.944000000317033e-06, 1.0181000000386575e-05, 1.1040999999600842e-05, 8.986000000099637e-06, 5.888999999648092e-06, 7.820000000435812e-06, 9.931000000129586e-06, 6.445000000354639e-06, 8.263999999869043e-06, 1.0569999999709978e-05, 1.1610999999689398e-05, 7.791000000700876e-06, 7.749999999973056e-06, 8.776999999682289e-06, 8.722000000460639e-06, 8.736000000730826e-06, 8.457999999933463e-06, 7.959000000390404e-06, 6.082999999712513e-06, 7.5129999999035135e-06, 8.860999999527053e-06, 1.1778000000184363e-05, 7.611000000018464e-06, 1.015300000073438e-05, 7.902000000115095e-06, 8.861000000415231e-06, 8.111000000532442e-06, 8.16600000064227e-06, 7.5700000001788226e-06, 6.153000000175268e-06, 9.70800000033023e-06, 1.0500000000135401e-05, 6.638999999530881e-06, 9.499999999995623e-06, 9.041000000209465e-06, 1.1778000000184363e-05, 7.583000000366269e-06, 8.223000000029401e-06, 1.065300000036018e-05, 7.651999998969927e-06, 6.777999999485473e-06, 6.4029999986559005e-06, 1.090299999972899e-05, 6.875000000405862e-06, 9.736000000870604e-06, 9.694000000948222e-06, 6.29100000004712e-06, 1.0665999999659448e-05, 1.0528000000675775e-05, 1.1125000000333785e-05, 8.041000000957865e-06, 1.0542000000057783e-05, 7.930000000655468e-06, 8.13899999840828e-06, 9.306000000819381e-06, 6.9450000008686175e-06, 8.721999998684282e-06, 8.305000001485041e-06, 7.48599999944588e-06, 1.0264000000148599e-05, 1.0235999999608225e-05, 9.778000000792986e-06, 7.667000000211033e-06]</msg>
<status status="PASS" starttime="20201029 18:15:39.877" endtime="20201029 18:15:39.879"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:39.873" endtime="20201029 18:15:39.880"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:39.501" endtime="20201029 18:15:39.880"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:39.500" endtime="20201029 18:15:39.880"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:39.888" endtime="20201029 18:15:39.899"></status>
</kw>
<msg timestamp="20201029 18:15:39.899" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:39.887" endtime="20201029 18:15:39.899"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:39.902" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:39.900" endtime="20201029 18:15:39.902"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:39.903" endtime="20201029 18:15:39.904"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:39.884" endtime="20201029 18:15:39.905"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:39.882" endtime="20201029 18:15:39.905"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:39.912" endtime="20201029 18:15:40.222"></status>
</kw>
<msg timestamp="20201029 18:15:40.226" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.933729167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.933737069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:39.910" endtime="20201029 18:15:40.226"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:40.236" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.933729167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.933737069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:40.227" endtime="20201029 18:15:40.236"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:40.237" endtime="20201029 18:15:40.238"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:39.907" endtime="20201029 18:15:40.239"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:39.906" endtime="20201029 18:15:40.239"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:40.244" level="INFO">${RESULT} = [{'diff': 7.902000000115095e-06}, {'diff': 8.861000000415231e-06}, {'diff': 8.111000000532442e-06}, {'diff': 8.16600000064227e-06}, {'diff': 7.5700000001788226e-06}, {'diff': 6.153000000175268e-06}, {...</msg>
<status status="PASS" starttime="20201029 18:15:40.240" endtime="20201029 18:15:40.244"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:15:40.248" level="INFO">${GPIO_OVERHEAD} = {'diff': [7.902000000115095e-06, 8.861000000415231e-06, 8.111000000532442e-06, 8.16600000064227e-06, 7.5700000001788226e-06, 6.153000000175268e-06, 9.70800000033023e-06, 1.0500000000135401e-05, 6.6389...</msg>
<status status="PASS" starttime="20201029 18:15:40.245" endtime="20201029 18:15:40.249"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:40.253" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:15:40.252" endtime="20201029 18:15:40.253"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:40.255" level="INFO">VALUE: [7.902000000115095e-06, 8.861000000415231e-06, 8.111000000532442e-06, 8.16600000064227e-06, 7.5700000001788226e-06, 6.153000000175268e-06, 9.70800000033023e-06, 1.0500000000135401e-05, 6.638999999530881e-06, 9.499999999995623e-06, 9.041000000209465e-06, 1.1778000000184363e-05, 7.583000000366269e-06, 8.223000000029401e-06, 1.065300000036018e-05, 7.651999998969927e-06, 6.777999999485473e-06, 6.4029999986559005e-06, 1.090299999972899e-05, 6.875000000405862e-06, 9.736000000870604e-06, 9.694000000948222e-06, 6.29100000004712e-06, 1.0665999999659448e-05, 1.0528000000675775e-05, 1.1125000000333785e-05, 8.041000000957865e-06, 1.0542000000057783e-05, 7.930000000655468e-06, 8.13899999840828e-06, 9.306000000819381e-06, 6.9450000008686175e-06, 8.721999998684282e-06, 8.305000001485041e-06, 7.48599999944588e-06, 1.0264000000148599e-05, 1.0235999999608225e-05, 9.778000000792986e-06, 7.667000000211033e-06, 7.486000001222237e-06, 9.874999999937017e-06, 8.693999999920266e-06, 7.916999999579843e-06, 1.1138999999715793e-05, 8.167000000725011e-06, 7.3329999992211015e-06, 7.3890000003018486e-06, 9.499999999107445e-06, 1.0542000000057783e-05, 9.820000000715368e-06, 8.499999999855845e-06, 9.32000000020139e-06, 8.194999999489028e-06, 8.403000000711813e-06, 6.166999998669098e-06, 1.258400000025972e-05, 1.2027999998664995e-05, 6.026999999519944e-06, 9.638999999950215e-06, 8.098000000344996e-06, 9.08299999835549e-06, 9.000000000369823e-06, 7.987000000042599e-06, 7.77800000051343e-06]</msg>
<status status="PASS" starttime="20201029 18:15:40.254" endtime="20201029 18:15:40.256"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:40.249" endtime="20201029 18:15:40.256"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:39.881" endtime="20201029 18:15:40.257"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:39.881" endtime="20201029 18:15:40.257"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:40.265" endtime="20201029 18:15:40.275"></status>
</kw>
<msg timestamp="20201029 18:15:40.276" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:40.264" endtime="20201029 18:15:40.276"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:40.278" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:40.277" endtime="20201029 18:15:40.279"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:40.279" endtime="20201029 18:15:40.281"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:40.261" endtime="20201029 18:15:40.282"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:40.259" endtime="20201029 18:15:40.282"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:40.288" endtime="20201029 18:15:40.602"></status>
</kw>
<msg timestamp="20201029 18:15:40.606" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.304949014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.304960139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:40.287" endtime="20201029 18:15:40.606"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:40.615" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.304949014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.304960139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:40.607" endtime="20201029 18:15:40.616"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:40.617" endtime="20201029 18:15:40.618"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:40.284" endtime="20201029 18:15:40.619"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:40.283" endtime="20201029 18:15:40.619"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:40.624" level="INFO">${RESULT} = [{'diff': 1.1125000000333785e-05}, {'diff': 8.041000000957865e-06}, {'diff': 1.0542000000057783e-05}, {'diff': 7.930000000655468e-06}, {'diff': 8.13899999840828e-06}, {'diff': 9.306000000819381e-06}, ...</msg>
<status status="PASS" starttime="20201029 18:15:40.620" endtime="20201029 18:15:40.624"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:15:40.629" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.1125000000333785e-05, 8.041000000957865e-06, 1.0542000000057783e-05, 7.930000000655468e-06, 8.13899999840828e-06, 9.306000000819381e-06, 6.9450000008686175e-06, 8.721999998684282e-06, 8.30...</msg>
<status status="PASS" starttime="20201029 18:15:40.625" endtime="20201029 18:15:40.629"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:40.634" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:15:40.632" endtime="20201029 18:15:40.634"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:40.636" level="INFO">VALUE: [1.1125000000333785e-05, 8.041000000957865e-06, 1.0542000000057783e-05, 7.930000000655468e-06, 8.13899999840828e-06, 9.306000000819381e-06, 6.9450000008686175e-06, 8.721999998684282e-06, 8.305000001485041e-06, 7.48599999944588e-06, 1.0264000000148599e-05, 1.0235999999608225e-05, 9.778000000792986e-06, 7.667000000211033e-06, 7.486000001222237e-06, 9.874999999937017e-06, 8.693999999920266e-06, 7.916999999579843e-06, 1.1138999999715793e-05, 8.167000000725011e-06, 7.3329999992211015e-06, 7.3890000003018486e-06, 9.499999999107445e-06, 1.0542000000057783e-05, 9.820000000715368e-06, 8.499999999855845e-06, 9.32000000020139e-06, 8.194999999489028e-06, 8.403000000711813e-06, 6.166999998669098e-06, 1.258400000025972e-05, 1.2027999998664995e-05, 6.026999999519944e-06, 9.638999999950215e-06, 8.098000000344996e-06, 9.08299999835549e-06, 9.000000000369823e-06, 7.987000000042599e-06, 7.77800000051343e-06, 8.459000000016204e-06, 6.959000000250626e-06, 9.402999999963413e-06, 9.402999999963413e-06, 1.1014000000031388e-05, 6.987000000790999e-06, 1.0194999999768584e-05, 9.389000000581404e-06, 1.1959000000061337e-05, 8.735999999842647e-06, 1.204099999974062e-05, 9.70900000041297e-06, 1.1083000000411403e-05, 1.1070000001112135e-05, 9.388999998805048e-06, 7.569999999290644e-06, 5.651999998690371e-06, 7.791000001589055e-06, 8.695000000003006e-06, 1.0346999999910622e-05, 8.847999998451428e-06, 8.985999999211458e-06, 8.999999998593466e-06, 9.264000000897e-06, 7.846999999117088e-06]</msg>
<status status="PASS" starttime="20201029 18:15:40.635" endtime="20201029 18:15:40.636"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:40.630" endtime="20201029 18:15:40.637"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:40.258" endtime="20201029 18:15:40.637"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:40.257" endtime="20201029 18:15:40.638"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:40.645" endtime="20201029 18:15:40.657"></status>
</kw>
<msg timestamp="20201029 18:15:40.657" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:40.644" endtime="20201029 18:15:40.657"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:40.660" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:40.658" endtime="20201029 18:15:40.660"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:40.661" endtime="20201029 18:15:40.662"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:40.641" endtime="20201029 18:15:40.663"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:40.639" endtime="20201029 18:15:40.663"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:40.670" endtime="20201029 18:15:40.984"></status>
</kw>
<msg timestamp="20201029 18:15:40.988" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.675344278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.675352778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:40.668" endtime="20201029 18:15:40.988"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:40.998" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.675344278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.675352778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:40.989" endtime="20201029 18:15:40.998"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:40.999" endtime="20201029 18:15:41.001"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:40.666" endtime="20201029 18:15:41.001"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:40.664" endtime="20201029 18:15:41.002"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:41.006" level="INFO">${RESULT} = [{'diff': 8.499999999855845e-06}, {'diff': 9.32000000020139e-06}, {'diff': 8.194999999489028e-06}, {'diff': 8.403000000711813e-06}, {'diff': 6.166999998669098e-06}, {'diff': 1.258400000025972e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:15:41.002" endtime="20201029 18:15:41.006"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:15:41.012" level="INFO">${GPIO_OVERHEAD} = {'diff': [8.499999999855845e-06, 9.32000000020139e-06, 8.194999999489028e-06, 8.403000000711813e-06, 6.166999998669098e-06, 1.258400000025972e-05, 1.2027999998664995e-05, 6.026999999519944e-06, 9.6389...</msg>
<status status="PASS" starttime="20201029 18:15:41.007" endtime="20201029 18:15:41.012"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:41.016" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:15:41.015" endtime="20201029 18:15:41.017"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:41.019" level="INFO">VALUE: [8.499999999855845e-06, 9.32000000020139e-06, 8.194999999489028e-06, 8.403000000711813e-06, 6.166999998669098e-06, 1.258400000025972e-05, 1.2027999998664995e-05, 6.026999999519944e-06, 9.638999999950215e-06, 8.098000000344996e-06, 9.08299999835549e-06, 9.000000000369823e-06, 7.987000000042599e-06, 7.77800000051343e-06, 8.459000000016204e-06, 6.959000000250626e-06, 9.402999999963413e-06, 9.402999999963413e-06, 1.1014000000031388e-05, 6.987000000790999e-06, 1.0194999999768584e-05, 9.389000000581404e-06, 1.1959000000061337e-05, 8.735999999842647e-06, 1.204099999974062e-05, 9.70900000041297e-06, 1.1083000000411403e-05, 1.1070000001112135e-05, 9.388999998805048e-06, 7.569999999290644e-06, 5.651999998690371e-06, 7.791000001589055e-06, 8.695000000003006e-06, 1.0346999999910622e-05, 8.847999998451428e-06, 8.985999999211458e-06, 8.999999998593466e-06, 9.264000000897e-06, 7.846999999117088e-06, 1.0346999999910622e-05, 8.568999998459503e-06, 6.972000001326251e-06, 7.957999999419485e-06, 1.0361000001068987e-05, 8.818999999604671e-06, 6.194000000903088e-06, 9.180000001052235e-06, 6.403000000432257e-06, 9.693999999171865e-06, 8.138000000101897e-06, 6.776999999402733e-06, 7.4439999995234984e-06, 9.888999999319026e-06, 7.6110000009066425e-06, 7.749999999973056e-06, 7.5549999998258954e-06, 1.0611000000437798e-05, 7.805999999277446e-06, 9.194000000434244e-06, 9.70900000041297e-06, 7.096999999234299e-06, 6.2080000002850966e-06, 9.790999998315897e-06, 8.695000000003006e-06]</msg>
<status status="PASS" starttime="20201029 18:15:41.017" endtime="20201029 18:15:41.019"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:41.013" endtime="20201029 18:15:41.020"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:40.638" endtime="20201029 18:15:41.020"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:40.638" endtime="20201029 18:15:41.021"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:41.028" endtime="20201029 18:15:41.041"></status>
</kw>
<msg timestamp="20201029 18:15:41.041" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:41.027" endtime="20201029 18:15:41.041"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:41.044" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:41.042" endtime="20201029 18:15:41.044"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:41.045" endtime="20201029 18:15:41.046"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:41.024" endtime="20201029 18:15:41.047"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:41.023" endtime="20201029 18:15:41.047"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:41.055" endtime="20201029 18:15:41.367"></status>
</kw>
<msg timestamp="20201029 18:15:41.370" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 9.042607597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 9.042617306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:41.053" endtime="20201029 18:15:41.371"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:41.380" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 9.042607597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 9.042617306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:41.371" endtime="20201029 18:15:41.381"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:41.381" endtime="20201029 18:15:41.383"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:41.049" endtime="20201029 18:15:41.384"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:41.048" endtime="20201029 18:15:41.384"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:41.388" level="INFO">${RESULT} = [{'diff': 9.70900000041297e-06}, {'diff': 1.1083000000411403e-05}, {'diff': 1.1070000001112135e-05}, {'diff': 9.388999998805048e-06}, {'diff': 7.569999999290644e-06}, {'diff': 5.651999998690371e-06}, ...</msg>
<status status="PASS" starttime="20201029 18:15:41.385" endtime="20201029 18:15:41.388"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:15:41.393" level="INFO">${GPIO_OVERHEAD} = {'diff': [9.70900000041297e-06, 1.1083000000411403e-05, 1.1070000001112135e-05, 9.388999998805048e-06, 7.569999999290644e-06, 5.651999998690371e-06, 7.791000001589055e-06, 8.695000000003006e-06, 1.034...</msg>
<status status="PASS" starttime="20201029 18:15:41.389" endtime="20201029 18:15:41.393"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:41.397" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:15:41.396" endtime="20201029 18:15:41.398"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:41.401" level="INFO">VALUE: [9.70900000041297e-06, 1.1083000000411403e-05, 1.1070000001112135e-05, 9.388999998805048e-06, 7.569999999290644e-06, 5.651999998690371e-06, 7.791000001589055e-06, 8.695000000003006e-06, 1.0346999999910622e-05, 8.847999998451428e-06, 8.985999999211458e-06, 8.999999998593466e-06, 9.264000000897e-06, 7.846999999117088e-06, 1.0346999999910622e-05, 8.568999998459503e-06, 6.972000001326251e-06, 7.957999999419485e-06, 1.0361000001068987e-05, 8.818999999604671e-06, 6.194000000903088e-06, 9.180000001052235e-06, 6.403000000432257e-06, 9.693999999171865e-06, 8.138000000101897e-06, 6.776999999402733e-06, 7.4439999995234984e-06, 9.888999999319026e-06, 7.6110000009066425e-06, 7.749999999973056e-06, 7.5549999998258954e-06, 1.0611000000437798e-05, 7.805999999277446e-06, 9.194000000434244e-06, 9.70900000041297e-06, 7.096999999234299e-06, 6.2080000002850966e-06, 9.790999998315897e-06, 8.695000000003006e-06, 1.1290999999857831e-05, 1.059700000105579e-05, 6.9580000001678854e-06, 1.0611000000437798e-05, 9.86200000063775e-06, 1.1861000000834565e-05, 1.1193999998937443e-05, 8.374999998395083e-06, 8.875000000685418e-06, 5.9860000014566594e-06, 8.31900000086705e-06, 8.417000000093822e-06, 1.0028000000161796e-05, 9.527999999647818e-06, 9.472000000343428e-06, 9.556000000188192e-06, 6.597999998803061e-06, 8.041000000957865e-06, 7.513999999986254e-06, 8.639000000698616e-06, 7.165999999614314e-06, 8.444000000551455e-06, 9.485999999725436e-06, 7.625000000288651e-06, 9.402999999963413e-06]</msg>
<status status="PASS" starttime="20201029 18:15:41.399" endtime="20201029 18:15:41.401"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:41.394" endtime="20201029 18:15:41.402"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:41.021" endtime="20201029 18:15:41.402"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:41.021" endtime="20201029 18:15:41.402"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:41.410" endtime="20201029 18:15:41.421"></status>
</kw>
<msg timestamp="20201029 18:15:41.422" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:41.408" endtime="20201029 18:15:41.422"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:41.424" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:41.423" endtime="20201029 18:15:41.424"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:41.425" endtime="20201029 18:15:41.427"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:41.406" endtime="20201029 18:15:41.427"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:41.404" endtime="20201029 18:15:41.428"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:41.434" endtime="20201029 18:15:41.743"></status>
</kw>
<msg timestamp="20201029 18:15:41.747" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 9.413557792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 9.413564569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:41.433" endtime="20201029 18:15:41.747"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:41.756" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 9.413557792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 9.413564569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:41.748" endtime="20201029 18:15:41.757"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:41.758" endtime="20201029 18:15:41.759"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:41.430" endtime="20201029 18:15:41.760"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:41.428" endtime="20201029 18:15:41.760"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:41.764" level="INFO">${RESULT} = [{'diff': 6.776999999402733e-06}, {'diff': 7.4439999995234984e-06}, {'diff': 9.888999999319026e-06}, {'diff': 7.6110000009066425e-06}, {'diff': 7.749999999973056e-06}, {'diff': 7.5549999998258954e-06}...</msg>
<status status="PASS" starttime="20201029 18:15:41.761" endtime="20201029 18:15:41.765"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:15:41.770" level="INFO">${GPIO_OVERHEAD} = {'diff': [6.776999999402733e-06, 7.4439999995234984e-06, 9.888999999319026e-06, 7.6110000009066425e-06, 7.749999999973056e-06, 7.5549999998258954e-06, 1.0611000000437798e-05, 7.805999999277446e-06, 9....</msg>
<status status="PASS" starttime="20201029 18:15:41.765" endtime="20201029 18:15:41.770"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:41.774" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:15:41.773" endtime="20201029 18:15:41.775"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:41.777" level="INFO">VALUE: [6.776999999402733e-06, 7.4439999995234984e-06, 9.888999999319026e-06, 7.6110000009066425e-06, 7.749999999973056e-06, 7.5549999998258954e-06, 1.0611000000437798e-05, 7.805999999277446e-06, 9.194000000434244e-06, 9.70900000041297e-06, 7.096999999234299e-06, 6.2080000002850966e-06, 9.790999998315897e-06, 8.695000000003006e-06, 1.1290999999857831e-05, 1.059700000105579e-05, 6.9580000001678854e-06, 1.0611000000437798e-05, 9.86200000063775e-06, 1.1861000000834565e-05, 1.1193999998937443e-05, 8.374999998395083e-06, 8.875000000685418e-06, 5.9860000014566594e-06, 8.31900000086705e-06, 8.417000000093822e-06, 1.0028000000161796e-05, 9.527999999647818e-06, 9.472000000343428e-06, 9.556000000188192e-06, 6.597999998803061e-06, 8.041000000957865e-06, 7.513999999986254e-06, 8.639000000698616e-06, 7.165999999614314e-06, 8.444000000551455e-06, 9.485999999725436e-06, 7.625000000288651e-06, 9.402999999963413e-06, 5.819000000073515e-06, 7.318999999839093e-06, 1.0958000000726997e-05, 7.194000000154688e-06, 7.930000000655468e-06, 8.944999999371817e-06, 8.721999998684282e-06, 1.0180000000303835e-05, 8.31900000086705e-06, 9.055999999674214e-06, 1.1860999999058208e-05, 1.100000000064938e-05, 8.707999999302274e-06, 7.916999999579843e-06, 7.929999998879111e-06, 9.069000000749838e-06, 9.999999999621423e-06, 8.735999999842647e-06, 9.096999999513855e-06, 6.499999999576289e-06, 7.555000001602252e-06, 9.236000000356626e-06, 7.930999998961852e-06, 8.750000001001013e-06, 7.916999999579843e-06]</msg>
<status status="PASS" starttime="20201029 18:15:41.775" endtime="20201029 18:15:41.777"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:41.771" endtime="20201029 18:15:41.778"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:41.403" endtime="20201029 18:15:41.778"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:41.403" endtime="20201029 18:15:41.778"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:41.786" endtime="20201029 18:15:41.798"></status>
</kw>
<msg timestamp="20201029 18:15:41.798" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:41.785" endtime="20201029 18:15:41.799"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:41.801" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:41.799" endtime="20201029 18:15:41.801"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:41.802" endtime="20201029 18:15:41.804"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:41.782" endtime="20201029 18:15:41.804"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:41.780" endtime="20201029 18:15:41.805"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:41.811" endtime="20201029 18:15:42.121"></status>
</kw>
<msg timestamp="20201029 18:15:42.125" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 9.788172486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 9.788180903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:41.809" endtime="20201029 18:15:42.125"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:42.135" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 9.788172486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 9.788180903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:42.126" endtime="20201029 18:15:42.135"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:42.136" endtime="20201029 18:15:42.138"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:41.807" endtime="20201029 18:15:42.138"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:41.805" endtime="20201029 18:15:42.139"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:42.143" level="INFO">${RESULT} = [{'diff': 8.417000000093822e-06}, {'diff': 1.0028000000161796e-05}, {'diff': 9.527999999647818e-06}, {'diff': 9.472000000343428e-06}, {'diff': 9.556000000188192e-06}, {'diff': 6.597999998803061e-06}, ...</msg>
<status status="PASS" starttime="20201029 18:15:42.140" endtime="20201029 18:15:42.143"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:15:42.148" level="INFO">${GPIO_OVERHEAD} = {'diff': [8.417000000093822e-06, 1.0028000000161796e-05, 9.527999999647818e-06, 9.472000000343428e-06, 9.556000000188192e-06, 6.597999998803061e-06, 8.041000000957865e-06, 7.513999999986254e-06, 8.639...</msg>
<status status="PASS" starttime="20201029 18:15:42.144" endtime="20201029 18:15:42.148"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:42.152" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:15:42.151" endtime="20201029 18:15:42.153"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:42.155" level="INFO">VALUE: [8.417000000093822e-06, 1.0028000000161796e-05, 9.527999999647818e-06, 9.472000000343428e-06, 9.556000000188192e-06, 6.597999998803061e-06, 8.041000000957865e-06, 7.513999999986254e-06, 8.639000000698616e-06, 7.165999999614314e-06, 8.444000000551455e-06, 9.485999999725436e-06, 7.625000000288651e-06, 9.402999999963413e-06, 5.819000000073515e-06, 7.318999999839093e-06, 1.0958000000726997e-05, 7.194000000154688e-06, 7.930000000655468e-06, 8.944999999371817e-06, 8.721999998684282e-06, 1.0180000000303835e-05, 8.31900000086705e-06, 9.055999999674214e-06, 1.1860999999058208e-05, 1.100000000064938e-05, 8.707999999302274e-06, 7.916999999579843e-06, 7.929999998879111e-06, 9.069000000749838e-06, 9.999999999621423e-06, 8.735999999842647e-06, 9.096999999513855e-06, 6.499999999576289e-06, 7.555000001602252e-06, 9.236000000356626e-06, 7.930999998961852e-06, 8.750000001001013e-06, 7.916999999579843e-06, 1.2264000000428155e-05, 8.37500000017144e-06, 7.2089999996194365e-06, 9.27699999841991e-06, 8.056000000422614e-06, 7.223000000777802e-06, 5.957999999139929e-06, 1.1068999999253037e-05, 1.0500000000135401e-05, 8.56900000023586e-06, 9.11100000067222e-06, 6.9160000002455035e-06, 8.874999998909061e-06, 9.236000000356626e-06, 9.999999999621423e-06, 9.22199999919826e-06, 8.401999998852716e-06, 8.860999999527053e-06, 8.62499999954025e-06, 8.818999999604671e-06, 7.124999999774673e-06, 1.2472999999957324e-05, 7.749999999973056e-06, 9.125000000054229e-06, 8.041000000957865e-06]</msg>
<status status="PASS" starttime="20201029 18:15:42.154" endtime="20201029 18:15:42.155"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.149" endtime="20201029 18:15:42.156"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:41.779" endtime="20201029 18:15:42.156"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:41.779" endtime="20201029 18:15:42.157"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:42.165" endtime="20201029 18:15:42.176"></status>
</kw>
<msg timestamp="20201029 18:15:42.176" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:42.163" endtime="20201029 18:15:42.176"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:42.178" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:42.177" endtime="20201029 18:15:42.179"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:42.179" endtime="20201029 18:15:42.181"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.160" endtime="20201029 18:15:42.182"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.158" endtime="20201029 18:15:42.182"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:42.189" endtime="20201029 18:15:42.503"></status>
</kw>
<msg timestamp="20201029 18:15:42.507" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 10.159091, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 10.159102, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201029 18:15:42.187" endtime="20201029 18:15:42.507"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:42.517" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 10.159091, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 10.159102, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201029 18:15:42.508" endtime="20201029 18:15:42.517"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:42.518" endtime="20201029 18:15:42.520"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.184" endtime="20201029 18:15:42.520"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.183" endtime="20201029 18:15:42.520"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:42.525" level="INFO">${RESULT} = [{'diff': 1.100000000064938e-05}, {'diff': 8.707999999302274e-06}, {'diff': 7.916999999579843e-06}, {'diff': 7.929999998879111e-06}, {'diff': 9.069000000749838e-06}, {'diff': 9.999999999621423e-06}, {...</msg>
<status status="PASS" starttime="20201029 18:15:42.521" endtime="20201029 18:15:42.525"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:15:42.530" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.100000000064938e-05, 8.707999999302274e-06, 7.916999999579843e-06, 7.929999998879111e-06, 9.069000000749838e-06, 9.999999999621423e-06, 8.735999999842647e-06, 9.096999999513855e-06, 6.4999...</msg>
<status status="PASS" starttime="20201029 18:15:42.526" endtime="20201029 18:15:42.531"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:42.535" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:15:42.534" endtime="20201029 18:15:42.535"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:42.537" level="INFO">VALUE: [1.100000000064938e-05, 8.707999999302274e-06, 7.916999999579843e-06, 7.929999998879111e-06, 9.069000000749838e-06, 9.999999999621423e-06, 8.735999999842647e-06, 9.096999999513855e-06, 6.499999999576289e-06, 7.555000001602252e-06, 9.236000000356626e-06, 7.930999998961852e-06, 8.750000001001013e-06, 7.916999999579843e-06, 1.2264000000428155e-05, 8.37500000017144e-06, 7.2089999996194365e-06, 9.27699999841991e-06, 8.056000000422614e-06, 7.223000000777802e-06, 5.957999999139929e-06, 1.1068999999253037e-05, 1.0500000000135401e-05, 8.56900000023586e-06, 9.11100000067222e-06, 6.9160000002455035e-06, 8.874999998909061e-06, 9.236000000356626e-06, 9.999999999621423e-06, 9.22199999919826e-06, 8.401999998852716e-06, 8.860999999527053e-06, 8.62499999954025e-06, 8.818999999604671e-06, 7.124999999774673e-06, 1.2472999999957324e-05, 7.749999999973056e-06, 9.125000000054229e-06, 8.041000000957865e-06, 9.944000000317033e-06, 9.819000000632627e-06, 1.0764000000662577e-05, 7.527999999368262e-06, 7.569000000984261e-06, 9.361000000041031e-06, 1.0264000000148599e-05, 1.1069000001029394e-05, 1.1124999998557428e-05, 8.221999999946661e-06, 6.708000000799075e-06, 8.56900000023586e-06, 7.195000000237428e-06, 7.77700000043069e-06, 1.0722000000740195e-05, 1.0973000000191746e-05, 7.111000000392664e-06, 1.1945000000679329e-05, 9.583000000645825e-06, 7.070000000553023e-06, 1.0471999999595027e-05, 8.445000000634195e-06, 1.0264000000148599e-05, 7.29199999938146e-06, 7.098000001093396e-06]</msg>
<status status="PASS" starttime="20201029 18:15:42.536" endtime="20201029 18:15:42.538"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.531" endtime="20201029 18:15:42.538"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.157" endtime="20201029 18:15:42.539"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.157" endtime="20201029 18:15:42.539"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:42.547" endtime="20201029 18:15:42.558"></status>
</kw>
<msg timestamp="20201029 18:15:42.558" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:42.545" endtime="20201029 18:15:42.558"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:42.560" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:42.559" endtime="20201029 18:15:42.561"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:42.562" endtime="20201029 18:15:42.563"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.543" endtime="20201029 18:15:42.564"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.541" endtime="20201029 18:15:42.564"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:42.570" endtime="20201029 18:15:42.882"></status>
</kw>
<msg timestamp="20201029 18:15:42.886" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 10.526541778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 10.526548694, 'source': 'DUT_IC', 'event': 'F...</msg>
<status status="PASS" starttime="20201029 18:15:42.569" endtime="20201029 18:15:42.886"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:42.896" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 10.526541778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 10.526548694, 'source': 'DUT_IC', 'event': 'F...</msg>
<status status="PASS" starttime="20201029 18:15:42.887" endtime="20201029 18:15:42.896"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:42.897" endtime="20201029 18:15:42.898"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.566" endtime="20201029 18:15:42.899"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.565" endtime="20201029 18:15:42.899"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:42.904" level="INFO">${RESULT} = [{'diff': 6.9160000002455035e-06}, {'diff': 8.874999998909061e-06}, {'diff': 9.236000000356626e-06}, {'diff': 9.999999999621423e-06}, {'diff': 9.22199999919826e-06}, {'diff': 8.401999998852716e-06}, {...</msg>
<status status="PASS" starttime="20201029 18:15:42.900" endtime="20201029 18:15:42.904"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:15:42.909" level="INFO">${GPIO_OVERHEAD} = {'diff': [6.9160000002455035e-06, 8.874999998909061e-06, 9.236000000356626e-06, 9.999999999621423e-06, 9.22199999919826e-06, 8.401999998852716e-06, 8.860999999527053e-06, 8.62499999954025e-06, 8.81899...</msg>
<status status="PASS" starttime="20201029 18:15:42.905" endtime="20201029 18:15:42.910"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:42.914" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:15:42.913" endtime="20201029 18:15:42.914"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:42.917" level="INFO">VALUE: [6.9160000002455035e-06, 8.874999998909061e-06, 9.236000000356626e-06, 9.999999999621423e-06, 9.22199999919826e-06, 8.401999998852716e-06, 8.860999999527053e-06, 8.62499999954025e-06, 8.818999999604671e-06, 7.124999999774673e-06, 1.2472999999957324e-05, 7.749999999973056e-06, 9.125000000054229e-06, 8.041000000957865e-06, 9.944000000317033e-06, 9.819000000632627e-06, 1.0764000000662577e-05, 7.527999999368262e-06, 7.569000000984261e-06, 9.361000000041031e-06, 1.0264000000148599e-05, 1.1069000001029394e-05, 1.1124999998557428e-05, 8.221999999946661e-06, 6.708000000799075e-06, 8.56900000023586e-06, 7.195000000237428e-06, 7.77700000043069e-06, 1.0722000000740195e-05, 1.0973000000191746e-05, 7.111000000392664e-06, 1.1945000000679329e-05, 9.583000000645825e-06, 7.070000000553023e-06, 1.0471999999595027e-05, 8.445000000634195e-06, 1.0264000000148599e-05, 7.29199999938146e-06, 7.098000001093396e-06, 8.860999999527053e-06, 9.610999999409842e-06, 1.2166999999507766e-05, 5.333999999024286e-06, 8.944999999371817e-06, 9.874999999937017e-06, 9.11200000075496e-06, 9.888999999319026e-06, 1.0014000000779788e-05, 8.735999999842647e-06, 1.011099999992382e-05, 6.707999999022718e-06, 1.1665999998911047e-05, 1.1486000000004992e-05, 7.638000001364276e-06, 6.610999999878686e-06, 1.0319000001146605e-05, 7.861000000275453e-06, 6.777999999485473e-06, 9.361000000041031e-06, 1.1665999998911047e-05, 5.959000000999026e-06, 1.016699999922821e-05, 9.22199999919826e-06, 1.1084000000494143e-05]</msg>
<status status="PASS" starttime="20201029 18:15:42.915" endtime="20201029 18:15:42.917"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.911" endtime="20201029 18:15:42.917"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.540" endtime="20201029 18:15:42.918"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.539" endtime="20201029 18:15:42.918"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:42.926" endtime="20201029 18:15:42.937"></status>
</kw>
<msg timestamp="20201029 18:15:42.938" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:42.924" endtime="20201029 18:15:42.938"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:42.940" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:42.939" endtime="20201029 18:15:42.940"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:42.941" endtime="20201029 18:15:42.943"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.922" endtime="20201029 18:15:42.943"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.920" endtime="20201029 18:15:42.944"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:42.950" endtime="20201029 18:15:43.267"></status>
</kw>
<msg timestamp="20201029 18:15:43.271" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 10.895200653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 10.895209222, 'source': 'DUT_IC', 'event': 'F...</msg>
<status status="PASS" starttime="20201029 18:15:42.949" endtime="20201029 18:15:43.272"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:43.281" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 10.895200653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 10.895209222, 'source': 'DUT_IC', 'event': 'F...</msg>
<status status="PASS" starttime="20201029 18:15:43.272" endtime="20201029 18:15:43.282"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:43.282" endtime="20201029 18:15:43.284"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.946" endtime="20201029 18:15:43.285"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.944" endtime="20201029 18:15:43.285"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:43.289" level="INFO">${RESULT} = [{'diff': 8.56900000023586e-06}, {'diff': 7.195000000237428e-06}, {'diff': 7.77700000043069e-06}, {'diff': 1.0722000000740195e-05}, {'diff': 1.0973000000191746e-05}, {'diff': 7.111000000392664e-06}, {...</msg>
<status status="PASS" starttime="20201029 18:15:43.286" endtime="20201029 18:15:43.289"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:15:43.294" level="INFO">${GPIO_OVERHEAD} = {'diff': [8.56900000023586e-06, 7.195000000237428e-06, 7.77700000043069e-06, 1.0722000000740195e-05, 1.0973000000191746e-05, 7.111000000392664e-06, 1.1945000000679329e-05, 9.583000000645825e-06, 7.070...</msg>
<status status="PASS" starttime="20201029 18:15:43.290" endtime="20201029 18:15:43.294"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:43.299" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:15:43.298" endtime="20201029 18:15:43.299"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:43.301" level="INFO">VALUE: [8.56900000023586e-06, 7.195000000237428e-06, 7.77700000043069e-06, 1.0722000000740195e-05, 1.0973000000191746e-05, 7.111000000392664e-06, 1.1945000000679329e-05, 9.583000000645825e-06, 7.070000000553023e-06, 1.0471999999595027e-05, 8.445000000634195e-06, 1.0264000000148599e-05, 7.29199999938146e-06, 7.098000001093396e-06, 8.860999999527053e-06, 9.610999999409842e-06, 1.2166999999507766e-05, 5.333999999024286e-06, 8.944999999371817e-06, 9.874999999937017e-06, 9.11200000075496e-06, 9.888999999319026e-06, 1.0014000000779788e-05, 8.735999999842647e-06, 1.011099999992382e-05, 6.707999999022718e-06, 1.1665999998911047e-05, 1.1486000000004992e-05, 7.638000001364276e-06, 6.610999999878686e-06, 1.0319000001146605e-05, 7.861000000275453e-06, 6.777999999485473e-06, 9.361000000041031e-06, 1.1665999998911047e-05, 5.959000000999026e-06, 1.016699999922821e-05, 9.22199999919826e-06, 1.1084000000494143e-05, 7.555999999908636e-06, 7.5420000005266274e-06, 9.041999998515848e-06, 7.805999999277446e-06, 6.9580000001678854e-06, 7.48599999944588e-06, 7.708000000050674e-06, 6.486000000194281e-06, 1.0818999999884227e-05, 1.0471999999595027e-05, 6.305999999511869e-06, 7.69499999897505e-06, 8.985999999211458e-06, 7.416999999065865e-06, 6.194000000903088e-06, 1.0236000001384582e-05, 9.749999998476255e-06, 7.555999999908636e-06, 7.709000000133415e-06, 1.0416000000290637e-05, 6.805000001719463e-06, 1.0361000001068987e-05, 6.068999999442326e-06, 8.262999999786302e-06, 7.262999998758346e-06]</msg>
<status status="PASS" starttime="20201029 18:15:43.300" endtime="20201029 18:15:43.302"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:43.295" endtime="20201029 18:15:43.302"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.919" endtime="20201029 18:15:43.303"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.918" endtime="20201029 18:15:43.303"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:43.311" endtime="20201029 18:15:43.323"></status>
</kw>
<msg timestamp="20201029 18:15:43.323" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:43.309" endtime="20201029 18:15:43.324"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:43.326" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:43.324" endtime="20201029 18:15:43.326"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:43.327" endtime="20201029 18:15:43.328"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:43.306" endtime="20201029 18:15:43.329"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:43.305" endtime="20201029 18:15:43.329"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:43.336" endtime="20201029 18:15:43.651"></status>
</kw>
<msg timestamp="20201029 18:15:43.655" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 11.2657895, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 11.265796208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:43.334" endtime="20201029 18:15:43.655"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:43.664" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 11.2657895, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 11.265796208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:43.656" endtime="20201029 18:15:43.665"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:43.666" endtime="20201029 18:15:43.667"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:43.332" endtime="20201029 18:15:43.668"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:43.330" endtime="20201029 18:15:43.668"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:43.673" level="INFO">${RESULT} = [{'diff': 6.707999999022718e-06}, {'diff': 1.1665999998911047e-05}, {'diff': 1.1486000000004992e-05}, {'diff': 7.638000001364276e-06}, {'diff': 6.610999999878686e-06}, {'diff': 1.0319000001146605e-05}...</msg>
<status status="PASS" starttime="20201029 18:15:43.669" endtime="20201029 18:15:43.673"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:15:43.678" level="INFO">${GPIO_OVERHEAD} = {'diff': [6.707999999022718e-06, 1.1665999998911047e-05, 1.1486000000004992e-05, 7.638000001364276e-06, 6.610999999878686e-06, 1.0319000001146605e-05, 7.861000000275453e-06, 6.777999999485473e-06, 9.3...</msg>
<status status="PASS" starttime="20201029 18:15:43.674" endtime="20201029 18:15:43.678"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:43.682" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:15:43.681" endtime="20201029 18:15:43.683"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:43.685" level="INFO">VALUE: [6.707999999022718e-06, 1.1665999998911047e-05, 1.1486000000004992e-05, 7.638000001364276e-06, 6.610999999878686e-06, 1.0319000001146605e-05, 7.861000000275453e-06, 6.777999999485473e-06, 9.361000000041031e-06, 1.1665999998911047e-05, 5.959000000999026e-06, 1.016699999922821e-05, 9.22199999919826e-06, 1.1084000000494143e-05, 7.555999999908636e-06, 7.5420000005266274e-06, 9.041999998515848e-06, 7.805999999277446e-06, 6.9580000001678854e-06, 7.48599999944588e-06, 7.708000000050674e-06, 6.486000000194281e-06, 1.0818999999884227e-05, 1.0471999999595027e-05, 6.305999999511869e-06, 7.69499999897505e-06, 8.985999999211458e-06, 7.416999999065865e-06, 6.194000000903088e-06, 1.0236000001384582e-05, 9.749999998476255e-06, 7.555999999908636e-06, 7.709000000133415e-06, 1.0416000000290637e-05, 6.805000001719463e-06, 1.0361000001068987e-05, 6.068999999442326e-06, 8.262999999786302e-06, 7.262999998758346e-06, 9.833000000014636e-06, 6.791000000561098e-06, 8.528000000396219e-06, 1.0500000000135401e-05, 7.0690000004702824e-06, 1.179100000037181e-05, 7.402999999683857e-06, 1.090299999972899e-05, 8.583999999700609e-06, 7.985999999959859e-06, 5.679999999230745e-06, 9.695000001030962e-06, 1.1569000001543372e-05, 9.583000000645825e-06, 9.638999999950215e-06, 8.653000000080624e-06, 8.985999999211458e-06, 1.0041000001237421e-05, 8.70800000107863e-06, 7.555999999908636e-06, 1.025000000076659e-05, 1.244499999941695e-05, 6.125000000523073e-06, 6.499999999576289e-06, 1.0291999998912615e-05]</msg>
<status status="PASS" starttime="20201029 18:15:43.684" endtime="20201029 18:15:43.685"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:43.679" endtime="20201029 18:15:43.686"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:43.303" endtime="20201029 18:15:43.686"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:43.303" endtime="20201029 18:15:43.686"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:43.694" endtime="20201029 18:15:43.704"></status>
</kw>
<msg timestamp="20201029 18:15:43.705" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:43.693" endtime="20201029 18:15:43.705"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:43.707" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:43.706" endtime="20201029 18:15:43.707"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:43.708" endtime="20201029 18:15:43.710"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:43.690" endtime="20201029 18:15:43.710"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:43.688" endtime="20201029 18:15:43.711"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:43.717" endtime="20201029 18:15:44.033"></status>
</kw>
<msg timestamp="20201029 18:15:44.037" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 11.634920361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 11.634928056, 'source': 'DUT_IC', 'event': 'F...</msg>
<status status="PASS" starttime="20201029 18:15:43.716" endtime="20201029 18:15:44.037"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:44.046" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 11.634920361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 11.634928056, 'source': 'DUT_IC', 'event': 'F...</msg>
<status status="PASS" starttime="20201029 18:15:44.038" endtime="20201029 18:15:44.047"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:44.048" endtime="20201029 18:15:44.049"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:43.713" endtime="20201029 18:15:44.050"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:43.711" endtime="20201029 18:15:44.050"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:44.055" level="INFO">${RESULT} = [{'diff': 7.69499999897505e-06}, {'diff': 8.985999999211458e-06}, {'diff': 7.416999999065865e-06}, {'diff': 6.194000000903088e-06}, {'diff': 1.0236000001384582e-05}, {'diff': 9.749999998476255e-06}, {...</msg>
<status status="PASS" starttime="20201029 18:15:44.051" endtime="20201029 18:15:44.056"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:15:44.060" level="INFO">${GPIO_OVERHEAD} = {'diff': [7.69499999897505e-06, 8.985999999211458e-06, 7.416999999065865e-06, 6.194000000903088e-06, 1.0236000001384582e-05, 9.749999998476255e-06, 7.555999999908636e-06, 7.709000000133415e-06, 1.0416...</msg>
<status status="PASS" starttime="20201029 18:15:44.056" endtime="20201029 18:15:44.061"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:44.065" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:15:44.064" endtime="20201029 18:15:44.065"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:44.067" level="INFO">VALUE: [7.69499999897505e-06, 8.985999999211458e-06, 7.416999999065865e-06, 6.194000000903088e-06, 1.0236000001384582e-05, 9.749999998476255e-06, 7.555999999908636e-06, 7.709000000133415e-06, 1.0416000000290637e-05, 6.805000001719463e-06, 1.0361000001068987e-05, 6.068999999442326e-06, 8.262999999786302e-06, 7.262999998758346e-06, 9.833000000014636e-06, 6.791000000561098e-06, 8.528000000396219e-06, 1.0500000000135401e-05, 7.0690000004702824e-06, 1.179100000037181e-05, 7.402999999683857e-06, 1.090299999972899e-05, 8.583999999700609e-06, 7.985999999959859e-06, 5.679999999230745e-06, 9.695000001030962e-06, 1.1569000001543372e-05, 9.583000000645825e-06, 9.638999999950215e-06, 8.653000000080624e-06, 8.985999999211458e-06, 1.0041000001237421e-05, 8.70800000107863e-06, 7.555999999908636e-06, 1.025000000076659e-05, 1.244499999941695e-05, 6.125000000523073e-06, 6.499999999576289e-06, 1.0291999998912615e-05, 7.2219999989187045e-06, 7.3199999999218335e-06, 7.847000000893445e-06, 1.065200000027744e-05, 6.722000000181083e-06, 8.638000000615875e-06, 1.0193999999685843e-05, 8.91600000052506e-06, 8.16600000064227e-06, 9.598000000110574e-06, 9.179999999275879e-06, 9.888999999319026e-06, 1.2153000000125758e-05, 1.159800000039013e-05, 6.7359999995630915e-06, 1.0582999999897424e-05, 1.119500000079654e-05, 8.722000000460639e-06, 8.388999999553448e-06, 8.847000000145044e-06, 1.0069000000001438e-05, 8.653000000080624e-06, 9.778000000792986e-06, 8.292000000409416e-06, 9.929999999158667e-06]</msg>
<status status="PASS" starttime="20201029 18:15:44.066" endtime="20201029 18:15:44.068"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:44.061" endtime="20201029 18:15:44.068"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:43.687" endtime="20201029 18:15:44.069"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:43.687" endtime="20201029 18:15:44.069"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:44.076" endtime="20201029 18:15:44.087"></status>
</kw>
<msg timestamp="20201029 18:15:44.088" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:44.075" endtime="20201029 18:15:44.088"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:44.090" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:44.089" endtime="20201029 18:15:44.091"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:44.092" endtime="20201029 18:15:44.093"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:44.072" endtime="20201029 18:15:44.094"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:44.071" endtime="20201029 18:15:44.094"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:44.101" endtime="20201029 18:15:44.417"></status>
</kw>
<msg timestamp="20201029 18:15:44.421" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 12.011251986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 12.011261681, 'source': 'DUT_IC', 'event': 'F...</msg>
<status status="PASS" starttime="20201029 18:15:44.100" endtime="20201029 18:15:44.421"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:44.430" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 12.011251986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 12.011261681, 'source': 'DUT_IC', 'event': 'F...</msg>
<status status="PASS" starttime="20201029 18:15:44.422" endtime="20201029 18:15:44.431"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:44.432" endtime="20201029 18:15:44.433"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:44.096" endtime="20201029 18:15:44.434"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:44.095" endtime="20201029 18:15:44.434"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:44.438" level="INFO">${RESULT} = [{'diff': 9.695000001030962e-06}, {'diff': 1.1569000001543372e-05}, {'diff': 9.583000000645825e-06}, {'diff': 9.638999999950215e-06}, {'diff': 8.653000000080624e-06}, {'diff': 8.985999999211458e-06}, ...</msg>
<status status="PASS" starttime="20201029 18:15:44.435" endtime="20201029 18:15:44.439"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:15:44.443" level="INFO">${GPIO_OVERHEAD} = {'diff': [9.695000001030962e-06, 1.1569000001543372e-05, 9.583000000645825e-06, 9.638999999950215e-06, 8.653000000080624e-06, 8.985999999211458e-06, 1.0041000001237421e-05, 8.70800000107863e-06, 7.555...</msg>
<status status="PASS" starttime="20201029 18:15:44.439" endtime="20201029 18:15:44.444"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:44.448" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:15:44.447" endtime="20201029 18:15:44.449"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:44.451" level="INFO">VALUE: [9.695000001030962e-06, 1.1569000001543372e-05, 9.583000000645825e-06, 9.638999999950215e-06, 8.653000000080624e-06, 8.985999999211458e-06, 1.0041000001237421e-05, 8.70800000107863e-06, 7.555999999908636e-06, 1.025000000076659e-05, 1.244499999941695e-05, 6.125000000523073e-06, 6.499999999576289e-06, 1.0291999998912615e-05, 7.2219999989187045e-06, 7.3199999999218335e-06, 7.847000000893445e-06, 1.065200000027744e-05, 6.722000000181083e-06, 8.638000000615875e-06, 1.0193999999685843e-05, 8.91600000052506e-06, 8.16600000064227e-06, 9.598000000110574e-06, 9.179999999275879e-06, 9.888999999319026e-06, 1.2153000000125758e-05, 1.159800000039013e-05, 6.7359999995630915e-06, 1.0582999999897424e-05, 1.119500000079654e-05, 8.722000000460639e-06, 8.388999999553448e-06, 8.847000000145044e-06, 1.0069000000001438e-05, 8.653000000080624e-06, 9.778000000792986e-06, 8.292000000409416e-06, 9.929999999158667e-06, 8.749999999224656e-06, 8.889000000067426e-06, 1.0944999999651372e-05, 1.0958000000726997e-05, 6.88899999978787e-06, 8.972000001605807e-06, 1.1429999998924245e-05, 7.306000000539825e-06, 8.402000000629073e-06, 7.2089999996194365e-06, 8.097000000262256e-06, 5.778000000233874e-06, 8.042000001040606e-06, 5.50000000032469e-06, 1.016699999922821e-05, 8.764000000383021e-06, 9.097999999596595e-06, 9.236000000356626e-06, 1.0013999999003431e-05, 1.1291000001634188e-05, 7.77800000051343e-06, 7.77800000051343e-06, 7.861000000275453e-06, 7.5549999998258954e-06, 7.472000000063872e-06]</msg>
<status status="PASS" starttime="20201029 18:15:44.449" endtime="20201029 18:15:44.451"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:44.444" endtime="20201029 18:15:44.452"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:44.069" endtime="20201029 18:15:44.452"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:44.069" endtime="20201029 18:15:44.453"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:44.460" endtime="20201029 18:15:44.470"></status>
</kw>
<msg timestamp="20201029 18:15:44.471" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:44.459" endtime="20201029 18:15:44.471"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:44.473" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:44.472" endtime="20201029 18:15:44.474"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:44.475" endtime="20201029 18:15:44.476"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:44.456" endtime="20201029 18:15:44.477"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:44.454" endtime="20201029 18:15:44.477"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:44.483" endtime="20201029 18:15:44.798"></status>
</kw>
<msg timestamp="20201029 18:15:44.802" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 12.382474361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 12.38248425, 'source': 'DUT_IC', 'event': 'FA...</msg>
<status status="PASS" starttime="20201029 18:15:44.482" endtime="20201029 18:15:44.802"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:44.812" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 12.382474361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 12.38248425, 'source': 'DUT_IC', 'event': 'FA...</msg>
<status status="PASS" starttime="20201029 18:15:44.803" endtime="20201029 18:15:44.812"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:44.813" endtime="20201029 18:15:44.815"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:44.479" endtime="20201029 18:15:44.815"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:44.478" endtime="20201029 18:15:44.816"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:44.820" level="INFO">${RESULT} = [{'diff': 9.888999999319026e-06}, {'diff': 1.2153000000125758e-05}, {'diff': 1.159800000039013e-05}, {'diff': 6.7359999995630915e-06}, {'diff': 1.0582999999897424e-05}, {'diff': 1.119500000079654e-05}...</msg>
<status status="PASS" starttime="20201029 18:15:44.816" endtime="20201029 18:15:44.820"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:15:44.825" level="INFO">${GPIO_OVERHEAD} = {'diff': [9.888999999319026e-06, 1.2153000000125758e-05, 1.159800000039013e-05, 6.7359999995630915e-06, 1.0582999999897424e-05, 1.119500000079654e-05, 8.722000000460639e-06, 8.388999999553448e-06, 8.8...</msg>
<status status="PASS" starttime="20201029 18:15:44.821" endtime="20201029 18:15:44.826"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:44.830" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:15:44.829" endtime="20201029 18:15:44.830"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:44.833" level="INFO">VALUE: [9.888999999319026e-06, 1.2153000000125758e-05, 1.159800000039013e-05, 6.7359999995630915e-06, 1.0582999999897424e-05, 1.119500000079654e-05, 8.722000000460639e-06, 8.388999999553448e-06, 8.847000000145044e-06, 1.0069000000001438e-05, 8.653000000080624e-06, 9.778000000792986e-06, 8.292000000409416e-06, 9.929999999158667e-06, 8.749999999224656e-06, 8.889000000067426e-06, 1.0944999999651372e-05, 1.0958000000726997e-05, 6.88899999978787e-06, 8.972000001605807e-06, 1.1429999998924245e-05, 7.306000000539825e-06, 8.402000000629073e-06, 7.2089999996194365e-06, 8.097000000262256e-06, 5.778000000233874e-06, 8.042000001040606e-06, 5.50000000032469e-06, 1.016699999922821e-05, 8.764000000383021e-06, 9.097999999596595e-06, 9.236000000356626e-06, 1.0013999999003431e-05, 1.1291000001634188e-05, 7.77800000051343e-06, 7.77800000051343e-06, 7.861000000275453e-06, 7.5549999998258954e-06, 7.472000000063872e-06, 6.374999999891884e-06, 1.0402000000908629e-05, 1.1473000000705724e-05, 8.555000000853852e-06, 7.805999999277446e-06, 1.0528000000675775e-05, 6.000000000838668e-06, 7.611999999213026e-06, 8.764000000383021e-06, 8.56900000023586e-06, 9.472000000343428e-06, 1.0902000001422607e-05, 9.583999998952208e-06, 9.41599999926268e-06, 8.680000000538257e-06, 9.277000000196267e-06, 1.0722000000740195e-05, 6.305000001205485e-06, 1.0582999999897424e-05, 8.97199999982945e-06, 9.930999999241408e-06, 8.221999999946661e-06, 6.791000000561098e-06, 1.0500000000135401e-05, 7.040999999929909e-06]</msg>
<status status="PASS" starttime="20201029 18:15:44.831" endtime="20201029 18:15:44.833"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:44.827" endtime="20201029 18:15:44.833"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:44.453" endtime="20201029 18:15:44.834"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:44.453" endtime="20201029 18:15:44.834"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:44.842" endtime="20201029 18:15:44.854"></status>
</kw>
<msg timestamp="20201029 18:15:44.854" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:44.840" endtime="20201029 18:15:44.854"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:44.857" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:44.855" endtime="20201029 18:15:44.857"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:44.858" endtime="20201029 18:15:44.859"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:44.838" endtime="20201029 18:15:44.860"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:44.836" endtime="20201029 18:15:44.860"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:44.867" endtime="20201029 18:15:45.186"></status>
</kw>
<msg timestamp="20201029 18:15:45.189" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 12.754793694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 12.754799472, 'source': 'DUT_IC', 'event': 'F...</msg>
<status status="PASS" starttime="20201029 18:15:44.865" endtime="20201029 18:15:45.190"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:45.199" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 12.754793694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 12.754799472, 'source': 'DUT_IC', 'event': 'F...</msg>
<status status="PASS" starttime="20201029 18:15:45.191" endtime="20201029 18:15:45.200"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:45.200" endtime="20201029 18:15:45.202"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:44.863" endtime="20201029 18:15:45.203"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:44.861" endtime="20201029 18:15:45.203"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:45.207" level="INFO">${RESULT} = [{'diff': 5.778000000233874e-06}, {'diff': 8.042000001040606e-06}, {'diff': 5.50000000032469e-06}, {'diff': 1.016699999922821e-05}, {'diff': 8.764000000383021e-06}, {'diff': 9.097999999596595e-06}, {'...</msg>
<status status="PASS" starttime="20201029 18:15:45.204" endtime="20201029 18:15:45.208"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:15:45.212" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.778000000233874e-06, 8.042000001040606e-06, 5.50000000032469e-06, 1.016699999922821e-05, 8.764000000383021e-06, 9.097999999596595e-06, 9.236000000356626e-06, 1.0013999999003431e-05, 1.1291...</msg>
<status status="PASS" starttime="20201029 18:15:45.208" endtime="20201029 18:15:45.213"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:45.217" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:15:45.216" endtime="20201029 18:15:45.217"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:45.219" level="INFO">VALUE: [5.778000000233874e-06, 8.042000001040606e-06, 5.50000000032469e-06, 1.016699999922821e-05, 8.764000000383021e-06, 9.097999999596595e-06, 9.236000000356626e-06, 1.0013999999003431e-05, 1.1291000001634188e-05, 7.77800000051343e-06, 7.77800000051343e-06, 7.861000000275453e-06, 7.5549999998258954e-06, 7.472000000063872e-06, 6.374999999891884e-06, 1.0402000000908629e-05, 1.1473000000705724e-05, 8.555000000853852e-06, 7.805999999277446e-06, 1.0528000000675775e-05, 6.000000000838668e-06, 7.611999999213026e-06, 8.764000000383021e-06, 8.56900000023586e-06, 9.472000000343428e-06, 1.0902000001422607e-05, 9.583999998952208e-06, 9.41599999926268e-06, 8.680000000538257e-06, 9.277000000196267e-06, 1.0722000000740195e-05, 6.305000001205485e-06, 1.0582999999897424e-05, 8.97199999982945e-06, 9.930999999241408e-06, 8.221999999946661e-06, 6.791000000561098e-06, 1.0500000000135401e-05, 7.040999999929909e-06, 7.388000000219108e-06, 1.0236000001384582e-05, 7.264000000617443e-06, 8.388999999553448e-06, 9.11200000075496e-06, 8.097000000262256e-06, 1.159800000039013e-05, 1.0764000000662577e-05, 6.374999999891884e-06, 7.527999999368262e-06, 1.0721999998963838e-05, 1.1111000000951776e-05, 7.195000000237428e-06, 8.875000000685418e-06, 6.264000001365844e-06, 9.11100000067222e-06, 9.401999999880672e-06, 8.430000001169446e-06, 8.695000000003006e-06, 1.0847999998730984e-05, 7.902000000115095e-06, 1.1291999999940572e-05, 8.347999999713807e-06, 1.1611999999772138e-05, 8.167000000725011e-06]</msg>
<status status="PASS" starttime="20201029 18:15:45.218" endtime="20201029 18:15:45.220"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:45.213" endtime="20201029 18:15:45.220"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:44.835" endtime="20201029 18:15:45.220"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:44.834" endtime="20201029 18:15:45.221"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:37.596" endtime="20201029 18:15:45.221"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 18:15:31.127" endtime="20201029 18:15:45.221" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:46.524" endtime="20201029 18:15:46.545"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:46.521" endtime="20201029 18:15:46.547"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:46.575" endtime="20201029 18:15:49.599"></status>
</kw>
<msg timestamp="20201029 18:15:49.600" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:46.572" endtime="20201029 18:15:49.600"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:49.605" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:49.602" endtime="20201029 18:15:49.606"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:15:49.611" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:15:49.607" endtime="20201029 18:15:49.612"></status>
</kw>
<status status="FAIL" starttime="20201029 18:15:46.566" endtime="20201029 18:15:49.613"></status>
</kw>
<status status="FAIL" starttime="20201029 18:15:46.561" endtime="20201029 18:15:49.615"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:46.559" endtime="20201029 18:15:49.615"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:15:49.623" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:15:49.621" endtime="20201029 18:15:49.624"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:49.617" endtime="20201029 18:15:49.624"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:46.557" endtime="20201029 18:15:49.625"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:46.556" endtime="20201029 18:15:49.625"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:49.626" endtime="20201029 18:15:49.629"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:46.551" endtime="20201029 18:15:49.631"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:46.548" endtime="20201029 18:15:49.632"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:46.518" endtime="20201029 18:15:49.632"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:49.651" endtime="20201029 18:15:49.666"></status>
</kw>
<msg timestamp="20201029 18:15:49.667" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:49.647" endtime="20201029 18:15:49.667"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:49.672" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:49.669" endtime="20201029 18:15:49.673"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:49.674" endtime="20201029 18:15:49.677"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:49.642" endtime="20201029 18:15:49.678"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:49.638" endtime="20201029 18:15:49.679"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:49.695" endtime="20201029 18:15:49.994"></status>
</kw>
<msg timestamp="20201029 18:15:49.997" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.117220583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.117222153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:49.692" endtime="20201029 18:15:49.997"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:50.005" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.117220583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.117222153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:49.998" endtime="20201029 18:15:50.006"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:50.006" endtime="20201029 18:15:50.008"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:49.684" endtime="20201029 18:15:50.008"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:49.681" endtime="20201029 18:15:50.009"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:50.013" level="INFO">${RESULT} = [{'diff': 1.5700000002283332e-06}, {'diff': 1.4859999999394802e-06}, {'diff': 1.5559999999581464e-06}, {'diff': 1.5690000001455928e-06}, {'diff': 1.6110000000679747e-06}, {'diff': 1.5410000000493085e-...</msg>
<status status="PASS" starttime="20201029 18:15:50.010" endtime="20201029 18:15:50.013"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:15:50.017" level="INFO">${OVERHEAD} = {'diff': [1.5700000002283332e-06, 1.4859999999394802e-06, 1.5559999999581464e-06, 1.5690000001455928e-06, 1.6110000000679747e-06, 1.5410000000493085e-06, 1.5420000001320489e-06, 1.5420000001320489e-06...</msg>
<status status="PASS" starttime="20201029 18:15:50.014" endtime="20201029 18:15:50.017"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:50.021" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:15:50.020" endtime="20201029 18:15:50.021"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:50.024" level="INFO">VALUE: [1.5700000002283332e-06, 1.4859999999394802e-06, 1.5559999999581464e-06, 1.5690000001455928e-06, 1.6110000000679747e-06, 1.5410000000493085e-06, 1.5420000001320489e-06, 1.5420000001320489e-06, 1.6110000000679747e-06, 1.5420000001320489e-06, 1.569999999784244e-06, 1.5690000001455928e-06, 1.569999999784244e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.5420000001320489e-06, 1.554999999875406e-06, 1.5700000002283332e-06, 1.5689999997015036e-06, 1.554999999875406e-06, 1.500000000209667e-06, 1.5559999999581464e-06, 1.5419999996879596e-06, 1.5280000003059513e-06, 1.5420000001320489e-06, 1.5560000004022356e-06, 1.5700000002283332e-06, 1.5140000000357645e-06, 1.5559999999581464e-06, 1.4999999997655777e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.5700000002283332e-06, 1.554999999875406e-06, 1.5840000000544308e-06, 1.4720000001133826e-06, 1.554999999875406e-06, 1.5829999999716904e-06, 1.5689999997015036e-06, 1.569999999784244e-06, 1.5690000001455928e-06, 1.5559999999581464e-06, 1.554999999875406e-06, 1.5700000002283332e-06, 1.5559999999581464e-06, 1.5140000000357645e-06, 1.527999999861862e-06, 1.5700000002283332e-06, 1.5560000004022356e-06, 1.5559999999581464e-06]</msg>
<status status="PASS" starttime="20201029 18:15:50.022" endtime="20201029 18:15:50.024"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:50.018" endtime="20201029 18:15:50.025"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:49.636" endtime="20201029 18:15:50.025"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:49.635" endtime="20201029 18:15:50.025"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:50.034" endtime="20201029 18:15:50.046"></status>
</kw>
<msg timestamp="20201029 18:15:50.046" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:50.032" endtime="20201029 18:15:50.047"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:50.049" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:50.047" endtime="20201029 18:15:50.049"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:50.050" endtime="20201029 18:15:50.051"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:50.029" endtime="20201029 18:15:50.052"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:50.028" endtime="20201029 18:15:50.052"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:50.059" endtime="20201029 18:15:50.380"></status>
</kw>
<msg timestamp="20201029 18:15:50.384" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.117435153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.117436708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:50.057" endtime="20201029 18:15:50.384"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:50.394" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.117435153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.117436708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:50.385" endtime="20201029 18:15:50.394"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:50.395" endtime="20201029 18:15:50.397"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:50.055" endtime="20201029 18:15:50.398"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:50.053" endtime="20201029 18:15:50.398"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:50.403" level="INFO">${RESULT} = [{'diff': 1.554999999875406e-06}, {'diff': 1.5829999999716904e-06}, {'diff': 1.5689999997015036e-06}, {'diff': 1.569999999784244e-06}, {'diff': 1.5690000001455928e-06}, {'diff': 1.5559999999581464e-06...</msg>
<status status="PASS" starttime="20201029 18:15:50.399" endtime="20201029 18:15:50.403"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:15:50.408" level="INFO">${OVERHEAD} = {'diff': [1.554999999875406e-06, 1.5829999999716904e-06, 1.5689999997015036e-06, 1.569999999784244e-06, 1.5690000001455928e-06, 1.5559999999581464e-06, 1.554999999875406e-06, 1.5700000002283332e-06, 1...</msg>
<status status="PASS" starttime="20201029 18:15:50.404" endtime="20201029 18:15:50.409"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:50.413" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:15:50.412" endtime="20201029 18:15:50.413"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:50.415" level="INFO">VALUE: [1.554999999875406e-06, 1.5829999999716904e-06, 1.5689999997015036e-06, 1.569999999784244e-06, 1.5690000001455928e-06, 1.5559999999581464e-06, 1.554999999875406e-06, 1.5700000002283332e-06, 1.5559999999581464e-06, 1.5140000000357645e-06, 1.527999999861862e-06, 1.5700000002283332e-06, 1.5560000004022356e-06, 1.5559999999581464e-06, 1.596999999797788e-06, 1.5700000002283332e-06, 1.5410000000493085e-06, 1.5700000002283332e-06, 1.5559999999581464e-06, 1.5970000002418772e-06, 1.4859999999394802e-06, 1.554999999875406e-06, 1.5550000003194953e-06, 1.596999999797788e-06, 1.5559999999581464e-06, 1.554999999875406e-06, 1.5550000003194953e-06, 1.5840000000544308e-06, 1.554999999875406e-06, 1.5689999997015036e-06, 1.5690000001455928e-06, 1.5559999999581464e-06, 1.554999999875406e-06, 1.5689999997015036e-06, 1.5559999999581464e-06, 1.5829999999716904e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.6110000000679747e-06, 1.5550000003194953e-06, 1.5700000002283332e-06, 1.5689999997015036e-06, 1.5689999997015036e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.554999999875406e-06, 1.6110000000679747e-06, 1.569999999784244e-06, 1.569999999784244e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.554999999875406e-06, 1.5410000000493085e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.554999999875406e-06, 1.569999999784244e-06, 1.5560000004022356e-06, 1.5559999999581464e-06, 1.5559999999581464e-06]</msg>
<status status="PASS" starttime="20201029 18:15:50.414" endtime="20201029 18:15:50.416"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:50.409" endtime="20201029 18:15:50.416"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:50.026" endtime="20201029 18:15:50.417"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:50.026" endtime="20201029 18:15:50.417"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:50.425" endtime="20201029 18:15:50.437"></status>
</kw>
<msg timestamp="20201029 18:15:50.437" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:50.424" endtime="20201029 18:15:50.437"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:50.440" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:50.438" endtime="20201029 18:15:50.440"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:50.441" endtime="20201029 18:15:50.442"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:50.421" endtime="20201029 18:15:50.443"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:50.419" endtime="20201029 18:15:50.443"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:50.450" endtime="20201029 18:15:50.772"></status>
</kw>
<msg timestamp="20201029 18:15:50.775" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.489512222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.489513792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:50.448" endtime="20201029 18:15:50.776"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:50.785" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.489512222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.489513792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:50.777" endtime="20201029 18:15:50.786"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:50.786" endtime="20201029 18:15:50.788"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:50.446" endtime="20201029 18:15:50.789"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:50.444" endtime="20201029 18:15:50.789"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:50.793" level="INFO">${RESULT} = [{'diff': 1.569999999784244e-06}, {'diff': 1.554999999875406e-06}, {'diff': 1.5559999999581464e-06}, {'diff': 1.5559999999581464e-06}, {'diff': 1.554999999875406e-06}, {'diff': 1.5410000000493085e-06}...</msg>
<status status="PASS" starttime="20201029 18:15:50.790" endtime="20201029 18:15:50.794"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:15:50.801" level="INFO">${OVERHEAD} = {'diff': [1.569999999784244e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.554999999875406e-06, 1.5410000000493085e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1...</msg>
<status status="PASS" starttime="20201029 18:15:50.794" endtime="20201029 18:15:50.801"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:50.805" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:15:50.804" endtime="20201029 18:15:50.805"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:50.807" level="INFO">VALUE: [1.569999999784244e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.554999999875406e-06, 1.5410000000493085e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.554999999875406e-06, 1.569999999784244e-06, 1.5560000004022356e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5829999999716904e-06, 1.5829999999716904e-06, 1.5829999999716904e-06, 1.5410000000493085e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.569999999784244e-06, 1.5550000003194953e-06, 1.5690000001455928e-06, 1.5829999999716904e-06, 1.5550000003194953e-06, 1.5970000002418772e-06, 1.554999999875406e-06, 1.5829999999716904e-06, 1.554999999875406e-06, 1.5420000001320489e-06, 1.5420000001320489e-06, 1.569999999784244e-06, 1.5559999999581464e-06, 1.5419999996879596e-06, 1.554999999875406e-06, 1.5550000003194953e-06, 1.5700000002283332e-06, 1.5559999999581464e-06, 1.5700000002283332e-06, 1.569999999784244e-06, 1.5410000000493085e-06, 1.5420000001320489e-06, 1.5410000000493085e-06, 1.554999999875406e-06, 1.5420000001320489e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5550000003194953e-06, 1.5140000000357645e-06, 1.5420000001320489e-06, 1.5700000002283332e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5690000001455928e-06, 1.5689999997015036e-06, 1.5410000000493085e-06, 1.5829999999716904e-06, 1.5689999997015036e-06, 1.5700000002283332e-06, 1.5690000001455928e-06, 1.5559999999581464e-06]</msg>
<status status="PASS" starttime="20201029 18:15:50.806" endtime="20201029 18:15:50.808"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:50.802" endtime="20201029 18:15:50.809"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:50.418" endtime="20201029 18:15:50.809"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:50.418" endtime="20201029 18:15:50.809"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:50.817" endtime="20201029 18:15:50.829"></status>
</kw>
<msg timestamp="20201029 18:15:50.830" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:50.816" endtime="20201029 18:15:50.830"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:50.832" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:50.831" endtime="20201029 18:15:50.833"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:50.833" endtime="20201029 18:15:50.835"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:50.813" endtime="20201029 18:15:50.835"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:50.811" endtime="20201029 18:15:50.836"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:50.842" endtime="20201029 18:15:51.153"></status>
</kw>
<msg timestamp="20201029 18:15:51.157" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.870768444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.870769958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:50.841" endtime="20201029 18:15:51.157"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:51.167" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.870768444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.870769958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:51.158" endtime="20201029 18:15:51.167"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:51.168" endtime="20201029 18:15:51.170"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:50.838" endtime="20201029 18:15:51.170"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:50.836" endtime="20201029 18:15:51.171"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:51.175" level="INFO">${RESULT} = [{'diff': 1.5140000000357645e-06}, {'diff': 1.5420000001320489e-06}, {'diff': 1.5700000002283332e-06}, {'diff': 1.5559999999581464e-06}, {'diff': 1.5559999999581464e-06}, {'diff': 1.5559999999581464e-...</msg>
<status status="PASS" starttime="20201029 18:15:51.172" endtime="20201029 18:15:51.175"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:15:51.180" level="INFO">${OVERHEAD} = {'diff': [1.5140000000357645e-06, 1.5420000001320489e-06, 1.5700000002283332e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5690000001455928e-06, 1.5689999997015036e-06...</msg>
<status status="PASS" starttime="20201029 18:15:51.176" endtime="20201029 18:15:51.180"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:51.184" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:15:51.183" endtime="20201029 18:15:51.184"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:51.186" level="INFO">VALUE: [1.5140000000357645e-06, 1.5420000001320489e-06, 1.5700000002283332e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5690000001455928e-06, 1.5689999997015036e-06, 1.5410000000493085e-06, 1.5829999999716904e-06, 1.5689999997015036e-06, 1.5700000002283332e-06, 1.5690000001455928e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5700000002283332e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.5700000002283332e-06, 1.5559999999581464e-06, 1.5699999993401548e-06, 1.5279999994177729e-06, 1.5690000001455928e-06, 1.5690000001455928e-06, 1.554999999875406e-06, 1.5280000003059513e-06, 1.5700000002283332e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.485999999495391e-06, 1.5419999996879596e-06, 1.554999999875406e-06, 1.5690000001455928e-06, 1.5690000001455928e-06, 1.4999999997655777e-06, 1.5690000001455928e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5560000008463248e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.554999999875406e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.554999999875406e-06, 1.5700000002283332e-06, 1.5559999999581464e-06, 1.5690000001455928e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.554999999875406e-06, 1.5129999999530241e-06, 1.542000000576138e-06, 1.5559999999581464e-06, 1.554999999875406e-06, 1.5829999995276012e-06, 1.5559999999581464e-06, 1.5410000004933977e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.5690000001455928e-06, 1.5559999999581464e-06]</msg>
<status status="PASS" starttime="20201029 18:15:51.185" endtime="20201029 18:15:51.187"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:51.181" endtime="20201029 18:15:51.188"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:50.810" endtime="20201029 18:15:51.188"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:50.810" endtime="20201029 18:15:51.188"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:51.197" endtime="20201029 18:15:51.209"></status>
</kw>
<msg timestamp="20201029 18:15:51.209" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:51.195" endtime="20201029 18:15:51.209"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:51.212" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:51.210" endtime="20201029 18:15:51.212"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:51.213" endtime="20201029 18:15:51.214"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:51.192" endtime="20201029 18:15:51.215"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:51.190" endtime="20201029 18:15:51.215"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:51.222" endtime="20201029 18:15:51.532"></status>
</kw>
<msg timestamp="20201029 18:15:51.536" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.251684764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.251686319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:51.220" endtime="20201029 18:15:51.536"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:51.545" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.251684764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.251686319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:51.537" endtime="20201029 18:15:51.546"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:51.547" endtime="20201029 18:15:51.548"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:51.218" endtime="20201029 18:15:51.549"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:51.216" endtime="20201029 18:15:51.549"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:51.553" level="INFO">${RESULT} = [{'diff': 1.554999999875406e-06}, {'diff': 1.5559999999581464e-06}, {'diff': 1.554999999875406e-06}, {'diff': 1.5129999999530241e-06}, {'diff': 1.542000000576138e-06}, {'diff': 1.5559999999581464e-06}...</msg>
<status status="PASS" starttime="20201029 18:15:51.550" endtime="20201029 18:15:51.554"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:15:51.559" level="INFO">${OVERHEAD} = {'diff': [1.554999999875406e-06, 1.5559999999581464e-06, 1.554999999875406e-06, 1.5129999999530241e-06, 1.542000000576138e-06, 1.5559999999581464e-06, 1.554999999875406e-06, 1.5829999995276012e-06, 1....</msg>
<status status="PASS" starttime="20201029 18:15:51.554" endtime="20201029 18:15:51.559"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:51.563" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:15:51.562" endtime="20201029 18:15:51.563"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:51.565" level="INFO">VALUE: [1.554999999875406e-06, 1.5559999999581464e-06, 1.554999999875406e-06, 1.5129999999530241e-06, 1.542000000576138e-06, 1.5559999999581464e-06, 1.554999999875406e-06, 1.5829999995276012e-06, 1.5559999999581464e-06, 1.5410000004933977e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.5690000001455928e-06, 1.5559999999581464e-06, 1.5830000004157796e-06, 1.554999999875406e-06, 1.6110000000679747e-06, 1.554999999875406e-06, 1.5839999996103415e-06, 1.5690000001455928e-06, 1.5829999995276012e-06, 1.5690000001455928e-06, 1.5690000001455928e-06, 1.5419999996879596e-06, 1.5550000007635845e-06, 1.554999999875406e-06, 1.5830000004157796e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5690000001455928e-06, 1.5689999992574144e-06, 1.5419999996879596e-06, 1.5699999993401548e-06, 1.5559999999581464e-06, 1.5699999993401548e-06, 1.5689999992574144e-06, 1.5410000004933977e-06, 1.5559999999581464e-06, 1.554999999875406e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.5690000001455928e-06, 1.5559999999581464e-06, 1.5829999995276012e-06, 1.5409999996052193e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.554999999875406e-06, 1.5419999996879596e-06, 1.554999999875406e-06, 1.554999999875406e-06, 1.554999999875406e-06, 1.5839999996103415e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5699999993401548e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5690000001455928e-06, 1.5700000002283332e-06, 1.5700000002283332e-06, 1.5559999999581464e-06, 1.5419999996879596e-06]</msg>
<status status="PASS" starttime="20201029 18:15:51.564" endtime="20201029 18:15:51.566"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:51.560" endtime="20201029 18:15:51.567"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:51.189" endtime="20201029 18:15:51.567"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:51.189" endtime="20201029 18:15:51.567"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:51.575" endtime="20201029 18:15:51.588"></status>
</kw>
<msg timestamp="20201029 18:15:51.589" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:51.574" endtime="20201029 18:15:51.589"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:51.591" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:51.590" endtime="20201029 18:15:51.591"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:51.592" endtime="20201029 18:15:51.594"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:51.571" endtime="20201029 18:15:51.594"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:51.569" endtime="20201029 18:15:51.595"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:51.601" endtime="20201029 18:15:51.922"></status>
</kw>
<msg timestamp="20201029 18:15:51.926" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.620538778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.620540333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:51.600" endtime="20201029 18:15:51.926"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:51.935" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.620538778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.620540333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:51.927" endtime="20201029 18:15:51.936"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:51.937" endtime="20201029 18:15:51.938"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:51.597" endtime="20201029 18:15:51.939"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:51.595" endtime="20201029 18:15:51.939"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:51.943" level="INFO">${RESULT} = [{'diff': 1.554999999875406e-06}, {'diff': 1.554999999875406e-06}, {'diff': 1.5839999996103415e-06}, {'diff': 1.5559999999581464e-06}, {'diff': 1.5559999999581464e-06}, {'diff': 1.5559999999581464e-06...</msg>
<status status="PASS" starttime="20201029 18:15:51.940" endtime="20201029 18:15:51.944"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:15:51.949" level="INFO">${OVERHEAD} = {'diff': [1.554999999875406e-06, 1.554999999875406e-06, 1.5839999996103415e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5699999993401548e-06, 1.5559999999581464e-06, ...</msg>
<status status="PASS" starttime="20201029 18:15:51.944" endtime="20201029 18:15:51.949"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:51.953" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:15:51.952" endtime="20201029 18:15:51.954"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:51.956" level="INFO">VALUE: [1.554999999875406e-06, 1.554999999875406e-06, 1.5839999996103415e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5699999993401548e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5690000001455928e-06, 1.5700000002283332e-06, 1.5700000002283332e-06, 1.5559999999581464e-06, 1.5419999996879596e-06, 1.5559999999581464e-06, 1.542000000576138e-06, 1.5559999999581464e-06, 1.5419999996879596e-06, 1.554999999875406e-06, 1.554999999875406e-06, 1.5970000006859664e-06, 1.4999999997655777e-06, 1.5550000007635845e-06, 1.5559999999581464e-06, 1.5419999996879596e-06, 1.5279999994177729e-06, 1.542000000576138e-06, 1.5279999994177729e-06, 1.5550000007635845e-06, 1.5419999996879596e-06, 1.5830000004157796e-06, 1.5559999999581464e-06, 1.5690000001455928e-06, 1.5690000001455928e-06, 1.5559999999581464e-06, 1.5000000006537562e-06, 1.5550000007635845e-06, 1.5279999994177729e-06, 1.5410000004933977e-06, 1.5419999996879596e-06, 1.5559999999581464e-06, 1.554999999875406e-06, 1.542000000576138e-06, 1.554999999875406e-06, 1.5550000007635845e-06, 1.5140000000357645e-06, 1.554999999875406e-06, 1.5690000001455928e-06, 1.5979999998805283e-06, 1.554999999875406e-06, 1.5690000001455928e-06, 1.5409999996052193e-06, 1.5559999999581464e-06, 1.5690000001455928e-06, 1.5690000001455928e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.5140000000357645e-06, 1.485999999495391e-06, 1.5559999999581464e-06, 1.5560000008463248e-06, 1.5700000002283332e-06, 1.5280000003059513e-06, 1.612000000150715e-06]</msg>
<status status="PASS" starttime="20201029 18:15:51.954" endtime="20201029 18:15:51.957"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:51.950" endtime="20201029 18:15:51.957"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:51.568" endtime="20201029 18:15:51.958"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:51.568" endtime="20201029 18:15:51.958"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:51.966" endtime="20201029 18:15:51.978"></status>
</kw>
<msg timestamp="20201029 18:15:51.979" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:51.964" endtime="20201029 18:15:51.979"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:51.981" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:51.980" endtime="20201029 18:15:51.981"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:51.982" endtime="20201029 18:15:51.984"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:51.962" endtime="20201029 18:15:51.984"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:51.960" endtime="20201029 18:15:51.985"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:51.992" endtime="20201029 18:15:52.298"></status>
</kw>
<msg timestamp="20201029 18:15:52.302" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.989721125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.989722694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:51.990" endtime="20201029 18:15:52.302"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:52.311" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.989721125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.989722694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:52.303" endtime="20201029 18:15:52.312"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:52.313" endtime="20201029 18:15:52.314"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:51.987" endtime="20201029 18:15:52.315"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:51.985" endtime="20201029 18:15:52.315"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:52.319" level="INFO">${RESULT} = [{'diff': 1.5690000001455928e-06}, {'diff': 1.5409999996052193e-06}, {'diff': 1.5559999999581464e-06}, {'diff': 1.5690000001455928e-06}, {'diff': 1.5690000001455928e-06}, {'diff': 1.554999999875406e-0...</msg>
<status status="PASS" starttime="20201029 18:15:52.316" endtime="20201029 18:15:52.320"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:15:52.324" level="INFO">${OVERHEAD} = {'diff': [1.5690000001455928e-06, 1.5409999996052193e-06, 1.5559999999581464e-06, 1.5690000001455928e-06, 1.5690000001455928e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.5140000000357645e-06,...</msg>
<status status="PASS" starttime="20201029 18:15:52.320" endtime="20201029 18:15:52.324"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:52.328" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:15:52.327" endtime="20201029 18:15:52.329"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:52.331" level="INFO">VALUE: [1.5690000001455928e-06, 1.5409999996052193e-06, 1.5559999999581464e-06, 1.5690000001455928e-06, 1.5690000001455928e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.5140000000357645e-06, 1.485999999495391e-06, 1.5559999999581464e-06, 1.5560000008463248e-06, 1.5700000002283332e-06, 1.5280000003059513e-06, 1.612000000150715e-06, 1.5559999999581464e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5700000002283332e-06, 1.5690000001455928e-06, 1.5550000007635845e-06, 1.4999999997655777e-06, 1.58400000049852e-06, 1.5280000003059513e-06, 1.5700000002283332e-06, 1.554999999875406e-06, 1.5690000001455928e-06, 1.5690000001455928e-06, 1.5690000001455928e-06, 1.596999999797788e-06, 1.596999999797788e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.5690000001455928e-06, 1.5699999993401548e-06, 1.5559999999581464e-06, 1.554999999875406e-06, 1.4999999997655777e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.554999999875406e-06, 1.5829999995276012e-06, 1.5419999996879596e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5560000008463248e-06, 1.5970000006859664e-06, 1.5280000003059513e-06, 1.5690000001455928e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.5419999996879596e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.527000000223211e-06, 1.5419999996879596e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.5700000002283332e-06, 1.554999999875406e-06, 1.5690000001455928e-06, 1.554999999875406e-06, 1.5690000001455928e-06]</msg>
<status status="PASS" starttime="20201029 18:15:52.329" endtime="20201029 18:15:52.332"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:52.325" endtime="20201029 18:15:52.332"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:51.959" endtime="20201029 18:15:52.333"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:51.958" endtime="20201029 18:15:52.333"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:52.341" endtime="20201029 18:15:52.353"></status>
</kw>
<msg timestamp="20201029 18:15:52.354" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:52.340" endtime="20201029 18:15:52.354"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:52.356" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:52.355" endtime="20201029 18:15:52.357"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:52.357" endtime="20201029 18:15:52.359"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:52.337" endtime="20201029 18:15:52.359"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:52.335" endtime="20201029 18:15:52.360"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:52.366" endtime="20201029 18:15:52.686"></status>
</kw>
<msg timestamp="20201029 18:15:52.689" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.368377681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.368379236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:52.365" endtime="20201029 18:15:52.690"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:52.699" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.368377681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.368379236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:52.691" endtime="20201029 18:15:52.699"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:52.700" endtime="20201029 18:15:52.702"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:52.362" endtime="20201029 18:15:52.702"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:52.360" endtime="20201029 18:15:52.703"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:52.707" level="INFO">${RESULT} = [{'diff': 1.554999999875406e-06}, {'diff': 1.5559999999581464e-06}, {'diff': 1.5419999996879596e-06}, {'diff': 1.5559999999581464e-06}, {'diff': 1.5559999999581464e-06}, {'diff': 1.527000000223211e-06...</msg>
<status status="PASS" starttime="20201029 18:15:52.704" endtime="20201029 18:15:52.707"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:15:52.713" level="INFO">${OVERHEAD} = {'diff': [1.554999999875406e-06, 1.5559999999581464e-06, 1.5419999996879596e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.527000000223211e-06, 1.5419999996879596e-06, 1.554999999875406e-06, 1...</msg>
<status status="PASS" starttime="20201029 18:15:52.708" endtime="20201029 18:15:52.713"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:52.717" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:15:52.716" endtime="20201029 18:15:52.717"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:52.719" level="INFO">VALUE: [1.554999999875406e-06, 1.5559999999581464e-06, 1.5419999996879596e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.527000000223211e-06, 1.5419999996879596e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.5700000002283332e-06, 1.554999999875406e-06, 1.5690000001455928e-06, 1.554999999875406e-06, 1.5690000001455928e-06, 1.5690000001455928e-06, 1.5559999999581464e-06, 1.5269999993350325e-06, 1.5699999993401548e-06, 1.5550000007635845e-06, 1.554999999875406e-06, 1.5839999996103415e-06, 1.5559999999581464e-06, 1.596999999797788e-06, 1.5979999998805283e-06, 1.5690000001455928e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.513999999147586e-06, 1.5559999999581464e-06, 1.5409999996052193e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.554999999875406e-06, 1.5700000002283332e-06, 1.5700000002283332e-06, 1.5559999999581464e-06, 1.596999999797788e-06, 1.5419999996879596e-06, 1.5559999999581464e-06, 1.5700000002283332e-06, 1.5559999999581464e-06, 1.5700000002283332e-06, 1.5559999999581464e-06, 1.5690000001455928e-06, 1.5140000000357645e-06, 1.5690000001455928e-06, 1.554999999875406e-06, 1.527000000223211e-06, 1.5559999999581464e-06, 1.596999999797788e-06, 1.5560000008463248e-06, 1.5700000002283332e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5690000001455928e-06, 1.5559999999581464e-06, 1.6110000000679747e-06, 1.596999999797788e-06]</msg>
<status status="PASS" starttime="20201029 18:15:52.718" endtime="20201029 18:15:52.720"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:52.713" endtime="20201029 18:15:52.721"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:52.334" endtime="20201029 18:15:52.721"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:52.333" endtime="20201029 18:15:52.721"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:52.729" endtime="20201029 18:15:52.740"></status>
</kw>
<msg timestamp="20201029 18:15:52.741" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:52.727" endtime="20201029 18:15:52.741"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:52.743" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:52.742" endtime="20201029 18:15:52.743"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:52.744" endtime="20201029 18:15:52.746"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:52.725" endtime="20201029 18:15:52.746"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:52.723" endtime="20201029 18:15:52.747"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:52.753" endtime="20201029 18:15:53.068"></status>
</kw>
<msg timestamp="20201029 18:15:53.071" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.73421325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.734214764, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:15:52.751" endtime="20201029 18:15:53.072"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:53.081" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.73421325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.734214764, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:15:53.072" endtime="20201029 18:15:53.081"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:53.082" endtime="20201029 18:15:53.084"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:52.749" endtime="20201029 18:15:53.084"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:52.747" endtime="20201029 18:15:53.085"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:53.090" level="INFO">${RESULT} = [{'diff': 1.5140000000357645e-06}, {'diff': 1.5690000001455928e-06}, {'diff': 1.554999999875406e-06}, {'diff': 1.527000000223211e-06}, {'diff': 1.5559999999581464e-06}, {'diff': 1.596999999797788e-06}...</msg>
<status status="PASS" starttime="20201029 18:15:53.085" endtime="20201029 18:15:53.090"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:15:53.095" level="INFO">${OVERHEAD} = {'diff': [1.5140000000357645e-06, 1.5690000001455928e-06, 1.554999999875406e-06, 1.527000000223211e-06, 1.5559999999581464e-06, 1.596999999797788e-06, 1.5560000008463248e-06, 1.5700000002283332e-06, 1...</msg>
<status status="PASS" starttime="20201029 18:15:53.091" endtime="20201029 18:15:53.095"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:53.099" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:15:53.098" endtime="20201029 18:15:53.099"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:53.101" level="INFO">VALUE: [1.5140000000357645e-06, 1.5690000001455928e-06, 1.554999999875406e-06, 1.527000000223211e-06, 1.5559999999581464e-06, 1.596999999797788e-06, 1.5560000008463248e-06, 1.5700000002283332e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5690000001455928e-06, 1.5559999999581464e-06, 1.6110000000679747e-06, 1.596999999797788e-06, 1.5700000002283332e-06, 1.5559999999581464e-06, 1.5280000003059513e-06, 1.5690000001455928e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5690000001455928e-06, 1.4999999997655777e-06, 1.5700000002283332e-06, 1.5690000001455928e-06, 1.5410000004933977e-06, 1.5140000000357645e-06, 1.5690000001455928e-06, 1.5689999992574144e-06, 1.5690000001455928e-06, 1.5280000003059513e-06, 1.5559999999581464e-06, 1.5560000008463248e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.554999999875406e-06, 1.5700000002283332e-06, 1.5839999996103415e-06, 1.542000000576138e-06, 1.5280000003059513e-06, 1.5690000001455928e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.5419999996879596e-06, 1.5559999999581464e-06, 1.5550000007635845e-06, 1.5690000001455928e-06, 1.596999999797788e-06, 1.5419999996879596e-06, 1.5280000003059513e-06, 1.5559999999581464e-06, 1.554999999875406e-06, 1.554999999875406e-06, 1.5690000001455928e-06, 1.5559999999581464e-06, 1.5699999993401548e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.554999999875406e-06, 1.5690000001455928e-06, 1.5839999996103415e-06, 1.5979999998805283e-06, 1.554999999875406e-06, 1.596999999797788e-06, 1.542000000576138e-06]</msg>
<status status="PASS" starttime="20201029 18:15:53.100" endtime="20201029 18:15:53.102"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:53.096" endtime="20201029 18:15:53.103"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:52.722" endtime="20201029 18:15:53.103"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:52.722" endtime="20201029 18:15:53.103"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:53.111" endtime="20201029 18:15:53.123"></status>
</kw>
<msg timestamp="20201029 18:15:53.124" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:53.109" endtime="20201029 18:15:53.124"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:53.126" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:53.125" endtime="20201029 18:15:53.126"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:53.127" endtime="20201029 18:15:53.129"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:53.107" endtime="20201029 18:15:53.129"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:53.105" endtime="20201029 18:15:53.130"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:53.137" endtime="20201029 18:15:53.453"></status>
</kw>
<msg timestamp="20201029 18:15:53.457" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.112698764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.112700319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:53.136" endtime="20201029 18:15:53.457"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:53.467" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.112698764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.112700319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:53.458" endtime="20201029 18:15:53.467"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:53.468" endtime="20201029 18:15:53.470"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:53.132" endtime="20201029 18:15:53.470"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:53.130" endtime="20201029 18:15:53.471"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:53.475" level="INFO">${RESULT} = [{'diff': 1.554999999875406e-06}, {'diff': 1.554999999875406e-06}, {'diff': 1.5690000001455928e-06}, {'diff': 1.5559999999581464e-06}, {'diff': 1.5699999993401548e-06}, {'diff': 1.5559999999581464e-06...</msg>
<status status="PASS" starttime="20201029 18:15:53.472" endtime="20201029 18:15:53.475"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:15:53.480" level="INFO">${OVERHEAD} = {'diff': [1.554999999875406e-06, 1.554999999875406e-06, 1.5690000001455928e-06, 1.5559999999581464e-06, 1.5699999993401548e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.554999999875406e-06, 1...</msg>
<status status="PASS" starttime="20201029 18:15:53.476" endtime="20201029 18:15:53.480"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:53.485" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:15:53.483" endtime="20201029 18:15:53.485"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:53.487" level="INFO">VALUE: [1.554999999875406e-06, 1.554999999875406e-06, 1.5690000001455928e-06, 1.5559999999581464e-06, 1.5699999993401548e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.554999999875406e-06, 1.5690000001455928e-06, 1.5839999996103415e-06, 1.5979999998805283e-06, 1.554999999875406e-06, 1.596999999797788e-06, 1.542000000576138e-06, 1.4860000003835694e-06, 1.58400000049852e-06, 1.5700000002283332e-06, 1.5409999996052193e-06, 1.5419999996879596e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.554999999875406e-06, 1.4999999997655777e-06, 1.5559999999581464e-06, 1.5700000002283332e-06, 1.5690000001455928e-06, 1.5410000004933977e-06, 1.554999999875406e-06, 1.5690000001455928e-06, 1.5830000004157796e-06, 1.5700000002283332e-06, 1.554999999875406e-06, 1.5690000001455928e-06, 1.5690000001455928e-06, 1.5829999995276012e-06, 1.5979999998805283e-06, 1.5700000002283332e-06, 1.5419999996879596e-06, 1.5280000003059513e-06, 1.5419999996879596e-06, 1.5689999992574144e-06, 1.5559999999581464e-06, 1.554999999875406e-06, 1.554999999875406e-06, 1.5419999996879596e-06, 1.5689999992574144e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.554999999875406e-06, 1.5410000004933977e-06, 1.554999999875406e-06, 1.5410000004933977e-06, 1.5700000002283332e-06, 1.5700000002283332e-06, 1.542000000576138e-06, 1.5560000008463248e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.5700000002283332e-06, 1.5559999999581464e-06, 1.554999999875406e-06, 1.5699999993401548e-06, 1.5559999999581464e-06, 1.5419999996879596e-06]</msg>
<status status="PASS" starttime="20201029 18:15:53.486" endtime="20201029 18:15:53.488"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:53.481" endtime="20201029 18:15:53.489"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:53.104" endtime="20201029 18:15:53.489"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:53.104" endtime="20201029 18:15:53.489"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:53.497" endtime="20201029 18:15:53.510"></status>
</kw>
<msg timestamp="20201029 18:15:53.510" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:53.495" endtime="20201029 18:15:53.510"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:53.513" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:53.511" endtime="20201029 18:15:53.513"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:53.514" endtime="20201029 18:15:53.515"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:53.493" endtime="20201029 18:15:53.516"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:53.491" endtime="20201029 18:15:53.516"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:53.523" endtime="20201029 18:15:53.839"></status>
</kw>
<msg timestamp="20201029 18:15:53.843" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.485752792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.485754347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:53.521" endtime="20201029 18:15:53.843"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:53.852" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.485752792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.485754347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:53.844" endtime="20201029 18:15:53.853"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:53.853" endtime="20201029 18:15:53.855"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:53.519" endtime="20201029 18:15:53.856"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:53.517" endtime="20201029 18:15:53.856"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:53.860" level="INFO">${RESULT} = [{'diff': 1.554999999875406e-06}, {'diff': 1.5410000004933977e-06}, {'diff': 1.5700000002283332e-06}, {'diff': 1.5700000002283332e-06}, {'diff': 1.542000000576138e-06}, {'diff': 1.5560000008463248e-06...</msg>
<status status="PASS" starttime="20201029 18:15:53.857" endtime="20201029 18:15:53.861"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:15:53.866" level="INFO">${OVERHEAD} = {'diff': [1.554999999875406e-06, 1.5410000004933977e-06, 1.5700000002283332e-06, 1.5700000002283332e-06, 1.542000000576138e-06, 1.5560000008463248e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1...</msg>
<status status="PASS" starttime="20201029 18:15:53.861" endtime="20201029 18:15:53.866"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:53.870" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:15:53.869" endtime="20201029 18:15:53.870"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:53.873" level="INFO">VALUE: [1.554999999875406e-06, 1.5410000004933977e-06, 1.5700000002283332e-06, 1.5700000002283332e-06, 1.542000000576138e-06, 1.5560000008463248e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.5700000002283332e-06, 1.5559999999581464e-06, 1.554999999875406e-06, 1.5699999993401548e-06, 1.5559999999581464e-06, 1.5419999996879596e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.5140000000357645e-06, 1.5550000007635845e-06, 1.5559999999581464e-06, 1.5000000006537562e-06, 1.5409999996052193e-06, 1.542000000576138e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.5829999995276012e-06, 1.554999999875406e-06, 1.5689999992574144e-06, 1.554999999875406e-06, 1.4999999997655777e-06, 1.5690000001455928e-06, 1.5280000003059513e-06, 1.5690000001455928e-06, 1.5559999999581464e-06, 1.5419999996879596e-06, 1.542000000576138e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5690000001455928e-06, 1.554999999875406e-06, 1.596999999797788e-06, 1.554999999875406e-06, 1.5280000003059513e-06, 1.5829999995276012e-06, 1.542000000576138e-06, 1.5970000006859664e-06, 1.5700000002283332e-06, 1.5410000004933977e-06, 1.4719999992252042e-06, 1.5689999992574144e-06, 1.5559999999581464e-06, 1.5690000001455928e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5689999992574144e-06, 1.5559999999581464e-06, 1.554999999875406e-06, 1.5830000004157796e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5690000001455928e-06, 1.5560000008463248e-06]</msg>
<status status="PASS" starttime="20201029 18:15:53.871" endtime="20201029 18:15:53.873"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:53.867" endtime="20201029 18:15:53.874"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:53.490" endtime="20201029 18:15:53.874"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:53.489" endtime="20201029 18:15:53.875"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:53.882" endtime="20201029 18:15:53.894"></status>
</kw>
<msg timestamp="20201029 18:15:53.895" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:53.881" endtime="20201029 18:15:53.895"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:53.897" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:53.896" endtime="20201029 18:15:53.897"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:53.898" endtime="20201029 18:15:53.900"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:53.878" endtime="20201029 18:15:53.900"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:53.877" endtime="20201029 18:15:53.901"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:53.907" endtime="20201029 18:15:54.214"></status>
</kw>
<msg timestamp="20201029 18:15:54.218" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.862478806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.862480278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:53.906" endtime="20201029 18:15:54.218"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:54.228" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.862478806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.862480278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:54.219" endtime="20201029 18:15:54.228"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:54.229" endtime="20201029 18:15:54.231"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:53.903" endtime="20201029 18:15:54.231"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:53.901" endtime="20201029 18:15:54.232"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:54.236" level="INFO">${RESULT} = [{'diff': 1.4719999992252042e-06}, {'diff': 1.5689999992574144e-06}, {'diff': 1.5559999999581464e-06}, {'diff': 1.5690000001455928e-06}, {'diff': 1.5419999996879596e-06}, {'diff': 1.5419999996879596e-...</msg>
<status status="PASS" starttime="20201029 18:15:54.233" endtime="20201029 18:15:54.236"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:15:54.241" level="INFO">${OVERHEAD} = {'diff': [1.4719999992252042e-06, 1.5689999992574144e-06, 1.5559999999581464e-06, 1.5690000001455928e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5689999992574144e-06, 1.5559999999581464e-06...</msg>
<status status="PASS" starttime="20201029 18:15:54.237" endtime="20201029 18:15:54.241"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:54.245" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:15:54.244" endtime="20201029 18:15:54.245"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:54.247" level="INFO">VALUE: [1.4719999992252042e-06, 1.5689999992574144e-06, 1.5559999999581464e-06, 1.5690000001455928e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5689999992574144e-06, 1.5559999999581464e-06, 1.554999999875406e-06, 1.5830000004157796e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5690000001455928e-06, 1.5560000008463248e-06, 1.5419999996879596e-06, 1.5559999999581464e-06, 1.5410000004933977e-06, 1.5559999999581464e-06, 1.5690000001455928e-06, 1.5409999996052193e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.542000000576138e-06, 1.5280000003059513e-06, 1.5559999999581464e-06, 1.5419999996879596e-06, 1.5559999999581464e-06, 1.596999999797788e-06, 1.5559999999581464e-06, 1.4999999997655777e-06, 1.5279999994177729e-06, 1.5550000007635845e-06, 1.5690000001455928e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5410000004933977e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5700000002283332e-06, 1.5419999996879596e-06, 1.5839999996103415e-06, 1.596999999797788e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.554999999875406e-06, 1.612000000150715e-06, 1.5690000001455928e-06, 1.5689999992574144e-06, 1.5559999999581464e-06, 1.5419999996879596e-06, 1.5690000001455928e-06, 1.4999999997655777e-06, 1.5690000001455928e-06, 1.554999999875406e-06, 1.5700000002283332e-06, 1.5550000007635845e-06, 1.5410000004933977e-06, 1.5559999999581464e-06, 1.554999999875406e-06, 1.554999999875406e-06, 1.554999999875406e-06, 1.5690000001455928e-06, 1.5000000006537562e-06, 1.5690000001455928e-06]</msg>
<status status="PASS" starttime="20201029 18:15:54.246" endtime="20201029 18:15:54.320"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.242" endtime="20201029 18:15:54.321"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:53.875" endtime="20201029 18:15:54.321"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:53.875" endtime="20201029 18:15:54.321"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:54.330" endtime="20201029 18:15:54.341"></status>
</kw>
<msg timestamp="20201029 18:15:54.342" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:54.328" endtime="20201029 18:15:54.342"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:54.344" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:54.343" endtime="20201029 18:15:54.345"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:54.345" endtime="20201029 18:15:54.347"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.325" endtime="20201029 18:15:54.347"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.323" endtime="20201029 18:15:54.348"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:54.354" endtime="20201029 18:15:54.681"></status>
</kw>
<msg timestamp="20201029 18:15:54.689" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.238340875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.238342444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:54.353" endtime="20201029 18:15:54.690"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:54.711" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.238340875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.238342444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:54.692" endtime="20201029 18:15:54.712"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:54.713" endtime="20201029 18:15:54.717"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.350" endtime="20201029 18:15:54.718"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.348" endtime="20201029 18:15:54.719"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:54.728" level="INFO">${RESULT} = [{'diff': 1.5690000001455928e-06}, {'diff': 1.4999999997655777e-06}, {'diff': 1.5690000001455928e-06}, {'diff': 1.554999999875406e-06}, {'diff': 1.5700000002283332e-06}, {'diff': 1.5550000007635845e-0...</msg>
<status status="PASS" starttime="20201029 18:15:54.720" endtime="20201029 18:15:54.728"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:15:54.739" level="INFO">${OVERHEAD} = {'diff': [1.5690000001455928e-06, 1.4999999997655777e-06, 1.5690000001455928e-06, 1.554999999875406e-06, 1.5700000002283332e-06, 1.5550000007635845e-06, 1.5410000004933977e-06, 1.5559999999581464e-06,...</msg>
<status status="PASS" starttime="20201029 18:15:54.730" endtime="20201029 18:15:54.740"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:54.745" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:15:54.744" endtime="20201029 18:15:54.746"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:54.748" level="INFO">VALUE: [1.5690000001455928e-06, 1.4999999997655777e-06, 1.5690000001455928e-06, 1.554999999875406e-06, 1.5700000002283332e-06, 1.5550000007635845e-06, 1.5410000004933977e-06, 1.5559999999581464e-06, 1.554999999875406e-06, 1.554999999875406e-06, 1.554999999875406e-06, 1.5690000001455928e-06, 1.5000000006537562e-06, 1.5690000001455928e-06, 1.554999999875406e-06, 1.5689999992574144e-06, 1.5690000001455928e-06, 1.5700000002283332e-06, 1.5690000001455928e-06, 1.4860000003835694e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5409999996052193e-06, 1.485999999495391e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.5700000002283332e-06, 1.542000000576138e-06, 1.5700000002283332e-06, 1.5560000008463248e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5689999992574144e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.5700000002283332e-06, 1.5690000001455928e-06, 1.5559999999581464e-06, 1.5409999996052193e-06, 1.5280000003059513e-06, 1.554999999875406e-06, 1.596999999797788e-06, 1.5560000008463248e-06, 1.5700000002283332e-06, 1.527000000223211e-06, 1.554999999875406e-06, 1.554999999875406e-06, 1.554999999875406e-06, 1.554999999875406e-06, 1.5839999996103415e-06, 1.554999999875406e-06, 1.5419999996879596e-06, 1.5559999999581464e-06, 1.5689999992574144e-06, 1.554999999875406e-06, 1.554999999875406e-06, 1.5700000002283332e-06, 1.5700000002283332e-06, 1.5690000001455928e-06, 1.5419999996879596e-06, 1.5700000002283332e-06, 1.5690000001455928e-06, 1.554999999875406e-06, 1.5559999999581464e-06]</msg>
<status status="PASS" starttime="20201029 18:15:54.747" endtime="20201029 18:15:54.749"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.741" endtime="20201029 18:15:54.749"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.322" endtime="20201029 18:15:54.750"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.322" endtime="20201029 18:15:54.750"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:54.758" endtime="20201029 18:15:54.770"></status>
</kw>
<msg timestamp="20201029 18:15:54.770" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:54.756" endtime="20201029 18:15:54.770"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:54.773" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:54.771" endtime="20201029 18:15:54.773"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:54.774" endtime="20201029 18:15:54.775"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.754" endtime="20201029 18:15:54.776"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.752" endtime="20201029 18:15:54.776"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:54.783" endtime="20201029 18:15:55.105"></status>
</kw>
<msg timestamp="20201029 18:15:55.109" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.676647792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.676649347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:54.781" endtime="20201029 18:15:55.110"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:55.119" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.676647792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.676649347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:55.110" endtime="20201029 18:15:55.119"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:55.120" endtime="20201029 18:15:55.122"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.778" endtime="20201029 18:15:55.122"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.777" endtime="20201029 18:15:55.123"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:55.127" level="INFO">${RESULT} = [{'diff': 1.554999999875406e-06}, {'diff': 1.5419999996879596e-06}, {'diff': 1.5559999999581464e-06}, {'diff': 1.5689999992574144e-06}, {'diff': 1.554999999875406e-06}, {'diff': 1.554999999875406e-06}...</msg>
<status status="PASS" starttime="20201029 18:15:55.124" endtime="20201029 18:15:55.127"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:15:55.133" level="INFO">${OVERHEAD} = {'diff': [1.554999999875406e-06, 1.5419999996879596e-06, 1.5559999999581464e-06, 1.5689999992574144e-06, 1.554999999875406e-06, 1.554999999875406e-06, 1.5700000002283332e-06, 1.5700000002283332e-06, 1...</msg>
<status status="PASS" starttime="20201029 18:15:55.128" endtime="20201029 18:15:55.133"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:55.137" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:15:55.136" endtime="20201029 18:15:55.137"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:55.139" level="INFO">VALUE: [1.554999999875406e-06, 1.5419999996879596e-06, 1.5559999999581464e-06, 1.5689999992574144e-06, 1.554999999875406e-06, 1.554999999875406e-06, 1.5700000002283332e-06, 1.5700000002283332e-06, 1.5690000001455928e-06, 1.5419999996879596e-06, 1.5700000002283332e-06, 1.5690000001455928e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.5280000003059513e-06, 1.5829999995276012e-06, 1.5690000001455928e-06, 1.5550000007635845e-06, 1.5549999989872276e-06, 1.5700000002283332e-06, 1.5560000008463248e-06, 1.5000000015419346e-06, 1.555999999069968e-06, 1.5970000006859664e-06, 1.5549999989872276e-06, 1.513999999147586e-06, 1.555999999069968e-06, 1.5560000008463248e-06, 1.5550000007635845e-06, 1.5419999996879596e-06, 1.5970000006859664e-06, 1.5550000007635845e-06, 1.5549999989872276e-06, 1.5690000001455928e-06, 1.555999999069968e-06, 1.5549999989872276e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5560000008463248e-06, 1.5550000007635845e-06, 1.5829999995276012e-06, 1.555999999069968e-06, 1.5560000008463248e-06, 1.5560000008463248e-06, 1.5550000007635845e-06, 1.5700000002283332e-06, 1.5829999995276012e-06, 1.5549999989872276e-06, 1.5560000008463248e-06, 1.5690000001455928e-06, 1.5560000008463248e-06, 1.5700000002283332e-06, 1.5700000002283332e-06, 1.5690000001455928e-06, 1.5419999996879596e-06, 1.555999999069968e-06, 1.5700000002283332e-06, 1.5560000008463248e-06, 1.555999999069968e-06, 1.5969999989096095e-06, 1.5280000003059513e-06, 1.5690000001455928e-06, 1.5280000003059513e-06, 1.5700000002283332e-06]</msg>
<status status="PASS" starttime="20201029 18:15:55.138" endtime="20201029 18:15:55.140"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:55.134" endtime="20201029 18:15:55.141"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.751" endtime="20201029 18:15:55.141"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.750" endtime="20201029 18:15:55.141"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:55.149" endtime="20201029 18:15:55.161"></status>
</kw>
<msg timestamp="20201029 18:15:55.162" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:55.148" endtime="20201029 18:15:55.162"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:55.164" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:55.163" endtime="20201029 18:15:55.165"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:55.165" endtime="20201029 18:15:55.167"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:55.145" endtime="20201029 18:15:55.167"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:55.143" endtime="20201029 18:15:55.168"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:55.174" endtime="20201029 18:15:55.491"></status>
</kw>
<msg timestamp="20201029 18:15:55.495" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.09432775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.094329306, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:15:55.173" endtime="20201029 18:15:55.495"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:55.505" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.09432775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.094329306, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:15:55.496" endtime="20201029 18:15:55.505"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:55.506" endtime="20201029 18:15:55.507"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:55.170" endtime="20201029 18:15:55.508"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:55.168" endtime="20201029 18:15:55.508"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:55.513" level="INFO">${RESULT} = [{'diff': 1.5560000008463248e-06}, {'diff': 1.5700000002283332e-06}, {'diff': 1.5700000002283332e-06}, {'diff': 1.5690000001455928e-06}, {'diff': 1.5419999996879596e-06}, {'diff': 1.555999999069968e-0...</msg>
<status status="PASS" starttime="20201029 18:15:55.509" endtime="20201029 18:15:55.513"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:15:55.517" level="INFO">${OVERHEAD} = {'diff': [1.5560000008463248e-06, 1.5700000002283332e-06, 1.5700000002283332e-06, 1.5690000001455928e-06, 1.5419999996879596e-06, 1.555999999069968e-06, 1.5700000002283332e-06, 1.5560000008463248e-06,...</msg>
<status status="PASS" starttime="20201029 18:15:55.514" endtime="20201029 18:15:55.518"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:55.522" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:15:55.521" endtime="20201029 18:15:55.522"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:55.524" level="INFO">VALUE: [1.5560000008463248e-06, 1.5700000002283332e-06, 1.5700000002283332e-06, 1.5690000001455928e-06, 1.5419999996879596e-06, 1.555999999069968e-06, 1.5700000002283332e-06, 1.5560000008463248e-06, 1.555999999069968e-06, 1.5969999989096095e-06, 1.5280000003059513e-06, 1.5690000001455928e-06, 1.5280000003059513e-06, 1.5700000002283332e-06, 1.5690000001455928e-06, 1.5410000013815761e-06, 1.583000001303958e-06, 1.5690000001455928e-06, 1.5560000008463248e-06, 1.5550000007635845e-06, 1.583000001303958e-06, 1.527000000223211e-06, 1.5550000007635845e-06, 1.5419999996879596e-06, 1.568999998369236e-06, 1.5560000008463248e-06, 1.5419999996879596e-06, 1.5690000001455928e-06, 1.5549999989872276e-06, 1.5419999996879596e-06, 1.5549999989872276e-06, 1.5690000001455928e-06, 1.5550000007635845e-06, 1.5829999995276012e-06, 1.5690000001455928e-06, 1.555999999069968e-06, 1.5560000008463248e-06, 1.555999999069968e-06, 1.583000001303958e-06, 1.5549999989872276e-06, 1.5690000001455928e-06, 1.5419999996879596e-06, 1.5690000001455928e-06, 1.5690000001455928e-06, 1.5560000008463248e-06, 1.5560000008463248e-06, 1.5690000001455928e-06, 1.5549999989872276e-06, 1.555999999069968e-06, 1.555999999069968e-06, 1.5560000008463248e-06, 1.5420000014643165e-06, 1.5700000002283332e-06, 1.5700000002283332e-06, 1.5839999996103415e-06, 1.5549999989872276e-06, 1.5700000002283332e-06, 1.5560000008463248e-06, 1.555999999069968e-06, 1.5280000003059513e-06, 1.5690000001455928e-06, 1.5549999989872276e-06, 1.568999998369236e-06, 1.5419999996879596e-06]</msg>
<status status="PASS" starttime="20201029 18:15:55.523" endtime="20201029 18:15:55.525"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:55.518" endtime="20201029 18:15:55.525"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:55.142" endtime="20201029 18:15:55.526"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:55.142" endtime="20201029 18:15:55.526"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:55.536" endtime="20201029 18:15:55.549"></status>
</kw>
<msg timestamp="20201029 18:15:55.549" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:55.534" endtime="20201029 18:15:55.550"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:55.552" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:55.550" endtime="20201029 18:15:55.552"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:55.553" endtime="20201029 18:15:55.554"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:55.530" endtime="20201029 18:15:55.555"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:55.528" endtime="20201029 18:15:55.555"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:55.562" endtime="20201029 18:15:55.883"></status>
</kw>
<msg timestamp="20201029 18:15:55.887" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.475737958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.475739514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:55.560" endtime="20201029 18:15:55.887"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:55.897" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.475737958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.475739514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:55.888" endtime="20201029 18:15:55.897"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:55.898" endtime="20201029 18:15:55.899"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:55.558" endtime="20201029 18:15:55.900"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:55.556" endtime="20201029 18:15:55.900"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:55.905" level="INFO">${RESULT} = [{'diff': 1.5560000008463248e-06}, {'diff': 1.5420000014643165e-06}, {'diff': 1.5700000002283332e-06}, {'diff': 1.5700000002283332e-06}, {'diff': 1.5839999996103415e-06}, {'diff': 1.5549999989872276e-...</msg>
<status status="PASS" starttime="20201029 18:15:55.901" endtime="20201029 18:15:55.905"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:15:55.910" level="INFO">${OVERHEAD} = {'diff': [1.5560000008463248e-06, 1.5420000014643165e-06, 1.5700000002283332e-06, 1.5700000002283332e-06, 1.5839999996103415e-06, 1.5549999989872276e-06, 1.5700000002283332e-06, 1.5560000008463248e-06...</msg>
<status status="PASS" starttime="20201029 18:15:55.906" endtime="20201029 18:15:55.910"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:55.914" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:15:55.913" endtime="20201029 18:15:55.914"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:55.917" level="INFO">VALUE: [1.5560000008463248e-06, 1.5420000014643165e-06, 1.5700000002283332e-06, 1.5700000002283332e-06, 1.5839999996103415e-06, 1.5549999989872276e-06, 1.5700000002283332e-06, 1.5560000008463248e-06, 1.555999999069968e-06, 1.5280000003059513e-06, 1.5690000001455928e-06, 1.5549999989872276e-06, 1.568999998369236e-06, 1.5419999996879596e-06, 1.568999998369236e-06, 1.5419999996879596e-06, 1.555999999069968e-06, 1.624999999449983e-06, 1.5409999996052193e-06, 1.5690000001455928e-06, 1.5560000008463248e-06, 1.5829999995276012e-06, 1.5690000001455928e-06, 1.555999999069968e-06, 1.5420000014643165e-06, 1.5419999996879596e-06, 1.527000000223211e-06, 1.5549999989872276e-06, 1.5560000008463248e-06, 1.5690000001455928e-06, 1.5839999996103415e-06, 1.5560000008463248e-06, 1.5550000007635845e-06, 1.555999999069968e-06, 1.5410000013815761e-06, 1.5560000008463248e-06, 1.5560000008463248e-06, 1.5549999989872276e-06, 1.5280000003059513e-06, 1.5549999989872276e-06, 1.5560000008463248e-06, 1.555999999069968e-06, 1.555999999069968e-06, 1.555999999069968e-06, 1.5829999995276012e-06, 1.5000000015419346e-06, 1.5690000001455928e-06, 1.5560000008463248e-06, 1.5550000007635845e-06, 1.5550000007635845e-06, 1.5700000002283332e-06, 1.5550000007635845e-06, 1.5690000001455928e-06, 1.5560000008463248e-06, 1.5420000014643165e-06, 1.555999999069968e-06, 1.5700000002283332e-06, 1.5560000008463248e-06, 1.5550000007635845e-06, 1.5700000002283332e-06, 1.5550000007635845e-06, 1.555999999069968e-06, 1.5560000008463248e-06, 1.5549999989872276e-06]</msg>
<status status="PASS" starttime="20201029 18:15:55.915" endtime="20201029 18:15:55.917"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:55.911" endtime="20201029 18:15:55.918"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:55.527" endtime="20201029 18:15:55.918"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:55.526" endtime="20201029 18:15:55.919"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:55.926" endtime="20201029 18:15:55.939"></status>
</kw>
<msg timestamp="20201029 18:15:55.939" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:55.925" endtime="20201029 18:15:55.940"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:55.942" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:55.940" endtime="20201029 18:15:55.942"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:55.943" endtime="20201029 18:15:55.945"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:55.922" endtime="20201029 18:15:55.945"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:55.921" endtime="20201029 18:15:55.946"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:55.952" endtime="20201029 18:15:56.273"></status>
</kw>
<msg timestamp="20201029 18:15:56.277" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.853509319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.853510889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:55.950" endtime="20201029 18:15:56.277"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:56.286" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.853509319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.853510889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:56.278" endtime="20201029 18:15:56.287"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:56.288" endtime="20201029 18:15:56.289"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:55.948" endtime="20201029 18:15:56.290"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:55.946" endtime="20201029 18:15:56.290"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:56.294" level="INFO">${RESULT} = [{'diff': 1.5700000002283332e-06}, {'diff': 1.5550000007635845e-06}, {'diff': 1.5690000001455928e-06}, {'diff': 1.5560000008463248e-06}, {'diff': 1.5420000014643165e-06}, {'diff': 1.555999999069968e-0...</msg>
<status status="PASS" starttime="20201029 18:15:56.291" endtime="20201029 18:15:56.295"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:15:56.300" level="INFO">${OVERHEAD} = {'diff': [1.5700000002283332e-06, 1.5550000007635845e-06, 1.5690000001455928e-06, 1.5560000008463248e-06, 1.5420000014643165e-06, 1.555999999069968e-06, 1.5700000002283332e-06, 1.5560000008463248e-06,...</msg>
<status status="PASS" starttime="20201029 18:15:56.295" endtime="20201029 18:15:56.300"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:56.304" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:15:56.303" endtime="20201029 18:15:56.305"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:56.307" level="INFO">VALUE: [1.5700000002283332e-06, 1.5550000007635845e-06, 1.5690000001455928e-06, 1.5560000008463248e-06, 1.5420000014643165e-06, 1.555999999069968e-06, 1.5700000002283332e-06, 1.5560000008463248e-06, 1.5550000007635845e-06, 1.5700000002283332e-06, 1.5550000007635845e-06, 1.555999999069968e-06, 1.5560000008463248e-06, 1.5549999989872276e-06, 1.5690000001455928e-06, 1.5420000014643165e-06, 1.5700000002283332e-06, 1.5560000008463248e-06, 1.5700000002283332e-06, 1.555999999069968e-06, 1.5409999996052193e-06, 1.5690000001455928e-06, 1.5409999996052193e-06, 1.555999999069968e-06, 1.5829999995276012e-06, 1.5550000007635845e-06, 1.555999999069968e-06, 1.5690000001455928e-06, 1.5700000002283332e-06, 1.555999999069968e-06, 1.5279999985295944e-06, 1.4999999997655777e-06, 1.555999999069968e-06, 1.5690000001455928e-06, 1.5690000001455928e-06, 1.5690000001455928e-06, 1.5560000008463248e-06, 1.5700000002283332e-06, 1.5550000007635845e-06, 1.5550000007635845e-06, 1.5550000007635845e-06, 1.5560000008463248e-06, 1.5690000001455928e-06, 1.568999998369236e-06, 1.5560000008463248e-06, 1.5700000002283332e-06, 1.555999999069968e-06, 1.5700000002283332e-06, 1.5560000008463248e-06, 1.5550000007635845e-06, 1.583000001303958e-06, 1.5560000008463248e-06, 1.5690000001455928e-06, 1.5550000007635845e-06, 1.5700000002283332e-06, 1.5690000001455928e-06, 1.5560000008463248e-06, 1.5700000002283332e-06, 1.555999999069968e-06, 1.4860000003835694e-06, 1.5000000015419346e-06, 1.5549999989872276e-06, 1.5550000007635845e-06, 1.5690000001455928e-06]</msg>
<status status="PASS" starttime="20201029 18:15:56.305" endtime="20201029 18:15:56.308"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:56.301" endtime="20201029 18:15:56.308"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:55.919" endtime="20201029 18:15:56.309"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:55.919" endtime="20201029 18:15:56.309"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:56.317" endtime="20201029 18:15:56.328"></status>
</kw>
<msg timestamp="20201029 18:15:56.329" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:56.315" endtime="20201029 18:15:56.329"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:56.331" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:56.330" endtime="20201029 18:15:56.332"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:56.332" endtime="20201029 18:15:56.334"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:56.313" endtime="20201029 18:15:56.335"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:56.311" endtime="20201029 18:15:56.335"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:56.342" endtime="20201029 18:15:56.655"></status>
</kw>
<msg timestamp="20201029 18:15:56.659" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 9.232897, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 9.232898583, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:15:56.341" endtime="20201029 18:15:56.659"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:56.669" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 9.232897, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 9.232898583, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:15:56.660" endtime="20201029 18:15:56.669"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:56.670" endtime="20201029 18:15:56.672"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:56.337" endtime="20201029 18:15:56.672"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:56.336" endtime="20201029 18:15:56.673"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:56.677" level="INFO">${RESULT} = [{'diff': 1.583000001303958e-06}, {'diff': 1.5560000008463248e-06}, {'diff': 1.5690000001455928e-06}, {'diff': 1.5550000007635845e-06}, {'diff': 1.5700000002283332e-06}, {'diff': 1.5690000001455928e-0...</msg>
<status status="PASS" starttime="20201029 18:15:56.673" endtime="20201029 18:15:56.677"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:15:56.681" level="INFO">${OVERHEAD} = {'diff': [1.583000001303958e-06, 1.5560000008463248e-06, 1.5690000001455928e-06, 1.5550000007635845e-06, 1.5700000002283332e-06, 1.5690000001455928e-06, 1.5560000008463248e-06, 1.5700000002283332e-06,...</msg>
<status status="PASS" starttime="20201029 18:15:56.678" endtime="20201029 18:15:56.682"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:56.686" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:15:56.685" endtime="20201029 18:15:56.686"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:56.689" level="INFO">VALUE: [1.583000001303958e-06, 1.5560000008463248e-06, 1.5690000001455928e-06, 1.5550000007635845e-06, 1.5700000002283332e-06, 1.5690000001455928e-06, 1.5560000008463248e-06, 1.5700000002283332e-06, 1.555999999069968e-06, 1.4860000003835694e-06, 1.5000000015419346e-06, 1.5549999989872276e-06, 1.5550000007635845e-06, 1.5690000001455928e-06, 1.5700000002283332e-06, 1.555999999069968e-06, 1.555999999069968e-06, 1.5550000007635845e-06, 1.5550000007635845e-06, 1.5550000007635845e-06, 1.5560000008463248e-06, 1.5549999989872276e-06, 1.5560000008463248e-06, 1.555999999069968e-06, 1.4999999997655777e-06, 1.5560000008463248e-06, 1.5560000008463248e-06, 1.5560000008463248e-06, 1.5839999996103415e-06, 1.5700000002283332e-06, 1.5549999989872276e-06, 1.555999999069968e-06, 1.5690000001455928e-06, 1.555999999069968e-06, 1.555999999069968e-06, 1.5560000008463248e-06, 1.5280000003059513e-06, 1.5550000007635845e-06, 1.555999999069968e-06, 1.5700000002283332e-06, 1.5560000008463248e-06, 1.5700000002283332e-06, 1.5550000007635845e-06, 1.5549999989872276e-06, 1.5700000002283332e-06, 1.5690000001455928e-06, 1.555999999069968e-06, 1.5690000001455928e-06, 1.5280000003059513e-06, 1.5690000001455928e-06, 1.5700000002283332e-06, 1.5700000002283332e-06, 1.5409999996052193e-06, 1.5700000002283332e-06, 1.5690000001455928e-06, 1.5549999989872276e-06, 1.5560000008463248e-06, 1.5969999989096095e-06, 1.555999999069968e-06, 1.555999999069968e-06, 1.5690000001455928e-06, 1.526999998446854e-06, 1.5560000008463248e-06, 1.5549999989872276e-06]</msg>
<status status="PASS" starttime="20201029 18:15:56.687" endtime="20201029 18:15:56.690"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:56.682" endtime="20201029 18:15:56.690"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:56.310" endtime="20201029 18:15:56.691"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:56.309" endtime="20201029 18:15:56.691"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:56.698" endtime="20201029 18:15:56.709"></status>
</kw>
<msg timestamp="20201029 18:15:56.710" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:56.697" endtime="20201029 18:15:56.710"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:56.712" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:56.711" endtime="20201029 18:15:56.713"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:56.713" endtime="20201029 18:15:56.715"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:56.694" endtime="20201029 18:15:56.716"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:56.693" endtime="20201029 18:15:56.716"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:56.722" endtime="20201029 18:15:57.036"></status>
</kw>
<msg timestamp="20201029 18:15:57.040" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 9.613380083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 9.613381653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:56.721" endtime="20201029 18:15:57.040"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:57.050" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 9.613380083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 9.613381653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:57.041" endtime="20201029 18:15:57.050"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:57.051" endtime="20201029 18:15:57.053"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:56.718" endtime="20201029 18:15:57.053"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:56.717" endtime="20201029 18:15:57.054"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:57.058" level="INFO">${RESULT} = [{'diff': 1.5700000002283332e-06}, {'diff': 1.5700000002283332e-06}, {'diff': 1.5409999996052193e-06}, {'diff': 1.5700000002283332e-06}, {'diff': 1.5690000001455928e-06}, {'diff': 1.5549999989872276e-...</msg>
<status status="PASS" starttime="20201029 18:15:57.054" endtime="20201029 18:15:57.058"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:15:57.063" level="INFO">${OVERHEAD} = {'diff': [1.5700000002283332e-06, 1.5700000002283332e-06, 1.5409999996052193e-06, 1.5700000002283332e-06, 1.5690000001455928e-06, 1.5549999989872276e-06, 1.5560000008463248e-06, 1.5969999989096095e-06...</msg>
<status status="PASS" starttime="20201029 18:15:57.059" endtime="20201029 18:15:57.064"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:57.067" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:15:57.066" endtime="20201029 18:15:57.068"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:57.070" level="INFO">VALUE: [1.5700000002283332e-06, 1.5700000002283332e-06, 1.5409999996052193e-06, 1.5700000002283332e-06, 1.5690000001455928e-06, 1.5549999989872276e-06, 1.5560000008463248e-06, 1.5969999989096095e-06, 1.555999999069968e-06, 1.555999999069968e-06, 1.5690000001455928e-06, 1.526999998446854e-06, 1.5560000008463248e-06, 1.5549999989872276e-06, 1.5969999989096095e-06, 1.5829999995276012e-06, 1.5409999996052193e-06, 1.5560000008463248e-06, 1.5700000002283332e-06, 1.5560000008463248e-06, 1.5550000007635845e-06, 1.5549999989872276e-06, 1.5690000001455928e-06, 1.5560000008463248e-06, 1.5419999996879596e-06, 1.5829999995276012e-06, 1.5690000001455928e-06, 1.5690000001455928e-06, 1.5969999989096095e-06, 1.5550000007635845e-06, 1.5560000008463248e-06, 1.5700000002283332e-06, 1.5560000008463248e-06, 1.5690000001455928e-06, 1.5550000007635845e-06, 1.5839999996103415e-06, 1.5700000002283332e-06, 1.5690000001455928e-06, 1.5560000008463248e-06, 1.555999999069968e-06, 1.5549999989872276e-06, 1.5560000008463248e-06, 1.5560000008463248e-06, 1.5280000003059513e-06, 1.568999998369236e-06, 1.555999999069968e-06, 1.5550000007635845e-06, 1.5690000001455928e-06, 1.5829999995276012e-06, 1.5700000002283332e-06, 1.5700000002283332e-06, 1.5690000001455928e-06, 1.5700000002283332e-06, 1.4999999997655777e-06, 1.5419999996879596e-06, 1.5970000006859664e-06, 1.5550000007635845e-06, 1.5550000007635845e-06, 1.5690000001455928e-06, 1.5549999989872276e-06, 1.5410000013815761e-06, 1.5549999989872276e-06, 1.513999999147586e-06, 1.5550000007635845e-06]</msg>
<status status="PASS" starttime="20201029 18:15:57.069" endtime="20201029 18:15:57.071"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:57.064" endtime="20201029 18:15:57.071"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:56.692" endtime="20201029 18:15:57.072"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:56.691" endtime="20201029 18:15:57.072"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:57.080" endtime="20201029 18:15:57.092"></status>
</kw>
<msg timestamp="20201029 18:15:57.092" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:57.078" endtime="20201029 18:15:57.093"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:57.095" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:57.093" endtime="20201029 18:15:57.095"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:57.096" endtime="20201029 18:15:57.098"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:57.076" endtime="20201029 18:15:57.098"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:57.074" endtime="20201029 18:15:57.098"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:57.105" endtime="20201029 18:15:57.424"></status>
</kw>
<msg timestamp="20201029 18:15:57.428" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 9.987072458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 9.987074028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:57.103" endtime="20201029 18:15:57.429"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:57.438" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 9.987072458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 9.987074028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:57.429" endtime="20201029 18:15:57.439"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:57.439" endtime="20201029 18:15:57.441"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:57.101" endtime="20201029 18:15:57.442"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:57.099" endtime="20201029 18:15:57.442"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:57.446" level="INFO">${RESULT} = [{'diff': 1.5700000002283332e-06}, {'diff': 1.5690000001455928e-06}, {'diff': 1.5700000002283332e-06}, {'diff': 1.4999999997655777e-06}, {'diff': 1.5419999996879596e-06}, {'diff': 1.5970000006859664e-...</msg>
<status status="PASS" starttime="20201029 18:15:57.443" endtime="20201029 18:15:57.447"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:15:57.451" level="INFO">${OVERHEAD} = {'diff': [1.5700000002283332e-06, 1.5690000001455928e-06, 1.5700000002283332e-06, 1.4999999997655777e-06, 1.5419999996879596e-06, 1.5970000006859664e-06, 1.5550000007635845e-06, 1.5550000007635845e-06...</msg>
<status status="PASS" starttime="20201029 18:15:57.448" endtime="20201029 18:15:57.452"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:57.456" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:15:57.455" endtime="20201029 18:15:57.456"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:57.459" level="INFO">VALUE: [1.5700000002283332e-06, 1.5690000001455928e-06, 1.5700000002283332e-06, 1.4999999997655777e-06, 1.5419999996879596e-06, 1.5970000006859664e-06, 1.5550000007635845e-06, 1.5550000007635845e-06, 1.5690000001455928e-06, 1.5549999989872276e-06, 1.5410000013815761e-06, 1.5549999989872276e-06, 1.513999999147586e-06, 1.5550000007635845e-06, 1.5550000007635845e-06, 1.5550000007635845e-06, 1.5560000008463248e-06, 1.5419999996879596e-06, 1.5410000013815761e-06, 1.5690000001455928e-06, 1.555999999069968e-06, 1.5550000007635845e-06, 1.5690000001455928e-06, 1.5549999989872276e-06, 1.555999999069968e-06, 1.555999999069968e-06, 1.5560000008463248e-06, 1.5550000007635845e-06, 1.5550000007635845e-06, 1.5690000001455928e-06, 1.5560000008463248e-06, 1.5700000002283332e-06, 1.5560000008463248e-06, 1.513999999147586e-06, 1.5700000002283332e-06, 1.5560000008463248e-06, 1.5419999996879596e-06, 1.5280000003059513e-06, 1.5550000007635845e-06, 1.5690000001455928e-06, 1.5700000002283332e-06, 1.5560000008463248e-06, 1.5980000007687067e-06, 1.5700000002283332e-06, 1.5550000007635845e-06, 1.5970000006859664e-06, 1.5550000007635845e-06, 1.5690000001455928e-06, 1.5560000008463248e-06, 1.5690000001455928e-06, 1.5549999989872276e-06, 1.5560000008463248e-06, 1.5700000002283332e-06, 1.5560000008463248e-06, 1.5550000007635845e-06, 1.555999999069968e-06, 1.555999999069968e-06, 1.555999999069968e-06, 1.555999999069968e-06, 1.5550000007635845e-06, 1.4860000003835694e-06, 1.5560000008463248e-06, 1.4999999997655777e-06, 1.555999999069968e-06]</msg>
<status status="PASS" starttime="20201029 18:15:57.457" endtime="20201029 18:15:57.460"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:57.452" endtime="20201029 18:15:57.460"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:57.073" endtime="20201029 18:15:57.461"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:57.072" endtime="20201029 18:15:57.461"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:49.634" endtime="20201029 18:15:57.461"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 18:15:46.512" endtime="20201029 18:15:57.462" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:57.468" endtime="20201029 18:15:57.488"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:57.467" endtime="20201029 18:15:57.488"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:57.504" endtime="20201029 18:16:00.525"></status>
</kw>
<msg timestamp="20201029 18:16:00.526" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:57.502" endtime="20201029 18:16:00.527"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:00.532" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:00.529" endtime="20201029 18:16:00.533"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:16:00.538" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:16:00.534" endtime="20201029 18:16:00.539"></status>
</kw>
<status status="FAIL" starttime="20201029 18:15:57.500" endtime="20201029 18:16:00.541"></status>
</kw>
<status status="FAIL" starttime="20201029 18:15:57.497" endtime="20201029 18:16:00.542"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:57.496" endtime="20201029 18:16:00.543"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:16:00.551" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:16:00.549" endtime="20201029 18:16:00.552"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:00.545" endtime="20201029 18:16:00.552"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:57.495" endtime="20201029 18:16:00.553"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:57.495" endtime="20201029 18:16:00.553"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:00.555" endtime="20201029 18:16:00.558"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:57.491" endtime="20201029 18:16:00.559"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:57.489" endtime="20201029 18:16:00.560"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:57.466" endtime="20201029 18:16:00.561"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>02</arg>
<arg>set</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:00.578" endtime="20201029 18:16:00.600"></status>
</kw>
<msg timestamp="20201029 18:16:00.600" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:00.575" endtime="20201029 18:16:00.601"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:00.604" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:00.602" endtime="20201029 18:16:00.604"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:00.605" endtime="20201029 18:16:00.608"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:00.569" endtime="20201029 18:16:00.608"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:00.565" endtime="20201029 18:16:00.609"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:00.612" endtime="20201029 18:16:00.614"></status>
</kw>
<msg timestamp="20201029 18:16:00.615" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201029 18:16:00.610" endtime="20201029 18:16:00.615"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:00.620" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 18:16:00.619" endtime="20201029 18:16:00.621"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:00.625" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 18:16:00.622" endtime="20201029 18:16:00.625"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:00.616" endtime="20201029 18:16:00.626"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:00.636" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 18:16:00.634" endtime="20201029 18:16:00.637"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:00.639" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 18:16:00.637" endtime="20201029 18:16:00.639"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:00.627" endtime="20201029 18:16:00.640"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:00.646" endtime="20201029 18:16:00.946"></status>
</kw>
<msg timestamp="20201029 18:16:00.949" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.102248944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.102253917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:00.645" endtime="20201029 18:16:00.950"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:00.957" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.102248944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.102253917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:00.950" endtime="20201029 18:16:00.958"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:00.959" endtime="20201029 18:16:00.960"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:00.642" endtime="20201029 18:16:00.961"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:00.640" endtime="20201029 18:16:00.961"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:00.965" level="INFO">${RESULT} = [{'diff': 4.973000000241257e-06}, {'diff': 5.070000000273467e-06}, {'diff': 5.027999999906996e-06}, {'diff': 5.083000000016824e-06}, {'diff': 5.0840000000995644e-06}, {'diff': 5.069999999829378e-06}, ...</msg>
<status status="PASS" starttime="20201029 18:16:00.962" endtime="20201029 18:16:00.965"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:16:00.969" level="INFO">${OVERHEAD} = {'diff': [4.973000000241257e-06, 5.070000000273467e-06, 5.027999999906996e-06, 5.083000000016824e-06, 5.0840000000995644e-06, 5.069999999829378e-06, 5.096999999842922e-06, 5.0690000001907265e-06, 5.08...</msg>
<status status="PASS" starttime="20201029 18:16:00.966" endtime="20201029 18:16:00.969"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:00.975" level="INFO">NAME: overhead-02-set-first-timer</msg>
<status status="PASS" starttime="20201029 18:16:00.973" endtime="20201029 18:16:00.975"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:00.977" level="INFO">VALUE: [4.973000000241257e-06, 5.070000000273467e-06, 5.027999999906996e-06, 5.083000000016824e-06, 5.0840000000995644e-06, 5.069999999829378e-06, 5.096999999842922e-06, 5.0690000001907265e-06, 5.0840000000995644e-06, 5.068999999746637e-06, 5.097999999925662e-06, 5.012999999998158e-06, 5.139000000209393e-06, 5.070000000273467e-06, 5.027999999906996e-06, 5.083000000016824e-06, 5.068999999746637e-06, 5.0690000001907265e-06, 5.014000000080898e-06, 5.0840000000995644e-06, 5.069999999829378e-06, 5.083000000016824e-06, 5.069999999829378e-06, 5.139000000209393e-06, 5.0840000000995644e-06, 5.0690000001907265e-06, 5.070000000273467e-06, 5.05600000000328e-06, 5.083999999655475e-06, 5.096999999842922e-06, 5.0690000001907265e-06, 5.069999999829378e-06, 5.070000000273467e-06, 5.014000000080898e-06, 5.0690000001907265e-06, 5.05499999992054e-06, 5.083000000016824e-06, 5.012999999998158e-06, 5.0840000000995644e-06, 5.096999999842922e-06, 5.083999999655475e-06, 5.0840000000995644e-06, 5.068999999746637e-06, 5.05600000000328e-06, 5.083000000016824e-06, 5.124999999939206e-06, 5.083000000016824e-06, 5.05600000000328e-06, 5.069999999829378e-06, 5.05600000000328e-06]</msg>
<status status="PASS" starttime="20201029 18:16:00.976" endtime="20201029 18:16:00.978"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:00.970" endtime="20201029 18:16:00.979"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:00.562" endtime="20201029 18:16:00.979"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 18:15:57.463" endtime="20201029 18:16:00.980" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Set Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:00.987" endtime="20201029 18:16:01.007"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:00.986" endtime="20201029 18:16:01.008"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:01.021" endtime="20201029 18:16:04.042"></status>
</kw>
<msg timestamp="20201029 18:16:04.043" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:01.019" endtime="20201029 18:16:04.044"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:04.048" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:04.045" endtime="20201029 18:16:04.049"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:16:04.055" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:16:04.051" endtime="20201029 18:16:04.055"></status>
</kw>
<status status="FAIL" starttime="20201029 18:16:01.017" endtime="20201029 18:16:04.057"></status>
</kw>
<status status="FAIL" starttime="20201029 18:16:01.014" endtime="20201029 18:16:04.058"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:01.013" endtime="20201029 18:16:04.059"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:16:04.066" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:16:04.065" endtime="20201029 18:16:04.067"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:04.060" endtime="20201029 18:16:04.067"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:01.012" endtime="20201029 18:16:04.068"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:01.012" endtime="20201029 18:16:04.068"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:04.070" endtime="20201029 18:16:04.073"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:01.010" endtime="20201029 18:16:04.074"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:01.009" endtime="20201029 18:16:04.075"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:00.985" endtime="20201029 18:16:04.075"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>03</arg>
<arg>set</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:04.095" endtime="20201029 18:16:04.163"></status>
</kw>
<msg timestamp="20201029 18:16:04.163" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:04.089" endtime="20201029 18:16:04.163"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:04.166" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:04.164" endtime="20201029 18:16:04.166"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:04.167" endtime="20201029 18:16:04.168"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:04.084" endtime="20201029 18:16:04.169"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:04.080" endtime="20201029 18:16:04.169"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:04.172" endtime="20201029 18:16:04.173"></status>
</kw>
<msg timestamp="20201029 18:16:04.174" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201029 18:16:04.170" endtime="20201029 18:16:04.174"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:04.178" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 18:16:04.177" endtime="20201029 18:16:04.178"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:04.180" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 18:16:04.179" endtime="20201029 18:16:04.180"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:04.175" endtime="20201029 18:16:04.181"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:04.185" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 18:16:04.184" endtime="20201029 18:16:04.185"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:04.187" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 18:16:04.186" endtime="20201029 18:16:04.187"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:04.182" endtime="20201029 18:16:04.188"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:04.194" endtime="20201029 18:16:04.493"></status>
</kw>
<msg timestamp="20201029 18:16:04.496" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.099659431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.099692972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:04.193" endtime="20201029 18:16:04.496"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:04.504" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.099659431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.099692972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:04.497" endtime="20201029 18:16:04.504"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:04.505" endtime="20201029 18:16:04.507"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:04.190" endtime="20201029 18:16:04.507"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:04.188" endtime="20201029 18:16:04.508"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:04.512" level="INFO">${RESULT} = [{'diff': 3.354100000008131e-05}, {'diff': 3.363899999975217e-05}, {'diff': 3.365300000002236e-05}, {'diff': 3.365300000002236e-05}, {'diff': 3.365300000002236e-05}, {'diff': 3.3681000000118644e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:16:04.508" endtime="20201029 18:16:04.512"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:16:04.517" level="INFO">${OVERHEAD} = {'diff': [3.354100000008131e-05, 3.363899999975217e-05, 3.365300000002236e-05, 3.365300000002236e-05, 3.365300000002236e-05, 3.3681000000118644e-05, 3.366699999984846e-05, 3.365300000002236e-05, 3.365...</msg>
<status status="PASS" starttime="20201029 18:16:04.513" endtime="20201029 18:16:04.517"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:04.521" level="INFO">NAME: overhead-03-set-middle-timer</msg>
<status status="PASS" starttime="20201029 18:16:04.520" endtime="20201029 18:16:04.522"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:04.524" level="INFO">VALUE: [3.354100000008131e-05, 3.363899999975217e-05, 3.365300000002236e-05, 3.365300000002236e-05, 3.365300000002236e-05, 3.3681000000118644e-05, 3.366699999984846e-05, 3.365300000002236e-05, 3.365199999993962e-05, 3.3625000000370164e-05, 3.3624999999926075e-05, 3.3681000000118644e-05, 3.365300000002236e-05, 3.3624999999926075e-05, 3.366599999976572e-05, 3.3681000000118644e-05, 3.363899999975217e-05, 3.3666000000209806e-05, 3.366699999984846e-05, 3.373600000022847e-05, 3.363899999975217e-05, 3.366699999984846e-05, 3.3667000000292546e-05, 3.365199999993962e-05, 3.3680000000035903e-05, 3.366699999984846e-05, 3.359699999982979e-05, 3.365300000002236e-05, 3.365300000002236e-05, 3.3681000000118644e-05, 3.3680000000035903e-05, 3.3667000000292546e-05, 3.365300000002236e-05, 3.3624999999926075e-05, 3.365300000002236e-05, 3.363899999975217e-05, 3.3693999999862e-05, 3.363900000019626e-05, 3.361100000009998e-05, 3.3666000000209806e-05, 3.3667000000292546e-05, 3.373600000022847e-05, 3.363899999975217e-05, 3.369499999994474e-05, 3.365199999993962e-05, 3.359700000027388e-05, 3.366699999984846e-05, 3.373600000022847e-05, 3.3680999999674555e-05, 3.365199999993962e-05]</msg>
<status status="PASS" starttime="20201029 18:16:04.522" endtime="20201029 18:16:04.524"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:04.518" endtime="20201029 18:16:04.525"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:04.076" endtime="20201029 18:16:04.525"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 18:16:00.982" endtime="20201029 18:16:04.526" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="Measure Overhead Set Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:04.533" endtime="20201029 18:16:04.552"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:04.531" endtime="20201029 18:16:04.553"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:04.567" endtime="20201029 18:16:07.588"></status>
</kw>
<msg timestamp="20201029 18:16:07.589" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:04.566" endtime="20201029 18:16:07.589"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:07.594" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:07.591" endtime="20201029 18:16:07.595"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:16:07.600" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:16:07.596" endtime="20201029 18:16:07.601"></status>
</kw>
<status status="FAIL" starttime="20201029 18:16:04.563" endtime="20201029 18:16:07.602"></status>
</kw>
<status status="FAIL" starttime="20201029 18:16:04.560" endtime="20201029 18:16:07.603"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:04.558" endtime="20201029 18:16:07.604"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:16:07.612" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:16:07.610" endtime="20201029 18:16:07.615"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:07.606" endtime="20201029 18:16:07.615"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:04.557" endtime="20201029 18:16:07.615"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:04.556" endtime="20201029 18:16:07.616"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:07.617" endtime="20201029 18:16:07.620"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:04.555" endtime="20201029 18:16:07.622"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:04.553" endtime="20201029 18:16:07.623"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:04.530" endtime="20201029 18:16:07.623"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>04</arg>
<arg>set</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:07.641" endtime="20201029 18:16:07.835"></status>
</kw>
<msg timestamp="20201029 18:16:07.835" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:07.637" endtime="20201029 18:16:07.835"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:07.838" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:07.836" endtime="20201029 18:16:07.838"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:07.839" endtime="20201029 18:16:07.840"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:07.632" endtime="20201029 18:16:07.841"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:07.628" endtime="20201029 18:16:07.841"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:07.843" endtime="20201029 18:16:07.846"></status>
</kw>
<msg timestamp="20201029 18:16:07.846" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201029 18:16:07.842" endtime="20201029 18:16:07.846"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:07.850" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 18:16:07.849" endtime="20201029 18:16:07.850"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:07.852" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 18:16:07.851" endtime="20201029 18:16:07.852"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:07.847" endtime="20201029 18:16:07.853"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:07.857" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 18:16:07.856" endtime="20201029 18:16:07.857"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:07.859" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 18:16:07.858" endtime="20201029 18:16:07.859"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:07.854" endtime="20201029 18:16:07.860"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:07.866" endtime="20201029 18:16:08.167"></status>
</kw>
<msg timestamp="20201029 18:16:08.170" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.102892944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.102956861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:07.865" endtime="20201029 18:16:08.170"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:08.184" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.102892944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.102956861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:08.176" endtime="20201029 18:16:08.185"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:08.185" endtime="20201029 18:16:08.187"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:07.862" endtime="20201029 18:16:08.188"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:07.860" endtime="20201029 18:16:08.189"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:08.195" level="INFO">${RESULT} = [{'diff': 6.391699999985789e-05}, {'diff': 6.359800000010907e-05}, {'diff': 6.359700000002633e-05}, {'diff': 6.362500000012261e-05}, {'diff': 6.365200000013616e-05}, {'diff': 6.358399999983888e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:16:08.190" endtime="20201029 18:16:08.195"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:16:08.202" level="INFO">${OVERHEAD} = {'diff': [6.391699999985789e-05, 6.359800000010907e-05, 6.359700000002633e-05, 6.362500000012261e-05, 6.365200000013616e-05, 6.358399999983888e-05, 6.358300000020023e-05, 6.361199999993516e-05, 6.3582...</msg>
<status status="PASS" starttime="20201029 18:16:08.197" endtime="20201029 18:16:08.202"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:08.211" level="INFO">NAME: overhead-04-set-last-timer</msg>
<status status="PASS" starttime="20201029 18:16:08.209" endtime="20201029 18:16:08.213"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:08.217" level="INFO">VALUE: [6.391699999985789e-05, 6.359800000010907e-05, 6.359700000002633e-05, 6.362500000012261e-05, 6.365200000013616e-05, 6.358399999983888e-05, 6.358300000020023e-05, 6.361199999993516e-05, 6.358299999975614e-05, 6.35419999999165e-05, 6.354100000027785e-05, 6.359700000002633e-05, 6.35140000002643e-05, 6.351399999982021e-05, 6.361099999985242e-05, 6.362500000012261e-05, 6.358300000020023e-05, 6.359700000002633e-05, 6.358299999975614e-05, 6.359700000002633e-05, 6.363899999994871e-05, 6.361099999985242e-05, 6.358399999983888e-05, 6.358300000020023e-05, 6.358300000020023e-05, 6.359700000002633e-05, 6.359700000002633e-05, 6.358299999975614e-05, 6.359700000002633e-05, 6.362499999967852e-05, 6.357000000001278e-05, 6.359800000010907e-05, 6.359800000010907e-05, 6.358300000020023e-05, 6.361100000029651e-05, 6.361099999985242e-05, 6.359800000010907e-05, 6.359700000002633e-05, 6.358299999975614e-05, 6.358300000020023e-05, 6.355500000010395e-05, 6.358300000020023e-05, 6.358300000020023e-05, 6.358299999975614e-05, 6.358400000028297e-05, 6.363899999994871e-05, 6.359700000002633e-05, 6.358399999983888e-05, 6.355500000010395e-05, 6.361099999985242e-05]</msg>
<status status="PASS" starttime="20201029 18:16:08.214" endtime="20201029 18:16:08.218"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:08.204" endtime="20201029 18:16:08.219"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:07.624" endtime="20201029 18:16:08.220"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 18:16:04.527" endtime="20201029 18:16:08.222" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="Measure Overhead Remove First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:08.234" endtime="20201029 18:16:08.255"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:08.232" endtime="20201029 18:16:08.256"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:08.273" endtime="20201029 18:16:11.296"></status>
</kw>
<msg timestamp="20201029 18:16:11.297" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:08.271" endtime="20201029 18:16:11.298"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:11.303" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:11.300" endtime="20201029 18:16:11.303"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:16:11.309" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:16:11.305" endtime="20201029 18:16:11.309"></status>
</kw>
<status status="FAIL" starttime="20201029 18:16:08.267" endtime="20201029 18:16:11.311"></status>
</kw>
<status status="FAIL" starttime="20201029 18:16:08.264" endtime="20201029 18:16:11.312"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:08.263" endtime="20201029 18:16:11.313"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:16:11.320" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:16:11.319" endtime="20201029 18:16:11.321"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:11.315" endtime="20201029 18:16:11.322"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:08.262" endtime="20201029 18:16:11.322"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:08.261" endtime="20201029 18:16:11.323"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:11.324" endtime="20201029 18:16:11.327"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:08.259" endtime="20201029 18:16:11.328"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:08.257" endtime="20201029 18:16:11.329"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:08.229" endtime="20201029 18:16:11.330"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>05</arg>
<arg>remove</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:11.347" endtime="20201029 18:16:11.371"></status>
</kw>
<msg timestamp="20201029 18:16:11.372" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:11.344" endtime="20201029 18:16:11.373"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:11.377" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:11.374" endtime="20201029 18:16:11.378"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:11.379" endtime="20201029 18:16:11.383"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:11.338" endtime="20201029 18:16:11.384"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:11.334" endtime="20201029 18:16:11.385"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:11.389" endtime="20201029 18:16:11.393"></status>
</kw>
<msg timestamp="20201029 18:16:11.394" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201029 18:16:11.387" endtime="20201029 18:16:11.395"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:11.403" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 18:16:11.400" endtime="20201029 18:16:11.403"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:11.407" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 18:16:11.405" endtime="20201029 18:16:11.407"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:11.396" endtime="20201029 18:16:11.409"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:11.416" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 18:16:11.415" endtime="20201029 18:16:11.417"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:11.418" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 18:16:11.417" endtime="20201029 18:16:11.419"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:11.410" endtime="20201029 18:16:11.419"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:11.427" endtime="20201029 18:16:11.722"></status>
</kw>
<msg timestamp="20201029 18:16:11.725" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.104067597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.104068889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:11.425" endtime="20201029 18:16:11.725"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:11.733" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.104067597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.104068889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:11.726" endtime="20201029 18:16:11.733"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:11.734" endtime="20201029 18:16:11.736"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:11.422" endtime="20201029 18:16:11.736"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:11.420" endtime="20201029 18:16:11.737"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:11.741" level="INFO">${RESULT} = [{'diff': 1.292000000319149e-06}, {'diff': 1.2769999999662218e-06}, {'diff': 1.2909999997923194e-06}, {'diff': 1.3059999997011573e-06}, {'diff': 1.2909999997923194e-06}, {'diff': 1.2780000000489622e-0...</msg>
<status status="PASS" starttime="20201029 18:16:11.737" endtime="20201029 18:16:11.741"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:16:11.745" level="INFO">${OVERHEAD} = {'diff': [1.292000000319149e-06, 1.2769999999662218e-06, 1.2909999997923194e-06, 1.3059999997011573e-06, 1.2909999997923194e-06, 1.2780000000489622e-06, 1.2909999997923194e-06, 1.2780000000489622e-06,...</msg>
<status status="PASS" starttime="20201029 18:16:11.742" endtime="20201029 18:16:11.745"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:11.749" level="INFO">NAME: overhead-05-remove-first-timer</msg>
<status status="PASS" starttime="20201029 18:16:11.748" endtime="20201029 18:16:11.750"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:11.752" level="INFO">VALUE: [1.292000000319149e-06, 1.2769999999662218e-06, 1.2909999997923194e-06, 1.3059999997011573e-06, 1.2909999997923194e-06, 1.2780000000489622e-06, 1.2909999997923194e-06, 1.2780000000489622e-06, 1.3050000000625062e-06, 1.3189999998886037e-06, 1.2780000000489622e-06, 1.2909999997923194e-06, 1.2780000000489622e-06, 1.3050000000625062e-06, 1.319999999971344e-06, 1.2919999998750598e-06, 1.346999999984888e-06, 1.2910000002364086e-06, 1.3060000001452465e-06, 1.319999999971344e-06, 1.2769999999662218e-06, 1.3060000001452465e-06, 1.319000000332693e-06, 1.2780000000489622e-06, 1.2909999997923194e-06, 1.3189999998886037e-06, 1.2909999997923194e-06, 1.3060000001452465e-06, 1.3059999997011573e-06, 1.2219999998563935e-06, 1.2769999999662218e-06, 1.3050000000625062e-06, 1.3060000001452465e-06, 1.2910000002364086e-06, 1.2919999998750598e-06, 1.2919999998750598e-06, 1.2769999999662218e-06, 1.2919999998750598e-06, 1.2919999998750598e-06, 1.2919999998750598e-06, 1.2919999998750598e-06, 1.3050000000625062e-06, 1.2769999999662218e-06, 1.304999999618417e-06, 1.2769999999662218e-06, 1.2919999998750598e-06, 1.3050000000625062e-06, 1.2910000002364086e-06, 1.319999999971344e-06, 1.3329999997147013e-06]</msg>
<status status="PASS" starttime="20201029 18:16:11.750" endtime="20201029 18:16:11.752"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:11.746" endtime="20201029 18:16:11.753"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:11.331" endtime="20201029 18:16:11.753"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 18:16:08.225" endtime="20201029 18:16:11.754" critical="yes"></status>
</test>
<test id="s1-s2-t7" name="Measure Overhead Remove Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:11.761" endtime="20201029 18:16:11.780"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:11.759" endtime="20201029 18:16:11.781"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:11.795" endtime="20201029 18:16:14.816"></status>
</kw>
<msg timestamp="20201029 18:16:14.817" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:11.793" endtime="20201029 18:16:14.818"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:14.823" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:14.819" endtime="20201029 18:16:14.823"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:16:14.829" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:16:14.825" endtime="20201029 18:16:14.829"></status>
</kw>
<status status="FAIL" starttime="20201029 18:16:11.790" endtime="20201029 18:16:14.831"></status>
</kw>
<status status="FAIL" starttime="20201029 18:16:11.788" endtime="20201029 18:16:14.832"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:11.787" endtime="20201029 18:16:14.833"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:16:14.840" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:16:14.839" endtime="20201029 18:16:14.841"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:14.834" endtime="20201029 18:16:14.841"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:11.786" endtime="20201029 18:16:14.842"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:11.786" endtime="20201029 18:16:14.842"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:14.844" endtime="20201029 18:16:14.847"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:11.784" endtime="20201029 18:16:14.848"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:11.782" endtime="20201029 18:16:14.849"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:11.758" endtime="20201029 18:16:14.849"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>06</arg>
<arg>remove</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:14.867" endtime="20201029 18:16:14.936"></status>
</kw>
<msg timestamp="20201029 18:16:14.936" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:14.864" endtime="20201029 18:16:14.936"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:14.939" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:14.937" endtime="20201029 18:16:14.939"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:14.940" endtime="20201029 18:16:14.941"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:14.858" endtime="20201029 18:16:14.942"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:14.854" endtime="20201029 18:16:14.942"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:14.951" endtime="20201029 18:16:14.954"></status>
</kw>
<msg timestamp="20201029 18:16:14.955" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201029 18:16:14.943" endtime="20201029 18:16:14.955"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:14.960" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 18:16:14.958" endtime="20201029 18:16:14.960"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:14.962" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 18:16:14.961" endtime="20201029 18:16:14.962"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:14.956" endtime="20201029 18:16:14.963"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:14.967" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 18:16:14.966" endtime="20201029 18:16:14.967"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:14.969" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 18:16:14.968" endtime="20201029 18:16:14.969"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:14.963" endtime="20201029 18:16:14.969"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:14.976" endtime="20201029 18:16:15.276"></status>
</kw>
<msg timestamp="20201029 18:16:15.279" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.099006028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.099014333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:14.974" endtime="20201029 18:16:15.279"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:15.287" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.099006028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.099014333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:15.280" endtime="20201029 18:16:15.287"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:15.288" endtime="20201029 18:16:15.289"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:14.972" endtime="20201029 18:16:15.290"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:14.970" endtime="20201029 18:16:15.290"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:15.294" level="INFO">${RESULT} = [{'diff': 8.305000000152774e-06}, {'diff': 8.291999999965327e-06}, {'diff': 8.250000000042945e-06}, {'diff': 8.333000000249058e-06}, {'diff': 8.291999999965327e-06}, {'diff': 8.332999999804969e-06}, {...</msg>
<status status="PASS" starttime="20201029 18:16:15.291" endtime="20201029 18:16:15.295"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:16:15.299" level="INFO">${OVERHEAD} = {'diff': [8.305000000152774e-06, 8.291999999965327e-06, 8.250000000042945e-06, 8.333000000249058e-06, 8.291999999965327e-06, 8.332999999804969e-06, 8.306000000235514e-06, 8.306000000235514e-06, 8.2770...</msg>
<status status="PASS" starttime="20201029 18:16:15.295" endtime="20201029 18:16:15.300"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:15.304" level="INFO">NAME: overhead-06-remove-middle-timer</msg>
<status status="PASS" starttime="20201029 18:16:15.303" endtime="20201029 18:16:15.304"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:15.306" level="INFO">VALUE: [8.305000000152774e-06, 8.291999999965327e-06, 8.250000000042945e-06, 8.333000000249058e-06, 8.291999999965327e-06, 8.332999999804969e-06, 8.306000000235514e-06, 8.306000000235514e-06, 8.27700000005649e-06, 8.305999999791425e-06, 8.291999999965327e-06, 8.290999999882587e-06, 8.305000000152774e-06, 8.236000000216848e-06, 8.290999999882587e-06, 8.305999999791425e-06, 8.263000000230392e-06, 8.291000000326676e-06, 8.263000000230392e-06, 8.305000000152774e-06, 8.347999999713807e-06, 8.291999999965327e-06, 8.305000000152774e-06, 8.291999999965327e-06, 8.27800000013923e-06, 8.305999999791425e-06, 8.27799999969514e-06, 8.305000000152774e-06, 8.305000000152774e-06, 8.305999999791425e-06, 8.306000000235514e-06, 8.291999999965327e-06, 8.27800000013923e-06, 8.27700000005649e-06, 8.27800000013923e-06, 8.305000000152774e-06, 8.305000000152774e-06, 8.291999999965327e-06, 8.291000000326676e-06, 8.305000000152774e-06, 8.291999999965327e-06, 8.290999999882587e-06, 8.291999999965327e-06, 8.291999999965327e-06, 8.292000000409416e-06, 8.291999999965327e-06, 8.333000000249058e-06, 8.318999999978871e-06, 8.291999999965327e-06, 8.22200000039075e-06]</msg>
<status status="PASS" starttime="20201029 18:16:15.305" endtime="20201029 18:16:15.307"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:15.300" endtime="20201029 18:16:15.307"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:14.850" endtime="20201029 18:16:15.308"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 18:16:11.755" endtime="20201029 18:16:15.308" critical="yes"></status>
</test>
<test id="s1-s2-t8" name="Measure Overhead Remove Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:15.316" endtime="20201029 18:16:15.335"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:15.314" endtime="20201029 18:16:15.336"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:15.349" endtime="20201029 18:16:18.370"></status>
</kw>
<msg timestamp="20201029 18:16:18.371" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:15.347" endtime="20201029 18:16:18.372"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:18.377" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:18.374" endtime="20201029 18:16:18.377"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:16:18.383" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:16:18.379" endtime="20201029 18:16:18.384"></status>
</kw>
<status status="FAIL" starttime="20201029 18:16:15.345" endtime="20201029 18:16:18.385"></status>
</kw>
<status status="FAIL" starttime="20201029 18:16:15.342" endtime="20201029 18:16:18.386"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:15.341" endtime="20201029 18:16:18.387"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:16:18.394" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:16:18.393" endtime="20201029 18:16:18.395"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:18.389" endtime="20201029 18:16:18.396"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:15.340" endtime="20201029 18:16:18.396"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:15.339" endtime="20201029 18:16:18.397"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:18.398" endtime="20201029 18:16:18.401"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:15.338" endtime="20201029 18:16:18.402"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:15.336" endtime="20201029 18:16:18.403"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:15.312" endtime="20201029 18:16:18.404"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>07</arg>
<arg>remove</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:18.428" endtime="20201029 18:16:18.623"></status>
</kw>
<msg timestamp="20201029 18:16:18.623" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:18.425" endtime="20201029 18:16:18.623"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:18.626" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:18.624" endtime="20201029 18:16:18.626"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:18.627" endtime="20201029 18:16:18.628"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:18.419" endtime="20201029 18:16:18.629"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:18.408" endtime="20201029 18:16:18.629"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:18.632" endtime="20201029 18:16:18.633"></status>
</kw>
<msg timestamp="20201029 18:16:18.634" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201029 18:16:18.630" endtime="20201029 18:16:18.634"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:18.638" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 18:16:18.637" endtime="20201029 18:16:18.639"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:18.640" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 18:16:18.639" endtime="20201029 18:16:18.641"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:18.634" endtime="20201029 18:16:18.641"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:18.645" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 18:16:18.644" endtime="20201029 18:16:18.645"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:18.647" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 18:16:18.646" endtime="20201029 18:16:18.647"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:18.642" endtime="20201029 18:16:18.648"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:18.654" endtime="20201029 18:16:18.955"></status>
</kw>
<msg timestamp="20201029 18:16:18.958" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.107507972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.107523347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:18.653" endtime="20201029 18:16:18.958"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:18.966" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.107507972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.107523347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:18.959" endtime="20201029 18:16:18.966"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:18.967" endtime="20201029 18:16:18.968"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:18.650" endtime="20201029 18:16:18.969"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:18.648" endtime="20201029 18:16:18.969"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:18.973" level="INFO">${RESULT} = [{'diff': 1.5374999999817618e-05}, {'diff': 1.5443999999753544e-05}, {'diff': 1.5445000000280373e-05}, {'diff': 1.545800000002373e-05}, {'diff': 1.547299999993257e-05}, {'diff': 1.545900000010647e-05}...</msg>
<status status="PASS" starttime="20201029 18:16:18.970" endtime="20201029 18:16:18.974"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:16:18.978" level="INFO">${OVERHEAD} = {'diff': [1.5374999999817618e-05, 1.5443999999753544e-05, 1.5445000000280373e-05, 1.545800000002373e-05, 1.547299999993257e-05, 1.545900000010647e-05, 1.5444000000197633e-05, 1.5443999999753544e-05, 1...</msg>
<status status="PASS" starttime="20201029 18:16:18.974" endtime="20201029 18:16:18.979"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:18.983" level="INFO">NAME: overhead-07-remove-last-timer</msg>
<status status="PASS" starttime="20201029 18:16:18.982" endtime="20201029 18:16:18.983"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:18.986" level="INFO">VALUE: [1.5374999999817618e-05, 1.5443999999753544e-05, 1.5445000000280373e-05, 1.545800000002373e-05, 1.547299999993257e-05, 1.545900000010647e-05, 1.5444000000197633e-05, 1.5443999999753544e-05, 1.5444000000197633e-05, 1.5444999999836284e-05, 1.541699999974e-05, 1.5401999999831162e-05, 1.5444999999836284e-05, 1.5443999999753544e-05, 1.5444999999836284e-05, 1.5444999999836284e-05, 1.5443999999753544e-05, 1.541599999965726e-05, 1.5429999999927446e-05, 1.5429999999927446e-05, 1.541600000010135e-05, 1.5443999999753544e-05, 1.545800000002373e-05, 1.5444999999836284e-05, 1.551399999977221e-05, 1.5431000000010187e-05, 1.541700000018409e-05, 1.5443999999753544e-05, 1.545800000002373e-05, 1.5431000000010187e-05, 1.5429999999927446e-05, 1.5430000000371535e-05, 1.5429999999927446e-05, 1.5444999999836284e-05, 1.5444000000197633e-05, 1.5429999999927446e-05, 1.5429999999927446e-05, 1.5444000000197633e-05, 1.5472000000293917e-05, 1.5431000000010187e-05, 1.5431000000010187e-05, 1.5431000000010187e-05, 1.541700000018409e-05, 1.5402999999913902e-05, 1.5429999999927446e-05, 1.5444999999836284e-05, 1.5429999999927446e-05, 1.5458999999662382e-05, 1.5444999999836284e-05, 1.545800000002373e-05]</msg>
<status status="PASS" starttime="20201029 18:16:18.984" endtime="20201029 18:16:18.986"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:18.979" endtime="20201029 18:16:18.987"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:18.405" endtime="20201029 18:16:18.987"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 18:16:15.310" endtime="20201029 18:16:18.987" critical="yes"></status>
</test>
<test id="s1-s2-t9" name="Measure Add Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:18.994" endtime="20201029 18:16:19.014"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:18.993" endtime="20201029 18:16:19.015"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:19.033" endtime="20201029 18:16:22.053"></status>
</kw>
<msg timestamp="20201029 18:16:22.054" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:19.031" endtime="20201029 18:16:22.054"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:22.059" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:22.056" endtime="20201029 18:16:22.059"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:16:22.066" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:16:22.061" endtime="20201029 18:16:22.067"></status>
</kw>
<status status="FAIL" starttime="20201029 18:16:19.027" endtime="20201029 18:16:22.068"></status>
</kw>
<status status="FAIL" starttime="20201029 18:16:19.024" endtime="20201029 18:16:22.070"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:19.023" endtime="20201029 18:16:22.070"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:16:22.078" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:16:22.077" endtime="20201029 18:16:22.079"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:22.072" endtime="20201029 18:16:22.079"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:19.022" endtime="20201029 18:16:22.080"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:19.021" endtime="20201029 18:16:22.080"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:22.082" endtime="20201029 18:16:22.085"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:19.019" endtime="20201029 18:16:22.086"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:19.016" endtime="20201029 18:16:22.087"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:18.991" endtime="20201029 18:16:22.087"></status>
</kw>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 18:16:22.094" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 18:16:22.111" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 18:16:23.431" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 18:16:22.092" endtime="20201029 18:16:23.432"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 18:16:26.435" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20201029 18:16:23.433" endtime="20201029 18:16:26.436"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:22.089" endtime="20201029 18:16:26.437"></status>
</kw>
<kw name="${n} IN RANGE [ 1 | 51 ]" type="for">
<kw name="${n} = 1" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:26.444" endtime="20201029 18:16:26.466"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:26.440" endtime="20201029 18:16:26.467"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:26.485" endtime="20201029 18:16:26.497"></status>
</kw>
<msg timestamp="20201029 18:16:26.498" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['list_ops 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:26.482" endtime="20201029 18:16:26.498"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:26.503" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['list_ops 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:26.500" endtime="20201029 18:16:26.504"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:26.505" endtime="20201029 18:16:26.509"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:26.476" endtime="20201029 18:16:26.510"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:26.472" endtime="20201029 18:16:26.512"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:26.525" endtime="20201029 18:16:26.821"></status>
</kw>
<msg timestamp="20201029 18:16:26.824" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029705264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029710319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:26.522" endtime="20201029 18:16:26.825"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:26.833" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029705264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029710319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:26.826" endtime="20201029 18:16:26.833"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:26.834" endtime="20201029 18:16:26.836"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:26.516" endtime="20201029 18:16:26.836"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:26.513" endtime="20201029 18:16:26.837"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:16:26.840" level="INFO">${PHILIP_RES} = [{'diff': 5.055000000000337e-06}, {'diff': 4.986000000001961e-06}, {'diff': 4.889000000000976e-06}, {'diff': 4.930000000000212e-06}, {'diff': 4.916000000000642e-06}, {'diff': 4.901999999997603e-06}, {...</msg>
<status status="PASS" starttime="20201029 18:16:26.837" endtime="20201029 18:16:26.841"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:26.846" level="INFO">${RESULT} = {'diff': [5.055000000000337e-06, 4.986000000001961e-06, 4.889000000000976e-06, 4.930000000000212e-06, 4.916000000000642e-06, 4.901999999997603e-06, 4.916000000000642e-06, 4.930000000000212e-06, 4.9160...</msg>
<status status="PASS" starttime="20201029 18:16:26.842" endtime="20201029 18:16:26.846"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:26.850" level="INFO">NAME: 1-timer-trace</msg>
<status status="PASS" starttime="20201029 18:16:26.849" endtime="20201029 18:16:26.851"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:26.853" level="INFO">VALUE: [5.055000000000337e-06, 4.986000000001961e-06, 4.889000000000976e-06, 4.930000000000212e-06, 4.916000000000642e-06, 4.901999999997603e-06, 4.916000000000642e-06, 4.930000000000212e-06, 4.916000000000642e-06, 4.943999999999782e-06, 4.917000000000116e-06, 4.930999999999686e-06, 4.903000000000546e-06, 4.972999999998395e-06, 4.930999999999686e-06, 4.930999999999686e-06, 4.875000000001406e-06, 4.9449999999992555e-06, 4.9449999999992555e-06, 4.930999999999686e-06, 4.931000000003155e-06, 4.930000000000212e-06, 4.930000000000212e-06, 4.930000000000212e-06, 4.916000000000642e-06, 4.916000000000642e-06, 4.916000000000642e-06, 4.917000000000116e-06, 4.930000000000212e-06, 4.973000000001865e-06, 4.917000000000116e-06, 4.917000000000116e-06, 4.917000000000116e-06, 4.917000000000116e-06, 4.931000000003155e-06, 4.917000000000116e-06, 4.930999999999686e-06, 4.917000000000116e-06, 4.915999999997173e-06, 4.943999999999782e-06, 4.930000000000212e-06, 4.930000000000212e-06, 4.916000000000642e-06, 4.930000000000212e-06, 4.930000000000212e-06, 4.930000000000212e-06, 4.930000000000212e-06, 4.930000000000212e-06, 4.903000000000546e-06, 4.930999999999686e-06]</msg>
<status status="PASS" starttime="20201029 18:16:26.852" endtime="20201029 18:16:26.853"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:26.847" endtime="20201029 18:16:26.854"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:26.468" endtime="20201029 18:16:26.854"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:26.439" endtime="20201029 18:16:26.855"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:26.857" endtime="20201029 18:16:26.876"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:26.855" endtime="20201029 18:16:26.877"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:26.885" endtime="20201029 18:16:26.896"></status>
</kw>
<msg timestamp="20201029 18:16:26.897" level="INFO">${RESULT} = {'cmd': 'list_ops 2', 'msg': ['list_ops 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:26.883" endtime="20201029 18:16:26.897"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:26.899" level="INFO">${RESULT} = {'cmd': 'list_ops 2', 'msg': ['list_ops 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:26.898" endtime="20201029 18:16:26.900"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:26.900" endtime="20201029 18:16:26.902"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:26.881" endtime="20201029 18:16:26.903"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:26.879" endtime="20201029 18:16:26.903"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:26.910" endtime="20201029 18:16:27.200"></status>
</kw>
<msg timestamp="20201029 18:16:27.203" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017640125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017649431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:26.908" endtime="20201029 18:16:27.203"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:27.211" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017640125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017649431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:27.204" endtime="20201029 18:16:27.211"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:27.212" endtime="20201029 18:16:27.214"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:26.906" endtime="20201029 18:16:27.214"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:26.904" endtime="20201029 18:16:27.215"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:16:27.219" level="INFO">${PHILIP_RES} = [{'diff': 9.306000000000592e-06}, {'diff': 9.181000000000467e-06}, {'diff': 9.167000000000897e-06}, {'diff': 9.181000000000467e-06}, {'diff': 9.180999999996997e-06}, {'diff': 9.153000000001327e-06}, {...</msg>
<status status="PASS" starttime="20201029 18:16:27.215" endtime="20201029 18:16:27.219"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:27.223" level="INFO">${RESULT} = {'diff': [9.306000000000592e-06, 9.181000000000467e-06, 9.167000000000897e-06, 9.181000000000467e-06, 9.180999999996997e-06, 9.153000000001327e-06, 9.167000000000897e-06, 9.193999999997093e-06, 9.1800...</msg>
<status status="PASS" starttime="20201029 18:16:27.219" endtime="20201029 18:16:27.223"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:27.227" level="INFO">NAME: 2-timer-trace</msg>
<status status="PASS" starttime="20201029 18:16:27.226" endtime="20201029 18:16:27.227"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:27.229" level="INFO">VALUE: [9.306000000000592e-06, 9.181000000000467e-06, 9.167000000000897e-06, 9.181000000000467e-06, 9.180999999996997e-06, 9.153000000001327e-06, 9.167000000000897e-06, 9.193999999997093e-06, 9.180000000000993e-06, 9.165999999997954e-06, 9.194000000000563e-06, 9.166000000001423e-06, 9.179999999997523e-06, 9.166000000001423e-06, 9.166000000001423e-06, 9.152999999997857e-06, 9.138000000002283e-06, 9.151999999998384e-06, 9.166000000001423e-06, 9.235999999999273e-06, 9.208000000000133e-06, 9.180000000000993e-06, 9.111000000002617e-06, 9.180000000000993e-06, 9.194000000000563e-06, 9.208000000000133e-06, 9.180000000000993e-06, 9.180000000000993e-06, 9.179999999997523e-06, 9.180000000000993e-06, 9.180000000000993e-06, 9.222000000003172e-06, 9.194000000000563e-06, 9.194000000000563e-06, 9.153000000001327e-06, 9.180000000000993e-06, 9.179999999997523e-06, 9.166000000001423e-06, 9.194000000000563e-06, 9.180000000000993e-06, 9.180000000000993e-06, 9.194000000000563e-06, 9.180000000000993e-06, 9.180000000000993e-06, 9.208000000000133e-06, 9.167000000000897e-06, 9.166999999997427e-06, 9.180000000000993e-06, 9.181000000000467e-06, 9.180999999996997e-06]</msg>
<status status="PASS" starttime="20201029 18:16:27.228" endtime="20201029 18:16:27.230"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:27.224" endtime="20201029 18:16:27.230"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:26.877" endtime="20201029 18:16:27.231"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:26.855" endtime="20201029 18:16:27.231"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:27.233" endtime="20201029 18:16:27.253"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:27.232" endtime="20201029 18:16:27.254"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:27.263" endtime="20201029 18:16:27.273"></status>
</kw>
<msg timestamp="20201029 18:16:27.274" level="INFO">${RESULT} = {'cmd': 'list_ops 3', 'msg': ['list_ops 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:27.261" endtime="20201029 18:16:27.274"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:27.276" level="INFO">${RESULT} = {'cmd': 'list_ops 3', 'msg': ['list_ops 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:27.275" endtime="20201029 18:16:27.277"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:27.278" endtime="20201029 18:16:27.279"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:27.258" endtime="20201029 18:16:27.280"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:27.256" endtime="20201029 18:16:27.280"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:27.287" endtime="20201029 18:16:27.577"></status>
</kw>
<msg timestamp="20201029 18:16:27.580" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018279347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018293542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:27.285" endtime="20201029 18:16:27.580"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:27.588" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018279347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018293542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:27.581" endtime="20201029 18:16:27.589"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:27.590" endtime="20201029 18:16:27.591"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:27.283" endtime="20201029 18:16:27.592"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:27.281" endtime="20201029 18:16:27.592"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:16:27.597" level="INFO">${PHILIP_RES} = [{'diff': 1.4194999999998098e-05}, {'diff': 1.4056000000001873e-05}, {'diff': 1.4013999999999693e-05}, {'diff': 1.401300000000022e-05}, {'diff': 1.4013999999999693e-05}, {'diff': 1.4041999999998833e-0...</msg>
<status status="PASS" starttime="20201029 18:16:27.593" endtime="20201029 18:16:27.597"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:27.601" level="INFO">${RESULT} = {'diff': [1.4194999999998098e-05, 1.4056000000001873e-05, 1.4013999999999693e-05, 1.401300000000022e-05, 1.4013999999999693e-05, 1.4041999999998833e-05, 1.4055999999998403e-05, 1.4055999999998403e-05,...</msg>
<status status="PASS" starttime="20201029 18:16:27.598" endtime="20201029 18:16:27.601"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:27.606" level="INFO">NAME: 3-timer-trace</msg>
<status status="PASS" starttime="20201029 18:16:27.604" endtime="20201029 18:16:27.607"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:27.609" level="INFO">VALUE: [1.4194999999998098e-05, 1.4056000000001873e-05, 1.4013999999999693e-05, 1.401300000000022e-05, 1.4013999999999693e-05, 1.4041999999998833e-05, 1.4055999999998403e-05, 1.4055999999998403e-05, 1.4027000000003259e-05, 1.4055000000002399e-05, 1.40689999999985e-05, 1.4028000000002733e-05, 1.4125000000000248e-05, 1.3986000000000554e-05, 1.404099999999936e-05, 1.4042000000002303e-05, 1.4069000000001969e-05, 1.4041999999998833e-05, 1.4042000000002303e-05, 1.4055000000002399e-05, 1.402699999999979e-05, 1.405499999999893e-05, 1.4097000000001109e-05, 1.4027999999999263e-05, 1.4083999999997543e-05, 1.405499999999893e-05, 1.402699999999979e-05, 1.405499999999893e-05, 1.408299999999807e-05, 1.4084000000001012e-05, 1.4070000000001442e-05, 1.405499999999893e-05, 1.4027999999999263e-05, 1.4055000000002399e-05, 1.4097000000001109e-05, 1.4110999999997209e-05, 1.4097000000001109e-05, 1.402699999999979e-05, 1.408299999999807e-05, 1.4055999999998403e-05, 1.4028000000002733e-05, 1.4056000000001873e-05, 1.408299999999807e-05, 1.4041000000002829e-05, 1.4069000000001969e-05, 1.4055999999998403e-05, 1.4027999999999263e-05, 1.4027999999999263e-05, 1.402699999999979e-05, 1.404099999999936e-05]</msg>
<status status="PASS" starttime="20201029 18:16:27.608" endtime="20201029 18:16:27.609"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:27.602" endtime="20201029 18:16:27.610"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:27.254" endtime="20201029 18:16:27.610"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:27.231" endtime="20201029 18:16:27.611"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:27.613" endtime="20201029 18:16:27.633"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:27.612" endtime="20201029 18:16:27.633"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:27.642" endtime="20201029 18:16:27.651"></status>
</kw>
<msg timestamp="20201029 18:16:27.651" level="INFO">${RESULT} = {'cmd': 'list_ops 4', 'msg': ['list_ops 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:27.640" endtime="20201029 18:16:27.652"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:27.654" level="INFO">${RESULT} = {'cmd': 'list_ops 4', 'msg': ['list_ops 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:27.653" endtime="20201029 18:16:27.655"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:27.655" endtime="20201029 18:16:27.657"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:27.637" endtime="20201029 18:16:27.658"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:27.635" endtime="20201029 18:16:27.658"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:27.665" endtime="20201029 18:16:27.952"></status>
</kw>
<msg timestamp="20201029 18:16:27.955" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017112431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017132042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:27.664" endtime="20201029 18:16:27.955"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:27.963" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017112431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017132042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:27.956" endtime="20201029 18:16:27.964"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:27.964" endtime="20201029 18:16:27.966"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:27.661" endtime="20201029 18:16:27.967"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:27.659" endtime="20201029 18:16:27.967"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:16:27.971" level="INFO">${PHILIP_RES} = [{'diff': 1.961099999999924e-05}, {'diff': 1.9499999999998685e-05}, {'diff': 1.9499999999998685e-05}, {'diff': 1.9485999999999115e-05}, {'diff': 1.9499999999998685e-05}, {'diff': 1.9499999999998685e-0...</msg>
<status status="PASS" starttime="20201029 18:16:27.968" endtime="20201029 18:16:27.972"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:27.976" level="INFO">${RESULT} = {'diff': [1.961099999999924e-05, 1.9499999999998685e-05, 1.9499999999998685e-05, 1.9485999999999115e-05, 1.9499999999998685e-05, 1.9499999999998685e-05, 1.952699999999835e-05, 1.9514000000001724e-05, ...</msg>
<status status="PASS" starttime="20201029 18:16:27.972" endtime="20201029 18:16:27.977"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:27.981" level="INFO">NAME: 4-timer-trace</msg>
<status status="PASS" starttime="20201029 18:16:27.980" endtime="20201029 18:16:27.981"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:27.984" level="INFO">VALUE: [1.961099999999924e-05, 1.9499999999998685e-05, 1.9499999999998685e-05, 1.9485999999999115e-05, 1.9499999999998685e-05, 1.9499999999998685e-05, 1.952699999999835e-05, 1.9514000000001724e-05, 1.9513999999998255e-05, 1.9499999999998685e-05, 1.9499999999998685e-05, 1.9513999999998255e-05, 1.9514000000001724e-05, 1.9499999999998685e-05, 1.944499999999988e-05, 1.9513999999998255e-05, 1.947299999999902e-05, 1.9513999999998255e-05, 1.954100000000139e-05, 1.9499999999998685e-05, 1.955500000000096e-05, 1.9513999999998255e-05, 1.9485999999999115e-05, 1.9513999999998255e-05, 1.9499999999998685e-05, 1.9513999999998255e-05, 1.9500000000002154e-05, 1.9499999999998685e-05, 1.9500000000002154e-05, 1.9513999999998255e-05, 1.9500000000002154e-05, 1.9499999999998685e-05, 1.9500000000002154e-05, 1.9499999999998685e-05, 1.9500000000002154e-05, 1.9499999999998685e-05, 1.9486000000002585e-05, 1.9499999999998685e-05, 1.9514000000001724e-05, 1.9499999999998685e-05, 1.9514000000001724e-05, 1.9527999999997825e-05, 1.9486000000002585e-05, 1.9499999999998685e-05, 1.9486000000002585e-05, 1.9499999999998685e-05, 1.9500000000002154e-05, 1.9499999999998685e-05, 1.9500000000002154e-05, 1.9471999999999545e-05]</msg>
<status status="PASS" starttime="20201029 18:16:27.982" endtime="20201029 18:16:27.984"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:27.977" endtime="20201029 18:16:27.985"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:27.634" endtime="20201029 18:16:27.985"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:27.611" endtime="20201029 18:16:27.985"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:27.988" endtime="20201029 18:16:28.009"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:27.986" endtime="20201029 18:16:28.010"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:28.028" endtime="20201029 18:16:28.042"></status>
</kw>
<msg timestamp="20201029 18:16:28.043" level="INFO">${RESULT} = {'cmd': 'list_ops 5', 'msg': ['list_ops 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:28.025" endtime="20201029 18:16:28.044"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:28.049" level="INFO">${RESULT} = {'cmd': 'list_ops 5', 'msg': ['list_ops 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:28.046" endtime="20201029 18:16:28.050"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:28.051" endtime="20201029 18:16:28.055"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:28.019" endtime="20201029 18:16:28.056"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:28.015" endtime="20201029 18:16:28.057"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:28.072" endtime="20201029 18:16:28.366"></status>
</kw>
<msg timestamp="20201029 18:16:28.369" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03049975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030525444, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:16:28.068" endtime="20201029 18:16:28.369"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:28.377" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03049975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030525444, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:16:28.370" endtime="20201029 18:16:28.377"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:28.378" endtime="20201029 18:16:28.381"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:28.062" endtime="20201029 18:16:28.382"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:28.058" endtime="20201029 18:16:28.382"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:16:28.386" level="INFO">${PHILIP_RES} = [{'diff': 2.5693999999999717e-05}, {'diff': 2.562500000000134e-05}, {'diff': 2.563900000000091e-05}, {'diff': 2.5568999999999592e-05}, {'diff': 2.5568999999999592e-05}, {'diff': 2.5582999999999162e-05...</msg>
<status status="PASS" starttime="20201029 18:16:28.383" endtime="20201029 18:16:28.386"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:28.390" level="INFO">${RESULT} = {'diff': [2.5693999999999717e-05, 2.562500000000134e-05, 2.563900000000091e-05, 2.5568999999999592e-05, 2.5568999999999592e-05, 2.5582999999999162e-05, 2.5555000000000022e-05, 2.5568999999999592e-05, ...</msg>
<status status="PASS" starttime="20201029 18:16:28.387" endtime="20201029 18:16:28.391"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:28.395" level="INFO">NAME: 5-timer-trace</msg>
<status status="PASS" starttime="20201029 18:16:28.394" endtime="20201029 18:16:28.395"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:28.398" level="INFO">VALUE: [2.5693999999999717e-05, 2.562500000000134e-05, 2.563900000000091e-05, 2.5568999999999592e-05, 2.5568999999999592e-05, 2.5582999999999162e-05, 2.5555000000000022e-05, 2.5568999999999592e-05, 2.5582999999999162e-05, 2.563899999999744e-05, 2.5555000000000022e-05, 2.5596999999998732e-05, 2.5610999999998302e-05, 2.5596999999998732e-05, 2.5569999999999066e-05, 2.5582999999999162e-05, 2.562500000000134e-05, 2.5570000000002535e-05, 2.5570000000002535e-05, 2.5569999999999066e-05, 2.5569999999999066e-05, 2.5598000000001675e-05, 2.5583999999998636e-05, 2.5569999999999066e-05, 2.558300000000263e-05, 2.5570000000002535e-05, 2.5570000000002535e-05, 2.5584000000002105e-05, 2.5584000000002105e-05, 2.55970000000022e-05, 2.5513999999997317e-05, 2.558300000000263e-05, 2.5610999999994832e-05, 2.55970000000022e-05, 2.5568999999996123e-05, 2.558300000000263e-05, 2.5568999999996123e-05, 2.555500000000349e-05, 2.5554999999996553e-05, 2.558300000000263e-05, 2.5527999999996887e-05, 2.556900000000306e-05, 2.5638999999993972e-05, 2.555500000000349e-05, 2.563900000000091e-05, 2.561100000000177e-05, 2.558300000000263e-05, 2.5568999999996123e-05, 2.55970000000022e-05, 2.5555999999996026e-05]</msg>
<status status="PASS" starttime="20201029 18:16:28.396" endtime="20201029 18:16:28.398"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:28.391" endtime="20201029 18:16:28.399"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:28.011" endtime="20201029 18:16:28.399"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:27.986" endtime="20201029 18:16:28.399"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:28.402" endtime="20201029 18:16:28.421"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:28.400" endtime="20201029 18:16:28.422"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:28.431" endtime="20201029 18:16:28.440"></status>
</kw>
<msg timestamp="20201029 18:16:28.441" level="INFO">${RESULT} = {'cmd': 'list_ops 6', 'msg': ['list_ops 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:28.429" endtime="20201029 18:16:28.441"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:28.443" level="INFO">${RESULT} = {'cmd': 'list_ops 6', 'msg': ['list_ops 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:28.442" endtime="20201029 18:16:28.444"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:28.445" endtime="20201029 18:16:28.447"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:28.426" endtime="20201029 18:16:28.448"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:28.424" endtime="20201029 18:16:28.448"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:28.455" endtime="20201029 18:16:28.742"></status>
</kw>
<msg timestamp="20201029 18:16:28.745" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017650583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017682958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:28.453" endtime="20201029 18:16:28.745"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:28.753" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017650583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017682958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:28.746" endtime="20201029 18:16:28.754"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:28.754" endtime="20201029 18:16:28.756"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:28.451" endtime="20201029 18:16:28.757"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:28.449" endtime="20201029 18:16:28.757"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:16:28.761" level="INFO">${PHILIP_RES} = [{'diff': 3.2374999999997683e-05}, {'diff': 3.224999999999756e-05}, {'diff': 3.225000000000103e-05}, {'diff': 3.225000000000103e-05}, {'diff': 3.225000000000103e-05}, {'diff': 3.225000000000103e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:16:28.758" endtime="20201029 18:16:28.761"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:28.765" level="INFO">${RESULT} = {'diff': [3.2374999999997683e-05, 3.224999999999756e-05, 3.225000000000103e-05, 3.225000000000103e-05, 3.225000000000103e-05, 3.225000000000103e-05, 3.225000000000103e-05, 3.225000000000103e-05, 3.226...</msg>
<status status="PASS" starttime="20201029 18:16:28.762" endtime="20201029 18:16:28.766"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:28.770" level="INFO">NAME: 6-timer-trace</msg>
<status status="PASS" starttime="20201029 18:16:28.769" endtime="20201029 18:16:28.770"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:28.772" level="INFO">VALUE: [3.2374999999997683e-05, 3.224999999999756e-05, 3.225000000000103e-05, 3.225000000000103e-05, 3.225000000000103e-05, 3.225000000000103e-05, 3.225000000000103e-05, 3.225000000000103e-05, 3.22640000000006e-05, 3.226399999999713e-05, 3.229199999999974e-05, 3.226399999999713e-05, 3.224999999999756e-05, 3.225000000000103e-05, 3.22640000000006e-05, 3.225000000000103e-05, 3.225000000000103e-05, 3.232000000000235e-05, 3.219499999999875e-05, 3.224999999999756e-05, 3.223599999999799e-05, 3.224999999999756e-05, 3.226399999999713e-05, 3.224999999999756e-05, 3.224999999999756e-05, 3.22640000000006e-05, 3.2263000000001124e-05, 3.223600000000146e-05, 3.225000000000103e-05, 3.225000000000103e-05, 3.225000000000103e-05, 3.2263000000001124e-05, 3.22640000000006e-05, 3.224999999999756e-05, 3.230599999999931e-05, 3.22640000000006e-05, 3.224999999999756e-05, 3.225000000000103e-05, 3.219399999999928e-05, 3.230599999999931e-05, 3.225000000000103e-05, 3.232000000000235e-05, 3.219499999999875e-05, 3.2304999999999834e-05, 3.232000000000235e-05, 3.223599999999799e-05, 3.223599999999799e-05, 3.227800000000017e-05, 3.22640000000006e-05, 3.22640000000006e-05]</msg>
<status status="PASS" starttime="20201029 18:16:28.771" endtime="20201029 18:16:28.773"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:28.766" endtime="20201029 18:16:28.774"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:28.422" endtime="20201029 18:16:28.774"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:28.400" endtime="20201029 18:16:28.775"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:28.777" endtime="20201029 18:16:28.796"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:28.775" endtime="20201029 18:16:28.797"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:28.806" endtime="20201029 18:16:28.818"></status>
</kw>
<msg timestamp="20201029 18:16:28.819" level="INFO">${RESULT} = {'cmd': 'list_ops 7', 'msg': ['list_ops 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:28.804" endtime="20201029 18:16:28.819"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:28.824" level="INFO">${RESULT} = {'cmd': 'list_ops 7', 'msg': ['list_ops 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:28.821" endtime="20201029 18:16:28.825"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:28.826" endtime="20201029 18:16:28.830"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:28.801" endtime="20201029 18:16:28.831"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:28.799" endtime="20201029 18:16:28.832"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:28.845" endtime="20201029 18:16:29.139"></status>
</kw>
<msg timestamp="20201029 18:16:29.142" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017462139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017501806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:28.842" endtime="20201029 18:16:29.143"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:29.151" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017462139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017501806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:29.144" endtime="20201029 18:16:29.151"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:29.152" endtime="20201029 18:16:29.154"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:28.837" endtime="20201029 18:16:29.154"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:28.833" endtime="20201029 18:16:29.154"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:16:29.158" level="INFO">${PHILIP_RES} = [{'diff': 3.9667000000000174e-05}, {'diff': 3.955599999999962e-05}, {'diff': 3.9555000000000146e-05}, {'diff': 3.954200000000005e-05}, {'diff': 3.955599999999962e-05}, {'diff': 3.9582999999999285e-05}...</msg>
<status status="PASS" starttime="20201029 18:16:29.155" endtime="20201029 18:16:29.159"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:29.163" level="INFO">${RESULT} = {'diff': [3.9667000000000174e-05, 3.955599999999962e-05, 3.9555000000000146e-05, 3.954200000000005e-05, 3.955599999999962e-05, 3.9582999999999285e-05, 3.950000000000134e-05, 3.9610999999998425e-05, 3....</msg>
<status status="PASS" starttime="20201029 18:16:29.159" endtime="20201029 18:16:29.164"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:29.168" level="INFO">NAME: 7-timer-trace</msg>
<status status="PASS" starttime="20201029 18:16:29.167" endtime="20201029 18:16:29.168"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:29.170" level="INFO">VALUE: [3.9667000000000174e-05, 3.955599999999962e-05, 3.9555000000000146e-05, 3.954200000000005e-05, 3.955599999999962e-05, 3.9582999999999285e-05, 3.950000000000134e-05, 3.9610999999998425e-05, 3.9555000000000146e-05, 3.954200000000005e-05, 3.954200000000005e-05, 3.9540999999997106e-05, 3.9568999999999716e-05, 3.951400000000091e-05, 3.9611000000001895e-05, 3.954200000000005e-05, 3.954200000000005e-05, 3.9527000000001006e-05, 3.9610999999998425e-05, 3.951400000000091e-05, 3.9540999999997106e-05, 3.952799999999701e-05, 3.954200000000005e-05, 3.9555000000000146e-05, 3.954200000000005e-05, 3.947199999999873e-05, 3.9541000000000576e-05, 3.954200000000005e-05, 3.952800000000048e-05, 3.9596999999998855e-05, 3.954200000000005e-05, 3.955599999999962e-05, 3.9540999999997106e-05, 3.947199999999873e-05, 3.949999999999787e-05, 3.9568999999999716e-05, 3.955599999999962e-05, 3.954200000000005e-05, 3.9527000000001006e-05, 3.954200000000005e-05, 3.954200000000005e-05, 3.952800000000048e-05, 3.951400000000091e-05, 3.948600000000177e-05, 3.9555000000000146e-05, 3.954200000000005e-05, 3.952800000000048e-05, 3.952800000000048e-05, 3.94859999999983e-05, 3.9555000000000146e-05]</msg>
<status status="PASS" starttime="20201029 18:16:29.169" endtime="20201029 18:16:29.171"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:29.164" endtime="20201029 18:16:29.171"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:28.797" endtime="20201029 18:16:29.172"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:28.775" endtime="20201029 18:16:29.172"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:29.174" endtime="20201029 18:16:29.194"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:29.173" endtime="20201029 18:16:29.194"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:29.203" endtime="20201029 18:16:29.215"></status>
</kw>
<msg timestamp="20201029 18:16:29.216" level="INFO">${RESULT} = {'cmd': 'list_ops 8', 'msg': ['list_ops 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:29.201" endtime="20201029 18:16:29.216"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:29.218" level="INFO">${RESULT} = {'cmd': 'list_ops 8', 'msg': ['list_ops 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:29.217" endtime="20201029 18:16:29.219"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:29.219" endtime="20201029 18:16:29.221"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:29.199" endtime="20201029 18:16:29.222"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:29.196" endtime="20201029 18:16:29.222"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:29.229" endtime="20201029 18:16:29.517"></status>
</kw>
<msg timestamp="20201029 18:16:29.520" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017312792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017360347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:29.227" endtime="20201029 18:16:29.521"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:29.528" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017312792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017360347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:29.522" endtime="20201029 18:16:29.529"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:29.530" endtime="20201029 18:16:29.531"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:29.224" endtime="20201029 18:16:29.532"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:29.223" endtime="20201029 18:16:29.532"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:16:29.536" level="INFO">${PHILIP_RES} = [{'diff': 4.755500000000121e-05}, {'diff': 4.743000000000108e-05}, {'diff': 4.741699999999752e-05}, {'diff': 4.7417000000000986e-05}, {'diff': 4.744400000000065e-05}, {'diff': 4.744400000000065e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:16:29.533" endtime="20201029 18:16:29.536"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:29.540" level="INFO">${RESULT} = {'diff': [4.755500000000121e-05, 4.743000000000108e-05, 4.741699999999752e-05, 4.7417000000000986e-05, 4.744400000000065e-05, 4.744400000000065e-05, 4.7431000000000556e-05, 4.741699999999752e-05, 4.74...</msg>
<status status="PASS" starttime="20201029 18:16:29.537" endtime="20201029 18:16:29.540"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:29.545" level="INFO">NAME: 8-timer-trace</msg>
<status status="PASS" starttime="20201029 18:16:29.544" endtime="20201029 18:16:29.545"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:29.547" level="INFO">VALUE: [4.755500000000121e-05, 4.743000000000108e-05, 4.741699999999752e-05, 4.7417000000000986e-05, 4.744400000000065e-05, 4.744400000000065e-05, 4.7431000000000556e-05, 4.741699999999752e-05, 4.748599999999936e-05, 4.741599999999804e-05, 4.743000000000108e-05, 4.7431000000000556e-05, 4.7445000000000126e-05, 4.741600000000151e-05, 4.737499999999881e-05, 4.7445000000000126e-05, 4.738899999999838e-05, 4.743000000000108e-05, 4.743000000000108e-05, 4.7431000000000556e-05, 4.7445000000000126e-05, 4.742999999999761e-05, 4.741600000000151e-05, 4.7445000000000126e-05, 4.7431000000000556e-05, 4.743000000000108e-05, 4.736099999999924e-05, 4.7431000000000556e-05, 4.7431000000000556e-05, 4.7417000000000986e-05, 4.741600000000151e-05, 4.742999999999761e-05, 4.7431000000000556e-05, 4.740299999999795e-05, 4.744400000000065e-05, 4.743000000000108e-05, 4.7417000000000986e-05, 4.7458999999999696e-05, 4.744399999999718e-05, 4.745800000000022e-05, 4.744400000000065e-05, 4.7445000000000126e-05, 4.744400000000065e-05, 4.75139999999985e-05, 4.748599999999936e-05, 4.7445000000000126e-05, 4.7431000000000556e-05, 4.742999999999761e-05, 4.743000000000108e-05, 4.7445000000000126e-05]</msg>
<status status="PASS" starttime="20201029 18:16:29.546" endtime="20201029 18:16:29.548"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:29.541" endtime="20201029 18:16:29.548"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:29.195" endtime="20201029 18:16:29.548"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:29.172" endtime="20201029 18:16:29.549"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:29.551" endtime="20201029 18:16:29.571"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:29.550" endtime="20201029 18:16:29.571"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:29.580" endtime="20201029 18:16:29.591"></status>
</kw>
<msg timestamp="20201029 18:16:29.592" level="INFO">${RESULT} = {'cmd': 'list_ops 9', 'msg': ['list_ops 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:29.578" endtime="20201029 18:16:29.592"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:29.594" level="INFO">${RESULT} = {'cmd': 'list_ops 9', 'msg': ['list_ops 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:29.593" endtime="20201029 18:16:29.594"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:29.595" endtime="20201029 18:16:29.598"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:29.576" endtime="20201029 18:16:29.598"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:29.574" endtime="20201029 18:16:29.599"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:29.605" endtime="20201029 18:16:29.905"></status>
</kw>
<msg timestamp="20201029 18:16:29.908" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016926917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016982972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:29.604" endtime="20201029 18:16:29.908"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:29.916" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016926917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016982972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:29.909" endtime="20201029 18:16:29.916"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:29.917" endtime="20201029 18:16:29.919"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:29.601" endtime="20201029 18:16:29.919"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:29.599" endtime="20201029 18:16:29.920"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:16:29.924" level="INFO">${PHILIP_RES} = [{'diff': 5.60549999999993e-05}, {'diff': 5.5943999999998745e-05}, {'diff': 5.593100000000212e-05}, {'diff': 5.5929999999999175e-05}, {'diff': 5.5944000000002214e-05}, {'diff': 5.6014000000000064e-05}...</msg>
<status status="PASS" starttime="20201029 18:16:29.920" endtime="20201029 18:16:29.924"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:29.928" level="INFO">${RESULT} = {'diff': [5.60549999999993e-05, 5.5943999999998745e-05, 5.593100000000212e-05, 5.5929999999999175e-05, 5.5944000000002214e-05, 5.6014000000000064e-05, 5.594499999999822e-05, 5.5958000000001784e-05, 5....</msg>
<status status="PASS" starttime="20201029 18:16:29.925" endtime="20201029 18:16:29.928"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:29.932" level="INFO">NAME: 9-timer-trace</msg>
<status status="PASS" starttime="20201029 18:16:29.931" endtime="20201029 18:16:29.933"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:29.935" level="INFO">VALUE: [5.60549999999993e-05, 5.5943999999998745e-05, 5.593100000000212e-05, 5.5929999999999175e-05, 5.5944000000002214e-05, 5.6014000000000064e-05, 5.594499999999822e-05, 5.5958000000001784e-05, 5.5943999999998745e-05, 5.595900000000126e-05, 5.594499999999822e-05, 5.5929999999999175e-05, 5.5944000000002214e-05, 5.593099999999865e-05, 5.5944000000002214e-05, 5.5902000000000035e-05, 5.591699999999908e-05, 5.5915999999999605e-05, 5.5943999999998745e-05, 5.5930000000002644e-05, 5.594499999999822e-05, 5.593099999999865e-05, 5.5930000000002644e-05, 5.593099999999865e-05, 5.593100000000212e-05, 5.5929999999999175e-05, 5.5929999999999175e-05, 5.5915999999999605e-05, 5.591699999999908e-05, 5.5944000000002214e-05, 5.5915999999999605e-05, 5.588899999999994e-05, 5.593100000000212e-05, 5.5929999999999175e-05, 5.591699999999908e-05, 5.591700000000255e-05, 5.591699999999908e-05, 5.5902000000000035e-05, 5.587500000000037e-05, 5.591699999999908e-05, 5.5944000000002214e-05, 5.5915999999999605e-05, 5.594500000000169e-05, 5.593099999999865e-05, 5.5929999999999175e-05, 5.593100000000212e-05, 5.594499999999822e-05, 5.594499999999822e-05, 5.5986000000000924e-05, 5.5943999999998745e-05]</msg>
<status status="PASS" starttime="20201029 18:16:29.933" endtime="20201029 18:16:29.936"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:29.929" endtime="20201029 18:16:29.936"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:29.572" endtime="20201029 18:16:29.937"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:29.549" endtime="20201029 18:16:29.937"></status>
</kw>
<kw name="${n} = 10" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:29.940" endtime="20201029 18:16:29.959"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:29.938" endtime="20201029 18:16:29.960"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:29.968" endtime="20201029 18:16:29.980"></status>
</kw>
<msg timestamp="20201029 18:16:29.981" level="INFO">${RESULT} = {'cmd': 'list_ops 10', 'msg': ['list_ops 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:29.966" endtime="20201029 18:16:29.981"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:29.983" level="INFO">${RESULT} = {'cmd': 'list_ops 10', 'msg': ['list_ops 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:29.982" endtime="20201029 18:16:29.984"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:29.984" endtime="20201029 18:16:29.986"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:29.964" endtime="20201029 18:16:29.987"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:29.962" endtime="20201029 18:16:29.987"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:29.993" endtime="20201029 18:16:30.280"></status>
</kw>
<msg timestamp="20201029 18:16:30.283" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016732375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016797486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:29.992" endtime="20201029 18:16:30.283"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:30.291" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016732375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016797486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:30.284" endtime="20201029 18:16:30.292"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:30.293" endtime="20201029 18:16:30.294"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:29.989" endtime="20201029 18:16:30.295"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:29.988" endtime="20201029 18:16:30.295"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:16:30.299" level="INFO">${PHILIP_RES} = [{'diff': 6.511099999999964e-05}, {'diff': 6.502799999999823e-05}, {'diff': 6.504200000000127e-05}, {'diff': 6.502799999999823e-05}, {'diff': 6.505600000000084e-05}, {'diff': 6.498699999999899e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:16:30.296" endtime="20201029 18:16:30.300"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:30.305" level="INFO">${RESULT} = {'diff': [6.511099999999964e-05, 6.502799999999823e-05, 6.504200000000127e-05, 6.502799999999823e-05, 6.505600000000084e-05, 6.498699999999899e-05, 6.504200000000127e-05, 6.509700000000007e-05, 6.5056...</msg>
<status status="PASS" starttime="20201029 18:16:30.301" endtime="20201029 18:16:30.305"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:30.309" level="INFO">NAME: 10-timer-trace</msg>
<status status="PASS" starttime="20201029 18:16:30.308" endtime="20201029 18:16:30.309"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:30.312" level="INFO">VALUE: [6.511099999999964e-05, 6.502799999999823e-05, 6.504200000000127e-05, 6.502799999999823e-05, 6.505600000000084e-05, 6.498699999999899e-05, 6.504200000000127e-05, 6.509700000000007e-05, 6.505600000000084e-05, 6.504099999999832e-05, 6.505600000000084e-05, 6.504099999999832e-05, 6.50280000000017e-05, 6.50280000000017e-05, 6.506900000000093e-05, 6.504200000000127e-05, 6.50419999999978e-05, 6.505600000000084e-05, 6.502699999999875e-05, 6.50280000000017e-05, 6.506899999999746e-05, 6.505600000000084e-05, 6.504099999999832e-05, 6.50830000000005e-05, 6.50419999999978e-05, 6.504200000000127e-05, 6.499999999999909e-05, 6.504200000000127e-05, 6.505600000000084e-05, 6.504099999999832e-05, 6.504200000000127e-05, 6.502699999999875e-05, 6.504200000000127e-05, 6.505500000000136e-05, 6.50280000000017e-05, 6.50419999999978e-05, 6.50280000000017e-05, 6.50700000000004e-05, 6.506900000000093e-05, 6.505599999999737e-05, 6.504100000000179e-05, 6.501399999999866e-05, 6.504100000000179e-05, 6.498599999999952e-05, 6.505500000000136e-05, 6.50419999999978e-05, 6.50280000000017e-05, 6.50419999999978e-05, 6.504200000000127e-05, 6.502699999999875e-05]</msg>
<status status="PASS" starttime="20201029 18:16:30.310" endtime="20201029 18:16:30.312"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:30.306" endtime="20201029 18:16:30.313"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:29.960" endtime="20201029 18:16:30.313"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:29.937" endtime="20201029 18:16:30.314"></status>
</kw>
<kw name="${n} = 11" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:30.316" endtime="20201029 18:16:30.335"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:30.315" endtime="20201029 18:16:30.336"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:30.344" endtime="20201029 18:16:30.357"></status>
</kw>
<msg timestamp="20201029 18:16:30.358" level="INFO">${RESULT} = {'cmd': 'list_ops 11', 'msg': ['list_ops 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:30.342" endtime="20201029 18:16:30.358"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:30.360" level="INFO">${RESULT} = {'cmd': 'list_ops 11', 'msg': ['list_ops 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:30.359" endtime="20201029 18:16:30.361"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:30.361" endtime="20201029 18:16:30.363"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:30.340" endtime="20201029 18:16:30.364"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:30.338" endtime="20201029 18:16:30.364"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:30.370" endtime="20201029 18:16:30.656"></status>
</kw>
<msg timestamp="20201029 18:16:30.659" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016682431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016757333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:30.369" endtime="20201029 18:16:30.659"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:30.667" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016682431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016757333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:30.660" endtime="20201029 18:16:30.668"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:30.668" endtime="20201029 18:16:30.671"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:30.366" endtime="20201029 18:16:30.672"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:30.365" endtime="20201029 18:16:30.672"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:16:30.676" level="INFO">${PHILIP_RES} = [{'diff': 7.490199999999822e-05}, {'diff': 7.477799999999757e-05}, {'diff': 7.474999999999843e-05}, {'diff': 7.474999999999843e-05}, {'diff': 7.474999999999843e-05}, {'diff': 7.474999999999843e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:16:30.673" endtime="20201029 18:16:30.676"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:30.680" level="INFO">${RESULT} = {'diff': [7.490199999999822e-05, 7.477799999999757e-05, 7.474999999999843e-05, 7.474999999999843e-05, 7.474999999999843e-05, 7.474999999999843e-05, 7.4763999999998e-05, 7.477799999999757e-05, 7.472300...</msg>
<status status="PASS" starttime="20201029 18:16:30.677" endtime="20201029 18:16:30.680"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:30.685" level="INFO">NAME: 11-timer-trace</msg>
<status status="PASS" starttime="20201029 18:16:30.684" endtime="20201029 18:16:30.685"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:30.687" level="INFO">VALUE: [7.490199999999822e-05, 7.477799999999757e-05, 7.474999999999843e-05, 7.474999999999843e-05, 7.474999999999843e-05, 7.474999999999843e-05, 7.4763999999998e-05, 7.477799999999757e-05, 7.472300000000223e-05, 7.476299999999853e-05, 7.483399999999932e-05, 7.47500000000019e-05, 7.476400000000147e-05, 7.481900000000027e-05, 7.4763999999998e-05, 7.476400000000147e-05, 7.477800000000104e-05, 7.476400000000147e-05, 7.481900000000027e-05, 7.476400000000147e-05, 7.476400000000147e-05, 7.476400000000147e-05, 7.477700000000156e-05, 7.476400000000147e-05, 7.476400000000147e-05, 7.476400000000147e-05, 7.476400000000147e-05, 7.473599999999886e-05, 7.472199999999929e-05, 7.474999999999843e-05, 7.483299999999984e-05, 7.4763999999998e-05, 7.477800000000104e-05, 7.473599999999886e-05, 7.474999999999843e-05, 7.477799999999757e-05, 7.476299999999853e-05, 7.474999999999843e-05, 7.4763999999998e-05, 7.4763999999998e-05, 7.479099999999766e-05, 7.4763999999998e-05, 7.477799999999757e-05, 7.469499999999962e-05, 7.4763999999998e-05, 7.474999999999843e-05, 7.480600000000018e-05, 7.4763999999998e-05, 7.47370000000018e-05, 7.476400000000147e-05]</msg>
<status status="PASS" starttime="20201029 18:16:30.686" endtime="20201029 18:16:30.687"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:30.681" endtime="20201029 18:16:30.688"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:30.337" endtime="20201029 18:16:30.689"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:30.314" endtime="20201029 18:16:30.689"></status>
</kw>
<kw name="${n} = 12" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:30.692" endtime="20201029 18:16:30.711"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:30.690" endtime="20201029 18:16:30.712"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:30.720" endtime="20201029 18:16:30.734"></status>
</kw>
<msg timestamp="20201029 18:16:30.735" level="INFO">${RESULT} = {'cmd': 'list_ops 12', 'msg': ['list_ops 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:30.718" endtime="20201029 18:16:30.735"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:30.737" level="INFO">${RESULT} = {'cmd': 'list_ops 12', 'msg': ['list_ops 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:30.736" endtime="20201029 18:16:30.737"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:30.738" endtime="20201029 18:16:30.741"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:30.716" endtime="20201029 18:16:30.741"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:30.714" endtime="20201029 18:16:30.742"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:30.748" endtime="20201029 18:16:31.034"></status>
</kw>
<msg timestamp="20201029 18:16:31.037" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016823875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016909097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:30.746" endtime="20201029 18:16:31.037"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:31.045" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016823875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016909097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:31.038" endtime="20201029 18:16:31.046"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:31.046" endtime="20201029 18:16:31.048"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:30.744" endtime="20201029 18:16:31.049"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:30.742" endtime="20201029 18:16:31.049"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:16:31.053" level="INFO">${PHILIP_RES} = [{'diff': 8.522200000000285e-05}, {'diff': 8.508399999999916e-05}, {'diff': 8.509699999999926e-05}, {'diff': 8.511099999999883e-05}, {'diff': 8.508300000000316e-05}, {'diff': 8.506999999999959e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:16:31.050" endtime="20201029 18:16:31.053"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:31.057" level="INFO">${RESULT} = {'diff': [8.522200000000285e-05, 8.508399999999916e-05, 8.509699999999926e-05, 8.511099999999883e-05, 8.508300000000316e-05, 8.506999999999959e-05, 8.506999999999959e-05, 8.5153000000001e-05, 8.511100...</msg>
<status status="PASS" starttime="20201029 18:16:31.054" endtime="20201029 18:16:31.057"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:31.061" level="INFO">NAME: 12-timer-trace</msg>
<status status="PASS" starttime="20201029 18:16:31.060" endtime="20201029 18:16:31.062"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:31.064" level="INFO">VALUE: [8.522200000000285e-05, 8.508399999999916e-05, 8.509699999999926e-05, 8.511099999999883e-05, 8.508300000000316e-05, 8.506999999999959e-05, 8.506999999999959e-05, 8.5153000000001e-05, 8.51110000000023e-05, 8.508299999999969e-05, 8.506999999999959e-05, 8.506900000000012e-05, 8.508300000000316e-05, 8.508399999999916e-05, 8.508399999999916e-05, 8.509700000000273e-05, 8.504200000000045e-05, 8.509699999999926e-05, 8.51119999999983e-05, 8.508299999999969e-05, 8.511099999999883e-05, 8.508299999999969e-05, 8.508399999999916e-05, 8.509700000000273e-05, 8.515299999999754e-05, 8.509699999999926e-05, 8.51110000000023e-05, 8.506999999999959e-05, 8.506900000000012e-05, 8.508299999999969e-05, 8.508399999999916e-05, 8.509699999999926e-05, 8.505500000000055e-05, 8.506900000000012e-05, 8.508399999999916e-05, 8.508399999999916e-05, 8.511099999999883e-05, 8.506900000000012e-05, 8.507000000000306e-05, 8.504200000000045e-05, 8.508299999999969e-05, 8.508299999999969e-05, 8.512500000000187e-05, 8.508399999999916e-05, 8.505500000000055e-05, 8.51110000000023e-05, 8.506999999999959e-05, 8.504200000000045e-05, 8.506900000000012e-05, 8.51110000000023e-05]</msg>
<status status="PASS" starttime="20201029 18:16:31.063" endtime="20201029 18:16:31.065"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:31.058" endtime="20201029 18:16:31.066"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:30.712" endtime="20201029 18:16:31.066"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:30.689" endtime="20201029 18:16:31.067"></status>
</kw>
<kw name="${n} = 13" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:31.069" endtime="20201029 18:16:31.088"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:31.068" endtime="20201029 18:16:31.089"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:31.097" endtime="20201029 18:16:31.112"></status>
</kw>
<msg timestamp="20201029 18:16:31.112" level="INFO">${RESULT} = {'cmd': 'list_ops 13', 'msg': ['list_ops 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:31.096" endtime="20201029 18:16:31.112"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:31.115" level="INFO">${RESULT} = {'cmd': 'list_ops 13', 'msg': ['list_ops 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:31.113" endtime="20201029 18:16:31.115"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:31.116" endtime="20201029 18:16:31.117"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:31.093" endtime="20201029 18:16:31.118"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:31.091" endtime="20201029 18:16:31.118"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:31.125" endtime="20201029 18:16:31.410"></status>
</kw>
<msg timestamp="20201029 18:16:31.413" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016759042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016855153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:31.123" endtime="20201029 18:16:31.414"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:31.422" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016759042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016855153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:31.415" endtime="20201029 18:16:31.422"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:31.423" endtime="20201029 18:16:31.424"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:31.121" endtime="20201029 18:16:31.425"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:31.119" endtime="20201029 18:16:31.425"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:16:31.429" level="INFO">${PHILIP_RES} = [{'diff': 9.611100000000289e-05}, {'diff': 9.60140000000019e-05}, {'diff': 9.602699999999853e-05}, {'diff': 9.601399999999843e-05}, {'diff': 9.598600000000276e-05}, {'diff': 9.60140000000019e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 18:16:31.426" endtime="20201029 18:16:31.429"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:31.434" level="INFO">${RESULT} = {'diff': [9.611100000000289e-05, 9.60140000000019e-05, 9.602699999999853e-05, 9.601399999999843e-05, 9.598600000000276e-05, 9.60140000000019e-05, 9.600000000000233e-05, 9.601399999999843e-05, 9.605500...</msg>
<status status="PASS" starttime="20201029 18:16:31.430" endtime="20201029 18:16:31.434"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:31.439" level="INFO">NAME: 13-timer-trace</msg>
<status status="PASS" starttime="20201029 18:16:31.438" endtime="20201029 18:16:31.439"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:31.441" level="INFO">VALUE: [9.611100000000289e-05, 9.60140000000019e-05, 9.602699999999853e-05, 9.601399999999843e-05, 9.598600000000276e-05, 9.60140000000019e-05, 9.600000000000233e-05, 9.601399999999843e-05, 9.605500000000114e-05, 9.601299999999896e-05, 9.602800000000147e-05, 9.60140000000019e-05, 9.604200000000104e-05, 9.599999999999886e-05, 9.599999999999886e-05, 9.605600000000061e-05, 9.60140000000019e-05, 9.602800000000147e-05, 9.599999999999886e-05, 9.601399999999843e-05, 9.601399999999843e-05, 9.600000000000233e-05, 9.600000000000233e-05, 9.59859999999993e-05, 9.599999999999886e-05, 9.601399999999843e-05, 9.60140000000019e-05, 9.600000000000233e-05, 9.60140000000019e-05, 9.602699999999853e-05, 9.59859999999993e-05, 9.599999999999886e-05, 9.605600000000061e-05, 9.600000000000233e-05, 9.601399999999843e-05, 9.601399999999843e-05, 9.601399999999843e-05, 9.599999999999886e-05, 9.600000000000233e-05, 9.59859999999993e-05, 9.599999999999886e-05, 9.601399999999843e-05, 9.602699999999853e-05, 9.597199999999972e-05, 9.602800000000147e-05, 9.6027999999998e-05, 9.601399999999843e-05, 9.599999999999886e-05, 9.6027000000002e-05, 9.600000000000233e-05]</msg>
<status status="PASS" starttime="20201029 18:16:31.440" endtime="20201029 18:16:31.442"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:31.435" endtime="20201029 18:16:31.442"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:31.090" endtime="20201029 18:16:31.443"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:31.067" endtime="20201029 18:16:31.443"></status>
</kw>
<kw name="${n} = 14" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:31.445" endtime="20201029 18:16:31.465"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:31.444" endtime="20201029 18:16:31.465"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:31.473" endtime="20201029 18:16:31.489"></status>
</kw>
<msg timestamp="20201029 18:16:31.489" level="INFO">${RESULT} = {'cmd': 'list_ops 14', 'msg': ['list_ops 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:31.472" endtime="20201029 18:16:31.489"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:31.492" level="INFO">${RESULT} = {'cmd': 'list_ops 14', 'msg': ['list_ops 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:31.490" endtime="20201029 18:16:31.492"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:31.493" endtime="20201029 18:16:31.494"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:31.469" endtime="20201029 18:16:31.495"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:31.467" endtime="20201029 18:16:31.495"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:31.502" endtime="20201029 18:16:31.789"></status>
</kw>
<msg timestamp="20201029 18:16:31.792" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016761694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016869431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:31.500" endtime="20201029 18:16:31.792"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:31.801" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016761694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016869431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:31.793" endtime="20201029 18:16:31.802"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:31.803" endtime="20201029 18:16:31.807"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:31.498" endtime="20201029 18:16:31.808"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:31.496" endtime="20201029 18:16:31.808"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:16:31.814" level="INFO">${PHILIP_RES} = [{'diff': 0.00010773700000000011}, {'diff': 0.00010754199999999867}, {'diff': 0.00010754100000000266}, {'diff': 0.0001075279999999991}, {'diff': 0.00010754199999999867}, {'diff': 0.0001075419999999986...</msg>
<status status="PASS" starttime="20201029 18:16:31.809" endtime="20201029 18:16:31.815"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:31.819" level="INFO">${RESULT} = {'diff': [0.00010773700000000011, 0.00010754199999999867, 0.00010754100000000266, 0.0001075279999999991, 0.00010754199999999867, 0.00010754199999999867, 0.0001075279999999991, 0.00010755500000000223, ...</msg>
<status status="PASS" starttime="20201029 18:16:31.816" endtime="20201029 18:16:31.820"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:31.825" level="INFO">NAME: 14-timer-trace</msg>
<status status="PASS" starttime="20201029 18:16:31.823" endtime="20201029 18:16:31.825"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:31.828" level="INFO">VALUE: [0.00010773700000000011, 0.00010754199999999867, 0.00010754100000000266, 0.0001075279999999991, 0.00010754199999999867, 0.00010754199999999867, 0.0001075279999999991, 0.00010755500000000223, 0.00010754199999999867, 0.00010755499999999876, 0.00010755499999999876, 0.00010758300000000137, 0.0001075690000000018, 0.00010754199999999867, 0.00010754199999999867, 0.00010756899999999833, 0.00010752800000000257, 0.00010751399999999953, 0.00010754199999999867, 0.00010759699999999747, 0.00010754199999999867, 0.0001075560000000017, 0.00010754099999999919, 0.0001075279999999991, 0.00010755499999999876, 0.00010754100000000266, 0.00010748600000000039, 0.00010756899999999833, 0.0001075279999999991, 0.00010754199999999867, 0.00010754100000000266, 0.00010752800000000257, 0.00010754099999999919, 0.00010754199999999867, 0.0001075560000000017, 0.00010755500000000223, 0.00010751399999999953, 0.00010759700000000094, 0.00010755599999999824, 0.00010755500000000223, 0.00010754200000000214, 0.00010748599999999692, 0.00010754099999999919, 0.0001075279999999991, 0.0001075560000000017, 0.0001075279999999991, 0.00010755599999999824, 0.00010751300000000005, 0.00010754200000000214, 0.0001075560000000017]</msg>
<status status="PASS" starttime="20201029 18:16:31.827" endtime="20201029 18:16:31.829"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:31.820" endtime="20201029 18:16:31.830"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:31.466" endtime="20201029 18:16:31.830"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:31.443" endtime="20201029 18:16:31.830"></status>
</kw>
<kw name="${n} = 15" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:31.833" endtime="20201029 18:16:31.852"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:31.831" endtime="20201029 18:16:31.853"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:31.861" endtime="20201029 18:16:31.877"></status>
</kw>
<msg timestamp="20201029 18:16:31.878" level="INFO">${RESULT} = {'cmd': 'list_ops 15', 'msg': ['list_ops 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:31.859" endtime="20201029 18:16:31.878"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:31.880" level="INFO">${RESULT} = {'cmd': 'list_ops 15', 'msg': ['list_ops 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:31.879" endtime="20201029 18:16:31.880"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:31.881" endtime="20201029 18:16:31.884"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:31.857" endtime="20201029 18:16:31.884"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:31.855" endtime="20201029 18:16:31.885"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:31.891" endtime="20201029 18:16:32.177"></status>
</kw>
<msg timestamp="20201029 18:16:32.180" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017567458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017687292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:31.889" endtime="20201029 18:16:32.180"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:32.188" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017567458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017687292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:32.181" endtime="20201029 18:16:32.188"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:32.189" endtime="20201029 18:16:32.190"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:31.887" endtime="20201029 18:16:32.191"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:31.885" endtime="20201029 18:16:32.191"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:16:32.195" level="INFO">${PHILIP_RES} = [{'diff': 0.00011983399999999922}, {'diff': 0.00011973599999999876}, {'diff': 0.00011963900000000124}, {'diff': 0.00011965200000000134}, {'diff': 0.00011970799999999962}, {'diff': 0.000119694000000000...</msg>
<status status="PASS" starttime="20201029 18:16:32.192" endtime="20201029 18:16:32.195"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:32.199" level="INFO">${RESULT} = {'diff': [0.00011983399999999922, 0.00011973599999999876, 0.00011963900000000124, 0.00011965200000000134, 0.00011970799999999962, 0.00011969400000000005, 0.00011965300000000081, 0.00011965200000000134...</msg>
<status status="PASS" starttime="20201029 18:16:32.196" endtime="20201029 18:16:32.199"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:32.204" level="INFO">NAME: 15-timer-trace</msg>
<status status="PASS" starttime="20201029 18:16:32.203" endtime="20201029 18:16:32.204"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:32.206" level="INFO">VALUE: [0.00011983399999999922, 0.00011973599999999876, 0.00011963900000000124, 0.00011965200000000134, 0.00011970799999999962, 0.00011969400000000005, 0.00011965300000000081, 0.00011965200000000134, 0.00011969499999999952, 0.00011968000000000048, 0.00011968099999999995, 0.00011970799999999962, 0.000119695000000003, 0.00011969400000000005, 0.000119695000000003, 0.00011962500000000167, 0.00011969499999999952, 0.00011966600000000091, 0.00011969499999999952, 0.00011970799999999962, 0.00011968099999999995, 0.00011969400000000005, 0.00011966700000000038, 0.0001197500000000018, 0.00011968099999999995, 0.00011970799999999962, 0.00011968099999999995, 0.00011969400000000005, 0.00011972300000000213, 0.00011970800000000309, 0.00011969499999999952, 0.00011972199999999919, 0.00011965300000000081, 0.00011968000000000048, 0.00011969499999999952, 0.00011968000000000048, 0.00011969499999999952, 0.00011969400000000005, 0.00011969499999999952, 0.00011969400000000005, 0.00011966700000000038, 0.00011969400000000005, 0.000119695000000003, 0.00011970799999999962, 0.00011965300000000081, 0.00011968000000000048, 0.00011969499999999952, 0.00011969400000000005, 0.00011969499999999952, 0.00011974999999999833]</msg>
<status status="PASS" starttime="20201029 18:16:32.205" endtime="20201029 18:16:32.208"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:32.200" endtime="20201029 18:16:32.208"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:31.853" endtime="20201029 18:16:32.209"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:31.831" endtime="20201029 18:16:32.209"></status>
</kw>
<kw name="${n} = 16" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:32.211" endtime="20201029 18:16:32.231"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:32.210" endtime="20201029 18:16:32.231"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:32.239" endtime="20201029 18:16:32.254"></status>
</kw>
<msg timestamp="20201029 18:16:32.255" level="INFO">${RESULT} = {'cmd': 'list_ops 16', 'msg': ['list_ops 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:32.238" endtime="20201029 18:16:32.255"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:32.257" level="INFO">${RESULT} = {'cmd': 'list_ops 16', 'msg': ['list_ops 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:32.256" endtime="20201029 18:16:32.257"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:32.258" endtime="20201029 18:16:32.260"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:32.235" endtime="20201029 18:16:32.260"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:32.233" endtime="20201029 18:16:32.261"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:32.267" endtime="20201029 18:16:32.556"></status>
</kw>
<msg timestamp="20201029 18:16:32.563" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016625069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016757625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:32.266" endtime="20201029 18:16:32.564"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:32.581" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016625069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016757625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:32.565" endtime="20201029 18:16:32.582"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:32.583" endtime="20201029 18:16:32.587"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:32.263" endtime="20201029 18:16:32.588"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:32.261" endtime="20201029 18:16:32.589"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:16:32.597" level="INFO">${PHILIP_RES} = [{'diff': 0.00013255600000000242}, {'diff': 0.00013243000000000282}, {'diff': 0.0001324440000000024}, {'diff': 0.0001324999999999972}, {'diff': 0.00013243000000000282}, {'diff': 0.00013244500000000187...</msg>
<status status="PASS" starttime="20201029 18:16:32.590" endtime="20201029 18:16:32.597"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:32.607" level="INFO">${RESULT} = {'diff': [0.00013255600000000242, 0.00013243000000000282, 0.0001324440000000024, 0.0001324999999999972, 0.00013243000000000282, 0.00013244500000000187, 0.00013241699999999926, 0.00013245900000000144, ...</msg>
<status status="PASS" starttime="20201029 18:16:32.599" endtime="20201029 18:16:32.608"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:32.616" level="INFO">NAME: 16-timer-trace</msg>
<status status="PASS" starttime="20201029 18:16:32.614" endtime="20201029 18:16:32.617"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:32.621" level="INFO">VALUE: [0.00013255600000000242, 0.00013243000000000282, 0.0001324440000000024, 0.0001324999999999972, 0.00013243000000000282, 0.00013244500000000187, 0.00013241699999999926, 0.00013245900000000144, 0.00013244399999999892, 0.00013243099999999883, 0.00013244399999999892, 0.00013243099999999883, 0.00013242999999999935, 0.00013241699999999926, 0.00013244399999999892, 0.00013247299999999754, 0.00013242999999999935, 0.00013247199999999806, 0.00013244399999999892, 0.00013244399999999892, 0.0001324029999999997, 0.00013241699999999926, 0.0001324449999999984, 0.0001324579999999985, 0.00013243099999999883, 0.0001324579999999985, 0.0001324310000000023, 0.0001324440000000024, 0.00013245900000000144, 0.00013244399999999892, 0.00013250000000000067, 0.0001324440000000024, 0.00013244500000000187, 0.0001324440000000024, 0.000132473000000001, 0.00013242999999999935, 0.00013244399999999892, 0.00013241699999999926, 0.00013244399999999892, 0.0001324579999999985, 0.0001324579999999985, 0.0001324449999999984, 0.0001324029999999997, 0.0001324449999999984, 0.00013244399999999892, 0.0001324449999999984, 0.00013241599999999978, 0.0001324449999999984, 0.00013244399999999892, 0.0001324449999999984]</msg>
<status status="PASS" starttime="20201029 18:16:32.618" endtime="20201029 18:16:32.623"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:32.609" endtime="20201029 18:16:32.624"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:32.232" endtime="20201029 18:16:32.625"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:32.209" endtime="20201029 18:16:32.625"></status>
</kw>
<kw name="${n} = 17" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:32.630" endtime="20201029 18:16:32.650"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:32.627" endtime="20201029 18:16:32.651"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:32.659" endtime="20201029 18:16:32.676"></status>
</kw>
<msg timestamp="20201029 18:16:32.676" level="INFO">${RESULT} = {'cmd': 'list_ops 17', 'msg': ['list_ops 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:32.657" endtime="20201029 18:16:32.677"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:32.679" level="INFO">${RESULT} = {'cmd': 'list_ops 17', 'msg': ['list_ops 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:32.677" endtime="20201029 18:16:32.679"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:32.680" endtime="20201029 18:16:32.682"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:32.655" endtime="20201029 18:16:32.682"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:32.653" endtime="20201029 18:16:32.683"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:32.689" endtime="20201029 18:16:32.974"></status>
</kw>
<msg timestamp="20201029 18:16:32.977" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016911236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017057153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:32.687" endtime="20201029 18:16:32.977"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:32.985" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016911236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017057153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:32.978" endtime="20201029 18:16:32.985"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:32.986" endtime="20201029 18:16:32.988"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:32.685" endtime="20201029 18:16:32.988"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:32.683" endtime="20201029 18:16:32.989"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:16:32.993" level="INFO">${PHILIP_RES} = [{'diff': 0.00014591699999999888}, {'diff': 0.00014580499999999885}, {'diff': 0.00014575000000000005}, {'diff': 0.00014580599999999833}, {'diff': 0.00014580599999999833}, {'diff': 0.000145804999999998...</msg>
<status status="PASS" starttime="20201029 18:16:32.989" endtime="20201029 18:16:32.993"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:32.997" level="INFO">${RESULT} = {'diff': [0.00014591699999999888, 0.00014580499999999885, 0.00014575000000000005, 0.00014580599999999833, 0.00014580599999999833, 0.00014580499999999885, 0.0001458480000000005, 0.00014581899999999842,...</msg>
<status status="PASS" starttime="20201029 18:16:32.994" endtime="20201029 18:16:32.997"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:33.001" level="INFO">NAME: 17-timer-trace</msg>
<status status="PASS" starttime="20201029 18:16:33.000" endtime="20201029 18:16:33.001"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:33.003" level="INFO">VALUE: [0.00014591699999999888, 0.00014580499999999885, 0.00014575000000000005, 0.00014580599999999833, 0.00014580599999999833, 0.00014580499999999885, 0.0001458480000000005, 0.00014581899999999842, 0.00014580500000000232, 0.00014580500000000232, 0.00014575000000000005, 0.00014580599999999833, 0.0001457220000000009, 0.00014576399999999962, 0.00014580599999999833, 0.00014580500000000232, 0.00014579199999999876, 0.0001458199999999979, 0.00014579100000000275, 0.0001458610000000006, 0.00014586099999999713, 0.0001458060000000018, 0.00014580499999999885, 0.00014580599999999833, 0.00014579200000000223, 0.00014580499999999885, 0.00014581899999999842, 0.00014580599999999833, 0.0001458060000000018, 0.00014581899999999842, 0.00014573600000000048, 0.00014582000000000137, 0.00014580499999999885, 0.00014577799999999919, 0.00014576399999999962, 0.0001458610000000006, 0.00014579099999999928, 0.0001458060000000018, 0.00014579200000000223, 0.00014581899999999842, 0.00014579200000000223, 0.00014579200000000223, 0.00014581899999999842, 0.00014580499999999885, 0.00014573600000000048, 0.00014580599999999833, 0.00014580499999999885, 0.0001458060000000018, 0.00014584700000000103, 0.000145832999999998]</msg>
<status status="PASS" starttime="20201029 18:16:33.002" endtime="20201029 18:16:33.004"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:32.997" endtime="20201029 18:16:33.005"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:32.651" endtime="20201029 18:16:33.005"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:32.626" endtime="20201029 18:16:33.005"></status>
</kw>
<kw name="${n} = 18" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:33.008" endtime="20201029 18:16:33.027"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:33.006" endtime="20201029 18:16:33.028"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:33.036" endtime="20201029 18:16:33.053"></status>
</kw>
<msg timestamp="20201029 18:16:33.053" level="INFO">${RESULT} = {'cmd': 'list_ops 18', 'msg': ['list_ops 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:33.034" endtime="20201029 18:16:33.054"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:33.056" level="INFO">${RESULT} = {'cmd': 'list_ops 18', 'msg': ['list_ops 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:33.054" endtime="20201029 18:16:33.056"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:33.057" endtime="20201029 18:16:33.059"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:33.032" endtime="20201029 18:16:33.060"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:33.030" endtime="20201029 18:16:33.060"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:33.067" endtime="20201029 18:16:33.353"></status>
</kw>
<msg timestamp="20201029 18:16:33.356" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016742889, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:16:33.065" endtime="20201029 18:16:33.356"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:33.364" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016742889, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:16:33.357" endtime="20201029 18:16:33.365"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:33.365" endtime="20201029 18:16:33.367"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:33.063" endtime="20201029 18:16:33.367"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:33.061" endtime="20201029 18:16:33.368"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:16:33.372" level="INFO">${PHILIP_RES} = [{'diff': 0.00015988899999999986}, {'diff': 0.00015976399999999974}, {'diff': 0.00015972200000000103}, {'diff': 0.00015979199999999888}, {'diff': 0.0001597779999999993}, {'diff': 0.0001597220000000010...</msg>
<status status="PASS" starttime="20201029 18:16:33.369" endtime="20201029 18:16:33.372"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:33.376" level="INFO">${RESULT} = {'diff': [0.00015988899999999986, 0.00015976399999999974, 0.00015972200000000103, 0.00015979199999999888, 0.0001597779999999993, 0.00015972200000000103, 0.0001597779999999993, 0.0001597779999999993, 0...</msg>
<status status="PASS" starttime="20201029 18:16:33.373" endtime="20201029 18:16:33.376"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:33.380" level="INFO">NAME: 18-timer-trace</msg>
<status status="PASS" starttime="20201029 18:16:33.379" endtime="20201029 18:16:33.380"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:33.383" level="INFO">VALUE: [0.00015988899999999986, 0.00015976399999999974, 0.00015972200000000103, 0.00015979199999999888, 0.0001597779999999993, 0.00015972200000000103, 0.0001597779999999993, 0.0001597779999999993, 0.0001597779999999993, 0.00015976399999999974, 0.00015976399999999974, 0.00015976399999999974, 0.0001597779999999993, 0.00015976399999999974, 0.00015976399999999974, 0.00015976399999999974, 0.00015979199999999888, 0.0001597779999999993, 0.0001597779999999993, 0.00015975000000000017, 0.00015977699999999984, 0.0001597779999999993, 0.00015976300000000027, 0.0001597360000000006, 0.00015979100000000288, 0.00015976300000000027, 0.00015973599999999713, 0.00015976399999999974, 0.00015976399999999974, 0.0001597909999999994, 0.0001597640000000032, 0.00015981900000000202, 0.0001597640000000032, 0.00015977800000000278, 0.0001597779999999993, 0.0001597640000000032, 0.0001597640000000032, 0.00015977800000000278, 0.00015976399999999974, 0.0001597640000000032, 0.00015976399999999974, 0.0001597779999999993, 0.00015977800000000278, 0.00015980599999999845, 0.00015976399999999974, 0.00015976399999999974, 0.00015979199999999888, 0.0001597360000000006, 0.00015976399999999974, 0.0001597779999999993]</msg>
<status status="PASS" starttime="20201029 18:16:33.381" endtime="20201029 18:16:33.384"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:33.377" endtime="20201029 18:16:33.385"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:33.028" endtime="20201029 18:16:33.385"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:33.006" endtime="20201029 18:16:33.385"></status>
</kw>
<kw name="${n} = 19" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:33.388" endtime="20201029 18:16:33.407"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:33.386" endtime="20201029 18:16:33.408"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:33.416" endtime="20201029 18:16:33.435"></status>
</kw>
<msg timestamp="20201029 18:16:33.435" level="INFO">${RESULT} = {'cmd': 'list_ops 19', 'msg': ['list_ops 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:33.414" endtime="20201029 18:16:33.435"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:33.437" level="INFO">${RESULT} = {'cmd': 'list_ops 19', 'msg': ['list_ops 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:33.436" endtime="20201029 18:16:33.438"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:33.439" endtime="20201029 18:16:33.440"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:33.412" endtime="20201029 18:16:33.441"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:33.410" endtime="20201029 18:16:33.441"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:33.448" endtime="20201029 18:16:33.734"></status>
</kw>
<msg timestamp="20201029 18:16:33.737" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016795139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016969597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:33.446" endtime="20201029 18:16:33.737"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:33.744" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016795139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016969597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:33.738" endtime="20201029 18:16:33.745"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:33.746" endtime="20201029 18:16:33.747"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:33.443" endtime="20201029 18:16:33.748"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:33.442" endtime="20201029 18:16:33.748"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:16:33.752" level="INFO">${PHILIP_RES} = [{'diff': 0.00017445799999999886}, {'diff': 0.00017434799999999778}, {'diff': 0.0001743469999999983}, {'diff': 0.00017434799999999778}, {'diff': 0.00017431899999999917}, {'diff': 0.0001743479999999977...</msg>
<status status="PASS" starttime="20201029 18:16:33.749" endtime="20201029 18:16:33.752"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:33.757" level="INFO">${RESULT} = {'diff': [0.00017445799999999886, 0.00017434799999999778, 0.0001743469999999983, 0.00017434799999999778, 0.00017431899999999917, 0.00017434799999999778, 0.00017433299999999874, 0.00017431999999999864,...</msg>
<status status="PASS" starttime="20201029 18:16:33.753" endtime="20201029 18:16:33.757"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:33.762" level="INFO">NAME: 19-timer-trace</msg>
<status status="PASS" starttime="20201029 18:16:33.760" endtime="20201029 18:16:33.762"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:33.764" level="INFO">VALUE: [0.00017445799999999886, 0.00017434799999999778, 0.0001743469999999983, 0.00017434799999999778, 0.00017431899999999917, 0.00017434799999999778, 0.00017433299999999874, 0.00017431999999999864, 0.00017433299999999874, 0.0001743339999999982, 0.00017433299999999874, 0.00017433400000000168, 0.00017434700000000178, 0.0001743200000000021, 0.00017434700000000178, 0.00017429100000000003, 0.00017434700000000178, 0.00017433400000000168, 0.00017436100000000135, 0.00017431899999999917, 0.00017434700000000178, 0.0001743330000000022, 0.00017434700000000178, 0.00017434700000000178, 0.00017438799999999754, 0.00017431899999999917, 0.00017436099999999788, 0.00017433299999999874, 0.00017437499999999745, 0.0001743469999999983, 0.00017440200000000058, 0.0001743890000000005, 0.0001743469999999983, 0.00017431899999999917, 0.0001743469999999983, 0.00017433299999999874, 0.0001743469999999983, 0.00017437500000000092, 0.00017427799999999993, 0.00017433299999999874, 0.00017434800000000125, 0.00017437500000000092, 0.00017434800000000125, 0.00017433299999999874, 0.00017441699999999963, 0.00017434700000000178, 0.00017437500000000092, 0.00017436100000000135, 0.00017433400000000168, 0.00017436100000000135]</msg>
<status status="PASS" starttime="20201029 18:16:33.763" endtime="20201029 18:16:33.765"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:33.758" endtime="20201029 18:16:33.765"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:33.408" endtime="20201029 18:16:33.766"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:33.386" endtime="20201029 18:16:33.766"></status>
</kw>
<kw name="${n} = 20" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:33.768" endtime="20201029 18:16:33.788"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:33.767" endtime="20201029 18:16:33.788"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:33.796" endtime="20201029 18:16:33.815"></status>
</kw>
<msg timestamp="20201029 18:16:33.816" level="INFO">${RESULT} = {'cmd': 'list_ops 20', 'msg': ['list_ops 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:33.795" endtime="20201029 18:16:33.816"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:33.818" level="INFO">${RESULT} = {'cmd': 'list_ops 20', 'msg': ['list_ops 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:33.817" endtime="20201029 18:16:33.818"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:33.819" endtime="20201029 18:16:33.821"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:33.792" endtime="20201029 18:16:33.821"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:33.790" endtime="20201029 18:16:33.822"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:33.828" endtime="20201029 18:16:34.114"></status>
</kw>
<msg timestamp="20201029 18:16:34.117" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016544153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01673375, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:16:33.827" endtime="20201029 18:16:34.117"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:34.125" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016544153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01673375, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:16:34.118" endtime="20201029 18:16:34.125"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:34.126" endtime="20201029 18:16:34.129"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:33.824" endtime="20201029 18:16:34.129"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:33.822" endtime="20201029 18:16:34.130"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:16:34.134" level="INFO">${PHILIP_RES} = [{'diff': 0.00018959699999999968}, {'diff': 0.00018954200000000088}, {'diff': 0.0001895410000000014}, {'diff': 0.00018952699999999836}, {'diff': 0.00018956900000000054}, {'diff': 0.0001895280000000013...</msg>
<status status="PASS" starttime="20201029 18:16:34.130" endtime="20201029 18:16:34.134"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:34.138" level="INFO">${RESULT} = {'diff': [0.00018959699999999968, 0.00018954200000000088, 0.0001895410000000014, 0.00018952699999999836, 0.00018956900000000054, 0.0001895280000000013, 0.0001895280000000013, 0.00018956900000000054, 0...</msg>
<status status="PASS" starttime="20201029 18:16:34.135" endtime="20201029 18:16:34.138"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:34.142" level="INFO">NAME: 20-timer-trace</msg>
<status status="PASS" starttime="20201029 18:16:34.141" endtime="20201029 18:16:34.142"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:34.144" level="INFO">VALUE: [0.00018959699999999968, 0.00018954200000000088, 0.0001895410000000014, 0.00018952699999999836, 0.00018956900000000054, 0.0001895280000000013, 0.0001895280000000013, 0.00018956900000000054, 0.00018951399999999827, 0.00018951400000000174, 0.00018948599999999913, 0.00018951399999999827, 0.00018954200000000088, 0.0001895280000000013, 0.0001894860000000026, 0.0001895129999999988, 0.0001894869999999986, 0.0001895280000000013, 0.00018952799999999784, 0.00018955599999999698, 0.0001895280000000013, 0.0001895280000000013, 0.00018952799999999784, 0.00018954200000000088, 0.00018950000000000217, 0.0001895129999999988, 0.0001894999999999987, 0.0001894999999999987, 0.00018951400000000174, 0.00018952799999999784, 0.00018952799999999784, 0.0001895280000000013, 0.00018951400000000174, 0.00018951399999999827, 0.00018958400000000306, 0.00018959699999999968, 0.00018952699999999836, 0.00018951399999999827, 0.0001895410000000014, 0.00018954200000000088, 0.0001895280000000013, 0.0001894999999999987, 0.0001895280000000013, 0.00018947200000000303, 0.0001894999999999987, 0.0001895280000000013, 0.00018951400000000174, 0.0001895410000000014, 0.00018951399999999827, 0.0001895549999999975]</msg>
<status status="PASS" starttime="20201029 18:16:34.143" endtime="20201029 18:16:34.145"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:34.138" endtime="20201029 18:16:34.146"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:33.789" endtime="20201029 18:16:34.146"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:33.766" endtime="20201029 18:16:34.146"></status>
</kw>
<kw name="${n} = 21" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:34.149" endtime="20201029 18:16:34.168"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:34.147" endtime="20201029 18:16:34.169"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:34.177" endtime="20201029 18:16:34.196"></status>
</kw>
<msg timestamp="20201029 18:16:34.196" level="INFO">${RESULT} = {'cmd': 'list_ops 21', 'msg': ['list_ops 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:34.175" endtime="20201029 18:16:34.196"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:34.198" level="INFO">${RESULT} = {'cmd': 'list_ops 21', 'msg': ['list_ops 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:34.197" endtime="20201029 18:16:34.199"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:34.199" endtime="20201029 18:16:34.202"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:34.173" endtime="20201029 18:16:34.203"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:34.171" endtime="20201029 18:16:34.203"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:34.209" endtime="20201029 18:16:34.495"></status>
</kw>
<msg timestamp="20201029 18:16:34.498" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016639389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016844806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:34.208" endtime="20201029 18:16:34.498"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:34.506" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016639389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016844806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:34.499" endtime="20201029 18:16:34.506"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:34.507" endtime="20201029 18:16:34.508"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:34.205" endtime="20201029 18:16:34.509"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:34.204" endtime="20201029 18:16:34.509"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:16:34.513" level="INFO">${PHILIP_RES} = [{'diff': 0.0002054169999999994}, {'diff': 0.0002052909999999998}, {'diff': 0.00020530499999999938}, {'diff': 0.00020533299999999852}, {'diff': 0.00020531999999999842}, {'diff': 0.0002053200000000019}...</msg>
<status status="PASS" starttime="20201029 18:16:34.510" endtime="20201029 18:16:34.514"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:34.517" level="INFO">${RESULT} = {'diff': [0.0002054169999999994, 0.0002052909999999998, 0.00020530499999999938, 0.00020533299999999852, 0.00020531999999999842, 0.0002053200000000019, 0.00020531900000000242, 0.0002052909999999998, 0....</msg>
<status status="PASS" starttime="20201029 18:16:34.514" endtime="20201029 18:16:34.518"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:34.522" level="INFO">NAME: 21-timer-trace</msg>
<status status="PASS" starttime="20201029 18:16:34.521" endtime="20201029 18:16:34.522"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:34.524" level="INFO">VALUE: [0.0002054169999999994, 0.0002052909999999998, 0.00020530499999999938, 0.00020533299999999852, 0.00020531999999999842, 0.0002053200000000019, 0.00020531900000000242, 0.0002052909999999998, 0.00020530499999999938, 0.00020530499999999938, 0.00020529199999999928, 0.00020530599999999885, 0.00020530599999999885, 0.00020530499999999938, 0.00020530499999999938, 0.00020531900000000242, 0.00020530600000000232, 0.0002053200000000019, 0.00020533300000000199, 0.00020530499999999938, 0.0002052909999999998, 0.00020530499999999938, 0.00020531999999999842, 0.00020534700000000156, 0.00020529200000000275, 0.00020530500000000285, 0.0002052909999999998, 0.00020531899999999895, 0.00020530599999999885, 0.00020530599999999885, 0.00020530599999999885, 0.0002052499999999971, 0.00020530499999999938, 0.0002052909999999998, 0.00020529200000000275, 0.00020530600000000232, 0.00020529199999999928, 0.00020529199999999928, 0.0002052909999999998, 0.00020530499999999938, 0.00020533299999999852, 0.00020530599999999885, 0.0002053200000000019, 0.00020530600000000232, 0.00020538900000000027, 0.00020526400000000014, 0.00020530499999999938, 0.00020529199999999928, 0.00020530599999999885, 0.00020529199999999928]</msg>
<status status="PASS" starttime="20201029 18:16:34.523" endtime="20201029 18:16:34.526"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:34.518" endtime="20201029 18:16:34.526"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:34.169" endtime="20201029 18:16:34.527"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:34.147" endtime="20201029 18:16:34.527"></status>
</kw>
<kw name="${n} = 22" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:34.529" endtime="20201029 18:16:34.549"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:34.528" endtime="20201029 18:16:34.549"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:34.557" endtime="20201029 18:16:34.577"></status>
</kw>
<msg timestamp="20201029 18:16:34.578" level="INFO">${RESULT} = {'cmd': 'list_ops 22', 'msg': ['list_ops 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:34.556" endtime="20201029 18:16:34.578"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:34.580" level="INFO">${RESULT} = {'cmd': 'list_ops 22', 'msg': ['list_ops 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:34.579" endtime="20201029 18:16:34.581"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:34.581" endtime="20201029 18:16:34.583"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:34.553" endtime="20201029 18:16:34.584"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:34.551" endtime="20201029 18:16:34.584"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:34.590" endtime="20201029 18:16:34.876"></status>
</kw>
<msg timestamp="20201029 18:16:34.879" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016632167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016853986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:34.589" endtime="20201029 18:16:34.880"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:34.887" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016632167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016853986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:34.880" endtime="20201029 18:16:34.888"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:34.888" endtime="20201029 18:16:34.890"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:34.586" endtime="20201029 18:16:34.891"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:34.585" endtime="20201029 18:16:34.891"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:16:34.895" level="INFO">${PHILIP_RES} = [{'diff': 0.00022181900000000157}, {'diff': 0.00022169500000000092}, {'diff': 0.00022169500000000092}, {'diff': 0.00022170800000000102}, {'diff': 0.00022170799999999755}, {'diff': 0.000221708999999997...</msg>
<status status="PASS" starttime="20201029 18:16:34.892" endtime="20201029 18:16:34.895"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:34.900" level="INFO">${RESULT} = {'diff': [0.00022181900000000157, 0.00022169500000000092, 0.00022169500000000092, 0.00022170800000000102, 0.00022170799999999755, 0.00022170899999999702, 0.00022168100000000135, 0.00022168000000000188...</msg>
<status status="PASS" starttime="20201029 18:16:34.896" endtime="20201029 18:16:34.900"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:34.904" level="INFO">NAME: 22-timer-trace</msg>
<status status="PASS" starttime="20201029 18:16:34.903" endtime="20201029 18:16:34.904"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:34.906" level="INFO">VALUE: [0.00022181900000000157, 0.00022169500000000092, 0.00022169500000000092, 0.00022170800000000102, 0.00022170799999999755, 0.00022170899999999702, 0.00022168100000000135, 0.00022168000000000188, 0.00022173600000000016, 0.0002217090000000005, 0.0002216799999999984, 0.00022172200000000059, 0.00022169500000000092, 0.00022169500000000092, 0.00022170800000000102, 0.00022169399999999798, 0.00022168099999999788, 0.00022169500000000092, 0.00022163900000000264, 0.00022172200000000059, 0.00022169500000000092, 0.00022169399999999798, 0.00022177799999999886, 0.00022168100000000135, 0.00022172200000000059, 0.00022169400000000145, 0.00022172200000000059, 0.00022170899999999702, 0.00022170799999999755, 0.00022170800000000102, 0.00022169400000000145, 0.00022169500000000092, 0.00022169400000000145, 0.00022174999999999973, 0.00022168099999999788, 0.00022174999999999973, 0.00022169400000000145, 0.00022170800000000102, 0.0002217090000000005, 0.00022170799999999755, 0.00022172200000000059, 0.00022163900000000264, 0.0002217090000000005, 0.00022169400000000145, 0.00022170799999999755, 0.00022173600000000016, 0.0002217090000000005, 0.00022169400000000145, 0.00022172200000000059, 0.0002217090000000005]</msg>
<status status="PASS" starttime="20201029 18:16:34.905" endtime="20201029 18:16:34.907"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:34.901" endtime="20201029 18:16:34.908"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:34.550" endtime="20201029 18:16:34.908"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:34.527" endtime="20201029 18:16:34.908"></status>
</kw>
<kw name="${n} = 23" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:34.911" endtime="20201029 18:16:34.930"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:34.909" endtime="20201029 18:16:34.931"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:34.939" endtime="20201029 18:16:34.961"></status>
</kw>
<msg timestamp="20201029 18:16:34.962" level="INFO">${RESULT} = {'cmd': 'list_ops 23', 'msg': ['list_ops 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:34.937" endtime="20201029 18:16:34.962"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:34.964" level="INFO">${RESULT} = {'cmd': 'list_ops 23', 'msg': ['list_ops 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:34.963" endtime="20201029 18:16:34.965"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:34.965" endtime="20201029 18:16:34.967"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:34.935" endtime="20201029 18:16:34.968"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:34.933" endtime="20201029 18:16:34.968"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:34.974" endtime="20201029 18:16:35.261"></status>
</kw>
<msg timestamp="20201029 18:16:35.264" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016768319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017007153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:34.973" endtime="20201029 18:16:35.264"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:35.272" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016768319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017007153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:35.265" endtime="20201029 18:16:35.273"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:35.274" endtime="20201029 18:16:35.275"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:34.970" endtime="20201029 18:16:35.276"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:34.969" endtime="20201029 18:16:35.276"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:16:35.280" level="INFO">${PHILIP_RES} = [{'diff': 0.00023883400000000027}, {'diff': 0.00023869500000000057}, {'diff': 0.00023872200000000024}, {'diff': 0.0002387079999999972}, {'diff': 0.0002387229999999997}, {'diff': 0.0002386949999999971}...</msg>
<status status="PASS" starttime="20201029 18:16:35.277" endtime="20201029 18:16:35.280"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:35.284" level="INFO">${RESULT} = {'diff': [0.00023883400000000027, 0.00023869500000000057, 0.00023872200000000024, 0.0002387079999999972, 0.0002387229999999997, 0.0002386949999999971, 0.00023872200000000024, 0.00023870800000000067, 0...</msg>
<status status="PASS" starttime="20201029 18:16:35.281" endtime="20201029 18:16:35.284"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:35.288" level="INFO">NAME: 23-timer-trace</msg>
<status status="PASS" starttime="20201029 18:16:35.287" endtime="20201029 18:16:35.289"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:35.291" level="INFO">VALUE: [0.00023883400000000027, 0.00023869500000000057, 0.00023872200000000024, 0.0002387079999999972, 0.0002387229999999997, 0.0002386949999999971, 0.00023872200000000024, 0.00023870800000000067, 0.00023870800000000067, 0.000238681000000001, 0.00023866600000000196, 0.0002386940000000011, 0.00023870800000000067, 0.0002387919999999981, 0.00023870800000000067, 0.00023867999999999806, 0.00023866699999999796, 0.00023870900000000014, 0.0002386659999999985, 0.00023870800000000067, 0.0002386940000000011, 0.00023870900000000014, 0.0002386659999999985, 0.00023868000000000153, 0.00023866700000000143, 0.00023869500000000057, 0.0002387359999999998, 0.00023869399999999763, 0.00023874999999999938, 0.0002386949999999971, 0.00023872200000000024, 0.00023870800000000067, 0.0002386940000000011, 0.00023870900000000014, 0.00023872200000000024, 0.00023870800000000067, 0.00023870800000000067, 0.00023870900000000014, 0.00023869500000000057, 0.00023870800000000067, 0.00023874999999999938, 0.0002387079999999972, 0.00023875000000000285, 0.00023870800000000067, 0.0002386940000000011, 0.00023870800000000067, 0.00023869500000000057, 0.00023870800000000067, 0.00023874999999999938, 0.00023870800000000067]</msg>
<status status="PASS" starttime="20201029 18:16:35.289" endtime="20201029 18:16:35.291"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:35.285" endtime="20201029 18:16:35.292"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:34.932" endtime="20201029 18:16:35.292"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:34.909" endtime="20201029 18:16:35.293"></status>
</kw>
<kw name="${n} = 24" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:35.295" endtime="20201029 18:16:35.314"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:35.294" endtime="20201029 18:16:35.315"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:35.323" endtime="20201029 18:16:35.346"></status>
</kw>
<msg timestamp="20201029 18:16:35.346" level="INFO">${RESULT} = {'cmd': 'list_ops 24', 'msg': ['list_ops 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:35.322" endtime="20201029 18:16:35.347"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:35.349" level="INFO">${RESULT} = {'cmd': 'list_ops 24', 'msg': ['list_ops 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:35.347" endtime="20201029 18:16:35.349"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:35.350" endtime="20201029 18:16:35.352"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:35.319" endtime="20201029 18:16:35.353"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:35.317" endtime="20201029 18:16:35.353"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:35.360" endtime="20201029 18:16:35.646"></status>
</kw>
<msg timestamp="20201029 18:16:35.649" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016870042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017126472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:35.358" endtime="20201029 18:16:35.649"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:35.657" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016870042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017126472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:35.650" endtime="20201029 18:16:35.657"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:35.658" endtime="20201029 18:16:35.660"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:35.356" endtime="20201029 18:16:35.660"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:35.354" endtime="20201029 18:16:35.661"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:16:35.665" level="INFO">${PHILIP_RES} = [{'diff': 0.00025643000000000193}, {'diff': 0.00025637499999999966}, {'diff': 0.0002562640000000026}, {'diff': 0.0002563059999999978}, {'diff': 0.00025629199999999824}, {'diff': 0.00025632000000000085...</msg>
<status status="PASS" starttime="20201029 18:16:35.661" endtime="20201029 18:16:35.665"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:35.669" level="INFO">${RESULT} = {'diff': [0.00025643000000000193, 0.00025637499999999966, 0.0002562640000000026, 0.0002563059999999978, 0.00025629199999999824, 0.00025632000000000085, 0.0002563340000000004, 0.0002563059999999978, 0....</msg>
<status status="PASS" starttime="20201029 18:16:35.666" endtime="20201029 18:16:35.669"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:35.673" level="INFO">NAME: 24-timer-trace</msg>
<status status="PASS" starttime="20201029 18:16:35.672" endtime="20201029 18:16:35.673"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:35.675" level="INFO">VALUE: [0.00025643000000000193, 0.00025637499999999966, 0.0002562640000000026, 0.0002563059999999978, 0.00025629199999999824, 0.00025632000000000085, 0.0002563340000000004, 0.0002563059999999978, 0.0002563340000000004, 0.00025633300000000095, 0.0002562779999999987, 0.00025633300000000095, 0.00025630499999999834, 0.0002563189999999979, 0.0002563050000000018, 0.00025629099999999877, 0.0002563189999999979, 0.0002563050000000018, 0.0002563329999999975, 0.00025632000000000085, 0.0002563060000000013, 0.0002563609999999966, 0.00025632000000000085, 0.0002562920000000017, 0.0002563059999999978, 0.0002563060000000013, 0.0002563050000000018, 0.00025624999999999953, 0.0002563190000000014, 0.0002563190000000014, 0.00025638899999999923, 0.0002563470000000005, 0.0002563880000000032, 0.0002563059999999978, 0.0002563340000000004, 0.0002563059999999978, 0.0002563059999999978, 0.0002563470000000005, 0.0002563059999999978, 0.0002563060000000013, 0.0002563050000000018, 0.00025629099999999877, 0.0002563470000000005, 0.00025633300000000095, 0.00025634699999999705, 0.00025633300000000095, 0.0002563190000000014, 0.0002563189999999979, 0.00025632000000000085, 0.0002563060000000013]</msg>
<status status="PASS" starttime="20201029 18:16:35.674" endtime="20201029 18:16:35.677"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:35.669" endtime="20201029 18:16:35.678"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:35.316" endtime="20201029 18:16:35.678"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:35.293" endtime="20201029 18:16:35.678"></status>
</kw>
<kw name="${n} = 25" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:35.681" endtime="20201029 18:16:35.700"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:35.679" endtime="20201029 18:16:35.701"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:35.709" endtime="20201029 18:16:35.732"></status>
</kw>
<msg timestamp="20201029 18:16:35.732" level="INFO">${RESULT} = {'cmd': 'list_ops 25', 'msg': ['list_ops 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:35.707" endtime="20201029 18:16:35.733"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:35.735" level="INFO">${RESULT} = {'cmd': 'list_ops 25', 'msg': ['list_ops 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:35.733" endtime="20201029 18:16:35.735"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:35.736" endtime="20201029 18:16:35.737"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:35.705" endtime="20201029 18:16:35.738"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:35.703" endtime="20201029 18:16:35.738"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:35.745" endtime="20201029 18:16:36.031"></status>
</kw>
<msg timestamp="20201029 18:16:36.034" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016636208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016910861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:35.743" endtime="20201029 18:16:36.034"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:36.042" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016636208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016910861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:36.035" endtime="20201029 18:16:36.042"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:36.043" endtime="20201029 18:16:36.044"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:35.741" endtime="20201029 18:16:36.045"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:35.739" endtime="20201029 18:16:36.045"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:16:36.049" level="INFO">${PHILIP_RES} = [{'diff': 0.0002746529999999997}, {'diff': 0.0002745409999999997}, {'diff': 0.00027454199999999915}, {'diff': 0.000274514}, {'diff': 0.000274514}, {'diff': 0.000274514}, {'diff': 0.0002745279999999996...</msg>
<status status="PASS" starttime="20201029 18:16:36.046" endtime="20201029 18:16:36.049"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:36.054" level="INFO">${RESULT} = {'diff': [0.0002746529999999997, 0.0002745409999999997, 0.00027454199999999915, 0.000274514, 0.000274514, 0.000274514, 0.0002745279999999996, 0.0002745279999999996, 0.000274514, 0.0002745270000000001,...</msg>
<status status="PASS" starttime="20201029 18:16:36.050" endtime="20201029 18:16:36.054"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:36.058" level="INFO">NAME: 25-timer-trace</msg>
<status status="PASS" starttime="20201029 18:16:36.057" endtime="20201029 18:16:36.059"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:36.061" level="INFO">VALUE: [0.0002746529999999997, 0.0002745409999999997, 0.00027454199999999915, 0.000274514, 0.000274514, 0.000274514, 0.0002745279999999996, 0.0002745279999999996, 0.000274514, 0.0002745270000000001, 0.00027450000000000044, 0.0002745279999999996, 0.000274514, 0.0002745409999999997, 0.0002745420000000026, 0.00027454199999999915, 0.000274514, 0.00027451300000000053, 0.00027447199999999783, 0.0002745279999999996, 0.00027454199999999915, 0.0002745270000000001, 0.0002745279999999996, 0.0002745279999999996, 0.0002745279999999996, 0.0002745270000000001, 0.00027454199999999915, 0.0002744859999999974, 0.00027454199999999915, 0.0002745690000000023, 0.00027455499999999924, 0.0002745279999999996, 0.000274514, 0.0002745689999999988, 0.00027451300000000053, 0.0002745279999999996, 0.00027452800000000305, 0.00027445800000000173, 0.0002745970000000014, 0.000274514, 0.0002745279999999996, 0.00027444400000000216, 0.0002745409999999997, 0.0002744720000000013, 0.0002745279999999996, 0.0002745270000000001, 0.0002745409999999997, 0.00027448600000000087, 0.00027454199999999915, 0.0002745140000000035]</msg>
<status status="PASS" starttime="20201029 18:16:36.059" endtime="20201029 18:16:36.066"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:36.055" endtime="20201029 18:16:36.066"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:35.701" endtime="20201029 18:16:36.067"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:35.679" endtime="20201029 18:16:36.067"></status>
</kw>
<kw name="${n} = 26" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:36.069" endtime="20201029 18:16:36.089"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:36.068" endtime="20201029 18:16:36.089"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:36.097" endtime="20201029 18:16:36.121"></status>
</kw>
<msg timestamp="20201029 18:16:36.122" level="INFO">${RESULT} = {'cmd': 'list_ops 26', 'msg': ['list_ops 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:36.096" endtime="20201029 18:16:36.122"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:36.124" level="INFO">${RESULT} = {'cmd': 'list_ops 26', 'msg': ['list_ops 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:36.123" endtime="20201029 18:16:36.124"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:36.125" endtime="20201029 18:16:36.127"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:36.093" endtime="20201029 18:16:36.127"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:36.091" endtime="20201029 18:16:36.128"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:36.134" endtime="20201029 18:16:36.423"></status>
</kw>
<msg timestamp="20201029 18:16:36.426" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016633556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016927028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:36.133" endtime="20201029 18:16:36.426"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:36.434" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016633556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016927028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:36.427" endtime="20201029 18:16:36.434"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:36.435" endtime="20201029 18:16:36.437"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:36.130" endtime="20201029 18:16:36.437"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:36.128" endtime="20201029 18:16:36.438"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:16:36.441" level="INFO">${PHILIP_RES} = [{'diff': 0.0002934719999999995}, {'diff': 0.00029334799999999883}, {'diff': 0.00029334699999999936}, {'diff': 0.0002933199999999997}, {'diff': 0.00029329200000000055}, {'diff': 0.0002933190000000002}...</msg>
<status status="PASS" starttime="20201029 18:16:36.438" endtime="20201029 18:16:36.442"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:36.445" level="INFO">${RESULT} = {'diff': [0.0002934719999999995, 0.00029334799999999883, 0.00029334699999999936, 0.0002933199999999997, 0.00029329200000000055, 0.0002933190000000002, 0.0002934030000000011, 0.00029333400000000273, 0....</msg>
<status status="PASS" starttime="20201029 18:16:36.442" endtime="20201029 18:16:36.446"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:36.450" level="INFO">NAME: 26-timer-trace</msg>
<status status="PASS" starttime="20201029 18:16:36.449" endtime="20201029 18:16:36.450"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:36.452" level="INFO">VALUE: [0.0002934719999999995, 0.00029334799999999883, 0.00029334699999999936, 0.0002933199999999997, 0.00029329200000000055, 0.0002933190000000002, 0.0002934030000000011, 0.00029333400000000273, 0.00029336099999999893, 0.00029336099999999893, 0.0002933329999999998, 0.0002933060000000001, 0.00029336099999999893, 0.0002934030000000011, 0.00029333399999999926, 0.0002933610000000024, 0.0002933329999999998, 0.00029336099999999893, 0.00029336099999999893, 0.0002933190000000002, 0.00029336099999999893, 0.00029338899999999807, 0.00029336099999999893, 0.0002933610000000024, 0.0002933749999999985, 0.0002933329999999998, 0.00029336099999999893, 0.00029334699999999936, 0.00029333399999999926, 0.00029330500000000065, 0.00029334699999999936, 0.0002933199999999997, 0.00029336099999999893, 0.0002933329999999998, 0.0002933610000000024, 0.0002934449999999998, 0.0002933190000000002, 0.0002933060000000001, 0.00029334799999999883, 0.00029333300000000326, 0.00029336099999999893, 0.00029336099999999893, 0.00029334699999999936, 0.0002933329999999998, 0.00029336099999999893, 0.0002933060000000036, 0.00029336099999999893, 0.00029334699999999936, 0.00029333399999999926, 0.00029334699999999936]</msg>
<status status="PASS" starttime="20201029 18:16:36.451" endtime="20201029 18:16:36.453"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:36.446" endtime="20201029 18:16:36.453"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:36.090" endtime="20201029 18:16:36.454"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:36.067" endtime="20201029 18:16:36.454"></status>
</kw>
<kw name="${n} = 27" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:36.456" endtime="20201029 18:16:36.476"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:36.455" endtime="20201029 18:16:36.476"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:36.485" endtime="20201029 18:16:36.510"></status>
</kw>
<msg timestamp="20201029 18:16:36.511" level="INFO">${RESULT} = {'cmd': 'list_ops 27', 'msg': ['list_ops 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:36.483" endtime="20201029 18:16:36.511"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:36.513" level="INFO">${RESULT} = {'cmd': 'list_ops 27', 'msg': ['list_ops 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:36.512" endtime="20201029 18:16:36.514"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:36.514" endtime="20201029 18:16:36.517"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:36.480" endtime="20201029 18:16:36.517"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:36.478" endtime="20201029 18:16:36.518"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:36.524" endtime="20201029 18:16:36.810"></status>
</kw>
<msg timestamp="20201029 18:16:36.813" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016868583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017181472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:36.523" endtime="20201029 18:16:36.813"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:36.821" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016868583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017181472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:36.814" endtime="20201029 18:16:36.822"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:36.822" endtime="20201029 18:16:36.824"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:36.520" endtime="20201029 18:16:36.825"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:36.518" endtime="20201029 18:16:36.825"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:16:36.829" level="INFO">${PHILIP_RES} = [{'diff': 0.0003128890000000002}, {'diff': 0.0003128609999999976}, {'diff': 0.00031283300000000194}, {'diff': 0.00031277799999999967}, {'diff': 0.0003127770000000002}, {'diff': 0.00031277799999999967}...</msg>
<status status="PASS" starttime="20201029 18:16:36.826" endtime="20201029 18:16:36.829"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:36.833" level="INFO">${RESULT} = {'diff': [0.0003128890000000002, 0.0003128609999999976, 0.00031283300000000194, 0.00031277799999999967, 0.0003127770000000002, 0.00031277799999999967, 0.0003128060000000023, 0.0003127770000000002, 0.0...</msg>
<status status="PASS" starttime="20201029 18:16:36.830" endtime="20201029 18:16:36.833"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:36.837" level="INFO">NAME: 27-timer-trace</msg>
<status status="PASS" starttime="20201029 18:16:36.836" endtime="20201029 18:16:36.837"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:36.839" level="INFO">VALUE: [0.0003128890000000002, 0.0003128609999999976, 0.00031283300000000194, 0.00031277799999999967, 0.0003127770000000002, 0.00031277799999999967, 0.0003128060000000023, 0.0003127770000000002, 0.0003127640000000001, 0.0003128749999999972, 0.0003128610000000011, 0.00031279099999999976, 0.00031279199999999924, 0.0003127920000000027, 0.00031280499999999933, 0.0003128329999999985, 0.00031273600000000096, 0.00031279099999999976, 0.00031277799999999967, 0.00031277799999999967, 0.0003127640000000001, 0.00031276299999999715, 0.0003128199999999984, 0.00031279199999999924, 0.0003127770000000002, 0.00031277799999999967, 0.00031279199999999924, 0.0003127220000000014, 0.0003127920000000027, 0.00031279199999999924, 0.00031279099999999976, 0.0003127640000000001, 0.00031279199999999924, 0.00031279099999999976, 0.00031279099999999976, 0.0003127220000000014, 0.0003127640000000001, 0.00031279099999999976, 0.00031279199999999924, 0.0003127640000000001, 0.00031279099999999976, 0.00031279099999999976, 0.0003128059999999988, 0.00031279099999999976, 0.0003127920000000062, 0.0003128059999999988, 0.00031277799999999967, 0.00031279099999999976, 0.00031284699999999804, 0.00031279199999999924]</msg>
<status status="PASS" starttime="20201029 18:16:36.838" endtime="20201029 18:16:36.841"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:36.834" endtime="20201029 18:16:36.842"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:36.477" endtime="20201029 18:16:36.842"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:36.454" endtime="20201029 18:16:36.842"></status>
</kw>
<kw name="${n} = 28" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:36.844" endtime="20201029 18:16:36.864"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:36.843" endtime="20201029 18:16:36.865"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:36.873" endtime="20201029 18:16:36.900"></status>
</kw>
<msg timestamp="20201029 18:16:36.900" level="INFO">${RESULT} = {'cmd': 'list_ops 28', 'msg': ['list_ops 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:36.871" endtime="20201029 18:16:36.900"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:36.903" level="INFO">${RESULT} = {'cmd': 'list_ops 28', 'msg': ['list_ops 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:36.901" endtime="20201029 18:16:36.903"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:36.904" endtime="20201029 18:16:36.905"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:36.869" endtime="20201029 18:16:36.906"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:36.867" endtime="20201029 18:16:36.906"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:36.913" endtime="20201029 18:16:37.198"></status>
</kw>
<msg timestamp="20201029 18:16:37.201" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016832278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017165264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:36.911" endtime="20201029 18:16:37.202"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:37.209" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016832278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017165264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:37.202" endtime="20201029 18:16:37.209"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:37.210" endtime="20201029 18:16:37.212"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:36.908" endtime="20201029 18:16:37.212"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:36.907" endtime="20201029 18:16:37.213"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:16:37.217" level="INFO">${PHILIP_RES} = [{'diff': 0.0003329860000000004}, {'diff': 0.00033281900000000156}, {'diff': 0.0003328470000000007}, {'diff': 0.0003328189999999981}, {'diff': 0.0003327629999999998}, {'diff': 0.00033283300000000113},...</msg>
<status status="PASS" starttime="20201029 18:16:37.214" endtime="20201029 18:16:37.217"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:37.222" level="INFO">${RESULT} = {'diff': [0.0003329860000000004, 0.00033281900000000156, 0.0003328470000000007, 0.0003328189999999981, 0.0003327629999999998, 0.00033283300000000113, 0.0003328049999999985, 0.00033282000000000103, 0.0...</msg>
<status status="PASS" starttime="20201029 18:16:37.218" endtime="20201029 18:16:37.222"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:37.226" level="INFO">NAME: 28-timer-trace</msg>
<status status="PASS" starttime="20201029 18:16:37.225" endtime="20201029 18:16:37.226"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:37.228" level="INFO">VALUE: [0.0003329860000000004, 0.00033281900000000156, 0.0003328470000000007, 0.0003328189999999981, 0.0003327629999999998, 0.00033283300000000113, 0.0003328049999999985, 0.00033282000000000103, 0.00033283300000000113, 0.00033282000000000103, 0.0003328340000000006, 0.00033280600000000146, 0.00033283399999999713, 0.00033281999999999756, 0.00033286100000000027, 0.00033281900000000156, 0.00033283300000000113, 0.00033283300000000113, 0.000332805000000002, 0.00033283300000000113, 0.0003328189999999981, 0.0003328189999999981, 0.0003328189999999981, 0.0003328189999999981, 0.0003328049999999985, 0.00033281900000000156, 0.00033283300000000113, 0.0003327910000000024, 0.0003328470000000007, 0.0003328340000000006, 0.00033282000000000103, 0.00033284800000000017, 0.00033283399999999713, 0.0003328340000000006, 0.00033282000000000103, 0.00033282000000000103, 0.00033282000000000103, 0.00033283300000000113, 0.00033286100000000027, 0.00033283299999999766, 0.0003328330000000046, 0.0003327919999999984, 0.0003328049999999985, 0.00033284699999999723, 0.00033283299999999766, 0.00033283299999999766, 0.0003328189999999981, 0.00033280500000000546, 0.0003327369999999996, 0.00033286100000000374]</msg>
<status status="PASS" starttime="20201029 18:16:37.227" endtime="20201029 18:16:37.229"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:37.223" endtime="20201029 18:16:37.230"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:36.865" endtime="20201029 18:16:37.230"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:36.843" endtime="20201029 18:16:37.230"></status>
</kw>
<kw name="${n} = 29" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:37.233" endtime="20201029 18:16:37.252"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:37.231" endtime="20201029 18:16:37.253"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:37.261" endtime="20201029 18:16:37.289"></status>
</kw>
<msg timestamp="20201029 18:16:37.289" level="INFO">${RESULT} = {'cmd': 'list_ops 29', 'msg': ['list_ops 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:37.259" endtime="20201029 18:16:37.290"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:37.292" level="INFO">${RESULT} = {'cmd': 'list_ops 29', 'msg': ['list_ops 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:37.290" endtime="20201029 18:16:37.292"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:37.293" endtime="20201029 18:16:37.294"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:37.257" endtime="20201029 18:16:37.295"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:37.255" endtime="20201029 18:16:37.295"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:37.302" endtime="20201029 18:16:37.589"></status>
</kw>
<msg timestamp="20201029 18:16:37.593" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016623708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016977292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:37.300" endtime="20201029 18:16:37.593"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:37.600" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016623708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016977292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:37.594" endtime="20201029 18:16:37.601"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:37.602" endtime="20201029 18:16:37.605"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:37.298" endtime="20201029 18:16:37.606"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:37.296" endtime="20201029 18:16:37.607"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:16:37.615" level="INFO">${PHILIP_RES} = [{'diff': 0.00035358400000000054}, {'diff': 0.00035349999999999965}, {'diff': 0.00035349999999999965}, {'diff': 0.0003534720000000005}, {'diff': 0.00035347199999999704}, {'diff': 0.0003534999999999996...</msg>
<status status="PASS" starttime="20201029 18:16:37.609" endtime="20201029 18:16:37.616"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:37.624" level="INFO">${RESULT} = {'diff': [0.00035358400000000054, 0.00035349999999999965, 0.00035349999999999965, 0.0003534720000000005, 0.00035347199999999704, 0.00035349999999999965, 0.0003534860000000001, 0.0003534860000000001, 0...</msg>
<status status="PASS" starttime="20201029 18:16:37.617" endtime="20201029 18:16:37.625"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:37.633" level="INFO">NAME: 29-timer-trace</msg>
<status status="PASS" starttime="20201029 18:16:37.631" endtime="20201029 18:16:37.634"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:37.638" level="INFO">VALUE: [0.00035358400000000054, 0.00035349999999999965, 0.00035349999999999965, 0.0003534720000000005, 0.00035347199999999704, 0.00035349999999999965, 0.0003534860000000001, 0.0003534860000000001, 0.00035347199999999704, 0.0003534439999999979, 0.0003534860000000001, 0.0003534720000000005, 0.0003534720000000005, 0.0003534590000000004, 0.00035348699999999955, 0.000353473, 0.0003534590000000004, 0.0003534860000000001, 0.00035345800000000094, 0.0003534720000000005, 0.0003535560000000014, 0.0003535139999999992, 0.0003535279999999988, 0.00035345800000000094, 0.0003534720000000005, 0.0003534170000000017, 0.00035345799999999747, 0.0003534860000000001, 0.0003534590000000004, 0.0003535139999999992, 0.00035347199999999704, 0.0003534590000000004, 0.0003534860000000001, 0.0003534720000000005, 0.0003534720000000005, 0.00035345800000000094, 0.0003534720000000005, 0.0003534860000000001, 0.0003534720000000005, 0.000353457999999994, 0.0003535139999999992, 0.00035345800000000094, 0.0003534720000000005, 0.000353473, 0.000353473, 0.0003534860000000001, 0.0003534590000000004, 0.0003534860000000001, 0.0003534720000000005, 0.0003534720000000005]</msg>
<status status="PASS" starttime="20201029 18:16:37.635" endtime="20201029 18:16:37.639"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:37.626" endtime="20201029 18:16:37.640"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:37.253" endtime="20201029 18:16:37.642"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:37.231" endtime="20201029 18:16:37.642"></status>
</kw>
<kw name="${n} = 30" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:37.647" endtime="20201029 18:16:37.668"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:37.644" endtime="20201029 18:16:37.669"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:37.686" endtime="20201029 18:16:37.718"></status>
</kw>
<msg timestamp="20201029 18:16:37.718" level="INFO">${RESULT} = {'cmd': 'list_ops 30', 'msg': ['list_ops 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:37.683" endtime="20201029 18:16:37.718"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:37.720" level="INFO">${RESULT} = {'cmd': 'list_ops 30', 'msg': ['list_ops 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:37.719" endtime="20201029 18:16:37.721"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:37.722" endtime="20201029 18:16:37.724"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:37.678" endtime="20201029 18:16:37.725"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:37.674" endtime="20201029 18:16:37.725"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:37.731" endtime="20201029 18:16:38.019"></status>
</kw>
<msg timestamp="20201029 18:16:38.022" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029045333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029420181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:37.730" endtime="20201029 18:16:38.022"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:38.030" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029045333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029420181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:38.023" endtime="20201029 18:16:38.030"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:38.031" endtime="20201029 18:16:38.033"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:37.727" endtime="20201029 18:16:38.033"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:37.726" endtime="20201029 18:16:38.034"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:16:38.038" level="INFO">${PHILIP_RES} = [{'diff': 0.00037484800000000054}, {'diff': 0.00037470900000000085}, {'diff': 0.0003747219999999975}, {'diff': 0.00037472200000000094}, {'diff': 0.00037472200000000094}, {'diff': 0.0003747220000000044...</msg>
<status status="PASS" starttime="20201029 18:16:38.035" endtime="20201029 18:16:38.038"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:38.042" level="INFO">${RESULT} = {'diff': [0.00037484800000000054, 0.00037470900000000085, 0.0003747219999999975, 0.00037472200000000094, 0.00037472200000000094, 0.0003747220000000044, 0.0003747080000000014, 0.00037476399999999965, 0...</msg>
<status status="PASS" starttime="20201029 18:16:38.039" endtime="20201029 18:16:38.042"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:38.046" level="INFO">NAME: 30-timer-trace</msg>
<status status="PASS" starttime="20201029 18:16:38.045" endtime="20201029 18:16:38.046"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:38.048" level="INFO">VALUE: [0.00037484800000000054, 0.00037470900000000085, 0.0003747219999999975, 0.00037472200000000094, 0.00037472200000000094, 0.0003747220000000044, 0.0003747080000000014, 0.00037476399999999965, 0.00037470799999999443, 0.00037476399999999965, 0.0003747360000000005, 0.00037472200000000094, 0.0003747080000000014, 0.0003747360000000005, 0.0003747080000000014, 0.0003747080000000014, 0.000374721999999994, 0.0003747360000000005, 0.0003746950000000013, 0.0003747770000000067, 0.00037472200000000094, 0.000374737, 0.0003747230000000004, 0.0003747230000000004, 0.00037466700000000214, 0.0003747360000000005, 0.00037472200000000094, 0.00037472200000000094, 0.0003747080000000014, 0.0003747080000000014, 0.00037472200000000094, 0.00037472200000000094, 0.000374721999999994, 0.0003747360000000005, 0.0003747500000000001, 0.00037472200000000094, 0.00037472200000000094, 0.0003747080000000014, 0.0003747909999999993, 0.00037472200000000094, 0.000374721999999994, 0.00037477699999999975, 0.00037472200000000094, 0.000374737, 0.0003747360000000005, 0.0003747630000000002, 0.0003747230000000004, 0.000374737, 0.00037468099999999477, 0.0003747230000000004]</msg>
<status status="PASS" starttime="20201029 18:16:38.047" endtime="20201029 18:16:38.050"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:38.042" endtime="20201029 18:16:38.050"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:37.671" endtime="20201029 18:16:38.051"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:37.643" endtime="20201029 18:16:38.051"></status>
</kw>
<kw name="${n} = 31" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:38.053" endtime="20201029 18:16:38.073"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:38.052" endtime="20201029 18:16:38.073"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:38.082" endtime="20201029 18:16:38.111"></status>
</kw>
<msg timestamp="20201029 18:16:38.112" level="INFO">${RESULT} = {'cmd': 'list_ops 31', 'msg': ['list_ops 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:38.080" endtime="20201029 18:16:38.112"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:38.114" level="INFO">${RESULT} = {'cmd': 'list_ops 31', 'msg': ['list_ops 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:38.113" endtime="20201029 18:16:38.115"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:38.115" endtime="20201029 18:16:38.117"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:38.077" endtime="20201029 18:16:38.117"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:38.075" endtime="20201029 18:16:38.118"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:38.124" endtime="20201029 18:16:38.410"></status>
</kw>
<msg timestamp="20201029 18:16:38.413" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0169965, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017393194, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:16:38.123" endtime="20201029 18:16:38.413"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:38.421" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0169965, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017393194, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:16:38.414" endtime="20201029 18:16:38.422"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:38.423" endtime="20201029 18:16:38.424"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:38.120" endtime="20201029 18:16:38.425"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:38.119" endtime="20201029 18:16:38.425"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:16:38.429" level="INFO">${PHILIP_RES} = [{'diff': 0.0003966939999999995}, {'diff': 0.0003965689999999994}, {'diff': 0.0003965559999999993}, {'diff': 0.00039658299999999896}, {'diff': 0.00039658300000000243}, {'diff': 0.00039659699999999853}...</msg>
<status status="PASS" starttime="20201029 18:16:38.426" endtime="20201029 18:16:38.429"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:38.434" level="INFO">${RESULT} = {'diff': [0.0003966939999999995, 0.0003965689999999994, 0.0003965559999999993, 0.00039658299999999896, 0.00039658300000000243, 0.00039659699999999853, 0.0003965549999999998, 0.0003965689999999994, 0.0...</msg>
<status status="PASS" starttime="20201029 18:16:38.430" endtime="20201029 18:16:38.434"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:38.438" level="INFO">NAME: 31-timer-trace</msg>
<status status="PASS" starttime="20201029 18:16:38.437" endtime="20201029 18:16:38.439"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:38.441" level="INFO">VALUE: [0.0003966939999999995, 0.0003965689999999994, 0.0003965559999999993, 0.00039658299999999896, 0.00039658300000000243, 0.00039659699999999853, 0.0003965549999999998, 0.0003965689999999994, 0.00039655600000000277, 0.00039659699999999853, 0.00039652800000000016, 0.00039659699999999853, 0.00039659699999999853, 0.00039658299999999896, 0.00039658299999999896, 0.00039656900000000286, 0.0003965689999999994, 0.0003965840000000019, 0.000396597999999998, 0.00039658300000000243, 0.0003965689999999994, 0.0003965549999999998, 0.00039658299999999896, 0.00039658299999999896, 0.0003965840000000019, 0.00039659699999999853, 0.0003965840000000019, 0.0003965689999999994, 0.00039658300000000243, 0.00039658299999999896, 0.00039658300000000243, 0.0003965689999999994, 0.0003965840000000019, 0.0003965840000000019, 0.0003966249999999977, 0.0003965689999999994, 0.00039658299999999896, 0.00039658299999999896, 0.0003965830000000059, 0.00039659699999999853, 0.00039654199999999973, 0.00039658399999999844, 0.0003965830000000059, 0.00039658299999999896, 0.00039659699999999853, 0.0003965549999999998, 0.0003965689999999994, 0.00039656999999999887, 0.00039652800000000016, 0.00039658399999999844]</msg>
<status status="PASS" starttime="20201029 18:16:38.439" endtime="20201029 18:16:38.442"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:38.435" endtime="20201029 18:16:38.442"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:38.074" endtime="20201029 18:16:38.443"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:38.051" endtime="20201029 18:16:38.443"></status>
</kw>
<kw name="${n} = 32" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:38.445" endtime="20201029 18:16:38.464"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:38.444" endtime="20201029 18:16:38.465"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:38.473" endtime="20201029 18:16:38.504"></status>
</kw>
<msg timestamp="20201029 18:16:38.505" level="INFO">${RESULT} = {'cmd': 'list_ops 32', 'msg': ['list_ops 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:38.472" endtime="20201029 18:16:38.505"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:38.507" level="INFO">${RESULT} = {'cmd': 'list_ops 32', 'msg': ['list_ops 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:38.506" endtime="20201029 18:16:38.508"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:38.508" endtime="20201029 18:16:38.510"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:38.469" endtime="20201029 18:16:38.511"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:38.467" endtime="20201029 18:16:38.511"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:38.517" endtime="20201029 18:16:38.803"></status>
</kw>
<msg timestamp="20201029 18:16:38.806" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016938458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017357639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:38.516" endtime="20201029 18:16:38.806"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:38.814" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016938458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017357639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:38.807" endtime="20201029 18:16:38.815"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:38.815" endtime="20201029 18:16:38.817"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:38.513" endtime="20201029 18:16:38.818"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:38.512" endtime="20201029 18:16:38.818"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:16:38.822" level="INFO">${PHILIP_RES} = [{'diff': 0.0004191810000000011}, {'diff': 0.00041904100000000194}, {'diff': 0.0004190279999999984}, {'diff': 0.0004190970000000002}, {'diff': 0.0004190139999999988}, {'diff': 0.00041904099999999847},...</msg>
<status status="PASS" starttime="20201029 18:16:38.819" endtime="20201029 18:16:38.822"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:38.826" level="INFO">${RESULT} = {'diff': [0.0004191810000000011, 0.00041904100000000194, 0.0004190279999999984, 0.0004190970000000002, 0.0004190139999999988, 0.00041904099999999847, 0.000419056000000001, 0.000419056000000001, 0.0004...</msg>
<status status="PASS" starttime="20201029 18:16:38.823" endtime="20201029 18:16:38.826"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:38.830" level="INFO">NAME: 32-timer-trace</msg>
<status status="PASS" starttime="20201029 18:16:38.829" endtime="20201029 18:16:38.831"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:38.833" level="INFO">VALUE: [0.0004191810000000011, 0.00041904100000000194, 0.0004190279999999984, 0.0004190970000000002, 0.0004190139999999988, 0.00041904099999999847, 0.000419056000000001, 0.000419056000000001, 0.00041898599999999966, 0.0004190840000000001, 0.00041899999999999923, 0.0004190559999999975, 0.000419056000000001, 0.00041904199999999794, 0.0004190690000000011, 0.000419056000000001, 0.0004190559999999975, 0.00041905499999999804, 0.0004190979999999997, 0.00041904099999999847, 0.00041902800000000184, 0.00041902800000000184, 0.0004190689999999976, 0.00041902800000000184, 0.00041904100000000194, 0.00041904199999999794, 0.00041902700000000237, 0.000419056000000001, 0.00041899999999999923, 0.0004190000000000027, 0.00041904100000000194, 0.00041904199999999794, 0.00041905599999999404, 0.0004190420000000014, 0.0004190420000000014, 0.00041902700000000237, 0.0004190420000000014, 0.00041904100000000194, 0.0004190419999999945, 0.0004190550000000015, 0.000419056000000001, 0.0004190420000000014, 0.00041904100000000194, 0.0004191109999999998, 0.00041906899999999414, 0.000419056000000001, 0.00041904100000000194, 0.0004190420000000014, 0.0004190840000000001, 0.0004190690000000011]</msg>
<status status="PASS" starttime="20201029 18:16:38.832" endtime="20201029 18:16:38.834"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:38.827" endtime="20201029 18:16:38.834"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:38.466" endtime="20201029 18:16:38.835"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:38.443" endtime="20201029 18:16:38.835"></status>
</kw>
<kw name="${n} = 33" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:38.837" endtime="20201029 18:16:38.856"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:38.836" endtime="20201029 18:16:38.857"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:38.865" endtime="20201029 18:16:38.898"></status>
</kw>
<msg timestamp="20201029 18:16:38.898" level="INFO">${RESULT} = {'cmd': 'list_ops 33', 'msg': ['list_ops 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:38.864" endtime="20201029 18:16:38.899"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:38.901" level="INFO">${RESULT} = {'cmd': 'list_ops 33', 'msg': ['list_ops 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:38.899" endtime="20201029 18:16:38.901"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:38.902" endtime="20201029 18:16:38.904"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:38.861" endtime="20201029 18:16:38.905"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:38.859" endtime="20201029 18:16:38.905"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:38.912" endtime="20201029 18:16:39.212"></status>
</kw>
<msg timestamp="20201029 18:16:39.219" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0167685, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01721075, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:16:38.910" endtime="20201029 18:16:39.220"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:39.230" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0167685, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01721075, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:16:39.222" endtime="20201029 18:16:39.230"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:39.231" endtime="20201029 18:16:39.233"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:38.908" endtime="20201029 18:16:39.233"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:38.906" endtime="20201029 18:16:39.234"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:16:39.237" level="INFO">${PHILIP_RES} = [{'diff': 0.00044225000000000167}, {'diff': 0.000442111000000002}, {'diff': 0.000442111000000002}, {'diff': 0.0004421109999999985}, {'diff': 0.0004421109999999985}, {'diff': 0.0004421109999999985}, {'...</msg>
<status status="PASS" starttime="20201029 18:16:39.234" endtime="20201029 18:16:39.238"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:39.242" level="INFO">${RESULT} = {'diff': [0.00044225000000000167, 0.000442111000000002, 0.000442111000000002, 0.0004421109999999985, 0.0004421109999999985, 0.0004421109999999985, 0.00044213899999999765, 0.0004421109999999985, 0.0004...</msg>
<status status="PASS" starttime="20201029 18:16:39.238" endtime="20201029 18:16:39.242"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:39.246" level="INFO">NAME: 33-timer-trace</msg>
<status status="PASS" starttime="20201029 18:16:39.245" endtime="20201029 18:16:39.246"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:39.248" level="INFO">VALUE: [0.00044225000000000167, 0.000442111000000002, 0.000442111000000002, 0.0004421109999999985, 0.0004421109999999985, 0.0004421109999999985, 0.00044213899999999765, 0.0004421109999999985, 0.00044212500000000154, 0.0004421109999999985, 0.000442111000000002, 0.00044212500000000154, 0.00044206999999999927, 0.00044212500000000154, 0.00044212500000000154, 0.00044212500000000154, 0.0004421390000000011, 0.0004421109999999985, 0.0004421249999999981, 0.00044213899999999765, 0.00044209699999999894, 0.0004421109999999985, 0.000442111000000002, 0.00044209699999999894, 0.00044212500000000154, 0.0004421530000000007, 0.0004421530000000007, 0.0004421249999999981, 0.00044212500000000154, 0.00044209699999999894, 0.00044213899999999765, 0.0004421390000000011, 0.0004421660000000008, 0.00044213800000000164, 0.00044211200000000145, 0.0004421249999999946, 0.0004421390000000011, 0.0004421249999999946, 0.00044208300000000283, 0.00044209699999999547, 0.00044212500000000154, 0.000442111000000002, 0.000442111000000002, 0.00044212500000000154, 0.00044211200000000145, 0.000442111000000002, 0.0004421249999999946, 0.0004421390000000011, 0.0004421249999999946, 0.000442111000000002]</msg>
<status status="PASS" starttime="20201029 18:16:39.247" endtime="20201029 18:16:39.250"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:39.242" endtime="20201029 18:16:39.250"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:38.858" endtime="20201029 18:16:39.251"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:38.835" endtime="20201029 18:16:39.251"></status>
</kw>
<kw name="${n} = 34" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:39.253" endtime="20201029 18:16:39.273"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:39.252" endtime="20201029 18:16:39.274"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:39.282" endtime="20201029 18:16:39.316"></status>
</kw>
<msg timestamp="20201029 18:16:39.316" level="INFO">${RESULT} = {'cmd': 'list_ops 34', 'msg': ['list_ops 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:39.280" endtime="20201029 18:16:39.317"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:39.319" level="INFO">${RESULT} = {'cmd': 'list_ops 34', 'msg': ['list_ops 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:39.317" endtime="20201029 18:16:39.319"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:39.320" endtime="20201029 18:16:39.322"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:39.277" endtime="20201029 18:16:39.322"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:39.276" endtime="20201029 18:16:39.323"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:39.329" endtime="20201029 18:16:39.615"></status>
</kw>
<msg timestamp="20201029 18:16:39.618" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016768222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017234167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:39.328" endtime="20201029 18:16:39.618"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:39.626" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016768222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017234167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:39.619" endtime="20201029 18:16:39.626"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:39.627" endtime="20201029 18:16:39.629"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:39.325" endtime="20201029 18:16:39.629"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:39.323" endtime="20201029 18:16:39.630"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:16:39.634" level="INFO">${PHILIP_RES} = [{'diff': 0.00046594500000000233}, {'diff': 0.0004657769999999971}, {'diff': 0.00046576400000000046}, {'diff': 0.0004658049999999997}, {'diff': 0.00046580599999999917}, {'diff': 0.0004658049999999997}...</msg>
<status status="PASS" starttime="20201029 18:16:39.631" endtime="20201029 18:16:39.634"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:39.638" level="INFO">${RESULT} = {'diff': [0.00046594500000000233, 0.0004657769999999971, 0.00046576400000000046, 0.0004658049999999997, 0.00046580599999999917, 0.0004658049999999997, 0.0004657499999999974, 0.00046580500000000316, 0....</msg>
<status status="PASS" starttime="20201029 18:16:39.635" endtime="20201029 18:16:39.639"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:39.643" level="INFO">NAME: 34-timer-trace</msg>
<status status="PASS" starttime="20201029 18:16:39.642" endtime="20201029 18:16:39.643"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:39.645" level="INFO">VALUE: [0.00046594500000000233, 0.0004657769999999971, 0.00046576400000000046, 0.0004658049999999997, 0.00046580599999999917, 0.0004658049999999997, 0.0004657499999999974, 0.00046580500000000316, 0.0004657919999999996, 0.00046587499999999754, 0.00046580599999999917, 0.00046573599999999785, 0.000465875000000001, 0.00046584700000000187, 0.000465778, 0.00046581899999999926, 0.00046580599999999917, 0.0004658049999999997, 0.00046580600000000263, 0.00046580599999999917, 0.0004657919999999996, 0.0004657919999999996, 0.00046580599999999917, 0.0004657919999999996, 0.00046580600000000263, 0.0004658049999999997, 0.00046580599999999917, 0.000465778, 0.00046580599999999917, 0.000465778, 0.00046580599999999917, 0.00046580599999999917, 0.0004657919999999996, 0.0004658200000000057, 0.00046572200000000175, 0.0004657919999999996, 0.00046581899999999926, 0.00046586199999999744, 0.0004658049999999997, 0.000465778, 0.0004658049999999997, 0.00046586099999999797, 0.00046577700000000055, 0.00046583400000000524, 0.0004657910000000001, 0.0004658060000000061, 0.0004657910000000001, 0.00046580599999999917, 0.00046581899999999926, 0.00046580599999999917]</msg>
<status status="PASS" starttime="20201029 18:16:39.644" endtime="20201029 18:16:39.646"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:39.639" endtime="20201029 18:16:39.647"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:39.274" endtime="20201029 18:16:39.647"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:39.251" endtime="20201029 18:16:39.647"></status>
</kw>
<kw name="${n} = 35" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:39.649" endtime="20201029 18:16:39.669"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:39.648" endtime="20201029 18:16:39.669"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:39.678" endtime="20201029 18:16:39.713"></status>
</kw>
<msg timestamp="20201029 18:16:39.714" level="INFO">${RESULT} = {'cmd': 'list_ops 35', 'msg': ['list_ops 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:39.676" endtime="20201029 18:16:39.714"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:39.716" level="INFO">${RESULT} = {'cmd': 'list_ops 35', 'msg': ['list_ops 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:39.715" endtime="20201029 18:16:39.716"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:39.717" endtime="20201029 18:16:39.719"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:39.674" endtime="20201029 18:16:39.719"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:39.672" endtime="20201029 18:16:39.720"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:39.726" endtime="20201029 18:16:40.033"></status>
</kw>
<msg timestamp="20201029 18:16:40.036" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017006444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017496583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:39.725" endtime="20201029 18:16:40.036"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:40.044" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017006444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017496583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:40.037" endtime="20201029 18:16:40.044"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:40.045" endtime="20201029 18:16:40.046"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:39.722" endtime="20201029 18:16:40.047"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:39.720" endtime="20201029 18:16:40.047"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:16:40.051" level="INFO">${PHILIP_RES} = [{'diff': 0.0004901390000000005}, {'diff': 0.0004901109999999979}, {'diff': 0.0004900969999999984}, {'diff': 0.0004900560000000026}, {'diff': 0.0004900970000000018}, {'diff': 0.0004900690000000027}, {...</msg>
<status status="PASS" starttime="20201029 18:16:40.048" endtime="20201029 18:16:40.051"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:40.055" level="INFO">${RESULT} = {'diff': [0.0004901390000000005, 0.0004901109999999979, 0.0004900969999999984, 0.0004900560000000026, 0.0004900970000000018, 0.0004900690000000027, 0.0004900980000000013, 0.0004900969999999984, 0.0004...</msg>
<status status="PASS" starttime="20201029 18:16:40.052" endtime="20201029 18:16:40.055"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:40.059" level="INFO">NAME: 35-timer-trace</msg>
<status status="PASS" starttime="20201029 18:16:40.058" endtime="20201029 18:16:40.060"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:40.062" level="INFO">VALUE: [0.0004901390000000005, 0.0004901109999999979, 0.0004900969999999984, 0.0004900560000000026, 0.0004900970000000018, 0.0004900690000000027, 0.0004900980000000013, 0.0004900969999999984, 0.0004900829999999988, 0.0004900829999999988, 0.0004900839999999983, 0.0004900970000000018, 0.0004900689999999992, 0.0004900690000000027, 0.0004900830000000023, 0.000490028, 0.0004900829999999988, 0.0004900969999999984, 0.0004901109999999979, 0.0004901119999999974, 0.0004900969999999984, 0.0004900970000000018, 0.0004901390000000005, 0.0004900840000000017, 0.0004900980000000013, 0.0004900689999999992, 0.0004900829999999988, 0.0004900549999999962, 0.0004900840000000017, 0.0004900969999999949, 0.0004900279999999965, 0.0004900829999999953, 0.0004900839999999948, 0.0004900969999999949, 0.0004900969999999949, 0.0004901110000000014, 0.0004900840000000017, 0.0004900830000000023, 0.0004900970000000018, 0.0004900830000000023, 0.0004900700000000022, 0.0004900840000000017, 0.0004900830000000023, 0.0004900550000000031, 0.0004900830000000023, 0.0004900700000000022, 0.0004900970000000018, 0.0004900970000000018, 0.0004901109999999945, 0.0004900979999999944]</msg>
<status status="PASS" starttime="20201029 18:16:40.060" endtime="20201029 18:16:40.063"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:40.056" endtime="20201029 18:16:40.063"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:39.670" endtime="20201029 18:16:40.063"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:39.648" endtime="20201029 18:16:40.064"></status>
</kw>
<kw name="${n} = 36" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:40.066" endtime="20201029 18:16:40.085"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:40.065" endtime="20201029 18:16:40.086"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:40.094" endtime="20201029 18:16:40.130"></status>
</kw>
<msg timestamp="20201029 18:16:40.131" level="INFO">${RESULT} = {'cmd': 'list_ops 36', 'msg': ['list_ops 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:40.092" endtime="20201029 18:16:40.131"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:40.133" level="INFO">${RESULT} = {'cmd': 'list_ops 36', 'msg': ['list_ops 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:40.132" endtime="20201029 18:16:40.133"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:40.134" endtime="20201029 18:16:40.137"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:40.090" endtime="20201029 18:16:40.137"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:40.088" endtime="20201029 18:16:40.138"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:40.144" endtime="20201029 18:16:40.430"></status>
</kw>
<msg timestamp="20201029 18:16:40.433" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016696375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017211472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:40.143" endtime="20201029 18:16:40.434"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:40.442" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016696375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017211472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:40.435" endtime="20201029 18:16:40.442"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:40.443" endtime="20201029 18:16:40.445"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:40.140" endtime="20201029 18:16:40.446"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:40.138" endtime="20201029 18:16:40.446"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:16:40.450" level="INFO">${PHILIP_RES} = [{'diff': 0.0005150969999999991}, {'diff': 0.0005149579999999994}, {'diff': 0.0005149300000000002}, {'diff': 0.0005149870000000015}, {'diff': 0.0005149729999999984}, {'diff': 0.0005149589999999989}, {...</msg>
<status status="PASS" starttime="20201029 18:16:40.447" endtime="20201029 18:16:40.451"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:40.455" level="INFO">${RESULT} = {'diff': [0.0005150969999999991, 0.0005149579999999994, 0.0005149300000000002, 0.0005149870000000015, 0.0005149729999999984, 0.0005149589999999989, 0.000514971999999999, 0.0005149720000000024, 0.00051...</msg>
<status status="PASS" starttime="20201029 18:16:40.451" endtime="20201029 18:16:40.455"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:40.459" level="INFO">NAME: 36-timer-trace</msg>
<status status="PASS" starttime="20201029 18:16:40.458" endtime="20201029 18:16:40.459"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:40.461" level="INFO">VALUE: [0.0005150969999999991, 0.0005149579999999994, 0.0005149300000000002, 0.0005149870000000015, 0.0005149729999999984, 0.0005149589999999989, 0.000514971999999999, 0.0005149720000000024, 0.0005149439999999998, 0.0005149859999999985, 0.0005149720000000024, 0.0005149859999999985, 0.0005149729999999984, 0.0005150269999999978, 0.000514986000000002, 0.0005149859999999985, 0.0005149999999999981, 0.000514986000000002, 0.000514986000000002, 0.0005149859999999985, 0.0005149999999999981, 0.0005149870000000015, 0.000514986000000002, 0.000514971999999999, 0.0005149449999999993, 0.000514986000000002, 0.0005149720000000024, 0.000514986000000002, 0.0005149859999999951, 0.0005150140000000011, 0.0005149870000000015, 0.000514986000000002, 0.0005149590000000023, 0.0005149999999999946, 0.0005150000000000016, 0.0005150000000000016, 0.0005149999999999946, 0.000514986000000002, 0.0005150000000000016, 0.0005150000000000016, 0.0005149870000000015, 0.0005149999999999946, 0.000514986000000002, 0.000514986000000002, 0.0005149719999999955, 0.000514986000000002, 0.000514986000000002, 0.0005149859999999951, 0.0005149870000000015, 0.000514986000000002]</msg>
<status status="PASS" starttime="20201029 18:16:40.460" endtime="20201029 18:16:40.463"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:40.456" endtime="20201029 18:16:40.464"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:40.087" endtime="20201029 18:16:40.464"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:40.064" endtime="20201029 18:16:40.464"></status>
</kw>
<kw name="${n} = 37" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:40.466" endtime="20201029 18:16:40.486"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:40.465" endtime="20201029 18:16:40.486"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:40.494" endtime="20201029 18:16:40.532"></status>
</kw>
<msg timestamp="20201029 18:16:40.533" level="INFO">${RESULT} = {'cmd': 'list_ops 37', 'msg': ['list_ops 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:40.493" endtime="20201029 18:16:40.533"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:40.535" level="INFO">${RESULT} = {'cmd': 'list_ops 37', 'msg': ['list_ops 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:40.534" endtime="20201029 18:16:40.536"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:40.536" endtime="20201029 18:16:40.538"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:40.490" endtime="20201029 18:16:40.538"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:40.488" endtime="20201029 18:16:40.539"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:40.545" endtime="20201029 18:16:40.848"></status>
</kw>
<msg timestamp="20201029 18:16:40.851" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016708722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017249333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:40.544" endtime="20201029 18:16:40.851"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:40.858" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016708722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017249333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:40.852" endtime="20201029 18:16:40.859"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:40.860" endtime="20201029 18:16:40.861"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:40.541" endtime="20201029 18:16:40.862"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:40.539" endtime="20201029 18:16:40.862"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:16:40.866" level="INFO">${PHILIP_RES} = [{'diff': 0.0005406109999999999}, {'diff': 0.0005404859999999997}, {'diff': 0.0005404999999999993}, {'diff': 0.0005404859999999997}, {'diff': 0.0005404859999999997}, {'diff': 0.0005405140000000024}, {...</msg>
<status status="PASS" starttime="20201029 18:16:40.863" endtime="20201029 18:16:40.866"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:40.871" level="INFO">${RESULT} = {'diff': [0.0005406109999999999, 0.0005404859999999997, 0.0005404999999999993, 0.0005404859999999997, 0.0005404859999999997, 0.0005405140000000024, 0.0005405140000000024, 0.0005405000000000028, 0.0005...</msg>
<status status="PASS" starttime="20201029 18:16:40.867" endtime="20201029 18:16:40.871"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:40.875" level="INFO">NAME: 37-timer-trace</msg>
<status status="PASS" starttime="20201029 18:16:40.874" endtime="20201029 18:16:40.876"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:40.878" level="INFO">VALUE: [0.0005406109999999999, 0.0005404859999999997, 0.0005404999999999993, 0.0005404859999999997, 0.0005404859999999997, 0.0005405140000000024, 0.0005405140000000024, 0.0005405000000000028, 0.0005404870000000027, 0.0005404869999999992, 0.0005404720000000002, 0.0005404859999999997, 0.0005404720000000002, 0.0005404720000000002, 0.0005404859999999997, 0.0005404859999999997, 0.0005404869999999992, 0.0005404720000000002, 0.0005404720000000002, 0.0005404859999999997, 0.0005404999999999993, 0.0005404859999999997, 0.0005404720000000002, 0.0005404450000000005, 0.0005404859999999997, 0.0005404859999999997, 0.0005404310000000009, 0.000540444000000001, 0.0005404720000000002, 0.0005404859999999997, 0.0005404999999999993, 0.0005404859999999997, 0.0005404859999999997, 0.0005405139999999989, 0.0005404859999999997, 0.000540444000000001, 0.0005405279999999985, 0.0005405279999999985, 0.0005404869999999992, 0.0005404999999999993, 0.0005405139999999989, 0.0005404859999999997, 0.0005405279999999985, 0.000540444000000001, 0.0005404859999999997, 0.0005404729999999996, 0.0005404859999999997, 0.0005404720000000002, 0.0005404999999999993, 0.0005405139999999989]</msg>
<status status="PASS" starttime="20201029 18:16:40.876" endtime="20201029 18:16:40.879"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:40.872" endtime="20201029 18:16:40.879"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:40.487" endtime="20201029 18:16:40.880"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:40.464" endtime="20201029 18:16:40.880"></status>
</kw>
<kw name="${n} = 38" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:40.882" endtime="20201029 18:16:40.902"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:40.881" endtime="20201029 18:16:40.902"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:40.910" endtime="20201029 18:16:40.950"></status>
</kw>
<msg timestamp="20201029 18:16:40.951" level="INFO">${RESULT} = {'cmd': 'list_ops 38', 'msg': ['list_ops 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:40.909" endtime="20201029 18:16:40.951"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:40.953" level="INFO">${RESULT} = {'cmd': 'list_ops 38', 'msg': ['list_ops 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:40.952" endtime="20201029 18:16:40.954"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:40.954" endtime="20201029 18:16:40.956"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:40.906" endtime="20201029 18:16:40.957"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:40.904" endtime="20201029 18:16:40.957"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:40.963" endtime="20201029 18:16:41.252"></status>
</kw>
<msg timestamp="20201029 18:16:41.255" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016863472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017430208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:40.962" endtime="20201029 18:16:41.256"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:41.263" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016863472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017430208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:41.256" endtime="20201029 18:16:41.264"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:41.265" endtime="20201029 18:16:41.266"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:40.959" endtime="20201029 18:16:41.267"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:40.958" endtime="20201029 18:16:41.267"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:16:41.271" level="INFO">${PHILIP_RES} = [{'diff': 0.0005667359999999982}, {'diff': 0.0005665969999999985}, {'diff': 0.0005666109999999981}, {'diff': 0.000566582999999999}, {'diff': 0.0005666250000000012}, {'diff': 0.0005666249999999977}, {'...</msg>
<status status="PASS" starttime="20201029 18:16:41.268" endtime="20201029 18:16:41.271"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:41.275" level="INFO">${RESULT} = {'diff': [0.0005667359999999982, 0.0005665969999999985, 0.0005666109999999981, 0.000566582999999999, 0.0005666250000000012, 0.0005666249999999977, 0.0005665969999999985, 0.0005665839999999984, 0.00056...</msg>
<status status="PASS" starttime="20201029 18:16:41.272" endtime="20201029 18:16:41.275"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:41.279" level="INFO">NAME: 38-timer-trace</msg>
<status status="PASS" starttime="20201029 18:16:41.278" endtime="20201029 18:16:41.280"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:41.282" level="INFO">VALUE: [0.0005667359999999982, 0.0005665969999999985, 0.0005666109999999981, 0.000566582999999999, 0.0005666250000000012, 0.0005666249999999977, 0.0005665969999999985, 0.0005665839999999984, 0.000566582999999999, 0.0005665969999999985, 0.0005665969999999985, 0.0005666250000000012, 0.000566582999999999, 0.000566582999999999, 0.0005666530000000003, 0.000566597000000002, 0.000566582999999999, 0.0005665550000000033, 0.0005665830000000024, 0.0005666250000000012, 0.000566597000000002, 0.0005666110000000016, 0.0005665830000000024, 0.000566597000000002, 0.0005665980000000015, 0.0005666110000000016, 0.0005665690000000029, 0.000566597000000002, 0.0005665420000000032, 0.000566597000000002, 0.0005666250000000012, 0.0005666110000000016, 0.000566597000000002, 0.0005665830000000024, 0.0005665840000000019, 0.0005666110000000016, 0.000566597000000002, 0.0005665980000000015, 0.0005666110000000016, 0.000566597000000002, 0.000566597000000002, 0.0005665980000000015, 0.000566597000000002, 0.0005665830000000024, 0.0005665840000000019, 0.000566597000000002, 0.0005665830000000024, 0.000566597000000002, 0.000566597000000002, 0.0005665830000000024]</msg>
<status status="PASS" starttime="20201029 18:16:41.280" endtime="20201029 18:16:41.283"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:41.276" endtime="20201029 18:16:41.283"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:40.903" endtime="20201029 18:16:41.284"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:40.880" endtime="20201029 18:16:41.284"></status>
</kw>
<kw name="${n} = 39" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:41.286" endtime="20201029 18:16:41.306"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:41.285" endtime="20201029 18:16:41.306"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:41.314" endtime="20201029 18:16:41.355"></status>
</kw>
<msg timestamp="20201029 18:16:41.355" level="INFO">${RESULT} = {'cmd': 'list_ops 39', 'msg': ['list_ops 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:41.313" endtime="20201029 18:16:41.356"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:41.358" level="INFO">${RESULT} = {'cmd': 'list_ops 39', 'msg': ['list_ops 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:41.356" endtime="20201029 18:16:41.358"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:41.359" endtime="20201029 18:16:41.361"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:41.310" endtime="20201029 18:16:41.362"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:41.308" endtime="20201029 18:16:41.362"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:41.369" endtime="20201029 18:16:41.667"></status>
</kw>
<msg timestamp="20201029 18:16:41.670" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016815222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017408611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:41.367" endtime="20201029 18:16:41.670"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:41.678" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016815222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017408611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:41.671" endtime="20201029 18:16:41.678"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:41.679" endtime="20201029 18:16:41.681"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:41.365" endtime="20201029 18:16:41.681"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:41.363" endtime="20201029 18:16:41.682"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:16:41.685" level="INFO">${PHILIP_RES} = [{'diff': 0.0005933889999999997}, {'diff': 0.0005932779999999992}, {'diff': 0.0005933189999999984}, {'diff': 0.0005932920000000022}, {'diff': 0.0005933199999999979}, {'diff': 0.0005933189999999984}, {...</msg>
<status status="PASS" starttime="20201029 18:16:41.682" endtime="20201029 18:16:41.686"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:41.689" level="INFO">${RESULT} = {'diff': [0.0005933889999999997, 0.0005932779999999992, 0.0005933189999999984, 0.0005932920000000022, 0.0005933199999999979, 0.0005933189999999984, 0.0005933889999999997, 0.0005933189999999984, 0.0005...</msg>
<status status="PASS" starttime="20201029 18:16:41.686" endtime="20201029 18:16:41.690"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:41.694" level="INFO">NAME: 39-timer-trace</msg>
<status status="PASS" starttime="20201029 18:16:41.693" endtime="20201029 18:16:41.694"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:41.696" level="INFO">VALUE: [0.0005933889999999997, 0.0005932779999999992, 0.0005933189999999984, 0.0005932920000000022, 0.0005933199999999979, 0.0005933189999999984, 0.0005933889999999997, 0.0005933189999999984, 0.0005933049999999988, 0.0005933330000000014, 0.0005932909999999993, 0.0005932919999999987, 0.0005933190000000019, 0.0005933330000000014, 0.0005933059999999983, 0.0005933330000000014, 0.0005933200000000013, 0.0005933059999999983, 0.0005933189999999984, 0.0005933200000000013, 0.0005933049999999988, 0.0005933059999999983, 0.0005933190000000019, 0.0005933330000000014, 0.0005933200000000013, 0.0005933330000000014, 0.0005933189999999949, 0.0005932920000000022, 0.0005933330000000014, 0.0005933479999999935, 0.0005933190000000019, 0.0005932499999999966, 0.0005932919999999953, 0.0005933330000000014, 0.0005933200000000013, 0.0005933329999999945, 0.0005933060000000018, 0.0005933340000000009, 0.0005933049999999954, 0.0005933480000000005, 0.0005933060000000018, 0.0005933049999999954, 0.0005933610000000006, 0.0005933330000000014, 0.0005933889999999997, 0.0005933200000000013, 0.0005933330000000014, 0.0005933199999999944, 0.0005933190000000019, 0.0005933190000000019]</msg>
<status status="PASS" starttime="20201029 18:16:41.695" endtime="20201029 18:16:41.698"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:41.690" endtime="20201029 18:16:41.698"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:41.307" endtime="20201029 18:16:41.699"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:41.284" endtime="20201029 18:16:41.699"></status>
</kw>
<kw name="${n} = 40" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:41.701" endtime="20201029 18:16:41.721"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:41.700" endtime="20201029 18:16:41.721"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:41.729" endtime="20201029 18:16:41.770"></status>
</kw>
<msg timestamp="20201029 18:16:41.770" level="INFO">${RESULT} = {'cmd': 'list_ops 40', 'msg': ['list_ops 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:41.728" endtime="20201029 18:16:41.770"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:41.773" level="INFO">${RESULT} = {'cmd': 'list_ops 40', 'msg': ['list_ops 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:41.771" endtime="20201029 18:16:41.773"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:41.774" endtime="20201029 18:16:41.775"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:41.725" endtime="20201029 18:16:41.776"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:41.723" endtime="20201029 18:16:41.776"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:41.783" endtime="20201029 18:16:42.068"></status>
</kw>
<msg timestamp="20201029 18:16:42.071" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016713306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017334069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:41.781" endtime="20201029 18:16:42.071"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:42.079" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016713306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017334069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:42.072" endtime="20201029 18:16:42.079"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:42.080" endtime="20201029 18:16:42.082"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:41.779" endtime="20201029 18:16:42.082"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:41.777" endtime="20201029 18:16:42.083"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:16:42.087" level="INFO">${PHILIP_RES} = [{'diff': 0.0006207629999999999}, {'diff': 0.0006206379999999997}, {'diff': 0.0006206389999999992}, {'diff': 0.0006206249999999996}, {'diff': 0.0006206529999999988}, {'diff': 0.0006207220000000006}, {...</msg>
<status status="PASS" starttime="20201029 18:16:42.084" endtime="20201029 18:16:42.087"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:42.091" level="INFO">${RESULT} = {'diff': [0.0006207629999999999, 0.0006206379999999997, 0.0006206389999999992, 0.0006206249999999996, 0.0006206529999999988, 0.0006207220000000006, 0.0006206529999999988, 0.0006206389999999992, 0.0006...</msg>
<status status="PASS" starttime="20201029 18:16:42.088" endtime="20201029 18:16:42.092"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:42.096" level="INFO">NAME: 40-timer-trace</msg>
<status status="PASS" starttime="20201029 18:16:42.095" endtime="20201029 18:16:42.096"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:42.098" level="INFO">VALUE: [0.0006207629999999999, 0.0006206379999999997, 0.0006206389999999992, 0.0006206249999999996, 0.0006206529999999988, 0.0006207220000000006, 0.0006206529999999988, 0.0006206389999999992, 0.0006206249999999996, 0.0006206249999999996, 0.0006206389999999992, 0.0006206389999999992, 0.0006206529999999988, 0.0006205689999999979, 0.0006206389999999992, 0.0006206530000000023, 0.0006206379999999997, 0.0006206110000000001, 0.0006206520000000028, 0.0006206660000000024, 0.0006206390000000027, 0.0006206389999999957, 0.0006206529999999988, 0.0006206530000000057, 0.0006206249999999996, 0.0006206389999999992, 0.0006206670000000053, 0.0006206529999999988, 0.0006206389999999992, 0.0006206389999999992, 0.0006206530000000057, 0.0006207230000000036, 0.0006206390000000062, 0.000620694000000005, 0.0006206519999999993, 0.0006206520000000063, 0.0006206249999999996, 0.0006206249999999996, 0.0006206389999999992, 0.0006206389999999992, 0.0006206389999999992, 0.0006206110000000001, 0.0006206389999999992, 0.0006206389999999992, 0.0006206529999999988, 0.0006206389999999992, 0.0006206389999999992, 0.0006207089999999971, 0.0006206110000000001, 0.0006206389999999992]</msg>
<status status="PASS" starttime="20201029 18:16:42.097" endtime="20201029 18:16:42.099"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:42.092" endtime="20201029 18:16:42.100"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:41.722" endtime="20201029 18:16:42.100"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:41.699" endtime="20201029 18:16:42.100"></status>
</kw>
<kw name="${n} = 41" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:42.103" endtime="20201029 18:16:42.122"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:42.101" endtime="20201029 18:16:42.123"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:42.131" endtime="20201029 18:16:42.175"></status>
</kw>
<msg timestamp="20201029 18:16:42.175" level="INFO">${RESULT} = {'cmd': 'list_ops 41', 'msg': ['list_ops 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:42.129" endtime="20201029 18:16:42.176"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:42.178" level="INFO">${RESULT} = {'cmd': 'list_ops 41', 'msg': ['list_ops 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:42.176" endtime="20201029 18:16:42.178"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:42.179" endtime="20201029 18:16:42.180"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:42.126" endtime="20201029 18:16:42.181"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:42.125" endtime="20201029 18:16:42.182"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:42.188" endtime="20201029 18:16:42.489"></status>
</kw>
<msg timestamp="20201029 18:16:42.492" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016876111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017524806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:42.186" endtime="20201029 18:16:42.493"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:42.500" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016876111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017524806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:42.493" endtime="20201029 18:16:42.501"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:42.501" endtime="20201029 18:16:42.503"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:42.184" endtime="20201029 18:16:42.504"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:42.182" endtime="20201029 18:16:42.504"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:16:42.508" level="INFO">${PHILIP_RES} = [{'diff': 0.0006486950000000012}, {'diff': 0.0006485690000000016}, {'diff': 0.000648555999999998}, {'diff': 0.0006485830000000012}, {'diff': 0.0006485689999999981}, {'diff': 0.0006485699999999976}, {'...</msg>
<status status="PASS" starttime="20201029 18:16:42.505" endtime="20201029 18:16:42.508"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:42.512" level="INFO">${RESULT} = {'diff': [0.0006486950000000012, 0.0006485690000000016, 0.000648555999999998, 0.0006485830000000012, 0.0006485689999999981, 0.0006485699999999976, 0.0006485689999999981, 0.0006485549999999986, 0.00064...</msg>
<status status="PASS" starttime="20201029 18:16:42.509" endtime="20201029 18:16:42.512"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:42.516" level="INFO">NAME: 41-timer-trace</msg>
<status status="PASS" starttime="20201029 18:16:42.515" endtime="20201029 18:16:42.517"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:42.519" level="INFO">VALUE: [0.0006486950000000012, 0.0006485690000000016, 0.000648555999999998, 0.0006485830000000012, 0.0006485689999999981, 0.0006485699999999976, 0.0006485689999999981, 0.0006485549999999986, 0.0006485840000000007, 0.0006485689999999981, 0.0006485700000000011, 0.0006485700000000011, 0.0006485690000000016, 0.0006485690000000016, 0.0006485700000000011, 0.0006485830000000012, 0.0006486110000000003, 0.000648555999999998, 0.0006485969999999973, 0.0006485699999999976, 0.0006485699999999976, 0.0006485690000000016, 0.0006485560000000015, 0.0006485830000000012, 0.0006485829999999942, 0.0006485559999999946, 0.0006485689999999947, 0.0006485829999999942, 0.0006486389999999995, 0.0006485689999999947, 0.0006485830000000012, 0.0006486389999999995, 0.0006485690000000016, 0.0006486389999999995, 0.0006485700000000011, 0.000648555000000002, 0.0006485840000000007, 0.0006485000000000032, 0.0006485280000000024, 0.0006486249999999999, 0.0006485690000000016, 0.000648555000000002, 0.000648542000000002, 0.0006485970000000008, 0.0006485830000000012, 0.0006485690000000016, 0.0006485690000000016, 0.000648555000000002, 0.0006485700000000011, 0.000648555000000002]</msg>
<status status="PASS" starttime="20201029 18:16:42.517" endtime="20201029 18:16:42.519"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:42.513" endtime="20201029 18:16:42.520"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:42.123" endtime="20201029 18:16:42.520"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:42.100" endtime="20201029 18:16:42.520"></status>
</kw>
<kw name="${n} = 42" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:42.523" endtime="20201029 18:16:42.542"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:42.521" endtime="20201029 18:16:42.543"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:42.551" endtime="20201029 18:16:42.597"></status>
</kw>
<msg timestamp="20201029 18:16:42.597" level="INFO">${RESULT} = {'cmd': 'list_ops 42', 'msg': ['list_ops 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:42.549" endtime="20201029 18:16:42.597"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:42.600" level="INFO">${RESULT} = {'cmd': 'list_ops 42', 'msg': ['list_ops 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:42.598" endtime="20201029 18:16:42.600"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:42.601" endtime="20201029 18:16:42.603"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:42.547" endtime="20201029 18:16:42.604"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:42.545" endtime="20201029 18:16:42.604"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:42.611" endtime="20201029 18:16:42.896"></status>
</kw>
<msg timestamp="20201029 18:16:42.899" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016680944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017358167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:42.609" endtime="20201029 18:16:42.899"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:42.906" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016680944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017358167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:42.900" endtime="20201029 18:16:42.907"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:42.907" endtime="20201029 18:16:42.909"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:42.607" endtime="20201029 18:16:42.910"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:42.605" endtime="20201029 18:16:42.910"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:16:42.914" level="INFO">${PHILIP_RES} = [{'diff': 0.0006772230000000011}, {'diff': 0.0006771109999999976}, {'diff': 0.0006771109999999976}, {'diff': 0.0006770970000000015}, {'diff': 0.0006771110000000011}, {'diff': 0.0006771120000000005}, {...</msg>
<status status="PASS" starttime="20201029 18:16:42.911" endtime="20201029 18:16:42.914"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:42.918" level="INFO">${RESULT} = {'diff': [0.0006772230000000011, 0.0006771109999999976, 0.0006771109999999976, 0.0006770970000000015, 0.0006771110000000011, 0.0006771120000000005, 0.0006771669999999994, 0.0006771250000000006, 0.0006...</msg>
<status status="PASS" starttime="20201029 18:16:42.915" endtime="20201029 18:16:42.918"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:42.922" level="INFO">NAME: 42-timer-trace</msg>
<status status="PASS" starttime="20201029 18:16:42.921" endtime="20201029 18:16:42.923"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:42.925" level="INFO">VALUE: [0.0006772230000000011, 0.0006771109999999976, 0.0006771109999999976, 0.0006770970000000015, 0.0006771110000000011, 0.0006771120000000005, 0.0006771669999999994, 0.0006771250000000006, 0.0006771250000000006, 0.0006771809999999989, 0.0006771250000000006, 0.000677096999999998, 0.000677096999999998, 0.0006771250000000006, 0.0006771390000000002, 0.0006771250000000006, 0.0006771109999999976, 0.0006771250000000006, 0.0006771110000000011, 0.0006771250000000006, 0.0006770970000000015, 0.0006771110000000011, 0.0006771109999999941, 0.000677098000000001, 0.0006770559999999953, 0.0006770970000000015, 0.0006771659999999999, 0.0006771110000000011, 0.0006771250000000006, 0.0006771110000000011, 0.0006770970000000015, 0.0006771250000000006, 0.0006771109999999941, 0.0006771529999999998, 0.0006771250000000006, 0.0006771110000000011, 0.0006771250000000006, 0.0006771250000000006, 0.0006771110000000011, 0.0006771250000000006, 0.0006771390000000002, 0.0006771250000000006, 0.0006771249999999937, 0.0006771110000000011, 0.000677098000000001, 0.0006771110000000011, 0.0006771110000000011, 0.0006771109999999941, 0.0006771110000000011, 0.0006771120000000005]</msg>
<status status="PASS" starttime="20201029 18:16:42.923" endtime="20201029 18:16:42.926"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:42.919" endtime="20201029 18:16:42.927"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:42.543" endtime="20201029 18:16:42.927"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:42.521" endtime="20201029 18:16:42.927"></status>
</kw>
<kw name="${n} = 43" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:42.930" endtime="20201029 18:16:42.949"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:42.928" endtime="20201029 18:16:42.950"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:42.958" endtime="20201029 18:16:43.003"></status>
</kw>
<msg timestamp="20201029 18:16:43.004" level="INFO">${RESULT} = {'cmd': 'list_ops 43', 'msg': ['list_ops 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:42.956" endtime="20201029 18:16:43.004"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:43.006" level="INFO">${RESULT} = {'cmd': 'list_ops 43', 'msg': ['list_ops 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:43.005" endtime="20201029 18:16:43.006"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:43.007" endtime="20201029 18:16:43.009"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:42.954" endtime="20201029 18:16:43.009"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:42.952" endtime="20201029 18:16:43.010"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:43.016" endtime="20201029 18:16:43.315"></status>
</kw>
<msg timestamp="20201029 18:16:43.318" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01681925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017525694, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:16:43.015" endtime="20201029 18:16:43.318"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:43.326" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01681925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017525694, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:16:43.319" endtime="20201029 18:16:43.327"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:43.327" endtime="20201029 18:16:43.329"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:43.012" endtime="20201029 18:16:43.330"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:43.010" endtime="20201029 18:16:43.330"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:16:43.334" level="INFO">${PHILIP_RES} = [{'diff': 0.0007064440000000005}, {'diff': 0.0007062639999999981}, {'diff': 0.000706250000000002}, {'diff': 0.0007062640000000016}, {'diff': 0.0007062499999999985}, {'diff': 0.0007062639999999981}, {'...</msg>
<status status="PASS" starttime="20201029 18:16:43.331" endtime="20201029 18:16:43.334"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:43.339" level="INFO">${RESULT} = {'diff': [0.0007064440000000005, 0.0007062639999999981, 0.000706250000000002, 0.0007062640000000016, 0.0007062499999999985, 0.0007062639999999981, 0.0007062909999999978, 0.0007062780000000012, 0.00070...</msg>
<status status="PASS" starttime="20201029 18:16:43.335" endtime="20201029 18:16:43.339"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:43.343" level="INFO">NAME: 43-timer-trace</msg>
<status status="PASS" starttime="20201029 18:16:43.342" endtime="20201029 18:16:43.343"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:43.345" level="INFO">VALUE: [0.0007064440000000005, 0.0007062639999999981, 0.000706250000000002, 0.0007062640000000016, 0.0007062499999999985, 0.0007062639999999981, 0.0007062909999999978, 0.0007062780000000012, 0.0007061940000000003, 0.0007062360000000024, 0.0007062639999999981, 0.0007062639999999981, 0.0007062639999999981, 0.0007062499999999985, 0.0007062230000000023, 0.0007062089999999993, 0.0007062639999999981, 0.000706235999999999, 0.0007062780000000012, 0.0007062219999999959, 0.0007062639999999981, 0.0007062640000000051, 0.0007062360000000059, 0.0007062639999999981, 0.0007062219999999994, 0.0007062499999999985, 0.0007062499999999985, 0.0007062779999999977, 0.0007062639999999981, 0.0007062769999999982, 0.0007062219999999994, 0.0007063340000000029, 0.0007062640000000051, 0.000706235999999999, 0.0007061949999999997, 0.0007062779999999977, 0.0007062499999999985, 0.0007062499999999985, 0.0007062639999999981, 0.0007062779999999977, 0.0007062629999999986, 0.000706235999999999, 0.0007062639999999981, 0.0007062360000000059, 0.0007062500000000055, 0.0007062779999999977, 0.0007063059999999968, 0.0007062639999999981, 0.0007062769999999982, 0.0007061810000000002]</msg>
<status status="PASS" starttime="20201029 18:16:43.344" endtime="20201029 18:16:43.346"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:43.339" endtime="20201029 18:16:43.347"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:42.950" endtime="20201029 18:16:43.347"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:42.928" endtime="20201029 18:16:43.347"></status>
</kw>
<kw name="${n} = 44" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:43.350" endtime="20201029 18:16:43.369"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:43.348" endtime="20201029 18:16:43.370"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:43.378" endtime="20201029 18:16:43.425"></status>
</kw>
<msg timestamp="20201029 18:16:43.425" level="INFO">${RESULT} = {'cmd': 'list_ops 44', 'msg': ['list_ops 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:43.376" endtime="20201029 18:16:43.426"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:43.428" level="INFO">${RESULT} = {'cmd': 'list_ops 44', 'msg': ['list_ops 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:43.426" endtime="20201029 18:16:43.428"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:43.429" endtime="20201029 18:16:43.430"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:43.374" endtime="20201029 18:16:43.431"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:43.372" endtime="20201029 18:16:43.431"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:43.438" endtime="20201029 18:16:43.726"></status>
</kw>
<msg timestamp="20201029 18:16:43.729" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016754875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017491014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:43.436" endtime="20201029 18:16:43.729"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:43.737" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016754875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017491014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:43.730" endtime="20201029 18:16:43.737"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:43.738" endtime="20201029 18:16:43.740"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:43.434" endtime="20201029 18:16:43.740"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:43.432" endtime="20201029 18:16:43.741"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:16:43.745" level="INFO">${PHILIP_RES} = [{'diff': 0.0007361390000000002}, {'diff': 0.0007360140000000001}, {'diff': 0.0007360699999999984}, {'diff': 0.0007360000000000005}, {'diff': 0.000735986000000001}, {'diff': 0.0007360140000000001}, {'...</msg>
<status status="PASS" starttime="20201029 18:16:43.742" endtime="20201029 18:16:43.745"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:43.749" level="INFO">${RESULT} = {'diff': [0.0007361390000000002, 0.0007360140000000001, 0.0007360699999999984, 0.0007360000000000005, 0.000735986000000001, 0.0007360140000000001, 0.0007360000000000005, 0.0007360549999999993, 0.00073...</msg>
<status status="PASS" starttime="20201029 18:16:43.746" endtime="20201029 18:16:43.749"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:43.753" level="INFO">NAME: 44-timer-trace</msg>
<status status="PASS" starttime="20201029 18:16:43.752" endtime="20201029 18:16:43.753"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:43.755" level="INFO">VALUE: [0.0007361390000000002, 0.0007360140000000001, 0.0007360699999999984, 0.0007360000000000005, 0.000735986000000001, 0.0007360140000000001, 0.0007360000000000005, 0.0007360549999999993, 0.0007359859999999975, 0.0007360130000000006, 0.0007360140000000001, 0.0007360140000000001, 0.0007360420000000027, 0.0007360409999999998, 0.0007360000000000005, 0.0007360140000000001, 0.0007360140000000001, 0.0007360279999999997, 0.0007359859999999975, 0.0007359580000000018, 0.0007360140000000001, 0.0007360000000000005, 0.000736083999999998, 0.0007360000000000005, 0.0007360140000000001, 0.000735985999999994, 0.0007360000000000005, 0.0007360130000000006, 0.0007360140000000001, 0.0007360140000000001, 0.0007360000000000005, 0.0007360689999999989, 0.0007360140000000001, 0.0007360140000000001, 0.0007360270000000002, 0.0007360419999999993, 0.0007360000000000005, 0.0007360279999999997, 0.0007360140000000001, 0.0007360279999999997, 0.0007360000000000005, 0.0007360270000000002, 0.0007360000000000005, 0.0007360279999999997, 0.0007360000000000005, 0.0007360140000000001, 0.000735986000000001, 0.0007360140000000001, 0.0007360270000000002, 0.0007359450000000017]</msg>
<status status="PASS" starttime="20201029 18:16:43.754" endtime="20201029 18:16:43.756"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:43.749" endtime="20201029 18:16:43.757"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:43.370" endtime="20201029 18:16:43.757"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:43.348" endtime="20201029 18:16:43.757"></status>
</kw>
<kw name="${n} = 45" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:43.760" endtime="20201029 18:16:43.779"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:43.758" endtime="20201029 18:16:43.780"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:43.788" endtime="20201029 18:16:43.838"></status>
</kw>
<msg timestamp="20201029 18:16:43.838" level="INFO">${RESULT} = {'cmd': 'list_ops 45', 'msg': ['list_ops 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:43.786" endtime="20201029 18:16:43.838"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:43.840" level="INFO">${RESULT} = {'cmd': 'list_ops 45', 'msg': ['list_ops 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:43.839" endtime="20201029 18:16:43.841"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:43.842" endtime="20201029 18:16:43.844"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:43.784" endtime="20201029 18:16:43.845"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:43.782" endtime="20201029 18:16:43.845"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:43.851" endtime="20201029 18:16:44.153"></status>
</kw>
<msg timestamp="20201029 18:16:44.156" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016661458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017427931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:43.850" endtime="20201029 18:16:44.156"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:44.164" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016661458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017427931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:44.157" endtime="20201029 18:16:44.164"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:44.165" endtime="20201029 18:16:44.166"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:43.847" endtime="20201029 18:16:44.167"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:43.846" endtime="20201029 18:16:44.167"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:16:44.171" level="INFO">${PHILIP_RES} = [{'diff': 0.0007664730000000002}, {'diff': 0.0007663470000000006}, {'diff': 0.0007663470000000006}, {'diff': 0.0007663610000000001}, {'diff': 0.0007663470000000006}, {'diff': 0.0007664019999999994}, {...</msg>
<status status="PASS" starttime="20201029 18:16:44.168" endtime="20201029 18:16:44.171"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:44.175" level="INFO">${RESULT} = {'diff': [0.0007664730000000002, 0.0007663470000000006, 0.0007663470000000006, 0.0007663610000000001, 0.0007663470000000006, 0.0007664019999999994, 0.0007663610000000001, 0.000766348, 0.00076637499999...</msg>
<status status="PASS" starttime="20201029 18:16:44.172" endtime="20201029 18:16:44.175"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:44.179" level="INFO">NAME: 45-timer-trace</msg>
<status status="PASS" starttime="20201029 18:16:44.178" endtime="20201029 18:16:44.180"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:44.182" level="INFO">VALUE: [0.0007664730000000002, 0.0007663470000000006, 0.0007663470000000006, 0.0007663610000000001, 0.0007663470000000006, 0.0007664019999999994, 0.0007663610000000001, 0.000766348, 0.0007663749999999997, 0.0007663749999999997, 0.0007663610000000001, 0.000766318999999998, 0.0007663610000000001, 0.0007663749999999997, 0.0007663889999999993, 0.0007663049999999984, 0.0007663879999999998, 0.0007663750000000032, 0.0007663889999999993, 0.0007663749999999997, 0.0007663889999999993, 0.0007663749999999997, 0.0007663749999999997, 0.0007663889999999993, 0.0007663889999999993, 0.0007663879999999998, 0.0007663749999999997, 0.0007663749999999997, 0.0007663889999999993, 0.0007663889999999993, 0.0007663749999999997, 0.0007663610000000001, 0.0007663749999999997, 0.0007663749999999997, 0.0007664020000000063, 0.0007663749999999997, 0.0007663610000000001, 0.0007663610000000001, 0.0007663470000000006, 0.0007664029999999988, 0.0007663470000000006, 0.0007663749999999997, 0.0007664449999999975, 0.0007663749999999997, 0.0007663749999999997, 0.0007663749999999997, 0.0007663749999999997, 0.0007664169999999984, 0.0007663470000000006, 0.0007663749999999997]</msg>
<status status="PASS" starttime="20201029 18:16:44.181" endtime="20201029 18:16:44.183"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:44.176" endtime="20201029 18:16:44.184"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:43.780" endtime="20201029 18:16:44.184"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:43.758" endtime="20201029 18:16:44.185"></status>
</kw>
<kw name="${n} = 46" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:44.187" endtime="20201029 18:16:44.206"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:44.185" endtime="20201029 18:16:44.207"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:44.215" endtime="20201029 18:16:44.264"></status>
</kw>
<msg timestamp="20201029 18:16:44.264" level="INFO">${RESULT} = {'cmd': 'list_ops 46', 'msg': ['list_ops 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:44.214" endtime="20201029 18:16:44.265"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:44.267" level="INFO">${RESULT} = {'cmd': 'list_ops 46', 'msg': ['list_ops 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:44.265" endtime="20201029 18:16:44.267"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:44.268" endtime="20201029 18:16:44.269"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:44.211" endtime="20201029 18:16:44.270"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:44.209" endtime="20201029 18:16:44.270"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:44.277" endtime="20201029 18:16:44.563"></status>
</kw>
<msg timestamp="20201029 18:16:44.566" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016810486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017607944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:44.275" endtime="20201029 18:16:44.566"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:44.574" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016810486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017607944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:44.567" endtime="20201029 18:16:44.574"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:44.575" endtime="20201029 18:16:44.577"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:44.273" endtime="20201029 18:16:44.577"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:44.271" endtime="20201029 18:16:44.578"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:16:44.581" level="INFO">${PHILIP_RES} = [{'diff': 0.0007974580000000009}, {'diff': 0.0007973469999999969}, {'diff': 0.0007973470000000003}, {'diff': 0.0007973339999999968}, {'diff': 0.0007973190000000012}, {'diff': 0.0007973470000000003}, {...</msg>
<status status="PASS" starttime="20201029 18:16:44.578" endtime="20201029 18:16:44.582"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:44.586" level="INFO">${RESULT} = {'diff': [0.0007974580000000009, 0.0007973469999999969, 0.0007973470000000003, 0.0007973339999999968, 0.0007973190000000012, 0.0007973470000000003, 0.0007973470000000003, 0.0007972779999999985, 0.0007...</msg>
<status status="PASS" starttime="20201029 18:16:44.582" endtime="20201029 18:16:44.586"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:44.590" level="INFO">NAME: 46-timer-trace</msg>
<status status="PASS" starttime="20201029 18:16:44.589" endtime="20201029 18:16:44.591"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:44.593" level="INFO">VALUE: [0.0007974580000000009, 0.0007973469999999969, 0.0007973470000000003, 0.0007973339999999968, 0.0007973190000000012, 0.0007973470000000003, 0.0007973470000000003, 0.0007972779999999985, 0.0007973470000000003, 0.0007973749999999995, 0.0007973470000000003, 0.0007973340000000002, 0.0007973609999999999, 0.0007973470000000003, 0.0007973340000000002, 0.0007973200000000007, 0.0007973470000000003, 0.0007973609999999999, 0.0007973329999999973, 0.0007973480000000033, 0.0007973330000000042, 0.0007974029999999951, 0.0007973329999999973, 0.0007973470000000038, 0.0007973470000000038, 0.0007973189999999977, 0.0007973469999999969, 0.0007973609999999964, 0.0007973330000000042, 0.0007973189999999977, 0.0007973469999999969, 0.0007973479999999963, 0.0007973330000000042, 0.0007973189999999977, 0.0007973339999999968, 0.0007973339999999968, 0.0007973330000000042, 0.0007973750000000029, 0.0007973339999999968, 0.0007973339999999968, 0.0007973750000000029, 0.0007973330000000042, 0.0007973339999999968, 0.0007973339999999968, 0.0007973329999999973, 0.0007973470000000038, 0.0007973619999999959, 0.0007973339999999968, 0.0007973750000000029, 0.0007973330000000042]</msg>
<status status="PASS" starttime="20201029 18:16:44.592" endtime="20201029 18:16:44.594"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:44.587" endtime="20201029 18:16:44.594"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:44.207" endtime="20201029 18:16:44.595"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:44.185" endtime="20201029 18:16:44.595"></status>
</kw>
<kw name="${n} = 47" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:44.597" endtime="20201029 18:16:44.617"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:44.596" endtime="20201029 18:16:44.617"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:44.625" endtime="20201029 18:16:44.678"></status>
</kw>
<msg timestamp="20201029 18:16:44.679" level="INFO">${RESULT} = {'cmd': 'list_ops 47', 'msg': ['list_ops 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:44.624" endtime="20201029 18:16:44.679"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:44.681" level="INFO">${RESULT} = {'cmd': 'list_ops 47', 'msg': ['list_ops 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:44.680" endtime="20201029 18:16:44.682"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:44.683" endtime="20201029 18:16:44.684"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:44.621" endtime="20201029 18:16:44.685"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:44.619" endtime="20201029 18:16:44.685"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:44.692" endtime="20201029 18:16:44.990"></status>
</kw>
<msg timestamp="20201029 18:16:44.993" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016759278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017588292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:44.690" endtime="20201029 18:16:44.993"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:45.001" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016759278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017588292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:44.994" endtime="20201029 18:16:45.001"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:45.002" endtime="20201029 18:16:45.004"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:44.687" endtime="20201029 18:16:45.004"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:44.686" endtime="20201029 18:16:45.005"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:16:45.009" level="INFO">${PHILIP_RES} = [{'diff': 0.0008290139999999994}, {'diff': 0.000828930999999998}, {'diff': 0.0008289860000000003}, {'diff': 0.0008288749999999998}, {'diff': 0.000828930000000002}, {'diff': 0.000828930000000002}, {'di...</msg>
<status status="PASS" starttime="20201029 18:16:45.005" endtime="20201029 18:16:45.009"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:45.013" level="INFO">${RESULT} = {'diff': [0.0008290139999999994, 0.000828930999999998, 0.0008289860000000003, 0.0008288749999999998, 0.000828930000000002, 0.000828930000000002, 0.0008289579999999977, 0.0008289310000000015, 0.0008289...</msg>
<status status="PASS" starttime="20201029 18:16:45.010" endtime="20201029 18:16:45.013"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:45.017" level="INFO">NAME: 47-timer-trace</msg>
<status status="PASS" starttime="20201029 18:16:45.016" endtime="20201029 18:16:45.017"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:45.019" level="INFO">VALUE: [0.0008290139999999994, 0.000828930999999998, 0.0008289860000000003, 0.0008288749999999998, 0.000828930000000002, 0.000828930000000002, 0.0008289579999999977, 0.0008289310000000015, 0.0008289169999999985, 0.000828915999999999, 0.0008289170000000019, 0.000828930999999998, 0.0008289030000000024, 0.0008289029999999989, 0.0008289439999999981, 0.000828930000000002, 0.0008289169999999985, 0.000828930999999998, 0.0008289169999999985, 0.0008289299999999986, 0.0008289299999999986, 0.0008289440000000051, 0.000828930999999998, 0.0008289029999999989, 0.0008289580000000046, 0.000828915999999999, 0.0008289029999999989, 0.0008289450000000045, 0.0008289449999999976, 0.000828915999999999, 0.0008289299999999986, 0.0008289030000000058, 0.0008289169999999985, 0.0008289029999999989, 0.0008289300000000055, 0.0008288879999999998, 0.0008289299999999986, 0.0008289170000000054, 0.0008289169999999985, 0.0008289719999999973, 0.0008289440000000051, 0.0008289720000000042, 0.0008289169999999985, 0.0008289029999999989, 0.0008289170000000054, 0.000828915999999999, 0.0008289029999999989, 0.0008289030000000058, 0.0008289169999999985, 0.000828930999999998]</msg>
<status status="PASS" starttime="20201029 18:16:45.018" endtime="20201029 18:16:45.020"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:45.013" endtime="20201029 18:16:45.021"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:44.618" endtime="20201029 18:16:45.021"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:44.595" endtime="20201029 18:16:45.021"></status>
</kw>
<kw name="${n} = 48" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:45.024" endtime="20201029 18:16:45.043"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:45.022" endtime="20201029 18:16:45.044"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:45.052" endtime="20201029 18:16:45.107"></status>
</kw>
<msg timestamp="20201029 18:16:45.107" level="INFO">${RESULT} = {'cmd': 'list_ops 48', 'msg': ['list_ops 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:45.050" endtime="20201029 18:16:45.107"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:45.110" level="INFO">${RESULT} = {'cmd': 'list_ops 48', 'msg': ['list_ops 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:45.108" endtime="20201029 18:16:45.110"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:45.111" endtime="20201029 18:16:45.113"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:45.047" endtime="20201029 18:16:45.114"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:45.046" endtime="20201029 18:16:45.114"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:45.121" endtime="20201029 18:16:45.410"></status>
</kw>
<msg timestamp="20201029 18:16:45.413" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016851389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017712625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:45.119" endtime="20201029 18:16:45.413"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:45.421" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016851389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017712625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:45.414" endtime="20201029 18:16:45.421"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:45.422" endtime="20201029 18:16:45.424"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:45.117" endtime="20201029 18:16:45.424"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:45.115" endtime="20201029 18:16:45.425"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:16:45.429" level="INFO">${PHILIP_RES} = [{'diff': 0.0008612359999999979}, {'diff': 0.0008610830000000021}, {'diff': 0.0008610980000000011}, {'diff': 0.0008610839999999981}, {'diff': 0.0008610830000000021}, {'diff': 0.0008611109999999977}, {...</msg>
<status status="PASS" starttime="20201029 18:16:45.426" endtime="20201029 18:16:45.429"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:45.433" level="INFO">${RESULT} = {'diff': [0.0008612359999999979, 0.0008610830000000021, 0.0008610980000000011, 0.0008610839999999981, 0.0008610830000000021, 0.0008611109999999977, 0.0008610970000000016, 0.0008610980000000011, 0.0008...</msg>
<status status="PASS" starttime="20201029 18:16:45.430" endtime="20201029 18:16:45.433"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:45.437" level="INFO">NAME: 48-timer-trace</msg>
<status status="PASS" starttime="20201029 18:16:45.436" endtime="20201029 18:16:45.437"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:45.439" level="INFO">VALUE: [0.0008612359999999979, 0.0008610830000000021, 0.0008610980000000011, 0.0008610839999999981, 0.0008610830000000021, 0.0008611109999999977, 0.0008610970000000016, 0.0008610980000000011, 0.0008611250000000008, 0.0008611110000000012, 0.0008610829999999986, 0.000861070000000002, 0.0008610969999999982, 0.0008610969999999982, 0.0008610970000000016, 0.0008610969999999982, 0.0008610839999999981, 0.0008610830000000055, 0.0008611109999999977, 0.0008610829999999986, 0.0008610279999999998, 0.0008610979999999976, 0.0008610969999999982, 0.0008611389999999969, 0.0008610970000000051, 0.0008610979999999976, 0.000861068999999999, 0.0008610970000000051, 0.0008610829999999986, 0.0008610969999999982, 0.0008610980000000046, 0.0008611110000000047, 0.0008611109999999977, 0.0008610829999999986, 0.0008610970000000051, 0.0008610279999999998, 0.0008610969999999982, 0.0008610969999999982, 0.0008611110000000047, 0.0008610839999999981, 0.0008610969999999982, 0.0008610970000000051, 0.0008610969999999982, 0.0008610969999999982, 0.0008611390000000038, 0.0008610969999999982, 0.0008610829999999986, 0.0008611249999999973, 0.0008610980000000046, 0.0008610970000000051]</msg>
<status status="PASS" starttime="20201029 18:16:45.438" endtime="20201029 18:16:45.441"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:45.433" endtime="20201029 18:16:45.441"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:45.044" endtime="20201029 18:16:45.442"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:45.022" endtime="20201029 18:16:45.442"></status>
</kw>
<kw name="${n} = 49" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:45.444" endtime="20201029 18:16:45.464"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:45.443" endtime="20201029 18:16:45.464"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:45.472" endtime="20201029 18:16:45.529"></status>
</kw>
<msg timestamp="20201029 18:16:45.530" level="INFO">${RESULT} = {'cmd': 'list_ops 49', 'msg': ['list_ops 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:45.471" endtime="20201029 18:16:45.530"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:45.532" level="INFO">${RESULT} = {'cmd': 'list_ops 49', 'msg': ['list_ops 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:45.531" endtime="20201029 18:16:45.533"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:45.533" endtime="20201029 18:16:45.535"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:45.468" endtime="20201029 18:16:45.535"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:45.466" endtime="20201029 18:16:45.536"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:45.542" endtime="20201029 18:16:45.843"></status>
</kw>
<msg timestamp="20201029 18:16:45.846" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016756736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017650736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:45.541" endtime="20201029 18:16:45.846"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:45.853" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016756736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017650736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:45.847" endtime="20201029 18:16:45.854"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:45.854" endtime="20201029 18:16:45.856"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:45.538" endtime="20201029 18:16:45.857"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:45.536" endtime="20201029 18:16:45.857"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:16:45.861" level="INFO">${PHILIP_RES} = [{'diff': 0.000893999999999999}, {'diff': 0.0008938469999999997}, {'diff': 0.0008938890000000019}, {'diff': 0.0008939030000000014}, {'diff': 0.0008938890000000019}, {'diff': 0.0008938749999999988}, {'...</msg>
<status status="PASS" starttime="20201029 18:16:45.858" endtime="20201029 18:16:45.861"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:45.866" level="INFO">${RESULT} = {'diff': [0.000893999999999999, 0.0008938469999999997, 0.0008938890000000019, 0.0008939030000000014, 0.0008938890000000019, 0.0008938749999999988, 0.0008938749999999988, 0.000893902999999998, 0.000893...</msg>
<status status="PASS" starttime="20201029 18:16:45.862" endtime="20201029 18:16:45.866"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:45.870" level="INFO">NAME: 49-timer-trace</msg>
<status status="PASS" starttime="20201029 18:16:45.869" endtime="20201029 18:16:45.870"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:45.873" level="INFO">VALUE: [0.000893999999999999, 0.0008938469999999997, 0.0008938890000000019, 0.0008939030000000014, 0.0008938890000000019, 0.0008938749999999988, 0.0008938749999999988, 0.000893902999999998, 0.0008939589999999997, 0.0008939440000000007, 0.0008938469999999997, 0.0008938749999999988, 0.0008939030000000014, 0.0008938890000000019, 0.0008938610000000027, 0.0008938610000000027, 0.000893901999999995, 0.0008938890000000019, 0.0008938469999999962, 0.0008939719999999998, 0.0008938880000000024, 0.0008938890000000019, 0.0008939310000000006, 0.0008939580000000003, 0.000893902000000002, 0.0008939450000000002, 0.0008939580000000003, 0.0008938469999999962, 0.0008938610000000027, 0.0008939310000000006, 0.000893902000000002, 0.0008938750000000023, 0.0008938610000000027, 0.0008938890000000019, 0.0008938890000000019, 0.0008939030000000014, 0.000893901999999995, 0.0008938750000000023, 0.0008938889999999949, 0.0008938750000000023, 0.0008939029999999945, 0.0008938750000000023, 0.0008938750000000023, 0.0008938890000000019, 0.0008939440000000007, 0.0008938889999999949, 0.0008938890000000019, 0.0008938749999999954, 0.0008938749999999954, 0.0008938750000000023]</msg>
<status status="PASS" starttime="20201029 18:16:45.871" endtime="20201029 18:16:45.873"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:45.867" endtime="20201029 18:16:45.874"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:45.465" endtime="20201029 18:16:45.874"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:45.442" endtime="20201029 18:16:45.874"></status>
</kw>
<kw name="${n} = 50" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:45.877" endtime="20201029 18:16:45.896"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:45.875" endtime="20201029 18:16:45.897"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:45.905" endtime="20201029 18:16:45.964"></status>
</kw>
<msg timestamp="20201029 18:16:45.964" level="INFO">${RESULT} = {'cmd': 'list_ops 50', 'msg': ['list_ops 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:45.903" endtime="20201029 18:16:45.964"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:45.967" level="INFO">${RESULT} = {'cmd': 'list_ops 50', 'msg': ['list_ops 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:45.965" endtime="20201029 18:16:45.967"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:45.968" endtime="20201029 18:16:45.969"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:45.901" endtime="20201029 18:16:45.970"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:45.899" endtime="20201029 18:16:45.970"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:45.977" endtime="20201029 18:16:46.264"></status>
</kw>
<msg timestamp="20201029 18:16:46.267" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016735889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017663292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:45.975" endtime="20201029 18:16:46.267"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:46.275" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016735889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017663292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:46.268" endtime="20201029 18:16:46.275"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:46.276" endtime="20201029 18:16:46.278"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:45.973" endtime="20201029 18:16:46.278"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:45.971" endtime="20201029 18:16:46.279"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:16:46.283" level="INFO">${PHILIP_RES} = [{'diff': 0.0009274030000000003}, {'diff': 0.000927250000000001}, {'diff': 0.0009272630000000011}, {'diff': 0.0009273059999999993}, {'diff': 0.0009272640000000006}, {'diff': 0.0009273049999999998}, {'...</msg>
<status status="PASS" starttime="20201029 18:16:46.279" endtime="20201029 18:16:46.283"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:46.287" level="INFO">${RESULT} = {'diff': [0.0009274030000000003, 0.000927250000000001, 0.0009272630000000011, 0.0009273059999999993, 0.0009272640000000006, 0.0009273049999999998, 0.0009272919999999997, 0.0009272769999999972, 0.00092...</msg>
<status status="PASS" starttime="20201029 18:16:46.284" endtime="20201029 18:16:46.287"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:46.291" level="INFO">NAME: 50-timer-trace</msg>
<status status="PASS" starttime="20201029 18:16:46.290" endtime="20201029 18:16:46.291"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:46.293" level="INFO">VALUE: [0.0009274030000000003, 0.000927250000000001, 0.0009272630000000011, 0.0009273059999999993, 0.0009272640000000006, 0.0009273049999999998, 0.0009272919999999997, 0.0009272769999999972, 0.0009272780000000001, 0.0009272919999999997, 0.0009272770000000007, 0.0009272919999999997, 0.0009273339999999984, 0.0009272919999999997, 0.0009272640000000006, 0.0009272910000000037, 0.0009272779999999967, 0.0009273050000000033, 0.0009272779999999967, 0.0009272920000000032, 0.0009273189999999959, 0.0009272920000000032, 0.0009272919999999962, 0.0009272639999999971, 0.0009273060000000027, 0.0009272639999999971, 0.0009273060000000027, 0.0009272639999999971, 0.0009273050000000033, 0.0009272919999999962, 0.0009272910000000037, 0.0009272919999999962, 0.0009272920000000032, 0.0009272909999999968, 0.0009273330000000024, 0.0009272779999999967, 0.0009272919999999962, 0.0009272780000000036, 0.0009272909999999968, 0.0009272780000000036, 0.0009272919999999962, 0.0009272780000000036, 0.0009272919999999962, 0.0009272920000000032, 0.0009272639999999971, 0.0009272919999999962, 0.0009272770000000041, 0.0009272920000000101, 0.0009273199999999954, 0.0009272919999999962]</msg>
<status status="PASS" starttime="20201029 18:16:46.292" endtime="20201029 18:16:46.298"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:46.287" endtime="20201029 18:16:46.299"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:45.897" endtime="20201029 18:16:46.299"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:45.875" endtime="20201029 18:16:46.299"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:26.438" endtime="20201029 18:16:46.300"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 18:16:18.989" endtime="20201029 18:16:46.300" critical="yes"></status>
</test>
<status status="PASS" starttime="20201029 18:15:22.146" endtime="20201029 18:16:46.310"></status>
</suite>
<suite id="s1-s3" name="Sleep Accuracy" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/02__sleep_accuracy.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 18:16:46.385" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 18:16:46.393" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 18:16:47.590" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 18:16:46.384" endtime="20201029 18:16:47.591"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 18:16:50.594" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20201029 18:16:47.592" endtime="20201029 18:16:50.595"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:46.383" endtime="20201029 18:16:50.596"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:50.601" endtime="20201029 18:16:50.834"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:50.598" endtime="20201029 18:16:50.835"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:50.847" endtime="20201029 18:16:53.869"></status>
</kw>
<msg timestamp="20201029 18:16:53.870" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:50.845" endtime="20201029 18:16:53.870"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:53.875" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:53.872" endtime="20201029 18:16:53.876"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:16:53.881" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:16:53.877" endtime="20201029 18:16:53.882"></status>
</kw>
<status status="FAIL" starttime="20201029 18:16:50.843" endtime="20201029 18:16:53.883"></status>
</kw>
<status status="FAIL" starttime="20201029 18:16:50.841" endtime="20201029 18:16:53.885"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:50.839" endtime="20201029 18:16:53.885"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:16:53.895" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:16:53.893" endtime="20201029 18:16:53.896"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:53.887" endtime="20201029 18:16:53.896"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:50.839" endtime="20201029 18:16:53.897"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:50.838" endtime="20201029 18:16:53.897"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:53.898" endtime="20201029 18:16:53.902"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:50.837" endtime="20201029 18:16:53.903"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:53.904" endtime="20201029 18:16:53.907"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:50.835" endtime="20201029 18:16:53.908"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:46.381" endtime="20201029 18:16:53.909"></status>
</kw>
<test id="s1-s3-t1" name="Measure TIMER_SET Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:53.921" endtime="20201029 18:16:53.942"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:53.918" endtime="20201029 18:16:53.944"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:53.971" endtime="20201029 18:16:56.994"></status>
</kw>
<msg timestamp="20201029 18:16:56.995" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:53.968" endtime="20201029 18:16:56.996"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:57.001" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:56.997" endtime="20201029 18:16:57.002"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:16:57.009" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:16:57.004" endtime="20201029 18:16:57.009"></status>
</kw>
<status status="FAIL" starttime="20201029 18:16:53.962" endtime="20201029 18:16:57.011"></status>
</kw>
<status status="FAIL" starttime="20201029 18:16:53.957" endtime="20201029 18:16:57.013"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:53.955" endtime="20201029 18:16:57.014"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:16:57.023" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:16:57.021" endtime="20201029 18:16:57.024"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:57.016" endtime="20201029 18:16:57.024"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:53.953" endtime="20201029 18:16:57.025"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:53.952" endtime="20201029 18:16:57.025"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:57.027" endtime="20201029 18:16:57.031"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:53.949" endtime="20201029 18:16:57.032"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:53.945" endtime="20201029 18:16:57.033"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:53.915" endtime="20201029 18:16:57.034"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:57.056" endtime="20201029 18:16:57.073"></status>
</kw>
<msg timestamp="20201029 18:16:57.074" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:57.052" endtime="20201029 18:16:57.075"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:57.079" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:57.076" endtime="20201029 18:16:57.080"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:57.082" endtime="20201029 18:16:57.085"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:57.044" endtime="20201029 18:16:57.086"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:57.040" endtime="20201029 18:16:57.087"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:57.100" endtime="20201029 18:16:57.411"></status>
</kw>
<msg timestamp="20201029 18:16:57.415" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.125828792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.125831778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:57.097" endtime="20201029 18:16:57.415"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:57.423" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.125828792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.125831778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:57.416" endtime="20201029 18:16:57.424"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:57.424" endtime="20201029 18:16:57.426"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:57.092" endtime="20201029 18:16:57.427"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:57.088" endtime="20201029 18:16:57.427"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:57.431" level="INFO">${RESULT} = [{'diff': 2.985999999705058e-06}, {'diff': 3.319999999806811e-06}, {'diff': 2.6250000000338503e-06}, {'diff': 3.6950000001922945e-06}, {'diff': 2.9729999999617007e-06}, {'diff': 3.2770000002457778e-06...</msg>
<status status="PASS" starttime="20201029 18:16:57.428" endtime="20201029 18:16:57.431"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:57.435" level="INFO">${ACCURACY} = {'diff': [2.985999999705058e-06, 3.319999999806811e-06, 2.6250000000338503e-06, 3.6950000001922945e-06, 2.9729999999617007e-06, 3.2770000002457778e-06, 2.6250000000338503e-06, 2.6250000000338503e-06, ...</msg>
<status status="PASS" starttime="20201029 18:16:57.432" endtime="20201029 18:16:57.435"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:57.440" level="INFO">NAME: accuracy-TIMER_SET-1-philip</msg>
<status status="PASS" starttime="20201029 18:16:57.439" endtime="20201029 18:16:57.441"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:57.443" level="INFO">VALUE: [2.985999999705058e-06, 3.319999999806811e-06, 2.6250000000338503e-06, 3.6950000001922945e-06, 2.9729999999617007e-06, 3.2770000002457778e-06, 2.6250000000338503e-06, 2.6250000000338503e-06, 2.9719999998789604e-06, 2.5830000001114684e-06, 2.889000000116937e-06, 2.5839999997501195e-06, 2.6250000000338503e-06, 3.6389999999997258e-06, 2.5560000000979244e-06, 2.6250000000338503e-06, 2.985999999705058e-06, 2.9729999999617007e-06, 3.3189999997240704e-06, 2.596999999937566e-06, 2.638999999859948e-06, 2.985999999705058e-06, 2.985999999705058e-06, 2.638999999859948e-06, 2.986000000149147e-06, 2.6250000000338503e-06, 3.3190000001681597e-06, 3.666999999651921e-06, 3.3329999999942572e-06, 3.3190000001681597e-06, 3.3189999997240704e-06, 2.9719999998789604e-06, 2.639000000304037e-06, 3.304999999897973e-06, 2.6530000001301346e-06, 3.263999999614242e-06, 2.638999999859948e-06, 3.305000000342062e-06, 2.959000000135603e-06, 3.3059999999807133e-06, 3.3059999999807133e-06, 2.638999999859948e-06, 3.319999999806811e-06, 2.6380000002212967e-06, 2.638999999859948e-06, 2.9999999999752447e-06, 2.9580000000528628e-06, 2.638999999859948e-06, 2.6250000000338503e-06, 3.3059999999807133e-06]</msg>
<status status="PASS" starttime="20201029 18:16:57.442" endtime="20201029 18:16:57.443"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:57.436" endtime="20201029 18:16:57.444"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:57.447" endtime="20201029 18:16:57.467"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:57.446" endtime="20201029 18:16:57.467"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:57.445" endtime="20201029 18:16:57.468"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:57.037" endtime="20201029 18:16:57.468"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:57.036" endtime="20201029 18:16:57.468"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:57.477" endtime="20201029 18:16:57.491"></status>
</kw>
<msg timestamp="20201029 18:16:57.491" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:57.475" endtime="20201029 18:16:57.491"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:57.494" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:57.492" endtime="20201029 18:16:57.494"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:57.495" endtime="20201029 18:16:57.496"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:57.473" endtime="20201029 18:16:57.497"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:57.471" endtime="20201029 18:16:57.497"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:57.504" endtime="20201029 18:16:57.790"></status>
</kw>
<msg timestamp="20201029 18:16:57.793" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019291778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019296139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:57.502" endtime="20201029 18:16:57.793"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:57.801" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019291778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019296139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:57.794" endtime="20201029 18:16:57.802"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:57.802" endtime="20201029 18:16:57.804"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:57.499" endtime="20201029 18:16:57.805"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:57.498" endtime="20201029 18:16:57.805"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:57.809" level="INFO">${RESULT} = [{'diff': 4.361000000001336e-06}, {'diff': 4.360999999997867e-06}, {'diff': 4.04200000000271e-06}, {'diff': 4.000000000000531e-06}, {'diff': 4.347000000001766e-06}, {'diff': 4.361000000001336e-06}, {'...</msg>
<status status="PASS" starttime="20201029 18:16:57.806" endtime="20201029 18:16:57.809"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:57.814" level="INFO">${ACCURACY} = {'diff': [4.361000000001336e-06, 4.360999999997867e-06, 4.04200000000271e-06, 4.000000000000531e-06, 4.347000000001766e-06, 4.361000000001336e-06, 4.014000000000101e-06, 3.6669999999988656e-06, 4.0140...</msg>
<status status="PASS" starttime="20201029 18:16:57.810" endtime="20201029 18:16:57.814"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:57.819" level="INFO">NAME: accuracy-TIMER_SET-2-philip</msg>
<status status="PASS" starttime="20201029 18:16:57.818" endtime="20201029 18:16:57.819"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:57.821" level="INFO">VALUE: [4.361000000001336e-06, 4.360999999997867e-06, 4.04200000000271e-06, 4.000000000000531e-06, 4.347000000001766e-06, 4.361000000001336e-06, 4.014000000000101e-06, 3.6669999999988656e-06, 4.014000000000101e-06, 3.665999999999392e-06, 3.665999999999392e-06, 3.679999999998962e-06, 4.000000000000531e-06, 4.416000000000142e-06, 3.665999999999392e-06, 4.361000000001336e-06, 4.375000000000906e-06, 3.6800000000024313e-06, 3.6660000000028614e-06, 4.360999999997867e-06, 3.9999999999970615e-06, 4.360999999997867e-06, 4.027999999999671e-06, 4.014000000000101e-06, 4.000000000000531e-06, 4.34799999999777e-06, 4.361000000001336e-06, 4.027000000000197e-06, 4.014000000000101e-06, 4.291999999999491e-06, 3.987000000000435e-06, 4.014000000000101e-06, 3.9859999999974915e-06, 4.361000000001336e-06, 4.014000000000101e-06, 4.360999999997867e-06, 3.6669999999988656e-06, 3.651999999999822e-06, 4.34800000000124e-06, 3.6529999999992957e-06, 3.6660000000028614e-06, 4.000000000000531e-06, 3.5840000000009198e-06, 3.6800000000024313e-06, 3.973000000000865e-06, 4.30600000000253e-06, 3.665999999999392e-06, 3.722000000001141e-06, 3.665999999999392e-06, 4.000000000000531e-06]</msg>
<status status="PASS" starttime="20201029 18:16:57.820" endtime="20201029 18:16:57.821"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:57.815" endtime="20201029 18:16:57.822"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:57.825" endtime="20201029 18:16:57.845"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:57.824" endtime="20201029 18:16:57.846"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:57.823" endtime="20201029 18:16:57.846"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:57.469" endtime="20201029 18:16:57.846"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:57.468" endtime="20201029 18:16:57.846"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:57.856" endtime="20201029 18:16:57.871"></status>
</kw>
<msg timestamp="20201029 18:16:57.871" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:57.854" endtime="20201029 18:16:57.871"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:57.874" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:57.872" endtime="20201029 18:16:57.874"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:57.875" endtime="20201029 18:16:57.876"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:57.851" endtime="20201029 18:16:57.877"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:57.849" endtime="20201029 18:16:57.877"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:57.884" endtime="20201029 18:16:58.173"></status>
</kw>
<msg timestamp="20201029 18:16:58.176" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020468153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020472861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:57.882" endtime="20201029 18:16:58.176"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:58.184" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020468153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020472861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:58.177" endtime="20201029 18:16:58.184"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:58.185" endtime="20201029 18:16:58.187"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:57.880" endtime="20201029 18:16:58.187"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:57.878" endtime="20201029 18:16:58.188"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:58.192" level="INFO">${RESULT} = [{'diff': 4.707999999999102e-06}, {'diff': 4.639000000000726e-06}, {'diff': 5.375000000001906e-06}, {'diff': 5.402999999997576e-06}, {'diff': 5.042000000000241e-06}, {'diff': 5.055999999999811e-06}, {...</msg>
<status status="PASS" starttime="20201029 18:16:58.188" endtime="20201029 18:16:58.192"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:58.196" level="INFO">${ACCURACY} = {'diff': [4.707999999999102e-06, 4.639000000000726e-06, 5.375000000001906e-06, 5.402999999997576e-06, 5.042000000000241e-06, 5.055999999999811e-06, 5.055999999999811e-06, 5.389000000001476e-06, 5.4030...</msg>
<status status="PASS" starttime="20201029 18:16:58.193" endtime="20201029 18:16:58.196"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:58.200" level="INFO">NAME: accuracy-TIMER_SET-3-philip</msg>
<status status="PASS" starttime="20201029 18:16:58.199" endtime="20201029 18:16:58.200"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:58.203" level="INFO">VALUE: [4.707999999999102e-06, 4.639000000000726e-06, 5.375000000001906e-06, 5.402999999997576e-06, 5.042000000000241e-06, 5.055999999999811e-06, 5.055999999999811e-06, 5.389000000001476e-06, 5.403000000001046e-06, 5.3889999999980065e-06, 5.375000000001906e-06, 4.7089999999985754e-06, 4.764000000000851e-06, 4.709000000002045e-06, 5.401999999998103e-06, 5.040999999997298e-06, 4.777000000000947e-06, 5.360999999998867e-06, 4.708000000002571e-06, 4.694000000003001e-06, 5.402999999997576e-06, 4.7499999999978115e-06, 5.403000000001046e-06, 5.402999999997576e-06, 5.042000000000241e-06, 4.693999999999532e-06, 5.055000000000337e-06, 4.972000000002391e-06, 4.722999999998145e-06, 5.042000000000241e-06, 4.707999999999102e-06, 4.693999999999532e-06, 5.055999999999811e-06, 5.042000000000241e-06, 5.055000000000337e-06, 5.403000000001046e-06, 5.042000000000241e-06, 5.444000000000282e-06, 5.3889999999980065e-06, 5.347000000002766e-06, 5.068999999999907e-06, 4.707999999999102e-06, 4.721999999998672e-06, 4.707999999999102e-06, 5.3889999999980065e-06, 5.403000000001046e-06, 5.110999999998617e-06, 5.0549999999968676e-06, 5.403000000001046e-06, 4.7089999999985754e-06]</msg>
<status status="PASS" starttime="20201029 18:16:58.201" endtime="20201029 18:16:58.203"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:58.197" endtime="20201029 18:16:58.204"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:58.207" endtime="20201029 18:16:58.226"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:58.206" endtime="20201029 18:16:58.227"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:58.204" endtime="20201029 18:16:58.227"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:57.847" endtime="20201029 18:16:58.228"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:57.847" endtime="20201029 18:16:58.228"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:58.237" endtime="20201029 18:16:58.251"></status>
</kw>
<msg timestamp="20201029 18:16:58.252" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:58.235" endtime="20201029 18:16:58.252"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:58.260" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:58.253" endtime="20201029 18:16:58.260"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:58.261" endtime="20201029 18:16:58.262"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:58.232" endtime="20201029 18:16:58.263"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:58.230" endtime="20201029 18:16:58.263"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:58.270" endtime="20201029 18:16:58.559"></status>
</kw>
<msg timestamp="20201029 18:16:58.562" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020315792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020321528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:58.268" endtime="20201029 18:16:58.562"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:58.570" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020315792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020321528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:58.563" endtime="20201029 18:16:58.570"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:58.571" endtime="20201029 18:16:58.573"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:58.266" endtime="20201029 18:16:58.573"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:58.264" endtime="20201029 18:16:58.574"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:58.578" level="INFO">${RESULT} = [{'diff': 5.735999999999242e-06}, {'diff': 6.4029999999985765e-06}, {'diff': 6.069999999996911e-06}, {'diff': 5.749999999998812e-06}, {'diff': 6.0839999999999506e-06}, {'diff': 6.110999999999617e-06},...</msg>
<status status="PASS" starttime="20201029 18:16:58.575" endtime="20201029 18:16:58.578"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:58.582" level="INFO">${ACCURACY} = {'diff': [5.735999999999242e-06, 6.4029999999985765e-06, 6.069999999996911e-06, 5.749999999998812e-06, 6.0839999999999506e-06, 6.110999999999617e-06, 5.736000000002711e-06, 6.4029999999985765e-06, 6.4...</msg>
<status status="PASS" starttime="20201029 18:16:58.579" endtime="20201029 18:16:58.582"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:58.586" level="INFO">NAME: accuracy-TIMER_SET-4-philip</msg>
<status status="PASS" starttime="20201029 18:16:58.585" endtime="20201029 18:16:58.587"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:58.589" level="INFO">VALUE: [5.735999999999242e-06, 6.4029999999985765e-06, 6.069999999996911e-06, 5.749999999998812e-06, 6.0839999999999506e-06, 6.110999999999617e-06, 5.736000000002711e-06, 6.4029999999985765e-06, 6.430000000001712e-06, 6.472000000000422e-06, 6.0839999999999506e-06, 5.721999999999672e-06, 5.736999999998715e-06, 5.736000000002711e-06, 5.7089999999995755e-06, 5.749999999998812e-06, 5.402999999997576e-06, 6.416000000002142e-06, 5.360999999998867e-06, 6.083000000000477e-06, 6.360999999999867e-06, 5.735999999999242e-06, 5.735999999999242e-06, 5.764000000001851e-06, 6.431000000001186e-06, 6.429999999998243e-06, 5.681000000000436e-06, 6.097000000000047e-06, 5.735999999999242e-06, 5.695000000000006e-06, 6.070000000000381e-06, 5.695000000000006e-06, 5.750000000002281e-06, 6.097000000000047e-06, 5.708000000000102e-06, 6.430999999997716e-06, 6.083000000000477e-06, 5.7639999999983815e-06, 6.430000000001712e-06, 5.417000000000616e-06, 5.764000000001851e-06, 6.0839999999999506e-06, 6.083000000000477e-06, 5.374999999998437e-06, 5.735999999999242e-06, 6.0829999999970075e-06, 5.750000000002281e-06, 6.110999999999617e-06, 6.069000000000907e-06, 6.11199999999909e-06]</msg>
<status status="PASS" starttime="20201029 18:16:58.588" endtime="20201029 18:16:58.590"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:58.583" endtime="20201029 18:16:58.591"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:58.594" endtime="20201029 18:16:58.614"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:58.593" endtime="20201029 18:16:58.614"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:58.592" endtime="20201029 18:16:58.615"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:58.229" endtime="20201029 18:16:58.615"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:58.228" endtime="20201029 18:16:58.615"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:58.624" endtime="20201029 18:16:58.639"></status>
</kw>
<msg timestamp="20201029 18:16:58.639" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:58.622" endtime="20201029 18:16:58.639"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:58.642" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:58.640" endtime="20201029 18:16:58.642"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:58.643" endtime="20201029 18:16:58.644"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:58.619" endtime="20201029 18:16:58.645"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:58.617" endtime="20201029 18:16:58.645"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:58.652" endtime="20201029 18:16:58.935"></status>
</kw>
<msg timestamp="20201029 18:16:58.938" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020735764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020742542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:58.650" endtime="20201029 18:16:58.939"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:58.947" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020735764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020742542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:58.940" endtime="20201029 18:16:58.947"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:58.948" endtime="20201029 18:16:58.949"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:58.647" endtime="20201029 18:16:58.950"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:58.646" endtime="20201029 18:16:58.950"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:58.954" level="INFO">${RESULT} = [{'diff': 6.7779999999989515e-06}, {'diff': 7.1120000000000905e-06}, {'diff': 6.7779999999989515e-06}, {'diff': 6.430000000001712e-06}, {'diff': 6.778000000002421e-06}, {'diff': 6.763999999999382e-06}...</msg>
<status status="PASS" starttime="20201029 18:16:58.951" endtime="20201029 18:16:58.955"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:58.959" level="INFO">${ACCURACY} = {'diff': [6.7779999999989515e-06, 7.1120000000000905e-06, 6.7779999999989515e-06, 6.430000000001712e-06, 6.778000000002421e-06, 6.763999999999382e-06, 6.778000000002421e-06, 7.473000000000896e-06, 7.1...</msg>
<status status="PASS" starttime="20201029 18:16:58.955" endtime="20201029 18:16:58.960"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:58.964" level="INFO">NAME: accuracy-TIMER_SET-5-philip</msg>
<status status="PASS" starttime="20201029 18:16:58.963" endtime="20201029 18:16:58.964"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:58.966" level="INFO">VALUE: [6.7779999999989515e-06, 7.1120000000000905e-06, 6.7779999999989515e-06, 6.430000000001712e-06, 6.778000000002421e-06, 6.763999999999382e-06, 6.778000000002421e-06, 7.473000000000896e-06, 7.125000000000187e-06, 7.138999999999757e-06, 6.749999999999812e-06, 7.444000000002282e-06, 6.445000000000756e-06, 7.4719999999979525e-06, 6.819000000001657e-06, 7.138999999999757e-06, 6.7779999999989515e-06, 7.111000000000617e-06, 7.125000000000187e-06, 7.111000000000617e-06, 7.4719999999979525e-06, 6.431000000001186e-06, 7.472999999997426e-06, 6.7779999999989515e-06, 7.125000000000187e-06, 7.111000000000617e-06, 7.111000000000617e-06, 7.458000000001852e-06, 7.486000000000992e-06, 7.125000000000187e-06, 7.458999999997856e-06, 6.818999999998188e-06, 7.459000000001326e-06, 7.110999999997147e-06, 6.7779999999989515e-06, 7.125000000000187e-06, 7.485999999997522e-06, 7.042000000002241e-06, 6.749999999999812e-06, 6.749999999999812e-06, 6.819999999997661e-06, 7.472000000001422e-06, 6.444000000001282e-06, 7.111000000000617e-06, 6.790999999999048e-06, 7.125000000000187e-06, 6.7779999999989515e-06, 6.7779999999989515e-06, 7.125000000000187e-06, 7.097999999997051e-06]</msg>
<status status="PASS" starttime="20201029 18:16:58.965" endtime="20201029 18:16:58.967"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:58.960" endtime="20201029 18:16:58.967"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:58.971" endtime="20201029 18:16:58.990"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:58.969" endtime="20201029 18:16:58.991"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:58.968" endtime="20201029 18:16:58.991"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:58.616" endtime="20201029 18:16:58.992"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:58.615" endtime="20201029 18:16:58.992"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:59.001" endtime="20201029 18:16:59.015"></status>
</kw>
<msg timestamp="20201029 18:16:59.016" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:58.999" endtime="20201029 18:16:59.016"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:59.018" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:59.017" endtime="20201029 18:16:59.018"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:59.019" endtime="20201029 18:16:59.021"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:58.997" endtime="20201029 18:16:59.021"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:58.994" endtime="20201029 18:16:59.022"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:59.028" endtime="20201029 18:16:59.313"></status>
</kw>
<msg timestamp="20201029 18:16:59.316" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019951167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019959, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:16:59.026" endtime="20201029 18:16:59.316"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:59.324" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019951167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019959, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:16:59.317" endtime="20201029 18:16:59.324"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:59.325" endtime="20201029 18:16:59.327"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:59.024" endtime="20201029 18:16:59.327"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:59.022" endtime="20201029 18:16:59.328"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:59.331" level="INFO">${RESULT} = [{'diff': 7.833000000002227e-06}, {'diff': 7.4719999999979525e-06}, {'diff': 8.153000000000327e-06}, {'diff': 8.153000000000327e-06}, {'diff': 7.791000000000048e-06}, {'diff': 7.791999999999522e-06}, ...</msg>
<status status="PASS" starttime="20201029 18:16:59.328" endtime="20201029 18:16:59.332"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:59.336" level="INFO">${ACCURACY} = {'diff': [7.833000000002227e-06, 7.4719999999979525e-06, 8.153000000000327e-06, 8.153000000000327e-06, 7.791000000000048e-06, 7.791999999999522e-06, 8.514000000001132e-06, 8.166000000000423e-06, 7.375...</msg>
<status status="PASS" starttime="20201029 18:16:59.332" endtime="20201029 18:16:59.336"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:59.340" level="INFO">NAME: accuracy-TIMER_SET-6-philip</msg>
<status status="PASS" starttime="20201029 18:16:59.339" endtime="20201029 18:16:59.340"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:59.343" level="INFO">VALUE: [7.833000000002227e-06, 7.4719999999979525e-06, 8.153000000000327e-06, 8.153000000000327e-06, 7.791000000000048e-06, 7.791999999999522e-06, 8.514000000001132e-06, 8.166000000000423e-06, 7.375000000000437e-06, 8.486999999997996e-06, 7.832999999998758e-06, 7.804999999999618e-06, 8.499999999998092e-06, 7.459000000001326e-06, 7.458999999997856e-06, 8.166999999999897e-06, 7.514000000000132e-06, 8.541000000000798e-06, 7.804999999999618e-06, 8.153000000000327e-06, 8.153000000000327e-06, 7.82000000000213e-06, 7.818999999999188e-06, 7.82000000000213e-06, 8.513999999997662e-06, 7.444999999998286e-06, 7.806000000002561e-06, 8.514000000001132e-06, 8.139000000000757e-06, 8.166999999999897e-06, 8.514000000001132e-06, 8.500000000001562e-06, 8.153000000000327e-06, 7.818999999999188e-06, 8.153000000000327e-06, 8.500000000001562e-06, 7.4719999999979525e-06, 7.804999999999618e-06, 8.153000000000327e-06, 8.179999999999993e-06, 7.805999999999091e-06, 8.151999999997384e-06, 7.764000000000382e-06, 8.472999999998426e-06, 7.818999999999188e-06, 7.8340000000017e-06, 8.166999999999897e-06, 8.166999999999897e-06, 7.832999999998758e-06, 8.138000000001283e-06]</msg>
<status status="PASS" starttime="20201029 18:16:59.341" endtime="20201029 18:16:59.343"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:59.336" endtime="20201029 18:16:59.343"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:59.347" endtime="20201029 18:16:59.367"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:59.345" endtime="20201029 18:16:59.368"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:59.344" endtime="20201029 18:16:59.368"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:58.993" endtime="20201029 18:16:59.368"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:58.992" endtime="20201029 18:16:59.369"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:59.379" endtime="20201029 18:16:59.396"></status>
</kw>
<msg timestamp="20201029 18:16:59.396" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:59.377" endtime="20201029 18:16:59.396"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:59.399" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:59.397" endtime="20201029 18:16:59.399"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:59.400" endtime="20201029 18:16:59.401"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:59.375" endtime="20201029 18:16:59.402"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:59.372" endtime="20201029 18:16:59.402"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:59.409" endtime="20201029 18:16:59.694"></status>
</kw>
<msg timestamp="20201029 18:16:59.697" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024176167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024184986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:59.407" endtime="20201029 18:16:59.697"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:59.705" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024176167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024184986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:59.698" endtime="20201029 18:16:59.706"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:59.706" endtime="20201029 18:16:59.708"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:59.405" endtime="20201029 18:16:59.708"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:59.403" endtime="20201029 18:16:59.709"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:59.713" level="INFO">${RESULT} = [{'diff': 8.819000000000188e-06}, {'diff': 9.527000000002228e-06}, {'diff': 8.444999999999286e-06}, {'diff': 9.181000000000467e-06}, {'diff': 9.541999999997802e-06}, {'diff': 8.846999999999328e-06}, {...</msg>
<status status="PASS" starttime="20201029 18:16:59.710" endtime="20201029 18:16:59.713"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:59.717" level="INFO">${ACCURACY} = {'diff': [8.819000000000188e-06, 9.527000000002228e-06, 8.444999999999286e-06, 9.181000000000467e-06, 9.541999999997802e-06, 8.846999999999328e-06, 8.499999999998092e-06, 9.180000000000993e-06, 8.5000...</msg>
<status status="PASS" starttime="20201029 18:16:59.714" endtime="20201029 18:16:59.717"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:59.721" level="INFO">NAME: accuracy-TIMER_SET-7-philip</msg>
<status status="PASS" starttime="20201029 18:16:59.720" endtime="20201029 18:16:59.722"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:59.724" level="INFO">VALUE: [8.819000000000188e-06, 9.527000000002228e-06, 8.444999999999286e-06, 9.181000000000467e-06, 9.541999999997802e-06, 8.846999999999328e-06, 8.499999999998092e-06, 9.180000000000993e-06, 8.500000000001562e-06, 9.195000000000036e-06, 8.833999999999231e-06, 9.208000000000133e-06, 9.513999999998662e-06, 8.846999999999328e-06, 9.208000000000133e-06, 9.194000000000563e-06, 8.832999999999758e-06, 9.222000000003172e-06, 9.513999999998662e-06, 9.180000000000993e-06, 9.527999999998232e-06, 8.860999999998898e-06, 8.846999999999328e-06, 8.874999999998467e-06, 9.194000000000563e-06, 8.847999999998801e-06, 8.513000000001658e-06, 8.500000000001562e-06, 9.194000000000563e-06, 8.528000000000702e-06, 8.513000000001658e-06, 9.195000000000036e-06, 9.541000000001798e-06, 8.846999999999328e-06, 9.180000000000993e-06, 9.250000000002312e-06, 8.861000000002367e-06, 8.846999999999328e-06, 8.499999999998092e-06, 8.527999999997232e-06, 9.542000000001272e-06, 9.499999999999093e-06, 9.194000000000563e-06, 9.167000000000897e-06, 9.194000000000563e-06, 9.179999999997523e-06, 9.181000000000467e-06, 8.500000000001562e-06, 9.195000000000036e-06, 9.194000000000563e-06]</msg>
<status status="PASS" starttime="20201029 18:16:59.723" endtime="20201029 18:16:59.725"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:59.718" endtime="20201029 18:16:59.726"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:59.730" endtime="20201029 18:16:59.749"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:59.728" endtime="20201029 18:16:59.750"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:59.727" endtime="20201029 18:16:59.750"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:59.370" endtime="20201029 18:16:59.750"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:59.369" endtime="20201029 18:16:59.750"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:59.759" endtime="20201029 18:16:59.773"></status>
</kw>
<msg timestamp="20201029 18:16:59.774" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:59.757" endtime="20201029 18:16:59.774"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:59.776" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:59.775" endtime="20201029 18:16:59.776"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:59.777" endtime="20201029 18:16:59.779"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:59.755" endtime="20201029 18:16:59.779"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:59.753" endtime="20201029 18:16:59.779"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:59.786" endtime="20201029 18:17:00.072"></status>
</kw>
<msg timestamp="20201029 18:17:00.075" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019268972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019278514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:59.784" endtime="20201029 18:17:00.075"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:00.083" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019268972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019278514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:00.076" endtime="20201029 18:17:00.084"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:00.084" endtime="20201029 18:17:00.086"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:59.782" endtime="20201029 18:17:00.086"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:59.780" endtime="20201029 18:17:00.087"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:00.091" level="INFO">${RESULT} = [{'diff': 9.542000000001272e-06}, {'diff': 9.888999999999037e-06}, {'diff': 1.0236000000000273e-05}, {'diff': 1.0596999999997608e-05}, {'diff': 9.860999999999898e-06}, {'diff': 9.542000000001272e-06},...</msg>
<status status="PASS" starttime="20201029 18:17:00.088" endtime="20201029 18:17:00.091"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:00.096" level="INFO">${ACCURACY} = {'diff': [9.542000000001272e-06, 9.888999999999037e-06, 1.0236000000000273e-05, 1.0596999999997608e-05, 9.860999999999898e-06, 9.542000000001272e-06, 1.0208000000001133e-05, 9.875000000002937e-06, 1.0...</msg>
<status status="PASS" starttime="20201029 18:17:00.092" endtime="20201029 18:17:00.096"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:00.100" level="INFO">NAME: accuracy-TIMER_SET-8-philip</msg>
<status status="PASS" starttime="20201029 18:17:00.099" endtime="20201029 18:17:00.101"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:00.103" level="INFO">VALUE: [9.542000000001272e-06, 9.888999999999037e-06, 1.0236000000000273e-05, 1.0596999999997608e-05, 9.860999999999898e-06, 9.542000000001272e-06, 1.0208000000001133e-05, 9.875000000002937e-06, 1.0570000000001412e-05, 1.0597999999997082e-05, 1.0207999999997663e-05, 1.0569000000001938e-05, 9.888999999999037e-06, 9.514000000002132e-06, 1.0568999999998469e-05, 9.944000000001313e-06, 9.514000000002132e-06, 9.528000000001702e-06, 1.0291999999998552e-05, 1.0319999999997692e-05, 9.513999999998662e-06, 9.887999999999564e-06, 9.861999999999371e-06, 9.540999999998329e-06, 9.874999999999468e-06, 9.540999999998329e-06, 1.0582999999998038e-05, 9.902000000002603e-06, 9.887999999999564e-06, 9.902999999998607e-06, 9.582999999997038e-06, 9.874999999999468e-06, 1.0208000000001133e-05, 9.542000000001272e-06, 9.874999999999468e-06, 9.888999999999037e-06, 9.889000000002507e-06, 9.945000000000787e-06, 1.0222000000000703e-05, 9.458000000000383e-06, 1.0207999999997663e-05, 9.945000000000787e-06, 9.597000000000078e-06, 1.0555000000002368e-05, 1.0249999999999843e-05, 9.527000000002228e-06, 9.513999999998662e-06, 9.901999999999134e-06, 9.888999999999037e-06, 9.887999999999564e-06]</msg>
<status status="PASS" starttime="20201029 18:17:00.101" endtime="20201029 18:17:00.104"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:00.097" endtime="20201029 18:17:00.104"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:00.108" endtime="20201029 18:17:00.127"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:00.106" endtime="20201029 18:17:00.128"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:00.105" endtime="20201029 18:17:00.128"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:59.751" endtime="20201029 18:17:00.128"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:59.751" endtime="20201029 18:17:00.128"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:00.137" endtime="20201029 18:17:00.151"></status>
</kw>
<msg timestamp="20201029 18:17:00.151" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:00.135" endtime="20201029 18:17:00.151"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:00.154" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:00.152" endtime="20201029 18:17:00.154"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:00.155" endtime="20201029 18:17:00.156"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:00.133" endtime="20201029 18:17:00.157"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:00.131" endtime="20201029 18:17:00.157"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:00.164" endtime="20201029 18:17:00.452"></status>
</kw>
<msg timestamp="20201029 18:17:00.455" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019273889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019284806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:00.162" endtime="20201029 18:17:00.455"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:00.463" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019273889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019284806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:00.456" endtime="20201029 18:17:00.464"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:00.465" endtime="20201029 18:17:00.467"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:00.159" endtime="20201029 18:17:00.468"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:00.158" endtime="20201029 18:17:00.468"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:00.473" level="INFO">${RESULT} = [{'diff': 1.0917000000002647e-05}, {'diff': 1.1264000000000413e-05}, {'diff': 1.0569000000001938e-05}, {'diff': 1.1277999999999982e-05}, {'diff': 1.1235999999997803e-05}, {'diff': 1.1236000000001273e-...</msg>
<status status="PASS" starttime="20201029 18:17:00.469" endtime="20201029 18:17:00.474"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:00.480" level="INFO">${ACCURACY} = {'diff': [1.0917000000002647e-05, 1.1264000000000413e-05, 1.0569000000001938e-05, 1.1277999999999982e-05, 1.1235999999997803e-05, 1.1236000000001273e-05, 1.0569000000001938e-05, 1.0889000000000038e-05...</msg>
<status status="PASS" starttime="20201029 18:17:00.475" endtime="20201029 18:17:00.480"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:00.485" level="INFO">NAME: accuracy-TIMER_SET-9-philip</msg>
<status status="PASS" starttime="20201029 18:17:00.484" endtime="20201029 18:17:00.485"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:00.488" level="INFO">VALUE: [1.0917000000002647e-05, 1.1264000000000413e-05, 1.0569000000001938e-05, 1.1277999999999982e-05, 1.1235999999997803e-05, 1.1236000000001273e-05, 1.0569000000001938e-05, 1.0889000000000038e-05, 1.0930999999998747e-05, 1.0889000000000038e-05, 1.0555000000002368e-05, 1.0569999999997942e-05, 1.1318999999999219e-05, 1.0568999999998469e-05, 1.1193999999999094e-05, 1.1263000000000939e-05, 1.1221999999998233e-05, 1.1222000000001703e-05, 1.1277000000000509e-05, 1.0556000000001842e-05, 1.0583999999997512e-05, 1.0902999999999607e-05, 1.0569999999997942e-05, 1.0569000000001938e-05, 1.0916999999999177e-05, 1.0584000000000982e-05, 1.1250000000000843e-05, 1.1277999999999982e-05, 1.1277000000000509e-05, 1.0930999999998747e-05, 1.0568999999998469e-05, 1.1195000000002037e-05, 1.1264000000000413e-05, 1.0903000000003077e-05, 1.0917000000002647e-05, 1.0598000000000551e-05, 1.0916999999999177e-05, 1.0916999999999177e-05, 1.0917000000002647e-05, 1.0916999999999177e-05, 1.1264000000000413e-05, 1.1277999999999982e-05, 1.0943999999998844e-05, 1.0929999999999274e-05, 1.0556000000001842e-05, 1.0555000000002368e-05, 1.0915999999999704e-05, 1.0903000000003077e-05, 1.1264000000000413e-05, 1.0916999999999177e-05]</msg>
<status status="PASS" starttime="20201029 18:17:00.486" endtime="20201029 18:17:00.489"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:00.481" endtime="20201029 18:17:00.490"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:00.495" endtime="20201029 18:17:00.515"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:00.493" endtime="20201029 18:17:00.515"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:00.491" endtime="20201029 18:17:00.515"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:00.129" endtime="20201029 18:17:00.516"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:00.129" endtime="20201029 18:17:00.516"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:00.524" endtime="20201029 18:17:00.542"></status>
</kw>
<msg timestamp="20201029 18:17:00.542" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:00.523" endtime="20201029 18:17:00.542"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:00.545" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:00.543" endtime="20201029 18:17:00.545"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:00.546" endtime="20201029 18:17:00.547"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:00.520" endtime="20201029 18:17:00.548"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:00.518" endtime="20201029 18:17:00.548"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:00.555" endtime="20201029 18:17:00.842"></status>
</kw>
<msg timestamp="20201029 18:17:00.845" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022610625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022622278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:00.553" endtime="20201029 18:17:00.846"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:00.853" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022610625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022622278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:00.847" endtime="20201029 18:17:00.854"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:00.855" endtime="20201029 18:17:00.856"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:00.551" endtime="20201029 18:17:00.857"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:00.549" endtime="20201029 18:17:00.857"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:00.861" level="INFO">${RESULT} = [{'diff': 1.1653000000000358e-05}, {'diff': 1.1624999999997748e-05}, {'diff': 1.1930999999999747e-05}, {'diff': 1.1596999999998608e-05}, {'diff': 1.1624999999997748e-05}, {'diff': 1.1957999999999414e-...</msg>
<status status="PASS" starttime="20201029 18:17:00.858" endtime="20201029 18:17:00.861"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:00.865" level="INFO">${ACCURACY} = {'diff': [1.1653000000000358e-05, 1.1624999999997748e-05, 1.1930999999999747e-05, 1.1596999999998608e-05, 1.1624999999997748e-05, 1.1957999999999414e-05, 1.2291000000001079e-05, 1.229099999999761e-05,...</msg>
<status status="PASS" starttime="20201029 18:17:00.862" endtime="20201029 18:17:00.866"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:00.870" level="INFO">NAME: accuracy-TIMER_SET-10-philip</msg>
<status status="PASS" starttime="20201029 18:17:00.869" endtime="20201029 18:17:00.870"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:00.872" level="INFO">VALUE: [1.1653000000000358e-05, 1.1624999999997748e-05, 1.1930999999999747e-05, 1.1596999999998608e-05, 1.1624999999997748e-05, 1.1957999999999414e-05, 1.2291000000001079e-05, 1.229099999999761e-05, 1.1943999999999844e-05, 1.2306000000000122e-05, 1.2320000000003162e-05, 1.1930000000000274e-05, 1.1959000000002357e-05, 1.1986000000002023e-05, 1.2319999999999692e-05, 1.1944999999999317e-05, 1.2292000000000552e-05, 1.2264000000001413e-05, 1.1583000000002508e-05, 1.2306000000000122e-05, 1.2638999999998318e-05, 1.1612000000001121e-05, 1.1930000000000274e-05, 1.2278000000000983e-05, 1.1596999999998608e-05, 1.2319000000000219e-05, 1.1598000000001552e-05, 1.2291999999997083e-05, 1.1679999999996554e-05, 1.1943999999999844e-05, 1.1610999999998178e-05, 1.1611000000001648e-05, 1.2292000000000552e-05, 1.2305999999996653e-05, 1.1612000000001121e-05, 1.2291000000001079e-05, 1.2278000000000983e-05, 1.1972000000002453e-05, 1.1957999999999414e-05, 1.2638999999998318e-05, 1.1944999999999317e-05, 1.1625000000001218e-05, 1.2306000000000122e-05, 1.2292000000000552e-05, 1.1596999999998608e-05, 1.1999999999998123e-05, 1.1930999999999747e-05, 1.2014000000001163e-05, 1.2291000000001079e-05, 1.1972999999998457e-05]</msg>
<status status="PASS" starttime="20201029 18:17:00.871" endtime="20201029 18:17:00.874"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:00.866" endtime="20201029 18:17:00.874"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:00.878" endtime="20201029 18:17:00.898"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:00.877" endtime="20201029 18:17:00.899"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:00.875" endtime="20201029 18:17:00.900"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:00.517" endtime="20201029 18:17:00.900"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:00.516" endtime="20201029 18:17:00.900"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:00.910" endtime="20201029 18:17:00.925"></status>
</kw>
<msg timestamp="20201029 18:17:00.925" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:00.908" endtime="20201029 18:17:00.925"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:00.928" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:00.926" endtime="20201029 18:17:00.928"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:00.929" endtime="20201029 18:17:00.930"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:00.905" endtime="20201029 18:17:00.931"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:00.903" endtime="20201029 18:17:00.931"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:00.938" endtime="20201029 18:17:01.224"></status>
</kw>
<msg timestamp="20201029 18:17:01.228" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021360292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021373625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:00.936" endtime="20201029 18:17:01.228"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:01.238" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021360292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021373625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:01.229" endtime="20201029 18:17:01.239"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:01.240" endtime="20201029 18:17:01.242"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:00.934" endtime="20201029 18:17:01.243"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:00.932" endtime="20201029 18:17:01.244"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:01.250" level="INFO">${RESULT} = [{'diff': 1.3333000000000789e-05}, {'diff': 1.2986000000003023e-05}, {'diff': 1.2666999999997458e-05}, {'diff': 1.2653000000001358e-05}, {'diff': 1.2639000000001788e-05}, {'diff': 1.2612000000002122e-...</msg>
<status status="PASS" starttime="20201029 18:17:01.245" endtime="20201029 18:17:01.251"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:01.257" level="INFO">${ACCURACY} = {'diff': [1.3333000000000789e-05, 1.2986000000003023e-05, 1.2666999999997458e-05, 1.2653000000001358e-05, 1.2639000000001788e-05, 1.2612000000002122e-05, 1.2985999999999553e-05, 1.2985999999999553e-05...</msg>
<status status="PASS" starttime="20201029 18:17:01.252" endtime="20201029 18:17:01.258"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:01.269" level="INFO">NAME: accuracy-TIMER_SET-11-philip</msg>
<status status="PASS" starttime="20201029 18:17:01.265" endtime="20201029 18:17:01.269"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:01.273" level="INFO">VALUE: [1.3333000000000789e-05, 1.2986000000003023e-05, 1.2666999999997458e-05, 1.2653000000001358e-05, 1.2639000000001788e-05, 1.2612000000002122e-05, 1.2985999999999553e-05, 1.2985999999999553e-05, 1.2638000000002314e-05, 1.2971999999999984e-05, 1.2985999999999553e-05, 1.2985999999999553e-05, 1.2651999999998415e-05, 1.2999999999999123e-05, 1.2958999999999887e-05, 1.2638999999998318e-05, 1.2999999999999123e-05, 1.3333000000000789e-05, 1.3306000000001122e-05, 1.2902999999998138e-05, 1.2556000000000372e-05, 1.2999999999999123e-05, 1.2625000000002218e-05, 1.3000000000002593e-05, 1.2639000000001788e-05, 1.2986000000003023e-05, 1.2971999999999984e-05, 1.2652999999997888e-05, 1.3334000000000262e-05, 1.3000000000002593e-05, 1.2971999999999984e-05, 1.2624999999998748e-05, 1.3334000000000262e-05, 1.2917000000001178e-05, 1.2985999999999553e-05, 1.2708000000000164e-05, 1.333299999999732e-05, 1.3319000000001219e-05, 1.3319000000001219e-05, 1.2971999999999984e-05, 1.3334000000000262e-05, 1.3028000000001733e-05, 1.2639000000001788e-05, 1.3374999999999498e-05, 1.2638999999998318e-05, 1.2639000000001788e-05, 1.2584000000002982e-05, 1.2639000000001788e-05, 1.2624999999998748e-05, 1.2639000000001788e-05]</msg>
<status status="PASS" starttime="20201029 18:17:01.270" endtime="20201029 18:17:01.274"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:01.259" endtime="20201029 18:17:01.275"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:01.282" endtime="20201029 18:17:01.302"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:01.279" endtime="20201029 18:17:01.303"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:01.277" endtime="20201029 18:17:01.303"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:00.901" endtime="20201029 18:17:01.304"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:00.900" endtime="20201029 18:17:01.304"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:01.313" endtime="20201029 18:17:01.328"></status>
</kw>
<msg timestamp="20201029 18:17:01.328" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:01.311" endtime="20201029 18:17:01.329"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:01.331" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:01.329" endtime="20201029 18:17:01.331"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:01.332" endtime="20201029 18:17:01.334"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:01.308" endtime="20201029 18:17:01.334"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:01.306" endtime="20201029 18:17:01.335"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:01.341" endtime="20201029 18:17:01.629"></status>
</kw>
<msg timestamp="20201029 18:17:01.632" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021023111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021037472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:01.339" endtime="20201029 18:17:01.632"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:01.640" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021023111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021037472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:01.633" endtime="20201029 18:17:01.640"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:01.641" endtime="20201029 18:17:01.643"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:01.337" endtime="20201029 18:17:01.643"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:01.335" endtime="20201029 18:17:01.644"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:01.648" level="INFO">${RESULT} = [{'diff': 1.4361000000000929e-05}, {'diff': 1.3679999999998554e-05}, {'diff': 1.3749999999999873e-05}, {'diff': 1.4347000000001359e-05}, {'diff': 1.4360999999997459e-05}, {'diff': 1.408299999999807e-0...</msg>
<status status="PASS" starttime="20201029 18:17:01.644" endtime="20201029 18:17:01.648"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:01.652" level="INFO">${ACCURACY} = {'diff': [1.4361000000000929e-05, 1.3679999999998554e-05, 1.3749999999999873e-05, 1.4347000000001359e-05, 1.4360999999997459e-05, 1.408299999999807e-05, 1.4375000000000498e-05, 1.3708999999997168e-05,...</msg>
<status status="PASS" starttime="20201029 18:17:01.649" endtime="20201029 18:17:01.652"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:01.656" level="INFO">NAME: accuracy-TIMER_SET-12-philip</msg>
<status status="PASS" starttime="20201029 18:17:01.655" endtime="20201029 18:17:01.657"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:01.659" level="INFO">VALUE: [1.4361000000000929e-05, 1.3679999999998554e-05, 1.3749999999999873e-05, 1.4347000000001359e-05, 1.4360999999997459e-05, 1.408299999999807e-05, 1.4375000000000498e-05, 1.3708999999997168e-05, 1.4013999999999693e-05, 1.4389000000000068e-05, 1.4416999999999208e-05, 1.4028000000002733e-05, 1.4027999999999263e-05, 1.3749999999999873e-05, 1.3639000000002788e-05, 1.402699999999979e-05, 1.4013999999999693e-05, 1.3694000000001594e-05, 1.3681000000001498e-05, 1.4028000000002733e-05, 1.3666999999998458e-05, 1.3667000000001928e-05, 1.4361000000000929e-05, 1.401300000000022e-05, 1.40689999999985e-05, 1.4027999999999263e-05, 1.4000000000000123e-05, 1.3679999999998554e-05, 1.4389000000000068e-05, 1.3680000000002024e-05, 1.4362000000000402e-05, 1.3679999999998554e-05, 1.402699999999979e-05, 1.3708000000001164e-05, 1.4374999999997029e-05, 1.4361000000000929e-05, 1.3681000000001498e-05, 1.4361000000000929e-05, 1.3680999999998028e-05, 1.4027999999999263e-05, 1.4361000000000929e-05, 1.3681000000001498e-05, 1.4360999999997459e-05, 1.4041999999998833e-05, 1.3694000000001594e-05, 1.4360999999997459e-05, 1.4013999999999693e-05, 1.3681000000001498e-05, 1.4055999999998403e-05, 1.3680999999998028e-05]</msg>
<status status="PASS" starttime="20201029 18:17:01.657" endtime="20201029 18:17:01.659"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:01.653" endtime="20201029 18:17:01.660"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:01.664" endtime="20201029 18:17:01.683"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:01.662" endtime="20201029 18:17:01.684"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:01.661" endtime="20201029 18:17:01.684"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:01.305" endtime="20201029 18:17:01.684"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:01.304" endtime="20201029 18:17:01.684"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:01.693" endtime="20201029 18:17:01.709"></status>
</kw>
<msg timestamp="20201029 18:17:01.709" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:01.692" endtime="20201029 18:17:01.709"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:01.712" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:01.710" endtime="20201029 18:17:01.712"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:01.713" endtime="20201029 18:17:01.714"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:01.689" endtime="20201029 18:17:01.715"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:01.687" endtime="20201029 18:17:01.715"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:01.722" endtime="20201029 18:17:02.009"></status>
</kw>
<msg timestamp="20201029 18:17:02.012" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020523625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020538333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:01.720" endtime="20201029 18:17:02.012"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:02.020" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020523625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020538333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:02.013" endtime="20201029 18:17:02.020"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:02.021" endtime="20201029 18:17:02.023"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:01.718" endtime="20201029 18:17:02.023"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:01.716" endtime="20201029 18:17:02.024"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:02.027" level="INFO">${RESULT} = [{'diff': 1.4707999999998694e-05}, {'diff': 1.4709000000001637e-05}, {'diff': 1.5401999999997695e-05}, {'diff': 1.4722000000001734e-05}, {'diff': 1.5055999999999403e-05}, {'diff': 1.4723000000001207e-...</msg>
<status status="PASS" starttime="20201029 18:17:02.024" endtime="20201029 18:17:02.028"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:02.032" level="INFO">${ACCURACY} = {'diff': [1.4707999999998694e-05, 1.4709000000001637e-05, 1.5401999999997695e-05, 1.4722000000001734e-05, 1.5055999999999403e-05, 1.4723000000001207e-05, 1.4721999999998264e-05, 1.505499999999993e-05,...</msg>
<status status="PASS" starttime="20201029 18:17:02.028" endtime="20201029 18:17:02.032"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:02.036" level="INFO">NAME: accuracy-TIMER_SET-13-philip</msg>
<status status="PASS" starttime="20201029 18:17:02.035" endtime="20201029 18:17:02.036"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:02.038" level="INFO">VALUE: [1.4707999999998694e-05, 1.4709000000001637e-05, 1.5401999999997695e-05, 1.4722000000001734e-05, 1.5055999999999403e-05, 1.4723000000001207e-05, 1.4721999999998264e-05, 1.505499999999993e-05, 1.4721999999998264e-05, 1.4723000000001207e-05, 1.5055999999999403e-05, 1.53750000000015e-05, 1.50689999999995e-05, 1.4693999999999124e-05, 1.4736000000001304e-05, 1.5402000000001165e-05, 1.5416000000000735e-05, 1.4735999999997834e-05, 1.4722000000001734e-05, 1.4749999999997404e-05, 1.540300000000064e-05, 1.5055999999999403e-05, 1.5041999999999833e-05, 1.511099999999821e-05, 1.5402000000001165e-05, 1.50689999999995e-05, 1.505499999999993e-05, 1.4693999999999124e-05, 1.5402000000001165e-05, 1.4722999999997738e-05, 1.540299999999717e-05, 1.4723000000001207e-05, 1.4721999999998264e-05, 1.50689999999995e-05, 1.4707999999998694e-05, 1.538900000000107e-05, 1.541700000000021e-05, 1.4723000000001207e-05, 1.505499999999993e-05, 1.53750000000015e-05, 1.4722000000001734e-05, 1.50689999999995e-05, 1.4707999999998694e-05, 1.4708000000002164e-05, 1.53889999999976e-05, 1.540299999999717e-05, 1.4763999999996974e-05, 1.5387999999998125e-05, 1.4708000000002164e-05, 1.4722000000001734e-05]</msg>
<status status="PASS" starttime="20201029 18:17:02.037" endtime="20201029 18:17:02.040"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:02.033" endtime="20201029 18:17:02.041"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:02.044" endtime="20201029 18:17:02.064"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:02.043" endtime="20201029 18:17:02.064"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:02.042" endtime="20201029 18:17:02.065"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:01.685" endtime="20201029 18:17:02.065"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:01.685" endtime="20201029 18:17:02.065"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:02.074" endtime="20201029 18:17:02.087"></status>
</kw>
<msg timestamp="20201029 18:17:02.088" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:02.072" endtime="20201029 18:17:02.088"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:02.090" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:02.089" endtime="20201029 18:17:02.090"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:02.091" endtime="20201029 18:17:02.093"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:02.069" endtime="20201029 18:17:02.093"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:02.067" endtime="20201029 18:17:02.094"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:02.100" endtime="20201029 18:17:02.387"></status>
</kw>
<msg timestamp="20201029 18:17:02.390" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01964025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019656056, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:17:02.099" endtime="20201029 18:17:02.390"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:02.398" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01964025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019656056, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:17:02.391" endtime="20201029 18:17:02.399"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:02.400" endtime="20201029 18:17:02.401"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:02.096" endtime="20201029 18:17:02.402"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:02.094" endtime="20201029 18:17:02.402"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:02.406" level="INFO">${RESULT} = [{'diff': 1.5806000000000153e-05}, {'diff': 1.6472000000000014e-05}, {'diff': 1.5763999999997974e-05}, {'diff': 1.5722999999998738e-05}, {'diff': 1.6458000000000444e-05}, {'diff': 1.643100000000078e-0...</msg>
<status status="PASS" starttime="20201029 18:17:02.403" endtime="20201029 18:17:02.406"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:02.411" level="INFO">${ACCURACY} = {'diff': [1.5806000000000153e-05, 1.6472000000000014e-05, 1.5763999999997974e-05, 1.5722999999998738e-05, 1.6458000000000444e-05, 1.643100000000078e-05, 1.5778000000001013e-05, 1.6458000000000444e-05,...</msg>
<status status="PASS" starttime="20201029 18:17:02.407" endtime="20201029 18:17:02.411"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:02.416" level="INFO">NAME: accuracy-TIMER_SET-14-philip</msg>
<status status="PASS" starttime="20201029 18:17:02.415" endtime="20201029 18:17:02.416"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:02.418" level="INFO">VALUE: [1.5806000000000153e-05, 1.6472000000000014e-05, 1.5763999999997974e-05, 1.5722999999998738e-05, 1.6458000000000444e-05, 1.643100000000078e-05, 1.5778000000001013e-05, 1.6458000000000444e-05, 1.540300000000064e-05, 1.6458999999999918e-05, 1.609699999999964e-05, 1.608300000000007e-05, 1.609700000000311e-05, 1.5750000000001874e-05, 1.6444000000000875e-05, 1.6458000000000444e-05, 1.63889999999986e-05, 1.537499999999803e-05, 1.5763999999997974e-05, 1.6458000000000444e-05, 1.5750000000001874e-05, 1.609699999999964e-05, 1.6445000000000348e-05, 1.609699999999964e-05, 1.6499999999999154e-05, 1.5750000000001874e-05, 1.6042000000000833e-05, 1.5736000000002304e-05, 1.6097999999999113e-05, 1.53889999999976e-05, 1.608300000000007e-05, 1.609699999999964e-05, 1.6097999999999113e-05, 1.609699999999964e-05, 1.5749999999998404e-05, 1.5694000000000125e-05, 1.5387999999998125e-05, 1.609699999999964e-05, 1.612499999999878e-05, 1.5749999999998404e-05, 1.5750000000001874e-05, 1.6083999999999543e-05, 1.5430000000000305e-05, 1.5750000000001874e-05, 1.5721999999999264e-05, 1.5750000000001874e-05, 1.609699999999964e-05, 1.6097999999999113e-05, 1.540300000000064e-05, 1.6097999999999113e-05]</msg>
<status status="PASS" starttime="20201029 18:17:02.417" endtime="20201029 18:17:02.419"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:02.412" endtime="20201029 18:17:02.419"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:02.423" endtime="20201029 18:17:02.442"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:02.422" endtime="20201029 18:17:02.443"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:02.420" endtime="20201029 18:17:02.443"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:02.066" endtime="20201029 18:17:02.444"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:02.065" endtime="20201029 18:17:02.444"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:02.452" endtime="20201029 18:17:02.467"></status>
</kw>
<msg timestamp="20201029 18:17:02.467" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:02.451" endtime="20201029 18:17:02.468"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:02.470" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:02.468" endtime="20201029 18:17:02.470"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:02.471" endtime="20201029 18:17:02.473"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:02.448" endtime="20201029 18:17:02.473"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:02.446" endtime="20201029 18:17:02.474"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:02.480" endtime="20201029 18:17:02.767"></status>
</kw>
<msg timestamp="20201029 18:17:02.770" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019398611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01941575, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:17:02.478" endtime="20201029 18:17:02.770"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:02.778" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019398611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01941575, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:17:02.771" endtime="20201029 18:17:02.778"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:02.779" endtime="20201029 18:17:02.781"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:02.476" endtime="20201029 18:17:02.781"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:02.474" endtime="20201029 18:17:02.782"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:02.786" level="INFO">${RESULT} = [{'diff': 1.713899999999935e-05}, {'diff': 1.713899999999935e-05}, {'diff': 1.6778000000002014e-05}, {'diff': 1.677699999999907e-05}, {'diff': 1.679100000000211e-05}, {'diff': 1.6458000000000444e-05},...</msg>
<status status="PASS" starttime="20201029 18:17:02.783" endtime="20201029 18:17:02.786"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:02.790" level="INFO">${ACCURACY} = {'diff': [1.713899999999935e-05, 1.713899999999935e-05, 1.6778000000002014e-05, 1.677699999999907e-05, 1.679100000000211e-05, 1.6458000000000444e-05, 1.7151999999999445e-05, 1.716699999999849e-05, 1.7...</msg>
<status status="PASS" starttime="20201029 18:17:02.787" endtime="20201029 18:17:02.790"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:02.794" level="INFO">NAME: accuracy-TIMER_SET-15-philip</msg>
<status status="PASS" starttime="20201029 18:17:02.793" endtime="20201029 18:17:02.795"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:02.797" level="INFO">VALUE: [1.713899999999935e-05, 1.713899999999935e-05, 1.6778000000002014e-05, 1.677699999999907e-05, 1.679100000000211e-05, 1.6458000000000444e-05, 1.7151999999999445e-05, 1.716699999999849e-05, 1.7472000000001014e-05, 1.7500000000000154e-05, 1.6457999999996975e-05, 1.713899999999935e-05, 1.679099999999864e-05, 1.7098000000000113e-05, 1.711100000000021e-05, 1.6444000000000875e-05, 1.711100000000021e-05, 1.713899999999935e-05, 1.7513999999999724e-05, 1.677699999999907e-05, 1.6749999999999404e-05, 1.6792000000001583e-05, 1.6791999999998114e-05, 1.7459000000000918e-05, 1.680500000000168e-05, 1.679099999999864e-05, 1.7430000000002305e-05, 1.6778000000002014e-05, 1.677699999999907e-05, 1.713900000000282e-05, 1.679099999999864e-05, 1.6791999999998114e-05, 1.6791999999998114e-05, 1.679100000000211e-05, 1.6778000000002014e-05, 1.712499999999978e-05, 1.6764000000002444e-05, 1.713899999999935e-05, 1.6749999999999404e-05, 1.679100000000211e-05, 1.7486000000000584e-05, 1.6778000000002014e-05, 1.7500000000000154e-05, 1.712499999999978e-05, 1.643099999999731e-05, 1.712499999999978e-05, 1.686099999999996e-05, 1.7137999999999876e-05, 1.713899999999935e-05, 1.7513999999999724e-05]</msg>
<status status="PASS" starttime="20201029 18:17:02.796" endtime="20201029 18:17:02.798"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:02.791" endtime="20201029 18:17:02.798"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:02.802" endtime="20201029 18:17:02.821"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:02.800" endtime="20201029 18:17:02.822"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:02.799" endtime="20201029 18:17:02.822"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:02.445" endtime="20201029 18:17:02.822"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:02.444" endtime="20201029 18:17:02.823"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:02.831" endtime="20201029 18:17:02.848"></status>
</kw>
<msg timestamp="20201029 18:17:02.848" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:02.830" endtime="20201029 18:17:02.848"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:02.851" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:02.849" endtime="20201029 18:17:02.851"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:02.852" endtime="20201029 18:17:02.853"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:02.827" endtime="20201029 18:17:02.854"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:02.825" endtime="20201029 18:17:02.854"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:02.860" endtime="20201029 18:17:03.146"></status>
</kw>
<msg timestamp="20201029 18:17:03.149" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020875903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020893708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:02.859" endtime="20201029 18:17:03.149"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:03.157" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020875903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020893708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:03.150" endtime="20201029 18:17:03.158"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:03.158" endtime="20201029 18:17:03.160"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:02.856" endtime="20201029 18:17:03.160"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:02.855" endtime="20201029 18:17:03.161"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:03.165" level="INFO">${RESULT} = [{'diff': 1.780499999999921e-05}, {'diff': 1.811100000000121e-05}, {'diff': 1.812500000000078e-05}, {'diff': 1.8166000000000015e-05}, {'diff': 1.81950000000021e-05}, {'diff': 1.7471999999997545e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:17:03.162" endtime="20201029 18:17:03.165"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:03.169" level="INFO">${ACCURACY} = {'diff': [1.780499999999921e-05, 1.811100000000121e-05, 1.812500000000078e-05, 1.8166000000000015e-05, 1.81950000000021e-05, 1.7471999999997545e-05, 1.781900000000225e-05, 1.8152000000000446e-05, 1.78...</msg>
<status status="PASS" starttime="20201029 18:17:03.166" endtime="20201029 18:17:03.169"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:03.173" level="INFO">NAME: accuracy-TIMER_SET-16-philip</msg>
<status status="PASS" starttime="20201029 18:17:03.172" endtime="20201029 18:17:03.174"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:03.176" level="INFO">VALUE: [1.780499999999921e-05, 1.811100000000121e-05, 1.812500000000078e-05, 1.8166000000000015e-05, 1.81950000000021e-05, 1.7471999999997545e-05, 1.781900000000225e-05, 1.8152000000000446e-05, 1.783299999999835e-05, 1.7848000000000863e-05, 1.8207999999998725e-05, 1.815299999999992e-05, 1.7485999999997115e-05, 1.8514000000000724e-05, 1.818099999999906e-05, 1.780499999999921e-05, 1.81950000000021e-05, 1.816699999999949e-05, 1.8166000000000015e-05, 1.7820000000001723e-05, 1.787500000000053e-05, 1.8514000000000724e-05, 1.8166000000000015e-05, 1.8513999999997255e-05, 1.816699999999949e-05, 1.8166000000000015e-05, 1.7415999999999265e-05, 1.779099999999964e-05, 1.8499999999997685e-05, 1.8528000000000294e-05, 1.7833999999997824e-05, 1.816700000000296e-05, 1.7541999999998864e-05, 1.816699999999949e-05, 1.7819999999998254e-05, 1.815299999999992e-05, 1.8193999999999155e-05, 1.7736000000000834e-05, 1.8514000000000724e-05, 1.7485999999997115e-05, 1.784699999999792e-05, 1.815299999999992e-05, 1.8514000000000724e-05, 1.8514000000000724e-05, 1.7500000000000154e-05, 1.7806000000002153e-05, 1.783299999999835e-05, 1.781899999999878e-05, 1.783300000000182e-05, 1.755499999999896e-05]</msg>
<status status="PASS" starttime="20201029 18:17:03.174" endtime="20201029 18:17:03.177"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:03.170" endtime="20201029 18:17:03.178"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:03.182" endtime="20201029 18:17:03.201"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:03.180" endtime="20201029 18:17:03.202"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:03.179" endtime="20201029 18:17:03.202"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:02.824" endtime="20201029 18:17:03.202"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:02.823" endtime="20201029 18:17:03.202"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:03.211" endtime="20201029 18:17:03.225"></status>
</kw>
<msg timestamp="20201029 18:17:03.226" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:03.209" endtime="20201029 18:17:03.226"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:03.228" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:03.227" endtime="20201029 18:17:03.229"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:03.229" endtime="20201029 18:17:03.231"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:03.207" endtime="20201029 18:17:03.232"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:03.205" endtime="20201029 18:17:03.232"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:03.238" endtime="20201029 18:17:03.525"></status>
</kw>
<msg timestamp="20201029 18:17:03.528" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019380056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019398917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:03.237" endtime="20201029 18:17:03.528"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:03.536" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019380056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019398917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:03.529" endtime="20201029 18:17:03.536"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:03.537" endtime="20201029 18:17:03.539"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:03.234" endtime="20201029 18:17:03.539"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:03.233" endtime="20201029 18:17:03.540"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:03.544" level="INFO">${RESULT} = [{'diff': 1.886100000000196e-05}, {'diff': 1.9486000000002585e-05}, {'diff': 1.95830000000001e-05}, {'diff': 1.92089999999992e-05}, {'diff': 1.9556000000000434e-05}, {'diff': 1.9207999999999725e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:17:03.540" endtime="20201029 18:17:03.544"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:03.549" level="INFO">${ACCURACY} = {'diff': [1.886100000000196e-05, 1.9486000000002585e-05, 1.95830000000001e-05, 1.92089999999992e-05, 1.9556000000000434e-05, 1.9207999999999725e-05, 1.8514000000000724e-05, 1.891700000000024e-05, 1.88...</msg>
<status status="PASS" starttime="20201029 18:17:03.545" endtime="20201029 18:17:03.549"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:03.553" level="INFO">NAME: accuracy-TIMER_SET-17-philip</msg>
<status status="PASS" starttime="20201029 18:17:03.552" endtime="20201029 18:17:03.554"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:03.556" level="INFO">VALUE: [1.886100000000196e-05, 1.9486000000002585e-05, 1.95830000000001e-05, 1.92089999999992e-05, 1.9556000000000434e-05, 1.9207999999999725e-05, 1.8514000000000724e-05, 1.891700000000024e-05, 1.886099999999849e-05, 1.887499999999806e-05, 1.8513999999997255e-05, 1.9207999999999725e-05, 1.8513999999997255e-05, 1.8847999999998394e-05, 1.886100000000196e-05, 1.8513999999997255e-05, 1.883299999999935e-05, 1.95830000000001e-05, 1.9541999999997395e-05, 1.883299999999935e-05, 1.884699999999892e-05, 1.879100000000064e-05, 1.886099999999849e-05, 1.887500000000153e-05, 1.886099999999849e-05, 1.919499999999963e-05, 1.883300000000282e-05, 1.884700000000239e-05, 1.8862000000001433e-05, 1.9223000000002238e-05, 1.886099999999849e-05, 1.9278000000001044e-05, 1.919499999999963e-05, 1.9207999999999725e-05, 1.887500000000153e-05, 1.887499999999806e-05, 1.955500000000096e-05, 1.8514000000000724e-05, 1.9221999999999295e-05, 1.8528000000000294e-05, 1.8555999999999434e-05, 1.9222000000002765e-05, 1.9152000000001446e-05, 1.893099999999981e-05, 1.9221999999999295e-05, 1.916700000000049e-05, 1.8500000000001154e-05, 1.884699999999892e-05, 1.9207999999999725e-05, 1.886099999999849e-05]</msg>
<status status="PASS" starttime="20201029 18:17:03.554" endtime="20201029 18:17:03.585"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:03.550" endtime="20201029 18:17:03.586"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:03.589" endtime="20201029 18:17:03.609"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:03.588" endtime="20201029 18:17:03.609"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:03.587" endtime="20201029 18:17:03.610"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:03.203" endtime="20201029 18:17:03.610"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:03.203" endtime="20201029 18:17:03.610"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:03.619" endtime="20201029 18:17:03.635"></status>
</kw>
<msg timestamp="20201029 18:17:03.635" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:03.617" endtime="20201029 18:17:03.635"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:03.637" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:03.636" endtime="20201029 18:17:03.638"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:03.638" endtime="20201029 18:17:03.640"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:03.615" endtime="20201029 18:17:03.641"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:03.613" endtime="20201029 18:17:03.641"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:03.647" endtime="20201029 18:17:03.935"></status>
</kw>
<msg timestamp="20201029 18:17:03.938" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020280819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020301, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:17:03.646" endtime="20201029 18:17:03.938"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:03.946" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020280819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020301, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:17:03.939" endtime="20201029 18:17:03.947"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:03.948" endtime="20201029 18:17:03.949"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:03.643" endtime="20201029 18:17:03.950"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:03.642" endtime="20201029 18:17:03.950"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:03.954" level="INFO">${RESULT} = [{'diff': 2.018100000000106e-05}, {'diff': 1.9527999999997825e-05}, {'diff': 2.0237000000002808e-05}, {'diff': 2.0235999999999865e-05}, {'diff': 2.055500000000196e-05}, {'diff': 1.9542000000000864e-05...</msg>
<status status="PASS" starttime="20201029 18:17:03.951" endtime="20201029 18:17:03.955"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:03.958" level="INFO">${ACCURACY} = {'diff': [2.018100000000106e-05, 1.9527999999997825e-05, 2.0237000000002808e-05, 2.0235999999999865e-05, 2.055500000000196e-05, 1.9542000000000864e-05, 2.0235999999999865e-05, 2.0513999999999255e-05, ...</msg>
<status status="PASS" starttime="20201029 18:17:03.955" endtime="20201029 18:17:03.959"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:03.963" level="INFO">NAME: accuracy-TIMER_SET-18-philip</msg>
<status status="PASS" starttime="20201029 18:17:03.962" endtime="20201029 18:17:03.963"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:03.965" level="INFO">VALUE: [2.018100000000106e-05, 1.9527999999997825e-05, 2.0237000000002808e-05, 2.0235999999999865e-05, 2.055500000000196e-05, 1.9542000000000864e-05, 2.0235999999999865e-05, 2.0513999999999255e-05, 2.0249999999999435e-05, 1.954100000000139e-05, 1.98890000000021e-05, 2.019500000000063e-05, 2.0583999999997105e-05, 2.0235999999999865e-05, 2.0235999999999865e-05, 1.9902000000002196e-05, 1.987499999999906e-05, 2.061100000000024e-05, 1.990300000000167e-05, 2.0249999999999435e-05, 1.952699999999835e-05, 2.051299999999978e-05, 1.99029999999982e-05, 2.0207999999997256e-05, 2.0249999999999435e-05, 1.984699999999992e-05, 2.05830000000011e-05, 2.0611999999999714e-05, 1.9513999999998255e-05, 1.955500000000096e-05, 2.0263999999999005e-05, 2.0235999999999865e-05, 2.062499999999981e-05, 1.9887999999999156e-05, 2.058299999999763e-05, 2.0235999999999865e-05, 1.987499999999906e-05, 1.988899999999863e-05, 2.030499999999824e-05, 2.0249999999999435e-05, 2.0235999999999865e-05, 2.016699999999802e-05, 2.05830000000011e-05, 2.0598000000000144e-05, 1.990300000000167e-05, 2.0235999999999865e-05, 1.98890000000021e-05, 2.0235999999999865e-05, 1.9570000000000004e-05, 2.0208000000000725e-05]</msg>
<status status="PASS" starttime="20201029 18:17:03.964" endtime="20201029 18:17:03.966"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:03.959" endtime="20201029 18:17:03.967"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:03.970" endtime="20201029 18:17:03.990"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:03.969" endtime="20201029 18:17:03.990"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:03.968" endtime="20201029 18:17:03.991"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:03.611" endtime="20201029 18:17:03.991"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:03.610" endtime="20201029 18:17:03.991"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:04.000" endtime="20201029 18:17:04.019"></status>
</kw>
<msg timestamp="20201029 18:17:04.019" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:03.998" endtime="20201029 18:17:04.020"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:04.022" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:04.020" endtime="20201029 18:17:04.022"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:04.023" endtime="20201029 18:17:04.025"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:03.996" endtime="20201029 18:17:04.025"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:03.994" endtime="20201029 18:17:04.026"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:04.032" endtime="20201029 18:17:04.318"></status>
</kw>
<msg timestamp="20201029 18:17:04.321" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02333475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023355653, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:17:04.030" endtime="20201029 18:17:04.322"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:04.329" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02333475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023355653, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:17:04.322" endtime="20201029 18:17:04.330"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:04.331" endtime="20201029 18:17:04.332"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:04.028" endtime="20201029 18:17:04.333"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:04.026" endtime="20201029 18:17:04.333"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:04.337" level="INFO">${RESULT} = [{'diff': 2.09029999999992e-05}, {'diff': 2.161100000000124e-05}, {'diff': 2.1291999999999145e-05}, {'diff': 2.0569999999997535e-05}, {'diff': 2.1277999999999575e-05}, {'diff': 2.1277999999999575e-05}...</msg>
<status status="PASS" starttime="20201029 18:17:04.334" endtime="20201029 18:17:04.337"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:04.341" level="INFO">${ACCURACY} = {'diff': [2.09029999999992e-05, 2.161100000000124e-05, 2.1291999999999145e-05, 2.0569999999997535e-05, 2.1277999999999575e-05, 2.1277999999999575e-05, 2.058299999999763e-05, 2.0929999999998866e-05, 2....</msg>
<status status="PASS" starttime="20201029 18:17:04.338" endtime="20201029 18:17:04.341"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:04.346" level="INFO">NAME: accuracy-TIMER_SET-19-philip</msg>
<status status="PASS" starttime="20201029 18:17:04.345" endtime="20201029 18:17:04.346"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:04.348" level="INFO">VALUE: [2.09029999999992e-05, 2.161100000000124e-05, 2.1291999999999145e-05, 2.0569999999997535e-05, 2.1277999999999575e-05, 2.1277999999999575e-05, 2.058299999999763e-05, 2.0929999999998866e-05, 2.1277999999999575e-05, 2.1264000000000005e-05, 2.1250000000000435e-05, 2.1208000000001725e-05, 2.0584000000000574e-05, 2.0929999999998866e-05, 2.0943999999998436e-05, 2.093100000000181e-05, 2.059700000000067e-05, 2.090300000000267e-05, 2.059700000000067e-05, 2.0584000000000574e-05, 2.161100000000124e-05, 2.1277999999999575e-05, 2.1264000000000005e-05, 2.162500000000081e-05, 2.133299999999838e-05, 2.0929999999998866e-05, 2.1236000000000865e-05, 2.0569999999997535e-05, 2.0971999999997576e-05, 2.1250000000000435e-05, 2.0915999999999296e-05, 2.1250000000000435e-05, 2.162500000000081e-05, 2.12770000000001e-05, 2.1250000000000435e-05, 2.1277999999999575e-05, 2.094499999999791e-05, 2.091699999999877e-05, 2.05830000000011e-05, 2.0584000000000574e-05, 2.0929999999998866e-05, 2.1277999999999575e-05, 2.086100000000049e-05, 2.0972000000001045e-05, 2.1305999999998715e-05, 2.1250000000000435e-05, 2.05830000000011e-05, 2.1277999999999575e-05, 2.1277999999999575e-05, 2.05969999999972e-05]</msg>
<status status="PASS" starttime="20201029 18:17:04.347" endtime="20201029 18:17:04.350"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:04.342" endtime="20201029 18:17:04.350"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:04.354" endtime="20201029 18:17:04.373"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:04.352" endtime="20201029 18:17:04.374"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:04.351" endtime="20201029 18:17:04.374"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:03.992" endtime="20201029 18:17:04.375"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:03.991" endtime="20201029 18:17:04.375"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:04.383" endtime="20201029 18:17:04.398"></status>
</kw>
<msg timestamp="20201029 18:17:04.398" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:04.382" endtime="20201029 18:17:04.398"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:04.401" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:04.399" endtime="20201029 18:17:04.401"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:04.402" endtime="20201029 18:17:04.403"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:04.379" endtime="20201029 18:17:04.404"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:04.377" endtime="20201029 18:17:04.404"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:04.411" endtime="20201029 18:17:04.695"></status>
</kw>
<msg timestamp="20201029 18:17:04.698" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019938583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019960472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:04.409" endtime="20201029 18:17:04.698"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:04.706" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019938583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019960472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:04.699" endtime="20201029 18:17:04.706"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:04.707" endtime="20201029 18:17:04.709"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:04.407" endtime="20201029 18:17:04.709"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:04.405" endtime="20201029 18:17:04.710"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:04.714" level="INFO">${RESULT} = [{'diff': 2.188900000000063e-05}, {'diff': 2.1971999999998576e-05}, {'diff': 2.1971999999998576e-05}, {'diff': 2.230500000000024e-05}, {'diff': 2.2694000000000186e-05}, {'diff': 2.1971999999998576e-05...</msg>
<status status="PASS" starttime="20201029 18:17:04.710" endtime="20201029 18:17:04.714"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:04.719" level="INFO">${ACCURACY} = {'diff': [2.188900000000063e-05, 2.1971999999998576e-05, 2.1971999999998576e-05, 2.230500000000024e-05, 2.2694000000000186e-05, 2.1971999999998576e-05, 2.1957999999999006e-05, 2.2305999999999715e-05, ...</msg>
<status status="PASS" starttime="20201029 18:17:04.715" endtime="20201029 18:17:04.719"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:04.723" level="INFO">NAME: accuracy-TIMER_SET-20-philip</msg>
<status status="PASS" starttime="20201029 18:17:04.722" endtime="20201029 18:17:04.724"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:04.726" level="INFO">VALUE: [2.188900000000063e-05, 2.1971999999998576e-05, 2.1971999999998576e-05, 2.230500000000024e-05, 2.2694000000000186e-05, 2.1971999999998576e-05, 2.1957999999999006e-05, 2.2305999999999715e-05, 2.163900000000038e-05, 2.1957999999999006e-05, 2.162499999999734e-05, 2.169499999999866e-05, 2.2305999999999715e-05, 2.1957999999999006e-05, 2.161100000000124e-05, 2.2305999999999715e-05, 2.162500000000081e-05, 2.195899999999848e-05, 2.2014000000000755e-05, 2.230500000000024e-05, 2.1986000000001615e-05, 2.265299999999748e-05, 2.1985999999998146e-05, 2.1958000000002476e-05, 2.2000000000001185e-05, 2.1957999999999006e-05, 2.2000000000001185e-05, 2.2319999999999285e-05, 2.2276999999997632e-05, 2.197299999999805e-05, 2.195900000000195e-05, 2.1985999999998146e-05, 2.2291999999996676e-05, 2.162500000000081e-05, 2.1957999999999006e-05, 2.195900000000195e-05, 2.195899999999848e-05, 2.1986000000001615e-05, 2.1972000000002045e-05, 2.1985999999998146e-05, 2.195899999999848e-05, 2.231899999999981e-05, 2.2292000000000145e-05, 2.195899999999848e-05, 2.197299999999805e-05, 2.231899999999981e-05, 2.1971999999998576e-05, 2.230500000000024e-05, 2.158299999999863e-05, 2.233299999999938e-05]</msg>
<status status="PASS" starttime="20201029 18:17:04.724" endtime="20201029 18:17:04.726"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:04.720" endtime="20201029 18:17:04.727"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:04.730" endtime="20201029 18:17:04.750"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:04.729" endtime="20201029 18:17:04.751"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:04.728" endtime="20201029 18:17:04.751"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:04.376" endtime="20201029 18:17:04.751"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:04.375" endtime="20201029 18:17:04.751"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:04.760" endtime="20201029 18:17:04.777"></status>
</kw>
<msg timestamp="20201029 18:17:04.777" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:04.758" endtime="20201029 18:17:04.778"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:04.780" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:04.778" endtime="20201029 18:17:04.780"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:04.781" endtime="20201029 18:17:04.783"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:04.756" endtime="20201029 18:17:04.783"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:04.754" endtime="20201029 18:17:04.783"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:04.790" endtime="20201029 18:17:05.079"></status>
</kw>
<msg timestamp="20201029 18:17:05.082" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020378778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020402125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:04.788" endtime="20201029 18:17:05.082"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:05.090" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020378778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020402125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:05.083" endtime="20201029 18:17:05.091"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:05.091" endtime="20201029 18:17:05.093"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:04.786" endtime="20201029 18:17:05.094"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:04.784" endtime="20201029 18:17:05.094"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:05.098" level="INFO">${RESULT} = [{'diff': 2.334699999999995e-05}, {'diff': 2.2930000000000866e-05}, {'diff': 2.2611999999998245e-05}, {'diff': 2.266700000000052e-05}, {'diff': 2.2665999999997577e-05}, {'diff': 2.333300000000038e-05}...</msg>
<status status="PASS" starttime="20201029 18:17:05.095" endtime="20201029 18:17:05.098"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:05.102" level="INFO">${ACCURACY} = {'diff': [2.334699999999995e-05, 2.2930000000000866e-05, 2.2611999999998245e-05, 2.266700000000052e-05, 2.2665999999997577e-05, 2.333300000000038e-05, 2.25969999999992e-05, 2.297299999999905e-05, 2.27...</msg>
<status status="PASS" starttime="20201029 18:17:05.099" endtime="20201029 18:17:05.102"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:05.107" level="INFO">NAME: accuracy-TIMER_SET-21-philip</msg>
<status status="PASS" starttime="20201029 18:17:05.106" endtime="20201029 18:17:05.107"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:05.109" level="INFO">VALUE: [2.334699999999995e-05, 2.2930000000000866e-05, 2.2611999999998245e-05, 2.266700000000052e-05, 2.2665999999997577e-05, 2.333300000000038e-05, 2.25969999999992e-05, 2.297299999999905e-05, 2.270899999999923e-05, 2.3347999999999425e-05, 2.2999999999998716e-05, 2.3000000000002185e-05, 2.3014000000001755e-05, 2.3014000000001755e-05, 2.3013999999998286e-05, 2.334699999999995e-05, 2.3028000000001325e-05, 2.3028000000001325e-05, 2.3347999999999425e-05, 2.2611999999998245e-05, 2.334699999999995e-05, 2.3014000000001755e-05, 2.336099999999952e-05, 2.334699999999995e-05, 2.336099999999952e-05, 2.3013999999998286e-05, 2.266700000000052e-05, 2.3333999999999855e-05, 2.32770000000021e-05, 2.265299999999748e-05, 2.270899999999923e-05, 2.3000000000002185e-05, 2.266700000000052e-05, 2.2985999999999146e-05, 2.297299999999905e-05, 2.336099999999952e-05, 2.3361999999998995e-05, 2.266700000000052e-05, 2.2666000000001046e-05, 2.3000000000002185e-05, 2.265299999999748e-05, 2.331900000000081e-05, 2.334699999999995e-05, 2.334699999999995e-05, 2.3361999999998995e-05, 2.265300000000095e-05, 2.266700000000052e-05, 2.268100000000009e-05, 2.263900000000138e-05, 2.3013999999998286e-05]</msg>
<status status="PASS" starttime="20201029 18:17:05.108" endtime="20201029 18:17:05.110"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:05.103" endtime="20201029 18:17:05.110"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:05.114" endtime="20201029 18:17:05.134"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:05.112" endtime="20201029 18:17:05.134"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:05.111" endtime="20201029 18:17:05.135"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:04.752" endtime="20201029 18:17:05.135"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:04.752" endtime="20201029 18:17:05.136"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:05.145" endtime="20201029 18:17:05.162"></status>
</kw>
<msg timestamp="20201029 18:17:05.162" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:05.143" endtime="20201029 18:17:05.163"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:05.165" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:05.163" endtime="20201029 18:17:05.165"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:05.166" endtime="20201029 18:17:05.167"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:05.140" endtime="20201029 18:17:05.168"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:05.138" endtime="20201029 18:17:05.168"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:05.175" endtime="20201029 18:17:05.462"></status>
</kw>
<msg timestamp="20201029 18:17:05.465" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022421889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022445931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:05.173" endtime="20201029 18:17:05.465"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:05.473" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022421889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022445931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:05.466" endtime="20201029 18:17:05.473"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:05.474" endtime="20201029 18:17:05.476"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:05.171" endtime="20201029 18:17:05.476"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:05.169" endtime="20201029 18:17:05.477"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:05.481" level="INFO">${RESULT} = [{'diff': 2.4041999999998426e-05}, {'diff': 2.437500000000009e-05}, {'diff': 2.3693999999997717e-05}, {'diff': 2.438899999999966e-05}, {'diff': 2.441700000000227e-05}, {'diff': 2.369500000000066e-05},...</msg>
<status status="PASS" starttime="20201029 18:17:05.477" endtime="20201029 18:17:05.481"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:05.485" level="INFO">${ACCURACY} = {'diff': [2.4041999999998426e-05, 2.437500000000009e-05, 2.3693999999997717e-05, 2.438899999999966e-05, 2.441700000000227e-05, 2.369500000000066e-05, 2.4013999999999286e-05, 2.3707999999997287e-05, 2....</msg>
<status status="PASS" starttime="20201029 18:17:05.482" endtime="20201029 18:17:05.485"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:05.489" level="INFO">NAME: accuracy-TIMER_SET-22-philip</msg>
<status status="PASS" starttime="20201029 18:17:05.488" endtime="20201029 18:17:05.490"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:05.492" level="INFO">VALUE: [2.4041999999998426e-05, 2.437500000000009e-05, 2.3693999999997717e-05, 2.438899999999966e-05, 2.441700000000227e-05, 2.369500000000066e-05, 2.4013999999999286e-05, 2.3707999999997287e-05, 2.4027999999998856e-05, 2.405500000000199e-05, 2.369500000000066e-05, 2.438899999999966e-05, 2.3693999999997717e-05, 2.4027999999998856e-05, 2.408300000000113e-05, 2.437500000000009e-05, 2.4027999999998856e-05, 2.3694000000001186e-05, 2.4401999999999757e-05, 2.436100000000052e-05, 2.438899999999966e-05, 2.368100000000109e-05, 2.366699999999805e-05, 2.440299999999923e-05, 2.4054999999998522e-05, 2.438899999999966e-05, 2.4401999999999757e-05, 2.368100000000109e-05, 2.3999999999999716e-05, 2.3999999999999716e-05, 2.437499999999662e-05, 2.406900000000156e-05, 2.3679999999998147e-05, 2.3999999999999716e-05, 2.4084000000000605e-05, 2.3693999999997717e-05, 2.3693999999997717e-05, 2.3763999999999036e-05, 2.368099999999762e-05, 2.3680000000001616e-05, 2.4040999999998952e-05, 2.3693999999997717e-05, 2.438899999999966e-05, 2.4028000000002325e-05, 2.370900000000023e-05, 2.437500000000009e-05, 2.4027999999998856e-05, 2.3694000000001186e-05, 2.369499999999719e-05, 2.433300000000138e-05]</msg>
<status status="PASS" starttime="20201029 18:17:05.490" endtime="20201029 18:17:05.493"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:05.486" endtime="20201029 18:17:05.494"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:05.498" endtime="20201029 18:17:05.517"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:05.496" endtime="20201029 18:17:05.518"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:05.495" endtime="20201029 18:17:05.518"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:05.137" endtime="20201029 18:17:05.518"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:05.136" endtime="20201029 18:17:05.518"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:05.527" endtime="20201029 18:17:05.543"></status>
</kw>
<msg timestamp="20201029 18:17:05.544" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:05.525" endtime="20201029 18:17:05.544"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:05.546" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:05.545" endtime="20201029 18:17:05.546"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:05.547" endtime="20201029 18:17:05.549"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:05.523" endtime="20201029 18:17:05.549"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:05.521" endtime="20201029 18:17:05.550"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:05.556" endtime="20201029 18:17:05.841"></status>
</kw>
<msg timestamp="20201029 18:17:05.844" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020124403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0201495, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:17:05.555" endtime="20201029 18:17:05.844"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:05.852" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020124403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0201495, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:17:05.845" endtime="20201029 18:17:05.853"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:05.853" endtime="20201029 18:17:05.855"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:05.552" endtime="20201029 18:17:05.855"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:05.550" endtime="20201029 18:17:05.856"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:05.860" level="INFO">${RESULT} = [{'diff': 2.50970000000017e-05}, {'diff': 2.470899999999776e-05}, {'diff': 2.4722000000001326e-05}, {'diff': 2.5416000000000327e-05}, {'diff': 2.506900000000256e-05}, {'diff': 2.54169999999998e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:17:05.857" endtime="20201029 18:17:05.860"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:05.865" level="INFO">${ACCURACY} = {'diff': [2.50970000000017e-05, 2.470899999999776e-05, 2.4722000000001326e-05, 2.5416000000000327e-05, 2.506900000000256e-05, 2.54169999999998e-05, 2.438899999999966e-05, 2.5054999999999522e-05, 2.541...</msg>
<status status="PASS" starttime="20201029 18:17:05.861" endtime="20201029 18:17:05.865"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:05.869" level="INFO">NAME: accuracy-TIMER_SET-23-philip</msg>
<status status="PASS" starttime="20201029 18:17:05.868" endtime="20201029 18:17:05.870"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:05.872" level="INFO">VALUE: [2.50970000000017e-05, 2.470899999999776e-05, 2.4722000000001326e-05, 2.5416000000000327e-05, 2.506900000000256e-05, 2.54169999999998e-05, 2.438899999999966e-05, 2.5054999999999522e-05, 2.54169999999998e-05, 2.5082999999998662e-05, 2.5054999999999522e-05, 2.4722000000001326e-05, 2.4750000000000466e-05, 2.4707999999998287e-05, 2.54169999999998e-05, 2.4721999999997857e-05, 2.506900000000256e-05, 2.5069999999998566e-05, 2.5416000000000327e-05, 2.437500000000009e-05, 2.54169999999998e-05, 2.4735999999997427e-05, 2.537500000000109e-05, 2.5068999999999092e-05, 2.4736000000000896e-05, 2.5416000000000327e-05, 2.5084000000001605e-05, 2.506900000000256e-05, 2.4708000000001756e-05, 2.5069999999998566e-05, 2.5443999999999467e-05, 2.4763000000000562e-05, 2.5068999999999092e-05, 2.4707999999998287e-05, 2.5471999999998607e-05, 2.4722000000001326e-05, 2.5069999999998566e-05, 2.5068999999999092e-05, 2.4721999999997857e-05, 2.4736000000000896e-05, 2.5070000000002035e-05, 2.4722000000001326e-05, 2.472299999999733e-05, 2.5070000000002035e-05, 2.54169999999998e-05, 2.54169999999998e-05, 2.5068999999999092e-05, 2.5415999999996858e-05, 2.543100000000284e-05, 2.537500000000109e-05]</msg>
<status status="PASS" starttime="20201029 18:17:05.870" endtime="20201029 18:17:05.873"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:05.866" endtime="20201029 18:17:05.873"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:05.877" endtime="20201029 18:17:05.896"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:05.875" endtime="20201029 18:17:05.897"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:05.874" endtime="20201029 18:17:05.897"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:05.519" endtime="20201029 18:17:05.897"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:05.519" endtime="20201029 18:17:05.897"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:05.906" endtime="20201029 18:17:05.921"></status>
</kw>
<msg timestamp="20201029 18:17:05.921" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:05.905" endtime="20201029 18:17:05.922"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:05.924" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:05.923" endtime="20201029 18:17:05.924"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:05.925" endtime="20201029 18:17:05.926"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:05.902" endtime="20201029 18:17:05.927"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:05.900" endtime="20201029 18:17:05.927"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:05.934" endtime="20201029 18:17:06.221"></status>
</kw>
<msg timestamp="20201029 18:17:06.225" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019437264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019463361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:05.932" endtime="20201029 18:17:06.225"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:06.233" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019437264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019463361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:06.226" endtime="20201029 18:17:06.233"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:06.234" endtime="20201029 18:17:06.235"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:05.930" endtime="20201029 18:17:06.236"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:05.928" endtime="20201029 18:17:06.236"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:06.240" level="INFO">${RESULT} = [{'diff': 2.6096999999999232e-05}, {'diff': 2.6096999999999232e-05}, {'diff': 2.643100000000037e-05}, {'diff': 2.5763999999997567e-05}, {'diff': 2.6471999999999607e-05}, {'diff': 2.5763999999997567e-0...</msg>
<status status="PASS" starttime="20201029 18:17:06.237" endtime="20201029 18:17:06.240"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:06.244" level="INFO">${ACCURACY} = {'diff': [2.6096999999999232e-05, 2.6096999999999232e-05, 2.643100000000037e-05, 2.5763999999997567e-05, 2.6471999999999607e-05, 2.5763999999997567e-05, 2.54169999999998e-05, 2.6110999999998802e-05, 2...</msg>
<status status="PASS" starttime="20201029 18:17:06.241" endtime="20201029 18:17:06.245"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:06.249" level="INFO">NAME: accuracy-TIMER_SET-24-philip</msg>
<status status="PASS" starttime="20201029 18:17:06.248" endtime="20201029 18:17:06.249"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:06.251" level="INFO">VALUE: [2.6096999999999232e-05, 2.6096999999999232e-05, 2.643100000000037e-05, 2.5763999999997567e-05, 2.6471999999999607e-05, 2.5763999999997567e-05, 2.54169999999998e-05, 2.6110999999998802e-05, 2.6471999999999607e-05, 2.612500000000184e-05, 2.644499999999994e-05, 2.611100000000227e-05, 2.6152000000001507e-05, 2.5778000000000606e-05, 2.543099999999937e-05, 2.54169999999998e-05, 2.5764000000001036e-05, 2.5764000000001036e-05, 2.615299999999751e-05, 2.6429999999997428e-05, 2.6097999999998706e-05, 2.5749999999997997e-05, 2.5819999999999316e-05, 2.5416000000000327e-05, 2.647299999999908e-05, 2.5764000000001036e-05, 2.5778000000000606e-05, 2.5777999999997137e-05, 2.5762999999998093e-05, 2.5764000000001036e-05, 2.645899999999951e-05, 2.6096999999999232e-05, 2.6124999999998372e-05, 2.5764000000001036e-05, 2.5763000000001562e-05, 2.6513999999998317e-05, 2.6430000000000897e-05, 2.5764000000001036e-05, 2.6097999999998706e-05, 2.5764000000001036e-05, 2.612500000000184e-05, 2.6485999999999177e-05, 2.6111999999998275e-05, 2.5819999999999316e-05, 2.543100000000284e-05, 2.6458000000000037e-05, 2.54169999999998e-05, 2.645899999999951e-05, 2.611100000000227e-05, 2.5832999999999412e-05]</msg>
<status status="PASS" starttime="20201029 18:17:06.250" endtime="20201029 18:17:06.252"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:06.245" endtime="20201029 18:17:06.253"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:06.256" endtime="20201029 18:17:06.276"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:06.255" endtime="20201029 18:17:06.276"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:06.254" endtime="20201029 18:17:06.277"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:05.898" endtime="20201029 18:17:06.277"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:05.898" endtime="20201029 18:17:06.277"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:06.286" endtime="20201029 18:17:06.302"></status>
</kw>
<msg timestamp="20201029 18:17:06.302" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:06.284" endtime="20201029 18:17:06.302"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:06.305" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:06.303" endtime="20201029 18:17:06.305"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:06.306" endtime="20201029 18:17:06.307"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:06.282" endtime="20201029 18:17:06.308"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:06.279" endtime="20201029 18:17:06.308"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:06.315" endtime="20201029 18:17:06.601"></status>
</kw>
<msg timestamp="20201029 18:17:06.604" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020420125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020447264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:06.313" endtime="20201029 18:17:06.605"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:06.612" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020420125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020447264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:06.605" endtime="20201029 18:17:06.613"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:06.614" endtime="20201029 18:17:06.615"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:06.310" endtime="20201029 18:17:06.616"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:06.309" endtime="20201029 18:17:06.616"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:06.620" level="INFO">${RESULT} = [{'diff': 2.7138999999998942e-05}, {'diff': 2.7097000000000232e-05}, {'diff': 2.6444000000000467e-05}, {'diff': 2.7526999999999413e-05}, {'diff': 2.7471999999997138e-05}, {'diff': 2.645899999999951e-0...</msg>
<status status="PASS" starttime="20201029 18:17:06.617" endtime="20201029 18:17:06.620"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:06.624" level="INFO">${ACCURACY} = {'diff': [2.7138999999998942e-05, 2.7097000000000232e-05, 2.6444000000000467e-05, 2.7526999999999413e-05, 2.7471999999997138e-05, 2.645899999999951e-05, 2.7097000000000232e-05, 2.7124999999999372e-05,...</msg>
<status status="PASS" starttime="20201029 18:17:06.621" endtime="20201029 18:17:06.625"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:06.629" level="INFO">NAME: accuracy-TIMER_SET-25-philip</msg>
<status status="PASS" starttime="20201029 18:17:06.628" endtime="20201029 18:17:06.629"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:06.631" level="INFO">VALUE: [2.7138999999998942e-05, 2.7097000000000232e-05, 2.6444000000000467e-05, 2.7526999999999413e-05, 2.7471999999997138e-05, 2.645899999999951e-05, 2.7097000000000232e-05, 2.7124999999999372e-05, 2.7124999999999372e-05, 2.6791999999997707e-05, 2.6792000000001176e-05, 2.748699999999965e-05, 2.6458000000000037e-05, 2.6458000000000037e-05, 2.6444000000000467e-05, 2.7166000000002077e-05, 2.716700000000155e-05, 2.7486000000000177e-05, 2.644499999999994e-05, 2.7138999999998942e-05, 2.6819000000000842e-05, 2.6805000000001272e-05, 2.7137999999999468e-05, 2.6792000000001176e-05, 2.6444000000000467e-05, 2.6806000000000746e-05, 2.645900000000298e-05, 2.7208000000000787e-05, 2.713900000000241e-05, 2.6791000000001702e-05, 2.6485999999999177e-05, 2.713900000000241e-05, 2.6819000000000842e-05, 2.644499999999994e-05, 2.6792000000001176e-05, 2.6485999999999177e-05, 2.7138999999998942e-05, 2.6833999999999886e-05, 2.7486000000000177e-05, 2.6791000000001702e-05, 2.6792000000001176e-05, 2.6514000000001786e-05, 2.715300000000198e-05, 2.7138999999998942e-05, 2.6444000000000467e-05, 2.716700000000155e-05, 2.6790999999998233e-05, 2.6791999999997707e-05, 2.7138999999998942e-05, 2.6805999999997276e-05]</msg>
<status status="PASS" starttime="20201029 18:17:06.630" endtime="20201029 18:17:06.633"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:06.625" endtime="20201029 18:17:06.633"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:06.637" endtime="20201029 18:17:06.656"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:06.635" endtime="20201029 18:17:06.657"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:06.634" endtime="20201029 18:17:06.657"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:06.278" endtime="20201029 18:17:06.658"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:06.277" endtime="20201029 18:17:06.658"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:06.666" endtime="20201029 18:17:06.682"></status>
</kw>
<msg timestamp="20201029 18:17:06.683" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:06.665" endtime="20201029 18:17:06.683"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:06.685" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:06.684" endtime="20201029 18:17:06.686"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:06.686" endtime="20201029 18:17:06.688"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:06.662" endtime="20201029 18:17:06.688"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:06.660" endtime="20201029 18:17:06.689"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:06.695" endtime="20201029 18:17:06.982"></status>
</kw>
<msg timestamp="20201029 18:17:06.985" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020221153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020249, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:17:06.694" endtime="20201029 18:17:06.986"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:06.994" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020221153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020249, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:17:06.987" endtime="20201029 18:17:06.994"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:06.995" endtime="20201029 18:17:06.997"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:06.691" endtime="20201029 18:17:06.997"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:06.689" endtime="20201029 18:17:06.998"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:07.002" level="INFO">${RESULT} = [{'diff': 2.7847000000000982e-05}, {'diff': 2.818099999999865e-05}, {'diff': 2.7847000000000982e-05}, {'diff': 2.818099999999865e-05}, {'diff': 2.7486000000000177e-05}, {'diff': 2.8179999999999178e-05...</msg>
<status status="PASS" starttime="20201029 18:17:06.998" endtime="20201029 18:17:07.002"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:07.007" level="INFO">${ACCURACY} = {'diff': [2.7847000000000982e-05, 2.818099999999865e-05, 2.7847000000000982e-05, 2.818099999999865e-05, 2.7486000000000177e-05, 2.8179999999999178e-05, 2.7861000000000552e-05, 2.8568999999999123e-05, ...</msg>
<status status="PASS" starttime="20201029 18:17:07.003" endtime="20201029 18:17:07.007"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:07.011" level="INFO">NAME: accuracy-TIMER_SET-26-philip</msg>
<status status="PASS" starttime="20201029 18:17:07.010" endtime="20201029 18:17:07.011"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:07.014" level="INFO">VALUE: [2.7847000000000982e-05, 2.818099999999865e-05, 2.7847000000000982e-05, 2.818099999999865e-05, 2.7486000000000177e-05, 2.8179999999999178e-05, 2.7861000000000552e-05, 2.8568999999999123e-05, 2.818099999999865e-05, 2.8222000000001357e-05, 2.8165999999999608e-05, 2.8527999999999887e-05, 2.7818999999998373e-05, 2.74309999999979e-05, 2.818100000000212e-05, 2.7834000000000886e-05, 2.7486000000000177e-05, 2.7790999999999233e-05, 2.8194000000002217e-05, 2.744500000000094e-05, 2.8138999999999942e-05, 2.818099999999865e-05, 2.7833000000001412e-05, 2.7847000000000982e-05, 2.7848000000000456e-05, 2.7846999999997513e-05, 2.8582999999998693e-05, 2.819500000000169e-05, 2.8152999999999512e-05, 2.8527000000000413e-05, 2.7806000000001746e-05, 2.7847000000000982e-05, 2.8179999999999178e-05, 2.8179999999999178e-05, 2.8527999999999887e-05, 2.7875000000000122e-05, 2.816699999999908e-05, 2.8111000000000802e-05, 2.8527999999999887e-05, 2.7833999999997416e-05, 2.8179999999999178e-05, 2.8527999999999887e-05, 2.8514000000000317e-05, 2.748699999999965e-05, 2.7514000000002786e-05, 2.8514000000000317e-05, 2.7847000000000982e-05, 2.8180000000002647e-05, 2.818099999999865e-05, 2.7499999999999747e-05]</msg>
<status status="PASS" starttime="20201029 18:17:07.012" endtime="20201029 18:17:07.014"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:07.008" endtime="20201029 18:17:07.015"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:07.018" endtime="20201029 18:17:07.038"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:07.017" endtime="20201029 18:17:07.039"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:07.016" endtime="20201029 18:17:07.039"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:06.659" endtime="20201029 18:17:07.039"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:06.658" endtime="20201029 18:17:07.039"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:07.048" endtime="20201029 18:17:07.063"></status>
</kw>
<msg timestamp="20201029 18:17:07.064" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:07.046" endtime="20201029 18:17:07.064"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:07.066" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:07.065" endtime="20201029 18:17:07.066"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:07.067" endtime="20201029 18:17:07.069"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:07.044" endtime="20201029 18:17:07.069"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:07.042" endtime="20201029 18:17:07.070"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:07.076" endtime="20201029 18:17:07.363"></status>
</kw>
<msg timestamp="20201029 18:17:07.366" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019429833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019459042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:07.074" endtime="20201029 18:17:07.367"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:07.374" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019429833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019459042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:07.367" endtime="20201029 18:17:07.375"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:07.376" endtime="20201029 18:17:07.377"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:07.072" endtime="20201029 18:17:07.378"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:07.070" endtime="20201029 18:17:07.378"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:07.382" level="INFO">${RESULT} = [{'diff': 2.920899999999879e-05}, {'diff': 2.9221999999998888e-05}, {'diff': 2.920900000000226e-05}, {'diff': 2.8875000000001122e-05}, {'diff': 2.8861000000001552e-05}, {'diff': 2.9207999999999318e-05...</msg>
<status status="PASS" starttime="20201029 18:17:07.379" endtime="20201029 18:17:07.382"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:07.386" level="INFO">${ACCURACY} = {'diff': [2.920899999999879e-05, 2.9221999999998888e-05, 2.920900000000226e-05, 2.8875000000001122e-05, 2.8861000000001552e-05, 2.9207999999999318e-05, 2.8875000000001122e-05, 2.922300000000183e-05, 2...</msg>
<status status="PASS" starttime="20201029 18:17:07.383" endtime="20201029 18:17:07.387"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:07.391" level="INFO">NAME: accuracy-TIMER_SET-27-philip</msg>
<status status="PASS" starttime="20201029 18:17:07.390" endtime="20201029 18:17:07.391"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:07.393" level="INFO">VALUE: [2.920899999999879e-05, 2.9221999999998888e-05, 2.920900000000226e-05, 2.8875000000001122e-05, 2.8861000000001552e-05, 2.9207999999999318e-05, 2.8875000000001122e-05, 2.922300000000183e-05, 2.8875000000001122e-05, 2.8860999999998083e-05, 2.9556000000000027e-05, 2.8860999999998083e-05, 2.923699999999793e-05, 2.8875000000001122e-05, 2.920900000000226e-05, 2.9207999999999318e-05, 2.9153000000000512e-05, 2.8527999999999887e-05, 2.92370000000014e-05, 2.8541999999999457e-05, 2.8875000000001122e-05, 2.8513000000000843e-05, 2.9235999999998458e-05, 2.919499999999922e-05, 2.8527999999999887e-05, 2.8540999999999983e-05, 2.8806000000002746e-05, 2.9222000000002357e-05, 2.9222000000002357e-05, 2.9221999999998888e-05, 2.9221999999998888e-05, 2.9235999999998458e-05, 2.8889000000000692e-05, 2.9221999999998888e-05, 2.920900000000226e-05, 2.8916999999999832e-05, 2.8875000000001122e-05, 2.8875000000001122e-05, 2.8875000000001122e-05, 2.8527999999999887e-05, 2.9221999999998888e-05, 2.919499999999922e-05, 2.920899999999879e-05, 2.9222000000002357e-05, 2.8514000000000317e-05, 2.8875000000001122e-05, 2.8875000000001122e-05, 2.920900000000226e-05, 2.8860999999998083e-05, 2.9540999999997514e-05]</msg>
<status status="PASS" starttime="20201029 18:17:07.392" endtime="20201029 18:17:07.394"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:07.387" endtime="20201029 18:17:07.395"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:07.398" endtime="20201029 18:17:07.418"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:07.397" endtime="20201029 18:17:07.418"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:07.396" endtime="20201029 18:17:07.419"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:07.040" endtime="20201029 18:17:07.419"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:07.040" endtime="20201029 18:17:07.419"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:07.428" endtime="20201029 18:17:07.447"></status>
</kw>
<msg timestamp="20201029 18:17:07.447" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:07.426" endtime="20201029 18:17:07.448"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:07.450" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:07.448" endtime="20201029 18:17:07.450"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:07.451" endtime="20201029 18:17:07.453"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:07.424" endtime="20201029 18:17:07.453"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:07.421" endtime="20201029 18:17:07.454"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:07.460" endtime="20201029 18:17:07.746"></status>
</kw>
<msg timestamp="20201029 18:17:07.749" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023024431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023054, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:17:07.458" endtime="20201029 18:17:07.749"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:07.757" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023024431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023054, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:17:07.750" endtime="20201029 18:17:07.758"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:07.759" endtime="20201029 18:17:07.760"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:07.456" endtime="20201029 18:17:07.761"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:07.454" endtime="20201029 18:17:07.761"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:07.765" level="INFO">${RESULT} = [{'diff': 2.9569000000000123e-05}, {'diff': 2.9917000000000832e-05}, {'diff': 3.0249999999999028e-05}, {'diff': 2.9556000000000027e-05}, {'diff': 3.058300000000069e-05}, {'diff': 2.9931000000000402e-0...</msg>
<status status="PASS" starttime="20201029 18:17:07.762" endtime="20201029 18:17:07.765"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:07.769" level="INFO">${ACCURACY} = {'diff': [2.9569000000000123e-05, 2.9917000000000832e-05, 3.0249999999999028e-05, 2.9556000000000027e-05, 3.058300000000069e-05, 2.9931000000000402e-05, 3.0263999999998598e-05, 3.0249999999999028e-05,...</msg>
<status status="PASS" starttime="20201029 18:17:07.766" endtime="20201029 18:17:07.769"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:07.774" level="INFO">NAME: accuracy-TIMER_SET-28-philip</msg>
<status status="PASS" starttime="20201029 18:17:07.773" endtime="20201029 18:17:07.774"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:07.776" level="INFO">VALUE: [2.9569000000000123e-05, 2.9917000000000832e-05, 3.0249999999999028e-05, 2.9556000000000027e-05, 3.058300000000069e-05, 2.9931000000000402e-05, 3.0263999999998598e-05, 3.0249999999999028e-05, 3.054199999999799e-05, 3.0249999999999028e-05, 3.0264000000002067e-05, 3.0250000000002497e-05, 2.9569000000000123e-05, 3.0263999999998598e-05, 2.9903000000001262e-05, 2.9917000000000832e-05, 3.0221999999999888e-05, 3.06110000000033e-05, 2.991599999999789e-05, 2.9917000000000832e-05, 2.9624999999998403e-05, 2.9903000000001262e-05, 3.0263999999998598e-05, 2.9569999999999597e-05, 3.0250000000002497e-05, 2.991599999999789e-05, 3.0597999999999737e-05, 2.9889000000001692e-05, 3.0263999999998598e-05, 2.9874999999998653e-05, 2.9556000000000027e-05, 2.9555000000000553e-05, 3.0250000000002497e-05, 3.0263999999998598e-05, 2.9917000000000832e-05, 2.9569999999999597e-05, 2.9889000000001692e-05, 2.9903000000001262e-05, 3.061099999999983e-05, 3.0249999999999028e-05, 2.9903000000001262e-05, 2.9569000000000123e-05, 3.0221999999999888e-05, 2.9903000000001262e-05, 3.0236000000002927e-05, 2.990199999999832e-05, 2.9569999999999597e-05, 2.994399999999703e-05, 2.9569000000000123e-05, 2.9554999999997084e-05]</msg>
<status status="PASS" starttime="20201029 18:17:07.775" endtime="20201029 18:17:07.778"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:07.770" endtime="20201029 18:17:07.778"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:07.782" endtime="20201029 18:17:07.801"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:07.780" endtime="20201029 18:17:07.802"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:07.779" endtime="20201029 18:17:07.802"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:07.420" endtime="20201029 18:17:07.802"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:07.419" endtime="20201029 18:17:07.803"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:07.811" endtime="20201029 18:17:07.826"></status>
</kw>
<msg timestamp="20201029 18:17:07.826" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:07.810" endtime="20201029 18:17:07.826"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:07.828" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:07.827" endtime="20201029 18:17:07.829"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:07.829" endtime="20201029 18:17:07.831"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:07.807" endtime="20201029 18:17:07.832"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:07.805" endtime="20201029 18:17:07.832"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:07.838" endtime="20201029 18:17:08.124"></status>
</kw>
<msg timestamp="20201029 18:17:08.127" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019461569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019493194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:07.837" endtime="20201029 18:17:08.127"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:08.135" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019461569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019493194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:08.128" endtime="20201029 18:17:08.136"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:08.136" endtime="20201029 18:17:08.139"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:07.834" endtime="20201029 18:17:08.139"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:07.833" endtime="20201029 18:17:08.140"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:08.145" level="INFO">${RESULT} = [{'diff': 3.162499999999693e-05}, {'diff': 3.095900000000054e-05}, {'diff': 3.09440000000015e-05}, {'diff': 3.052799999999842e-05}, {'diff': 3.095800000000107e-05}, {'diff': 3.0597999999999737e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:17:08.141" endtime="20201029 18:17:08.145"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:08.150" level="INFO">${ACCURACY} = {'diff': [3.162499999999693e-05, 3.095900000000054e-05, 3.09440000000015e-05, 3.052799999999842e-05, 3.095800000000107e-05, 3.0597999999999737e-05, 3.130600000000178e-05, 3.129199999999874e-05, 3.1292...</msg>
<status status="PASS" starttime="20201029 18:17:08.146" endtime="20201029 18:17:08.150"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:08.154" level="INFO">NAME: accuracy-TIMER_SET-29-philip</msg>
<status status="PASS" starttime="20201029 18:17:08.153" endtime="20201029 18:17:08.155"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:08.157" level="INFO">VALUE: [3.162499999999693e-05, 3.095900000000054e-05, 3.09440000000015e-05, 3.052799999999842e-05, 3.095800000000107e-05, 3.0597999999999737e-05, 3.130600000000178e-05, 3.129199999999874e-05, 3.129200000000221e-05, 3.1582999999998224e-05, 3.059700000000026e-05, 3.094399999999803e-05, 3.09440000000015e-05, 3.059700000000026e-05, 3.095800000000107e-05, 3.056900000000112e-05, 3.12639999999996e-05, 3.061099999999983e-05, 3.09440000000015e-05, 3.059700000000026e-05, 3.093099999999793e-05, 3.129199999999874e-05, 3.059700000000026e-05, 3.1290999999999264e-05, 3.0597999999999737e-05, 3.059700000000026e-05, 3.129200000000221e-05, 3.130600000000178e-05, 3.097200000000064e-05, 3.094399999999803e-05, 3.092999999999846e-05, 3.0582999999997224e-05, 3.094399999999803e-05, 3.059700000000026e-05, 3.094500000000097e-05, 3.09440000000015e-05, 3.099999999999978e-05, 3.16250000000004e-05, 3.129199999999874e-05, 3.094500000000097e-05, 3.093099999999793e-05, 3.129200000000221e-05, 3.097200000000064e-05, 3.092999999999846e-05, 3.094500000000097e-05, 3.170800000000182e-05, 3.09440000000015e-05, 3.094500000000097e-05, 3.12639999999996e-05, 3.123599999999699e-05]</msg>
<status status="PASS" starttime="20201029 18:17:08.155" endtime="20201029 18:17:08.158"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:08.151" endtime="20201029 18:17:08.158"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:08.162" endtime="20201029 18:17:08.181"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:08.160" endtime="20201029 18:17:08.182"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:08.159" endtime="20201029 18:17:08.182"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:07.804" endtime="20201029 18:17:08.182"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:07.803" endtime="20201029 18:17:08.183"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:08.191" endtime="20201029 18:17:08.206"></status>
</kw>
<msg timestamp="20201029 18:17:08.207" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:08.189" endtime="20201029 18:17:08.207"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:08.209" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:08.208" endtime="20201029 18:17:08.209"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:08.210" endtime="20201029 18:17:08.212"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:08.187" endtime="20201029 18:17:08.212"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:08.185" endtime="20201029 18:17:08.213"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:08.219" endtime="20201029 18:17:08.507"></status>
</kw>
<msg timestamp="20201029 18:17:08.510" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019507417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019542375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:08.218" endtime="20201029 18:17:08.511"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:08.518" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019507417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019542375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:08.511" endtime="20201029 18:17:08.519"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:08.520" endtime="20201029 18:17:08.521"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:08.215" endtime="20201029 18:17:08.522"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:08.213" endtime="20201029 18:17:08.522"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:08.526" level="INFO">${RESULT} = [{'diff': 3.49580000000016e-05}, {'diff': 3.49580000000016e-05}, {'diff': 3.5082999999998254e-05}, {'diff': 3.4624999999999934e-05}, {'diff': 3.475000000000006e-05}, {'diff': 3.519499999999828e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:17:08.523" endtime="20201029 18:17:08.526"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:08.530" level="INFO">${ACCURACY} = {'diff': [3.49580000000016e-05, 3.49580000000016e-05, 3.5082999999998254e-05, 3.4624999999999934e-05, 3.475000000000006e-05, 3.519499999999828e-05, 3.54719999999982e-05, 3.459800000000027e-05, 3.50559...</msg>
<status status="PASS" starttime="20201029 18:17:08.527" endtime="20201029 18:17:08.530"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:08.535" level="INFO">NAME: accuracy-TIMER_SET-30-philip</msg>
<status status="PASS" starttime="20201029 18:17:08.534" endtime="20201029 18:17:08.535"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:08.537" level="INFO">VALUE: [3.49580000000016e-05, 3.49580000000016e-05, 3.5082999999998254e-05, 3.4624999999999934e-05, 3.475000000000006e-05, 3.519499999999828e-05, 3.54719999999982e-05, 3.459800000000027e-05, 3.505599999999859e-05, 3.5139000000000004e-05, 3.500000000000031e-05, 3.502799999999945e-05, 3.554199999999952e-05, 3.45840000000007e-05, 3.5277000000000225e-05, 3.51520000000001e-05, 3.493100000000193e-05, 3.541599999999992e-05, 3.472200000000092e-05, 3.467999999999874e-05, 3.4624999999999934e-05, 3.46519999999996e-05, 3.5040999999999545e-05, 3.5374999999997214e-05, 3.465300000000254e-05, 3.5166999999999143e-05, 3.469400000000178e-05, 3.5361000000001114e-05, 3.499999999999684e-05, 3.4846999999997574e-05, 3.466700000000211e-05, 3.4861000000000614e-05, 3.522200000000142e-05, 3.5347000000001544e-05, 3.4888999999999754e-05, 3.500000000000031e-05, 3.551399999999691e-05, 3.534800000000102e-05, 3.534800000000102e-05, 3.522200000000142e-05, 3.550000000000081e-05, 3.5054999999999115e-05, 3.463800000000003e-05, 3.4597000000000794e-05, 3.501399999999988e-05, 3.4568999999998185e-05, 3.544400000000253e-05, 3.5124999999996964e-05, 3.542999999999949e-05, 3.4888999999999754e-05]</msg>
<status status="PASS" starttime="20201029 18:17:08.536" endtime="20201029 18:17:08.538"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:08.531" endtime="20201029 18:17:08.538"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:08.542" endtime="20201029 18:17:08.561"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:08.540" endtime="20201029 18:17:08.562"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:08.539" endtime="20201029 18:17:08.562"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:08.183" endtime="20201029 18:17:08.563"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:08.183" endtime="20201029 18:17:08.563"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:08.571" endtime="20201029 18:17:08.588"></status>
</kw>
<msg timestamp="20201029 18:17:08.589" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:08.570" endtime="20201029 18:17:08.589"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:08.591" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:08.590" endtime="20201029 18:17:08.592"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:08.592" endtime="20201029 18:17:08.594"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:08.567" endtime="20201029 18:17:08.594"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:08.565" endtime="20201029 18:17:08.595"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:08.601" endtime="20201029 18:17:08.888"></status>
</kw>
<msg timestamp="20201029 18:17:08.891" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020403306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020439319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:08.600" endtime="20201029 18:17:08.891"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:08.899" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020403306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020439319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:08.892" endtime="20201029 18:17:08.899"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:08.900" endtime="20201029 18:17:08.902"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:08.597" endtime="20201029 18:17:08.902"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:08.595" endtime="20201029 18:17:08.903"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:08.907" level="INFO">${RESULT} = [{'diff': 3.6013000000001405e-05}, {'diff': 3.6097000000002294e-05}, {'diff': 3.598599999999827e-05}, {'diff': 3.620799999999938e-05}, {'diff': 3.6375000000001684e-05}, {'diff': 3.625000000000156e-05}...</msg>
<status status="PASS" starttime="20201029 18:17:08.904" endtime="20201029 18:17:08.907"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:08.911" level="INFO">${ACCURACY} = {'diff': [3.6013000000001405e-05, 3.6097000000002294e-05, 3.598599999999827e-05, 3.620799999999938e-05, 3.6375000000001684e-05, 3.625000000000156e-05, 3.567999999999974e-05, 3.5916999999999893e-05, 3....</msg>
<status status="PASS" starttime="20201029 18:17:08.908" endtime="20201029 18:17:08.911"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:08.915" level="INFO">NAME: accuracy-TIMER_SET-31-philip</msg>
<status status="PASS" starttime="20201029 18:17:08.914" endtime="20201029 18:17:08.916"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:08.918" level="INFO">VALUE: [3.6013000000001405e-05, 3.6097000000002294e-05, 3.598599999999827e-05, 3.620799999999938e-05, 3.6375000000001684e-05, 3.625000000000156e-05, 3.567999999999974e-05, 3.5916999999999893e-05, 3.579199999999977e-05, 3.626400000000113e-05, 3.5916999999999893e-05, 3.5638999999997034e-05, 3.5582999999998755e-05, 3.5833000000002474e-05, 3.555600000000256e-05, 3.594499999999903e-05, 3.598599999999827e-05, 3.651400000000138e-05, 3.6346999999999074e-05, 3.648599999999877e-05, 3.597300000000164e-05, 3.5804999999999865e-05, 3.620900000000232e-05, 3.6111000000001864e-05, 3.563800000000103e-05, 3.5791000000000295e-05, 3.5555000000003084e-05, 3.651400000000138e-05, 3.566600000000017e-05, 3.6153000000000574e-05, 3.5903000000000324e-05, 3.570799999999888e-05, 3.5610999999997894e-05, 3.629200000000027e-05, 3.5874999999997714e-05, 3.5861000000001614e-05, 3.5832999999999005e-05, 3.59589999999986e-05, 3.59719999999987e-05, 3.5596999999998324e-05, 3.644499999999953e-05, 3.59589999999986e-05, 3.609800000000177e-05, 3.580600000000281e-05, 3.6153000000000574e-05, 3.618000000000024e-05, 3.607000000000263e-05, 3.650000000000181e-05, 3.5804999999999865e-05, 3.5541000000000045e-05]</msg>
<status status="PASS" starttime="20201029 18:17:08.916" endtime="20201029 18:17:08.923"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:08.912" endtime="20201029 18:17:08.924"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:08.927" endtime="20201029 18:17:08.947"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:08.926" endtime="20201029 18:17:08.947"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:08.925" endtime="20201029 18:17:08.948"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:08.564" endtime="20201029 18:17:08.948"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:08.563" endtime="20201029 18:17:08.948"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:08.957" endtime="20201029 18:17:08.973"></status>
</kw>
<msg timestamp="20201029 18:17:08.973" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:08.955" endtime="20201029 18:17:08.973"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:08.975" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:08.974" endtime="20201029 18:17:08.976"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:08.976" endtime="20201029 18:17:08.978"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:08.953" endtime="20201029 18:17:08.979"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:08.951" endtime="20201029 18:17:08.979"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:08.985" endtime="20201029 18:17:09.272"></status>
</kw>
<msg timestamp="20201029 18:17:09.275" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019486764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019523347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:08.984" endtime="20201029 18:17:09.275"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:09.283" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019486764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019523347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:09.276" endtime="20201029 18:17:09.283"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:09.284" endtime="20201029 18:17:09.286"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:08.981" endtime="20201029 18:17:09.286"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:08.980" endtime="20201029 18:17:09.287"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:09.290" level="INFO">${RESULT} = [{'diff': 3.6582999999999755e-05}, {'diff': 3.667999999999727e-05}, {'diff': 3.6917000000000894e-05}, {'diff': 3.6875000000002184e-05}, {'diff': 3.729200000000127e-05}, {'diff': 3.6860999999999144e-05...</msg>
<status status="PASS" starttime="20201029 18:17:09.287" endtime="20201029 18:17:09.291"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:09.295" level="INFO">${ACCURACY} = {'diff': [3.6582999999999755e-05, 3.667999999999727e-05, 3.6917000000000894e-05, 3.6875000000002184e-05, 3.729200000000127e-05, 3.6860999999999144e-05, 3.704200000000102e-05, 3.680600000000034e-05, 3....</msg>
<status status="PASS" starttime="20201029 18:17:09.291" endtime="20201029 18:17:09.296"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:09.300" level="INFO">NAME: accuracy-TIMER_SET-32-philip</msg>
<status status="PASS" starttime="20201029 18:17:09.299" endtime="20201029 18:17:09.300"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:09.302" level="INFO">VALUE: [3.6582999999999755e-05, 3.667999999999727e-05, 3.6917000000000894e-05, 3.6875000000002184e-05, 3.729200000000127e-05, 3.6860999999999144e-05, 3.704200000000102e-05, 3.680600000000034e-05, 3.748599999999977e-05, 3.670799999999988e-05, 3.704199999999755e-05, 3.670900000000282e-05, 3.7389000000002254e-05, 3.697200000000317e-05, 3.69589999999996e-05, 3.7445000000000533e-05, 3.7360999999999644e-05, 3.7431000000000964e-05, 3.6791000000001295e-05, 3.7110999999999394e-05, 3.6555000000000615e-05, 3.672199999999945e-05, 3.6555000000000615e-05, 3.749999999999934e-05, 3.672199999999945e-05, 3.7333000000000505e-05, 3.7069000000000685e-05, 3.6805000000000865e-05, 3.745800000000063e-05, 3.7096999999999825e-05, 3.6846999999999575e-05, 3.655600000000009e-05, 3.701399999999841e-05, 3.7153000000001574e-05, 3.720800000000038e-05, 3.674999999999859e-05, 3.6652999999997604e-05, 3.730600000000084e-05, 3.705600000000059e-05, 3.673599999999902e-05, 3.694500000000003e-05, 3.7069000000000685e-05, 3.711199999999887e-05, 3.7360999999999644e-05, 3.6846999999999575e-05, 3.702799999999798e-05, 3.675000000000206e-05, 3.7083000000000255e-05, 3.750000000000281e-05, 3.730600000000084e-05]</msg>
<status status="PASS" starttime="20201029 18:17:09.301" endtime="20201029 18:17:09.303"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:09.296" endtime="20201029 18:17:09.304"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:09.307" endtime="20201029 18:17:09.327"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:09.306" endtime="20201029 18:17:09.327"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:09.305" endtime="20201029 18:17:09.328"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:08.949" endtime="20201029 18:17:09.328"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:08.948" endtime="20201029 18:17:09.328"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:09.337" endtime="20201029 18:17:09.353"></status>
</kw>
<msg timestamp="20201029 18:17:09.354" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:09.335" endtime="20201029 18:17:09.354"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:09.356" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:09.355" endtime="20201029 18:17:09.357"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:09.357" endtime="20201029 18:17:09.359"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:09.333" endtime="20201029 18:17:09.360"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:09.330" endtime="20201029 18:17:09.360"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:09.366" endtime="20201029 18:17:09.653"></status>
</kw>
<msg timestamp="20201029 18:17:09.656" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020327139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020365431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:09.365" endtime="20201029 18:17:09.656"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:09.664" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020327139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020365431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:09.657" endtime="20201029 18:17:09.665"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:09.666" endtime="20201029 18:17:09.667"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:09.362" endtime="20201029 18:17:09.668"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:09.361" endtime="20201029 18:17:09.668"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:09.672" level="INFO">${RESULT} = [{'diff': 3.82919999999988e-05}, {'diff': 3.773699999999949e-05}, {'diff': 3.7861000000000145e-05}, {'diff': 3.8375000000000214e-05}, {'diff': 3.79720000000007e-05}, {'diff': 3.820800000000138e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:17:09.669" endtime="20201029 18:17:09.672"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:09.676" level="INFO">${ACCURACY} = {'diff': [3.82919999999988e-05, 3.773699999999949e-05, 3.7861000000000145e-05, 3.8375000000000214e-05, 3.79720000000007e-05, 3.820800000000138e-05, 3.822199999999748e-05, 3.826399999999966e-05, 3.7957...</msg>
<status status="PASS" starttime="20201029 18:17:09.673" endtime="20201029 18:17:09.676"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:09.681" level="INFO">NAME: accuracy-TIMER_SET-33-philip</msg>
<status status="PASS" starttime="20201029 18:17:09.680" endtime="20201029 18:17:09.681"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:09.683" level="INFO">VALUE: [3.82919999999988e-05, 3.773699999999949e-05, 3.7861000000000145e-05, 3.8375000000000214e-05, 3.79720000000007e-05, 3.820800000000138e-05, 3.822199999999748e-05, 3.826399999999966e-05, 3.795799999999766e-05, 3.7874999999999714e-05, 3.798600000000027e-05, 3.804200000000202e-05, 3.8054999999998645e-05, 3.7652999999998604e-05, 3.84859999999973e-05, 3.823600000000052e-05, 3.820799999999791e-05, 3.797300000000017e-05, 3.8083000000001255e-05, 3.8333000000001505e-05, 3.7847000000000575e-05, 3.848600000000077e-05, 3.783400000000048e-05, 3.8389000000003254e-05, 3.793000000000199e-05, 3.790200000000285e-05, 3.7652999999998604e-05, 3.8318999999998465e-05, 3.7805000000001865e-05, 3.772199999999698e-05, 3.8054999999998645e-05, 3.7583000000000755e-05, 3.7638999999999034e-05, 3.77919999999983e-05, 3.776399999999916e-05, 3.7916999999998424e-05, 3.822200000000095e-05, 3.7861000000000145e-05, 3.826399999999966e-05, 3.774999999999959e-05, 3.8180999999998244e-05, 3.7639000000002504e-05, 3.799999999999984e-05, 3.804199999999855e-05, 3.823600000000052e-05, 3.822200000000095e-05, 3.783399999999701e-05, 3.8389000000003254e-05, 3.84720000000012e-05, 3.780600000000134e-05]</msg>
<status status="PASS" starttime="20201029 18:17:09.682" endtime="20201029 18:17:09.684"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:09.677" endtime="20201029 18:17:09.684"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:09.688" endtime="20201029 18:17:09.707"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:09.686" endtime="20201029 18:17:09.708"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:09.685" endtime="20201029 18:17:09.708"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:09.329" endtime="20201029 18:17:09.709"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:09.328" endtime="20201029 18:17:09.709"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:09.717" endtime="20201029 18:17:09.734"></status>
</kw>
<msg timestamp="20201029 18:17:09.735" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:09.716" endtime="20201029 18:17:09.735"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:09.737" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:09.736" endtime="20201029 18:17:09.737"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:09.738" endtime="20201029 18:17:09.740"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:09.713" endtime="20201029 18:17:09.740"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:09.711" endtime="20201029 18:17:09.741"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:09.747" endtime="20201029 18:17:10.033"></status>
</kw>
<msg timestamp="20201029 18:17:10.036" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020362764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020401486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:09.745" endtime="20201029 18:17:10.037"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:10.045" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020362764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020401486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:10.037" endtime="20201029 18:17:10.045"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:10.046" endtime="20201029 18:17:10.047"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:09.743" endtime="20201029 18:17:10.048"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:09.741" endtime="20201029 18:17:10.048"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:10.052" level="INFO">${RESULT} = [{'diff': 3.872200000000145e-05}, {'diff': 3.9360999999998175e-05}, {'diff': 3.9430999999999494e-05}, {'diff': 3.923700000000099e-05}, {'diff': 3.9054999999999646e-05}, {'diff': 3.868000000000274e-05}...</msg>
<status status="PASS" starttime="20201029 18:17:10.049" endtime="20201029 18:17:10.053"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:10.056" level="INFO">${ACCURACY} = {'diff': [3.872200000000145e-05, 3.9360999999998175e-05, 3.9430999999999494e-05, 3.923700000000099e-05, 3.9054999999999646e-05, 3.868000000000274e-05, 3.8611000000000895e-05, 3.9153000000000104e-05, 3...</msg>
<status status="PASS" starttime="20201029 18:17:10.053" endtime="20201029 18:17:10.057"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:10.061" level="INFO">NAME: accuracy-TIMER_SET-34-philip</msg>
<status status="PASS" starttime="20201029 18:17:10.060" endtime="20201029 18:17:10.061"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:10.063" level="INFO">VALUE: [3.872200000000145e-05, 3.9360999999998175e-05, 3.9430999999999494e-05, 3.923700000000099e-05, 3.9054999999999646e-05, 3.868000000000274e-05, 3.8611000000000895e-05, 3.9153000000000104e-05, 3.8916999999999424e-05, 3.873600000000102e-05, 3.880599999999887e-05, 3.877799999999973e-05, 3.944399999999959e-05, 3.9430999999999494e-05, 3.925000000000109e-05, 3.9082999999998785e-05, 3.8596999999997855e-05, 3.9416999999999924e-05, 3.89720000000017e-05, 3.872199999999798e-05, 3.9389000000000784e-05, 3.8639000000000034e-05, 3.8569000000002185e-05, 3.8582999999998285e-05, 3.8804999999999396e-05, 3.8653000000003074e-05, 3.8818999999998965e-05, 3.900000000000084e-05, 3.900000000000084e-05, 3.879200000000277e-05, 3.883399999999801e-05, 3.8639000000000034e-05, 3.9139000000000534e-05, 3.9458999999998634e-05, 3.9263000000001186e-05, 3.9139000000000534e-05, 3.90980000000013e-05, 3.9083000000002255e-05, 3.8917000000002894e-05, 3.9361000000001645e-05, 3.8639000000000034e-05, 3.8874999999997245e-05, 3.8597000000001325e-05, 3.9291000000000326e-05, 3.9153000000000104e-05, 3.8861000000001145e-05, 3.926400000000066e-05, 3.8625000000000465e-05, 3.925000000000109e-05, 3.920799999999891e-05]</msg>
<status status="PASS" starttime="20201029 18:17:10.062" endtime="20201029 18:17:10.065"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:10.057" endtime="20201029 18:17:10.066"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:10.069" endtime="20201029 18:17:10.089"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:10.068" endtime="20201029 18:17:10.089"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:10.066" endtime="20201029 18:17:10.089"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:09.710" endtime="20201029 18:17:10.090"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:09.709" endtime="20201029 18:17:10.090"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:10.098" endtime="20201029 18:17:10.115"></status>
</kw>
<msg timestamp="20201029 18:17:10.116" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:10.097" endtime="20201029 18:17:10.116"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:10.118" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:10.117" endtime="20201029 18:17:10.118"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:10.119" endtime="20201029 18:17:10.121"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:10.094" endtime="20201029 18:17:10.121"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:10.092" endtime="20201029 18:17:10.122"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:10.128" endtime="20201029 18:17:10.415"></status>
</kw>
<msg timestamp="20201029 18:17:10.418" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020179889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020219472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:10.126" endtime="20201029 18:17:10.418"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:10.426" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020179889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020219472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:10.419" endtime="20201029 18:17:10.426"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:10.427" endtime="20201029 18:17:10.428"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:10.124" endtime="20201029 18:17:10.429"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:10.122" endtime="20201029 18:17:10.429"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:10.433" level="INFO">${RESULT} = [{'diff': 3.9582999999999285e-05}, {'diff': 3.9624999999997995e-05}, {'diff': 4.043000000000102e-05}, {'diff': 4.0403000000001354e-05}, {'diff': 4.0181000000000244e-05}, {'diff': 4.0319000000000466e-0...</msg>
<status status="PASS" starttime="20201029 18:17:10.430" endtime="20201029 18:17:10.434"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:10.438" level="INFO">${ACCURACY} = {'diff': [3.9582999999999285e-05, 3.9624999999997995e-05, 4.043000000000102e-05, 4.0403000000001354e-05, 4.0181000000000244e-05, 4.0319000000000466e-05, 3.9638999999997565e-05, 3.982000000000291e-05, ...</msg>
<status status="PASS" starttime="20201029 18:17:10.434" endtime="20201029 18:17:10.439"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:10.443" level="INFO">NAME: accuracy-TIMER_SET-35-philip</msg>
<status status="PASS" starttime="20201029 18:17:10.442" endtime="20201029 18:17:10.443"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:10.445" level="INFO">VALUE: [3.9582999999999285e-05, 3.9624999999997995e-05, 4.043000000000102e-05, 4.0403000000001354e-05, 4.0181000000000244e-05, 4.0319000000000466e-05, 3.9638999999997565e-05, 3.982000000000291e-05, 3.9708999999998884e-05, 4.0167000000000674e-05, 3.9667000000000174e-05, 3.955599999999962e-05, 3.957000000000266e-05, 4.033399999999951e-05, 4.045800000000016e-05, 4.0152999999997635e-05, 4.001400000000141e-05, 3.9638999999997565e-05, 4.020799999999991e-05, 3.9541000000000576e-05, 4.0290999999997856e-05, 3.9639000000001035e-05, 4.023599999999905e-05, 3.995799999999966e-05, 3.9804999999996926e-05, 3.977800000000073e-05, 3.954200000000005e-05, 3.997199999999923e-05, 3.975000000000159e-05, 4.0374999999998745e-05, 4.0096999999999355e-05, 4.006999999999969e-05, 3.9653000000000604e-05, 3.99859999999988e-05, 4.04859999999993e-05, 3.9944999999999564e-05, 4.0445000000000064e-05, 4.0125000000001965e-05, 4.038799999999884e-05, 3.990200000000138e-05, 4.047199999999973e-05, 4.041600000000145e-05, 4.0305000000000896e-05, 3.994400000000009e-05, 4.0096999999999355e-05, 4.0054999999997176e-05, 3.998600000000227e-05, 3.9903000000000854e-05, 4.0305000000000896e-05, 4.0333000000000035e-05]</msg>
<status status="PASS" starttime="20201029 18:17:10.444" endtime="20201029 18:17:10.446"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:10.439" endtime="20201029 18:17:10.447"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:10.450" endtime="20201029 18:17:10.470"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:10.449" endtime="20201029 18:17:10.470"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:10.448" endtime="20201029 18:17:10.471"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:10.091" endtime="20201029 18:17:10.471"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:10.090" endtime="20201029 18:17:10.471"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:10.480" endtime="20201029 18:17:10.496"></status>
</kw>
<msg timestamp="20201029 18:17:10.497" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:10.478" endtime="20201029 18:17:10.497"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:10.499" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:10.498" endtime="20201029 18:17:10.499"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:10.500" endtime="20201029 18:17:10.502"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:10.476" endtime="20201029 18:17:10.502"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:10.473" endtime="20201029 18:17:10.503"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:10.511" endtime="20201029 18:17:10.798"></status>
</kw>
<msg timestamp="20201029 18:17:10.801" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020358556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020399722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:10.509" endtime="20201029 18:17:10.802"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:10.810" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020358556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020399722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:10.803" endtime="20201029 18:17:10.810"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:10.811" endtime="20201029 18:17:10.812"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:10.506" endtime="20201029 18:17:10.813"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:10.504" endtime="20201029 18:17:10.813"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:10.817" level="INFO">${RESULT} = [{'diff': 4.116599999999873e-05}, {'diff': 4.0860999999999675e-05}, {'diff': 4.100000000000284e-05}, {'diff': 4.105599999999765e-05}, {'diff': 4.122200000000048e-05}, {'diff': 4.0624999999998995e-05},...</msg>
<status status="PASS" starttime="20201029 18:17:10.814" endtime="20201029 18:17:10.817"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:10.821" level="INFO">${ACCURACY} = {'diff': [4.116599999999873e-05, 4.0860999999999675e-05, 4.100000000000284e-05, 4.105599999999765e-05, 4.122200000000048e-05, 4.0624999999998995e-05, 4.0931000000000994e-05, 4.124999999999962e-05, 4.1...</msg>
<status status="PASS" starttime="20201029 18:17:10.818" endtime="20201029 18:17:10.822"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:10.826" level="INFO">NAME: accuracy-TIMER_SET-36-philip</msg>
<status status="PASS" starttime="20201029 18:17:10.825" endtime="20201029 18:17:10.826"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:10.828" level="INFO">VALUE: [4.116599999999873e-05, 4.0860999999999675e-05, 4.100000000000284e-05, 4.105599999999765e-05, 4.122200000000048e-05, 4.0624999999998995e-05, 4.0931000000000994e-05, 4.124999999999962e-05, 4.1416999999998455e-05, 4.1138999999999065e-05, 4.1473000000000204e-05, 4.1540999999999106e-05, 4.055600000000062e-05, 4.1527000000003006e-05, 4.09859999999998e-05, 4.1054999999998176e-05, 4.0540999999998106e-05, 4.0847000000000105e-05, 4.116599999999873e-05, 4.1305000000001896e-05, 4.1347000000000605e-05, 4.126399999999919e-05, 4.0555000000001146e-05, 4.054199999999758e-05, 4.126399999999919e-05, 4.073599999999955e-05, 4.1069000000001216e-05, 4.102799999999851e-05, 4.054200000000105e-05, 4.073599999999955e-05, 4.106999999999722e-05, 4.13059999999979e-05, 4.0708999999999884e-05, 4.125000000000309e-05, 4.075000000000259e-05, 4.095800000000066e-05, 4.1041000000002076e-05, 4.1569000000001716e-05, 4.0569000000000716e-05, 4.0791000000001826e-05, 4.1166999999998205e-05, 4.095800000000066e-05, 4.1152999999998635e-05, 4.0639000000002035e-05, 4.0597000000003325e-05, 4.079199999999783e-05, 4.09859999999998e-05, 4.080600000000087e-05, 4.050000000000234e-05, 4.1181000000001244e-05]</msg>
<status status="PASS" starttime="20201029 18:17:10.827" endtime="20201029 18:17:10.829"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:10.822" endtime="20201029 18:17:10.830"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:10.833" endtime="20201029 18:17:10.853"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:10.832" endtime="20201029 18:17:10.853"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:10.831" endtime="20201029 18:17:10.854"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:10.472" endtime="20201029 18:17:10.854"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:10.471" endtime="20201029 18:17:10.854"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:10.863" endtime="20201029 18:17:10.881"></status>
</kw>
<msg timestamp="20201029 18:17:10.882" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:10.861" endtime="20201029 18:17:10.882"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:10.884" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:10.883" endtime="20201029 18:17:10.884"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:10.885" endtime="20201029 18:17:10.887"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:10.859" endtime="20201029 18:17:10.887"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:10.856" endtime="20201029 18:17:10.888"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:10.894" endtime="20201029 18:17:11.180"></status>
</kw>
<msg timestamp="20201029 18:17:11.183" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022705347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022746889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:10.892" endtime="20201029 18:17:11.184"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:11.191" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022705347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022746889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:11.184" endtime="20201029 18:17:11.192"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:11.193" endtime="20201029 18:17:11.194"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:10.890" endtime="20201029 18:17:11.195"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:10.888" endtime="20201029 18:17:11.195"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:11.199" level="INFO">${RESULT} = [{'diff': 4.154199999999858e-05}, {'diff': 4.182000000000144e-05}, {'diff': 4.173600000000055e-05}, {'diff': 4.197200000000123e-05}, {'diff': 4.247200000000173e-05}, {'diff': 4.2375000000000745e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:17:11.196" endtime="20201029 18:17:11.199"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:11.203" level="INFO">${ACCURACY} = {'diff': [4.154199999999858e-05, 4.182000000000144e-05, 4.173600000000055e-05, 4.197200000000123e-05, 4.247200000000173e-05, 4.2375000000000745e-05, 4.2040999999999606e-05, 4.2318999999998996e-05, 4.1...</msg>
<status status="PASS" starttime="20201029 18:17:11.200" endtime="20201029 18:17:11.204"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:11.208" level="INFO">NAME: accuracy-TIMER_SET-37-philip</msg>
<status status="PASS" starttime="20201029 18:17:11.207" endtime="20201029 18:17:11.208"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:11.210" level="INFO">VALUE: [4.154199999999858e-05, 4.182000000000144e-05, 4.173600000000055e-05, 4.197200000000123e-05, 4.247200000000173e-05, 4.2375000000000745e-05, 4.2040999999999606e-05, 4.2318999999998996e-05, 4.179199999999883e-05, 4.1819000000001966e-05, 4.250000000000087e-05, 4.24999999999974e-05, 4.2068999999998746e-05, 4.170800000000141e-05, 4.248599999999783e-05, 4.2361000000001175e-05, 4.201300000000047e-05, 4.251400000000044e-05, 4.1569000000001716e-05, 4.2125000000000495e-05, 4.223600000000105e-05, 4.2555000000003146e-05, 4.1847000000001106e-05, 4.2167000000002675e-05, 4.2139000000000065e-05, 4.2152999999999635e-05, 4.245799999999869e-05, 4.1583000000001286e-05, 4.1624999999999995e-05, 4.2083000000001786e-05, 4.2082999999998316e-05, 4.2304999999999426e-05, 4.1596999999997386e-05, 4.219399999999887e-05, 4.1916999999998955e-05, 4.2361000000001175e-05, 4.175000000000012e-05, 4.244399999999912e-05, 4.1875000000000245e-05, 4.172200000000098e-05, 4.170800000000141e-05, 4.1624999999999995e-05, 4.1695000000001314e-05, 4.1847000000001106e-05, 4.1847000000001106e-05, 4.2111000000000925e-05, 4.1695000000001314e-05, 4.2554999999999676e-05, 4.179199999999883e-05, 4.1667000000002175e-05]</msg>
<status status="PASS" starttime="20201029 18:17:11.209" endtime="20201029 18:17:11.212"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:11.204" endtime="20201029 18:17:11.212"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:11.216" endtime="20201029 18:17:11.235"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:11.214" endtime="20201029 18:17:11.236"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:11.213" endtime="20201029 18:17:11.236"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:10.855" endtime="20201029 18:17:11.237"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:10.854" endtime="20201029 18:17:11.237"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:11.245" endtime="20201029 18:17:11.261"></status>
</kw>
<msg timestamp="20201029 18:17:11.262" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:11.244" endtime="20201029 18:17:11.262"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:11.264" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:11.263" endtime="20201029 18:17:11.265"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:11.265" endtime="20201029 18:17:11.267"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:11.241" endtime="20201029 18:17:11.267"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:11.239" endtime="20201029 18:17:11.268"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:11.274" endtime="20201029 18:17:11.559"></status>
</kw>
<msg timestamp="20201029 18:17:11.563" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019838944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019881556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:11.273" endtime="20201029 18:17:11.563"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:11.570" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019838944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019881556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:11.564" endtime="20201029 18:17:11.571"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:11.572" endtime="20201029 18:17:11.573"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:11.270" endtime="20201029 18:17:11.574"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:11.268" endtime="20201029 18:17:11.574"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:11.578" level="INFO">${RESULT} = [{'diff': 4.26120000000009e-05}, {'diff': 4.286200000000115e-05}, {'diff': 4.308399999999879e-05}, {'diff': 4.320799999999944e-05}, {'diff': 4.320799999999944e-05}, {'diff': 4.2832999999999066e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:17:11.575" endtime="20201029 18:17:11.578"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:11.583" level="INFO">${ACCURACY} = {'diff': [4.26120000000009e-05, 4.286200000000115e-05, 4.308399999999879e-05, 4.320799999999944e-05, 4.320799999999944e-05, 4.2832999999999066e-05, 4.302700000000104e-05, 4.322200000000248e-05, 4.2916...</msg>
<status status="PASS" starttime="20201029 18:17:11.579" endtime="20201029 18:17:11.583"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:11.588" level="INFO">NAME: accuracy-TIMER_SET-38-philip</msg>
<status status="PASS" starttime="20201029 18:17:11.587" endtime="20201029 18:17:11.588"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:11.590" level="INFO">VALUE: [4.26120000000009e-05, 4.286200000000115e-05, 4.308399999999879e-05, 4.320799999999944e-05, 4.320799999999944e-05, 4.2832999999999066e-05, 4.302700000000104e-05, 4.322200000000248e-05, 4.2916999999999955e-05, 4.2554999999999676e-05, 4.2875000000001245e-05, 4.348599999999883e-05, 4.304200000000008e-05, 4.2819000000002966e-05, 4.306999999999922e-05, 4.3444999999999595e-05, 4.2653000000000135e-05, 4.2945000000002564e-05, 4.297199999999876e-05, 4.3389000000001315e-05, 4.3167000000000205e-05, 4.324999999999815e-05, 4.3110999999998456e-05, 4.345800000000316e-05, 4.2916999999999955e-05, 4.26799999999998e-05, 4.2791000000000357e-05, 4.3347000000002606e-05, 4.344400000000012e-05, 4.3305000000000426e-05, 4.2846999999998636e-05, 4.301400000000094e-05, 4.2875000000001245e-05, 4.259800000000133e-05, 4.3374999999998276e-05, 4.3082999999999316e-05, 4.258400000000176e-05, 4.322199999999901e-05, 4.276400000000069e-05, 4.2709000000001884e-05, 4.334800000000208e-05, 4.3153000000000635e-05, 4.343000000000055e-05, 4.2875000000001245e-05, 4.3318999999999996e-05, 4.3209000000002384e-05, 4.326400000000119e-05, 4.348599999999883e-05, 4.3332999999999566e-05, 4.26799999999998e-05]</msg>
<status status="PASS" starttime="20201029 18:17:11.589" endtime="20201029 18:17:11.591"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:11.584" endtime="20201029 18:17:11.592"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:11.595" endtime="20201029 18:17:11.615"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:11.594" endtime="20201029 18:17:11.615"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:11.593" endtime="20201029 18:17:11.615"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:11.238" endtime="20201029 18:17:11.616"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:11.237" endtime="20201029 18:17:11.616"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:11.624" endtime="20201029 18:17:11.639"></status>
</kw>
<msg timestamp="20201029 18:17:11.640" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:11.623" endtime="20201029 18:17:11.640"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:11.642" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:11.641" endtime="20201029 18:17:11.643"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:11.644" endtime="20201029 18:17:11.645"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:11.620" endtime="20201029 18:17:11.646"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:11.618" endtime="20201029 18:17:11.646"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:11.652" endtime="20201029 18:17:11.940"></status>
</kw>
<msg timestamp="20201029 18:17:11.943" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019416319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019460542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:11.651" endtime="20201029 18:17:11.943"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:11.951" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019416319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019460542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:11.944" endtime="20201029 18:17:11.952"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:11.952" endtime="20201029 18:17:11.954"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:11.648" endtime="20201029 18:17:11.955"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:11.647" endtime="20201029 18:17:11.955"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:11.959" level="INFO">${RESULT} = [{'diff': 4.4222999999999485e-05}, {'diff': 4.3596999999999386e-05}, {'diff': 4.381999999999997e-05}, {'diff': 4.373599999999908e-05}, {'diff': 4.3959000000003134e-05}, {'diff': 4.3902999999997916e-05...</msg>
<status status="PASS" starttime="20201029 18:17:11.956" endtime="20201029 18:17:11.959"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:11.963" level="INFO">${ACCURACY} = {'diff': [4.4222999999999485e-05, 4.3596999999999386e-05, 4.381999999999997e-05, 4.373599999999908e-05, 4.3959000000003134e-05, 4.3902999999997916e-05, 4.3667000000000705e-05, 4.3972999999999235e-05, ...</msg>
<status status="PASS" starttime="20201029 18:17:11.960" endtime="20201029 18:17:11.963"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:11.968" level="INFO">NAME: accuracy-TIMER_SET-39-philip</msg>
<status status="PASS" starttime="20201029 18:17:11.967" endtime="20201029 18:17:11.968"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:11.970" level="INFO">VALUE: [4.4222999999999485e-05, 4.3596999999999386e-05, 4.381999999999997e-05, 4.373599999999908e-05, 4.3959000000003134e-05, 4.3902999999997916e-05, 4.3667000000000705e-05, 4.3972999999999235e-05, 4.413799999999912e-05, 4.408399999999979e-05, 4.445800000000069e-05, 4.366599999999776e-05, 4.3624999999998526e-05, 4.377800000000126e-05, 4.3555000000000677e-05, 4.420800000000044e-05, 4.4333000000000566e-05, 4.4139000000002065e-05, 4.3624999999998526e-05, 4.4111000000002926e-05, 4.377799999999779e-05, 4.39999999999989e-05, 4.3681000000000275e-05, 4.401399999999847e-05, 4.3709000000002884e-05, 4.4360999999999706e-05, 4.383399999999954e-05, 4.3653000000001135e-05, 4.4431000000001025e-05, 4.420799999999697e-05, 4.377699999999832e-05, 4.4166999999997736e-05, 4.426400000000219e-05, 4.426399999999872e-05, 4.416600000000173e-05, 4.4458999999996696e-05, 4.43329999999971e-05, 4.3874999999998776e-05, 4.44860000000033e-05, 4.3874999999998776e-05, 4.401400000000194e-05, 4.427799999999829e-05, 4.3888999999998346e-05, 4.4208999999999915e-05, 4.34860000000023e-05, 4.426399999999872e-05, 4.355600000000015e-05, 4.425000000000262e-05, 4.41120000000024e-05, 4.4445000000000595e-05]</msg>
<status status="PASS" starttime="20201029 18:17:11.969" endtime="20201029 18:17:11.971"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:11.964" endtime="20201029 18:17:11.971"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:11.975" endtime="20201029 18:17:11.994"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:11.974" endtime="20201029 18:17:11.995"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:11.972" endtime="20201029 18:17:11.995"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:11.617" endtime="20201029 18:17:11.996"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:11.616" endtime="20201029 18:17:11.996"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:12.004" endtime="20201029 18:17:12.020"></status>
</kw>
<msg timestamp="20201029 18:17:12.021" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:12.003" endtime="20201029 18:17:12.021"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:12.023" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:12.022" endtime="20201029 18:17:12.024"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:12.024" endtime="20201029 18:17:12.026"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:12.000" endtime="20201029 18:17:12.027"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:11.998" endtime="20201029 18:17:12.027"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:12.033" endtime="20201029 18:17:12.319"></status>
</kw>
<msg timestamp="20201029 18:17:12.322" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020327889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020372569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:12.032" endtime="20201029 18:17:12.322"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:12.330" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020327889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020372569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:12.323" endtime="20201029 18:17:12.330"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:12.331" endtime="20201029 18:17:12.333"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:12.029" endtime="20201029 18:17:12.333"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:12.028" endtime="20201029 18:17:12.334"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:12.338" level="INFO">${RESULT} = [{'diff': 4.46800000000018e-05}, {'diff': 4.520799999999797e-05}, {'diff': 4.5361000000000706e-05}, {'diff': 4.55000000000004e-05}, {'diff': 4.552799999999954e-05}, {'diff': 4.4583000000000816e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:17:12.334" endtime="20201029 18:17:12.338"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:12.342" level="INFO">${ACCURACY} = {'diff': [4.46800000000018e-05, 4.520799999999797e-05, 4.5361000000000706e-05, 4.55000000000004e-05, 4.552799999999954e-05, 4.4583000000000816e-05, 4.501399999999947e-05, 4.481899999999803e-05, 4.4819...</msg>
<status status="PASS" starttime="20201029 18:17:12.339" endtime="20201029 18:17:12.342"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:12.346" level="INFO">NAME: accuracy-TIMER_SET-40-philip</msg>
<status status="PASS" starttime="20201029 18:17:12.345" endtime="20201029 18:17:12.347"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:12.349" level="INFO">VALUE: [4.46800000000018e-05, 4.520799999999797e-05, 4.5361000000000706e-05, 4.55000000000004e-05, 4.552799999999954e-05, 4.4583000000000816e-05, 4.501399999999947e-05, 4.481899999999803e-05, 4.4819000000001497e-05, 4.5180999999998306e-05, 4.5361000000000706e-05, 4.504200000000208e-05, 4.4653000000002135e-05, 4.5125000000000026e-05, 4.5473000000000735e-05, 4.4888999999999346e-05, 4.552700000000007e-05, 4.4944999999997626e-05, 4.542999999999908e-05, 4.4722999999999985e-05, 4.4681000000001275e-05, 4.455599999999768e-05, 4.504099999999914e-05, 4.466600000000223e-05, 4.545799999999822e-05, 4.472199999999704e-05, 4.469400000000137e-05, 4.495800000000119e-05, 4.495800000000119e-05, 4.531899999999853e-05, 4.498600000000033e-05, 4.525000000000015e-05, 4.472200000000051e-05, 4.5430999999998556e-05, 4.4874999999999776e-05, 4.474999999999965e-05, 4.473600000000008e-05, 4.519400000000187e-05, 4.4902999999998916e-05, 4.534800000000061e-05, 4.522200000000101e-05, 4.55130000000005e-05, 4.476299999999975e-05, 4.4624999999999526e-05, 4.4555000000001677e-05, 4.5097000000000886e-05, 4.5125000000000026e-05, 4.5152999999999166e-05, 4.55000000000004e-05, 4.5388999999999846e-05]</msg>
<status status="PASS" starttime="20201029 18:17:12.347" endtime="20201029 18:17:12.350"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:12.343" endtime="20201029 18:17:12.351"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:12.354" endtime="20201029 18:17:12.374"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:12.353" endtime="20201029 18:17:12.374"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:12.352" endtime="20201029 18:17:12.375"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:11.997" endtime="20201029 18:17:12.375"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:11.996" endtime="20201029 18:17:12.375"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:12.384" endtime="20201029 18:17:12.401"></status>
</kw>
<msg timestamp="20201029 18:17:12.401" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:12.382" endtime="20201029 18:17:12.402"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:12.404" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:12.402" endtime="20201029 18:17:12.404"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:12.405" endtime="20201029 18:17:12.406"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:12.380" endtime="20201029 18:17:12.407"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:12.378" endtime="20201029 18:17:12.407"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:12.414" endtime="20201029 18:17:12.700"></status>
</kw>
<msg timestamp="20201029 18:17:12.704" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020380389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020426278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:12.412" endtime="20201029 18:17:12.704"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:12.712" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020380389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020426278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:12.705" endtime="20201029 18:17:12.712"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:12.713" endtime="20201029 18:17:12.714"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:12.410" endtime="20201029 18:17:12.715"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:12.408" endtime="20201029 18:17:12.715"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:12.719" level="INFO">${RESULT} = [{'diff': 4.5889000000000346e-05}, {'diff': 4.6125000000001026e-05}, {'diff': 4.5611000000000956e-05}, {'diff': 4.602800000000004e-05}, {'diff': 4.652800000000054e-05}, {'diff': 4.586200000000068e-05}...</msg>
<status status="PASS" starttime="20201029 18:17:12.716" endtime="20201029 18:17:12.719"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:12.724" level="INFO">${ACCURACY} = {'diff': [4.5889000000000346e-05, 4.6125000000001026e-05, 4.5611000000000956e-05, 4.602800000000004e-05, 4.652800000000054e-05, 4.586200000000068e-05, 4.629199999999986e-05, 4.599999999999743e-05, 4.5...</msg>
<status status="PASS" starttime="20201029 18:17:12.720" endtime="20201029 18:17:12.725"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:12.729" level="INFO">NAME: accuracy-TIMER_SET-41-philip</msg>
<status status="PASS" starttime="20201029 18:17:12.728" endtime="20201029 18:17:12.729"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:12.731" level="INFO">VALUE: [4.5889000000000346e-05, 4.6125000000001026e-05, 4.5611000000000956e-05, 4.602800000000004e-05, 4.652800000000054e-05, 4.586200000000068e-05, 4.629199999999986e-05, 4.599999999999743e-05, 4.584699999999817e-05, 4.570800000000194e-05, 4.634799999999814e-05, 4.5945000000002095e-05, 4.647199999999879e-05, 4.5652999999999666e-05, 4.597199999999829e-05, 4.622199999999854e-05, 4.5681000000002275e-05, 4.5944999999998626e-05, 4.559699999999792e-05, 4.651400000000097e-05, 4.6181000000002775e-05, 4.5944999999998626e-05, 4.641600000000051e-05, 4.5708999999997946e-05, 4.608399999999832e-05, 4.5583000000001817e-05, 4.605499999999971e-05, 4.595799999999872e-05, 4.572199999999804e-05, 4.617999999999983e-05, 4.644399999999965e-05, 4.6153000000000166e-05, 4.60000000000009e-05, 4.6125000000001026e-05, 4.576400000000022e-05, 4.6445000000002595e-05, 4.611099999999799e-05, 4.577799999999979e-05, 4.570799999999847e-05, 4.633400000000204e-05, 4.584699999999817e-05, 4.5709000000001415e-05, 4.627800000000029e-05, 4.611200000000093e-05, 4.626300000000125e-05, 4.6125000000001026e-05, 4.617999999999983e-05, 4.611099999999799e-05, 4.581899999999903e-05, 4.611099999999799e-05]</msg>
<status status="PASS" starttime="20201029 18:17:12.730" endtime="20201029 18:17:12.732"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:12.725" endtime="20201029 18:17:12.733"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:12.736" endtime="20201029 18:17:12.756"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:12.735" endtime="20201029 18:17:12.756"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:12.734" endtime="20201029 18:17:12.756"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:12.376" endtime="20201029 18:17:12.757"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:12.376" endtime="20201029 18:17:12.757"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:12.765" endtime="20201029 18:17:12.782"></status>
</kw>
<msg timestamp="20201029 18:17:12.782" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:12.764" endtime="20201029 18:17:12.782"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:12.785" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:12.783" endtime="20201029 18:17:12.785"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:12.786" endtime="20201029 18:17:12.787"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:12.761" endtime="20201029 18:17:12.788"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:12.759" endtime="20201029 18:17:12.788"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:12.795" endtime="20201029 18:17:13.081"></status>
</kw>
<msg timestamp="20201029 18:17:13.085" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019437097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019484292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:12.793" endtime="20201029 18:17:13.085"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:13.093" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019437097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019484292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:13.086" endtime="20201029 18:17:13.093"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:13.094" endtime="20201029 18:17:13.096"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:12.790" endtime="20201029 18:17:13.096"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:12.789" endtime="20201029 18:17:13.097"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:13.100" level="INFO">${RESULT} = [{'diff': 4.7194999999999876e-05}, {'diff': 4.7167000000000736e-05}, {'diff': 4.733399999999957e-05}, {'diff': 4.729200000000086e-05}, {'diff': 4.745800000000022e-05}, {'diff': 4.726299999999878e-05},...</msg>
<status status="PASS" starttime="20201029 18:17:13.097" endtime="20201029 18:17:13.101"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:13.105" level="INFO">${ACCURACY} = {'diff': [4.7194999999999876e-05, 4.7167000000000736e-05, 4.733399999999957e-05, 4.729200000000086e-05, 4.745800000000022e-05, 4.726299999999878e-05, 4.68329999999996e-05, 4.7375000000002276e-05, 4.66...</msg>
<status status="PASS" starttime="20201029 18:17:13.101" endtime="20201029 18:17:13.105"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:13.109" level="INFO">NAME: accuracy-TIMER_SET-42-philip</msg>
<status status="PASS" starttime="20201029 18:17:13.108" endtime="20201029 18:17:13.109"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:13.112" level="INFO">VALUE: [4.7194999999999876e-05, 4.7167000000000736e-05, 4.733399999999957e-05, 4.729200000000086e-05, 4.745800000000022e-05, 4.726299999999878e-05, 4.68329999999996e-05, 4.7375000000002276e-05, 4.6625000000001526e-05, 4.748600000000283e-05, 4.699999999999843e-05, 4.684699999999917e-05, 4.704200000000061e-05, 4.755599999999721e-05, 4.706900000000028e-05, 4.684699999999917e-05, 4.697199999999929e-05, 4.701400000000147e-05, 4.729200000000086e-05, 4.752799999999807e-05, 4.732e-05, 4.732e-05, 4.6694999999999376e-05, 4.730499999999749e-05, 4.731900000000053e-05, 4.736200000000218e-05, 4.7125000000002026e-05, 4.655500000000021e-05, 4.71940000000004e-05, 4.737499999999881e-05, 4.7013999999998e-05, 4.672200000000251e-05, 4.6653000000000666e-05, 4.679200000000036e-05, 4.683399999999907e-05, 4.726400000000172e-05, 4.749999999999893e-05, 4.698600000000233e-05, 4.6708999999998946e-05, 4.723599999999911e-05, 4.6931000000000056e-05, 4.698599999999886e-05, 4.7208999999999446e-05, 4.6625000000001526e-05, 4.7487000000002305e-05, 4.727699999999835e-05, 4.737499999999881e-05, 4.656899999999978e-05, 4.695799999999972e-05, 4.727800000000129e-05]</msg>
<status status="PASS" starttime="20201029 18:17:13.110" endtime="20201029 18:17:13.112"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:13.105" endtime="20201029 18:17:13.113"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:13.116" endtime="20201029 18:17:13.136"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:13.115" endtime="20201029 18:17:13.137"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:13.114" endtime="20201029 18:17:13.137"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:12.758" endtime="20201029 18:17:13.137"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:12.757" endtime="20201029 18:17:13.137"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:13.146" endtime="20201029 18:17:13.163"></status>
</kw>
<msg timestamp="20201029 18:17:13.163" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:13.144" endtime="20201029 18:17:13.163"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:13.165" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:13.164" endtime="20201029 18:17:13.166"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:13.166" endtime="20201029 18:17:13.168"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:13.142" endtime="20201029 18:17:13.169"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:13.140" endtime="20201029 18:17:13.169"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:13.175" endtime="20201029 18:17:13.462"></status>
</kw>
<msg timestamp="20201029 18:17:13.465" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020406875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020454722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:13.174" endtime="20201029 18:17:13.465"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:13.473" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020406875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020454722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:13.466" endtime="20201029 18:17:13.473"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:13.474" endtime="20201029 18:17:13.476"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:13.171" endtime="20201029 18:17:13.476"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:13.170" endtime="20201029 18:17:13.477"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:13.481" level="INFO">${RESULT} = [{'diff': 4.784700000000017e-05}, {'diff': 4.804099999999867e-05}, {'diff': 4.843099999999809e-05}, {'diff': 4.852799999999907e-05}, {'diff': 4.820800000000097e-05}, {'diff': 4.773599999999961e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:17:13.477" endtime="20201029 18:17:13.481"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:13.485" level="INFO">${ACCURACY} = {'diff': [4.784700000000017e-05, 4.804099999999867e-05, 4.843099999999809e-05, 4.852799999999907e-05, 4.820800000000097e-05, 4.773599999999961e-05, 4.822200000000054e-05, 4.770800000000047e-05, 4.7945...</msg>
<status status="PASS" starttime="20201029 18:17:13.482" endtime="20201029 18:17:13.485"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:13.489" level="INFO">NAME: accuracy-TIMER_SET-43-philip</msg>
<status status="PASS" starttime="20201029 18:17:13.488" endtime="20201029 18:17:13.490"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:13.492" level="INFO">VALUE: [4.784700000000017e-05, 4.804099999999867e-05, 4.843099999999809e-05, 4.852799999999907e-05, 4.820800000000097e-05, 4.773599999999961e-05, 4.822200000000054e-05, 4.770800000000047e-05, 4.7945000000000626e-05, 4.8209000000000446e-05, 4.755600000000068e-05, 4.805600000000118e-05, 4.8209000000000446e-05, 4.7722999999999516e-05, 4.81940000000014e-05, 4.799999999999943e-05, 4.844399999999818e-05, 4.766600000000176e-05, 4.802799999999857e-05, 4.812499999999956e-05, 4.792999999999811e-05, 4.805499999999824e-05, 4.842999999999861e-05, 4.788899999999888e-05, 4.773599999999961e-05, 4.8167000000001736e-05, 4.7945000000000626e-05, 4.777800000000179e-05, 4.784700000000017e-05, 4.777800000000179e-05, 4.765200000000219e-05, 4.852800000000254e-05, 4.809799999999989e-05, 4.770800000000047e-05, 4.7959000000000196e-05, 4.812499999999956e-05, 4.830599999999796e-05, 4.781900000000103e-05, 4.83330000000011e-05, 4.755500000000121e-05, 4.849999999999993e-05, 4.823600000000011e-05, 4.781899999999756e-05, 4.8013999999999e-05, 4.849999999999993e-05, 4.754200000000111e-05, 4.81529999999987e-05, 4.8459000000000696e-05, 4.8209000000000446e-05, 4.755599999999721e-05]</msg>
<status status="PASS" starttime="20201029 18:17:13.490" endtime="20201029 18:17:13.493"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:13.486" endtime="20201029 18:17:13.494"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:13.498" endtime="20201029 18:17:13.517"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:13.496" endtime="20201029 18:17:13.517"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:13.495" endtime="20201029 18:17:13.518"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:13.138" endtime="20201029 18:17:13.518"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:13.138" endtime="20201029 18:17:13.518"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:13.527" endtime="20201029 18:17:13.543"></status>
</kw>
<msg timestamp="20201029 18:17:13.544" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:13.525" endtime="20201029 18:17:13.544"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:13.546" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:13.545" endtime="20201029 18:17:13.547"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:13.547" endtime="20201029 18:17:13.549"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:13.523" endtime="20201029 18:17:13.549"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:13.521" endtime="20201029 18:17:13.550"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:13.556" endtime="20201029 18:17:13.842"></status>
</kw>
<msg timestamp="20201029 18:17:13.845" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019995819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020044472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:13.555" endtime="20201029 18:17:13.845"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:13.853" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019995819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020044472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:13.846" endtime="20201029 18:17:13.853"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:13.854" endtime="20201029 18:17:13.856"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:13.552" endtime="20201029 18:17:13.856"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:13.550" endtime="20201029 18:17:13.857"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:13.861" level="INFO">${RESULT} = [{'diff': 4.86529999999992e-05}, {'diff': 4.945799999999875e-05}, {'diff': 4.852799999999907e-05}, {'diff': 4.887499999999684e-05}, {'diff': 4.911100000000099e-05}, {'diff': 4.861100000000049e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:17:13.858" endtime="20201029 18:17:13.861"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:13.866" level="INFO">${ACCURACY} = {'diff': [4.86529999999992e-05, 4.945799999999875e-05, 4.852799999999907e-05, 4.887499999999684e-05, 4.911100000000099e-05, 4.861100000000049e-05, 4.947199999999832e-05, 4.943099999999909e-05, 4.89170...</msg>
<status status="PASS" starttime="20201029 18:17:13.862" endtime="20201029 18:17:13.866"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:13.870" level="INFO">NAME: accuracy-TIMER_SET-44-philip</msg>
<status status="PASS" starttime="20201029 18:17:13.869" endtime="20201029 18:17:13.871"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:13.873" level="INFO">VALUE: [4.86529999999992e-05, 4.945799999999875e-05, 4.852799999999907e-05, 4.887499999999684e-05, 4.911100000000099e-05, 4.861100000000049e-05, 4.947199999999832e-05, 4.943099999999909e-05, 4.8917000000002486e-05, 4.890299999999945e-05, 4.9459000000001696e-05, 4.8903000000002916e-05, 4.938900000000038e-05, 4.898600000000086e-05, 4.865200000000319e-05, 4.937499999999734e-05, 4.890299999999945e-05, 4.898600000000086e-05, 4.947200000000179e-05, 4.870800000000147e-05, 4.884700000000117e-05, 4.897200000000129e-05, 4.895800000000172e-05, 4.861100000000049e-05, 4.8958999999997727e-05, 4.88469999999977e-05, 4.919499999999841e-05, 4.858400000000082e-05, 4.876399999999975e-05, 4.8709000000000946e-05, 4.947200000000179e-05, 4.865199999999972e-05, 4.887500000000031e-05, 4.941600000000004e-05, 4.917999999999936e-05, 4.893000000000258e-05, 4.895799999999825e-05, 4.856899999999831e-05, 4.948600000000136e-05, 4.936099999999777e-05, 4.872199999999757e-05, 4.944499999999866e-05, 4.929199999999939e-05, 4.923599999999764e-05, 4.887500000000031e-05, 4.875000000000018e-05, 4.861100000000049e-05, 4.9195000000001876e-05, 4.8972999999997296e-05, 4.8958999999997727e-05]</msg>
<status status="PASS" starttime="20201029 18:17:13.871" endtime="20201029 18:17:13.874"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:13.867" endtime="20201029 18:17:13.874"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:13.878" endtime="20201029 18:17:13.897"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:13.876" endtime="20201029 18:17:13.898"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:13.875" endtime="20201029 18:17:13.898"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:13.519" endtime="20201029 18:17:13.898"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:13.519" endtime="20201029 18:17:13.899"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:13.907" endtime="20201029 18:17:13.924"></status>
</kw>
<msg timestamp="20201029 18:17:13.925" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:13.906" endtime="20201029 18:17:13.925"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:13.927" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:13.926" endtime="20201029 18:17:13.927"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:13.928" endtime="20201029 18:17:13.930"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:13.903" endtime="20201029 18:17:13.930"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:13.901" endtime="20201029 18:17:13.931"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:13.937" endtime="20201029 18:17:14.224"></status>
</kw>
<msg timestamp="20201029 18:17:14.227" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020094431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020144361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:13.936" endtime="20201029 18:17:14.228"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:14.235" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020094431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020144361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:14.228" endtime="20201029 18:17:14.236"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:14.237" endtime="20201029 18:17:14.238"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:13.933" endtime="20201029 18:17:14.239"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:13.931" endtime="20201029 18:17:14.239"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:14.243" level="INFO">${RESULT} = [{'diff': 4.993000000000011e-05}, {'diff': 4.976399999999728e-05}, {'diff': 4.9707999999999e-05}, {'diff': 4.991700000000002e-05}, {'diff': 4.990300000000045e-05}, {'diff': 5.030599999999996e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 18:17:14.240" endtime="20201029 18:17:14.243"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:14.247" level="INFO">${ACCURACY} = {'diff': [4.993000000000011e-05, 4.976399999999728e-05, 4.9707999999999e-05, 4.991700000000002e-05, 4.990300000000045e-05, 5.030599999999996e-05, 4.962500000000106e-05, 5.0014000000001e-05, 4.99449999...</msg>
<status status="PASS" starttime="20201029 18:17:14.244" endtime="20201029 18:17:14.247"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:14.252" level="INFO">NAME: accuracy-TIMER_SET-45-philip</msg>
<status status="PASS" starttime="20201029 18:17:14.251" endtime="20201029 18:17:14.252"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:14.254" level="INFO">VALUE: [4.993000000000011e-05, 4.976399999999728e-05, 4.9707999999999e-05, 4.991700000000002e-05, 4.990300000000045e-05, 5.030599999999996e-05, 4.962500000000106e-05, 5.0014000000001e-05, 4.994499999999916e-05, 4.970899999999848e-05, 4.976400000000075e-05, 4.966699999999977e-05, 4.9723000000001516e-05, 4.955499999999974e-05, 4.963899999999716e-05, 5.004100000000067e-05, 5.026400000000125e-05, 4.965200000000072e-05, 5.013899999999766e-05, 4.98330000000026e-05, 4.962499999999759e-05, 5.011100000000199e-05, 4.995799999999925e-05, 4.955599999999921e-05, 4.998599999999839e-05, 4.955599999999921e-05, 4.963899999999716e-05, 4.979199999999989e-05, 4.998599999999839e-05, 5.045899999999923e-05, 5.030599999999996e-05, 5.0388000000001903e-05, 5.008300000000285e-05, 4.998600000000186e-05, 4.973600000000161e-05, 4.991600000000054e-05, 5.040300000000095e-05, 5.01530000000007e-05, 5.055600000000021e-05, 4.984700000000217e-05, 5.029200000000039e-05, 4.997200000000229e-05, 5.022199999999907e-05, 4.998600000000186e-05, 5.049999999999846e-05, 5.031999999999953e-05, 5.049999999999846e-05, 4.986100000000174e-05, 4.98339999999986e-05, 4.980499999999999e-05]</msg>
<status status="PASS" starttime="20201029 18:17:14.253" endtime="20201029 18:17:14.255"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:14.248" endtime="20201029 18:17:14.256"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:14.259" endtime="20201029 18:17:14.279"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:14.258" endtime="20201029 18:17:14.279"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:14.256" endtime="20201029 18:17:14.279"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:13.899" endtime="20201029 18:17:14.280"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:13.899" endtime="20201029 18:17:14.280"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:14.288" endtime="20201029 18:17:14.309"></status>
</kw>
<msg timestamp="20201029 18:17:14.309" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:14.287" endtime="20201029 18:17:14.309"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:14.312" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:14.310" endtime="20201029 18:17:14.312"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:14.313" endtime="20201029 18:17:14.314"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:14.284" endtime="20201029 18:17:14.315"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:14.282" endtime="20201029 18:17:14.315"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:14.322" endtime="20201029 18:17:14.608"></status>
</kw>
<msg timestamp="20201029 18:17:14.611" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0230535, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023105, 'source': 'DUT_IC', 'event': 'FALLING'...</msg>
<status status="PASS" starttime="20201029 18:17:14.320" endtime="20201029 18:17:14.612"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:14.619" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0230535, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023105, 'source': 'DUT_IC', 'event': 'FALLING'...</msg>
<status status="PASS" starttime="20201029 18:17:14.612" endtime="20201029 18:17:14.620"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:14.621" endtime="20201029 18:17:14.622"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:14.318" endtime="20201029 18:17:14.623"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:14.316" endtime="20201029 18:17:14.623"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:14.627" level="INFO">${RESULT} = [{'diff': 5.149999999999946e-05}, {'diff': 5.127800000000182e-05}, {'diff': 5.148599999999989e-05}, {'diff': 5.074999999999871e-05}, {'diff': 5.068100000000034e-05}, {'diff': 5.094500000000016e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:17:14.624" endtime="20201029 18:17:14.627"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:14.631" level="INFO">${ACCURACY} = {'diff': [5.149999999999946e-05, 5.127800000000182e-05, 5.148599999999989e-05, 5.074999999999871e-05, 5.068100000000034e-05, 5.094500000000016e-05, 5.122299999999955e-05, 5.086200000000221e-05, 5.1472...</msg>
<status status="PASS" starttime="20201029 18:17:14.628" endtime="20201029 18:17:14.632"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:14.636" level="INFO">NAME: accuracy-TIMER_SET-46-philip</msg>
<status status="PASS" starttime="20201029 18:17:14.635" endtime="20201029 18:17:14.636"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:14.638" level="INFO">VALUE: [5.149999999999946e-05, 5.127800000000182e-05, 5.148599999999989e-05, 5.074999999999871e-05, 5.068100000000034e-05, 5.094500000000016e-05, 5.122299999999955e-05, 5.086200000000221e-05, 5.14729999999998e-05, 5.097199999999982e-05, 5.137499999999934e-05, 5.049999999999846e-05, 5.105499999999777e-05, 5.106900000000081e-05, 5.08469999999997e-05, 5.151399999999903e-05, 5.115299999999823e-05, 5.123599999999964e-05, 5.095899999999973e-05, 5.133299999999716e-05, 5.104200000000114e-05, 5.056999999999978e-05, 5.108399999999985e-05, 5.075000000000218e-05, 5.098600000000286e-05, 5.091700000000102e-05, 5.068000000000086e-05, 5.080499999999752e-05, 5.1387999999999434e-05, 5.127700000000235e-05, 5.056900000000031e-05, 5.09729999999993e-05, 5.099999999999896e-05, 5.10279999999981e-05, 5.105499999999777e-05, 5.098599999999939e-05, 5.115299999999823e-05, 5.087500000000231e-05, 5.077800000000132e-05, 5.118100000000084e-05, 5.086200000000221e-05, 5.095899999999973e-05, 5.094500000000016e-05, 5.123599999999964e-05, 5.11530000000017e-05, 5.079100000000142e-05, 5.137500000000281e-05, 5.0652000000001723e-05, 5.124999999999921e-05, 5.095800000000025e-05]</msg>
<status status="PASS" starttime="20201029 18:17:14.637" endtime="20201029 18:17:14.640"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:14.632" endtime="20201029 18:17:14.640"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:14.644" endtime="20201029 18:17:14.663"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:14.642" endtime="20201029 18:17:14.664"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:14.641" endtime="20201029 18:17:14.664"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:14.281" endtime="20201029 18:17:14.664"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:14.280" endtime="20201029 18:17:14.665"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:14.673" endtime="20201029 18:17:14.690"></status>
</kw>
<msg timestamp="20201029 18:17:14.690" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:14.672" endtime="20201029 18:17:14.691"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:14.693" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:14.691" endtime="20201029 18:17:14.693"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:14.694" endtime="20201029 18:17:14.696"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:14.669" endtime="20201029 18:17:14.696"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:14.667" endtime="20201029 18:17:14.696"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:14.703" endtime="20201029 18:17:14.989"></status>
</kw>
<msg timestamp="20201029 18:17:14.992" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019827083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019878903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:14.701" endtime="20201029 18:17:14.992"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:15.000" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019827083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019878903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:14.993" endtime="20201029 18:17:15.000"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:15.001" endtime="20201029 18:17:15.003"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:14.699" endtime="20201029 18:17:15.003"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:14.697" endtime="20201029 18:17:15.004"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:15.007" level="INFO">${RESULT} = [{'diff': 5.182000000000103e-05}, {'diff': 5.251400000000003e-05}, {'diff': 5.2429999999999144e-05}, {'diff': 5.232000000000153e-05}, {'diff': 5.251400000000003e-05}, {'diff': 5.231900000000206e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:17:15.004" endtime="20201029 18:17:15.008"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:15.012" level="INFO">${ACCURACY} = {'diff': [5.182000000000103e-05, 5.251400000000003e-05, 5.2429999999999144e-05, 5.232000000000153e-05, 5.251400000000003e-05, 5.231900000000206e-05, 5.212500000000009e-05, 5.169400000000143e-05, 5.172...</msg>
<status status="PASS" starttime="20201029 18:17:15.008" endtime="20201029 18:17:15.013"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:15.017" level="INFO">NAME: accuracy-TIMER_SET-47-philip</msg>
<status status="PASS" starttime="20201029 18:17:15.016" endtime="20201029 18:17:15.017"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:15.019" level="INFO">VALUE: [5.182000000000103e-05, 5.251400000000003e-05, 5.2429999999999144e-05, 5.232000000000153e-05, 5.251400000000003e-05, 5.231900000000206e-05, 5.212500000000009e-05, 5.169400000000143e-05, 5.172200000000057e-05, 5.204200000000214e-05, 5.2179999999998894e-05, 5.1708000000001e-05, 5.206900000000181e-05, 5.156899999999784e-05, 5.233300000000163e-05, 5.243099999999862e-05, 5.216700000000227e-05, 5.232000000000153e-05, 5.227799999999935e-05, 5.213900000000313e-05, 5.236100000000077e-05, 5.168100000000134e-05, 5.247200000000132e-05, 5.2443999999998714e-05, 5.2402000000000004e-05, 5.231899999999859e-05, 5.240300000000295e-05, 5.179200000000189e-05, 5.2179999999998894e-05, 5.243099999999862e-05, 5.2207999999998034e-05, 5.173600000000014e-05, 5.176399999999928e-05, 5.2151999999999754e-05, 5.20279999999991e-05, 5.155600000000121e-05, 5.169500000000091e-05, 5.205599999999824e-05, 5.237500000000034e-05, 5.172300000000005e-05, 5.177800000000232e-05, 5.250000000000046e-05, 5.251400000000003e-05, 5.208299999999791e-05, 5.158300000000088e-05, 5.237500000000034e-05, 5.250000000000046e-05, 5.229199999999892e-05, 5.163899999999916e-05, 5.251400000000003e-05]</msg>
<status status="PASS" starttime="20201029 18:17:15.018" endtime="20201029 18:17:15.020"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:15.013" endtime="20201029 18:17:15.021"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:15.024" endtime="20201029 18:17:15.044"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:15.023" endtime="20201029 18:17:15.044"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:15.022" endtime="20201029 18:17:15.045"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:14.666" endtime="20201029 18:17:15.045"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:14.665" endtime="20201029 18:17:15.045"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:15.054" endtime="20201029 18:17:15.071"></status>
</kw>
<msg timestamp="20201029 18:17:15.071" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:15.052" endtime="20201029 18:17:15.071"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:15.074" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:15.072" endtime="20201029 18:17:15.074"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:15.075" endtime="20201029 18:17:15.076"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:15.049" endtime="20201029 18:17:15.077"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:15.047" endtime="20201029 18:17:15.077"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:15.084" endtime="20201029 18:17:15.371"></status>
</kw>
<msg timestamp="20201029 18:17:15.374" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019838042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019891278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:15.082" endtime="20201029 18:17:15.374"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:15.382" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019838042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019891278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:15.375" endtime="20201029 18:17:15.383"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:15.383" endtime="20201029 18:17:15.385"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:15.080" endtime="20201029 18:17:15.385"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:15.078" endtime="20201029 18:17:15.386"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:15.390" level="INFO">${RESULT} = [{'diff': 5.3235999999998174e-05}, {'diff': 5.3415999999997105e-05}, {'diff': 5.330599999999949e-05}, {'diff': 5.337500000000134e-05}, {'diff': 5.325000000000121e-05}, {'diff': 5.33609999999983e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:17:15.387" endtime="20201029 18:17:15.390"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:15.394" level="INFO">${ACCURACY} = {'diff': [5.3235999999998174e-05, 5.3415999999997105e-05, 5.330599999999949e-05, 5.337500000000134e-05, 5.325000000000121e-05, 5.33609999999983e-05, 5.259699999999798e-05, 5.287500000000084e-05, 5.267...</msg>
<status status="PASS" starttime="20201029 18:17:15.391" endtime="20201029 18:17:15.394"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:15.398" level="INFO">NAME: accuracy-TIMER_SET-48-philip</msg>
<status status="PASS" starttime="20201029 18:17:15.397" endtime="20201029 18:17:15.399"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:15.401" level="INFO">VALUE: [5.3235999999998174e-05, 5.3415999999997105e-05, 5.330599999999949e-05, 5.337500000000134e-05, 5.325000000000121e-05, 5.33609999999983e-05, 5.259699999999798e-05, 5.287500000000084e-05, 5.2679999999999394e-05, 5.3443999999999714e-05, 5.259700000000145e-05, 5.325000000000121e-05, 5.343099999999962e-05, 5.30280000000001e-05, 5.325000000000121e-05, 5.255599999999874e-05, 5.263900000000016e-05, 5.268099999999887e-05, 5.279199999999942e-05, 5.304199999999967e-05, 5.337500000000134e-05, 5.2749999999997244e-05, 5.3221999999998604e-05, 5.327800000000035e-05, 5.309700000000195e-05, 5.2943999999999214e-05, 5.281899999999909e-05, 5.3013999999997063e-05, 5.2693999999998964e-05, 5.31669999999998e-05, 5.26669999999993e-05, 5.265299999999973e-05, 5.331999999999906e-05, 5.25279999999996e-05, 5.338899999999744e-05, 5.351400000000103e-05, 5.262500000000059e-05, 5.319500000000241e-05, 5.327800000000035e-05, 5.323700000000112e-05, 5.301300000000106e-05, 5.300000000000096e-05, 5.256900000000231e-05, 5.2902000000000504e-05, 5.320900000000198e-05, 5.282000000000203e-05, 5.329199999999992e-05, 5.290299999999998e-05, 5.355599999999974e-05, 5.323600000000164e-05]</msg>
<status status="PASS" starttime="20201029 18:17:15.399" endtime="20201029 18:17:15.402"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:15.395" endtime="20201029 18:17:15.402"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:15.406" endtime="20201029 18:17:15.425"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:15.404" endtime="20201029 18:17:15.426"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:15.403" endtime="20201029 18:17:15.426"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:15.046" endtime="20201029 18:17:15.426"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:15.045" endtime="20201029 18:17:15.426"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:15.435" endtime="20201029 18:17:15.452"></status>
</kw>
<msg timestamp="20201029 18:17:15.453" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:15.433" endtime="20201029 18:17:15.453"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:15.455" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:15.454" endtime="20201029 18:17:15.456"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:15.456" endtime="20201029 18:17:15.458"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:15.431" endtime="20201029 18:17:15.459"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:15.429" endtime="20201029 18:17:15.459"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:15.465" endtime="20201029 18:17:15.752"></status>
</kw>
<msg timestamp="20201029 18:17:15.755" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020813625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020867986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:15.464" endtime="20201029 18:17:15.755"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:15.763" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020813625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020867986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:15.756" endtime="20201029 18:17:15.763"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:15.764" endtime="20201029 18:17:15.765"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:15.461" endtime="20201029 18:17:15.766"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:15.460" endtime="20201029 18:17:15.766"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:15.770" level="INFO">${RESULT} = [{'diff': 5.436100000000277e-05}, {'diff': 5.402700000000163e-05}, {'diff': 5.415299999999776e-05}, {'diff': 5.362499999999812e-05}, {'diff': 5.383299999999966e-05}, {'diff': 5.4485999999999424e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:17:15.767" endtime="20201029 18:17:15.771"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:15.775" level="INFO">${ACCURACY} = {'diff': [5.436100000000277e-05, 5.402700000000163e-05, 5.415299999999776e-05, 5.362499999999812e-05, 5.383299999999966e-05, 5.4485999999999424e-05, 5.420899999999951e-05, 5.35280000000006e-05, 5.3514...</msg>
<status status="PASS" starttime="20201029 18:17:15.771" endtime="20201029 18:17:15.775"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:15.779" level="INFO">NAME: accuracy-TIMER_SET-49-philip</msg>
<status status="PASS" starttime="20201029 18:17:15.778" endtime="20201029 18:17:15.779"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:15.781" level="INFO">VALUE: [5.436100000000277e-05, 5.402700000000163e-05, 5.415299999999776e-05, 5.362499999999812e-05, 5.383299999999966e-05, 5.4485999999999424e-05, 5.420899999999951e-05, 5.35280000000006e-05, 5.351400000000103e-05, 5.431900000000059e-05, 5.4151999999998285e-05, 5.4458000000000284e-05, 5.377699999999791e-05, 5.448600000000289e-05, 5.405500000000077e-05, 5.452700000000213e-05, 5.404200000000067e-05, 5.383299999999966e-05, 5.4458000000000284e-05, 5.415300000000123e-05, 5.36670000000003e-05, 5.36670000000003e-05, 5.391700000000055e-05, 5.390299999999751e-05, 5.394499999999969e-05, 5.372299999999858e-05, 5.383299999999966e-05, 5.419499999999994e-05, 5.437500000000234e-05, 5.409699999999948e-05, 5.379100000000095e-05, 5.450000000000246e-05, 5.4471999999999854e-05, 5.438899999999844e-05, 5.384699999999923e-05, 5.458399999999988e-05, 5.368099999999987e-05, 5.393100000000012e-05, 5.4485999999999424e-05, 5.390299999999751e-05, 5.375000000000171e-05, 5.350000000000146e-05, 5.415300000000123e-05, 5.380599999999999e-05, 5.422299999999908e-05, 5.3902000000001504e-05, 5.401300000000206e-05, 5.406899999999687e-05, 5.376400000000128e-05, 5.388900000000141e-05]</msg>
<status status="PASS" starttime="20201029 18:17:15.780" endtime="20201029 18:17:15.783"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:15.775" endtime="20201029 18:17:15.784"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:15.787" endtime="20201029 18:17:15.807"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:15.786" endtime="20201029 18:17:15.807"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:15.785" endtime="20201029 18:17:15.807"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:15.427" endtime="20201029 18:17:15.808"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:15.427" endtime="20201029 18:17:15.808"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:15.817" endtime="20201029 18:17:15.833"></status>
</kw>
<msg timestamp="20201029 18:17:15.834" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:15.815" endtime="20201029 18:17:15.834"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:15.836" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:15.835" endtime="20201029 18:17:15.836"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:15.837" endtime="20201029 18:17:15.839"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:15.812" endtime="20201029 18:17:15.839"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:15.810" endtime="20201029 18:17:15.840"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:15.846" endtime="20201029 18:17:16.131"></status>
</kw>
<msg timestamp="20201029 18:17:16.134" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0200675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020122556, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:17:15.845" endtime="20201029 18:17:16.134"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:16.142" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0200675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020122556, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:17:16.135" endtime="20201029 18:17:16.142"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:16.143" endtime="20201029 18:17:16.145"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:15.842" endtime="20201029 18:17:16.145"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:15.840" endtime="20201029 18:17:16.146"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:16.149" level="INFO">${RESULT} = [{'diff': 5.505600000000124e-05}, {'diff': 5.501299999999959e-05}, {'diff': 5.534700000000073e-05}, {'diff': 5.4901999999999035e-05}, {'diff': 5.4735999999999674e-05}, {'diff': 5.480499999999805e-05},...</msg>
<status status="PASS" starttime="20201029 18:17:16.146" endtime="20201029 18:17:16.150"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:16.154" level="INFO">${ACCURACY} = {'diff': [5.505600000000124e-05, 5.501299999999959e-05, 5.534700000000073e-05, 5.4901999999999035e-05, 5.4735999999999674e-05, 5.480499999999805e-05, 5.506999999999734e-05, 5.479200000000142e-05, 5.54...</msg>
<status status="PASS" starttime="20201029 18:17:16.150" endtime="20201029 18:17:16.155"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:16.159" level="INFO">NAME: accuracy-TIMER_SET-50-philip</msg>
<status status="PASS" starttime="20201029 18:17:16.158" endtime="20201029 18:17:16.159"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:16.161" level="INFO">VALUE: [5.505600000000124e-05, 5.501299999999959e-05, 5.534700000000073e-05, 5.4901999999999035e-05, 5.4735999999999674e-05, 5.480499999999805e-05, 5.506999999999734e-05, 5.479200000000142e-05, 5.5486000000000424e-05, 5.505600000000124e-05, 5.459799999999945e-05, 5.490299999999851e-05, 5.493099999999765e-05, 5.527800000000235e-05, 5.537499999999987e-05, 5.555500000000227e-05, 5.487499999999937e-05, 5.5165999999998855e-05, 5.5179999999998425e-05, 5.531900000000159e-05, 5.531900000000159e-05, 5.541700000000205e-05, 5.508300000000091e-05, 5.456900000000084e-05, 5.4708000000000534e-05, 5.456900000000084e-05, 5.462499999999912e-05, 5.4735999999999674e-05, 5.519500000000094e-05, 5.508400000000038e-05, 5.532000000000106e-05, 5.476400000000228e-05, 5.479200000000142e-05, 5.4972000000000354e-05, 5.5207999999997565e-05, 5.5193999999997995e-05, 5.5236000000000174e-05, 5.461099999999955e-05, 5.4999999999999494e-05, 5.541699999999858e-05, 5.5472000000000854e-05, 5.5222000000000604e-05, 5.529099999999898e-05, 5.5193999999997995e-05, 5.541699999999858e-05, 5.487499999999937e-05, 5.483400000000013e-05, 5.4791999999997953e-05, 5.497299999999983e-05, 5.5137999999999715e-05]</msg>
<status status="PASS" starttime="20201029 18:17:16.160" endtime="20201029 18:17:16.162"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:16.155" endtime="20201029 18:17:16.163"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:16.166" endtime="20201029 18:17:16.186"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:16.165" endtime="20201029 18:17:16.186"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:16.164" endtime="20201029 18:17:16.187"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:15.809" endtime="20201029 18:17:16.187"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:15.808" endtime="20201029 18:17:16.187"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:16.196" endtime="20201029 18:17:16.213"></status>
</kw>
<msg timestamp="20201029 18:17:16.214" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:16.194" endtime="20201029 18:17:16.214"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:16.216" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:16.215" endtime="20201029 18:17:16.216"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:16.217" endtime="20201029 18:17:16.219"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:16.192" endtime="20201029 18:17:16.219"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:16.189" endtime="20201029 18:17:16.220"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:16.226" endtime="20201029 18:17:16.514"></status>
</kw>
<msg timestamp="20201029 18:17:16.517" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019429264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019485444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:16.225" endtime="20201029 18:17:16.517"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:16.525" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019429264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019485444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:16.518" endtime="20201029 18:17:16.525"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:16.526" endtime="20201029 18:17:16.528"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:16.222" endtime="20201029 18:17:16.528"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:16.220" endtime="20201029 18:17:16.529"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:16.532" level="INFO">${RESULT} = [{'diff': 5.6179999999999425e-05}, {'diff': 5.587500000000037e-05}, {'diff': 5.6207999999998565e-05}, {'diff': 5.5944000000002214e-05}, {'diff': 5.613900000000019e-05}, {'diff': 5.6014000000000064e-05...</msg>
<status status="PASS" starttime="20201029 18:17:16.529" endtime="20201029 18:17:16.533"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:16.537" level="INFO">${ACCURACY} = {'diff': [5.6179999999999425e-05, 5.587500000000037e-05, 5.6207999999998565e-05, 5.5944000000002214e-05, 5.613900000000019e-05, 5.6014000000000064e-05, 5.586099999999733e-05, 5.6222000000001604e-05, 5...</msg>
<status status="PASS" starttime="20201029 18:17:16.533" endtime="20201029 18:17:16.537"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:16.541" level="INFO">NAME: accuracy-TIMER_SET-51-philip</msg>
<status status="PASS" starttime="20201029 18:17:16.540" endtime="20201029 18:17:16.541"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:16.543" level="INFO">VALUE: [5.6179999999999425e-05, 5.587500000000037e-05, 5.6207999999998565e-05, 5.5944000000002214e-05, 5.613900000000019e-05, 5.6014000000000064e-05, 5.586099999999733e-05, 5.6222000000001604e-05, 5.6291999999999454e-05, 5.632000000000206e-05, 5.640300000000001e-05, 5.588899999999994e-05, 5.597300000000083e-05, 5.5736000000000674e-05, 5.5736000000000674e-05, 5.6165999999999855e-05, 5.5679999999998925e-05, 5.579099999999948e-05, 5.562500000000012e-05, 5.633299999999869e-05, 5.6194000000002464e-05, 5.637500000000087e-05, 5.5986000000000924e-05, 5.587500000000037e-05, 5.6305999999999023e-05, 5.658300000000241e-05, 5.5791999999998954e-05, 5.5791999999998954e-05, 5.579200000000242e-05, 5.607000000000181e-05, 5.620900000000151e-05, 5.563899999999969e-05, 5.583399999999766e-05, 5.5707999999998065e-05, 5.652699999999719e-05, 5.6221999999998135e-05, 5.5722000000001104e-05, 5.56809999999984e-05, 5.5707999999998065e-05, 5.565299999999926e-05, 5.6236000000001174e-05, 5.6208000000002034e-05, 5.5791999999998954e-05, 5.6277999999999884e-05, 5.570899999999754e-05, 5.640300000000001e-05, 5.555600000000174e-05, 5.6500000000000994e-05, 5.63610000000013e-05, 5.56809999999984e-05]</msg>
<status status="PASS" starttime="20201029 18:17:16.542" endtime="20201029 18:17:16.544"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:16.537" endtime="20201029 18:17:16.545"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:16.548" endtime="20201029 18:17:16.568"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:16.547" endtime="20201029 18:17:16.568"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:16.546" endtime="20201029 18:17:16.569"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:16.188" endtime="20201029 18:17:16.569"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:16.187" endtime="20201029 18:17:16.569"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:16.578" endtime="20201029 18:17:16.596"></status>
</kw>
<msg timestamp="20201029 18:17:16.596" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:16.576" endtime="20201029 18:17:16.596"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:16.598" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:16.597" endtime="20201029 18:17:16.599"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:16.599" endtime="20201029 18:17:16.601"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:16.574" endtime="20201029 18:17:16.602"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:16.572" endtime="20201029 18:17:16.602"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:16.608" endtime="20201029 18:17:16.893"></status>
</kw>
<msg timestamp="20201029 18:17:16.896" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021046069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021103542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:16.607" endtime="20201029 18:17:16.897"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:16.904" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021046069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021103542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:16.897" endtime="20201029 18:17:16.905"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:16.906" endtime="20201029 18:17:16.907"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:16.604" endtime="20201029 18:17:16.908"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:16.603" endtime="20201029 18:17:16.908"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:16.912" level="INFO">${RESULT} = [{'diff': 5.747299999999886e-05}, {'diff': 5.6764000000000814e-05}, {'diff': 5.659699999999851e-05}, {'diff': 5.7028000000000634e-05}, {'diff': 5.7055999999999774e-05}, {'diff': 5.665300000000026e-05}...</msg>
<status status="PASS" starttime="20201029 18:17:16.909" endtime="20201029 18:17:16.912"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:16.916" level="INFO">${ACCURACY} = {'diff': [5.747299999999886e-05, 5.6764000000000814e-05, 5.659699999999851e-05, 5.7028000000000634e-05, 5.7055999999999774e-05, 5.665300000000026e-05, 5.680600000000299e-05, 5.7278000000000884e-05, 5....</msg>
<status status="PASS" starttime="20201029 18:17:16.913" endtime="20201029 18:17:16.917"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:16.921" level="INFO">NAME: accuracy-TIMER_SET-52-philip</msg>
<status status="PASS" starttime="20201029 18:17:16.920" endtime="20201029 18:17:16.921"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:16.923" level="INFO">VALUE: [5.747299999999886e-05, 5.6764000000000814e-05, 5.659699999999851e-05, 5.7028000000000634e-05, 5.7055999999999774e-05, 5.665300000000026e-05, 5.680600000000299e-05, 5.7278000000000884e-05, 5.712499999999815e-05, 5.659800000000145e-05, 5.7499999999998525e-05, 5.6943999999999745e-05, 5.658299999999894e-05, 5.6693999999999495e-05, 5.7152000000001285e-05, 5.7221999999999135e-05, 5.7264000000001314e-05, 5.661100000000155e-05, 5.6930000000000175e-05, 5.6764000000000814e-05, 5.668100000000287e-05, 5.7514000000001564e-05, 5.7278000000000884e-05, 5.7028000000000634e-05, 5.7485999999998955e-05, 5.665300000000026e-05, 5.693099999999965e-05, 5.7042000000000204e-05, 5.734799999999873e-05, 5.7221999999999135e-05, 5.7500000000001994e-05, 5.6957999999999315e-05, 5.7236000000002174e-05, 5.7416000000001105e-05, 5.7055999999999774e-05, 5.7236000000002174e-05, 5.7500000000001994e-05, 5.687500000000137e-05, 5.734699999999926e-05, 5.734700000000273e-05, 5.6985999999998455e-05, 5.7319999999999593e-05, 5.711100000000205e-05, 5.7528000000001134e-05, 5.680500000000005e-05, 5.661199999999755e-05, 5.729100000000098e-05, 5.7514000000001564e-05, 5.738899999999797e-05, 5.683299999999919e-05]</msg>
<status status="PASS" starttime="20201029 18:17:16.922" endtime="20201029 18:17:16.925"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:16.917" endtime="20201029 18:17:16.925"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:16.929" endtime="20201029 18:17:16.948"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:16.928" endtime="20201029 18:17:16.949"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:16.926" endtime="20201029 18:17:16.949"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:16.570" endtime="20201029 18:17:16.950"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:16.569" endtime="20201029 18:17:16.950"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:16.958" endtime="20201029 18:17:16.976"></status>
</kw>
<msg timestamp="20201029 18:17:16.976" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:16.957" endtime="20201029 18:17:16.977"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:16.979" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:16.977" endtime="20201029 18:17:16.979"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:16.980" endtime="20201029 18:17:16.982"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:16.954" endtime="20201029 18:17:16.982"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:16.952" endtime="20201029 18:17:16.983"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:16.989" endtime="20201029 18:17:17.275"></status>
</kw>
<msg timestamp="20201029 18:17:17.278" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020133542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020191597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:16.987" endtime="20201029 18:17:17.278"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:17.286" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020133542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020191597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:17.279" endtime="20201029 18:17:17.286"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:17.287" endtime="20201029 18:17:17.289"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:16.985" endtime="20201029 18:17:17.289"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:16.983" endtime="20201029 18:17:17.290"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:17.294" level="INFO">${RESULT} = [{'diff': 5.805499999999783e-05}, {'diff': 5.7958000000000315e-05}, {'diff': 5.784699999999976e-05}, {'diff': 5.8042000000001204e-05}, {'diff': 5.813900000000219e-05}, {'diff': 5.779099999999801e-05},...</msg>
<status status="PASS" starttime="20201029 18:17:17.290" endtime="20201029 18:17:17.294"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:17.299" level="INFO">${ACCURACY} = {'diff': [5.805499999999783e-05, 5.7958000000000315e-05, 5.784699999999976e-05, 5.8042000000001204e-05, 5.813900000000219e-05, 5.779099999999801e-05, 5.8222000000000135e-05, 5.790299999999804e-05, 5.8...</msg>
<status status="PASS" starttime="20201029 18:17:17.295" endtime="20201029 18:17:17.299"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:17.303" level="INFO">NAME: accuracy-TIMER_SET-53-philip</msg>
<status status="PASS" starttime="20201029 18:17:17.302" endtime="20201029 18:17:17.304"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:17.306" level="INFO">VALUE: [5.805499999999783e-05, 5.7958000000000315e-05, 5.784699999999976e-05, 5.8042000000001204e-05, 5.813900000000219e-05, 5.779099999999801e-05, 5.8222000000000135e-05, 5.790299999999804e-05, 5.845899999999682e-05, 5.8235999999999705e-05, 5.8014000000002064e-05, 5.8514000000002564e-05, 5.7944000000000745e-05, 5.806900000000087e-05, 5.78749999999989e-05, 5.838899999999897e-05, 5.7971999999999885e-05, 5.7680000000000925e-05, 5.8292000000001454e-05, 5.8041999999997734e-05, 5.762499999999865e-05, 5.833300000000069e-05, 5.8485999999999955e-05, 5.847299999999986e-05, 5.7778000000001384e-05, 5.83480000000032e-05, 5.8208000000000565e-05, 5.798699999999893e-05, 5.806900000000087e-05, 5.7902000000002035e-05, 5.8443999999997776e-05, 5.8180000000001425e-05, 5.780500000000105e-05, 5.8042000000001204e-05, 5.8429999999998206e-05, 5.811099999999958e-05, 5.7721999999999635e-05, 5.7749999999998775e-05, 5.7777999999997914e-05, 5.76810000000004e-05, 5.793100000000065e-05, 5.809800000000295e-05, 5.781900000000062e-05, 5.8278000000001884e-05, 5.809700000000001e-05, 5.8235999999999705e-05, 5.812499999999915e-05, 5.7958000000000315e-05, 5.815300000000176e-05, 5.779100000000148e-05]</msg>
<status status="PASS" starttime="20201029 18:17:17.304" endtime="20201029 18:17:17.306"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:17.300" endtime="20201029 18:17:17.307"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:17.310" endtime="20201029 18:17:17.330"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:17.309" endtime="20201029 18:17:17.331"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:17.308" endtime="20201029 18:17:17.331"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:16.951" endtime="20201029 18:17:17.331"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:16.950" endtime="20201029 18:17:17.331"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:17.340" endtime="20201029 18:17:17.357"></status>
</kw>
<msg timestamp="20201029 18:17:17.358" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:17.338" endtime="20201029 18:17:17.358"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:17.360" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:17.359" endtime="20201029 18:17:17.361"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:17.361" endtime="20201029 18:17:17.363"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:17.336" endtime="20201029 18:17:17.363"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:17.334" endtime="20201029 18:17:17.364"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:17.370" endtime="20201029 18:17:17.657"></status>
</kw>
<msg timestamp="20201029 18:17:17.660" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020251194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020310111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:17.369" endtime="20201029 18:17:17.661"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:17.668" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020251194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020310111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:17.662" endtime="20201029 18:17:17.669"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:17.670" endtime="20201029 18:17:17.672"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:17.366" endtime="20201029 18:17:17.673"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:17.364" endtime="20201029 18:17:17.674"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:17.678" level="INFO">${RESULT} = [{'diff': 5.891699999999861e-05}, {'diff': 5.9042000000002204e-05}, {'diff': 5.858299999999747e-05}, {'diff': 5.8986000000000455e-05}, {'diff': 5.915299999999929e-05}, {'diff': 5.944499999999825e-05},...</msg>
<status status="PASS" starttime="20201029 18:17:17.675" endtime="20201029 18:17:17.679"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:17.684" level="INFO">${ACCURACY} = {'diff': [5.891699999999861e-05, 5.9042000000002204e-05, 5.858299999999747e-05, 5.8986000000000455e-05, 5.915299999999929e-05, 5.944499999999825e-05, 5.8834000000000664e-05, 5.888899999999947e-05, 5.8...</msg>
<status status="PASS" starttime="20201029 18:17:17.680" endtime="20201029 18:17:17.684"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:17.689" level="INFO">NAME: accuracy-TIMER_SET-54-philip</msg>
<status status="PASS" starttime="20201029 18:17:17.688" endtime="20201029 18:17:17.690"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:17.692" level="INFO">VALUE: [5.891699999999861e-05, 5.9042000000002204e-05, 5.858299999999747e-05, 5.8986000000000455e-05, 5.915299999999929e-05, 5.944499999999825e-05, 5.8834000000000664e-05, 5.888899999999947e-05, 5.870900000000054e-05, 5.895900000000079e-05, 5.912500000000015e-05, 5.913899999999972e-05, 5.8694000000001495e-05, 5.940299999999954e-05, 5.877699999999944e-05, 5.9263999999999845e-05, 5.893100000000165e-05, 5.943100000000215e-05, 5.912500000000015e-05, 5.931900000000212e-05, 5.9000000000000025e-05, 5.920900000000104e-05, 5.947300000000086e-05, 5.9165999999999386e-05, 5.858300000000094e-05, 5.9320000000001594e-05, 5.9306000000002024e-05, 5.8680000000001925e-05, 5.8708000000001065e-05, 5.881900000000162e-05, 5.913899999999972e-05, 5.936100000000083e-05, 5.859700000000051e-05, 5.8986000000000455e-05, 5.9319999999998124e-05, 5.9486000000000955e-05, 5.886100000000033e-05, 5.891699999999861e-05, 5.893100000000165e-05, 5.872300000000011e-05, 5.8887999999999996e-05, 5.908299999999797e-05, 5.8777999999998914e-05, 5.8958000000001315e-05, 5.9180000000002425e-05, 5.8930000000002175e-05, 5.9222000000001135e-05, 5.8986000000000455e-05, 5.915299999999929e-05, 5.861100000000008e-05]</msg>
<status status="PASS" starttime="20201029 18:17:17.691" endtime="20201029 18:17:17.693"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:17.685" endtime="20201029 18:17:17.694"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:17.699" endtime="20201029 18:17:17.719"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:17.697" endtime="20201029 18:17:17.719"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:17.695" endtime="20201029 18:17:17.720"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:17.332" endtime="20201029 18:17:17.720"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:17.332" endtime="20201029 18:17:17.720"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:17.729" endtime="20201029 18:17:17.750"></status>
</kw>
<msg timestamp="20201029 18:17:17.750" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:17.727" endtime="20201029 18:17:17.751"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:17.753" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:17.751" endtime="20201029 18:17:17.753"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:17.754" endtime="20201029 18:17:17.756"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:17.725" endtime="20201029 18:17:17.756"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:17.723" endtime="20201029 18:17:17.757"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:17.763" endtime="20201029 18:17:18.048"></status>
</kw>
<msg timestamp="20201029 18:17:18.051" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022802222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022862125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:17.761" endtime="20201029 18:17:18.052"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:18.059" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022802222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022862125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:18.052" endtime="20201029 18:17:18.060"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:18.061" endtime="20201029 18:17:18.062"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:17.759" endtime="20201029 18:17:18.063"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:17.757" endtime="20201029 18:17:18.063"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:18.067" level="INFO">${RESULT} = [{'diff': 5.990300000000004e-05}, {'diff': 5.966700000000283e-05}, {'diff': 5.9986000000001455e-05}, {'diff': 6.0528000000000665e-05}, {'diff': 5.990300000000004e-05}, {'diff': 5.9764000000000345e-05}...</msg>
<status status="PASS" starttime="20201029 18:17:18.064" endtime="20201029 18:17:18.067"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:18.071" level="INFO">${ACCURACY} = {'diff': [5.990300000000004e-05, 5.966700000000283e-05, 5.9986000000001455e-05, 6.0528000000000665e-05, 5.990300000000004e-05, 5.9764000000000345e-05, 6.0041999999999734e-05, 6.0319999999999124e-05, 6...</msg>
<status status="PASS" starttime="20201029 18:17:18.068" endtime="20201029 18:17:18.071"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:18.076" level="INFO">NAME: accuracy-TIMER_SET-55-philip</msg>
<status status="PASS" starttime="20201029 18:17:18.075" endtime="20201029 18:17:18.076"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:18.078" level="INFO">VALUE: [5.990300000000004e-05, 5.966700000000283e-05, 5.9986000000001455e-05, 6.0528000000000665e-05, 5.990300000000004e-05, 5.9764000000000345e-05, 6.0041999999999734e-05, 6.0319999999999124e-05, 6.033299999999922e-05, 6.043099999999968e-05, 5.962500000000065e-05, 5.979100000000001e-05, 5.9736000000001205e-05, 6.0458000000002815e-05, 5.979100000000001e-05, 6.0264000000000845e-05, 5.9957999999998846e-05, 5.986100000000133e-05, 6.009700000000201e-05, 6.0041999999999734e-05, 5.963900000000022e-05, 6.03750000000014e-05, 6.03750000000014e-05, 6.0264000000000845e-05, 5.994500000000222e-05, 5.966699999999936e-05, 6.013900000000072e-05, 6.036099999999836e-05, 5.9764000000000345e-05, 5.9680000000002925e-05, 5.983299999999872e-05, 5.9777999999999915e-05, 5.968099999999893e-05, 6.033300000000269e-05, 5.9805999999999054e-05, 6.023700000000118e-05, 5.9999999999997555e-05, 6.0000000000001025e-05, 6.005499999999983e-05, 5.9750000000000775e-05, 6.011100000000158e-05, 5.9764000000000345e-05, 6.0194000000002995e-05, 5.9957999999998846e-05, 5.9957999999998846e-05, 6.0263999999997375e-05, 6.009699999999854e-05, 6.013900000000072e-05, 6.040300000000054e-05, 6.044499999999925e-05]</msg>
<status status="PASS" starttime="20201029 18:17:18.077" endtime="20201029 18:17:18.080"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:18.072" endtime="20201029 18:17:18.080"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:18.084" endtime="20201029 18:17:18.103"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:18.082" endtime="20201029 18:17:18.104"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:18.081" endtime="20201029 18:17:18.104"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:17.721" endtime="20201029 18:17:18.104"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:17.720" endtime="20201029 18:17:18.105"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:18.113" endtime="20201029 18:17:18.131"></status>
</kw>
<msg timestamp="20201029 18:17:18.132" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:18.112" endtime="20201029 18:17:18.132"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:18.134" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:18.133" endtime="20201029 18:17:18.134"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:18.135" endtime="20201029 18:17:18.137"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:18.109" endtime="20201029 18:17:18.137"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:18.107" endtime="20201029 18:17:18.138"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:18.144" endtime="20201029 18:17:18.431"></status>
</kw>
<msg timestamp="20201029 18:17:18.434" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0194345, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019495181, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:17:18.143" endtime="20201029 18:17:18.434"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:18.442" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0194345, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019495181, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:17:18.435" endtime="20201029 18:17:18.442"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:18.443" endtime="20201029 18:17:18.445"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:18.140" endtime="20201029 18:17:18.445"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:18.138" endtime="20201029 18:17:18.446"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:18.450" level="INFO">${RESULT} = [{'diff': 6.068099999999993e-05}, {'diff': 6.12499999999988e-05}, {'diff': 6.079100000000101e-05}, {'diff': 6.059700000000251e-05}, {'diff': 6.116600000000139e-05}, {'diff': 6.0986000000002455e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:17:18.447" endtime="20201029 18:17:18.450"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:18.455" level="INFO">${ACCURACY} = {'diff': [6.068099999999993e-05, 6.12499999999988e-05, 6.079100000000101e-05, 6.059700000000251e-05, 6.116600000000139e-05, 6.0986000000002455e-05, 6.145800000000035e-05, 6.151399999999863e-05, 6.1500...</msg>
<status status="PASS" starttime="20201029 18:17:18.451" endtime="20201029 18:17:18.455"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:18.459" level="INFO">NAME: accuracy-TIMER_SET-56-philip</msg>
<status status="PASS" starttime="20201029 18:17:18.458" endtime="20201029 18:17:18.460"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:18.462" level="INFO">VALUE: [6.068099999999993e-05, 6.12499999999988e-05, 6.079100000000101e-05, 6.059700000000251e-05, 6.116600000000139e-05, 6.0986000000002455e-05, 6.145800000000035e-05, 6.151399999999863e-05, 6.150000000000252e-05, 6.144499999999678e-05, 6.10560000000003e-05, 6.0569999999999374e-05, 6.145899999999982e-05, 6.112499999999868e-05, 6.129200000000098e-05, 6.151399999999863e-05, 6.0721999999999166e-05, 6.0971999999999416e-05, 6.063799999999828e-05, 6.116599999999792e-05, 6.10690000000004e-05, 6.109699999999954e-05, 6.0792000000000485e-05, 6.0930000000000706e-05, 6.0778000000000915e-05, 6.129200000000098e-05, 6.136100000000283e-05, 6.108399999999944e-05, 6.134699999999979e-05, 6.0848000000002234e-05, 6.0833999999999194e-05, 6.134699999999979e-05, 6.063900000000122e-05, 6.109699999999954e-05, 6.14300000000012e-05, 6.0778000000000915e-05, 6.14439999999973e-05, 6.131900000000065e-05, 6.119400000000053e-05, 6.137499999999893e-05, 6.058300000000294e-05, 6.132000000000012e-05, 6.144500000000025e-05, 6.115299999999782e-05, 6.137499999999893e-05, 6.118100000000043e-05, 6.150000000000252e-05, 6.063900000000122e-05, 6.0763999999997875e-05, 6.0971999999999416e-05]</msg>
<status status="PASS" starttime="20201029 18:17:18.460" endtime="20201029 18:17:18.462"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:18.456" endtime="20201029 18:17:18.463"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:18.467" endtime="20201029 18:17:18.486"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:18.465" endtime="20201029 18:17:18.487"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:18.464" endtime="20201029 18:17:18.487"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:18.106" endtime="20201029 18:17:18.487"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:18.105" endtime="20201029 18:17:18.487"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:18.496" endtime="20201029 18:17:18.513"></status>
</kw>
<msg timestamp="20201029 18:17:18.513" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:18.494" endtime="20201029 18:17:18.513"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:18.516" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:18.514" endtime="20201029 18:17:18.516"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:18.517" endtime="20201029 18:17:18.518"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:18.492" endtime="20201029 18:17:18.519"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:18.490" endtime="20201029 18:17:18.519"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:18.526" endtime="20201029 18:17:18.813"></status>
</kw>
<msg timestamp="20201029 18:17:18.816" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019442111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019504292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:18.524" endtime="20201029 18:17:18.816"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:18.824" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019442111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019504292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:18.817" endtime="20201029 18:17:18.824"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:18.825" endtime="20201029 18:17:18.827"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:18.522" endtime="20201029 18:17:18.827"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:18.520" endtime="20201029 18:17:18.828"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:18.832" level="INFO">${RESULT} = [{'diff': 6.218099999999796e-05}, {'diff': 6.16950000000005e-05}, {'diff': 6.222200000000067e-05}, {'diff': 6.255499999999886e-05}, {'diff': 6.24439999999983e-05}, {'diff': 6.173700000000268e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 18:17:18.828" endtime="20201029 18:17:18.832"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:18.836" level="INFO">${ACCURACY} = {'diff': [6.218099999999796e-05, 6.16950000000005e-05, 6.222200000000067e-05, 6.255499999999886e-05, 6.24439999999983e-05, 6.173700000000268e-05, 6.158300000000047e-05, 6.165199999999885e-05, 6.173599...</msg>
<status status="PASS" starttime="20201029 18:17:18.833" endtime="20201029 18:17:18.836"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:18.840" level="INFO">NAME: accuracy-TIMER_SET-57-philip</msg>
<status status="PASS" starttime="20201029 18:17:18.839" endtime="20201029 18:17:18.840"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:18.843" level="INFO">VALUE: [6.218099999999796e-05, 6.16950000000005e-05, 6.222200000000067e-05, 6.255499999999886e-05, 6.24439999999983e-05, 6.173700000000268e-05, 6.158300000000047e-05, 6.165199999999885e-05, 6.173599999999974e-05, 6.204099999999879e-05, 6.251399999999963e-05, 6.20279999999987e-05, 6.167999999999799e-05, 6.237499999999993e-05, 6.220799999999763e-05, 6.172200000000017e-05, 6.213899999999925e-05, 6.20140000000026e-05, 6.252699999999972e-05, 6.226399999999938e-05, 6.172299999999964e-05, 6.18340000000002e-05, 6.204100000000226e-05, 6.212500000000315e-05, 6.23889999999995e-05, 6.172200000000017e-05, 6.190299999999857e-05, 6.229199999999852e-05, 6.232000000000112e-05, 6.250000000000006e-05, 6.168099999999746e-05, 6.199999999999956e-05, 6.16950000000005e-05, 6.16950000000005e-05, 6.213899999999925e-05, 6.157000000000037e-05, 6.198599999999999e-05, 6.245800000000135e-05, 6.229099999999904e-05, 6.197200000000042e-05, 6.184700000000029e-05, 6.219399999999806e-05, 6.237499999999993e-05, 6.245800000000135e-05, 6.243100000000168e-05, 6.195900000000032e-05, 6.220799999999763e-05, 6.234699999999732e-05, 6.170900000000007e-05, 6.180600000000105e-05]</msg>
<status status="PASS" starttime="20201029 18:17:18.841" endtime="20201029 18:17:18.843"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:18.837" endtime="20201029 18:17:18.844"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:18.847" endtime="20201029 18:17:18.867"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:18.846" endtime="20201029 18:17:18.868"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:18.845" endtime="20201029 18:17:18.868"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:18.488" endtime="20201029 18:17:18.868"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:18.488" endtime="20201029 18:17:18.868"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:18.877" endtime="20201029 18:17:18.896"></status>
</kw>
<msg timestamp="20201029 18:17:18.896" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:18.875" endtime="20201029 18:17:18.897"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:18.899" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:18.897" endtime="20201029 18:17:18.899"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:18.900" endtime="20201029 18:17:18.902"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:18.873" endtime="20201029 18:17:18.902"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:18.871" endtime="20201029 18:17:18.903"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:18.909" endtime="20201029 18:17:19.195"></status>
</kw>
<msg timestamp="20201029 18:17:19.198" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020444903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020508292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:18.907" endtime="20201029 18:17:19.199"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:19.207" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020444903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020508292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:19.199" endtime="20201029 18:17:19.207"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:19.208" endtime="20201029 18:17:19.209"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:18.905" endtime="20201029 18:17:19.210"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:18.903" endtime="20201029 18:17:19.210"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:19.214" level="INFO">${RESULT} = [{'diff': 6.33890000000005e-05}, {'diff': 6.348700000000096e-05}, {'diff': 6.312500000000068e-05}, {'diff': 6.320799999999863e-05}, {'diff': 6.267999999999899e-05}, {'diff': 6.315200000000035e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:17:19.211" endtime="20201029 18:17:19.215"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:19.218" level="INFO">${ACCURACY} = {'diff': [6.33890000000005e-05, 6.348700000000096e-05, 6.312500000000068e-05, 6.320799999999863e-05, 6.267999999999899e-05, 6.315200000000035e-05, 6.284699999999782e-05, 6.336100000000136e-05, 6.30550...</msg>
<status status="PASS" starttime="20201029 18:17:19.215" endtime="20201029 18:17:19.219"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:19.223" level="INFO">NAME: accuracy-TIMER_SET-58-philip</msg>
<status status="PASS" starttime="20201029 18:17:19.222" endtime="20201029 18:17:19.223"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:19.225" level="INFO">VALUE: [6.33890000000005e-05, 6.348700000000096e-05, 6.312500000000068e-05, 6.320799999999863e-05, 6.267999999999899e-05, 6.315200000000035e-05, 6.284699999999782e-05, 6.336100000000136e-05, 6.305500000000283e-05, 6.293100000000218e-05, 6.2889e-05, 6.284800000000076e-05, 6.258400000000094e-05, 6.261100000000061e-05, 6.344499999999878e-05, 6.336099999999789e-05, 6.341699999999964e-05, 6.329100000000004e-05, 6.337500000000093e-05, 6.295799999999838e-05, 6.277699999999997e-05, 6.34020000000006e-05, 6.306899999999893e-05, 6.287499999999696e-05, 6.32219999999982e-05, 6.347200000000192e-05, 6.297200000000142e-05, 6.318100000000243e-05, 6.32500000000008e-05, 6.263899999999975e-05, 6.30279999999997e-05, 6.268100000000193e-05, 6.272300000000064e-05, 6.350000000000106e-05, 6.341600000000017e-05, 6.313900000000025e-05, 6.322200000000167e-05, 6.329100000000004e-05, 6.254200000000223e-05, 6.30690000000024e-05, 6.268100000000193e-05, 6.25699999999979e-05, 6.27500000000003e-05, 6.316699999999939e-05, 6.356899999999943e-05, 6.263899999999975e-05, 6.300000000000056e-05, 6.33340000000017e-05, 6.270799999999813e-05, 6.344499999999878e-05]</msg>
<status status="PASS" starttime="20201029 18:17:19.224" endtime="20201029 18:17:19.227"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:19.219" endtime="20201029 18:17:19.228"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:19.231" endtime="20201029 18:17:19.251"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:19.230" endtime="20201029 18:17:19.251"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:19.228" endtime="20201029 18:17:19.252"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:18.869" endtime="20201029 18:17:19.252"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:18.869" endtime="20201029 18:17:19.252"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:19.260" endtime="20201029 18:17:19.278"></status>
</kw>
<msg timestamp="20201029 18:17:19.279" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:19.259" endtime="20201029 18:17:19.279"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:19.281" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:19.280" endtime="20201029 18:17:19.282"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:19.282" endtime="20201029 18:17:19.284"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:19.256" endtime="20201029 18:17:19.284"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:19.254" endtime="20201029 18:17:19.285"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:19.291" endtime="20201029 18:17:19.577"></status>
</kw>
<msg timestamp="20201029 18:17:19.580" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020192583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02025675, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:17:19.290" endtime="20201029 18:17:19.581"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:19.589" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020192583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02025675, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:17:19.582" endtime="20201029 18:17:19.589"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:19.590" endtime="20201029 18:17:19.591"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:19.287" endtime="20201029 18:17:19.592"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:19.285" endtime="20201029 18:17:19.592"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:19.596" level="INFO">${RESULT} = [{'diff': 6.416700000000039e-05}, {'diff': 6.423599999999877e-05}, {'diff': 6.430600000000009e-05}, {'diff': 6.393099999999971e-05}, {'diff': 6.412500000000168e-05}, {'diff': 6.437499999999846e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:17:19.593" endtime="20201029 18:17:19.596"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:19.601" level="INFO">${ACCURACY} = {'diff': [6.416700000000039e-05, 6.423599999999877e-05, 6.430600000000009e-05, 6.393099999999971e-05, 6.412500000000168e-05, 6.437499999999846e-05, 6.437500000000193e-05, 6.411100000000211e-05, 6.4500...</msg>
<status status="PASS" starttime="20201029 18:17:19.597" endtime="20201029 18:17:19.601"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:19.606" level="INFO">NAME: accuracy-TIMER_SET-59-philip</msg>
<status status="PASS" starttime="20201029 18:17:19.605" endtime="20201029 18:17:19.606"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:19.608" level="INFO">VALUE: [6.416700000000039e-05, 6.423599999999877e-05, 6.430600000000009e-05, 6.393099999999971e-05, 6.412500000000168e-05, 6.437499999999846e-05, 6.437500000000193e-05, 6.411100000000211e-05, 6.450000000000206e-05, 6.405500000000036e-05, 6.395799999999938e-05, 6.416600000000092e-05, 6.373600000000174e-05, 6.37219999999987e-05, 6.35280000000002e-05, 6.384699999999882e-05, 6.444499999999978e-05, 6.408400000000244e-05, 6.449999999999859e-05, 6.443100000000021e-05, 6.433399999999923e-05, 6.35690000000029e-05, 6.415199999999788e-05, 6.418000000000049e-05, 6.391600000000067e-05, 6.427800000000095e-05, 6.376400000000088e-05, 6.440300000000107e-05, 6.416700000000039e-05, 6.413900000000125e-05, 6.431999999999966e-05, 6.42639999999979e-05, 6.386099999999839e-05, 6.436099999999889e-05, 6.35560000000028e-05, 6.444499999999978e-05, 6.408399999999898e-05, 6.437499999999846e-05, 6.40829999999995e-05, 6.422200000000267e-05, 6.437499999999846e-05, 6.433299999999975e-05, 6.448599999999902e-05, 6.384699999999882e-05, 6.450000000000206e-05, 6.381999999999916e-05, 6.362499999999771e-05, 6.430600000000009e-05, 6.38340000000022e-05, 6.412499999999821e-05]</msg>
<status status="PASS" starttime="20201029 18:17:19.607" endtime="20201029 18:17:19.614"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:19.602" endtime="20201029 18:17:19.615"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:19.618" endtime="20201029 18:17:19.638"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:19.617" endtime="20201029 18:17:19.638"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:19.616" endtime="20201029 18:17:19.639"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:19.253" endtime="20201029 18:17:19.639"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:19.252" endtime="20201029 18:17:19.639"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:19.648" endtime="20201029 18:17:19.665"></status>
</kw>
<msg timestamp="20201029 18:17:19.666" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:19.646" endtime="20201029 18:17:19.666"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:19.668" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:19.667" endtime="20201029 18:17:19.669"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:19.669" endtime="20201029 18:17:19.671"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:19.644" endtime="20201029 18:17:19.671"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:19.642" endtime="20201029 18:17:19.672"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:19.678" endtime="20201029 18:17:19.966"></status>
</kw>
<msg timestamp="20201029 18:17:19.969" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019427972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019492583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:19.677" endtime="20201029 18:17:19.969"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:19.977" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019427972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019492583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:19.970" endtime="20201029 18:17:19.977"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:19.978" endtime="20201029 18:17:19.980"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:19.674" endtime="20201029 18:17:19.980"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:19.673" endtime="20201029 18:17:19.981"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:19.985" level="INFO">${RESULT} = [{'diff': 6.461099999999914e-05}, {'diff': 6.455600000000034e-05}, {'diff': 6.491700000000114e-05}, {'diff': 6.549999999999959e-05}, {'diff': 6.526299999999943e-05}, {'diff': 6.469399999999709e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:17:19.982" endtime="20201029 18:17:19.985"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:19.989" level="INFO">${ACCURACY} = {'diff': [6.461099999999914e-05, 6.455600000000034e-05, 6.491700000000114e-05, 6.549999999999959e-05, 6.526299999999943e-05, 6.469399999999709e-05, 6.515200000000235e-05, 6.536099999999989e-05, 6.5347...</msg>
<status status="PASS" starttime="20201029 18:17:19.986" endtime="20201029 18:17:19.989"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:19.993" level="INFO">NAME: accuracy-TIMER_SET-60-philip</msg>
<status status="PASS" starttime="20201029 18:17:19.992" endtime="20201029 18:17:19.994"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:19.996" level="INFO">VALUE: [6.461099999999914e-05, 6.455600000000034e-05, 6.491700000000114e-05, 6.549999999999959e-05, 6.526299999999943e-05, 6.469399999999709e-05, 6.515200000000235e-05, 6.536099999999989e-05, 6.534700000000032e-05, 6.491600000000167e-05, 6.549999999999959e-05, 6.547200000000045e-05, 6.454200000000077e-05, 6.486099999999939e-05, 6.524999999999934e-05, 6.458399999999948e-05, 6.544499999999731e-05, 6.518099999999749e-05, 6.470800000000013e-05, 6.473700000000221e-05, 6.501400000000213e-05, 6.490199999999863e-05, 6.497199999999995e-05, 6.490300000000157e-05, 6.522199999999673e-05, 6.491699999999767e-05, 6.479200000000102e-05, 6.504200000000127e-05, 6.537499999999946e-05, 6.549999999999959e-05, 6.481999999999669e-05, 6.509799999999955e-05, 6.469500000000003e-05, 6.465300000000132e-05, 6.533399999999676e-05, 6.492999999999777e-05, 6.527800000000195e-05, 6.54440000000013e-05, 6.459699999999957e-05, 6.4889000000002e-05, 6.455600000000034e-05, 6.454200000000077e-05, 6.474999999999884e-05, 6.479200000000102e-05, 6.533300000000075e-05, 6.480600000000059e-05, 6.495899999999985e-05, 6.486100000000286e-05, 6.509700000000007e-05, 6.506900000000093e-05]</msg>
<status status="PASS" starttime="20201029 18:17:19.995" endtime="20201029 18:17:19.997"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:19.990" endtime="20201029 18:17:19.997"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:20.001" endtime="20201029 18:17:20.020"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:19.999" endtime="20201029 18:17:20.021"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:19.998" endtime="20201029 18:17:20.021"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:19.640" endtime="20201029 18:17:20.022"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:19.640" endtime="20201029 18:17:20.022"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:20.030" endtime="20201029 18:17:20.048"></status>
</kw>
<msg timestamp="20201029 18:17:20.048" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:20.029" endtime="20201029 18:17:20.049"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:20.051" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:20.049" endtime="20201029 18:17:20.051"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:20.052" endtime="20201029 18:17:20.054"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:20.026" endtime="20201029 18:17:20.054"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:20.024" endtime="20201029 18:17:20.055"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:20.061" endtime="20201029 18:17:20.348"></status>
</kw>
<msg timestamp="20201029 18:17:20.351" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02063225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02069825, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:17:20.059" endtime="20201029 18:17:20.351"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:20.359" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02063225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02069825, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:17:20.352" endtime="20201029 18:17:20.359"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:20.360" endtime="20201029 18:17:20.362"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:20.057" endtime="20201029 18:17:20.362"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:20.055" endtime="20201029 18:17:20.363"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:20.366" level="INFO">${RESULT} = [{'diff': 6.600000000000009e-05}, {'diff': 6.598599999999705e-05}, {'diff': 6.582000000000116e-05}, {'diff': 6.644499999999831e-05}, {'diff': 6.597300000000042e-05}, {'diff': 6.604200000000227e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:17:20.363" endtime="20201029 18:17:20.367"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:20.371" level="INFO">${ACCURACY} = {'diff': [6.600000000000009e-05, 6.598599999999705e-05, 6.582000000000116e-05, 6.644499999999831e-05, 6.597300000000042e-05, 6.604200000000227e-05, 6.577799999999898e-05, 6.591699999999867e-05, 6.5679...</msg>
<status status="PASS" starttime="20201029 18:17:20.367" endtime="20201029 18:17:20.371"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:20.375" level="INFO">NAME: accuracy-TIMER_SET-61-philip</msg>
<status status="PASS" starttime="20201029 18:17:20.374" endtime="20201029 18:17:20.375"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:20.377" level="INFO">VALUE: [6.600000000000009e-05, 6.598599999999705e-05, 6.582000000000116e-05, 6.644499999999831e-05, 6.597300000000042e-05, 6.604200000000227e-05, 6.577799999999898e-05, 6.591699999999867e-05, 6.567999999999852e-05, 6.552699999999925e-05, 6.642999999999927e-05, 6.627799999999948e-05, 6.573600000000027e-05, 6.615299999999935e-05, 6.555600000000134e-05, 6.573600000000027e-05, 6.597199999999748e-05, 6.561100000000014e-05, 6.57090000000006e-05, 6.613900000000325e-05, 6.582000000000116e-05, 6.573699999999974e-05, 6.561100000000014e-05, 6.615199999999988e-05, 6.552699999999925e-05, 6.570800000000113e-05, 6.572199999999723e-05, 6.590300000000257e-05, 6.615299999999935e-05, 6.562499999999971e-05, 6.648600000000102e-05, 6.609700000000107e-05, 6.583399999999726e-05, 6.608400000000098e-05, 6.63480000000008e-05, 6.630500000000261e-05, 6.605499999999889e-05, 6.594399999999834e-05, 6.615299999999935e-05, 6.616600000000292e-05, 6.57639999999994e-05, 6.584700000000082e-05, 6.618000000000249e-05, 6.64029999999996e-05, 6.587499999999996e-05, 6.561100000000014e-05, 6.625000000000034e-05, 6.62639999999999e-05, 6.64029999999996e-05, 6.57090000000006e-05]</msg>
<status status="PASS" starttime="20201029 18:17:20.376" endtime="20201029 18:17:20.379"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:20.371" endtime="20201029 18:17:20.380"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:20.383" endtime="20201029 18:17:20.403"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:20.382" endtime="20201029 18:17:20.403"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:20.381" endtime="20201029 18:17:20.404"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:20.023" endtime="20201029 18:17:20.404"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:20.022" endtime="20201029 18:17:20.404"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:20.413" endtime="20201029 18:17:20.430"></status>
</kw>
<msg timestamp="20201029 18:17:20.431" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:20.411" endtime="20201029 18:17:20.431"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:20.433" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:20.432" endtime="20201029 18:17:20.433"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:20.434" endtime="20201029 18:17:20.436"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:20.408" endtime="20201029 18:17:20.436"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:20.406" endtime="20201029 18:17:20.437"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:20.443" endtime="20201029 18:17:20.729"></status>
</kw>
<msg timestamp="20201029 18:17:20.733" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019624431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019691931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:20.442" endtime="20201029 18:17:20.733"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:20.741" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019624431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019691931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:20.734" endtime="20201029 18:17:20.741"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:20.742" endtime="20201029 18:17:20.744"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:20.439" endtime="20201029 18:17:20.744"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:20.437" endtime="20201029 18:17:20.745"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:20.750" level="INFO">${RESULT} = [{'diff': 6.749999999999812e-05}, {'diff': 6.69160000000002e-05}, {'diff': 6.661099999999767e-05}, {'diff': 6.72640000000009e-05}, {'diff': 6.690200000000063e-05}, {'diff': 6.667999999999952e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 18:17:20.746" endtime="20201029 18:17:20.750"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:20.755" level="INFO">${ACCURACY} = {'diff': [6.749999999999812e-05, 6.69160000000002e-05, 6.661099999999767e-05, 6.72640000000009e-05, 6.690200000000063e-05, 6.667999999999952e-05, 6.686099999999792e-05, 6.688899999999706e-05, 6.666699...</msg>
<status status="PASS" starttime="20201029 18:17:20.751" endtime="20201029 18:17:20.755"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:20.759" level="INFO">NAME: accuracy-TIMER_SET-62-philip</msg>
<status status="PASS" starttime="20201029 18:17:20.758" endtime="20201029 18:17:20.759"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:20.762" level="INFO">VALUE: [6.749999999999812e-05, 6.69160000000002e-05, 6.661099999999767e-05, 6.72640000000009e-05, 6.690200000000063e-05, 6.667999999999952e-05, 6.686099999999792e-05, 6.688899999999706e-05, 6.666699999999942e-05, 6.663900000000028e-05, 6.720799999999916e-05, 6.738900000000103e-05, 6.715300000000035e-05, 6.701400000000066e-05, 6.704100000000032e-05, 6.675000000000084e-05, 6.679100000000007e-05, 6.694400000000281e-05, 6.669399999999909e-05, 6.730599999999962e-05, 6.70969999999986e-05, 6.712500000000121e-05, 6.688900000000053e-05, 6.750000000000159e-05, 6.65969999999981e-05, 6.683400000000173e-05, 6.702800000000023e-05, 6.745799999999941e-05, 6.718000000000002e-05, 6.693099999999924e-05, 6.719399999999959e-05, 6.688800000000106e-05, 6.693099999999924e-05, 6.683299999999878e-05, 6.744400000000331e-05, 6.662499999999724e-05, 6.737499999999799e-05, 6.700000000000109e-05, 6.693099999999924e-05, 6.662500000000071e-05, 6.749999999999812e-05, 6.666699999999942e-05, 6.670799999999866e-05, 6.662500000000071e-05, 6.655499999999939e-05, 6.715300000000035e-05, 6.737499999999799e-05, 6.737499999999799e-05, 6.720800000000263e-05, 6.711100000000164e-05]</msg>
<status status="PASS" starttime="20201029 18:17:20.760" endtime="20201029 18:17:20.762"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:20.756" endtime="20201029 18:17:20.763"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:20.766" endtime="20201029 18:17:20.786"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:20.765" endtime="20201029 18:17:20.787"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:20.764" endtime="20201029 18:17:20.787"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:20.405" endtime="20201029 18:17:20.787"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:20.404" endtime="20201029 18:17:20.787"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:20.796" endtime="20201029 18:17:20.814"></status>
</kw>
<msg timestamp="20201029 18:17:20.814" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:20.794" endtime="20201029 18:17:20.815"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:20.817" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:20.815" endtime="20201029 18:17:20.817"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:20.818" endtime="20201029 18:17:20.819"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:20.792" endtime="20201029 18:17:20.820"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:20.790" endtime="20201029 18:17:20.820"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:20.827" endtime="20201029 18:17:21.115"></status>
</kw>
<msg timestamp="20201029 18:17:21.119" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019592958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019661167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:20.825" endtime="20201029 18:17:21.119"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:21.127" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019592958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019661167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:21.120" endtime="20201029 18:17:21.127"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:21.128" endtime="20201029 18:17:21.130"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:20.823" endtime="20201029 18:17:21.130"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:20.821" endtime="20201029 18:17:21.130"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:21.134" level="INFO">${RESULT} = [{'diff': 6.820899999999963e-05}, {'diff': 6.811199999999865e-05}, {'diff': 6.756999999999944e-05}, {'diff': 6.769400000000009e-05}, {'diff': 6.805500000000089e-05}, {'diff': 6.848599999999955e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:17:21.131" endtime="20201029 18:17:21.135"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:21.139" level="INFO">${ACCURACY} = {'diff': [6.820899999999963e-05, 6.811199999999865e-05, 6.756999999999944e-05, 6.769400000000009e-05, 6.805500000000089e-05, 6.848599999999955e-05, 6.798599999999905e-05, 6.852799999999826e-05, 6.7971...</msg>
<status status="PASS" starttime="20201029 18:17:21.135" endtime="20201029 18:17:21.139"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:21.143" level="INFO">NAME: accuracy-TIMER_SET-63-philip</msg>
<status status="PASS" starttime="20201029 18:17:21.142" endtime="20201029 18:17:21.143"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:21.145" level="INFO">VALUE: [6.820899999999963e-05, 6.811199999999865e-05, 6.756999999999944e-05, 6.769400000000009e-05, 6.805500000000089e-05, 6.848599999999955e-05, 6.798599999999905e-05, 6.852799999999826e-05, 6.797199999999948e-05, 6.766700000000042e-05, 6.783400000000273e-05, 6.77220000000027e-05, 6.852800000000173e-05, 6.815300000000135e-05, 6.843100000000074e-05, 6.769499999999956e-05, 6.815199999999841e-05, 6.811099999999917e-05, 6.818000000000102e-05, 6.82909999999981e-05, 6.805500000000089e-05, 6.79160000000012e-05, 6.836099999999942e-05, 6.80420000000008e-05, 6.82359999999993e-05, 6.777799999999751e-05, 6.768099999999999e-05, 6.816700000000092e-05, 6.787500000000196e-05, 6.801400000000166e-05, 6.769400000000009e-05, 6.831900000000071e-05, 6.783299999999978e-05, 6.806900000000046e-05, 6.854099999999835e-05, 6.825000000000234e-05, 6.80559999999969e-05, 6.822199999999973e-05, 6.820800000000016e-05, 6.80559999999969e-05, 6.77640000000014e-05, 6.80420000000008e-05, 6.768000000000052e-05, 6.802800000000123e-05, 6.825000000000234e-05, 6.80969999999996e-05, 6.819500000000006e-05, 6.82640000000019e-05, 6.838899999999856e-05, 6.7583000000003e-05]</msg>
<status status="PASS" starttime="20201029 18:17:21.144" endtime="20201029 18:17:21.146"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:21.139" endtime="20201029 18:17:21.147"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:21.150" endtime="20201029 18:17:21.170"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:21.149" endtime="20201029 18:17:21.171"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:21.148" endtime="20201029 18:17:21.171"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:20.788" endtime="20201029 18:17:21.171"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:20.788" endtime="20201029 18:17:21.171"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:21.180" endtime="20201029 18:17:21.200"></status>
</kw>
<msg timestamp="20201029 18:17:21.200" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:21.178" endtime="20201029 18:17:21.200"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:21.203" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:21.201" endtime="20201029 18:17:21.203"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:21.204" endtime="20201029 18:17:21.205"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:21.176" endtime="20201029 18:17:21.206"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:21.174" endtime="20201029 18:17:21.206"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:21.213" endtime="20201029 18:17:21.498"></status>
</kw>
<msg timestamp="20201029 18:17:21.501" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022917819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022986847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:21.211" endtime="20201029 18:17:21.502"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:21.509" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022917819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022986847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:21.502" endtime="20201029 18:17:21.510"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:21.511" endtime="20201029 18:17:21.512"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:21.209" endtime="20201029 18:17:21.513"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:21.207" endtime="20201029 18:17:21.513"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:21.517" level="INFO">${RESULT} = [{'diff': 6.902800000000223e-05}, {'diff': 6.87359999999998e-05}, {'diff': 6.886099999999992e-05}, {'diff': 6.926399999999944e-05}, {'diff': 6.87359999999998e-05}, {'diff': 6.858300000000053e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 18:17:21.514" endtime="20201029 18:17:21.517"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:21.521" level="INFO">${ACCURACY} = {'diff': [6.902800000000223e-05, 6.87359999999998e-05, 6.886099999999992e-05, 6.926399999999944e-05, 6.87359999999998e-05, 6.858300000000053e-05, 6.92360000000003e-05, 6.857000000000044e-05, 6.9027999...</msg>
<status status="PASS" starttime="20201029 18:17:21.518" endtime="20201029 18:17:21.521"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:21.526" level="INFO">NAME: accuracy-TIMER_SET-64-philip</msg>
<status status="PASS" starttime="20201029 18:17:21.525" endtime="20201029 18:17:21.526"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:21.528" level="INFO">VALUE: [6.902800000000223e-05, 6.87359999999998e-05, 6.886099999999992e-05, 6.926399999999944e-05, 6.87359999999998e-05, 6.858300000000053e-05, 6.92360000000003e-05, 6.857000000000044e-05, 6.902799999999876e-05, 6.94169999999987e-05, 6.869500000000056e-05, 6.866600000000195e-05, 6.902699999999928e-05, 6.917999999999855e-05, 6.918000000000202e-05, 6.948600000000055e-05, 6.884700000000035e-05, 6.90970000000006e-05, 6.934800000000033e-05, 6.906900000000146e-05, 6.922199999999726e-05, 6.906999999999747e-05, 6.937499999999999e-05, 6.945900000000088e-05, 6.94169999999987e-05, 6.869400000000109e-05, 6.874999999999937e-05, 6.87909999999986e-05, 6.866600000000195e-05, 6.862499999999924e-05, 6.866599999999848e-05, 6.937499999999999e-05, 6.891700000000167e-05, 6.948600000000055e-05, 6.868099999999752e-05, 6.922200000000073e-05, 6.948600000000055e-05, 6.88619999999994e-05, 6.898699999999952e-05, 6.879199999999808e-05, 6.908300000000103e-05, 6.94299999999988e-05, 6.912499999999974e-05, 6.861100000000314e-05, 6.931899999999824e-05, 6.890299999999863e-05, 6.861099999999967e-05, 6.895800000000091e-05, 6.891700000000167e-05, 6.945899999999741e-05]</msg>
<status status="PASS" starttime="20201029 18:17:21.527" endtime="20201029 18:17:21.530"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:21.522" endtime="20201029 18:17:21.530"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:21.534" endtime="20201029 18:17:21.553"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:21.532" endtime="20201029 18:17:21.554"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:21.531" endtime="20201029 18:17:21.554"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:21.172" endtime="20201029 18:17:21.554"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:21.172" endtime="20201029 18:17:21.555"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:21.563" endtime="20201029 18:17:21.580"></status>
</kw>
<msg timestamp="20201029 18:17:21.581" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:21.562" endtime="20201029 18:17:21.581"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:21.583" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:21.582" endtime="20201029 18:17:21.584"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:21.584" endtime="20201029 18:17:21.586"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:21.559" endtime="20201029 18:17:21.586"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:21.557" endtime="20201029 18:17:21.587"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:21.593" endtime="20201029 18:17:21.878"></status>
</kw>
<msg timestamp="20201029 18:17:21.881" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019862903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019932514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:21.592" endtime="20201029 18:17:21.881"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:21.889" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019862903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019932514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:21.882" endtime="20201029 18:17:21.890"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:21.890" endtime="20201029 18:17:21.892"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:21.589" endtime="20201029 18:17:21.893"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:21.587" endtime="20201029 18:17:21.893"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:21.897" level="INFO">${RESULT} = [{'diff': 6.96109999999972e-05}, {'diff': 7.038899999999709e-05}, {'diff': 7.000000000000062e-05}, {'diff': 6.99169999999992e-05}, {'diff': 6.968099999999852e-05}, {'diff': 7.02230000000012e-05}, {'di...</msg>
<status status="PASS" starttime="20201029 18:17:21.894" endtime="20201029 18:17:21.897"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:21.902" level="INFO">${ACCURACY} = {'diff': [6.96109999999972e-05, 7.038899999999709e-05, 7.000000000000062e-05, 6.99169999999992e-05, 6.968099999999852e-05, 7.02230000000012e-05, 7.013900000000031e-05, 6.988800000000059e-05, 7.0208000...</msg>
<status status="PASS" starttime="20201029 18:17:21.898" endtime="20201029 18:17:21.902"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:21.906" level="INFO">NAME: accuracy-TIMER_SET-65-philip</msg>
<status status="PASS" starttime="20201029 18:17:21.905" endtime="20201029 18:17:21.907"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:21.909" level="INFO">VALUE: [6.96109999999972e-05, 7.038899999999709e-05, 7.000000000000062e-05, 6.99169999999992e-05, 6.968099999999852e-05, 7.02230000000012e-05, 7.013900000000031e-05, 6.988800000000059e-05, 7.020800000000216e-05, 6.994399999999887e-05, 7.052800000000026e-05, 6.980499999999917e-05, 7.022199999999826e-05, 6.986100000000092e-05, 6.957000000000144e-05, 6.990299999999963e-05, 7.011100000000117e-05, 6.97360000000008e-05, 7.033400000000176e-05, 7.030499999999967e-05, 7.031899999999924e-05, 6.981900000000221e-05, 6.994399999999887e-05, 7.030499999999967e-05, 7.02230000000012e-05, 7.004199999999933e-05, 7.044400000000284e-05, 7.018099999999902e-05, 7.000000000000062e-05, 6.965299999999938e-05, 7.044500000000231e-05, 6.970900000000113e-05, 6.998600000000105e-05, 6.979199999999908e-05, 6.973599999999733e-05, 7.020800000000216e-05, 6.958299999999806e-05, 7.029199999999958e-05, 7.037500000000099e-05, 7.04299999999998e-05, 7.034699999999838e-05, 6.958300000000153e-05, 7.045900000000188e-05, 7.011100000000117e-05, 6.973599999999733e-05, 6.968099999999852e-05, 7.023599999999783e-05, 7.033299999999881e-05, 6.969399999999862e-05, 7.022199999999826e-05]</msg>
<status status="PASS" starttime="20201029 18:17:21.908" endtime="20201029 18:17:21.910"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:21.903" endtime="20201029 18:17:21.910"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:21.914" endtime="20201029 18:17:21.933"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:21.912" endtime="20201029 18:17:21.934"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:21.911" endtime="20201029 18:17:21.934"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:21.555" endtime="20201029 18:17:21.934"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:21.555" endtime="20201029 18:17:21.935"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:21.943" endtime="20201029 18:17:21.961"></status>
</kw>
<msg timestamp="20201029 18:17:21.961" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:21.942" endtime="20201029 18:17:21.962"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:21.964" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:21.962" endtime="20201029 18:17:21.964"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:21.965" endtime="20201029 18:17:21.966"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:21.939" endtime="20201029 18:17:21.967"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:21.937" endtime="20201029 18:17:21.967"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:21.974" endtime="20201029 18:17:22.259"></status>
</kw>
<msg timestamp="20201029 18:17:22.263" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019958264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020029, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:17:21.972" endtime="20201029 18:17:22.263"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:22.271" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019958264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020029, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:17:22.264" endtime="20201029 18:17:22.271"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:22.272" endtime="20201029 18:17:22.273"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:21.970" endtime="20201029 18:17:22.274"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:21.968" endtime="20201029 18:17:22.274"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:22.278" level="INFO">${RESULT} = [{'diff': 7.07360000000018e-05}, {'diff': 7.072299999999823e-05}, {'diff': 7.076399999999747e-05}, {'diff': 7.098599999999858e-05}, {'diff': 7.068000000000005e-05}, {'diff': 7.080500000000017e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:17:22.275" endtime="20201029 18:17:22.279"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:22.283" level="INFO">${ACCURACY} = {'diff': [7.07360000000018e-05, 7.072299999999823e-05, 7.076399999999747e-05, 7.098599999999858e-05, 7.068000000000005e-05, 7.080500000000017e-05, 7.066600000000048e-05, 7.111100000000217e-05, 7.08750...</msg>
<status status="PASS" starttime="20201029 18:17:22.279" endtime="20201029 18:17:22.283"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:22.287" level="INFO">NAME: accuracy-TIMER_SET-66-philip</msg>
<status status="PASS" starttime="20201029 18:17:22.286" endtime="20201029 18:17:22.287"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:22.289" level="INFO">VALUE: [7.07360000000018e-05, 7.072299999999823e-05, 7.076399999999747e-05, 7.098599999999858e-05, 7.068000000000005e-05, 7.080500000000017e-05, 7.066600000000048e-05, 7.111100000000217e-05, 7.087500000000149e-05, 7.084699999999888e-05, 7.05689999999995e-05, 7.055499999999992e-05, 7.109699999999913e-05, 7.151299999999874e-05, 7.097200000000248e-05, 7.102800000000076e-05, 7.127800000000101e-05, 7.09170000000002e-05, 7.088900000000106e-05, 7.063800000000134e-05, 7.079200000000008e-05, 7.148599999999908e-05, 7.115200000000141e-05, 7.145799999999994e-05, 7.126400000000144e-05, 7.109699999999913e-05, 7.148599999999908e-05, 7.12499999999984e-05, 7.100000000000162e-05, 7.084699999999888e-05, 7.118000000000055e-05, 7.097299999999848e-05, 7.12499999999984e-05, 7.120899999999916e-05, 7.05970000000021e-05, 7.12499999999984e-05, 7.077800000000051e-05, 7.14300000000008e-05, 7.080500000000017e-05, 7.112500000000174e-05, 7.122199999999926e-05, 7.147199999999951e-05, 7.080500000000017e-05, 7.108399999999904e-05, 7.109699999999913e-05, 7.076399999999747e-05, 7.116599999999751e-05, 7.090300000000063e-05, 7.086100000000192e-05, 7.068000000000005e-05]</msg>
<status status="PASS" starttime="20201029 18:17:22.288" endtime="20201029 18:17:22.290"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:22.283" endtime="20201029 18:17:22.291"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:22.294" endtime="20201029 18:17:22.315"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:22.293" endtime="20201029 18:17:22.316"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:22.292" endtime="20201029 18:17:22.316"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:21.935" endtime="20201029 18:17:22.317"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:21.935" endtime="20201029 18:17:22.317"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:22.329" endtime="20201029 18:17:22.349"></status>
</kw>
<msg timestamp="20201029 18:17:22.350" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:22.327" endtime="20201029 18:17:22.350"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:22.352" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:22.351" endtime="20201029 18:17:22.353"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:22.354" endtime="20201029 18:17:22.355"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:22.325" endtime="20201029 18:17:22.356"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:22.320" endtime="20201029 18:17:22.356"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:22.363" endtime="20201029 18:17:22.667"></status>
</kw>
<msg timestamp="20201029 18:17:22.674" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026138042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026209903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:22.361" endtime="20201029 18:17:22.674"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:22.682" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026138042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026209903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:22.675" endtime="20201029 18:17:22.682"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:22.683" endtime="20201029 18:17:22.685"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:22.358" endtime="20201029 18:17:22.685"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:22.357" endtime="20201029 18:17:22.686"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:22.690" level="INFO">${RESULT} = [{'diff': 7.186099999999945e-05}, {'diff': 7.19170000000012e-05}, {'diff': 7.166700000000095e-05}, {'diff': 7.208400000000004e-05}, {'diff': 7.158300000000006e-05}, {'diff': 7.213899999999884e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:17:22.686" endtime="20201029 18:17:22.690"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:22.694" level="INFO">${ACCURACY} = {'diff': [7.186099999999945e-05, 7.19170000000012e-05, 7.166700000000095e-05, 7.208400000000004e-05, 7.158300000000006e-05, 7.213899999999884e-05, 7.245900000000041e-05, 7.176399999999847e-05, 7.21250...</msg>
<status status="PASS" starttime="20201029 18:17:22.690" endtime="20201029 18:17:22.694"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:22.698" level="INFO">NAME: accuracy-TIMER_SET-67-philip</msg>
<status status="PASS" starttime="20201029 18:17:22.697" endtime="20201029 18:17:22.698"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:22.701" level="INFO">VALUE: [7.186099999999945e-05, 7.19170000000012e-05, 7.166700000000095e-05, 7.208400000000004e-05, 7.158300000000006e-05, 7.213899999999884e-05, 7.245900000000041e-05, 7.176399999999847e-05, 7.212500000000274e-05, 7.155500000000092e-05, 7.229099999999863e-05, 7.238899999999909e-05, 7.233299999999734e-05, 7.226400000000244e-05, 7.216700000000145e-05, 7.188899999999859e-05, 7.24309999999978e-05, 7.220800000000069e-05, 7.172199999999976e-05, 7.230600000000115e-05, 7.190300000000163e-05, 7.195899999999991e-05, 7.248600000000008e-05, 7.176400000000194e-05, 7.198599999999958e-05, 7.201399999999872e-05, 7.192999999999783e-05, 7.233300000000081e-05, 7.245800000000094e-05, 7.247200000000051e-05, 7.166699999999748e-05, 7.213899999999884e-05, 7.219500000000059e-05, 7.186099999999945e-05, 7.172299999999923e-05, 7.204100000000185e-05, 7.173599999999933e-05, 7.212499999999927e-05, 7.233300000000081e-05, 7.227799999999854e-05, 7.17499999999989e-05, 7.250000000000312e-05, 7.245800000000094e-05, 7.20560000000009e-05, 7.17499999999989e-05, 7.180600000000065e-05, 7.212499999999927e-05, 7.249999999999965e-05, 7.172299999999923e-05, 7.251399999999922e-05]</msg>
<status status="PASS" starttime="20201029 18:17:22.699" endtime="20201029 18:17:22.702"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:22.695" endtime="20201029 18:17:22.703"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:22.707" endtime="20201029 18:17:22.726"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:22.705" endtime="20201029 18:17:22.727"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:22.704" endtime="20201029 18:17:22.727"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:22.318" endtime="20201029 18:17:22.727"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:22.317" endtime="20201029 18:17:22.727"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:22.736" endtime="20201029 18:17:22.754"></status>
</kw>
<msg timestamp="20201029 18:17:22.755" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:22.735" endtime="20201029 18:17:22.755"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:22.757" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:22.756" endtime="20201029 18:17:22.758"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:22.758" endtime="20201029 18:17:22.760"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:22.732" endtime="20201029 18:17:22.760"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:22.730" endtime="20201029 18:17:22.761"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:22.767" endtime="20201029 18:17:23.054"></status>
</kw>
<msg timestamp="20201029 18:17:23.057" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019691472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019764986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:22.766" endtime="20201029 18:17:23.057"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:23.065" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019691472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019764986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:23.058" endtime="20201029 18:17:23.066"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:23.066" endtime="20201029 18:17:23.068"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:22.763" endtime="20201029 18:17:23.068"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:22.762" endtime="20201029 18:17:23.069"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:23.073" level="INFO">${RESULT} = [{'diff': 7.351399999999675e-05}, {'diff': 7.313899999999984e-05}, {'diff': 7.309700000000113e-05}, {'diff': 7.259700000000063e-05}, {'diff': 7.279199999999861e-05}, {'diff': 7.331899999999877e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:17:23.070" endtime="20201029 18:17:23.073"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:23.078" level="INFO">${ACCURACY} = {'diff': [7.351399999999675e-05, 7.313899999999984e-05, 7.309700000000113e-05, 7.259700000000063e-05, 7.279199999999861e-05, 7.331899999999877e-05, 7.276399999999947e-05, 7.334699999999791e-05, 7.3347...</msg>
<status status="PASS" starttime="20201029 18:17:23.074" endtime="20201029 18:17:23.078"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:23.083" level="INFO">NAME: accuracy-TIMER_SET-68-philip</msg>
<status status="PASS" starttime="20201029 18:17:23.081" endtime="20201029 18:17:23.083"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:23.085" level="INFO">VALUE: [7.351399999999675e-05, 7.313899999999984e-05, 7.309700000000113e-05, 7.259700000000063e-05, 7.279199999999861e-05, 7.331899999999877e-05, 7.276399999999947e-05, 7.334699999999791e-05, 7.334700000000138e-05, 7.287500000000002e-05, 7.292999999999883e-05, 7.280600000000165e-05, 7.290300000000263e-05, 7.340200000000019e-05, 7.336100000000095e-05, 7.308300000000156e-05, 7.295800000000144e-05, 7.320799999999822e-05, 7.309700000000113e-05, 7.272200000000076e-05, 7.251399999999922e-05, 7.280599999999818e-05, 7.336100000000095e-05, 7.322299999999726e-05, 7.348700000000055e-05, 7.305499999999895e-05, 7.25690000000015e-05, 7.315199999999994e-05, 7.309699999999766e-05, 7.315299999999941e-05, 7.25690000000015e-05, 7.279199999999861e-05, 7.268100000000152e-05, 7.343100000000227e-05, 7.262499999999977e-05, 7.30560000000019e-05, 7.269500000000109e-05, 7.287500000000002e-05, 7.300000000000015e-05, 7.265199999999944e-05, 7.297200000000101e-05, 7.337500000000052e-05, 7.34439999999989e-05, 7.284700000000088e-05, 7.298600000000058e-05, 7.270800000000119e-05, 7.27499999999999e-05, 7.318099999999855e-05, 7.273600000000033e-05, 7.308400000000104e-05]</msg>
<status status="PASS" starttime="20201029 18:17:23.084" endtime="20201029 18:17:23.086"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:23.079" endtime="20201029 18:17:23.086"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:23.090" endtime="20201029 18:17:23.109"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:23.088" endtime="20201029 18:17:23.110"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:23.087" endtime="20201029 18:17:23.110"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:22.728" endtime="20201029 18:17:23.111"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:22.728" endtime="20201029 18:17:23.111"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:23.119" endtime="20201029 18:17:23.137"></status>
</kw>
<msg timestamp="20201029 18:17:23.137" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:23.118" endtime="20201029 18:17:23.137"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:23.140" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:23.138" endtime="20201029 18:17:23.140"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:23.141" endtime="20201029 18:17:23.142"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:23.115" endtime="20201029 18:17:23.143"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:23.113" endtime="20201029 18:17:23.143"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:23.150" endtime="20201029 18:17:23.436"></status>
</kw>
<msg timestamp="20201029 18:17:23.439" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020030236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020104722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:23.148" endtime="20201029 18:17:23.439"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:23.447" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020030236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020104722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:23.440" endtime="20201029 18:17:23.447"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:23.448" endtime="20201029 18:17:23.450"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:23.146" endtime="20201029 18:17:23.450"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:23.144" endtime="20201029 18:17:23.451"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:23.455" level="INFO">${RESULT} = [{'diff': 7.448599999999861e-05}, {'diff': 7.384699999999841e-05}, {'diff': 7.358400000000154e-05}, {'diff': 7.420800000000269e-05}, {'diff': 7.413900000000084e-05}, {'diff': 7.383399999999832e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:17:23.452" endtime="20201029 18:17:23.455"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:23.459" level="INFO">${ACCURACY} = {'diff': [7.448599999999861e-05, 7.384699999999841e-05, 7.358400000000154e-05, 7.420800000000269e-05, 7.413900000000084e-05, 7.383399999999832e-05, 7.405599999999943e-05, 7.39309999999993e-05, 7.37089...</msg>
<status status="PASS" starttime="20201029 18:17:23.456" endtime="20201029 18:17:23.459"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:23.464" level="INFO">NAME: accuracy-TIMER_SET-69-philip</msg>
<status status="PASS" starttime="20201029 18:17:23.463" endtime="20201029 18:17:23.464"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:23.466" level="INFO">VALUE: [7.448599999999861e-05, 7.384699999999841e-05, 7.358400000000154e-05, 7.420800000000269e-05, 7.413900000000084e-05, 7.383399999999832e-05, 7.405599999999943e-05, 7.39309999999993e-05, 7.370899999999819e-05, 7.441599999999729e-05, 7.44439999999999e-05, 7.387500000000102e-05, 7.406899999999952e-05, 7.376400000000047e-05, 7.400000000000115e-05, 7.372200000000176e-05, 7.423600000000183e-05, 7.423599999999836e-05, 7.386100000000145e-05, 7.35699999999985e-05, 7.400000000000115e-05, 7.422299999999826e-05, 7.447200000000251e-05, 7.437499999999805e-05, 7.373600000000133e-05, 7.38049999999997e-05, 7.38049999999997e-05, 7.391699999999973e-05, 7.416699999999998e-05, 7.433299999999934e-05, 7.418099999999955e-05, 7.387500000000102e-05, 7.395899999999844e-05, 7.352799999999979e-05, 7.44309999999998e-05, 7.365299999999991e-05, 7.422199999999879e-05, 7.402700000000081e-05, 7.440300000000066e-05, 7.402800000000029e-05, 7.448599999999861e-05, 7.380599999999918e-05, 7.381899999999927e-05, 7.415300000000041e-05, 7.445899999999894e-05, 7.382000000000222e-05, 7.388800000000112e-05, 7.373699999999733e-05, 7.392999999999983e-05, 7.397199999999854e-05]</msg>
<status status="PASS" starttime="20201029 18:17:23.465" endtime="20201029 18:17:23.467"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:23.460" endtime="20201029 18:17:23.467"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:23.471" endtime="20201029 18:17:23.491"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:23.469" endtime="20201029 18:17:23.491"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:23.468" endtime="20201029 18:17:23.492"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:23.112" endtime="20201029 18:17:23.492"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:23.111" endtime="20201029 18:17:23.492"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:23.501" endtime="20201029 18:17:23.518"></status>
</kw>
<msg timestamp="20201029 18:17:23.518" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:23.499" endtime="20201029 18:17:23.519"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:23.521" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:23.519" endtime="20201029 18:17:23.521"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:23.522" endtime="20201029 18:17:23.524"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:23.496" endtime="20201029 18:17:23.524"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:23.494" endtime="20201029 18:17:23.525"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:23.531" endtime="20201029 18:17:23.818"></status>
</kw>
<msg timestamp="20201029 18:17:23.821" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020621361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020696028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:23.530" endtime="20201029 18:17:23.821"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:23.829" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020621361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020696028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:23.822" endtime="20201029 18:17:23.829"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:23.830" endtime="20201029 18:17:23.832"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:23.527" endtime="20201029 18:17:23.832"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:23.525" endtime="20201029 18:17:23.833"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:23.837" level="INFO">${RESULT} = [{'diff': 7.466700000000048e-05}, {'diff': 7.45699999999995e-05}, {'diff': 7.479200000000061e-05}, {'diff': 7.554099999999841e-05}, {'diff': 7.544399999999743e-05}, {'diff': 7.519399999999718e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:17:23.834" endtime="20201029 18:17:23.837"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:23.841" level="INFO">${ACCURACY} = {'diff': [7.466700000000048e-05, 7.45699999999995e-05, 7.479200000000061e-05, 7.554099999999841e-05, 7.544399999999743e-05, 7.519399999999718e-05, 7.534699999999991e-05, 7.456900000000002e-05, 7.46390...</msg>
<status status="PASS" starttime="20201029 18:17:23.838" endtime="20201029 18:17:23.841"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:23.845" level="INFO">NAME: accuracy-TIMER_SET-70-philip</msg>
<status status="PASS" starttime="20201029 18:17:23.844" endtime="20201029 18:17:23.846"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:23.848" level="INFO">VALUE: [7.466700000000048e-05, 7.45699999999995e-05, 7.479200000000061e-05, 7.554099999999841e-05, 7.544399999999743e-05, 7.519399999999718e-05, 7.534699999999991e-05, 7.456900000000002e-05, 7.463900000000134e-05, 7.465300000000091e-05, 7.505600000000043e-05, 7.46249999999983e-05, 7.480599999999671e-05, 7.465300000000091e-05, 7.533399999999982e-05, 7.515200000000194e-05, 7.493000000000083e-05, 7.536099999999948e-05, 7.462500000000177e-05, 7.540300000000166e-05, 7.46110000000022e-05, 7.481900000000027e-05, 7.515299999999794e-05, 7.544500000000037e-05, 7.491699999999726e-05, 7.54029999999982e-05, 7.491700000000073e-05, 7.524999999999893e-05, 7.529099999999816e-05, 7.523599999999936e-05, 7.526299999999903e-05, 7.468000000000058e-05, 7.53890000000021e-05, 7.479199999999714e-05, 7.47500000000019e-05, 7.515300000000141e-05, 7.487500000000202e-05, 7.536099999999948e-05, 7.46249999999983e-05, 7.501400000000172e-05, 7.490300000000116e-05, 7.545800000000047e-05, 7.472200000000276e-05, 7.522199999999979e-05, 7.498599999999911e-05, 7.533299999999687e-05, 7.470899999999919e-05, 7.527800000000154e-05, 7.552799999999832e-05, 7.470799999999972e-05]</msg>
<status status="PASS" starttime="20201029 18:17:23.846" endtime="20201029 18:17:23.849"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:23.842" endtime="20201029 18:17:23.850"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:23.854" endtime="20201029 18:17:23.873"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:23.852" endtime="20201029 18:17:23.874"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:23.851" endtime="20201029 18:17:23.874"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:23.493" endtime="20201029 18:17:23.874"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:23.492" endtime="20201029 18:17:23.874"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:23.883" endtime="20201029 18:17:23.901"></status>
</kw>
<msg timestamp="20201029 18:17:23.902" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:23.882" endtime="20201029 18:17:23.902"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:23.904" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:23.903" endtime="20201029 18:17:23.905"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:23.905" endtime="20201029 18:17:23.907"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:23.879" endtime="20201029 18:17:23.907"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:23.877" endtime="20201029 18:17:23.908"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:23.914" endtime="20201029 18:17:24.200"></status>
</kw>
<msg timestamp="20201029 18:17:24.203" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019712208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019788583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:23.913" endtime="20201029 18:17:24.203"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:24.211" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019712208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019788583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:24.204" endtime="20201029 18:17:24.211"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:24.212" endtime="20201029 18:17:24.214"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:23.910" endtime="20201029 18:17:24.214"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:23.908" endtime="20201029 18:17:24.215"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:24.219" level="INFO">${RESULT} = [{'diff': 7.637500000000005e-05}, {'diff': 7.616599999999904e-05}, {'diff': 7.620799999999775e-05}, {'diff': 7.647200000000104e-05}, {'diff': 7.598600000000011e-05}, {'diff': 7.620800000000122e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:17:24.216" endtime="20201029 18:17:24.219"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:24.224" level="INFO">${ACCURACY} = {'diff': [7.637500000000005e-05, 7.616599999999904e-05, 7.620799999999775e-05, 7.647200000000104e-05, 7.598600000000011e-05, 7.620800000000122e-05, 7.59029999999987e-05, 7.633400000000082e-05, 7.56530...</msg>
<status status="PASS" starttime="20201029 18:17:24.220" endtime="20201029 18:17:24.224"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:24.228" level="INFO">NAME: accuracy-TIMER_SET-71-philip</msg>
<status status="PASS" starttime="20201029 18:17:24.227" endtime="20201029 18:17:24.229"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:24.231" level="INFO">VALUE: [7.637500000000005e-05, 7.616599999999904e-05, 7.620799999999775e-05, 7.647200000000104e-05, 7.598600000000011e-05, 7.620800000000122e-05, 7.59029999999987e-05, 7.633400000000082e-05, 7.565300000000191e-05, 7.636100000000048e-05, 7.605599999999796e-05, 7.566600000000201e-05, 7.579199999999814e-05, 7.622200000000079e-05, 7.567999999999811e-05, 7.651399999999975e-05, 7.622199999999732e-05, 7.561099999999973e-05, 7.613899999999937e-05, 7.62639999999995e-05, 7.566700000000148e-05, 7.633299999999787e-05, 7.597199999999707e-05, 7.616699999999851e-05, 7.617999999999861e-05, 7.56249999999993e-05, 7.587499999999955e-05, 7.558299999999712e-05, 7.654199999999889e-05, 7.6457999999998e-05, 7.631900000000177e-05, 7.579200000000161e-05, 7.645900000000094e-05, 7.573600000000333e-05, 7.579100000000213e-05, 7.637500000000005e-05, 7.580600000000118e-05, 7.641600000000276e-05, 7.59440000000014e-05, 7.62639999999995e-05, 7.616599999999904e-05, 7.570800000000072e-05, 7.627799999999907e-05, 7.634700000000091e-05, 7.599999999999968e-05, 7.648600000000061e-05, 7.594500000000087e-05, 7.595900000000044e-05, 7.592999999999836e-05, 7.636100000000048e-05]</msg>
<status status="PASS" starttime="20201029 18:17:24.230" endtime="20201029 18:17:24.232"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:24.225" endtime="20201029 18:17:24.233"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:24.237" endtime="20201029 18:17:24.256"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:24.235" endtime="20201029 18:17:24.257"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:24.234" endtime="20201029 18:17:24.257"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:23.875" endtime="20201029 18:17:24.258"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:23.875" endtime="20201029 18:17:24.258"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:24.266" endtime="20201029 18:17:24.284"></status>
</kw>
<msg timestamp="20201029 18:17:24.284" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:24.265" endtime="20201029 18:17:24.284"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:24.287" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:24.285" endtime="20201029 18:17:24.287"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:24.288" endtime="20201029 18:17:24.289"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:24.262" endtime="20201029 18:17:24.290"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:24.260" endtime="20201029 18:17:24.290"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:24.297" endtime="20201029 18:17:24.584"></status>
</kw>
<msg timestamp="20201029 18:17:24.587" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019988069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02006475, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:17:24.295" endtime="20201029 18:17:24.587"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:24.595" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019988069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02006475, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:17:24.588" endtime="20201029 18:17:24.595"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:24.596" endtime="20201029 18:17:24.598"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:24.293" endtime="20201029 18:17:24.598"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:24.291" endtime="20201029 18:17:24.599"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:24.603" level="INFO">${RESULT} = [{'diff': 7.668099999999858e-05}, {'diff': 7.734699999999844e-05}, {'diff': 7.713900000000037e-05}, {'diff': 7.747300000000151e-05}, {'diff': 7.723600000000136e-05}, {'diff': 7.716600000000004e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:17:24.599" endtime="20201029 18:17:24.603"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:24.607" level="INFO">${ACCURACY} = {'diff': [7.668099999999858e-05, 7.734699999999844e-05, 7.713900000000037e-05, 7.747300000000151e-05, 7.723600000000136e-05, 7.716600000000004e-05, 7.709700000000166e-05, 7.661100000000073e-05, 7.7499...</msg>
<status status="PASS" starttime="20201029 18:17:24.604" endtime="20201029 18:17:24.607"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:24.611" level="INFO">NAME: accuracy-TIMER_SET-72-philip</msg>
<status status="PASS" starttime="20201029 18:17:24.610" endtime="20201029 18:17:24.612"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:24.614" level="INFO">VALUE: [7.668099999999858e-05, 7.734699999999844e-05, 7.713900000000037e-05, 7.747300000000151e-05, 7.723600000000136e-05, 7.716600000000004e-05, 7.709700000000166e-05, 7.661100000000073e-05, 7.749999999999771e-05, 7.693000000000283e-05, 7.722200000000179e-05, 7.656899999999855e-05, 7.725000000000093e-05, 7.680600000000218e-05, 7.747300000000151e-05, 7.727800000000007e-05, 7.704200000000286e-05, 7.66380000000004e-05, 7.69029999999997e-05, 7.736099999999801e-05, 7.706899999999905e-05, 7.658299999999812e-05, 7.688900000000012e-05, 7.688900000000012e-05, 7.656899999999855e-05, 7.704199999999939e-05, 7.745899999999847e-05, 7.718099999999908e-05, 7.720899999999822e-05, 7.682000000000175e-05, 7.709700000000166e-05, 7.70830000000021e-05, 7.73189999999993e-05, 7.681900000000227e-05, 7.7070000000002e-05, 7.668000000000258e-05, 7.68189999999988e-05, 7.668099999999858e-05, 7.715299999999994e-05, 7.691699999999926e-05, 7.694500000000187e-05, 7.72229999999978e-05, 7.700000000000068e-05, 7.663899999999987e-05, 7.716699999999951e-05, 7.750000000000118e-05, 7.752800000000032e-05, 7.752800000000032e-05, 7.702799999999982e-05, 7.66250000000003e-05]</msg>
<status status="PASS" starttime="20201029 18:17:24.612" endtime="20201029 18:17:24.620"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:24.608" endtime="20201029 18:17:24.620"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:24.624" endtime="20201029 18:17:24.644"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:24.622" endtime="20201029 18:17:24.644"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:24.621" endtime="20201029 18:17:24.644"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:24.259" endtime="20201029 18:17:24.645"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:24.258" endtime="20201029 18:17:24.645"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:24.654" endtime="20201029 18:17:24.676"></status>
</kw>
<msg timestamp="20201029 18:17:24.676" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:24.652" endtime="20201029 18:17:24.676"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:24.679" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:24.677" endtime="20201029 18:17:24.679"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:24.680" endtime="20201029 18:17:24.681"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:24.649" endtime="20201029 18:17:24.682"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:24.647" endtime="20201029 18:17:24.682"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:24.689" endtime="20201029 18:17:24.974"></status>
</kw>
<msg timestamp="20201029 18:17:24.977" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022905472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022983181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:24.687" endtime="20201029 18:17:24.977"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:24.985" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022905472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022983181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:24.978" endtime="20201029 18:17:24.986"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:24.986" endtime="20201029 18:17:24.988"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:24.685" endtime="20201029 18:17:24.989"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:24.683" endtime="20201029 18:17:24.989"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:24.993" level="INFO">${RESULT} = [{'diff': 7.770899999999872e-05}, {'diff': 7.81389999999979e-05}, {'diff': 7.822199999999932e-05}, {'diff': 7.765300000000044e-05}, {'diff': 7.794399999999993e-05}, {'diff': 7.788900000000112e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:17:24.990" endtime="20201029 18:17:24.993"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:24.997" level="INFO">${ACCURACY} = {'diff': [7.770899999999872e-05, 7.81389999999979e-05, 7.822199999999932e-05, 7.765300000000044e-05, 7.794399999999993e-05, 7.788900000000112e-05, 7.772200000000229e-05, 7.837500000000205e-05, 7.80559...</msg>
<status status="PASS" starttime="20201029 18:17:24.994" endtime="20201029 18:17:24.997"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:25.002" level="INFO">NAME: accuracy-TIMER_SET-73-philip</msg>
<status status="PASS" starttime="20201029 18:17:25.001" endtime="20201029 18:17:25.002"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:25.004" level="INFO">VALUE: [7.770899999999872e-05, 7.81389999999979e-05, 7.822199999999932e-05, 7.765300000000044e-05, 7.794399999999993e-05, 7.788900000000112e-05, 7.772200000000229e-05, 7.837500000000205e-05, 7.805599999999996e-05, 7.761100000000173e-05, 7.766700000000001e-05, 7.772199999999882e-05, 7.816700000000051e-05, 7.858300000000012e-05, 7.766600000000054e-05, 7.827699999999813e-05, 7.79579999999995e-05, 7.788900000000112e-05, 7.815300000000094e-05, 7.82640000000015e-05, 7.844399999999696e-05, 7.833299999999987e-05, 7.762499999999783e-05, 7.840199999999825e-05, 7.790199999999775e-05, 7.766700000000001e-05, 7.761099999999826e-05, 7.786099999999851e-05, 7.787499999999808e-05, 7.761100000000173e-05, 7.838900000000162e-05, 7.842999999999739e-05, 7.798599999999864e-05, 7.780600000000318e-05, 7.822199999999932e-05, 7.811099999999876e-05, 7.852800000000132e-05, 7.795899999999897e-05, 7.777800000000057e-05, 7.790200000000122e-05, 7.850000000000218e-05, 7.773599999999839e-05, 7.823600000000236e-05, 7.847199999999957e-05, 7.825000000000193e-05, 7.812499999999833e-05, 7.79449999999994e-05, 7.79030000000007e-05, 7.826399999999803e-05, 7.82640000000015e-05]</msg>
<status status="PASS" starttime="20201029 18:17:25.003" endtime="20201029 18:17:25.006"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:24.998" endtime="20201029 18:17:25.006"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:25.010" endtime="20201029 18:17:25.029"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:25.009" endtime="20201029 18:17:25.030"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:25.007" endtime="20201029 18:17:25.030"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:24.646" endtime="20201029 18:17:25.031"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:24.645" endtime="20201029 18:17:25.031"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:25.040" endtime="20201029 18:17:25.058"></status>
</kw>
<msg timestamp="20201029 18:17:25.058" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:25.038" endtime="20201029 18:17:25.058"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:25.061" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:25.059" endtime="20201029 18:17:25.061"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:25.062" endtime="20201029 18:17:25.063"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:25.035" endtime="20201029 18:17:25.064"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:25.033" endtime="20201029 18:17:25.064"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:25.071" endtime="20201029 18:17:25.356"></status>
</kw>
<msg timestamp="20201029 18:17:25.359" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020433208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0205125, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:17:25.069" endtime="20201029 18:17:25.360"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:25.367" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020433208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0205125, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:17:25.360" endtime="20201029 18:17:25.368"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:25.369" endtime="20201029 18:17:25.370"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:25.067" endtime="20201029 18:17:25.371"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:25.065" endtime="20201029 18:17:25.371"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:25.375" level="INFO">${RESULT} = [{'diff': 7.929199999999817e-05}, {'diff': 7.865299999999797e-05}, {'diff': 7.874999999999896e-05}, {'diff': 7.868100000000058e-05}, {'diff': 7.857000000000003e-05}, {'diff': 7.929200000000164e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:17:25.372" endtime="20201029 18:17:25.375"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:25.380" level="INFO">${ACCURACY} = {'diff': [7.929199999999817e-05, 7.865299999999797e-05, 7.874999999999896e-05, 7.868100000000058e-05, 7.857000000000003e-05, 7.929200000000164e-05, 7.869500000000015e-05, 7.908300000000063e-05, 7.9110...</msg>
<status status="PASS" starttime="20201029 18:17:25.376" endtime="20201029 18:17:25.380"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:25.385" level="INFO">NAME: accuracy-TIMER_SET-74-philip</msg>
<status status="PASS" starttime="20201029 18:17:25.384" endtime="20201029 18:17:25.385"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:25.387" level="INFO">VALUE: [7.929199999999817e-05, 7.865299999999797e-05, 7.874999999999896e-05, 7.868100000000058e-05, 7.857000000000003e-05, 7.929200000000164e-05, 7.869500000000015e-05, 7.908300000000063e-05, 7.911099999999976e-05, 7.944399999999796e-05, 7.905499999999802e-05, 7.893000000000136e-05, 7.873600000000286e-05, 7.898599999999964e-05, 7.91250000000028e-05, 7.918100000000108e-05, 7.936100000000001e-05, 7.940199999999925e-05, 7.895899999999997e-05, 7.86519999999985e-05, 7.880500000000124e-05, 7.936100000000001e-05, 7.86389999999984e-05, 7.949999999999971e-05, 7.870800000000025e-05, 7.93329999999974e-05, 7.89169999999978e-05, 7.905599999999749e-05, 7.922200000000032e-05, 7.873599999999939e-05, 7.905599999999749e-05, 7.905500000000149e-05, 7.884699999999994e-05, 7.908300000000063e-05, 7.905600000000096e-05, 7.940299999999872e-05, 7.947200000000057e-05, 7.926399999999903e-05, 7.870800000000025e-05, 7.868100000000058e-05, 7.866700000000101e-05, 7.874999999999896e-05, 7.895899999999997e-05, 7.893100000000083e-05, 7.9458000000001e-05, 7.920800000000075e-05, 7.899999999999921e-05, 7.94719999999971e-05, 7.949999999999971e-05, 7.897299999999954e-05]</msg>
<status status="PASS" starttime="20201029 18:17:25.386" endtime="20201029 18:17:25.388"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:25.381" endtime="20201029 18:17:25.389"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:25.392" endtime="20201029 18:17:25.412"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:25.391" endtime="20201029 18:17:25.412"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:25.390" endtime="20201029 18:17:25.413"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:25.032" endtime="20201029 18:17:25.413"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:25.031" endtime="20201029 18:17:25.413"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:25.422" endtime="20201029 18:17:25.441"></status>
</kw>
<msg timestamp="20201029 18:17:25.442" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:25.420" endtime="20201029 18:17:25.442"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:25.444" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:25.443" endtime="20201029 18:17:25.445"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:25.445" endtime="20201029 18:17:25.447"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:25.418" endtime="20201029 18:17:25.448"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:25.415" endtime="20201029 18:17:25.448"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:25.455" endtime="20201029 18:17:25.742"></status>
</kw>
<msg timestamp="20201029 18:17:25.745" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020272736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020352667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:25.453" endtime="20201029 18:17:25.745"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:25.753" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020272736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020352667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:25.746" endtime="20201029 18:17:25.754"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:25.755" endtime="20201029 18:17:25.756"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:25.450" endtime="20201029 18:17:25.757"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:25.449" endtime="20201029 18:17:25.757"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:25.761" level="INFO">${RESULT} = [{'diff': 7.993100000000183e-05}, {'diff': 8.040299999999972e-05}, {'diff': 8.056900000000256e-05}, {'diff': 8.047200000000157e-05}, {'diff': 7.981899999999834e-05}, {'diff': 8.004099999999945e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:17:25.758" endtime="20201029 18:17:25.761"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:25.765" level="INFO">${ACCURACY} = {'diff': [7.993100000000183e-05, 8.040299999999972e-05, 8.056900000000256e-05, 8.047200000000157e-05, 7.981899999999834e-05, 8.004099999999945e-05, 8.012500000000033e-05, 8.016699999999904e-05, 8.0430...</msg>
<status status="PASS" starttime="20201029 18:17:25.762" endtime="20201029 18:17:25.766"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:25.770" level="INFO">NAME: accuracy-TIMER_SET-75-philip</msg>
<status status="PASS" starttime="20201029 18:17:25.769" endtime="20201029 18:17:25.770"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:25.773" level="INFO">VALUE: [7.993100000000183e-05, 8.040299999999972e-05, 8.056900000000256e-05, 8.047200000000157e-05, 7.981899999999834e-05, 8.004099999999945e-05, 8.012500000000033e-05, 8.016699999999904e-05, 8.043099999999886e-05, 8.02230000000008e-05, 7.96389999999994e-05, 7.995900000000097e-05, 7.974999999999996e-05, 8.017999999999914e-05, 7.997200000000107e-05, 8.004099999999945e-05, 7.956899999999809e-05, 8.002799999999935e-05, 8.026400000000003e-05, 7.966699999999854e-05, 7.97779999999991e-05, 7.973600000000039e-05, 8.034699999999798e-05, 7.983400000000085e-05, 8.023700000000036e-05, 7.963799999999993e-05, 8.031999999999831e-05, 7.982000000000128e-05, 8.008299999999816e-05, 8.017999999999914e-05, 7.988899999999965e-05, 7.980500000000224e-05, 8.045799999999853e-05, 7.987500000000008e-05, 8.0458999999998e-05, 8.045900000000147e-05, 7.997300000000054e-05, 8.048600000000114e-05, 8.020900000000122e-05, 7.97909999999992e-05, 7.987500000000008e-05, 8.01389999999999e-05, 8.030499999999927e-05, 7.987500000000008e-05, 8.004200000000239e-05, 8.044499999999843e-05, 7.969499999999768e-05, 7.962499999999983e-05, 8.002799999999935e-05, 7.959800000000017e-05]</msg>
<status status="PASS" starttime="20201029 18:17:25.771" endtime="20201029 18:17:25.773"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:25.766" endtime="20201029 18:17:25.774"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:25.778" endtime="20201029 18:17:25.797"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:25.776" endtime="20201029 18:17:25.798"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:25.775" endtime="20201029 18:17:25.798"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:25.414" endtime="20201029 18:17:25.798"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:25.413" endtime="20201029 18:17:25.799"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:25.808" endtime="20201029 18:17:25.827"></status>
</kw>
<msg timestamp="20201029 18:17:25.827" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:25.806" endtime="20201029 18:17:25.827"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:25.830" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:25.828" endtime="20201029 18:17:25.830"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:25.831" endtime="20201029 18:17:25.832"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:25.803" endtime="20201029 18:17:25.833"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:25.801" endtime="20201029 18:17:25.833"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:25.840" endtime="20201029 18:17:26.127"></status>
</kw>
<msg timestamp="20201029 18:17:26.130" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020758542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020839625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:25.838" endtime="20201029 18:17:26.130"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:26.138" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020758542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020839625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:26.131" endtime="20201029 18:17:26.138"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:26.139" endtime="20201029 18:17:26.141"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:25.836" endtime="20201029 18:17:26.141"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:25.834" endtime="20201029 18:17:26.142"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:26.146" level="INFO">${RESULT} = [{'diff': 8.108299999999916e-05}, {'diff': 8.144399999999996e-05}, {'diff': 8.120899999999875e-05}, {'diff': 8.105599999999949e-05}, {'diff': 8.106999999999906e-05}, {'diff': 8.087499999999762e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:17:26.143" endtime="20201029 18:17:26.146"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:26.150" level="INFO">${ACCURACY} = {'diff': [8.108299999999916e-05, 8.144399999999996e-05, 8.120899999999875e-05, 8.105599999999949e-05, 8.106999999999906e-05, 8.087499999999762e-05, 8.068099999999911e-05, 8.090200000000075e-05, 8.1096...</msg>
<status status="PASS" starttime="20201029 18:17:26.147" endtime="20201029 18:17:26.150"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:26.154" level="INFO">NAME: accuracy-TIMER_SET-76-philip</msg>
<status status="PASS" starttime="20201029 18:17:26.153" endtime="20201029 18:17:26.155"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:26.157" level="INFO">VALUE: [8.108299999999916e-05, 8.144399999999996e-05, 8.120899999999875e-05, 8.105599999999949e-05, 8.106999999999906e-05, 8.087499999999762e-05, 8.068099999999911e-05, 8.090200000000075e-05, 8.109699999999873e-05, 8.081899999999934e-05, 8.151400000000128e-05, 8.06109999999978e-05, 8.123599999999842e-05, 8.088899999999719e-05, 8.070799999999878e-05, 8.093099999999936e-05, 8.11109999999983e-05, 8.1458999999999e-05, 8.072199999999835e-05, 8.07910000000002e-05, 8.112500000000133e-05, 8.051400000000028e-05, 8.151400000000128e-05, 8.079199999999967e-05, 8.088900000000065e-05, 8.122200000000232e-05, 8.086099999999805e-05, 8.095900000000197e-05, 8.124999999999799e-05, 8.095900000000197e-05, 8.063799999999746e-05, 8.127699999999766e-05, 8.07780000000001e-05, 8.094399999999946e-05, 8.143000000000039e-05, 8.115300000000047e-05, 8.100000000000121e-05, 8.118099999999961e-05, 8.091599999999685e-05, 8.115300000000047e-05, 8.069499999999868e-05, 8.06390000000004e-05, 8.13329999999994e-05, 8.09580000000025e-05, 8.055499999999952e-05, 8.106899999999959e-05, 8.08329999999989e-05, 8.115300000000047e-05, 8.084699999999848e-05, 8.09719999999986e-05]</msg>
<status status="PASS" starttime="20201029 18:17:26.155" endtime="20201029 18:17:26.158"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:26.151" endtime="20201029 18:17:26.159"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:26.163" endtime="20201029 18:17:26.182"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:26.161" endtime="20201029 18:17:26.183"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:26.160" endtime="20201029 18:17:26.183"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:25.800" endtime="20201029 18:17:26.183"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:25.799" endtime="20201029 18:17:26.184"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:26.192" endtime="20201029 18:17:26.211"></status>
</kw>
<msg timestamp="20201029 18:17:26.211" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:26.191" endtime="20201029 18:17:26.212"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:26.214" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:26.212" endtime="20201029 18:17:26.214"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:26.215" endtime="20201029 18:17:26.217"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:26.188" endtime="20201029 18:17:26.217"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:26.186" endtime="20201029 18:17:26.218"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:26.224" endtime="20201029 18:17:26.510"></status>
</kw>
<msg timestamp="20201029 18:17:26.513" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019870208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019951847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:26.223" endtime="20201029 18:17:26.513"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:26.521" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019870208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019951847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:26.514" endtime="20201029 18:17:26.521"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:26.522" endtime="20201029 18:17:26.524"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:26.220" endtime="20201029 18:17:26.524"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:26.218" endtime="20201029 18:17:26.525"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:26.528" level="INFO">${RESULT} = [{'diff': 8.16390000000014e-05}, {'diff': 8.16109999999988e-05}, {'diff': 8.237499999999912e-05}, {'diff': 8.240299999999826e-05}, {'diff': 8.188899999999819e-05}, {'diff': 8.169499999999968e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 18:17:26.525" endtime="20201029 18:17:26.529"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:26.533" level="INFO">${ACCURACY} = {'diff': [8.16390000000014e-05, 8.16109999999988e-05, 8.237499999999912e-05, 8.240299999999826e-05, 8.188899999999819e-05, 8.169499999999968e-05, 8.238799999999921e-05, 8.206900000000059e-05, 8.198599...</msg>
<status status="PASS" starttime="20201029 18:17:26.529" endtime="20201029 18:17:26.534"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:26.538" level="INFO">NAME: accuracy-TIMER_SET-77-philip</msg>
<status status="PASS" starttime="20201029 18:17:26.537" endtime="20201029 18:17:26.538"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:26.541" level="INFO">VALUE: [8.16390000000014e-05, 8.16109999999988e-05, 8.237499999999912e-05, 8.240299999999826e-05, 8.188899999999819e-05, 8.169499999999968e-05, 8.238799999999921e-05, 8.206900000000059e-05, 8.198599999999917e-05, 8.190199999999828e-05, 8.238900000000215e-05, 8.208300000000016e-05, 8.156900000000009e-05, 8.19719999999996e-05, 8.169400000000021e-05, 8.168100000000011e-05, 8.194499999999993e-05, 8.220899999999975e-05, 8.21390000000019e-05, 8.170799999999978e-05, 8.163800000000193e-05, 8.215199999999853e-05, 8.222199999999985e-05, 8.224999999999899e-05, 8.180600000000024e-05, 8.230599999999727e-05, 8.226400000000203e-05, 8.244500000000043e-05, 8.220899999999975e-05, 8.229200000000117e-05, 8.201399999999831e-05, 8.22910000000017e-05, 8.15269999999979e-05, 8.224999999999899e-05, 8.243000000000139e-05, 8.20970000000032e-05, 8.19170000000008e-05, 8.159699999999923e-05, 8.166700000000054e-05, 8.24720000000001e-05, 8.219500000000018e-05, 8.248599999999967e-05, 8.244399999999749e-05, 8.219500000000018e-05, 8.172199999999935e-05, 8.18329999999999e-05, 8.204099999999798e-05, 8.155500000000052e-05, 8.249999999999924e-05, 8.20970000000032e-05]</msg>
<status status="PASS" starttime="20201029 18:17:26.539" endtime="20201029 18:17:26.541"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:26.534" endtime="20201029 18:17:26.542"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:26.546" endtime="20201029 18:17:26.565"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:26.544" endtime="20201029 18:17:26.566"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:26.543" endtime="20201029 18:17:26.566"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:26.185" endtime="20201029 18:17:26.566"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:26.184" endtime="20201029 18:17:26.566"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:26.575" endtime="20201029 18:17:26.593"></status>
</kw>
<msg timestamp="20201029 18:17:26.593" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:26.573" endtime="20201029 18:17:26.593"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:26.596" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:26.594" endtime="20201029 18:17:26.596"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:26.597" endtime="20201029 18:17:26.598"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:26.571" endtime="20201029 18:17:26.599"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:26.569" endtime="20201029 18:17:26.599"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:26.606" endtime="20201029 18:17:26.893"></status>
</kw>
<msg timestamp="20201029 18:17:26.896" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019571944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019654778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:26.604" endtime="20201029 18:17:26.896"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:26.904" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019571944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019654778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:26.897" endtime="20201029 18:17:26.904"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:26.905" endtime="20201029 18:17:26.907"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:26.602" endtime="20201029 18:17:26.907"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:26.600" endtime="20201029 18:17:26.908"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:26.912" level="INFO">${RESULT} = [{'diff': 8.283400000000038e-05}, {'diff': 8.290300000000222e-05}, {'diff': 8.268100000000111e-05}, {'diff': 8.291699999999833e-05}, {'diff': 8.331900000000184e-05}, {'diff': 8.322200000000085e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:17:26.908" endtime="20201029 18:17:26.912"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:26.916" level="INFO">${ACCURACY} = {'diff': [8.283400000000038e-05, 8.290300000000222e-05, 8.268100000000111e-05, 8.291699999999833e-05, 8.331900000000184e-05, 8.322200000000085e-05, 8.348600000000067e-05, 8.258300000000066e-05, 8.2861...</msg>
<status status="PASS" starttime="20201029 18:17:26.913" endtime="20201029 18:17:26.916"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:26.920" level="INFO">NAME: accuracy-TIMER_SET-78-philip</msg>
<status status="PASS" starttime="20201029 18:17:26.919" endtime="20201029 18:17:26.921"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:26.923" level="INFO">VALUE: [8.283400000000038e-05, 8.290300000000222e-05, 8.268100000000111e-05, 8.291699999999833e-05, 8.331900000000184e-05, 8.322200000000085e-05, 8.348600000000067e-05, 8.258300000000066e-05, 8.286100000000005e-05, 8.255600000000099e-05, 8.324999999999999e-05, 8.299999999999974e-05, 8.337500000000012e-05, 8.337500000000012e-05, 8.350000000000024e-05, 8.344400000000196e-05, 8.258299999999719e-05, 8.331900000000184e-05, 8.268000000000164e-05, 8.290299999999876e-05, 8.292999999999842e-05, 8.274999999999949e-05, 8.309700000000073e-05, 8.313899999999944e-05, 8.333400000000088e-05, 8.282000000000081e-05, 8.280500000000177e-05, 8.26109999999998e-05, 8.276299999999959e-05, 8.334700000000098e-05, 8.268099999999765e-05, 8.323600000000042e-05, 8.258400000000013e-05, 8.26109999999998e-05, 8.344500000000143e-05, 8.316699999999858e-05, 8.291599999999885e-05, 8.320900000000075e-05, 8.262499999999937e-05, 8.258300000000066e-05, 8.336100000000055e-05, 8.29720000000006e-05, 8.28330000000009e-05, 8.324999999999999e-05, 8.274999999999949e-05, 8.31110000000003e-05, 8.330600000000174e-05, 8.347300000000057e-05, 8.265300000000197e-05, 8.318100000000161e-05]</msg>
<status status="PASS" starttime="20201029 18:17:26.921" endtime="20201029 18:17:26.924"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:26.917" endtime="20201029 18:17:26.924"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:26.928" endtime="20201029 18:17:26.947"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:26.926" endtime="20201029 18:17:26.948"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:26.925" endtime="20201029 18:17:26.948"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:26.567" endtime="20201029 18:17:26.949"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:26.567" endtime="20201029 18:17:26.949"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:26.957" endtime="20201029 18:17:26.978"></status>
</kw>
<msg timestamp="20201029 18:17:26.978" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:26.956" endtime="20201029 18:17:26.979"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:26.981" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:26.979" endtime="20201029 18:17:26.981"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:26.982" endtime="20201029 18:17:26.984"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:26.953" endtime="20201029 18:17:26.984"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:26.951" endtime="20201029 18:17:26.985"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:26.991" endtime="20201029 18:17:27.277"></status>
</kw>
<msg timestamp="20201029 18:17:27.280" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020635167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020719611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:26.990" endtime="20201029 18:17:27.280"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:27.289" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020635167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020719611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:27.281" endtime="20201029 18:17:27.289"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:27.290" endtime="20201029 18:17:27.292"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:26.987" endtime="20201029 18:17:27.292"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:26.985" endtime="20201029 18:17:27.293"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:27.297" level="INFO">${RESULT} = [{'diff': 8.444399999999949e-05}, {'diff': 8.43469999999985e-05}, {'diff': 8.41660000000001e-05}, {'diff': 8.426399999999709e-05}, {'diff': 8.397199999999813e-05}, {'diff': 8.39309999999989e-05}, {'di...</msg>
<status status="PASS" starttime="20201029 18:17:27.294" endtime="20201029 18:17:27.297"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:27.301" level="INFO">${ACCURACY} = {'diff': [8.444399999999949e-05, 8.43469999999985e-05, 8.41660000000001e-05, 8.426399999999709e-05, 8.397199999999813e-05, 8.39309999999989e-05, 8.380599999999877e-05, 8.373600000000092e-05, 8.3986000...</msg>
<status status="PASS" starttime="20201029 18:17:27.298" endtime="20201029 18:17:27.301"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:27.305" level="INFO">NAME: accuracy-TIMER_SET-79-philip</msg>
<status status="PASS" starttime="20201029 18:17:27.304" endtime="20201029 18:17:27.306"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:27.308" level="INFO">VALUE: [8.444399999999949e-05, 8.43469999999985e-05, 8.41660000000001e-05, 8.426399999999709e-05, 8.397199999999813e-05, 8.39309999999989e-05, 8.380599999999877e-05, 8.373600000000092e-05, 8.398600000000117e-05, 8.363899999999994e-05, 8.451299999999787e-05, 8.454100000000048e-05, 8.434700000000198e-05, 8.356899999999862e-05, 8.423600000000142e-05, 8.352799999999938e-05, 8.390299999999976e-05, 8.390300000000323e-05, 8.405599999999902e-05, 8.440299999999679e-05, 8.413900000000044e-05, 8.393100000000236e-05, 8.41660000000001e-05, 8.363899999999994e-05, 8.370800000000178e-05, 8.38049999999993e-05, 8.42919999999997e-05, 8.361099999999733e-05, 8.419399999999924e-05, 8.437500000000112e-05, 8.366699999999908e-05, 8.448600000000167e-05, 8.375000000000049e-05, 8.405599999999902e-05, 8.400000000000074e-05, 8.369399999999874e-05, 8.41660000000001e-05, 8.388900000000019e-05, 8.370800000000178e-05, 8.363899999999994e-05, 8.418099999999915e-05, 8.413900000000044e-05, 8.452800000000038e-05, 8.3846999999998e-05, 8.387500000000062e-05, 8.454199999999995e-05, 8.420799999999881e-05, 8.43049999999998e-05, 8.356899999999862e-05, 8.390299999999976e-05]</msg>
<status status="PASS" starttime="20201029 18:17:27.307" endtime="20201029 18:17:27.310"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:27.302" endtime="20201029 18:17:27.310"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:27.314" endtime="20201029 18:17:27.333"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:27.312" endtime="20201029 18:17:27.334"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:27.311" endtime="20201029 18:17:27.334"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:26.950" endtime="20201029 18:17:27.334"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:26.949" endtime="20201029 18:17:27.335"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:27.343" endtime="20201029 18:17:27.363"></status>
</kw>
<msg timestamp="20201029 18:17:27.363" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:27.342" endtime="20201029 18:17:27.363"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:27.366" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:27.364" endtime="20201029 18:17:27.366"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:27.367" endtime="20201029 18:17:27.368"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:27.339" endtime="20201029 18:17:27.369"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:27.337" endtime="20201029 18:17:27.369"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:27.376" endtime="20201029 18:17:27.661"></status>
</kw>
<msg timestamp="20201029 18:17:27.664" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01976275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019847611, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:17:27.374" endtime="20201029 18:17:27.665"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:27.672" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01976275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019847611, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:17:27.665" endtime="20201029 18:17:27.673"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:27.674" endtime="20201029 18:17:27.675"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:27.372" endtime="20201029 18:17:27.676"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:27.370" endtime="20201029 18:17:27.676"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:27.680" level="INFO">${RESULT} = [{'diff': 8.486100000000205e-05}, {'diff': 8.473600000000192e-05}, {'diff': 8.468099999999965e-05}, {'diff': 8.463900000000094e-05}, {'diff': 8.488899999999772e-05}, {'diff': 8.523600000000242e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:17:27.677" endtime="20201029 18:17:27.680"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:27.685" level="INFO">${ACCURACY} = {'diff': [8.486100000000205e-05, 8.473600000000192e-05, 8.468099999999965e-05, 8.463900000000094e-05, 8.488899999999772e-05, 8.523600000000242e-05, 8.551400000000181e-05, 8.511099999999883e-05, 8.5277...</msg>
<status status="PASS" starttime="20201029 18:17:27.681" endtime="20201029 18:17:27.685"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:27.690" level="INFO">NAME: accuracy-TIMER_SET-80-philip</msg>
<status status="PASS" starttime="20201029 18:17:27.689" endtime="20201029 18:17:27.690"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:27.692" level="INFO">VALUE: [8.486100000000205e-05, 8.473600000000192e-05, 8.468099999999965e-05, 8.463900000000094e-05, 8.488899999999772e-05, 8.523600000000242e-05, 8.551400000000181e-05, 8.511099999999883e-05, 8.527700000000166e-05, 8.545800000000006e-05, 8.556899999999715e-05, 8.458300000000266e-05, 8.47920000000002e-05, 8.474999999999802e-05, 8.472200000000235e-05, 8.5153000000001e-05, 8.480599999999977e-05, 8.480599999999977e-05, 8.46660000000006e-05, 8.465199999999756e-05, 8.472200000000235e-05, 8.505500000000055e-05, 8.543000000000092e-05, 8.455500000000005e-05, 8.462500000000137e-05, 8.4846999999999e-05, 8.500000000000174e-05, 8.495899999999904e-05, 8.5153000000001e-05, 8.469499999999922e-05, 8.458399999999866e-05, 8.523599999999895e-05, 8.515199999999806e-05, 8.544400000000049e-05, 8.506900000000012e-05, 8.555600000000052e-05, 8.480600000000324e-05, 8.5153000000001e-05, 8.475000000000149e-05, 8.508399999999916e-05, 8.549999999999877e-05, 8.472300000000182e-05, 8.470800000000278e-05, 8.490200000000128e-05, 8.499999999999827e-05, 8.513900000000144e-05, 8.508300000000316e-05, 8.509699999999926e-05, 8.530600000000027e-05, 8.522199999999938e-05]</msg>
<status status="PASS" starttime="20201029 18:17:27.691" endtime="20201029 18:17:27.693"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:27.686" endtime="20201029 18:17:27.694"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:27.697" endtime="20201029 18:17:27.717"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:27.696" endtime="20201029 18:17:27.717"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:27.695" endtime="20201029 18:17:27.718"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:27.335" endtime="20201029 18:17:27.718"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:27.335" endtime="20201029 18:17:27.718"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:27.727" endtime="20201029 18:17:27.745"></status>
</kw>
<msg timestamp="20201029 18:17:27.746" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:27.725" endtime="20201029 18:17:27.746"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:27.748" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:27.747" endtime="20201029 18:17:27.749"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:27.749" endtime="20201029 18:17:27.751"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:27.723" endtime="20201029 18:17:27.752"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:27.721" endtime="20201029 18:17:27.752"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:27.758" endtime="20201029 18:17:28.045"></status>
</kw>
<msg timestamp="20201029 18:17:28.048" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020452, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02053775, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201029 18:17:27.757" endtime="20201029 18:17:28.049"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:28.057" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020452, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02053775, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201029 18:17:28.050" endtime="20201029 18:17:28.057"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:28.058" endtime="20201029 18:17:28.059"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:27.754" endtime="20201029 18:17:28.060"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:27.753" endtime="20201029 18:17:28.060"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:28.064" level="INFO">${RESULT} = [{'diff': 8.574999999999902e-05}, {'diff': 8.555499999999758e-05}, {'diff': 8.574999999999902e-05}, {'diff': 8.574999999999902e-05}, {'diff': 8.632000000000084e-05}, {'diff': 8.568000000000117e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:17:28.061" endtime="20201029 18:17:28.065"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:28.069" level="INFO">${ACCURACY} = {'diff': [8.574999999999902e-05, 8.555499999999758e-05, 8.574999999999902e-05, 8.574999999999902e-05, 8.632000000000084e-05, 8.568000000000117e-05, 8.620900000000029e-05, 8.649999999999977e-05, 8.5972...</msg>
<status status="PASS" starttime="20201029 18:17:28.065" endtime="20201029 18:17:28.069"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:28.073" level="INFO">NAME: accuracy-TIMER_SET-81-philip</msg>
<status status="PASS" starttime="20201029 18:17:28.072" endtime="20201029 18:17:28.073"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:28.076" level="INFO">VALUE: [8.574999999999902e-05, 8.555499999999758e-05, 8.574999999999902e-05, 8.574999999999902e-05, 8.632000000000084e-05, 8.568000000000117e-05, 8.620900000000029e-05, 8.649999999999977e-05, 8.597200000000013e-05, 8.590200000000228e-05, 8.61249999999994e-05, 8.57920000000012e-05, 8.637499999999965e-05, 8.561099999999933e-05, 8.644500000000097e-05, 8.633400000000041e-05, 8.595900000000004e-05, 8.563900000000194e-05, 8.616599999999863e-05, 8.558300000000019e-05, 8.604100000000198e-05, 8.611099999999983e-05, 8.563900000000194e-05, 8.654200000000195e-05, 8.609700000000026e-05, 8.633299999999747e-05, 8.637500000000312e-05, 8.572299999999936e-05, 8.611099999999983e-05, 8.648699999999968e-05, 8.568100000000065e-05, 8.61799999999982e-05, 8.56530000000015e-05, 8.59859999999997e-05, 8.647200000000063e-05, 8.568000000000117e-05, 8.619500000000072e-05, 8.638899999999922e-05, 8.616700000000158e-05, 8.613899999999897e-05, 8.604099999999851e-05, 8.645800000000106e-05, 8.583300000000044e-05, 8.574999999999902e-05, 8.601400000000231e-05, 8.626400000000256e-05, 8.611099999999983e-05, 8.645799999999759e-05, 8.633300000000094e-05, 8.607000000000059e-05]</msg>
<status status="PASS" starttime="20201029 18:17:28.074" endtime="20201029 18:17:28.076"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:28.069" endtime="20201029 18:17:28.077"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:28.081" endtime="20201029 18:17:28.100"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:28.079" endtime="20201029 18:17:28.101"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:28.078" endtime="20201029 18:17:28.101"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:27.719" endtime="20201029 18:17:28.101"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:27.718" endtime="20201029 18:17:28.102"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:28.110" endtime="20201029 18:17:28.133"></status>
</kw>
<msg timestamp="20201029 18:17:28.133" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:28.109" endtime="20201029 18:17:28.133"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:28.136" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:28.134" endtime="20201029 18:17:28.136"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:28.137" endtime="20201029 18:17:28.138"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:28.106" endtime="20201029 18:17:28.139"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:28.104" endtime="20201029 18:17:28.139"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:28.146" endtime="20201029 18:17:28.453"></status>
</kw>
<msg timestamp="20201029 18:17:28.456" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023404125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023490694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:28.144" endtime="20201029 18:17:28.456"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:28.464" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023404125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023490694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:28.457" endtime="20201029 18:17:28.465"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:28.466" endtime="20201029 18:17:28.467"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:28.142" endtime="20201029 18:17:28.468"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:28.140" endtime="20201029 18:17:28.468"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:28.472" level="INFO">${RESULT} = [{'diff': 8.656899999999815e-05}, {'diff': 8.661100000000033e-05}, {'diff': 8.66799999999987e-05}, {'diff': 8.72920000000027e-05}, {'diff': 8.690299999999929e-05}, {'diff': 8.697200000000113e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 18:17:28.469" endtime="20201029 18:17:28.473"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:28.477" level="INFO">${ACCURACY} = {'diff': [8.656899999999815e-05, 8.661100000000033e-05, 8.66799999999987e-05, 8.72920000000027e-05, 8.690299999999929e-05, 8.697200000000113e-05, 8.666700000000208e-05, 8.677800000000263e-05, 8.697300...</msg>
<status status="PASS" starttime="20201029 18:17:28.473" endtime="20201029 18:17:28.477"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:28.482" level="INFO">NAME: accuracy-TIMER_SET-82-philip</msg>
<status status="PASS" starttime="20201029 18:17:28.480" endtime="20201029 18:17:28.482"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:28.484" level="INFO">VALUE: [8.656899999999815e-05, 8.661100000000033e-05, 8.66799999999987e-05, 8.72920000000027e-05, 8.690299999999929e-05, 8.697200000000113e-05, 8.666700000000208e-05, 8.677800000000263e-05, 8.69730000000006e-05, 8.732000000000184e-05, 8.738800000000074e-05, 8.66249999999999e-05, 8.694400000000199e-05, 8.673600000000045e-05, 8.704199999999898e-05, 8.701399999999984e-05, 8.690300000000276e-05, 8.74860000000012e-05, 8.723599999999748e-05, 8.677799999999916e-05, 8.705600000000202e-05, 8.71669999999991e-05, 8.679099999999926e-05, 8.74999999999973e-05, 8.681900000000187e-05, 8.695899999999757e-05, 8.722200000000138e-05, 8.698599999999723e-05, 8.677799999999916e-05, 8.715299999999954e-05, 8.690299999999929e-05, 8.745900000000154e-05, 8.683300000000144e-05, 8.672199999999741e-05, 8.690200000000328e-05, 8.733300000000194e-05, 8.665299999999904e-05, 8.665299999999904e-05, 8.672200000000088e-05, 8.668099999999818e-05, 8.726400000000009e-05, 8.705599999999855e-05, 8.733299999999847e-05, 8.719500000000172e-05, 8.691599999999938e-05, 8.687500000000015e-05, 8.716599999999963e-05, 8.698599999999723e-05, 8.715299999999954e-05, 8.719399999999877e-05]</msg>
<status status="PASS" starttime="20201029 18:17:28.483" endtime="20201029 18:17:28.486"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:28.478" endtime="20201029 18:17:28.486"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:28.490" endtime="20201029 18:17:28.510"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:28.489" endtime="20201029 18:17:28.511"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:28.487" endtime="20201029 18:17:28.511"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:28.102" endtime="20201029 18:17:28.511"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:28.102" endtime="20201029 18:17:28.511"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:28.520" endtime="20201029 18:17:28.539"></status>
</kw>
<msg timestamp="20201029 18:17:28.540" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:28.519" endtime="20201029 18:17:28.540"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:28.542" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:28.541" endtime="20201029 18:17:28.543"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:28.543" endtime="20201029 18:17:28.545"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:28.516" endtime="20201029 18:17:28.546"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:28.514" endtime="20201029 18:17:28.546"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:28.553" endtime="20201029 18:17:28.839"></status>
</kw>
<msg timestamp="20201029 18:17:28.842" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020014819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020102514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:28.551" endtime="20201029 18:17:28.842"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:28.850" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020014819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020102514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:28.843" endtime="20201029 18:17:28.851"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:28.852" endtime="20201029 18:17:28.853"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:28.548" endtime="20201029 18:17:28.854"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:28.547" endtime="20201029 18:17:28.854"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:28.858" level="INFO">${RESULT} = [{'diff': 8.769499999999875e-05}, {'diff': 8.838899999999775e-05}, {'diff': 8.791699999999986e-05}, {'diff': 8.829200000000023e-05}, {'diff': 8.800000000000127e-05}, {'diff': 8.762499999999743e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:17:28.855" endtime="20201029 18:17:28.859"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:28.864" level="INFO">${ACCURACY} = {'diff': [8.769499999999875e-05, 8.838899999999775e-05, 8.791699999999986e-05, 8.829200000000023e-05, 8.800000000000127e-05, 8.762499999999743e-05, 8.795799999999909e-05, 8.816600000000063e-05, 8.8291...</msg>
<status status="PASS" starttime="20201029 18:17:28.859" endtime="20201029 18:17:28.864"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:28.868" level="INFO">NAME: accuracy-TIMER_SET-83-philip</msg>
<status status="PASS" starttime="20201029 18:17:28.867" endtime="20201029 18:17:28.869"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:28.871" level="INFO">VALUE: [8.769499999999875e-05, 8.838899999999775e-05, 8.791699999999986e-05, 8.829200000000023e-05, 8.800000000000127e-05, 8.762499999999743e-05, 8.795799999999909e-05, 8.816600000000063e-05, 8.829199999999676e-05, 8.76799999999997e-05, 8.818099999999968e-05, 8.801399999999737e-05, 8.78059999999993e-05, 8.83059999999998e-05, 8.783399999999844e-05, 8.797299999999814e-05, 8.81800000000002e-05, 8.791600000000038e-05, 8.790200000000081e-05, 8.801400000000084e-05, 8.763900000000047e-05, 8.840300000000079e-05, 8.851399999999787e-05, 8.765300000000004e-05, 8.792999999999995e-05, 8.811100000000183e-05, 8.768099999999918e-05, 8.844400000000002e-05, 8.765200000000056e-05, 8.852800000000091e-05, 8.836100000000208e-05, 8.826400000000109e-05, 8.83059999999998e-05, 8.763900000000047e-05, 8.825000000000152e-05, 8.816599999999716e-05, 8.822300000000186e-05, 8.761099999999786e-05, 8.822300000000186e-05, 8.851399999999787e-05, 8.823600000000195e-05, 8.811100000000183e-05, 8.772199999999841e-05, 8.819399999999977e-05, 8.776400000000059e-05, 8.851400000000134e-05, 8.843099999999993e-05, 8.784799999999801e-05, 8.780499999999983e-05, 8.843099999999993e-05]</msg>
<status status="PASS" starttime="20201029 18:17:28.869" endtime="20201029 18:17:28.872"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:28.865" endtime="20201029 18:17:28.872"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:28.876" endtime="20201029 18:17:28.896"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:28.874" endtime="20201029 18:17:28.896"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:28.873" endtime="20201029 18:17:28.896"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:28.512" endtime="20201029 18:17:28.897"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:28.512" endtime="20201029 18:17:28.897"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:28.906" endtime="20201029 18:17:28.924"></status>
</kw>
<msg timestamp="20201029 18:17:28.925" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:28.904" endtime="20201029 18:17:28.925"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:28.927" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:28.926" endtime="20201029 18:17:28.928"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:28.928" endtime="20201029 18:17:28.930"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:28.902" endtime="20201029 18:17:28.931"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:28.899" endtime="20201029 18:17:28.931"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:28.938" endtime="20201029 18:17:29.226"></status>
</kw>
<msg timestamp="20201029 18:17:29.229" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020163694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020252333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:28.936" endtime="20201029 18:17:29.229"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:29.238" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020163694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020252333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:29.230" endtime="20201029 18:17:29.238"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:29.239" endtime="20201029 18:17:29.241"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:28.934" endtime="20201029 18:17:29.241"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:28.932" endtime="20201029 18:17:29.242"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:29.246" level="INFO">${RESULT} = [{'diff': 8.863900000000147e-05}, {'diff': 8.894400000000052e-05}, {'diff': 8.879099999999779e-05}, {'diff': 8.94999999999993e-05}, {'diff': 8.933300000000047e-05}, {'diff': 8.933300000000047e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:17:29.243" endtime="20201029 18:17:29.246"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:29.250" level="INFO">${ACCURACY} = {'diff': [8.863900000000147e-05, 8.894400000000052e-05, 8.879099999999779e-05, 8.94999999999993e-05, 8.933300000000047e-05, 8.933300000000047e-05, 8.872199999999941e-05, 8.877799999999769e-05, 8.87089...</msg>
<status status="PASS" starttime="20201029 18:17:29.247" endtime="20201029 18:17:29.250"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:29.255" level="INFO">NAME: accuracy-TIMER_SET-84-philip</msg>
<status status="PASS" starttime="20201029 18:17:29.254" endtime="20201029 18:17:29.255"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:29.257" level="INFO">VALUE: [8.863900000000147e-05, 8.894400000000052e-05, 8.879099999999779e-05, 8.94999999999993e-05, 8.933300000000047e-05, 8.933300000000047e-05, 8.872199999999941e-05, 8.877799999999769e-05, 8.870899999999932e-05, 8.940299999999832e-05, 8.916599999999816e-05, 8.94999999999993e-05, 8.888899999999825e-05, 8.923599999999948e-05, 8.908300000000022e-05, 8.872199999999941e-05, 8.904199999999751e-05, 8.877800000000116e-05, 8.920800000000034e-05, 8.875000000000202e-05, 8.859799999999876e-05, 8.905600000000055e-05, 8.898599999999923e-05, 8.919400000000077e-05, 8.856900000000015e-05, 8.902799999999794e-05, 8.890299999999782e-05, 8.907000000000012e-05, 8.943100000000093e-05, 8.856999999999962e-05, 8.922299999999939e-05, 8.947200000000016e-05, 8.94999999999993e-05, 8.904200000000098e-05, 8.901300000000237e-05, 8.934700000000004e-05, 8.891600000000138e-05, 8.937499999999918e-05, 8.922199999999991e-05, 8.905500000000108e-05, 8.918100000000068e-05, 8.940300000000179e-05, 8.869400000000027e-05, 8.907000000000012e-05, 8.930500000000133e-05, 8.866600000000113e-05, 8.861099999999886e-05, 8.908300000000022e-05, 8.923600000000295e-05, 8.909699999999979e-05]</msg>
<status status="PASS" starttime="20201029 18:17:29.256" endtime="20201029 18:17:29.258"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:29.251" endtime="20201029 18:17:29.259"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:29.263" endtime="20201029 18:17:29.282"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:29.261" endtime="20201029 18:17:29.283"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:29.260" endtime="20201029 18:17:29.283"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:28.898" endtime="20201029 18:17:29.284"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:28.897" endtime="20201029 18:17:29.284"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:29.293" endtime="20201029 18:17:29.313"></status>
</kw>
<msg timestamp="20201029 18:17:29.314" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:29.291" endtime="20201029 18:17:29.314"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:29.316" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:29.315" endtime="20201029 18:17:29.317"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:29.318" endtime="20201029 18:17:29.320"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:29.289" endtime="20201029 18:17:29.320"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:29.286" endtime="20201029 18:17:29.321"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:29.327" endtime="20201029 18:17:29.614"></status>
</kw>
<msg timestamp="20201029 18:17:29.617" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0213025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021392625, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:17:29.326" endtime="20201029 18:17:29.617"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:29.625" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0213025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021392625, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:17:29.618" endtime="20201029 18:17:29.626"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:29.626" endtime="20201029 18:17:29.628"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:29.323" endtime="20201029 18:17:29.629"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:29.321" endtime="20201029 18:17:29.629"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:29.633" level="INFO">${RESULT} = [{'diff': 9.012499999999993e-05}, {'diff': 9.025000000000005e-05}, {'diff': 8.983400000000044e-05}, {'diff': 8.963900000000247e-05}, {'diff': 8.977799999999869e-05}, {'diff': 9.030500000000233e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:17:29.630" endtime="20201029 18:17:29.634"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:29.638" level="INFO">${ACCURACY} = {'diff': [9.012499999999993e-05, 9.025000000000005e-05, 8.983400000000044e-05, 8.963900000000247e-05, 8.977799999999869e-05, 9.030500000000233e-05, 9.03190000000019e-05, 8.986100000000011e-05, 9.00139...</msg>
<status status="PASS" starttime="20201029 18:17:29.634" endtime="20201029 18:17:29.638"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:29.642" level="INFO">NAME: accuracy-TIMER_SET-85-philip</msg>
<status status="PASS" starttime="20201029 18:17:29.641" endtime="20201029 18:17:29.643"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:29.645" level="INFO">VALUE: [9.012499999999993e-05, 9.025000000000005e-05, 8.983400000000044e-05, 8.963900000000247e-05, 8.977799999999869e-05, 9.030500000000233e-05, 9.03190000000019e-05, 8.986100000000011e-05, 9.001399999999937e-05, 9.045800000000159e-05, 9.019500000000125e-05, 9.027799999999919e-05, 8.986100000000011e-05, 8.993100000000143e-05, 8.974999999999955e-05, 8.990300000000229e-05, 9.006999999999765e-05, 8.979100000000226e-05, 8.98190000000014e-05, 8.995800000000109e-05, 8.976399999999912e-05, 9.047200000000116e-05, 9.008299999999775e-05, 8.963900000000247e-05, 9.01389999999995e-05, 9.022300000000039e-05, 8.994399999999805e-05, 8.979099999999879e-05, 9.033300000000147e-05, 8.959700000000029e-05, 9.006900000000165e-05, 8.96670000000016e-05, 8.998600000000023e-05, 9.023600000000048e-05, 9.01389999999995e-05, 9.011100000000036e-05, 8.957000000000062e-05, 8.99999999999998e-05, 9.011100000000036e-05, 9.009700000000079e-05, 8.99999999999998e-05, 9.026399999999962e-05, 9.002800000000241e-05, 8.987500000000315e-05, 9.026399999999962e-05, 9.011100000000036e-05, 9.026399999999962e-05, 8.980599999999783e-05, 9.0332999999998e-05, 9.029199999999876e-05]</msg>
<status status="PASS" starttime="20201029 18:17:29.644" endtime="20201029 18:17:29.651"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:29.638" endtime="20201029 18:17:29.652"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:29.656" endtime="20201029 18:17:29.675"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:29.654" endtime="20201029 18:17:29.676"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:29.653" endtime="20201029 18:17:29.676"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:29.285" endtime="20201029 18:17:29.677"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:29.284" endtime="20201029 18:17:29.677"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:29.686" endtime="20201029 18:17:29.705"></status>
</kw>
<msg timestamp="20201029 18:17:29.705" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:29.684" endtime="20201029 18:17:29.706"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:29.708" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:29.707" endtime="20201029 18:17:29.708"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:29.709" endtime="20201029 18:17:29.711"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:29.682" endtime="20201029 18:17:29.711"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:29.679" endtime="20201029 18:17:29.712"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:29.719" endtime="20201029 18:17:30.005"></status>
</kw>
<msg timestamp="20201029 18:17:30.008" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020290167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020380903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:29.717" endtime="20201029 18:17:30.008"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:30.016" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020290167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020380903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:30.009" endtime="20201029 18:17:30.017"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:30.017" endtime="20201029 18:17:30.019"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:29.714" endtime="20201029 18:17:30.020"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:29.713" endtime="20201029 18:17:30.020"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:30.024" level="INFO">${RESULT} = [{'diff': 9.073599999999751e-05}, {'diff': 9.108399999999822e-05}, {'diff': 9.118100000000268e-05}, {'diff': 9.075000000000055e-05}, {'diff': 9.104100000000004e-05}, {'diff': 9.091599999999991e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:17:30.021" endtime="20201029 18:17:30.025"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:30.030" level="INFO">${ACCURACY} = {'diff': [9.073599999999751e-05, 9.108399999999822e-05, 9.118100000000268e-05, 9.075000000000055e-05, 9.104100000000004e-05, 9.091599999999991e-05, 9.087500000000068e-05, 9.131899999999943e-05, 9.1444...</msg>
<status status="PASS" starttime="20201029 18:17:30.025" endtime="20201029 18:17:30.030"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:30.034" level="INFO">NAME: accuracy-TIMER_SET-86-philip</msg>
<status status="PASS" starttime="20201029 18:17:30.033" endtime="20201029 18:17:30.035"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:30.037" level="INFO">VALUE: [9.073599999999751e-05, 9.108399999999822e-05, 9.118100000000268e-05, 9.075000000000055e-05, 9.104100000000004e-05, 9.091599999999991e-05, 9.087500000000068e-05, 9.131899999999943e-05, 9.144400000000302e-05, 9.098599999999776e-05, 9.101400000000037e-05, 9.127800000000019e-05, 9.108400000000169e-05, 9.15000000000013e-05, 9.088900000000025e-05, 9.107000000000212e-05, 9.142999999999998e-05, 9.101400000000037e-05, 9.088900000000025e-05, 9.137500000000118e-05, 9.058299999999825e-05, 9.112500000000093e-05, 9.116600000000016e-05, 9.124999999999758e-05, 9.119499999999878e-05, 9.147299999999817e-05, 9.080500000000283e-05, 9.151299999999793e-05, 9.094399999999905e-05, 9.104100000000004e-05, 9.140300000000032e-05, 9.068100000000218e-05, 9.149999999999783e-05, 9.070900000000132e-05, 9.083399999999797e-05, 9.091699999999939e-05, 9.109699999999832e-05, 9.086100000000111e-05, 9.079099999999979e-05, 9.059700000000129e-05, 9.10000000000008e-05, 9.154200000000001e-05, 9.125000000000105e-05, 9.105599999999908e-05, 9.122300000000139e-05, 9.129199999999976e-05, 9.119500000000225e-05, 9.087500000000068e-05, 9.0639e-05, 9.137500000000118e-05]</msg>
<status status="PASS" starttime="20201029 18:17:30.035" endtime="20201029 18:17:30.038"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:30.030" endtime="20201029 18:17:30.038"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:30.042" endtime="20201029 18:17:30.062"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:30.040" endtime="20201029 18:17:30.062"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:30.039" endtime="20201029 18:17:30.063"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:29.678" endtime="20201029 18:17:30.063"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:29.677" endtime="20201029 18:17:30.063"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:30.072" endtime="20201029 18:17:30.091"></status>
</kw>
<msg timestamp="20201029 18:17:30.092" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:30.070" endtime="20201029 18:17:30.092"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:30.095" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:30.093" endtime="20201029 18:17:30.095"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:30.096" endtime="20201029 18:17:30.097"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:30.068" endtime="20201029 18:17:30.098"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:30.066" endtime="20201029 18:17:30.098"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:30.105" endtime="20201029 18:17:30.393"></status>
</kw>
<msg timestamp="20201029 18:17:30.396" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020265542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020357458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:30.104" endtime="20201029 18:17:30.396"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:30.405" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020265542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020357458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:30.397" endtime="20201029 18:17:30.405"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:30.406" endtime="20201029 18:17:30.408"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:30.101" endtime="20201029 18:17:30.408"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:30.099" endtime="20201029 18:17:30.409"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:30.413" level="INFO">${RESULT} = [{'diff': 9.191599999999744e-05}, {'diff': 9.25139999999984e-05}, {'diff': 9.222200000000291e-05}, {'diff': 9.255600000000058e-05}, {'diff': 9.18329999999995e-05}, {'diff': 9.202800000000094e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 18:17:30.409" endtime="20201029 18:17:30.413"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:30.417" level="INFO">${ACCURACY} = {'diff': [9.191599999999744e-05, 9.25139999999984e-05, 9.222200000000291e-05, 9.255600000000058e-05, 9.18329999999995e-05, 9.202800000000094e-05, 9.175000000000155e-05, 9.188800000000177e-05, 9.224999...</msg>
<status status="PASS" starttime="20201029 18:17:30.414" endtime="20201029 18:17:30.417"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:30.422" level="INFO">NAME: accuracy-TIMER_SET-87-philip</msg>
<status status="PASS" starttime="20201029 18:17:30.420" endtime="20201029 18:17:30.422"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:30.424" level="INFO">VALUE: [9.191599999999744e-05, 9.25139999999984e-05, 9.222200000000291e-05, 9.255600000000058e-05, 9.18329999999995e-05, 9.202800000000094e-05, 9.175000000000155e-05, 9.188800000000177e-05, 9.224999999999858e-05, 9.158300000000272e-05, 9.212499999999846e-05, 9.201400000000137e-05, 9.237500000000218e-05, 9.204200000000051e-05, 9.174999999999808e-05, 9.218100000000021e-05, 9.247299999999917e-05, 9.244500000000003e-05, 9.24589999999996e-05, 9.170899999999885e-05, 9.19719999999992e-05, 9.223599999999901e-05, 9.211100000000236e-05, 9.168099999999971e-05, 9.188900000000125e-05, 9.224999999999858e-05, 9.180599999999983e-05, 9.170899999999885e-05, 9.223600000000248e-05, 9.190299999999735e-05, 9.173599999999851e-05, 9.224999999999858e-05, 9.158300000000272e-05, 9.215300000000107e-05, 9.165300000000057e-05, 9.193000000000048e-05, 9.245800000000012e-05, 9.205600000000008e-05, 9.226400000000162e-05, 9.193099999999996e-05, 9.227800000000119e-05, 9.237499999999871e-05, 9.168000000000023e-05, 9.237499999999871e-05, 9.165300000000057e-05, 9.21529999999976e-05, 9.206900000000018e-05, 9.190300000000082e-05, 9.241699999999742e-05, 9.249999999999883e-05]</msg>
<status status="PASS" starttime="20201029 18:17:30.423" endtime="20201029 18:17:30.425"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:30.418" endtime="20201029 18:17:30.426"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:30.429" endtime="20201029 18:17:30.449"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:30.428" endtime="20201029 18:17:30.450"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:30.427" endtime="20201029 18:17:30.450"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:30.064" endtime="20201029 18:17:30.450"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:30.063" endtime="20201029 18:17:30.450"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:30.459" endtime="20201029 18:17:30.480"></status>
</kw>
<msg timestamp="20201029 18:17:30.480" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:30.458" endtime="20201029 18:17:30.481"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:30.483" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:30.482" endtime="20201029 18:17:30.483"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:30.484" endtime="20201029 18:17:30.486"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:30.455" endtime="20201029 18:17:30.486"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:30.453" endtime="20201029 18:17:30.487"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:30.494" endtime="20201029 18:17:30.781"></status>
</kw>
<msg timestamp="20201029 18:17:30.784" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021584083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021676917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:30.492" endtime="20201029 18:17:30.784"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:30.793" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021584083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021676917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:30.785" endtime="20201029 18:17:30.793"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:30.794" endtime="20201029 18:17:30.796"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:30.489" endtime="20201029 18:17:30.796"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:30.487" endtime="20201029 18:17:30.797"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:30.801" level="INFO">${RESULT} = [{'diff': 9.283399999999997e-05}, {'diff': 9.312499999999946e-05}, {'diff': 9.320800000000087e-05}, {'diff': 9.343000000000198e-05}, {'diff': 9.273599999999951e-05}, {'diff': 9.340300000000232e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:17:30.797" endtime="20201029 18:17:30.801"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:30.805" level="INFO">${ACCURACY} = {'diff': [9.283399999999997e-05, 9.312499999999946e-05, 9.320800000000087e-05, 9.343000000000198e-05, 9.273599999999951e-05, 9.340300000000232e-05, 9.340299999999885e-05, 9.312499999999946e-05, 9.3124...</msg>
<status status="PASS" starttime="20201029 18:17:30.802" endtime="20201029 18:17:30.805"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:30.810" level="INFO">NAME: accuracy-TIMER_SET-88-philip</msg>
<status status="PASS" starttime="20201029 18:17:30.809" endtime="20201029 18:17:30.810"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:30.813" level="INFO">VALUE: [9.283399999999997e-05, 9.312499999999946e-05, 9.320800000000087e-05, 9.343000000000198e-05, 9.273599999999951e-05, 9.340300000000232e-05, 9.340299999999885e-05, 9.312499999999946e-05, 9.312499999999946e-05, 9.312499999999946e-05, 9.290300000000182e-05, 9.302799999999847e-05, 9.334700000000057e-05, 9.333299999999753e-05, 9.324999999999958e-05, 9.280499999999789e-05, 9.329200000000176e-05, 9.284700000000007e-05, 9.277800000000169e-05, 9.340300000000232e-05, 9.283399999999997e-05, 9.294500000000053e-05, 9.326399999999915e-05, 9.279099999999832e-05, 9.262499999999896e-05, 9.312499999999946e-05, 9.322200000000044e-05, 9.324999999999958e-05, 9.294500000000053e-05, 9.338899999999928e-05, 9.322300000000339e-05, 9.344400000000155e-05, 9.320900000000035e-05, 9.29720000000002e-05, 9.286099999999964e-05, 9.263899999999853e-05, 9.307000000000065e-05, 9.280600000000083e-05, 9.345800000000112e-05, 9.340300000000232e-05, 9.279199999999779e-05, 9.352799999999897e-05, 9.312499999999946e-05, 9.263800000000252e-05, 9.348600000000026e-05, 9.276400000000212e-05, 9.312499999999946e-05, 9.324999999999958e-05, 9.336100000000014e-05, 9.344399999999808e-05]</msg>
<status status="PASS" starttime="20201029 18:17:30.811" endtime="20201029 18:17:30.814"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:30.806" endtime="20201029 18:17:30.815"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:30.819" endtime="20201029 18:17:30.838"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:30.817" endtime="20201029 18:17:30.839"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:30.816" endtime="20201029 18:17:30.839"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:30.451" endtime="20201029 18:17:30.839"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:30.451" endtime="20201029 18:17:30.839"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:30.849" endtime="20201029 18:17:30.867"></status>
</kw>
<msg timestamp="20201029 18:17:30.868" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:30.847" endtime="20201029 18:17:30.868"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:30.870" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:30.869" endtime="20201029 18:17:30.871"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:30.872" endtime="20201029 18:17:30.873"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:30.844" endtime="20201029 18:17:30.874"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:30.842" endtime="20201029 18:17:30.874"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:30.881" endtime="20201029 18:17:31.167"></status>
</kw>
<msg timestamp="20201029 18:17:31.171" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020301292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020395861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:30.879" endtime="20201029 18:17:31.171"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:31.179" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020301292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020395861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:31.172" endtime="20201029 18:17:31.179"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:31.180" endtime="20201029 18:17:31.182"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:30.877" endtime="20201029 18:17:31.182"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:30.875" endtime="20201029 18:17:31.183"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:31.187" level="INFO">${RESULT} = [{'diff': 9.456900000000268e-05}, {'diff': 9.404100000000304e-05}, {'diff': 9.366600000000266e-05}, {'diff': 9.42079999999984e-05}, {'diff': 9.397199999999772e-05}, {'diff': 9.402799999999947e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:17:31.184" endtime="20201029 18:17:31.187"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:31.192" level="INFO">${ACCURACY} = {'diff': [9.456900000000268e-05, 9.404100000000304e-05, 9.366600000000266e-05, 9.42079999999984e-05, 9.397199999999772e-05, 9.402799999999947e-05, 9.373600000000051e-05, 9.409700000000132e-05, 9.42219...</msg>
<status status="PASS" starttime="20201029 18:17:31.188" endtime="20201029 18:17:31.192"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:31.197" level="INFO">NAME: accuracy-TIMER_SET-89-philip</msg>
<status status="PASS" starttime="20201029 18:17:31.196" endtime="20201029 18:17:31.197"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:31.200" level="INFO">VALUE: [9.456900000000268e-05, 9.404100000000304e-05, 9.366600000000266e-05, 9.42079999999984e-05, 9.397199999999772e-05, 9.402799999999947e-05, 9.373600000000051e-05, 9.409700000000132e-05, 9.422199999999797e-05, 9.437500000000071e-05, 9.363800000000005e-05, 9.427799999999972e-05, 9.41659999999997e-05, 9.454199999999954e-05, 9.412500000000046e-05, 9.450000000000083e-05, 9.420800000000187e-05, 9.438900000000028e-05, 9.377800000000269e-05, 9.445899999999813e-05, 9.395799999999815e-05, 9.451300000000093e-05, 9.445800000000212e-05, 9.434700000000157e-05, 9.429200000000276e-05, 9.425000000000058e-05, 9.383299999999803e-05, 9.397300000000067e-05, 9.352800000000244e-05, 9.433400000000147e-05, 9.394399999999858e-05, 9.437500000000071e-05, 9.39590000000011e-05, 9.362499999999996e-05, 9.400000000000033e-05, 9.375000000000008e-05, 9.37079999999979e-05, 9.443099999999899e-05, 9.454100000000007e-05, 9.4333000000002e-05, 9.41529999999996e-05, 9.409699999999785e-05, 9.411200000000036e-05, 9.411100000000089e-05, 9.362499999999996e-05, 9.415300000000307e-05, 9.367999999999876e-05, 9.415300000000307e-05, 9.411099999999742e-05, 9.426400000000015e-05]</msg>
<status status="PASS" starttime="20201029 18:17:31.198" endtime="20201029 18:17:31.200"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:31.193" endtime="20201029 18:17:31.201"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:31.205" endtime="20201029 18:17:31.224"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:31.203" endtime="20201029 18:17:31.225"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:31.202" endtime="20201029 18:17:31.225"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:30.840" endtime="20201029 18:17:31.225"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:30.840" endtime="20201029 18:17:31.226"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:31.235" endtime="20201029 18:17:31.254"></status>
</kw>
<msg timestamp="20201029 18:17:31.255" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:31.233" endtime="20201029 18:17:31.255"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:31.257" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:31.256" endtime="20201029 18:17:31.258"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:31.258" endtime="20201029 18:17:31.260"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:31.230" endtime="20201029 18:17:31.261"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:31.228" endtime="20201029 18:17:31.261"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:31.268" endtime="20201029 18:17:31.554"></status>
</kw>
<msg timestamp="20201029 18:17:31.558" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020107625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020202847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:31.266" endtime="20201029 18:17:31.558"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:31.566" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020107625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020202847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:31.559" endtime="20201029 18:17:31.566"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:31.567" endtime="20201029 18:17:31.569"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:31.264" endtime="20201029 18:17:31.569"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:31.262" endtime="20201029 18:17:31.570"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:31.574" level="INFO">${RESULT} = [{'diff': 9.522199999999897e-05}, {'diff': 9.462499999999749e-05}, {'diff': 9.488900000000078e-05}, {'diff': 9.522199999999897e-05}, {'diff': 9.481999999999893e-05}, {'diff': 9.512500000000146e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:17:31.571" endtime="20201029 18:17:31.574"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:31.578" level="INFO">${ACCURACY} = {'diff': [9.522199999999897e-05, 9.462499999999749e-05, 9.488900000000078e-05, 9.522199999999897e-05, 9.481999999999893e-05, 9.512500000000146e-05, 9.495899999999863e-05, 9.480599999999936e-05, 9.5221...</msg>
<status status="PASS" starttime="20201029 18:17:31.575" endtime="20201029 18:17:31.578"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:31.583" level="INFO">NAME: accuracy-TIMER_SET-90-philip</msg>
<status status="PASS" starttime="20201029 18:17:31.582" endtime="20201029 18:17:31.583"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:31.585" level="INFO">VALUE: [9.522199999999897e-05, 9.462499999999749e-05, 9.488900000000078e-05, 9.522199999999897e-05, 9.481999999999893e-05, 9.512500000000146e-05, 9.495899999999863e-05, 9.480599999999936e-05, 9.522199999999897e-05, 9.465200000000062e-05, 9.46530000000001e-05, 9.500000000000133e-05, 9.508299999999928e-05, 9.468099999999924e-05, 9.499999999999786e-05, 9.509699999999885e-05, 9.511100000000189e-05, 9.488899999999731e-05, 9.506899999999971e-05, 9.533299999999953e-05, 9.456900000000268e-05, 9.509800000000179e-05, 9.518000000000026e-05, 9.51940000000033e-05, 9.490300000000035e-05, 9.48469999999986e-05, 9.523599999999854e-05, 9.475000000000108e-05, 9.493099999999949e-05, 9.456899999999921e-05, 9.519399999999983e-05, 9.490300000000035e-05, 9.527800000000072e-05, 9.47079999999989e-05, 9.518099999999974e-05, 9.531999999999943e-05, 9.545899999999913e-05, 9.550000000000183e-05, 9.518000000000026e-05, 9.523600000000201e-05, 9.509699999999885e-05, 9.488899999999731e-05, 9.508299999999928e-05, 9.486100000000164e-05, 9.455599999999911e-05, 9.469500000000228e-05, 9.502800000000047e-05, 9.538900000000128e-05, 9.54019999999979e-05, 9.523599999999854e-05]</msg>
<status status="PASS" starttime="20201029 18:17:31.584" endtime="20201029 18:17:31.586"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:31.579" endtime="20201029 18:17:31.587"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:31.591" endtime="20201029 18:17:31.610"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:31.589" endtime="20201029 18:17:31.611"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:31.588" endtime="20201029 18:17:31.611"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:31.227" endtime="20201029 18:17:31.612"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:31.226" endtime="20201029 18:17:31.612"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:31.621" endtime="20201029 18:17:31.643"></status>
</kw>
<msg timestamp="20201029 18:17:31.643" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:31.619" endtime="20201029 18:17:31.644"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:31.646" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:31.644" endtime="20201029 18:17:31.646"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:31.647" endtime="20201029 18:17:31.649"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:31.616" endtime="20201029 18:17:31.650"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:31.614" endtime="20201029 18:17:31.650"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:31.657" endtime="20201029 18:17:31.942"></status>
</kw>
<msg timestamp="20201029 18:17:31.945" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023556861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023653375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:31.655" endtime="20201029 18:17:31.945"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:31.953" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023556861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023653375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:31.946" endtime="20201029 18:17:31.954"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:31.954" endtime="20201029 18:17:31.956"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:31.652" endtime="20201029 18:17:31.957"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:31.651" endtime="20201029 18:17:31.957"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:31.961" level="INFO">${RESULT} = [{'diff': 9.65140000000024e-05}, {'diff': 9.588900000000178e-05}, {'diff': 9.619500000000031e-05}, {'diff': 9.645900000000013e-05}, {'diff': 9.624999999999911e-05}, {'diff': 9.644400000000108e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:17:31.958" endtime="20201029 18:17:31.962"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:31.966" level="INFO">${ACCURACY} = {'diff': [9.65140000000024e-05, 9.588900000000178e-05, 9.619500000000031e-05, 9.645900000000013e-05, 9.624999999999911e-05, 9.644400000000108e-05, 9.565200000000162e-05, 9.608300000000028e-05, 9.61810...</msg>
<status status="PASS" starttime="20201029 18:17:31.962" endtime="20201029 18:17:31.966"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:31.970" level="INFO">NAME: accuracy-TIMER_SET-91-philip</msg>
<status status="PASS" starttime="20201029 18:17:31.969" endtime="20201029 18:17:31.971"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:31.973" level="INFO">VALUE: [9.65140000000024e-05, 9.588900000000178e-05, 9.619500000000031e-05, 9.645900000000013e-05, 9.624999999999911e-05, 9.644400000000108e-05, 9.565200000000162e-05, 9.608300000000028e-05, 9.618100000000074e-05, 9.626400000000215e-05, 9.573599999999904e-05, 9.62080000000004e-05, 9.622199999999997e-05, 9.58339999999995e-05, 9.551399999999793e-05, 9.593099999999702e-05, 9.611100000000289e-05, 9.599999999999886e-05, 9.631900000000096e-05, 9.608300000000028e-05, 9.649999999999936e-05, 9.601399999999843e-05, 9.611099999999942e-05, 9.59729999999992e-05, 9.652800000000197e-05, 9.588799999999884e-05, 9.604199999999757e-05, 9.595800000000015e-05, 9.576399999999818e-05, 9.618100000000074e-05, 9.655600000000111e-05, 9.612499999999899e-05, 9.645900000000013e-05, 9.619400000000083e-05, 9.563899999999806e-05, 9.649999999999936e-05, 9.636099999999967e-05, 9.558299999999978e-05, 9.595800000000015e-05, 9.56530000000011e-05, 9.588899999999831e-05, 9.61530000000016e-05, 9.58469999999996e-05, 9.65279999999985e-05, 9.569499999999981e-05, 9.572299999999895e-05, 9.634800000000304e-05, 9.579100000000132e-05, 9.641599999999848e-05, 9.580500000000089e-05]</msg>
<status status="PASS" starttime="20201029 18:17:31.971" endtime="20201029 18:17:31.975"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:31.967" endtime="20201029 18:17:31.975"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:31.979" endtime="20201029 18:17:31.999"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:31.977" endtime="20201029 18:17:31.999"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:31.976" endtime="20201029 18:17:31.999"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:31.613" endtime="20201029 18:17:32.000"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:31.612" endtime="20201029 18:17:32.000"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:32.009" endtime="20201029 18:17:32.029"></status>
</kw>
<msg timestamp="20201029 18:17:32.029" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:32.007" endtime="20201029 18:17:32.030"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:32.032" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:32.030" endtime="20201029 18:17:32.032"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:32.033" endtime="20201029 18:17:32.035"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:32.005" endtime="20201029 18:17:32.035"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:32.003" endtime="20201029 18:17:32.036"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:32.042" endtime="20201029 18:17:32.329"></status>
</kw>
<msg timestamp="20201029 18:17:32.332" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020089292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020186431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:32.041" endtime="20201029 18:17:32.332"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:32.340" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020089292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020186431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:32.333" endtime="20201029 18:17:32.341"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:32.342" endtime="20201029 18:17:32.343"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:32.038" endtime="20201029 18:17:32.344"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:32.036" endtime="20201029 18:17:32.344"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:32.349" level="INFO">${RESULT} = [{'diff': 9.713899999999956e-05}, {'diff': 9.713800000000009e-05}, {'diff': 9.75409999999996e-05}, {'diff': 9.738899999999981e-05}, {'diff': 9.713899999999956e-05}, {'diff': 9.66669999999982e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 18:17:32.345" endtime="20201029 18:17:32.349"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:32.354" level="INFO">${ACCURACY} = {'diff': [9.713899999999956e-05, 9.713800000000009e-05, 9.75409999999996e-05, 9.738899999999981e-05, 9.713899999999956e-05, 9.66669999999982e-05, 9.655499999999817e-05, 9.737500000000024e-05, 9.674999...</msg>
<status status="PASS" starttime="20201029 18:17:32.350" endtime="20201029 18:17:32.355"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:32.359" level="INFO">NAME: accuracy-TIMER_SET-92-philip</msg>
<status status="PASS" starttime="20201029 18:17:32.358" endtime="20201029 18:17:32.360"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:32.362" level="INFO">VALUE: [9.713899999999956e-05, 9.713800000000009e-05, 9.75409999999996e-05, 9.738899999999981e-05, 9.713899999999956e-05, 9.66669999999982e-05, 9.655499999999817e-05, 9.737500000000024e-05, 9.674999999999961e-05, 9.73059999999984e-05, 9.744500000000156e-05, 9.713899999999956e-05, 9.699999999999986e-05, 9.73609999999972e-05, 9.750000000000036e-05, 9.722200000000097e-05, 9.748599999999732e-05, 9.731899999999849e-05, 9.73470000000011e-05, 9.711100000000042e-05, 9.750000000000036e-05, 9.70409999999991e-05, 9.744400000000208e-05, 9.681899999999799e-05, 9.697200000000072e-05, 9.666700000000167e-05, 9.69860000000003e-05, 9.729199999999882e-05, 9.681999999999746e-05, 9.71530000000026e-05, 9.707000000000118e-05, 9.71669999999987e-05, 9.673699999999952e-05, 9.74019999999999e-05, 9.75279999999995e-05, 9.704199999999857e-05, 9.659700000000035e-05, 9.744399999999862e-05, 9.665299999999863e-05, 9.73059999999984e-05, 9.679199999999832e-05, 9.686199999999964e-05, 9.686199999999964e-05, 9.656900000000121e-05, 9.686100000000017e-05, 9.669399999999786e-05, 9.67080000000009e-05, 9.720899999999741e-05, 9.693100000000149e-05, 9.655599999999764e-05]</msg>
<status status="PASS" starttime="20201029 18:17:32.361" endtime="20201029 18:17:32.363"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:32.355" endtime="20201029 18:17:32.364"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:32.368" endtime="20201029 18:17:32.387"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:32.366" endtime="20201029 18:17:32.388"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:32.365" endtime="20201029 18:17:32.388"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:32.001" endtime="20201029 18:17:32.388"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:32.000" endtime="20201029 18:17:32.389"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:32.398" endtime="20201029 18:17:32.417"></status>
</kw>
<msg timestamp="20201029 18:17:32.418" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:32.396" endtime="20201029 18:17:32.418"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:32.420" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:32.419" endtime="20201029 18:17:32.421"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:32.421" endtime="20201029 18:17:32.423"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:32.393" endtime="20201029 18:17:32.424"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:32.391" endtime="20201029 18:17:32.424"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:32.431" endtime="20201029 18:17:32.719"></status>
</kw>
<msg timestamp="20201029 18:17:32.722" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020388986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020487194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:32.429" endtime="20201029 18:17:32.722"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:32.731" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020388986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020487194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:32.723" endtime="20201029 18:17:32.731"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:32.732" endtime="20201029 18:17:32.733"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:32.427" endtime="20201029 18:17:32.734"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:32.425" endtime="20201029 18:17:32.735"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:32.739" level="INFO">${RESULT} = [{'diff': 9.820799999999894e-05}, {'diff': 9.82080000000024e-05}, {'diff': 9.76799999999993e-05}, {'diff': 9.812500000000099e-05}, {'diff': 9.788900000000031e-05}, {'diff': 9.800000000000086e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 18:17:32.735" endtime="20201029 18:17:32.739"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:32.743" level="INFO">${ACCURACY} = {'diff': [9.820799999999894e-05, 9.82080000000024e-05, 9.76799999999993e-05, 9.812500000000099e-05, 9.788900000000031e-05, 9.800000000000086e-05, 9.756999999999821e-05, 9.783300000000203e-05, 9.816699...</msg>
<status status="PASS" starttime="20201029 18:17:32.740" endtime="20201029 18:17:32.743"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:32.748" level="INFO">NAME: accuracy-TIMER_SET-93-philip</msg>
<status status="PASS" starttime="20201029 18:17:32.746" endtime="20201029 18:17:32.748"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:32.750" level="INFO">VALUE: [9.820799999999894e-05, 9.82080000000024e-05, 9.76799999999993e-05, 9.812500000000099e-05, 9.788900000000031e-05, 9.800000000000086e-05, 9.756999999999821e-05, 9.783300000000203e-05, 9.81669999999997e-05, 9.822300000000145e-05, 9.791699999999945e-05, 9.820900000000188e-05, 9.801400000000043e-05, 9.815200000000066e-05, 9.791699999999945e-05, 9.756899999999874e-05, 9.756899999999874e-05, 9.794400000000258e-05, 9.808299999999881e-05, 9.786100000000117e-05, 9.801400000000043e-05, 9.773700000000052e-05, 9.793000000000301e-05, 9.831899999999949e-05, 9.83470000000021e-05, 9.777799999999975e-05, 9.79999999999974e-05, 9.801400000000043e-05, 9.8028e-05, 9.788900000000031e-05, 9.83059999999994e-05, 9.806999999999871e-05, 9.80410000000001e-05, 9.763899999999659e-05, 9.788900000000031e-05, 9.779099999999985e-05, 9.78470000000016e-05, 9.774999999999714e-05, 9.782000000000193e-05, 9.822300000000145e-05, 9.768100000000224e-05, 9.848599999999832e-05, 9.756899999999874e-05, 9.80410000000001e-05, 9.805499999999967e-05, 9.838899999999734e-05, 9.791700000000292e-05, 9.843000000000005e-05, 9.812500000000099e-05, 9.83059999999994e-05]</msg>
<status status="PASS" starttime="20201029 18:17:32.749" endtime="20201029 18:17:32.751"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:32.744" endtime="20201029 18:17:32.752"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:32.756" endtime="20201029 18:17:32.775"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:32.754" endtime="20201029 18:17:32.776"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:32.753" endtime="20201029 18:17:32.776"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:32.389" endtime="20201029 18:17:32.776"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:32.389" endtime="20201029 18:17:32.776"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:32.786" endtime="20201029 18:17:32.806"></status>
</kw>
<msg timestamp="20201029 18:17:32.806" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:32.784" endtime="20201029 18:17:32.807"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:32.809" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:32.807" endtime="20201029 18:17:32.809"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:32.810" endtime="20201029 18:17:32.812"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:32.781" endtime="20201029 18:17:32.812"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:32.779" endtime="20201029 18:17:32.813"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:32.819" endtime="20201029 18:17:33.107"></status>
</kw>
<msg timestamp="20201029 18:17:33.110" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021239528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021338444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:32.818" endtime="20201029 18:17:33.111"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:33.119" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021239528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021338444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:33.112" endtime="20201029 18:17:33.119"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:33.120" endtime="20201029 18:17:33.122"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:32.815" endtime="20201029 18:17:33.122"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:32.813" endtime="20201029 18:17:33.123"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:33.127" level="INFO">${RESULT} = [{'diff': 9.891600000000098e-05}, {'diff': 9.886199999999817e-05}, {'diff': 9.872200000000247e-05}, {'diff': 9.863900000000106e-05}, {'diff': 9.895800000000315e-05}, {'diff': 9.88609999999987e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:17:33.124" endtime="20201029 18:17:33.127"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:33.131" level="INFO">${ACCURACY} = {'diff': [9.891600000000098e-05, 9.886199999999817e-05, 9.872200000000247e-05, 9.863900000000106e-05, 9.895800000000315e-05, 9.88609999999987e-05, 9.934699999999963e-05, 9.904200000000057e-05, 9.92500...</msg>
<status status="PASS" starttime="20201029 18:17:33.128" endtime="20201029 18:17:33.131"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:33.136" level="INFO">NAME: accuracy-TIMER_SET-94-philip</msg>
<status status="PASS" starttime="20201029 18:17:33.135" endtime="20201029 18:17:33.136"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:33.138" level="INFO">VALUE: [9.891600000000098e-05, 9.886199999999817e-05, 9.872200000000247e-05, 9.863900000000106e-05, 9.895800000000315e-05, 9.88609999999987e-05, 9.934699999999963e-05, 9.904200000000057e-05, 9.925000000000211e-05, 9.944500000000009e-05, 9.923699999999855e-05, 9.913799999999862e-05, 9.883299999999956e-05, 9.89999999999984e-05, 9.87080000000029e-05, 9.947199999999976e-05, 9.88609999999987e-05, 9.929200000000082e-05, 9.880500000000042e-05, 9.893100000000002e-05, 9.86670000000002e-05, 9.887499999999827e-05, 9.915200000000166e-05, 9.869399999999987e-05, 9.894499999999959e-05, 9.866600000000073e-05, 9.941700000000095e-05, 9.918100000000027e-05, 9.904200000000057e-05, 9.930599999999692e-05, 9.905600000000014e-05, 9.895799999999969e-05, 9.931900000000049e-05, 9.8721999999999e-05, 9.944399999999715e-05, 9.887500000000174e-05, 9.909699999999938e-05, 9.886100000000217e-05, 9.948599999999932e-05, 9.93609999999992e-05, 9.918100000000027e-05, 9.948599999999932e-05, 9.915200000000166e-05, 9.92219999999995e-05, 9.919400000000037e-05, 9.94999999999989e-05, 9.895799999999969e-05, 9.952799999999803e-05, 9.93060000000004e-05, 9.913900000000156e-05]</msg>
<status status="PASS" starttime="20201029 18:17:33.137" endtime="20201029 18:17:33.140"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:33.132" endtime="20201029 18:17:33.141"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:33.145" endtime="20201029 18:17:33.164"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:33.143" endtime="20201029 18:17:33.165"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:33.142" endtime="20201029 18:17:33.165"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:32.777" endtime="20201029 18:17:33.165"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:32.777" endtime="20201029 18:17:33.166"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:33.174" endtime="20201029 18:17:33.196"></status>
</kw>
<msg timestamp="20201029 18:17:33.196" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:33.173" endtime="20201029 18:17:33.196"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:33.199" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:33.197" endtime="20201029 18:17:33.199"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:33.200" endtime="20201029 18:17:33.202"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:33.170" endtime="20201029 18:17:33.202"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:33.168" endtime="20201029 18:17:33.203"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:33.209" endtime="20201029 18:17:33.496"></status>
</kw>
<msg timestamp="20201029 18:17:33.500" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021007181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021106889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:33.208" endtime="20201029 18:17:33.500"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:33.508" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021007181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021106889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:33.501" endtime="20201029 18:17:33.508"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:33.509" endtime="20201029 18:17:33.511"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:33.205" endtime="20201029 18:17:33.511"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:33.203" endtime="20201029 18:17:33.512"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:33.516" level="INFO">${RESULT} = [{'diff': 9.970800000000044e-05}, {'diff': 9.9722e-05}, {'diff': 9.997299999999973e-05}, {'diff': 0.00010037499999999977}, {'diff': 9.958299999999684e-05}, {'diff': 9.977799999999828e-05}, {'diff': 9....</msg>
<status status="PASS" starttime="20201029 18:17:33.513" endtime="20201029 18:17:33.516"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:33.521" level="INFO">${ACCURACY} = {'diff': [9.970800000000044e-05, 9.9722e-05, 9.997299999999973e-05, 0.00010037499999999977, 9.958299999999684e-05, 9.977799999999828e-05, 9.963899999999859e-05, 9.993000000000155e-05, 9.96530000000016...</msg>
<status status="PASS" starttime="20201029 18:17:33.517" endtime="20201029 18:17:33.522"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:33.526" level="INFO">NAME: accuracy-TIMER_SET-95-philip</msg>
<status status="PASS" starttime="20201029 18:17:33.525" endtime="20201029 18:17:33.526"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:33.528" level="INFO">VALUE: [9.970800000000044e-05, 9.9722e-05, 9.997299999999973e-05, 0.00010037499999999977, 9.958299999999684e-05, 9.977799999999828e-05, 9.963899999999859e-05, 9.993000000000155e-05, 9.965300000000163e-05, 9.993100000000102e-05, 0.00010034700000000063, 0.00010037499999999977, 0.00010019500000000084, 9.984700000000013e-05, 9.987499999999927e-05, 0.00010042999999999858, 9.994400000000112e-05, 9.977800000000175e-05, 0.00010037499999999977, 0.0001004999999999999, 9.962499999999902e-05, 0.00010005600000000114, 9.965199999999869e-05, 9.99020000000024e-05, 9.979099999999838e-05, 0.00010027799999999878, 0.00010033299999999759, 0.0001005280000000025, 9.99999999999994e-05, 9.995799999999722e-05, 9.96670000000012e-05, 0.00010019500000000084, 9.958399999999978e-05, 9.988899999999884e-05, 9.997200000000026e-05, 0.0001002220000000005, 9.965299999999816e-05, 0.00010004200000000157, 0.00010031900000000149, 0.00010029200000000182, 0.0001004999999999999, 9.991700000000145e-05, 9.965300000000163e-05, 0.00010029100000000235, 9.979099999999838e-05, 0.0001002220000000005, 0.000100415999999999, 0.00010047200000000076, 0.00010020799999999747, 0.00010048600000000033]</msg>
<status status="PASS" starttime="20201029 18:17:33.527" endtime="20201029 18:17:33.529"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:33.522" endtime="20201029 18:17:33.530"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:33.534" endtime="20201029 18:17:33.553"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:33.532" endtime="20201029 18:17:33.554"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:33.531" endtime="20201029 18:17:33.554"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:33.166" endtime="20201029 18:17:33.555"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:33.166" endtime="20201029 18:17:33.555"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:33.564" endtime="20201029 18:17:33.584"></status>
</kw>
<msg timestamp="20201029 18:17:33.585" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:33.562" endtime="20201029 18:17:33.585"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:33.587" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:33.586" endtime="20201029 18:17:33.588"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:33.588" endtime="20201029 18:17:33.590"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:33.559" endtime="20201029 18:17:33.591"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:33.557" endtime="20201029 18:17:33.591"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:33.598" endtime="20201029 18:17:33.886"></status>
</kw>
<msg timestamp="20201029 18:17:33.889" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02073925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020840333, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:17:33.596" endtime="20201029 18:17:33.889"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:33.897" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02073925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020840333, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:17:33.890" endtime="20201029 18:17:33.897"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:33.898" endtime="20201029 18:17:33.900"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:33.594" endtime="20201029 18:17:33.901"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:33.592" endtime="20201029 18:17:33.901"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:33.905" level="INFO">${RESULT} = [{'diff': 0.00010108299999999834}, {'diff': 0.00010145799999999872}, {'diff': 0.00010155599999999917}, {'diff': 0.00010094400000000212}, {'diff': 0.00010102799999999953}, {'diff': 0.000101514000000000...</msg>
<status status="PASS" starttime="20201029 18:17:33.902" endtime="20201029 18:17:33.905"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:33.909" level="INFO">${ACCURACY} = {'diff': [0.00010108299999999834, 0.00010145799999999872, 0.00010155599999999917, 0.00010094400000000212, 0.00010102799999999953, 0.00010151400000000046, 0.00010069500000000134, 0.00010134799999999763...</msg>
<status status="PASS" starttime="20201029 18:17:33.906" endtime="20201029 18:17:33.910"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:33.914" level="INFO">NAME: accuracy-TIMER_SET-96-philip</msg>
<status status="PASS" starttime="20201029 18:17:33.913" endtime="20201029 18:17:33.914"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:33.917" level="INFO">VALUE: [0.00010108299999999834, 0.00010145799999999872, 0.00010155599999999917, 0.00010094400000000212, 0.00010102799999999953, 0.00010151400000000046, 0.00010069500000000134, 0.00010134799999999763, 0.00010063899999999959, 0.00010127799999999978, 0.00010091699999999898, 0.00010120799999999847, 0.00010075000000000014, 0.00010152800000000003, 0.00010094499999999812, 0.00010061100000000045, 0.000100819999999998, 0.00010127700000000031, 0.00010069400000000187, 0.00010115300000000313, 0.0001013610000000012, 0.00010076399999999971, 0.00010095800000000169, 0.0001015000000000009, 0.000101513999999997, 0.00010080499999999895, 0.00010144499999999862, 0.0001010549999999992, 0.00010133299999999859, 0.00010137500000000077, 0.00010080499999999895, 0.00010148600000000133, 0.00010063899999999959, 0.00010075000000000014, 0.00010073600000000058, 0.00010062500000000002, 0.00010095800000000169, 0.00010115200000000019, 0.0001008610000000007, 0.00010077799999999928, 0.00010104099999999963, 0.0001010000000000004, 0.00010113900000000009, 0.00010152800000000003, 0.00010147199999999829, 0.00010055600000000164, 0.00010129200000000282, 0.00010077799999999928, 0.00010154100000000013, 0.0001013610000000012]</msg>
<status status="PASS" starttime="20201029 18:17:33.915" endtime="20201029 18:17:33.917"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:33.910" endtime="20201029 18:17:33.918"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:33.922" endtime="20201029 18:17:33.941"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:33.920" endtime="20201029 18:17:33.942"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:33.919" endtime="20201029 18:17:33.942"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:33.556" endtime="20201029 18:17:33.943"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:33.555" endtime="20201029 18:17:33.943"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:33.952" endtime="20201029 18:17:33.971"></status>
</kw>
<msg timestamp="20201029 18:17:33.972" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:33.950" endtime="20201029 18:17:33.972"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:33.974" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:33.973" endtime="20201029 18:17:33.975"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:33.975" endtime="20201029 18:17:33.977"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:33.947" endtime="20201029 18:17:33.978"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:33.945" endtime="20201029 18:17:33.978"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:33.985" endtime="20201029 18:17:34.271"></status>
</kw>
<msg timestamp="20201029 18:17:34.274" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021522333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021624347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:33.983" endtime="20201029 18:17:34.274"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:34.282" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021522333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021624347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:34.275" endtime="20201029 18:17:34.282"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:34.283" endtime="20201029 18:17:34.285"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:33.980" endtime="20201029 18:17:34.286"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:33.979" endtime="20201029 18:17:34.286"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:34.290" level="INFO">${RESULT} = [{'diff': 0.0001020139999999975}, {'diff': 0.00010156899999999927}, {'diff': 0.00010176400000000071}, {'diff': 0.00010222199999999904}, {'diff': 0.00010229200000000035}, {'diff': 0.0001023059999999999...</msg>
<status status="PASS" starttime="20201029 18:17:34.287" endtime="20201029 18:17:34.290"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:34.294" level="INFO">${ACCURACY} = {'diff': [0.0001020139999999975, 0.00010156899999999927, 0.00010176400000000071, 0.00010222199999999904, 0.00010229200000000035, 0.00010230599999999992, 0.0001022359999999986, 0.00010194399999999965, ...</msg>
<status status="PASS" starttime="20201029 18:17:34.291" endtime="20201029 18:17:34.294"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:34.299" level="INFO">NAME: accuracy-TIMER_SET-97-philip</msg>
<status status="PASS" starttime="20201029 18:17:34.298" endtime="20201029 18:17:34.299"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:34.301" level="INFO">VALUE: [0.0001020139999999975, 0.00010156899999999927, 0.00010176400000000071, 0.00010222199999999904, 0.00010229200000000035, 0.00010230599999999992, 0.0001022359999999986, 0.00010194399999999965, 0.00010213900000000109, 0.00010220799999999947, 0.00010205599999999967, 0.00010183299999999909, 0.00010163900000000059, 0.00010197199999999879, 0.00010169499999999887, 0.0001023619999999982, 0.0001015549999999997, 0.00010193000000000008, 0.00010231900000000002, 0.0001016800000000033, 0.00010169400000000287, 0.00010201400000000097, 0.0001019870000000013, 0.00010233299999999959, 0.00010216700000000023, 0.00010238899999999787, 0.00010190300000000041, 0.00010218000000000033, 0.00010158299999999884, 0.00010243000000000058, 0.00010238900000000134, 0.00010206899999999977, 0.00010226400000000122, 0.00010240300000000091, 0.00010233400000000253, 0.00010245900000000266, 0.00010159699999999841, 0.00010165300000000016, 0.00010190199999999747, 0.00010172199999999854, 0.0001025000000000019, 0.0001018610000000017, 0.00010247300000000223, 0.00010247199999999929, 0.0001018749999999978, 0.00010236200000000167, 0.00010238899999999787, 0.00010209699999999891, 0.00010251400000000147, 0.00010176399999999725]</msg>
<status status="PASS" starttime="20201029 18:17:34.300" endtime="20201029 18:17:34.303"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:34.295" endtime="20201029 18:17:34.304"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:34.308" endtime="20201029 18:17:34.327"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:34.306" endtime="20201029 18:17:34.328"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:34.305" endtime="20201029 18:17:34.328"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:33.944" endtime="20201029 18:17:34.328"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:33.943" endtime="20201029 18:17:34.328"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:34.338" endtime="20201029 18:17:34.357"></status>
</kw>
<msg timestamp="20201029 18:17:34.357" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:34.336" endtime="20201029 18:17:34.357"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:34.360" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:34.358" endtime="20201029 18:17:34.360"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:34.361" endtime="20201029 18:17:34.363"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:34.333" endtime="20201029 18:17:34.363"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:34.331" endtime="20201029 18:17:34.364"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:34.370" endtime="20201029 18:17:34.656"></status>
</kw>
<msg timestamp="20201029 18:17:34.660" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0201115, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020214458, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:17:34.369" endtime="20201029 18:17:34.660"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:34.668" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0201115, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020214458, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:17:34.661" endtime="20201029 18:17:34.668"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:34.669" endtime="20201029 18:17:34.675"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:34.366" endtime="20201029 18:17:34.675"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:34.364" endtime="20201029 18:17:34.676"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:34.683" level="INFO">${RESULT} = [{'diff': 0.00010295800000000022}, {'diff': 0.0001030550000000012}, {'diff': 0.00010287500000000227}, {'diff': 0.00010274999999999868}, {'diff': 0.00010331899999999755}, {'diff': 0.0001028469999999996...</msg>
<status status="PASS" starttime="20201029 18:17:34.678" endtime="20201029 18:17:34.683"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:34.691" level="INFO">${ACCURACY} = {'diff': [0.00010295800000000022, 0.0001030550000000012, 0.00010287500000000227, 0.00010274999999999868, 0.00010331899999999755, 0.00010284699999999966, 0.00010258299999999984, 0.00010344500000000062,...</msg>
<status status="PASS" starttime="20201029 18:17:34.684" endtime="20201029 18:17:34.691"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:34.698" level="INFO">NAME: accuracy-TIMER_SET-98-philip</msg>
<status status="PASS" starttime="20201029 18:17:34.696" endtime="20201029 18:17:34.698"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:34.702" level="INFO">VALUE: [0.00010295800000000022, 0.0001030550000000012, 0.00010287500000000227, 0.00010274999999999868, 0.00010331899999999755, 0.00010284699999999966, 0.00010258299999999984, 0.00010344500000000062, 0.00010282, 0.00010284699999999966, 0.00010331900000000102, 0.00010270799999999997, 0.00010316699999999776, 0.0001030420000000011, 0.00010265300000000116, 0.00010297300000000273, 0.00010283399999999956, 0.00010309799999999938, 0.0001028619999999987, 0.00010258299999999984, 0.00010297199999999979, 0.00010258299999999984, 0.00010322299999999951, 0.00010312499999999905, 0.0001025420000000006, 0.0001033200000000005, 0.00010258399999999931, 0.00010345900000000019, 0.00010279100000000138, 0.00010318000000000133, 0.00010277799999999782, 0.00010347200000000029, 0.00010267999999999736, 0.00010338899999999887, 0.00010333300000000059, 0.00010329200000000135, 0.0001027359999999991, 0.00010347200000000029, 0.00010302799999999807, 0.00010291599999999804, 0.00010311099999999948, 0.00010269399999999693, 0.00010283300000000009, 0.0001030559999999972, 0.00010288900000000184, 0.00010323699999999908, 0.00010280600000000042, 0.0001028749999999988, 0.00010334700000000016, 0.00010256900000000027]</msg>
<status status="PASS" starttime="20201029 18:17:34.700" endtime="20201029 18:17:34.707"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:34.692" endtime="20201029 18:17:34.708"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:34.711" endtime="20201029 18:17:34.731"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:34.710" endtime="20201029 18:17:34.732"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:34.709" endtime="20201029 18:17:34.732"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:34.329" endtime="20201029 18:17:34.732"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:34.329" endtime="20201029 18:17:34.732"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:34.741" endtime="20201029 18:17:34.761"></status>
</kw>
<msg timestamp="20201029 18:17:34.761" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:34.740" endtime="20201029 18:17:34.761"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:34.764" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:34.762" endtime="20201029 18:17:34.764"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:34.765" endtime="20201029 18:17:34.767"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:34.737" endtime="20201029 18:17:34.767"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:34.735" endtime="20201029 18:17:34.768"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:34.774" endtime="20201029 18:17:35.062"></status>
</kw>
<msg timestamp="20201029 18:17:35.065" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020423903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020528014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:34.773" endtime="20201029 18:17:35.066"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:35.074" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020423903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020528014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:35.067" endtime="20201029 18:17:35.074"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:35.075" endtime="20201029 18:17:35.077"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:34.770" endtime="20201029 18:17:35.077"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:34.768" endtime="20201029 18:17:35.078"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:35.082" level="INFO">${RESULT} = [{'diff': 0.00010411100000000048}, {'diff': 0.00010448600000000086}, {'diff': 0.00010438899999999987}, {'diff': 0.0001038619999999997}, {'diff': 0.00010408300000000134}, {'diff': 0.0001037909999999989...</msg>
<status status="PASS" starttime="20201029 18:17:35.078" endtime="20201029 18:17:35.082"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:35.086" level="INFO">${ACCURACY} = {'diff': [0.00010411100000000048, 0.00010448600000000086, 0.00010438899999999987, 0.0001038619999999997, 0.00010408300000000134, 0.00010379099999999891, 0.00010442999999999911, 0.0001035550000000017, ...</msg>
<status status="PASS" starttime="20201029 18:17:35.083" endtime="20201029 18:17:35.086"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:35.090" level="INFO">NAME: accuracy-TIMER_SET-99-philip</msg>
<status status="PASS" starttime="20201029 18:17:35.089" endtime="20201029 18:17:35.091"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:35.093" level="INFO">VALUE: [0.00010411100000000048, 0.00010448600000000086, 0.00010438899999999987, 0.0001038619999999997, 0.00010408300000000134, 0.00010379099999999891, 0.00010442999999999911, 0.0001035550000000017, 0.00010384700000000066, 0.00010386100000000023, 0.00010455499999999923, 0.00010448600000000086, 0.00010427799999999932, 0.00010415199999999972, 0.00010416599999999929, 0.00010436100000000073, 0.00010383300000000109, 0.00010436100000000073, 0.00010440299999999944, 0.00010440199999999997, 0.00010363899999999912, 0.00010383400000000056, 0.00010406900000000177, 0.00010422200000000104, 0.00010362499999999955, 0.00010402799999999907, 0.00010377799999999882, 0.00010394399999999818, 0.00010376399999999925, 0.00010415299999999919, 0.00010448700000000033, 0.00010361099999999998, 0.00010404199999999864, 0.00010381900000000152, 0.00010418000000000233, 0.00010372200000000054, 0.00010445799999999825, 0.00010430599999999846, 0.00010394400000000165, 0.00010349999999999943, 0.00010449999999999696, 0.00010447300000000076, 0.00010427699999999984, 0.00010430500000000245, 0.00010430499999999898, 0.00010408299999999787, 0.00010383299999999762, 0.000104207999999998, 0.00010372200000000054, 0.00010407000000000124]</msg>
<status status="PASS" starttime="20201029 18:17:35.092" endtime="20201029 18:17:35.094"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:35.087" endtime="20201029 18:17:35.095"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:35.098" endtime="20201029 18:17:35.118"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:35.097" endtime="20201029 18:17:35.118"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:35.096" endtime="20201029 18:17:35.119"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:34.733" endtime="20201029 18:17:35.119"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:34.733" endtime="20201029 18:17:35.119"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:35.128" endtime="20201029 18:17:35.151"></status>
</kw>
<msg timestamp="20201029 18:17:35.151" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:35.127" endtime="20201029 18:17:35.152"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:35.154" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:35.152" endtime="20201029 18:17:35.155"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:35.155" endtime="20201029 18:17:35.157"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:35.124" endtime="20201029 18:17:35.157"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:35.122" endtime="20201029 18:17:35.158"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:35.165" endtime="20201029 18:17:35.460"></status>
</kw>
<msg timestamp="20201029 18:17:35.463" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023588042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023693389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:35.163" endtime="20201029 18:17:35.463"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:35.471" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023588042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023693389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:35.464" endtime="20201029 18:17:35.472"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:35.473" endtime="20201029 18:17:35.474"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:35.160" endtime="20201029 18:17:35.475"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:35.159" endtime="20201029 18:17:35.475"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:35.480" level="INFO">${RESULT} = [{'diff': 0.00010534699999999869}, {'diff': 0.00010472200000000154}, {'diff': 0.00010536099999999826}, {'diff': 0.00010545799999999925}, {'diff': 0.00010467999999999936}, {'diff': 0.000105054999999999...</msg>
<status status="PASS" starttime="20201029 18:17:35.476" endtime="20201029 18:17:35.480"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:35.484" level="INFO">${ACCURACY} = {'diff': [0.00010534699999999869, 0.00010472200000000154, 0.00010536099999999826, 0.00010545799999999925, 0.00010467999999999936, 0.00010505499999999973, 0.00010481899999999905, 0.00010492999999999961...</msg>
<status status="PASS" starttime="20201029 18:17:35.481" endtime="20201029 18:17:35.484"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:35.488" level="INFO">NAME: accuracy-TIMER_SET-100-philip</msg>
<status status="PASS" starttime="20201029 18:17:35.487" endtime="20201029 18:17:35.489"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:35.491" level="INFO">VALUE: [0.00010534699999999869, 0.00010472200000000154, 0.00010536099999999826, 0.00010545799999999925, 0.00010467999999999936, 0.00010505499999999973, 0.00010481899999999905, 0.00010492999999999961, 0.00010479199999999939, 0.00010501399999999703, 0.00010551399999999753, 0.00010549999999999796, 0.00010531999999999903, 0.00010483299999999862, 0.00010537499999999783, 0.0001055279999999971, 0.00010552800000000057, 0.00010529199999999989, 0.0001050689999999993, 0.0001047360000000011, 0.00010491699999999951, 0.0001051949999999989, 0.00010517999999999986, 0.00010458300000000184, 0.00010504100000000016, 0.00010513900000000062, 0.0001052499999999977, 0.00010536099999999826, 0.00010547199999999882, 0.0001046810000000023, 0.00010525000000000118, 0.00010515300000000019, 0.00010554100000000066, 0.00010530499999999998, 0.00010498600000000136, 0.00010455499999999923, 0.00010530499999999998, 0.00010504199999999964, 0.00010543099999999958, 0.0001045559999999987, 0.00010498600000000136, 0.0001045420000000026, 0.00010505499999999973, 0.00010522199999999857, 0.0001047360000000011, 0.00010550000000000143, 0.00010529199999999989, 0.00010456999999999828, 0.0001045559999999987, 0.00010520899999999847]</msg>
<status status="PASS" starttime="20201029 18:17:35.489" endtime="20201029 18:17:35.493"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:35.485" endtime="20201029 18:17:35.493"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:35.497" endtime="20201029 18:17:35.516"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:35.495" endtime="20201029 18:17:35.517"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:35.494" endtime="20201029 18:17:35.517"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:35.120" endtime="20201029 18:17:35.518"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:35.120" endtime="20201029 18:17:35.518"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:57.034" endtime="20201029 18:17:35.518"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
</tags>
<status status="PASS" starttime="20201029 18:16:53.910" endtime="20201029 18:17:35.519" critical="yes"></status>
</test>
<test id="s1-s3-t2" name="Measure TIMER_SLEEP Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:35.525" endtime="20201029 18:17:35.545"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:35.524" endtime="20201029 18:17:35.546"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:35.559" endtime="20201029 18:17:38.581"></status>
</kw>
<msg timestamp="20201029 18:17:38.582" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:35.558" endtime="20201029 18:17:38.583"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:38.588" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:38.584" endtime="20201029 18:17:38.588"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:17:38.594" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:17:38.590" endtime="20201029 18:17:38.595"></status>
</kw>
<status status="FAIL" starttime="20201029 18:17:35.555" endtime="20201029 18:17:38.596"></status>
</kw>
<status status="FAIL" starttime="20201029 18:17:35.552" endtime="20201029 18:17:38.598"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:35.551" endtime="20201029 18:17:38.598"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:17:38.607" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:17:38.605" endtime="20201029 18:17:38.607"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:38.600" endtime="20201029 18:17:38.608"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:35.550" endtime="20201029 18:17:38.608"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:35.549" endtime="20201029 18:17:38.609"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:38.611" endtime="20201029 18:17:38.614"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:35.548" endtime="20201029 18:17:38.615"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:35.546" endtime="20201029 18:17:38.616"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:35.523" endtime="20201029 18:17:38.617"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:38.640" endtime="20201029 18:17:38.659"></status>
</kw>
<msg timestamp="20201029 18:17:38.660" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:38.637" endtime="20201029 18:17:38.660"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:38.666" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:38.662" endtime="20201029 18:17:38.667"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:38.669" endtime="20201029 18:17:38.672"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:38.628" endtime="20201029 18:17:38.674"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:38.624" endtime="20201029 18:17:38.675"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:38.689" endtime="20201029 18:17:38.992"></status>
</kw>
<msg timestamp="20201029 18:17:38.995" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.106867347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.106873431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:38.686" endtime="20201029 18:17:38.996"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:39.004" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.106867347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.106873431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:38.996" endtime="20201029 18:17:39.004"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:39.005" endtime="20201029 18:17:39.007"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:38.680" endtime="20201029 18:17:39.007"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:38.676" endtime="20201029 18:17:39.008"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:39.012" level="INFO">${RESULT} = [{'diff': 6.083999999795253e-06}, {'diff': 6.417000000258355e-06}, {'diff': 6.084000000239342e-06}, {'diff': 5.403000000292479e-06}, {'diff': 5.722000000041305e-06}, {'diff': 5.360999999926008e-06}, {...</msg>
<status status="PASS" starttime="20201029 18:17:39.008" endtime="20201029 18:17:39.012"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:39.016" level="INFO">${ACCURACY} = {'diff': [6.083999999795253e-06, 6.417000000258355e-06, 6.084000000239342e-06, 5.403000000292479e-06, 5.722000000041305e-06, 5.360999999926008e-06, 5.735999999867403e-06, 5.3610000003700975e-06, 6.056...</msg>
<status status="PASS" starttime="20201029 18:17:39.013" endtime="20201029 18:17:39.017"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:39.022" level="INFO">NAME: accuracy-TIMER_SLEEP-1-philip</msg>
<status status="PASS" starttime="20201029 18:17:39.021" endtime="20201029 18:17:39.022"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:39.024" level="INFO">VALUE: [6.083999999795253e-06, 6.417000000258355e-06, 6.084000000239342e-06, 5.403000000292479e-06, 5.722000000041305e-06, 5.360999999926008e-06, 5.735999999867403e-06, 5.3610000003700975e-06, 6.056000000143058e-06, 5.40299999984839e-06, 6.055999999698969e-06, 5.722999999679956e-06, 5.375000000196195e-06, 5.348000000182651e-06, 5.374999999752106e-06, 5.374999999752106e-06, 6.361999999704437e-06, 6.055000000060318e-06, 6.069999999969156e-06, 5.360999999926008e-06, 6.0690000003305045e-06, 5.7230000001240455e-06, 5.722000000041305e-06, 6.069999999969156e-06, 5.722999999679956e-06, 6.083999999795253e-06, 5.736000000311492e-06, 5.708000000215208e-06, 5.735999999867403e-06, 5.763999999963687e-06, 5.389000000022293e-06, 5.735999999867403e-06, 6.083000000156602e-06, 5.360999999926008e-06, 5.375000000196195e-06, 6.110999999808797e-06, 6.068999999886415e-06, 5.389000000022293e-06, 5.820000000156256e-06, 6.069999999969156e-06, 6.055000000060318e-06, 5.778000000233874e-06, 5.7499999996935e-06, 6.083999999795253e-06, 5.735999999867403e-06, 5.389000000022293e-06, 5.374999999752106e-06, 6.083000000156602e-06, 6.070000000413245e-06, 5.722000000041305e-06]</msg>
<status status="PASS" starttime="20201029 18:17:39.023" endtime="20201029 18:17:39.025"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:39.017" endtime="20201029 18:17:39.025"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:39.029" endtime="20201029 18:17:39.049"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:39.027" endtime="20201029 18:17:39.049"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:39.026" endtime="20201029 18:17:39.049"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:38.620" endtime="20201029 18:17:39.050"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:38.619" endtime="20201029 18:17:39.050"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:39.059" endtime="20201029 18:17:39.073"></status>
</kw>
<msg timestamp="20201029 18:17:39.074" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:39.057" endtime="20201029 18:17:39.074"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:39.076" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:39.075" endtime="20201029 18:17:39.077"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:39.078" endtime="20201029 18:17:39.079"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:39.055" endtime="20201029 18:17:39.080"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:39.052" endtime="20201029 18:17:39.080"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:39.087" endtime="20201029 18:17:39.375"></status>
</kw>
<msg timestamp="20201029 18:17:39.378" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020494097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020501236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:39.085" endtime="20201029 18:17:39.378"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:39.386" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020494097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020501236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:39.379" endtime="20201029 18:17:39.386"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:39.387" endtime="20201029 18:17:39.389"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:39.083" endtime="20201029 18:17:39.390"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:39.081" endtime="20201029 18:17:39.390"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:39.394" level="INFO">${RESULT} = [{'diff': 7.138999999999757e-06}, {'diff': 6.403000000002046e-06}, {'diff': 6.415999999998673e-06}, {'diff': 7.111000000000617e-06}, {'diff': 6.360999999999867e-06}, {'diff': 7.097000000001047e-06}, {...</msg>
<status status="PASS" starttime="20201029 18:17:39.391" endtime="20201029 18:17:39.394"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:39.400" level="INFO">${ACCURACY} = {'diff': [7.138999999999757e-06, 6.403000000002046e-06, 6.415999999998673e-06, 7.111000000000617e-06, 6.360999999999867e-06, 7.097000000001047e-06, 7.167000000002366e-06, 7.097000000001047e-06, 6.7499...</msg>
<status status="PASS" starttime="20201029 18:17:39.395" endtime="20201029 18:17:39.400"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:39.404" level="INFO">NAME: accuracy-TIMER_SLEEP-2-philip</msg>
<status status="PASS" starttime="20201029 18:17:39.403" endtime="20201029 18:17:39.405"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:39.407" level="INFO">VALUE: [7.138999999999757e-06, 6.403000000002046e-06, 6.415999999998673e-06, 7.111000000000617e-06, 6.360999999999867e-06, 7.097000000001047e-06, 7.167000000002366e-06, 7.097000000001047e-06, 6.749999999999812e-06, 7.111000000000617e-06, 7.1529999999993266e-06, 6.416000000002142e-06, 6.764000000002851e-06, 7.110999999997147e-06, 7.125000000000187e-06, 7.0969999999975775e-06, 6.416999999998146e-06, 7.111000000000617e-06, 6.417000000001616e-06, 7.125000000000187e-06, 7.125000000000187e-06, 6.417000000001616e-06, 6.749999999999812e-06, 7.054999999998868e-06, 7.111000000000617e-06, 7.0969999999975775e-06, 6.416000000002142e-06, 7.111000000000617e-06, 7.111000000000617e-06, 6.417000000001616e-06, 7.125000000000187e-06, 6.417000000001616e-06, 6.417000000001616e-06, 6.416999999998146e-06, 7.0969999999975775e-06, 6.430000000001712e-06, 6.403000000002046e-06, 7.0279999999992016e-06, 7.111000000000617e-06, 6.805000000002087e-06, 6.4029999999985765e-06, 6.360999999999867e-06, 7.097000000001047e-06, 7.097000000001047e-06, 6.680000000001962e-06, 7.070000000001381e-06, 7.056000000001811e-06, 6.708999999997106e-06, 6.417000000001616e-06, 6.764000000002851e-06]</msg>
<status status="PASS" starttime="20201029 18:17:39.406" endtime="20201029 18:17:39.407"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:39.401" endtime="20201029 18:17:39.408"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:39.412" endtime="20201029 18:17:39.431"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:39.410" endtime="20201029 18:17:39.432"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:39.409" endtime="20201029 18:17:39.432"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:39.051" endtime="20201029 18:17:39.433"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:39.050" endtime="20201029 18:17:39.433"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:39.442" endtime="20201029 18:17:39.457"></status>
</kw>
<msg timestamp="20201029 18:17:39.457" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:39.441" endtime="20201029 18:17:39.457"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:39.459" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:39.458" endtime="20201029 18:17:39.460"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:39.461" endtime="20201029 18:17:39.463"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:39.438" endtime="20201029 18:17:39.463"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:39.435" endtime="20201029 18:17:39.464"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:39.470" endtime="20201029 18:17:39.757"></status>
</kw>
<msg timestamp="20201029 18:17:39.760" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020607486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020615292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:39.469" endtime="20201029 18:17:39.760"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:39.769" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020607486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020615292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:39.761" endtime="20201029 18:17:39.769"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:39.770" endtime="20201029 18:17:39.772"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:39.466" endtime="20201029 18:17:39.772"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:39.464" endtime="20201029 18:17:39.773"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:39.777" level="INFO">${RESULT} = [{'diff': 7.805999999999091e-06}, {'diff': 8.139000000000757e-06}, {'diff': 8.179999999999993e-06}, {'diff': 7.457999999998383e-06}, {'diff': 7.818999999999188e-06}, {'diff': 7.458999999997856e-06}, {...</msg>
<status status="PASS" starttime="20201029 18:17:39.774" endtime="20201029 18:17:39.777"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:39.781" level="INFO">${ACCURACY} = {'diff': [7.805999999999091e-06, 8.139000000000757e-06, 8.179999999999993e-06, 7.457999999998383e-06, 7.818999999999188e-06, 7.458999999997856e-06, 7.818999999999188e-06, 7.82000000000213e-06, 8.08299...</msg>
<status status="PASS" starttime="20201029 18:17:39.778" endtime="20201029 18:17:39.781"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:39.786" level="INFO">NAME: accuracy-TIMER_SLEEP-3-philip</msg>
<status status="PASS" starttime="20201029 18:17:39.785" endtime="20201029 18:17:39.786"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:39.788" level="INFO">VALUE: [7.805999999999091e-06, 8.139000000000757e-06, 8.179999999999993e-06, 7.457999999998383e-06, 7.818999999999188e-06, 7.458999999997856e-06, 7.818999999999188e-06, 7.82000000000213e-06, 8.082999999999008e-06, 7.458000000001852e-06, 8.138999999997287e-06, 8.139000000000757e-06, 7.833999999998231e-06, 7.458000000001852e-06, 7.458999999997856e-06, 8.166999999999897e-06, 7.457999999998383e-06, 7.791999999999522e-06, 7.443999999998813e-06, 7.402999999999577e-06, 7.777999999999952e-06, 8.139000000000757e-06, 8.110999999998147e-06, 7.473000000000896e-06, 7.791999999999522e-06, 7.443999999998813e-06, 7.819000000002657e-06, 7.125000000000187e-06, 7.429999999999243e-06, 8.166999999999897e-06, 8.124999999997717e-06, 7.804999999999618e-06, 7.429999999999243e-06, 7.444999999998286e-06, 7.777999999999952e-06, 7.791999999999522e-06, 7.459000000001326e-06, 7.445000000001756e-06, 7.444999999998286e-06, 7.459000000001326e-06, 7.4719999999979525e-06, 7.430999999998716e-06, 8.138999999997287e-06, 7.750000000000812e-06, 7.777999999999952e-06, 7.458999999997856e-06, 7.791999999999522e-06, 8.139000000000757e-06, 8.082999999999008e-06, 8.153000000000327e-06]</msg>
<status status="PASS" starttime="20201029 18:17:39.787" endtime="20201029 18:17:39.789"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:39.782" endtime="20201029 18:17:39.789"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:39.793" endtime="20201029 18:17:39.813"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:39.792" endtime="20201029 18:17:39.813"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:39.790" endtime="20201029 18:17:39.820"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:39.434" endtime="20201029 18:17:39.820"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:39.433" endtime="20201029 18:17:39.821"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:39.831" endtime="20201029 18:17:39.845"></status>
</kw>
<msg timestamp="20201029 18:17:39.845" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:39.828" endtime="20201029 18:17:39.845"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:39.848" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:39.846" endtime="20201029 18:17:39.848"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:39.849" endtime="20201029 18:17:39.851"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:39.825" endtime="20201029 18:17:39.851"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:39.823" endtime="20201029 18:17:39.852"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:39.858" endtime="20201029 18:17:40.143"></status>
</kw>
<msg timestamp="20201029 18:17:40.146" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028176917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028185736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:39.857" endtime="20201029 18:17:40.147"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:40.155" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028176917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028185736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:40.148" endtime="20201029 18:17:40.155"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:40.156" endtime="20201029 18:17:40.158"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:39.854" endtime="20201029 18:17:40.159"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:39.852" endtime="20201029 18:17:40.159"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:40.163" level="INFO">${RESULT} = [{'diff': 8.819000000000188e-06}, {'diff': 8.860999999998898e-06}, {'diff': 8.833999999999231e-06}, {'diff': 8.846999999999328e-06}, {'diff': 8.139000000000757e-06}, {'diff': 9.194000000000563e-06}, {...</msg>
<status status="PASS" starttime="20201029 18:17:40.160" endtime="20201029 18:17:40.164"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:40.168" level="INFO">${ACCURACY} = {'diff': [8.819000000000188e-06, 8.860999999998898e-06, 8.833999999999231e-06, 8.846999999999328e-06, 8.139000000000757e-06, 9.194000000000563e-06, 8.486999999997996e-06, 8.473000000001896e-06, 8.4859...</msg>
<status status="PASS" starttime="20201029 18:17:40.164" endtime="20201029 18:17:40.168"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:40.172" level="INFO">NAME: accuracy-TIMER_SLEEP-4-philip</msg>
<status status="PASS" starttime="20201029 18:17:40.171" endtime="20201029 18:17:40.173"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:40.175" level="INFO">VALUE: [8.819000000000188e-06, 8.860999999998898e-06, 8.833999999999231e-06, 8.846999999999328e-06, 8.139000000000757e-06, 9.194000000000563e-06, 8.486999999997996e-06, 8.473000000001896e-06, 8.485999999998523e-06, 9.179999999997523e-06, 8.833999999999231e-06, 8.833999999999231e-06, 8.832999999999758e-06, 9.180000000000993e-06, 9.208000000000133e-06, 8.500000000001562e-06, 8.832999999999758e-06, 8.500000000001562e-06, 8.485999999998523e-06, 8.500000000001562e-06, 8.832999999999758e-06, 8.819000000000188e-06, 9.181000000000467e-06, 8.486000000001992e-06, 8.138999999997287e-06, 9.208000000000133e-06, 9.181000000000467e-06, 8.833999999999231e-06, 8.485999999998523e-06, 8.500000000001562e-06, 9.208000000000133e-06, 8.819999999999661e-06, 9.180000000000993e-06, 8.500000000001562e-06, 8.8340000000027e-06, 9.180000000000993e-06, 9.180000000000993e-06, 8.832999999999758e-06, 8.485999999998523e-06, 8.473000000001896e-06, 8.499999999998092e-06, 9.152000000001853e-06, 8.819999999999661e-06, 8.832999999999758e-06, 8.486000000001992e-06, 9.165999999997954e-06, 8.832999999999758e-06, 8.500000000001562e-06, 9.166999999997427e-06, 8.125000000001187e-06]</msg>
<status status="PASS" starttime="20201029 18:17:40.174" endtime="20201029 18:17:40.176"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:40.168" endtime="20201029 18:17:40.177"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:40.181" endtime="20201029 18:17:40.201"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:40.179" endtime="20201029 18:17:40.201"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:40.178" endtime="20201029 18:17:40.202"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:39.822" endtime="20201029 18:17:40.202"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:39.821" endtime="20201029 18:17:40.202"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:40.211" endtime="20201029 18:17:40.225"></status>
</kw>
<msg timestamp="20201029 18:17:40.226" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:40.209" endtime="20201029 18:17:40.226"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:40.228" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:40.227" endtime="20201029 18:17:40.228"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:40.229" endtime="20201029 18:17:40.231"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:40.207" endtime="20201029 18:17:40.231"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:40.205" endtime="20201029 18:17:40.232"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:40.239" endtime="20201029 18:17:40.534"></status>
</kw>
<msg timestamp="20201029 18:17:40.538" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020232264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020241792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:40.237" endtime="20201029 18:17:40.538"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:40.546" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020232264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020241792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:40.539" endtime="20201029 18:17:40.547"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:40.548" endtime="20201029 18:17:40.549"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:40.234" endtime="20201029 18:17:40.550"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:40.233" endtime="20201029 18:17:40.550"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:40.554" level="INFO">${RESULT} = [{'diff': 9.528000000001702e-06}, {'diff': 9.832999999997288e-06}, {'diff': 9.874999999999468e-06}, {'diff': 9.166999999997427e-06}, {'diff': 9.860999999999898e-06}, {'diff': 9.249999999998842e-06}, {...</msg>
<status status="PASS" starttime="20201029 18:17:40.551" endtime="20201029 18:17:40.555"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:40.560" level="INFO">${ACCURACY} = {'diff': [9.528000000001702e-06, 9.832999999997288e-06, 9.874999999999468e-06, 9.166999999997427e-06, 9.860999999999898e-06, 9.249999999998842e-06, 9.528000000001702e-06, 9.847000000000328e-06, 1.0222...</msg>
<status status="PASS" starttime="20201029 18:17:40.555" endtime="20201029 18:17:40.560"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:40.565" level="INFO">NAME: accuracy-TIMER_SLEEP-5-philip</msg>
<status status="PASS" starttime="20201029 18:17:40.563" endtime="20201029 18:17:40.565"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:40.567" level="INFO">VALUE: [9.528000000001702e-06, 9.832999999997288e-06, 9.874999999999468e-06, 9.166999999997427e-06, 9.860999999999898e-06, 9.249999999998842e-06, 9.528000000001702e-06, 9.847000000000328e-06, 1.0222000000000703e-05, 9.833000000000758e-06, 1.0193999999998093e-05, 9.527999999998232e-06, 9.542000000001272e-06, 9.541000000001798e-06, 9.499999999999093e-06, 9.181000000000467e-06, 9.514000000002132e-06, 1.0223000000000176e-05, 9.874999999999468e-06, 9.875000000002937e-06, 9.874999999999468e-06, 9.540999999998329e-06, 9.945000000000787e-06, 9.527000000002228e-06, 9.874999999999468e-06, 9.943999999997843e-06, 9.874999999999468e-06, 1.0236000000000273e-05, 1.0222000000000703e-05, 9.167000000000897e-06, 9.860999999999898e-06, 9.875000000002937e-06, 9.847000000000328e-06, 1.0236000000000273e-05, 9.526999999998759e-06, 9.527999999998232e-06, 9.458999999999856e-06, 9.194000000000563e-06, 1.0221999999997233e-05, 9.860999999999898e-06, 9.513999999998662e-06, 1.0221999999997233e-05, 9.847999999999801e-06, 9.527999999998232e-06, 1.0208000000001133e-05, 9.597000000000078e-06, 9.889000000002507e-06, 9.597000000000078e-06, 9.528000000001702e-06, 9.874999999999468e-06]</msg>
<status status="PASS" starttime="20201029 18:17:40.566" endtime="20201029 18:17:40.568"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:40.560" endtime="20201029 18:17:40.569"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:40.573" endtime="20201029 18:17:40.592"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:40.571" endtime="20201029 18:17:40.593"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:40.570" endtime="20201029 18:17:40.593"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:40.203" endtime="20201029 18:17:40.593"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:40.202" endtime="20201029 18:17:40.593"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:40.603" endtime="20201029 18:17:40.617"></status>
</kw>
<msg timestamp="20201029 18:17:40.618" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:40.601" endtime="20201029 18:17:40.618"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:40.620" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:40.619" endtime="20201029 18:17:40.621"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:40.622" endtime="20201029 18:17:40.623"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:40.598" endtime="20201029 18:17:40.624"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:40.596" endtime="20201029 18:17:40.624"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:40.631" endtime="20201029 18:17:40.922"></status>
</kw>
<msg timestamp="20201029 18:17:40.925" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020274958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020285514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:40.629" endtime="20201029 18:17:40.925"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:40.933" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020274958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020285514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:40.926" endtime="20201029 18:17:40.934"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:40.934" endtime="20201029 18:17:40.936"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:40.627" endtime="20201029 18:17:40.937"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:40.625" endtime="20201029 18:17:40.937"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:40.941" level="INFO">${RESULT} = [{'diff': 1.0556000000001842e-05}, {'diff': 1.0570000000001412e-05}, {'diff': 1.0902999999999607e-05}, {'diff': 1.0570000000001412e-05}, {'diff': 1.0222000000000703e-05}, {'diff': 1.0542000000002272e-...</msg>
<status status="PASS" starttime="20201029 18:17:40.938" endtime="20201029 18:17:40.941"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:40.946" level="INFO">${ACCURACY} = {'diff': [1.0556000000001842e-05, 1.0570000000001412e-05, 1.0902999999999607e-05, 1.0570000000001412e-05, 1.0222000000000703e-05, 1.0542000000002272e-05, 1.1249999999997373e-05, 1.0888000000000564e-05...</msg>
<status status="PASS" starttime="20201029 18:17:40.942" endtime="20201029 18:17:40.946"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:40.950" level="INFO">NAME: accuracy-TIMER_SLEEP-6-philip</msg>
<status status="PASS" starttime="20201029 18:17:40.949" endtime="20201029 18:17:40.951"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:40.953" level="INFO">VALUE: [1.0556000000001842e-05, 1.0570000000001412e-05, 1.0902999999999607e-05, 1.0570000000001412e-05, 1.0222000000000703e-05, 1.0542000000002272e-05, 1.1249999999997373e-05, 1.0888000000000564e-05, 1.0541999999998802e-05, 1.1250000000000843e-05, 1.0638000000000314e-05, 1.0541999999998802e-05, 1.0555999999998372e-05, 1.0957999999998413e-05, 1.0930999999998747e-05, 1.0554999999998899e-05, 1.0916999999999177e-05, 1.1249999999997373e-05, 1.0902999999999607e-05, 1.0583000000001508e-05, 1.0902999999999607e-05, 1.0916999999999177e-05, 1.0207999999997663e-05, 1.0527999999999232e-05, 1.0902999999999607e-05, 1.0541999999998802e-05, 1.0209000000000606e-05, 1.1236000000001273e-05, 1.0915999999999704e-05, 1.0903000000003077e-05, 1.0944999999998317e-05, 1.1250000000000843e-05, 1.0222000000000703e-05, 1.0209000000000606e-05, 1.0861000000000898e-05, 1.1264000000000413e-05, 1.0193999999998093e-05, 1.0902999999999607e-05, 1.0208000000001133e-05, 1.1292000000003022e-05, 1.1249999999997373e-05, 1.0889000000000038e-05, 1.0916999999999177e-05, 1.0916999999999177e-05, 1.1250000000000843e-05, 1.1277999999999982e-05, 1.0555999999998372e-05, 1.0221999999997233e-05, 1.0902999999999607e-05, 1.0902999999999607e-05]</msg>
<status status="PASS" starttime="20201029 18:17:40.951" endtime="20201029 18:17:40.954"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:40.946" endtime="20201029 18:17:40.954"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:40.958" endtime="20201029 18:17:40.978"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:40.957" endtime="20201029 18:17:40.978"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:40.955" endtime="20201029 18:17:40.979"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:40.594" endtime="20201029 18:17:40.979"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:40.594" endtime="20201029 18:17:40.979"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:40.988" endtime="20201029 18:17:41.004"></status>
</kw>
<msg timestamp="20201029 18:17:41.004" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:40.986" endtime="20201029 18:17:41.005"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:41.007" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:41.005" endtime="20201029 18:17:41.007"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:41.008" endtime="20201029 18:17:41.010"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:40.984" endtime="20201029 18:17:41.010"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:40.982" endtime="20201029 18:17:41.011"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:41.018" endtime="20201029 18:17:41.306"></status>
</kw>
<msg timestamp="20201029 18:17:41.309" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021086292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021098236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:41.016" endtime="20201029 18:17:41.309"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:41.317" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021086292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021098236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:41.310" endtime="20201029 18:17:41.318"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:41.319" endtime="20201029 18:17:41.320"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:41.013" endtime="20201029 18:17:41.321"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:41.011" endtime="20201029 18:17:41.321"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:41.326" level="INFO">${RESULT} = [{'diff': 1.1943999999999844e-05}, {'diff': 1.1945000000002787e-05}, {'diff': 1.1943999999999844e-05}, {'diff': 1.1582999999999039e-05}, {'diff': 1.1582999999999039e-05}, {'diff': 1.2292000000000552e-...</msg>
<status status="PASS" starttime="20201029 18:17:41.322" endtime="20201029 18:17:41.326"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:41.330" level="INFO">${ACCURACY} = {'diff': [1.1943999999999844e-05, 1.1945000000002787e-05, 1.1943999999999844e-05, 1.1582999999999039e-05, 1.1582999999999039e-05, 1.2292000000000552e-05, 1.1598000000001552e-05, 1.1264000000000413e-05...</msg>
<status status="PASS" starttime="20201029 18:17:41.327" endtime="20201029 18:17:41.330"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:41.335" level="INFO">NAME: accuracy-TIMER_SLEEP-7-philip</msg>
<status status="PASS" starttime="20201029 18:17:41.334" endtime="20201029 18:17:41.335"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:41.337" level="INFO">VALUE: [1.1943999999999844e-05, 1.1945000000002787e-05, 1.1943999999999844e-05, 1.1582999999999039e-05, 1.1582999999999039e-05, 1.2292000000000552e-05, 1.1598000000001552e-05, 1.1264000000000413e-05, 1.1249999999997373e-05, 1.1596999999998608e-05, 1.1250000000000843e-05, 1.1943999999999844e-05, 1.1930999999999747e-05, 1.1944999999999317e-05, 1.1250000000000843e-05, 1.2209000000002607e-05, 1.1943999999999844e-05, 1.1582999999999039e-05, 1.1943999999999844e-05, 1.1944999999999317e-05, 1.1583999999998512e-05, 1.1943999999999844e-05, 1.1236000000001273e-05, 1.1582999999999039e-05, 1.1597999999998082e-05, 1.1610999999998178e-05, 1.1959000000002357e-05, 1.1944999999999317e-05, 1.1568999999999469e-05, 1.2305000000000649e-05, 1.1250000000000843e-05, 1.230499999999718e-05, 1.1666999999999927e-05, 1.1638999999997318e-05, 1.1250000000000843e-05, 1.1930000000000274e-05, 1.2291999999997083e-05, 1.1653000000000358e-05, 1.1264000000000413e-05, 1.2306000000000122e-05, 1.1582999999999039e-05, 1.1237000000000746e-05, 1.1915999999997234e-05, 1.1250000000000843e-05, 1.2291000000001079e-05, 1.1610999999998178e-05, 1.1596999999998608e-05, 1.1943999999999844e-05, 1.1611000000001648e-05, 1.1568999999999469e-05]</msg>
<status status="PASS" starttime="20201029 18:17:41.336" endtime="20201029 18:17:41.339"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:41.331" endtime="20201029 18:17:41.340"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:41.343" endtime="20201029 18:17:41.363"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:41.342" endtime="20201029 18:17:41.364"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:41.341" endtime="20201029 18:17:41.364"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:40.980" endtime="20201029 18:17:41.364"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:40.979" endtime="20201029 18:17:41.364"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:41.374" endtime="20201029 18:17:41.388"></status>
</kw>
<msg timestamp="20201029 18:17:41.389" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:41.372" endtime="20201029 18:17:41.389"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:41.391" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:41.390" endtime="20201029 18:17:41.392"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:41.392" endtime="20201029 18:17:41.394"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:41.369" endtime="20201029 18:17:41.395"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:41.367" endtime="20201029 18:17:41.395"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:41.402" endtime="20201029 18:17:41.688"></status>
</kw>
<msg timestamp="20201029 18:17:41.692" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020369444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020382403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:41.400" endtime="20201029 18:17:41.692"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:41.700" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020369444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020382403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:41.693" endtime="20201029 18:17:41.700"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:41.701" endtime="20201029 18:17:41.703"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:41.397" endtime="20201029 18:17:41.703"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:41.396" endtime="20201029 18:17:41.704"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:41.708" level="INFO">${RESULT} = [{'diff': 1.2958999999999887e-05}, {'diff': 1.2638999999998318e-05}, {'diff': 1.3027999999998263e-05}, {'diff': 1.2638999999998318e-05}, {'diff': 1.2985999999999553e-05}, {'diff': 1.2680000000001024e-...</msg>
<status status="PASS" starttime="20201029 18:17:41.705" endtime="20201029 18:17:41.708"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:41.715" level="INFO">${ACCURACY} = {'diff': [1.2958999999999887e-05, 1.2638999999998318e-05, 1.3027999999998263e-05, 1.2638999999998318e-05, 1.2985999999999553e-05, 1.2680000000001024e-05, 1.2999999999999123e-05, 1.2611000000002648e-05...</msg>
<status status="PASS" starttime="20201029 18:17:41.709" endtime="20201029 18:17:41.716"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:41.720" level="INFO">NAME: accuracy-TIMER_SLEEP-8-philip</msg>
<status status="PASS" starttime="20201029 18:17:41.719" endtime="20201029 18:17:41.721"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:41.723" level="INFO">VALUE: [1.2958999999999887e-05, 1.2638999999998318e-05, 1.3027999999998263e-05, 1.2638999999998318e-05, 1.2985999999999553e-05, 1.2680000000001024e-05, 1.2999999999999123e-05, 1.2611000000002648e-05, 1.2610999999999178e-05, 1.2652999999997888e-05, 1.2639000000001788e-05, 1.2624999999998748e-05, 1.3333000000000789e-05, 1.2624999999998748e-05, 1.2986999999999027e-05, 1.2985999999999553e-05, 1.2277999999997513e-05, 1.2639000000001788e-05, 1.2263999999997943e-05, 1.2971999999999984e-05, 1.2625000000002218e-05, 1.3042000000001303e-05, 1.2624999999998748e-05, 1.2277999999997513e-05, 1.2999999999999123e-05, 1.2291999999997083e-05, 1.2638999999998318e-05, 1.2624999999998748e-05, 1.2985999999999553e-05, 1.2945000000000317e-05, 1.2639000000001788e-05, 1.3374999999999498e-05, 1.3333000000000789e-05, 1.2958000000000414e-05, 1.3319000000001219e-05, 1.2319000000000219e-05, 1.2971999999999984e-05, 1.3305999999997653e-05, 1.2985999999999553e-05, 1.2985999999999553e-05, 1.2985999999999553e-05, 1.2263999999997943e-05, 1.2985999999999553e-05, 1.2958000000000414e-05, 1.2652999999997888e-05, 1.3388999999999068e-05, 1.2624999999998748e-05, 1.2264000000001413e-05, 1.2638999999998318e-05, 1.2985999999999553e-05]</msg>
<status status="PASS" starttime="20201029 18:17:41.721" endtime="20201029 18:17:41.724"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:41.716" endtime="20201029 18:17:41.724"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:41.728" endtime="20201029 18:17:41.747"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:41.726" endtime="20201029 18:17:41.748"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:41.725" endtime="20201029 18:17:41.748"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:41.365" endtime="20201029 18:17:41.749"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:41.365" endtime="20201029 18:17:41.749"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:41.758" endtime="20201029 18:17:41.773"></status>
</kw>
<msg timestamp="20201029 18:17:41.774" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:41.756" endtime="20201029 18:17:41.774"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:41.776" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:41.775" endtime="20201029 18:17:41.777"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:41.778" endtime="20201029 18:17:41.779"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:41.754" endtime="20201029 18:17:41.780"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:41.751" endtime="20201029 18:17:41.780"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:41.787" endtime="20201029 18:17:42.074"></status>
</kw>
<msg timestamp="20201029 18:17:42.077" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020111514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020125528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:41.786" endtime="20201029 18:17:42.077"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:42.085" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020111514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020125528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:42.078" endtime="20201029 18:17:42.086"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:42.087" endtime="20201029 18:17:42.088"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:41.783" endtime="20201029 18:17:42.089"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:41.781" endtime="20201029 18:17:42.089"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:42.094" level="INFO">${RESULT} = [{'diff': 1.4013999999999693e-05}, {'diff': 1.4028000000002733e-05}, {'diff': 1.430499999999918e-05}, {'diff': 1.3681000000001498e-05}, {'diff': 1.3305000000001649e-05}, {'diff': 1.3665999999998985e-0...</msg>
<status status="PASS" starttime="20201029 18:17:42.090" endtime="20201029 18:17:42.094"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:42.098" level="INFO">${ACCURACY} = {'diff': [1.4013999999999693e-05, 1.4028000000002733e-05, 1.430499999999918e-05, 1.3681000000001498e-05, 1.3305000000001649e-05, 1.3665999999998985e-05, 1.3652999999998888e-05, 1.3598000000000082e-05,...</msg>
<status status="PASS" starttime="20201029 18:17:42.095" endtime="20201029 18:17:42.098"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:42.103" level="INFO">NAME: accuracy-TIMER_SLEEP-9-philip</msg>
<status status="PASS" starttime="20201029 18:17:42.101" endtime="20201029 18:17:42.103"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:42.105" level="INFO">VALUE: [1.4013999999999693e-05, 1.4028000000002733e-05, 1.430499999999918e-05, 1.3681000000001498e-05, 1.3305000000001649e-05, 1.3665999999998985e-05, 1.3652999999998888e-05, 1.3598000000000082e-05, 1.3986000000000554e-05, 1.3680000000002024e-05, 1.4013999999999693e-05, 1.3986000000000554e-05, 1.3667000000001928e-05, 1.3944999999997848e-05, 1.4028000000002733e-05, 1.3305000000001649e-05, 1.4000000000000123e-05, 1.4056000000001873e-05, 1.3653000000002358e-05, 1.4027999999999263e-05, 1.3666999999998458e-05, 1.4097000000001109e-05, 1.4013999999999693e-05, 1.3681000000001498e-05, 1.331899999999775e-05, 1.4070000000001442e-05, 1.4056000000001873e-05, 1.3652999999998888e-05, 1.3347000000000359e-05, 1.401300000000022e-05, 1.4319000000002219e-05, 1.4000000000000123e-05, 1.3681000000001498e-05, 1.3667000000001928e-05, 1.3708000000001164e-05, 1.3249999999999373e-05, 1.3667000000001928e-05, 1.3652999999998888e-05, 1.4013999999999693e-05, 1.333299999999732e-05, 1.3681000000001498e-05, 1.4013999999999693e-05, 1.4347000000001359e-05, 1.3333000000000789e-05, 1.4013999999999693e-05, 1.3319000000001219e-05, 1.4027999999999263e-05, 1.3334000000000262e-05, 1.3652999999998888e-05, 1.4013999999999693e-05]</msg>
<status status="PASS" starttime="20201029 18:17:42.104" endtime="20201029 18:17:42.106"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:42.099" endtime="20201029 18:17:42.107"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:42.110" endtime="20201029 18:17:42.130"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:42.109" endtime="20201029 18:17:42.130"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:42.108" endtime="20201029 18:17:42.131"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:41.750" endtime="20201029 18:17:42.131"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:41.749" endtime="20201029 18:17:42.131"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:42.140" endtime="20201029 18:17:42.158"></status>
</kw>
<msg timestamp="20201029 18:17:42.158" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:42.139" endtime="20201029 18:17:42.159"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:42.161" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:42.159" endtime="20201029 18:17:42.161"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:42.162" endtime="20201029 18:17:42.164"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:42.136" endtime="20201029 18:17:42.164"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:42.134" endtime="20201029 18:17:42.165"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:42.172" endtime="20201029 18:17:42.458"></status>
</kw>
<msg timestamp="20201029 18:17:42.461" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02210625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022120972, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:17:42.170" endtime="20201029 18:17:42.462"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:42.470" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02210625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022120972, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:17:42.462" endtime="20201029 18:17:42.470"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:42.471" endtime="20201029 18:17:42.473"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:42.167" endtime="20201029 18:17:42.473"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:42.166" endtime="20201029 18:17:42.474"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:42.478" level="INFO">${RESULT} = [{'diff': 1.4721999999998264e-05}, {'diff': 1.4361000000000929e-05}, {'diff': 1.53750000000015e-05}, {'diff': 1.430499999999918e-05}, {'diff': 1.5055999999999403e-05}, {'diff': 1.4721999999998264e-05}...</msg>
<status status="PASS" starttime="20201029 18:17:42.475" endtime="20201029 18:17:42.478"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:42.482" level="INFO">${ACCURACY} = {'diff': [1.4721999999998264e-05, 1.4361000000000929e-05, 1.53750000000015e-05, 1.430499999999918e-05, 1.5055999999999403e-05, 1.4721999999998264e-05, 1.5069999999998973e-05, 1.5041999999999833e-05, 1...</msg>
<status status="PASS" starttime="20201029 18:17:42.479" endtime="20201029 18:17:42.483"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:42.487" level="INFO">NAME: accuracy-TIMER_SLEEP-10-philip</msg>
<status status="PASS" starttime="20201029 18:17:42.486" endtime="20201029 18:17:42.487"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:42.490" level="INFO">VALUE: [1.4721999999998264e-05, 1.4361000000000929e-05, 1.53750000000015e-05, 1.430499999999918e-05, 1.5055999999999403e-05, 1.4721999999998264e-05, 1.5069999999998973e-05, 1.5041999999999833e-05, 1.5055999999999403e-05, 1.5055999999999403e-05, 1.5041999999999833e-05, 1.5041999999999833e-05, 1.4361000000000929e-05, 1.505499999999993e-05, 1.4722000000001734e-05, 1.4306000000002123e-05, 1.508299999999907e-05, 1.4694999999998598e-05, 1.538900000000107e-05, 1.4680999999999028e-05, 1.505499999999993e-05, 1.4721999999998264e-05, 1.4722000000001734e-05, 1.4362000000000402e-05, 1.4695000000002068e-05, 1.4375000000000498e-05, 1.4707999999998694e-05, 1.504099999999689e-05, 1.504100000000036e-05, 1.5069999999998973e-05, 1.4348000000000832e-05, 1.4375000000000498e-05, 1.5041999999999833e-05, 1.504100000000036e-05, 1.5028000000000263e-05, 1.509699999999864e-05, 1.5041999999999833e-05, 1.4707999999998694e-05, 1.505499999999993e-05, 1.4680999999999028e-05, 1.5083000000002539e-05, 1.5041999999999833e-05, 1.4347000000001359e-05, 1.4361000000000929e-05, 1.5055999999999403e-05, 1.4694999999998598e-05, 1.4708999999998168e-05, 1.434699999999789e-05, 1.5041999999999833e-05, 1.4680000000003024e-05]</msg>
<status status="PASS" starttime="20201029 18:17:42.488" endtime="20201029 18:17:42.491"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:42.483" endtime="20201029 18:17:42.492"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:42.496" endtime="20201029 18:17:42.515"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:42.494" endtime="20201029 18:17:42.516"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:42.493" endtime="20201029 18:17:42.516"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:42.132" endtime="20201029 18:17:42.516"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:42.132" endtime="20201029 18:17:42.517"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:42.526" endtime="20201029 18:17:42.540"></status>
</kw>
<msg timestamp="20201029 18:17:42.541" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:42.524" endtime="20201029 18:17:42.541"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:42.544" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:42.542" endtime="20201029 18:17:42.544"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:42.545" endtime="20201029 18:17:42.546"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:42.522" endtime="20201029 18:17:42.547"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:42.519" endtime="20201029 18:17:42.547"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:42.554" endtime="20201029 18:17:42.843"></status>
</kw>
<msg timestamp="20201029 18:17:42.846" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021051347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021067417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:42.553" endtime="20201029 18:17:42.846"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:42.854" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021051347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021067417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:42.847" endtime="20201029 18:17:42.855"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:42.855" endtime="20201029 18:17:42.857"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:42.550" endtime="20201029 18:17:42.858"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:42.548" endtime="20201029 18:17:42.858"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:42.862" level="INFO">${RESULT} = [{'diff': 1.6069999999999973e-05}, {'diff': 1.5736999999998308e-05}, {'diff': 1.5722999999998738e-05}, {'diff': 1.6083999999999543e-05}, {'diff': 1.60690000000005e-05}, {'diff': 1.608300000000007e-05}...</msg>
<status status="PASS" starttime="20201029 18:17:42.859" endtime="20201029 18:17:42.863"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:42.867" level="INFO">${ACCURACY} = {'diff': [1.6069999999999973e-05, 1.5736999999998308e-05, 1.5722999999998738e-05, 1.6083999999999543e-05, 1.60690000000005e-05, 1.608300000000007e-05, 1.538900000000107e-05, 1.538900000000107e-05, 1.5...</msg>
<status status="PASS" starttime="20201029 18:17:42.863" endtime="20201029 18:17:42.868"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:42.872" level="INFO">NAME: accuracy-TIMER_SLEEP-11-philip</msg>
<status status="PASS" starttime="20201029 18:17:42.871" endtime="20201029 18:17:42.873"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:42.875" level="INFO">VALUE: [1.6069999999999973e-05, 1.5736999999998308e-05, 1.5722999999998738e-05, 1.6083999999999543e-05, 1.60690000000005e-05, 1.608300000000007e-05, 1.538900000000107e-05, 1.538900000000107e-05, 1.540299999999717e-05, 1.53889999999976e-05, 1.6042000000000833e-05, 1.609700000000311e-05, 1.6083999999999543e-05, 1.5764000000001444e-05, 1.608300000000007e-05, 1.5348000000001832e-05, 1.5735999999998834e-05, 1.611099999999921e-05, 1.538900000000107e-05, 1.6027999999997794e-05, 1.541700000000021e-05, 1.6069999999999973e-05, 1.53889999999976e-05, 1.5721999999999264e-05, 1.609699999999964e-05, 1.6083999999999543e-05, 1.608300000000007e-05, 1.608300000000007e-05, 1.5764000000001444e-05, 1.5749999999998404e-05, 1.5735999999998834e-05, 1.60690000000005e-05, 1.608300000000007e-05, 1.609699999999964e-05, 1.541700000000021e-05, 1.5722000000002734e-05, 1.53889999999976e-05, 1.5778000000001013e-05, 1.5707999999999694e-05, 1.6083999999999543e-05, 1.5721999999999264e-05, 1.53889999999976e-05, 1.609699999999964e-05, 1.613899999999835e-05, 1.53889999999976e-05, 1.53889999999976e-05, 1.608300000000007e-05, 1.608300000000007e-05, 1.5764000000001444e-05, 1.613900000000182e-05]</msg>
<status status="PASS" starttime="20201029 18:17:42.874" endtime="20201029 18:17:42.876"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:42.868" endtime="20201029 18:17:42.876"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:42.880" endtime="20201029 18:17:42.900"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:42.879" endtime="20201029 18:17:42.900"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:42.877" endtime="20201029 18:17:42.901"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:42.518" endtime="20201029 18:17:42.901"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:42.517" endtime="20201029 18:17:42.901"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:42.910" endtime="20201029 18:17:42.924"></status>
</kw>
<msg timestamp="20201029 18:17:42.925" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:42.909" endtime="20201029 18:17:42.925"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:42.927" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:42.926" endtime="20201029 18:17:42.928"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:42.929" endtime="20201029 18:17:42.930"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:42.906" endtime="20201029 18:17:42.931"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:42.904" endtime="20201029 18:17:42.931"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:42.938" endtime="20201029 18:17:43.226"></status>
</kw>
<msg timestamp="20201029 18:17:43.229" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020294597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020311042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:42.936" endtime="20201029 18:17:43.230"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:43.238" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020294597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020311042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:43.231" endtime="20201029 18:17:43.238"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:43.239" endtime="20201029 18:17:43.241"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:42.934" endtime="20201029 18:17:43.241"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:42.932" endtime="20201029 18:17:43.242"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:43.246" level="INFO">${RESULT} = [{'diff': 1.6445000000000348e-05}, {'diff': 1.641700000000121e-05}, {'diff': 1.712499999999978e-05}, {'diff': 1.6778000000002014e-05}, {'diff': 1.677699999999907e-05}, {'diff': 1.7137999999999876e-05}...</msg>
<status status="PASS" starttime="20201029 18:17:43.243" endtime="20201029 18:17:43.246"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:43.250" level="INFO">${ACCURACY} = {'diff': [1.6445000000000348e-05, 1.641700000000121e-05, 1.712499999999978e-05, 1.6778000000002014e-05, 1.677699999999907e-05, 1.7137999999999876e-05, 1.713900000000282e-05, 1.711100000000021e-05, 1.7...</msg>
<status status="PASS" starttime="20201029 18:17:43.247" endtime="20201029 18:17:43.250"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:43.255" level="INFO">NAME: accuracy-TIMER_SLEEP-12-philip</msg>
<status status="PASS" starttime="20201029 18:17:43.254" endtime="20201029 18:17:43.255"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:43.257" level="INFO">VALUE: [1.6445000000000348e-05, 1.641700000000121e-05, 1.712499999999978e-05, 1.6778000000002014e-05, 1.677699999999907e-05, 1.7137999999999876e-05, 1.713900000000282e-05, 1.711100000000021e-05, 1.709700000000064e-05, 1.6444000000000875e-05, 1.712499999999978e-05, 1.711100000000021e-05, 1.712499999999978e-05, 1.6806000000001153e-05, 1.6445000000000348e-05, 1.677699999999907e-05, 1.679099999999864e-05, 1.6764000000002444e-05, 1.643100000000078e-05, 1.712499999999978e-05, 1.6777999999998544e-05, 1.713899999999935e-05, 1.6444000000000875e-05, 1.6777999999998544e-05, 1.6750000000002874e-05, 1.641700000000121e-05, 1.677699999999907e-05, 1.6763999999998974e-05, 1.6445000000000348e-05, 1.6806000000001153e-05, 1.711100000000021e-05, 1.641699999999774e-05, 1.6777999999998544e-05, 1.6791999999998114e-05, 1.713899999999935e-05, 1.712500000000325e-05, 1.684699999999692e-05, 1.713899999999935e-05, 1.6791999999998114e-05, 1.70690000000015e-05, 1.711100000000021e-05, 1.712499999999978e-05, 1.6777999999998544e-05, 1.679099999999864e-05, 1.6735999999999834e-05, 1.712499999999978e-05, 1.641699999999774e-05, 1.643100000000078e-05, 1.712499999999978e-05, 1.6778000000002014e-05]</msg>
<status status="PASS" starttime="20201029 18:17:43.256" endtime="20201029 18:17:43.258"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:43.251" endtime="20201029 18:17:43.259"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:43.263" endtime="20201029 18:17:43.282"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:43.261" endtime="20201029 18:17:43.283"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:43.260" endtime="20201029 18:17:43.283"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:42.902" endtime="20201029 18:17:43.283"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:42.902" endtime="20201029 18:17:43.284"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:43.293" endtime="20201029 18:17:43.309"></status>
</kw>
<msg timestamp="20201029 18:17:43.310" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:43.291" endtime="20201029 18:17:43.310"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:43.312" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:43.311" endtime="20201029 18:17:43.313"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:43.313" endtime="20201029 18:17:43.315"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:43.288" endtime="20201029 18:17:43.316"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:43.286" endtime="20201029 18:17:43.316"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:43.324" endtime="20201029 18:17:43.614"></status>
</kw>
<msg timestamp="20201029 18:17:43.617" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021256639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021274444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:43.322" endtime="20201029 18:17:43.617"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:43.625" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021256639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021274444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:43.618" endtime="20201029 18:17:43.626"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:43.627" endtime="20201029 18:17:43.628"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:43.319" endtime="20201029 18:17:43.629"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:43.317" endtime="20201029 18:17:43.629"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:43.634" level="INFO">${RESULT} = [{'diff': 1.780499999999921e-05}, {'diff': 1.781899999999878e-05}, {'diff': 1.7486000000000584e-05}, {'diff': 1.783300000000182e-05}, {'diff': 1.781899999999878e-05}, {'diff': 1.7084000000000543e-05},...</msg>
<status status="PASS" starttime="20201029 18:17:43.630" endtime="20201029 18:17:43.634"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:43.638" level="INFO">${ACCURACY} = {'diff': [1.780499999999921e-05, 1.781899999999878e-05, 1.7486000000000584e-05, 1.783300000000182e-05, 1.781899999999878e-05, 1.7084000000000543e-05, 1.7459000000000918e-05, 1.8152000000000446e-05, 1....</msg>
<status status="PASS" starttime="20201029 18:17:43.635" endtime="20201029 18:17:43.638"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:43.643" level="INFO">NAME: accuracy-TIMER_SLEEP-13-philip</msg>
<status status="PASS" starttime="20201029 18:17:43.642" endtime="20201029 18:17:43.643"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:43.645" level="INFO">VALUE: [1.780499999999921e-05, 1.781899999999878e-05, 1.7486000000000584e-05, 1.783300000000182e-05, 1.781899999999878e-05, 1.7084000000000543e-05, 1.7459000000000918e-05, 1.8152000000000446e-05, 1.8138000000000876e-05, 1.8235999999997865e-05, 1.7472000000001014e-05, 1.7472000000001014e-05, 1.781899999999878e-05, 1.781899999999878e-05, 1.7472000000001014e-05, 1.816699999999949e-05, 1.815299999999992e-05, 1.781900000000225e-05, 1.787500000000053e-05, 1.7805999999998684e-05, 1.7792000000002584e-05, 1.812499999999731e-05, 1.813899999999688e-05, 1.7472000000001014e-05, 1.7443999999998405e-05, 1.737500000000003e-05, 1.815299999999992e-05, 1.7473000000000488e-05, 1.815299999999992e-05, 1.816699999999949e-05, 1.7459000000000918e-05, 1.7806000000002153e-05, 1.780499999999921e-05, 1.815299999999992e-05, 1.783300000000182e-05, 1.7500000000000154e-05, 1.816699999999949e-05, 1.815299999999992e-05, 1.7500000000000154e-05, 1.819499999999863e-05, 1.7513999999999724e-05, 1.7805999999998684e-05, 1.7820000000001723e-05, 1.783299999999835e-05, 1.7486000000000584e-05, 1.781899999999878e-05, 1.744500000000135e-05, 1.7806000000002153e-05, 1.7471999999997545e-05, 1.7486000000000584e-05]</msg>
<status status="PASS" starttime="20201029 18:17:43.644" endtime="20201029 18:17:43.647"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:43.639" endtime="20201029 18:17:43.648"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:43.651" endtime="20201029 18:17:43.671"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:43.650" endtime="20201029 18:17:43.672"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:43.649" endtime="20201029 18:17:43.672"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:43.285" endtime="20201029 18:17:43.672"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:43.284" endtime="20201029 18:17:43.672"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:43.681" endtime="20201029 18:17:43.695"></status>
</kw>
<msg timestamp="20201029 18:17:43.696" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:43.680" endtime="20201029 18:17:43.696"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:43.699" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:43.697" endtime="20201029 18:17:43.699"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:43.700" endtime="20201029 18:17:43.701"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:43.677" endtime="20201029 18:17:43.702"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:43.675" endtime="20201029 18:17:43.703"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:43.709" endtime="20201029 18:17:44.018"></status>
</kw>
<msg timestamp="20201029 18:17:44.022" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020684556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020703403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:43.708" endtime="20201029 18:17:44.022"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:44.031" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020684556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020703403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:44.023" endtime="20201029 18:17:44.032"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:44.033" endtime="20201029 18:17:44.034"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:43.705" endtime="20201029 18:17:44.035"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:43.703" endtime="20201029 18:17:44.035"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:44.039" level="INFO">${RESULT} = [{'diff': 1.884699999999892e-05}, {'diff': 1.8486000000001584e-05}, {'diff': 1.884699999999892e-05}, {'diff': 1.886099999999849e-05}, {'diff': 1.9263999999998005e-05}, {'diff': 1.8847999999998394e-05}...</msg>
<status status="PASS" starttime="20201029 18:17:44.036" endtime="20201029 18:17:44.040"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:44.045" level="INFO">${ACCURACY} = {'diff': [1.884699999999892e-05, 1.8486000000001584e-05, 1.884699999999892e-05, 1.886099999999849e-05, 1.9263999999998005e-05, 1.8847999999998394e-05, 1.8137999999997406e-05, 1.8514000000000724e-05, 1...</msg>
<status status="PASS" starttime="20201029 18:17:44.041" endtime="20201029 18:17:44.045"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:44.049" level="INFO">NAME: accuracy-TIMER_SLEEP-14-philip</msg>
<status status="PASS" starttime="20201029 18:17:44.048" endtime="20201029 18:17:44.050"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:44.052" level="INFO">VALUE: [1.884699999999892e-05, 1.8486000000001584e-05, 1.884699999999892e-05, 1.886099999999849e-05, 1.9263999999998005e-05, 1.8847999999998394e-05, 1.8137999999997406e-05, 1.8514000000000724e-05, 1.884700000000239e-05, 1.8528000000000294e-05, 1.92089999999992e-05, 1.9207999999999725e-05, 1.8514000000000724e-05, 1.8485999999998115e-05, 1.9180000000000585e-05, 1.916700000000049e-05, 1.883300000000282e-05, 1.8166000000000015e-05, 1.891700000000024e-05, 1.8514000000000724e-05, 1.9180000000000585e-05, 1.886099999999849e-05, 1.9180000000000585e-05, 1.886099999999849e-05, 1.8847999999998394e-05, 1.9194000000000155e-05, 1.916700000000049e-05, 1.8500000000001154e-05, 1.8500000000001154e-05, 1.88890000000011e-05, 1.859699999999867e-05, 1.9180000000000585e-05, 1.911099999999874e-05, 1.912500000000178e-05, 1.8514000000000724e-05, 1.8514000000000724e-05, 1.886099999999849e-05, 1.912499999999831e-05, 1.8500000000001154e-05, 1.8500000000001154e-05, 1.884699999999892e-05, 1.8848000000001863e-05, 1.9194000000000155e-05, 1.9180000000000585e-05, 1.8486000000001584e-05, 1.886100000000196e-05, 1.8179999999999585e-05, 1.912500000000178e-05, 1.884700000000239e-05, 1.8848000000001863e-05]</msg>
<status status="PASS" starttime="20201029 18:17:44.050" endtime="20201029 18:17:44.053"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:44.046" endtime="20201029 18:17:44.054"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:44.057" endtime="20201029 18:17:44.077"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:44.056" endtime="20201029 18:17:44.077"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:44.054" endtime="20201029 18:17:44.078"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:43.673" endtime="20201029 18:17:44.078"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:43.673" endtime="20201029 18:17:44.078"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:44.087" endtime="20201029 18:17:44.104"></status>
</kw>
<msg timestamp="20201029 18:17:44.104" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:44.086" endtime="20201029 18:17:44.104"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:44.107" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:44.105" endtime="20201029 18:17:44.107"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:44.108" endtime="20201029 18:17:44.110"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:44.083" endtime="20201029 18:17:44.110"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:44.081" endtime="20201029 18:17:44.111"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:44.117" endtime="20201029 18:17:44.405"></status>
</kw>
<msg timestamp="20201029 18:17:44.408" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021054875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021074417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:44.116" endtime="20201029 18:17:44.409"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:44.417" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021054875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021074417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:44.409" endtime="20201029 18:17:44.417"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:44.418" endtime="20201029 18:17:44.420"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:44.113" endtime="20201029 18:17:44.420"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:44.111" endtime="20201029 18:17:44.421"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:44.425" level="INFO">${RESULT} = [{'diff': 1.9542000000000864e-05}, {'diff': 1.984699999999992e-05}, {'diff': 1.9542000000000864e-05}, {'diff': 1.987499999999906e-05}, {'diff': 1.9527999999997825e-05}, {'diff': 1.945899999999945e-05}...</msg>
<status status="PASS" starttime="20201029 18:17:44.421" endtime="20201029 18:17:44.425"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:44.429" level="INFO">${ACCURACY} = {'diff': [1.9542000000000864e-05, 1.984699999999992e-05, 1.9542000000000864e-05, 1.987499999999906e-05, 1.9527999999997825e-05, 1.945899999999945e-05, 2.022299999999977e-05, 1.9542000000000864e-05, 1....</msg>
<status status="PASS" starttime="20201029 18:17:44.426" endtime="20201029 18:17:44.430"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:44.434" level="INFO">NAME: accuracy-TIMER_SLEEP-15-philip</msg>
<status status="PASS" starttime="20201029 18:17:44.433" endtime="20201029 18:17:44.434"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:44.437" level="INFO">VALUE: [1.9542000000000864e-05, 1.984699999999992e-05, 1.9542000000000864e-05, 1.987499999999906e-05, 1.9527999999997825e-05, 1.945899999999945e-05, 2.022299999999977e-05, 1.9542000000000864e-05, 1.9820000000000254e-05, 1.987499999999906e-05, 1.993099999999734e-05, 1.9556000000000434e-05, 1.954099999999792e-05, 1.952700000000182e-05, 1.9542000000000864e-05, 1.9528000000001294e-05, 1.9528000000001294e-05, 1.919499999999963e-05, 1.98890000000021e-05, 1.9542000000000864e-05, 1.951300000000225e-05, 1.987499999999906e-05, 1.987499999999906e-05, 1.955499999999749e-05, 1.987499999999906e-05, 2.0236000000003335e-05, 1.919499999999963e-05, 1.918100000000006e-05, 1.922299999999877e-05, 2.022299999999977e-05, 1.990300000000167e-05, 1.9541999999997395e-05, 1.987499999999906e-05, 1.955500000000096e-05, 1.9527999999997825e-05, 2.0235999999999865e-05, 1.98890000000021e-05, 1.986099999999949e-05, 1.9556000000000434e-05, 1.99029999999982e-05, 1.988899999999863e-05, 1.9556000000000434e-05, 1.9958000000000475e-05, 2.0222000000000295e-05, 2.0250000000002905e-05, 1.952699999999835e-05, 1.983300000000035e-05, 1.984699999999992e-05, 1.955500000000096e-05, 1.9528000000001294e-05]</msg>
<status status="PASS" starttime="20201029 18:17:44.435" endtime="20201029 18:17:44.437"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:44.430" endtime="20201029 18:17:44.438"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:44.442" endtime="20201029 18:17:44.461"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:44.440" endtime="20201029 18:17:44.462"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:44.439" endtime="20201029 18:17:44.462"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:44.079" endtime="20201029 18:17:44.463"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:44.078" endtime="20201029 18:17:44.463"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:44.472" endtime="20201029 18:17:44.489"></status>
</kw>
<msg timestamp="20201029 18:17:44.489" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:44.470" endtime="20201029 18:17:44.489"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:44.492" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:44.490" endtime="20201029 18:17:44.492"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:44.493" endtime="20201029 18:17:44.495"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:44.467" endtime="20201029 18:17:44.495"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:44.465" endtime="20201029 18:17:44.496"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:44.502" endtime="20201029 18:17:44.788"></status>
</kw>
<msg timestamp="20201029 18:17:44.791" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021744139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021764708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:44.501" endtime="20201029 18:17:44.791"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:44.799" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021744139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021764708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:44.792" endtime="20201029 18:17:44.799"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:44.800" endtime="20201029 18:17:44.802"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:44.498" endtime="20201029 18:17:44.802"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:44.496" endtime="20201029 18:17:44.803"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:44.807" level="INFO">${RESULT} = [{'diff': 2.056900000000153e-05}, {'diff': 2.0556000000001434e-05}, {'diff': 2.0584000000000574e-05}, {'diff': 2.05830000000011e-05}, {'diff': 2.0221999999996826e-05}, {'diff': 2.093099999999834e-05},...</msg>
<status status="PASS" starttime="20201029 18:17:44.803" endtime="20201029 18:17:44.807"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:44.811" level="INFO">${ACCURACY} = {'diff': [2.056900000000153e-05, 2.0556000000001434e-05, 2.0584000000000574e-05, 2.05830000000011e-05, 2.0221999999996826e-05, 2.093099999999834e-05, 2.1250000000000435e-05, 2.094500000000138e-05, 2.0...</msg>
<status status="PASS" starttime="20201029 18:17:44.808" endtime="20201029 18:17:44.811"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:44.815" level="INFO">NAME: accuracy-TIMER_SLEEP-16-philip</msg>
<status status="PASS" starttime="20201029 18:17:44.814" endtime="20201029 18:17:44.816"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:44.818" level="INFO">VALUE: [2.056900000000153e-05, 2.0556000000001434e-05, 2.0584000000000574e-05, 2.05830000000011e-05, 2.0221999999996826e-05, 2.093099999999834e-05, 2.1250000000000435e-05, 2.094500000000138e-05, 2.091699999999877e-05, 2.0569999999997535e-05, 2.0222000000000295e-05, 2.056900000000153e-05, 2.1277999999999575e-05, 2.0915999999999296e-05, 2.0222000000000295e-05, 2.0235999999999865e-05, 2.1277999999999575e-05, 2.056900000000153e-05, 2.0499999999999685e-05, 2.0235999999999865e-05, 2.1250000000000435e-05, 2.090300000000267e-05, 2.0944000000001906e-05, 2.1264000000000005e-05, 2.091699999999877e-05, 2.0222000000000295e-05, 2.1264000000000005e-05, 2.1264000000000005e-05, 2.0972000000001045e-05, 2.130499999999924e-05, 2.0929999999998866e-05, 2.0916000000002766e-05, 2.0901999999999726e-05, 2.1278000000003044e-05, 2.093100000000181e-05, 2.061100000000024e-05, 2.0957999999998006e-05, 2.09029999999992e-05, 2.054099999999892e-05, 2.09029999999992e-05, 2.056899999999806e-05, 2.093100000000181e-05, 2.0555999999997965e-05, 2.0901999999999726e-05, 2.09029999999992e-05, 2.134700000000142e-05, 2.09029999999992e-05, 2.0235999999999865e-05, 2.1264000000000005e-05, 2.0570000000001004e-05]</msg>
<status status="PASS" starttime="20201029 18:17:44.816" endtime="20201029 18:17:44.824"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:44.812" endtime="20201029 18:17:44.825"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:44.829" endtime="20201029 18:17:44.848"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:44.827" endtime="20201029 18:17:44.849"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:44.826" endtime="20201029 18:17:44.849"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:44.464" endtime="20201029 18:17:44.849"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:44.463" endtime="20201029 18:17:44.849"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:44.858" endtime="20201029 18:17:44.873"></status>
</kw>
<msg timestamp="20201029 18:17:44.874" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:44.857" endtime="20201029 18:17:44.874"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:44.876" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:44.875" endtime="20201029 18:17:44.877"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:44.877" endtime="20201029 18:17:44.879"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:44.854" endtime="20201029 18:17:44.879"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:44.852" endtime="20201029 18:17:44.880"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:44.886" endtime="20201029 18:17:45.187"></status>
</kw>
<msg timestamp="20201029 18:17:45.190" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019938736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019960361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:44.885" endtime="20201029 18:17:45.190"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:45.198" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019938736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019960361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:45.191" endtime="20201029 18:17:45.199"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:45.200" endtime="20201029 18:17:45.201"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:44.882" endtime="20201029 18:17:45.202"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:44.880" endtime="20201029 18:17:45.202"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:45.206" level="INFO">${RESULT} = [{'diff': 2.162500000000081e-05}, {'diff': 2.15969999999982e-05}, {'diff': 2.1971999999998576e-05}, {'diff': 2.1957999999999006e-05}, {'diff': 2.1235999999997396e-05}, {'diff': 2.1250000000000435e-05}...</msg>
<status status="PASS" starttime="20201029 18:17:45.203" endtime="20201029 18:17:45.206"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:45.214" level="INFO">${ACCURACY} = {'diff': [2.162500000000081e-05, 2.15969999999982e-05, 2.1971999999998576e-05, 2.1957999999999006e-05, 2.1235999999997396e-05, 2.1250000000000435e-05, 2.1929999999999866e-05, 2.197299999999805e-05, 2....</msg>
<status status="PASS" starttime="20201029 18:17:45.207" endtime="20201029 18:17:45.214"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:45.218" level="INFO">NAME: accuracy-TIMER_SLEEP-17-philip</msg>
<status status="PASS" starttime="20201029 18:17:45.217" endtime="20201029 18:17:45.219"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:45.221" level="INFO">VALUE: [2.162500000000081e-05, 2.15969999999982e-05, 2.1971999999998576e-05, 2.1957999999999006e-05, 2.1235999999997396e-05, 2.1250000000000435e-05, 2.1929999999999866e-05, 2.197299999999805e-05, 2.1291999999999145e-05, 2.161100000000124e-05, 2.1598000000001144e-05, 2.12770000000001e-05, 2.2305999999999715e-05, 2.1971999999998576e-05, 2.1264000000000005e-05, 2.2221999999998826e-05, 2.195899999999848e-05, 2.1957999999999006e-05, 2.1264000000000005e-05, 2.1277999999999575e-05, 2.1333999999997855e-05, 2.1264000000000005e-05, 2.193099999999934e-05, 2.194500000000238e-05, 2.230500000000024e-05, 2.2305999999999715e-05, 2.1277999999999575e-05, 2.1612000000000714e-05, 2.161100000000124e-05, 2.1264000000000005e-05, 2.159700000000167e-05, 2.1986000000001615e-05, 2.161099999999777e-05, 2.162500000000081e-05, 2.1971999999998576e-05, 2.161099999999777e-05, 2.195899999999848e-05, 2.1957999999999006e-05, 2.161100000000124e-05, 2.195900000000195e-05, 2.1250000000000435e-05, 2.197299999999805e-05, 2.229100000000067e-05, 2.194500000000238e-05, 2.2305999999999715e-05, 2.2292000000000145e-05, 2.1957999999999006e-05, 2.15830000000021e-05, 2.2292000000000145e-05, 2.15969999999982e-05]</msg>
<status status="PASS" starttime="20201029 18:17:45.219" endtime="20201029 18:17:45.222"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:45.215" endtime="20201029 18:17:45.222"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:45.226" endtime="20201029 18:17:45.245"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:45.224" endtime="20201029 18:17:45.246"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:45.223" endtime="20201029 18:17:45.246"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:44.850" endtime="20201029 18:17:45.247"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:44.850" endtime="20201029 18:17:45.247"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:45.255" endtime="20201029 18:17:45.271"></status>
</kw>
<msg timestamp="20201029 18:17:45.271" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:45.254" endtime="20201029 18:17:45.271"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:45.273" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:45.272" endtime="20201029 18:17:45.274"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:45.275" endtime="20201029 18:17:45.276"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:45.251" endtime="20201029 18:17:45.277"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:45.249" endtime="20201029 18:17:45.277"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:45.284" endtime="20201029 18:17:45.614"></status>
</kw>
<msg timestamp="20201029 18:17:45.617" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019793056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019815708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:45.282" endtime="20201029 18:17:45.618"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:45.626" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019793056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019815708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:45.619" endtime="20201029 18:17:45.626"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:45.627" endtime="20201029 18:17:45.629"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:45.280" endtime="20201029 18:17:45.629"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:45.278" endtime="20201029 18:17:45.630"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:45.634" level="INFO">${RESULT} = [{'diff': 2.2652000000001477e-05}, {'diff': 2.263900000000138e-05}, {'diff': 2.2986000000002615e-05}, {'diff': 2.2999999999998716e-05}, {'diff': 2.333300000000038e-05}, {'diff': 2.263900000000138e-05}...</msg>
<status status="PASS" starttime="20201029 18:17:45.630" endtime="20201029 18:17:45.634"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:45.638" level="INFO">${ACCURACY} = {'diff': [2.2652000000001477e-05, 2.263900000000138e-05, 2.2986000000002615e-05, 2.2999999999998716e-05, 2.333300000000038e-05, 2.263900000000138e-05, 2.2305999999999715e-05, 2.265299999999748e-05, 2....</msg>
<status status="PASS" starttime="20201029 18:17:45.635" endtime="20201029 18:17:45.638"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:45.642" level="INFO">NAME: accuracy-TIMER_SLEEP-18-philip</msg>
<status status="PASS" starttime="20201029 18:17:45.641" endtime="20201029 18:17:45.643"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:45.645" level="INFO">VALUE: [2.2652000000001477e-05, 2.263900000000138e-05, 2.2986000000002615e-05, 2.2999999999998716e-05, 2.333300000000038e-05, 2.263900000000138e-05, 2.2305999999999715e-05, 2.265299999999748e-05, 2.2652000000001477e-05, 2.2694000000000186e-05, 2.3000000000002185e-05, 2.2999999999998716e-05, 2.2264000000001005e-05, 2.2999999999998716e-05, 2.2985999999999146e-05, 2.2986000000002615e-05, 2.3320000000000285e-05, 2.263899999999791e-05, 2.3000000000002185e-05, 2.2292000000000145e-05, 2.2986000000002615e-05, 2.2985999999999146e-05, 2.262499999999834e-05, 2.231899999999981e-05, 2.261100000000224e-05, 2.2985999999999146e-05, 2.3013999999998286e-05, 2.2652000000001477e-05, 2.294499999999991e-05, 2.229100000000067e-05, 2.265300000000095e-05, 2.263899999999791e-05, 2.266700000000052e-05, 2.22770000000011e-05, 2.2985999999999146e-05, 2.3013999999998286e-05, 2.3347999999999425e-05, 2.2306000000003184e-05, 2.334699999999995e-05, 2.262500000000181e-05, 2.2652000000001477e-05, 2.2305999999999715e-05, 2.2985999999999146e-05, 2.269499999999966e-05, 2.263899999999791e-05, 2.2985999999999146e-05, 2.2597999999998675e-05, 2.2986000000002615e-05, 2.259700000000267e-05, 2.337499999999909e-05]</msg>
<status status="PASS" starttime="20201029 18:17:45.643" endtime="20201029 18:17:45.645"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:45.639" endtime="20201029 18:17:45.646"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:45.650" endtime="20201029 18:17:45.670"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:45.648" endtime="20201029 18:17:45.670"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:45.647" endtime="20201029 18:17:45.671"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:45.248" endtime="20201029 18:17:45.671"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:45.247" endtime="20201029 18:17:45.671"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:45.680" endtime="20201029 18:17:45.695"></status>
</kw>
<msg timestamp="20201029 18:17:45.696" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:45.678" endtime="20201029 18:17:45.696"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:45.698" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:45.697" endtime="20201029 18:17:45.698"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:45.699" endtime="20201029 18:17:45.701"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:45.676" endtime="20201029 18:17:45.701"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:45.674" endtime="20201029 18:17:45.702"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:45.708" endtime="20201029 18:17:45.992"></status>
</kw>
<msg timestamp="20201029 18:17:45.996" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019971139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019994819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:45.707" endtime="20201029 18:17:45.996"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:46.004" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019971139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019994819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:45.997" endtime="20201029 18:17:46.004"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:46.005" endtime="20201029 18:17:46.006"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:45.704" endtime="20201029 18:17:46.007"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:45.702" endtime="20201029 18:17:46.007"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:46.011" level="INFO">${RESULT} = [{'diff': 2.3680000000001616e-05}, {'diff': 2.4014000000002755e-05}, {'diff': 2.4304999999998772e-05}, {'diff': 2.3707999999997287e-05}, {'diff': 2.366700000000152e-05}, {'diff': 2.368099999999762e-05...</msg>
<status status="PASS" starttime="20201029 18:17:46.008" endtime="20201029 18:17:46.012"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:46.016" level="INFO">${ACCURACY} = {'diff': [2.3680000000001616e-05, 2.4014000000002755e-05, 2.4304999999998772e-05, 2.3707999999997287e-05, 2.366700000000152e-05, 2.368099999999762e-05, 2.334699999999995e-05, 2.3665999999998577e-05, 2...</msg>
<status status="PASS" starttime="20201029 18:17:46.012" endtime="20201029 18:17:46.017"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:46.021" level="INFO">NAME: accuracy-TIMER_SLEEP-19-philip</msg>
<status status="PASS" starttime="20201029 18:17:46.020" endtime="20201029 18:17:46.021"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:46.023" level="INFO">VALUE: [2.3680000000001616e-05, 2.4014000000002755e-05, 2.4304999999998772e-05, 2.3707999999997287e-05, 2.366700000000152e-05, 2.368099999999762e-05, 2.334699999999995e-05, 2.3665999999998577e-05, 2.4028000000002325e-05, 2.4027999999998856e-05, 2.3693999999997717e-05, 2.3694000000001186e-05, 2.3333999999999855e-05, 2.4098000000000175e-05, 2.3722000000000326e-05, 2.4083999999997135e-05, 2.369499999999719e-05, 2.333300000000038e-05, 2.362499999999934e-05, 2.3679999999998147e-05, 2.368100000000109e-05, 2.3320000000000285e-05, 2.368099999999762e-05, 2.4028000000002325e-05, 2.4027999999998856e-05, 2.3679999999998147e-05, 2.4348000000000425e-05, 2.4028000000002325e-05, 2.368099999999762e-05, 2.368099999999762e-05, 2.437500000000009e-05, 2.4014000000002755e-05, 2.3679999999998147e-05, 2.333300000000038e-05, 2.368099999999762e-05, 2.4083999999997135e-05, 2.437500000000009e-05, 2.3333999999999855e-05, 2.436100000000052e-05, 2.366700000000152e-05, 2.334699999999995e-05, 2.4056000000001465e-05, 2.4027999999998856e-05, 2.333300000000038e-05, 2.4056000000001465e-05, 2.4027999999998856e-05, 2.4014000000002755e-05, 2.3680000000001616e-05, 2.4040999999998952e-05, 2.4041999999998426e-05]</msg>
<status status="PASS" starttime="20201029 18:17:46.022" endtime="20201029 18:17:46.024"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:46.017" endtime="20201029 18:17:46.025"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:46.028" endtime="20201029 18:17:46.048"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:46.027" endtime="20201029 18:17:46.048"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:46.026" endtime="20201029 18:17:46.049"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:45.672" endtime="20201029 18:17:46.049"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:45.671" endtime="20201029 18:17:46.049"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:46.058" endtime="20201029 18:17:46.073"></status>
</kw>
<msg timestamp="20201029 18:17:46.074" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:46.056" endtime="20201029 18:17:46.074"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:46.076" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:46.075" endtime="20201029 18:17:46.077"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:46.077" endtime="20201029 18:17:46.079"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:46.054" endtime="20201029 18:17:46.080"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:46.052" endtime="20201029 18:17:46.080"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:46.086" endtime="20201029 18:17:46.375"></status>
</kw>
<msg timestamp="20201029 18:17:46.378" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019954333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019978778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:46.085" endtime="20201029 18:17:46.378"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:46.386" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019954333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019978778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:46.379" endtime="20201029 18:17:46.386"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:46.387" endtime="20201029 18:17:46.389"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:46.082" endtime="20201029 18:17:46.389"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:46.081" endtime="20201029 18:17:46.390"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:46.394" level="INFO">${RESULT} = [{'diff': 2.444499999999794e-05}, {'diff': 2.436100000000052e-05}, {'diff': 2.4722000000001326e-05}, {'diff': 2.438899999999966e-05}, {'diff': 2.5069999999998566e-05}, {'diff': 2.4346999999997482e-05}...</msg>
<status status="PASS" starttime="20201029 18:17:46.391" endtime="20201029 18:17:46.394"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:46.398" level="INFO">${ACCURACY} = {'diff': [2.444499999999794e-05, 2.436100000000052e-05, 2.4722000000001326e-05, 2.438899999999966e-05, 2.5069999999998566e-05, 2.4346999999997482e-05, 2.4415999999999327e-05, 2.437500000000009e-05, 2....</msg>
<status status="PASS" starttime="20201029 18:17:46.395" endtime="20201029 18:17:46.398"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:46.403" level="INFO">NAME: accuracy-TIMER_SLEEP-20-philip</msg>
<status status="PASS" starttime="20201029 18:17:46.401" endtime="20201029 18:17:46.403"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:46.405" level="INFO">VALUE: [2.444499999999794e-05, 2.436100000000052e-05, 2.4722000000001326e-05, 2.438899999999966e-05, 2.5069999999998566e-05, 2.4346999999997482e-05, 2.4415999999999327e-05, 2.437500000000009e-05, 2.47230000000008e-05, 2.4722000000001326e-05, 2.4721999999997857e-05, 2.5055999999998996e-05, 2.5000000000000716e-05, 2.5041999999999426e-05, 2.4736000000000896e-05, 2.436100000000052e-05, 2.4735999999997427e-05, 2.437500000000009e-05, 2.5416000000000327e-05, 2.4791999999999176e-05, 2.508300000000213e-05, 2.4790999999999702e-05, 2.438899999999966e-05, 2.5040999999999952e-05, 2.468099999999862e-05, 2.5098000000001175e-05, 2.436099999999705e-05, 2.540300000000023e-05, 2.5041999999999426e-05, 2.5082999999998662e-05, 2.437500000000009e-05, 2.4693999999998717e-05, 2.5054999999999522e-05, 2.437500000000009e-05, 2.5069999999998566e-05, 2.4986000000001146e-05, 2.5040999999999952e-05, 2.5098000000001175e-05, 2.4735999999997427e-05, 2.4388000000000187e-05, 2.436100000000052e-05, 2.436100000000052e-05, 2.4361999999999995e-05, 2.470900000000123e-05, 2.440299999999923e-05, 2.436100000000052e-05, 2.4722000000001326e-05, 2.4722000000001326e-05, 2.438900000000313e-05, 2.541700000000327e-05]</msg>
<status status="PASS" starttime="20201029 18:17:46.404" endtime="20201029 18:17:46.406"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:46.399" endtime="20201029 18:17:46.406"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:46.410" endtime="20201029 18:17:46.429"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:46.408" endtime="20201029 18:17:46.430"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:46.407" endtime="20201029 18:17:46.430"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:46.050" endtime="20201029 18:17:46.431"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:46.049" endtime="20201029 18:17:46.431"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:46.439" endtime="20201029 18:17:46.456"></status>
</kw>
<msg timestamp="20201029 18:17:46.457" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:46.438" endtime="20201029 18:17:46.457"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:46.460" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:46.458" endtime="20201029 18:17:46.460"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:46.461" endtime="20201029 18:17:46.462"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:46.435" endtime="20201029 18:17:46.463"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:46.433" endtime="20201029 18:17:46.463"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:46.470" endtime="20201029 18:17:46.756"></status>
</kw>
<msg timestamp="20201029 18:17:46.759" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020705944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020731333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:46.468" endtime="20201029 18:17:46.759"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:46.767" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020705944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020731333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:46.760" endtime="20201029 18:17:46.767"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:46.768" endtime="20201029 18:17:46.770"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:46.466" endtime="20201029 18:17:46.770"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:46.464" endtime="20201029 18:17:46.771"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:46.775" level="INFO">${RESULT} = [{'diff': 2.538900000000066e-05}, {'diff': 2.570899999999876e-05}, {'diff': 2.5749999999997997e-05}, {'diff': 2.611100000000227e-05}, {'diff': 2.5750000000001466e-05}, {'diff': 2.615300000000098e-05},...</msg>
<status status="PASS" starttime="20201029 18:17:46.772" endtime="20201029 18:17:46.775"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:46.779" level="INFO">${ACCURACY} = {'diff': [2.538900000000066e-05, 2.570899999999876e-05, 2.5749999999997997e-05, 2.611100000000227e-05, 2.5750000000001466e-05, 2.615300000000098e-05, 2.6069000000000092e-05, 2.5778000000000606e-05, 2....</msg>
<status status="PASS" starttime="20201029 18:17:46.776" endtime="20201029 18:17:46.779"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:46.783" level="INFO">NAME: accuracy-TIMER_SLEEP-21-philip</msg>
<status status="PASS" starttime="20201029 18:17:46.782" endtime="20201029 18:17:46.784"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:46.787" level="INFO">VALUE: [2.538900000000066e-05, 2.570899999999876e-05, 2.5749999999997997e-05, 2.611100000000227e-05, 2.5750000000001466e-05, 2.615300000000098e-05, 2.6069000000000092e-05, 2.5778000000000606e-05, 2.6070000000003035e-05, 2.537500000000109e-05, 2.612500000000184e-05, 2.54169999999998e-05, 2.54169999999998e-05, 2.540300000000023e-05, 2.6014000000001286e-05, 2.6096999999999232e-05, 2.6110999999998802e-05, 2.615300000000098e-05, 2.611100000000227e-05, 2.5763999999997567e-05, 2.5749999999997997e-05, 2.6096999999999232e-05, 2.540300000000023e-05, 2.5750000000001466e-05, 2.5735999999998427e-05, 2.6096999999999232e-05, 2.6112000000001745e-05, 2.5749999999997997e-05, 2.6082999999999662e-05, 2.5707999999999287e-05, 2.5721999999998857e-05, 2.6042000000000426e-05, 2.6082999999999662e-05, 2.6055000000000522e-05, 2.5721999999998857e-05, 2.6096999999999232e-05, 2.5791000000000702e-05, 2.613899999999794e-05, 2.5750000000001466e-05, 2.5818999999999842e-05, 2.538900000000066e-05, 2.6096999999999232e-05, 2.5832999999999412e-05, 2.54169999999998e-05, 2.6082999999999662e-05, 2.5764000000001036e-05, 2.540300000000023e-05, 2.5346999999998482e-05, 2.6082999999999662e-05, 2.5777000000001132e-05]</msg>
<status status="PASS" starttime="20201029 18:17:46.785" endtime="20201029 18:17:46.788"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:46.780" endtime="20201029 18:17:46.788"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:46.792" endtime="20201029 18:17:46.811"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:46.790" endtime="20201029 18:17:46.812"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:46.789" endtime="20201029 18:17:46.812"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:46.432" endtime="20201029 18:17:46.812"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:46.431" endtime="20201029 18:17:46.813"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:46.821" endtime="20201029 18:17:46.837"></status>
</kw>
<msg timestamp="20201029 18:17:46.837" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:46.820" endtime="20201029 18:17:46.838"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:46.840" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:46.838" endtime="20201029 18:17:46.840"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:46.841" endtime="20201029 18:17:46.843"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:46.817" endtime="20201029 18:17:46.843"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:46.815" endtime="20201029 18:17:46.844"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:46.850" endtime="20201029 18:17:47.135"></status>
</kw>
<msg timestamp="20201029 18:17:47.138" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019723278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019750403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:46.848" endtime="20201029 18:17:47.138"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:47.147" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019723278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019750403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:47.139" endtime="20201029 18:17:47.147"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:47.148" endtime="20201029 18:17:47.149"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:46.846" endtime="20201029 18:17:47.150"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:46.844" endtime="20201029 18:17:47.150"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:47.157" level="INFO">${RESULT} = [{'diff': 2.7124999999999372e-05}, {'diff': 2.7124999999999372e-05}, {'diff': 2.6792000000001176e-05}, {'diff': 2.6806000000000746e-05}, {'diff': 2.715300000000198e-05}, {'diff': 2.6444000000000467e-0...</msg>
<status status="PASS" starttime="20201029 18:17:47.151" endtime="20201029 18:17:47.157"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:47.162" level="INFO">${ACCURACY} = {'diff': [2.7124999999999372e-05, 2.7124999999999372e-05, 2.6792000000001176e-05, 2.6806000000000746e-05, 2.715300000000198e-05, 2.6444000000000467e-05, 2.7110999999999802e-05, 2.713900000000241e-05, ...</msg>
<status status="PASS" starttime="20201029 18:17:47.158" endtime="20201029 18:17:47.162"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:47.169" level="INFO">NAME: accuracy-TIMER_SLEEP-22-philip</msg>
<status status="PASS" starttime="20201029 18:17:47.166" endtime="20201029 18:17:47.169"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:47.172" level="INFO">VALUE: [2.7124999999999372e-05, 2.7124999999999372e-05, 2.6792000000001176e-05, 2.6806000000000746e-05, 2.715300000000198e-05, 2.6444000000000467e-05, 2.7110999999999802e-05, 2.713900000000241e-05, 2.6791000000001702e-05, 2.7097000000000232e-05, 2.7124999999999372e-05, 2.6430000000000897e-05, 2.713900000000241e-05, 2.6500000000002216e-05, 2.6846999999999982e-05, 2.712500000000284e-05, 2.6792000000001176e-05, 2.6806000000000746e-05, 2.6790999999998233e-05, 2.6806000000000746e-05, 2.6777000000002132e-05, 2.6430000000000897e-05, 2.6792000000001176e-05, 2.6444000000000467e-05, 2.644499999999994e-05, 2.6791999999997707e-05, 2.7124999999999372e-05, 2.6790999999998233e-05, 2.6444000000000467e-05, 2.643100000000037e-05, 2.6444000000000467e-05, 2.718100000000112e-05, 2.711100000000327e-05, 2.6444000000000467e-05, 2.644499999999994e-05, 2.6833000000000412e-05, 2.7124999999999372e-05, 2.6778000000001606e-05, 2.7124999999999372e-05, 2.6778000000001606e-05, 2.6777999999998137e-05, 2.6790999999998233e-05, 2.6792000000001176e-05, 2.6458000000000037e-05, 2.645899999999951e-05, 2.643100000000037e-05, 2.6444000000000467e-05, 2.6791999999997707e-05, 2.6806000000000746e-05, 2.643100000000037e-05]</msg>
<status status="PASS" starttime="20201029 18:17:47.170" endtime="20201029 18:17:47.172"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:47.163" endtime="20201029 18:17:47.173"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:47.177" endtime="20201029 18:17:47.196"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:47.175" endtime="20201029 18:17:47.197"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:47.174" endtime="20201029 18:17:47.197"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:46.814" endtime="20201029 18:17:47.197"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:46.813" endtime="20201029 18:17:47.197"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:47.209" endtime="20201029 18:17:47.225"></status>
</kw>
<msg timestamp="20201029 18:17:47.226" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:47.206" endtime="20201029 18:17:47.226"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:47.228" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:47.227" endtime="20201029 18:17:47.229"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:47.229" endtime="20201029 18:17:47.231"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:47.202" endtime="20201029 18:17:47.231"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:47.200" endtime="20201029 18:17:47.232"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:47.238" endtime="20201029 18:17:47.540"></status>
</kw>
<msg timestamp="20201029 18:17:47.543" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023661569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023689111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:47.237" endtime="20201029 18:17:47.544"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:47.552" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023661569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023689111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:47.545" endtime="20201029 18:17:47.552"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:47.553" endtime="20201029 18:17:47.554"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:47.234" endtime="20201029 18:17:47.555"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:47.232" endtime="20201029 18:17:47.555"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:47.559" level="INFO">${RESULT} = [{'diff': 2.7541999999998457e-05}, {'diff': 2.818099999999865e-05}, {'diff': 2.7790999999999233e-05}, {'diff': 2.7847000000000982e-05}, {'diff': 2.7804999999998803e-05}, {'diff': 2.74309999999979e-05}...</msg>
<status status="PASS" starttime="20201029 18:17:47.556" endtime="20201029 18:17:47.559"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:47.563" level="INFO">${ACCURACY} = {'diff': [2.7541999999998457e-05, 2.818099999999865e-05, 2.7790999999999233e-05, 2.7847000000000982e-05, 2.7804999999998803e-05, 2.74309999999979e-05, 2.8179999999999178e-05, 2.819500000000169e-05, 2....</msg>
<status status="PASS" starttime="20201029 18:17:47.560" endtime="20201029 18:17:47.564"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:47.568" level="INFO">NAME: accuracy-TIMER_SLEEP-23-philip</msg>
<status status="PASS" starttime="20201029 18:17:47.567" endtime="20201029 18:17:47.568"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:47.570" level="INFO">VALUE: [2.7541999999998457e-05, 2.818099999999865e-05, 2.7790999999999233e-05, 2.7847000000000982e-05, 2.7804999999998803e-05, 2.74309999999979e-05, 2.8179999999999178e-05, 2.819500000000169e-05, 2.816699999999908e-05, 2.8207999999998318e-05, 2.7819000000001842e-05, 2.7486000000000177e-05, 2.7833000000001412e-05, 2.7819999999997846e-05, 2.7819999999997846e-05, 2.816699999999908e-05, 2.7499999999999747e-05, 2.7500000000003216e-05, 2.7542000000001926e-05, 2.7486000000000177e-05, 2.7819000000001842e-05, 2.7833000000001412e-05, 2.7819999999997846e-05, 2.8250000000000497e-05, 2.7777999999999137e-05, 2.7818999999998373e-05, 2.816699999999908e-05, 2.7499999999999747e-05, 2.7457999999997568e-05, 2.7471999999997138e-05, 2.7791999999998707e-05, 2.7861000000000552e-05, 2.7568999999998123e-05, 2.7861000000000552e-05, 2.816700000000255e-05, 2.7485999999996708e-05, 2.745900000000051e-05, 2.7749999999999997e-05, 2.713900000000241e-05, 2.7820000000001316e-05, 2.7486000000000177e-05, 2.818100000000212e-05, 2.7832999999997943e-05, 2.8152999999999512e-05, 2.7138999999998942e-05, 2.7526999999999413e-05, 2.7458000000001037e-05, 2.816700000000255e-05, 2.7818999999998373e-05, 2.8179999999999178e-05]</msg>
<status status="PASS" starttime="20201029 18:17:47.569" endtime="20201029 18:17:47.571"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:47.564" endtime="20201029 18:17:47.572"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:47.575" endtime="20201029 18:17:47.595"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:47.574" endtime="20201029 18:17:47.595"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:47.573" endtime="20201029 18:17:47.595"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:47.198" endtime="20201029 18:17:47.596"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:47.198" endtime="20201029 18:17:47.596"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:47.604" endtime="20201029 18:17:47.622"></status>
</kw>
<msg timestamp="20201029 18:17:47.622" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:47.603" endtime="20201029 18:17:47.622"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:47.625" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:47.623" endtime="20201029 18:17:47.625"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:47.626" endtime="20201029 18:17:47.627"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:47.600" endtime="20201029 18:17:47.628"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:47.598" endtime="20201029 18:17:47.628"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:47.636" endtime="20201029 18:17:47.922"></status>
</kw>
<msg timestamp="20201029 18:17:47.925" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020923278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020951472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:47.634" endtime="20201029 18:17:47.925"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:47.933" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020923278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020951472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:47.926" endtime="20201029 18:17:47.933"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:47.934" endtime="20201029 18:17:47.936"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:47.631" endtime="20201029 18:17:47.936"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:47.629" endtime="20201029 18:17:47.937"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:47.941" level="INFO">${RESULT} = [{'diff': 2.8193999999998748e-05}, {'diff': 2.9235999999998458e-05}, {'diff': 2.8527000000000413e-05}, {'diff': 2.8166000000003077e-05}, {'diff': 2.8806000000002746e-05}, {'diff': 2.918099999999965e-0...</msg>
<status status="PASS" starttime="20201029 18:17:47.937" endtime="20201029 18:17:47.941"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:47.945" level="INFO">${ACCURACY} = {'diff': [2.8193999999998748e-05, 2.9235999999998458e-05, 2.8527000000000413e-05, 2.8166000000003077e-05, 2.8806000000002746e-05, 2.918099999999965e-05, 2.915199999999757e-05, 2.8527999999999887e-05, ...</msg>
<status status="PASS" starttime="20201029 18:17:47.942" endtime="20201029 18:17:47.945"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:47.949" level="INFO">NAME: accuracy-TIMER_SLEEP-24-philip</msg>
<status status="PASS" starttime="20201029 18:17:47.948" endtime="20201029 18:17:47.950"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:47.952" level="INFO">VALUE: [2.8193999999998748e-05, 2.9235999999998458e-05, 2.8527000000000413e-05, 2.8166000000003077e-05, 2.8806000000002746e-05, 2.918099999999965e-05, 2.915199999999757e-05, 2.8527999999999887e-05, 2.8861000000001552e-05, 2.8832999999998943e-05, 2.888799999999775e-05, 2.8514000000000317e-05, 2.92370000000014e-05, 2.9207999999999318e-05, 2.8512999999997374e-05, 2.8540999999999983e-05, 2.8847000000001982e-05, 2.8874999999997653e-05, 2.8514000000000317e-05, 2.8860999999998083e-05, 2.9153000000000512e-05, 2.9166000000000608e-05, 2.8832999999998943e-05, 2.8860999999998083e-05, 2.8152999999999512e-05, 2.8512999999997374e-05, 2.8847000000001982e-05, 2.8514000000000317e-05, 2.8861000000001552e-05, 2.8527999999999887e-05, 2.8514000000000317e-05, 2.8861999999997556e-05, 2.8862000000001026e-05, 2.8860999999998083e-05, 2.8875000000001122e-05, 2.9167000000000082e-05, 2.8860999999998083e-05, 2.8514000000000317e-05, 2.8514000000000317e-05, 2.8861000000001552e-05, 2.816699999999908e-05, 2.8861000000001552e-05, 2.918099999999965e-05, 2.8875000000001122e-05, 2.8847000000001982e-05, 2.8514000000000317e-05, 2.8860999999998083e-05, 2.9208000000002787e-05, 2.8527999999999887e-05, 2.9221999999998888e-05]</msg>
<status status="PASS" starttime="20201029 18:17:47.950" endtime="20201029 18:17:47.953"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:47.946" endtime="20201029 18:17:47.954"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:47.957" endtime="20201029 18:17:47.977"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:47.956" endtime="20201029 18:17:47.977"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:47.955" endtime="20201029 18:17:47.978"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:47.597" endtime="20201029 18:17:47.978"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:47.596" endtime="20201029 18:17:47.978"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:47.987" endtime="20201029 18:17:48.003"></status>
</kw>
<msg timestamp="20201029 18:17:48.004" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:47.985" endtime="20201029 18:17:48.004"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:48.006" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:48.005" endtime="20201029 18:17:48.006"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:48.007" endtime="20201029 18:17:48.009"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:47.983" endtime="20201029 18:17:48.009"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:47.981" endtime="20201029 18:17:48.009"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:48.016" endtime="20201029 18:17:48.302"></status>
</kw>
<msg timestamp="20201029 18:17:48.306" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020091375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020121264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:48.014" endtime="20201029 18:17:48.307"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:48.319" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020091375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020121264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:48.308" endtime="20201029 18:17:48.320"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:48.320" endtime="20201029 18:17:48.322"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:48.012" endtime="20201029 18:17:48.323"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:48.010" endtime="20201029 18:17:48.325"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:48.330" level="INFO">${RESULT} = [{'diff': 2.9888999999998223e-05}, {'diff': 2.9583999999999167e-05}, {'diff': 3.0250000000002497e-05}, {'diff': 2.9625000000001872e-05}, {'diff': 2.9568999999996654e-05}, {'diff': 2.9541000000000983e-...</msg>
<status status="PASS" starttime="20201029 18:17:48.327" endtime="20201029 18:17:48.330"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:48.335" level="INFO">${ACCURACY} = {'diff': [2.9888999999998223e-05, 2.9583999999999167e-05, 3.0250000000002497e-05, 2.9625000000001872e-05, 2.9568999999996654e-05, 2.9541000000000983e-05, 2.9875000000002122e-05, 2.9556000000000027e-05...</msg>
<status status="PASS" starttime="20201029 18:17:48.331" endtime="20201029 18:17:48.336"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:48.340" level="INFO">NAME: accuracy-TIMER_SLEEP-25-philip</msg>
<status status="PASS" starttime="20201029 18:17:48.339" endtime="20201029 18:17:48.340"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:48.342" level="INFO">VALUE: [2.9888999999998223e-05, 2.9583999999999167e-05, 3.0250000000002497e-05, 2.9625000000001872e-05, 2.9568999999996654e-05, 2.9541000000000983e-05, 2.9875000000002122e-05, 2.9556000000000027e-05, 2.9931000000000402e-05, 2.919500000000269e-05, 2.9541999999996987e-05, 2.9874999999998653e-05, 2.9555000000000553e-05, 2.9625000000001872e-05, 2.9542000000000457e-05, 3.0235999999999458e-05, 3.0250000000002497e-05, 2.9486000000002177e-05, 3.0250000000002497e-05, 2.9556000000000027e-05, 2.991599999999789e-05, 2.9207999999999318e-05, 3.0235999999999458e-05, 2.9499999999998278e-05, 2.9889000000001692e-05, 3.0235999999999458e-05, 2.9555000000000553e-05, 2.9556000000000027e-05, 2.9541000000000983e-05, 3.0221999999999888e-05, 2.9569999999999597e-05, 3.0278000000001637e-05, 2.9888999999998223e-05, 3.0264000000002067e-05, 2.9556000000000027e-05, 2.9889000000001692e-05, 3.0249999999999028e-05, 2.9903000000001262e-05, 2.9874999999998653e-05, 2.9554999999997084e-05, 2.9889000000001692e-05, 2.9556000000000027e-05, 2.9569000000000123e-05, 2.988800000000222e-05, 2.9540999999997514e-05, 2.9542000000000457e-05, 2.9235999999998458e-05, 3.0305999999997307e-05, 2.9902999999997792e-05, 2.9569999999999597e-05]</msg>
<status status="PASS" starttime="20201029 18:17:48.341" endtime="20201029 18:17:48.343"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:48.336" endtime="20201029 18:17:48.344"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:48.347" endtime="20201029 18:17:48.367"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:48.346" endtime="20201029 18:17:48.367"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:48.345" endtime="20201029 18:17:48.368"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:47.979" endtime="20201029 18:17:48.368"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:47.978" endtime="20201029 18:17:48.368"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:48.377" endtime="20201029 18:17:48.393"></status>
</kw>
<msg timestamp="20201029 18:17:48.393" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:48.375" endtime="20201029 18:17:48.393"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:48.396" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:48.394" endtime="20201029 18:17:48.396"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:48.397" endtime="20201029 18:17:48.398"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:48.373" endtime="20201029 18:17:48.399"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:48.371" endtime="20201029 18:17:48.399"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:48.406" endtime="20201029 18:17:48.693"></status>
</kw>
<msg timestamp="20201029 18:17:48.696" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019804806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019835736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:48.404" endtime="20201029 18:17:48.696"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:48.704" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019804806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019835736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:48.697" endtime="20201029 18:17:48.705"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:48.705" endtime="20201029 18:17:48.707"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:48.402" endtime="20201029 18:17:48.708"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:48.400" endtime="20201029 18:17:48.708"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:48.712" level="INFO">${RESULT} = [{'diff': 3.092999999999846e-05}, {'diff': 3.09310000000014e-05}, {'diff': 3.093099999999793e-05}, {'diff': 3.09449999999975e-05}, {'diff': 3.095800000000107e-05}, {'diff': 3.061099999999983e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 18:17:48.709" endtime="20201029 18:17:48.712"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:48.716" level="INFO">${ACCURACY} = {'diff': [3.092999999999846e-05, 3.09310000000014e-05, 3.093099999999793e-05, 3.09449999999975e-05, 3.095800000000107e-05, 3.061099999999983e-05, 3.091699999999836e-05, 3.022299999999936e-05, 3.025000...</msg>
<status status="PASS" starttime="20201029 18:17:48.713" endtime="20201029 18:17:48.717"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:48.721" level="INFO">NAME: accuracy-TIMER_SLEEP-26-philip</msg>
<status status="PASS" starttime="20201029 18:17:48.720" endtime="20201029 18:17:48.721"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:48.723" level="INFO">VALUE: [3.092999999999846e-05, 3.09310000000014e-05, 3.093099999999793e-05, 3.09449999999975e-05, 3.095800000000107e-05, 3.061099999999983e-05, 3.091699999999836e-05, 3.022299999999936e-05, 3.0250000000002497e-05, 3.0584000000000167e-05, 3.0235999999999458e-05, 3.058300000000069e-05, 3.088899999999922e-05, 3.0597999999999737e-05, 3.0249999999999028e-05, 3.091700000000183e-05, 3.058300000000069e-05, 3.088899999999922e-05, 3.0236000000002927e-05, 3.059700000000026e-05, 3.127800000000264e-05, 3.0584000000000167e-05, 3.0568999999997654e-05, 3.05700000000006e-05, 3.055599999999756e-05, 3.091700000000183e-05, 3.133400000000092e-05, 3.094500000000097e-05, 3.056900000000112e-05, 3.0584000000000167e-05, 3.0596999999996793e-05, 3.094399999999803e-05, 3.095800000000107e-05, 3.058300000000069e-05, 3.056900000000112e-05, 3.0568999999997654e-05, 3.095800000000107e-05, 3.0249999999999028e-05, 3.12639999999996e-05, 3.0304999999997834e-05, 3.09440000000015e-05, 3.092999999999846e-05, 3.098600000000021e-05, 3.058300000000069e-05, 3.058300000000069e-05, 3.09310000000014e-05, 3.093099999999793e-05, 3.063899999999897e-05, 3.0597999999999737e-05, 3.127800000000264e-05]</msg>
<status status="PASS" starttime="20201029 18:17:48.722" endtime="20201029 18:17:48.724"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:48.717" endtime="20201029 18:17:48.725"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:48.728" endtime="20201029 18:17:48.748"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:48.727" endtime="20201029 18:17:48.748"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:48.726" endtime="20201029 18:17:48.749"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:48.369" endtime="20201029 18:17:48.749"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:48.368" endtime="20201029 18:17:48.749"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:48.758" endtime="20201029 18:17:48.777"></status>
</kw>
<msg timestamp="20201029 18:17:48.778" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:48.756" endtime="20201029 18:17:48.778"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:48.780" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:48.779" endtime="20201029 18:17:48.781"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:48.781" endtime="20201029 18:17:48.783"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:48.754" endtime="20201029 18:17:48.784"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:48.752" endtime="20201029 18:17:48.784"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:48.790" endtime="20201029 18:17:49.090"></status>
</kw>
<msg timestamp="20201029 18:17:49.093" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023275528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023306792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:48.789" endtime="20201029 18:17:49.093"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:49.101" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023275528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023306792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:49.094" endtime="20201029 18:17:49.101"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:49.102" endtime="20201029 18:17:49.104"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:48.786" endtime="20201029 18:17:49.104"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:48.785" endtime="20201029 18:17:49.105"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:49.109" level="INFO">${RESULT} = [{'diff': 3.12639999999996e-05}, {'diff': 3.19449999999985e-05}, {'diff': 3.19440000000025e-05}, {'diff': 3.197200000000164e-05}, {'diff': 3.198600000000121e-05}, {'diff': 3.231999999999888e-05}, {'di...</msg>
<status status="PASS" starttime="20201029 18:17:49.105" endtime="20201029 18:17:49.109"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:49.113" level="INFO">${ACCURACY} = {'diff': [3.12639999999996e-05, 3.19449999999985e-05, 3.19440000000025e-05, 3.197200000000164e-05, 3.198600000000121e-05, 3.231999999999888e-05, 3.198600000000121e-05, 3.156999999999813e-05, 3.2304999...</msg>
<status status="PASS" starttime="20201029 18:17:49.110" endtime="20201029 18:17:49.113"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:49.117" level="INFO">NAME: accuracy-TIMER_SLEEP-27-philip</msg>
<status status="PASS" starttime="20201029 18:17:49.116" endtime="20201029 18:17:49.118"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:49.120" level="INFO">VALUE: [3.12639999999996e-05, 3.19449999999985e-05, 3.19440000000025e-05, 3.197200000000164e-05, 3.198600000000121e-05, 3.231999999999888e-05, 3.198600000000121e-05, 3.156999999999813e-05, 3.2304999999999834e-05, 3.167999999999921e-05, 3.229200000000321e-05, 3.1610999999997363e-05, 3.198700000000068e-05, 3.161100000000083e-05, 3.194500000000197e-05, 3.163899999999997e-05, 3.161100000000083e-05, 3.127799999999917e-05, 3.16250000000004e-05, 3.195900000000154e-05, 3.223600000000146e-05, 3.16250000000004e-05, 3.197200000000164e-05, 3.194399999999903e-05, 3.200000000000078e-05, 3.236100000000158e-05, 3.16250000000004e-05, 3.1612000000000307e-05, 3.195899999999807e-05, 3.230599999999931e-05, 3.127799999999917e-05, 3.197200000000164e-05, 3.1612000000000307e-05, 3.161100000000083e-05, 3.232000000000235e-05, 3.16250000000004e-05, 3.16380000000005e-05, 3.200000000000078e-05, 3.127800000000264e-05, 3.1610999999997363e-05, 3.127799999999917e-05, 3.19579999999986e-05, 3.232000000000235e-05, 3.19579999999986e-05, 3.161100000000083e-05, 3.163899999999997e-05, 3.195900000000154e-05, 3.16250000000004e-05, 3.198600000000121e-05, 3.19440000000025e-05]</msg>
<status status="PASS" starttime="20201029 18:17:49.118" endtime="20201029 18:17:49.121"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:49.114" endtime="20201029 18:17:49.122"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:49.126" endtime="20201029 18:17:49.145"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:49.124" endtime="20201029 18:17:49.146"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:49.123" endtime="20201029 18:17:49.146"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:48.750" endtime="20201029 18:17:49.146"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:48.749" endtime="20201029 18:17:49.146"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:49.155" endtime="20201029 18:17:49.172"></status>
</kw>
<msg timestamp="20201029 18:17:49.172" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:49.153" endtime="20201029 18:17:49.172"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:49.174" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:49.173" endtime="20201029 18:17:49.175"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:49.175" endtime="20201029 18:17:49.177"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:49.151" endtime="20201029 18:17:49.178"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:49.149" endtime="20201029 18:17:49.178"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:49.185" endtime="20201029 18:17:49.470"></status>
</kw>
<msg timestamp="20201029 18:17:49.473" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020575167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020607472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:49.183" endtime="20201029 18:17:49.474"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:49.481" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020575167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020607472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:49.474" endtime="20201029 18:17:49.482"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:49.483" endtime="20201029 18:17:49.484"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:49.180" endtime="20201029 18:17:49.485"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:49.179" endtime="20201029 18:17:49.485"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:49.489" level="INFO">${RESULT} = [{'diff': 3.23050000000033e-05}, {'diff': 3.224999999999756e-05}, {'diff': 3.2332999999998974e-05}, {'diff': 3.234799999999802e-05}, {'diff': 3.2596999999998794e-05}, {'diff': 3.3332999999999974e-05},...</msg>
<status status="PASS" starttime="20201029 18:17:49.486" endtime="20201029 18:17:49.489"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:49.494" level="INFO">${ACCURACY} = {'diff': [3.23050000000033e-05, 3.224999999999756e-05, 3.2332999999998974e-05, 3.234799999999802e-05, 3.2596999999998794e-05, 3.3332999999999974e-05, 3.298599999999874e-05, 3.229199999999974e-05, 3.29...</msg>
<status status="PASS" starttime="20201029 18:17:49.490" endtime="20201029 18:17:49.495"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:49.499" level="INFO">NAME: accuracy-TIMER_SLEEP-28-philip</msg>
<status status="PASS" starttime="20201029 18:17:49.498" endtime="20201029 18:17:49.499"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:49.501" level="INFO">VALUE: [3.23050000000033e-05, 3.224999999999756e-05, 3.2332999999998974e-05, 3.234799999999802e-05, 3.2596999999998794e-05, 3.3332999999999974e-05, 3.298599999999874e-05, 3.229199999999974e-05, 3.299999999999831e-05, 3.230599999999931e-05, 3.231999999999888e-05, 3.300000000000178e-05, 3.268099999999968e-05, 3.265300000000054e-05, 3.2332999999998974e-05, 3.304200000000049e-05, 3.268099999999968e-05, 3.300000000000178e-05, 3.26389999999975e-05, 3.301400000000135e-05, 3.266700000000011e-05, 3.268000000000021e-05, 3.293000000000046e-05, 3.266600000000064e-05, 3.301400000000135e-05, 3.299999999999831e-05, 3.263900000000097e-05, 3.266700000000011e-05, 3.268099999999968e-05, 3.299999999999831e-05, 3.301399999999788e-05, 3.300000000000178e-05, 3.3013000000001874e-05, 3.337500000000215e-05, 3.265300000000054e-05, 3.266700000000011e-05, 3.266699999999664e-05, 3.301399999999788e-05, 3.299999999999831e-05, 3.259700000000226e-05, 3.230599999999931e-05, 3.301400000000135e-05, 3.302800000000092e-05, 3.266700000000011e-05, 3.301400000000135e-05, 3.301399999999788e-05, 3.268099999999968e-05, 3.336100000000258e-05, 3.2304999999999834e-05, 3.301399999999788e-05]</msg>
<status status="PASS" starttime="20201029 18:17:49.500" endtime="20201029 18:17:49.502"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:49.495" endtime="20201029 18:17:49.503"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:49.506" endtime="20201029 18:17:49.526"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:49.505" endtime="20201029 18:17:49.526"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:49.504" endtime="20201029 18:17:49.527"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:49.147" endtime="20201029 18:17:49.527"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:49.147" endtime="20201029 18:17:49.527"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:49.536" endtime="20201029 18:17:49.552"></status>
</kw>
<msg timestamp="20201029 18:17:49.553" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:49.534" endtime="20201029 18:17:49.553"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:49.555" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:49.554" endtime="20201029 18:17:49.556"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:49.556" endtime="20201029 18:17:49.558"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:49.532" endtime="20201029 18:17:49.559"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:49.529" endtime="20201029 18:17:49.559"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:49.566" endtime="20201029 18:17:49.853"></status>
</kw>
<msg timestamp="20201029 18:17:49.856" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020768389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020801806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:49.564" endtime="20201029 18:17:49.856"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:49.864" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020768389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020801806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:49.857" endtime="20201029 18:17:49.865"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:49.865" endtime="20201029 18:17:49.867"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:49.561" endtime="20201029 18:17:49.868"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:49.560" endtime="20201029 18:17:49.868"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:49.872" level="INFO">${RESULT} = [{'diff': 3.341699999999739e-05}, {'diff': 3.366700000000111e-05}, {'diff': 3.369400000000078e-05}, {'diff': 3.4374999999999684e-05}, {'diff': 3.404200000000149e-05}, {'diff': 3.374999999999906e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:17:49.869" endtime="20201029 18:17:49.872"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:49.876" level="INFO">${ACCURACY} = {'diff': [3.341699999999739e-05, 3.366700000000111e-05, 3.369400000000078e-05, 3.4374999999999684e-05, 3.404200000000149e-05, 3.374999999999906e-05, 3.4026999999998975e-05, 3.4110999999999864e-05, 3.3...</msg>
<status status="PASS" starttime="20201029 18:17:49.873" endtime="20201029 18:17:49.876"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:49.881" level="INFO">NAME: accuracy-TIMER_SLEEP-29-philip</msg>
<status status="PASS" starttime="20201029 18:17:49.880" endtime="20201029 18:17:49.881"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:49.883" level="INFO">VALUE: [3.341699999999739e-05, 3.366700000000111e-05, 3.369400000000078e-05, 3.4374999999999684e-05, 3.404200000000149e-05, 3.374999999999906e-05, 3.4026999999998975e-05, 3.4110999999999864e-05, 3.3388999999998253e-05, 3.404199999999802e-05, 3.4388999999999253e-05, 3.374999999999906e-05, 3.331999999999988e-05, 3.404199999999802e-05, 3.4402999999998823e-05, 3.399999999999931e-05, 3.369499999999678e-05, 3.399999999999931e-05, 3.3360999999999114e-05, 3.3360999999999114e-05, 3.3388999999998253e-05, 3.404200000000149e-05, 3.405600000000106e-05, 3.404200000000149e-05, 3.402799999999845e-05, 3.402799999999845e-05, 3.4040999999998545e-05, 3.402799999999845e-05, 3.369400000000078e-05, 3.404200000000149e-05, 3.369400000000078e-05, 3.336100000000258e-05, 3.3346999999999544e-05, 3.4054999999998115e-05, 3.4110999999999864e-05, 3.3346999999999544e-05, 3.402799999999845e-05, 3.405600000000106e-05, 3.4041000000002014e-05, 3.4374999999999684e-05, 3.3346999999999544e-05, 3.369400000000078e-05, 3.398599999999974e-05, 3.368099999999721e-05, 3.404200000000149e-05, 3.369400000000078e-05, 3.369500000000025e-05, 3.402800000000192e-05, 3.3332999999999974e-05, 3.4040999999998545e-05]</msg>
<status status="PASS" starttime="20201029 18:17:49.882" endtime="20201029 18:17:49.888"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:49.877" endtime="20201029 18:17:49.889"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:49.892" endtime="20201029 18:17:49.912"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:49.891" endtime="20201029 18:17:49.912"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:49.890" endtime="20201029 18:17:49.913"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:49.528" endtime="20201029 18:17:49.913"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:49.527" endtime="20201029 18:17:49.913"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:49.922" endtime="20201029 18:17:49.938"></status>
</kw>
<msg timestamp="20201029 18:17:49.938" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:49.920" endtime="20201029 18:17:49.938"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:49.941" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:49.939" endtime="20201029 18:17:49.941"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:49.942" endtime="20201029 18:17:49.943"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:49.918" endtime="20201029 18:17:49.944"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:49.916" endtime="20201029 18:17:49.944"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:49.951" endtime="20201029 18:17:50.238"></status>
</kw>
<msg timestamp="20201029 18:17:50.241" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020627778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020672681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:49.949" endtime="20201029 18:17:50.241"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:50.249" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020627778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020672681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:50.242" endtime="20201029 18:17:50.249"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:50.250" endtime="20201029 18:17:50.252"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:49.947" endtime="20201029 18:17:50.253"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:49.945" endtime="20201029 18:17:50.253"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:50.257" level="INFO">${RESULT} = [{'diff': 4.4902999999998916e-05}, {'diff': 4.474999999999965e-05}, {'diff': 4.480500000000193e-05}, {'diff': 4.469400000000137e-05}, {'diff': 4.5083000000001316e-05}, {'diff': 4.4861000000000206e-05}...</msg>
<status status="PASS" starttime="20201029 18:17:50.254" endtime="20201029 18:17:50.257"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:50.261" level="INFO">${ACCURACY} = {'diff': [4.4902999999998916e-05, 4.474999999999965e-05, 4.480500000000193e-05, 4.469400000000137e-05, 4.5083000000001316e-05, 4.4861000000000206e-05, 4.479099999999889e-05, 4.4360999999999706e-05, 4....</msg>
<status status="PASS" starttime="20201029 18:17:50.258" endtime="20201029 18:17:50.261"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:50.266" level="INFO">NAME: accuracy-TIMER_SLEEP-30-philip</msg>
<status status="PASS" starttime="20201029 18:17:50.265" endtime="20201029 18:17:50.266"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:50.268" level="INFO">VALUE: [4.4902999999998916e-05, 4.474999999999965e-05, 4.480500000000193e-05, 4.469400000000137e-05, 4.5083000000001316e-05, 4.4861000000000206e-05, 4.479099999999889e-05, 4.4360999999999706e-05, 4.4902999999998916e-05, 4.4861000000000206e-05, 4.4347000000000136e-05, 4.472200000000051e-05, 4.51939999999984e-05, 4.4917000000001955e-05, 4.4722999999999985e-05, 4.4403000000001885e-05, 4.4402999999998416e-05, 4.4459000000000165e-05, 4.53060000000019e-05, 4.4695000000000845e-05, 4.479199999999836e-05, 4.470800000000094e-05, 4.447200000000026e-05, 4.5333000000001566e-05, 4.522200000000101e-05, 4.4861000000000206e-05, 4.504099999999914e-05, 4.4847000000000636e-05, 4.527799999999929e-05, 4.454200000000158e-05, 4.49999999999999e-05, 4.479200000000183e-05, 4.4819000000001497e-05, 4.4861000000000206e-05, 4.484699999999717e-05, 4.498600000000033e-05, 4.522199999999754e-05, 4.5209000000000915e-05, 4.48060000000014e-05, 4.509699999999742e-05, 4.48199999999975e-05, 4.477799999999879e-05, 4.53329999999981e-05, 4.4709000000000415e-05, 4.5083000000001316e-05, 4.490199999999944e-05, 4.504099999999914e-05, 4.495799999999772e-05, 4.4833000000001066e-05, 4.515199999999969e-05]</msg>
<status status="PASS" starttime="20201029 18:17:50.267" endtime="20201029 18:17:50.270"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:50.262" endtime="20201029 18:17:50.270"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:50.274" endtime="20201029 18:17:50.293"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:50.272" endtime="20201029 18:17:50.294"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:50.271" endtime="20201029 18:17:50.294"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:49.914" endtime="20201029 18:17:50.295"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:49.913" endtime="20201029 18:17:50.295"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:50.303" endtime="20201029 18:17:50.320"></status>
</kw>
<msg timestamp="20201029 18:17:50.320" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:50.302" endtime="20201029 18:17:50.320"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:50.323" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:50.321" endtime="20201029 18:17:50.323"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:50.324" endtime="20201029 18:17:50.325"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:50.299" endtime="20201029 18:17:50.326"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:50.297" endtime="20201029 18:17:50.326"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:50.333" endtime="20201029 18:17:50.619"></status>
</kw>
<msg timestamp="20201029 18:17:50.623" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019758833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019805014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:50.331" endtime="20201029 18:17:50.623"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:50.631" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019758833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019805014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:50.624" endtime="20201029 18:17:50.631"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:50.632" endtime="20201029 18:17:50.634"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:50.329" endtime="20201029 18:17:50.634"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:50.327" endtime="20201029 18:17:50.635"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:50.639" level="INFO">${RESULT} = [{'diff': 4.6180999999999306e-05}, {'diff': 4.5917000000002955e-05}, {'diff': 4.601400000000047e-05}, {'diff': 4.604199999999961e-05}, {'diff': 4.5945000000002095e-05}, {'diff': 4.5930999999999056e-05...</msg>
<status status="PASS" starttime="20201029 18:17:50.635" endtime="20201029 18:17:50.639"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:50.644" level="INFO">${ACCURACY} = {'diff': [4.6180999999999306e-05, 4.5917000000002955e-05, 4.601400000000047e-05, 4.604199999999961e-05, 4.5945000000002095e-05, 4.5930999999999056e-05, 4.552799999999954e-05, 4.544399999999865e-05, 4....</msg>
<status status="PASS" starttime="20201029 18:17:50.640" endtime="20201029 18:17:50.644"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:50.648" level="INFO">NAME: accuracy-TIMER_SLEEP-31-philip</msg>
<status status="PASS" starttime="20201029 18:17:50.647" endtime="20201029 18:17:50.648"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:50.651" level="INFO">VALUE: [4.6180999999999306e-05, 4.5917000000002955e-05, 4.601400000000047e-05, 4.604199999999961e-05, 4.5945000000002095e-05, 4.5930999999999056e-05, 4.552799999999954e-05, 4.544399999999865e-05, 4.5861000000001206e-05, 4.624999999999768e-05, 4.576400000000022e-05, 4.541599999999951e-05, 4.623599999999811e-05, 4.612499999999756e-05, 4.559699999999792e-05, 4.598599999999786e-05, 4.609699999999842e-05, 4.5833000000002067e-05, 4.5639000000000096e-05, 4.5861000000001206e-05, 4.611099999999799e-05, 4.6139000000000596e-05, 4.609699999999842e-05, 4.552799999999954e-05, 4.6208999999998446e-05, 4.5653000000003136e-05, 4.5666999999999236e-05, 4.633399999999857e-05, 4.616600000000026e-05, 4.58199999999985e-05, 4.620800000000244e-05, 4.601400000000047e-05, 4.5861000000001206e-05, 4.594399999999915e-05, 4.575000000000065e-05, 4.626400000000072e-05, 4.60000000000009e-05, 4.5930999999999056e-05, 4.5875000000000776e-05, 4.579199999999936e-05, 4.5431000000002025e-05, 4.5333000000001566e-05, 4.58329999999986e-05, 4.601400000000047e-05, 4.5930999999999056e-05, 4.623600000000158e-05, 4.627800000000029e-05, 4.5473000000000735e-05, 4.5722999999997516e-05, 4.5375000000000276e-05]</msg>
<status status="PASS" starttime="20201029 18:17:50.649" endtime="20201029 18:17:50.652"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:50.644" endtime="20201029 18:17:50.652"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:50.656" endtime="20201029 18:17:50.675"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:50.654" endtime="20201029 18:17:50.676"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:50.653" endtime="20201029 18:17:50.676"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:50.296" endtime="20201029 18:17:50.677"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:50.295" endtime="20201029 18:17:50.677"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:50.686" endtime="20201029 18:17:50.703"></status>
</kw>
<msg timestamp="20201029 18:17:50.704" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:50.685" endtime="20201029 18:17:50.704"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:50.706" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:50.705" endtime="20201029 18:17:50.707"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:50.707" endtime="20201029 18:17:50.709"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:50.682" endtime="20201029 18:17:50.710"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:50.679" endtime="20201029 18:17:50.710"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:50.716" endtime="20201029 18:17:51.004"></status>
</kw>
<msg timestamp="20201029 18:17:51.007" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021024597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021071708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:50.715" endtime="20201029 18:17:51.007"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:51.015" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021024597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021071708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:51.008" endtime="20201029 18:17:51.016"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:51.016" endtime="20201029 18:17:51.018"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:50.712" endtime="20201029 18:17:51.019"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:50.711" endtime="20201029 18:17:51.019"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:51.023" level="INFO">${RESULT} = [{'diff': 4.7111000000002456e-05}, {'diff': 4.7153000000001166e-05}, {'diff': 4.7139000000001596e-05}, {'diff': 4.722199999999954e-05}, {'diff': 4.722199999999954e-05}, {'diff': 4.654200000000011e-05}...</msg>
<status status="PASS" starttime="20201029 18:17:51.020" endtime="20201029 18:17:51.023"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:51.027" level="INFO">${ACCURACY} = {'diff': [4.7111000000002456e-05, 4.7153000000001166e-05, 4.7139000000001596e-05, 4.722199999999954e-05, 4.722199999999954e-05, 4.654200000000011e-05, 4.708299999999985e-05, 4.726399999999825e-05, 4.6...</msg>
<status status="PASS" starttime="20201029 18:17:51.024" endtime="20201029 18:17:51.027"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:51.032" level="INFO">NAME: accuracy-TIMER_SLEEP-32-philip</msg>
<status status="PASS" starttime="20201029 18:17:51.031" endtime="20201029 18:17:51.032"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:51.034" level="INFO">VALUE: [4.7111000000002456e-05, 4.7153000000001166e-05, 4.7139000000001596e-05, 4.722199999999954e-05, 4.722199999999954e-05, 4.654200000000011e-05, 4.708299999999985e-05, 4.726399999999825e-05, 4.677800000000079e-05, 4.6667000000000236e-05, 4.676400000000122e-05, 4.732e-05, 4.6973000000002235e-05, 4.6875000000001776e-05, 4.634799999999814e-05, 4.6972999999998766e-05, 4.73330000000001e-05, 4.727799999999782e-05, 4.686099999999874e-05, 4.672200000000251e-05, 4.724999999999868e-05, 4.634699999999867e-05, 4.636099999999824e-05, 4.691600000000101e-05, 4.722199999999954e-05, 4.658299999999935e-05, 4.68329999999996e-05, 4.726399999999825e-05, 4.730599999999696e-05, 4.727800000000129e-05, 4.7167000000000736e-05, 4.651400000000097e-05, 4.675000000000165e-05, 4.658399999999882e-05, 4.723599999999911e-05, 4.6639000000001096e-05, 4.645799999999922e-05, 4.640200000000094e-05, 4.644399999999965e-05, 4.705500000000071e-05, 4.661099999999849e-05, 4.704099999999767e-05, 4.6347000000002136e-05, 4.659699999999892e-05, 4.649999999999793e-05, 4.704200000000061e-05, 4.708299999999985e-05, 4.6903000000000916e-05, 4.680599999999993e-05, 4.6653000000000666e-05]</msg>
<status status="PASS" starttime="20201029 18:17:51.033" endtime="20201029 18:17:51.035"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:51.028" endtime="20201029 18:17:51.036"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:51.039" endtime="20201029 18:17:51.059"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:51.038" endtime="20201029 18:17:51.059"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:51.037" endtime="20201029 18:17:51.059"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:50.678" endtime="20201029 18:17:51.060"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:50.677" endtime="20201029 18:17:51.060"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:51.069" endtime="20201029 18:17:51.085"></status>
</kw>
<msg timestamp="20201029 18:17:51.086" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:51.067" endtime="20201029 18:17:51.086"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:51.088" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:51.087" endtime="20201029 18:17:51.088"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:51.089" endtime="20201029 18:17:51.091"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:51.065" endtime="20201029 18:17:51.091"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:51.062" endtime="20201029 18:17:51.092"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:51.098" endtime="20201029 18:17:51.384"></status>
</kw>
<msg timestamp="20201029 18:17:51.387" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020587556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020635222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:51.097" endtime="20201029 18:17:51.387"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:51.395" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020587556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020635222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:51.388" endtime="20201029 18:17:51.395"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:51.396" endtime="20201029 18:17:51.398"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:51.094" endtime="20201029 18:17:51.398"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:51.092" endtime="20201029 18:17:51.399"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:51.403" level="INFO">${RESULT} = [{'diff': 4.766600000000176e-05}, {'diff': 4.727800000000129e-05}, {'diff': 4.772200000000004e-05}, {'diff': 4.747199999999979e-05}, {'diff': 4.7875000000002776e-05}, {'diff': 4.806900000000128e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:17:51.400" endtime="20201029 18:17:51.403"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:51.407" level="INFO">${ACCURACY} = {'diff': [4.766600000000176e-05, 4.727800000000129e-05, 4.772200000000004e-05, 4.747199999999979e-05, 4.7875000000002776e-05, 4.806900000000128e-05, 4.794400000000115e-05, 4.752800000000154e-05, 4.827...</msg>
<status status="PASS" starttime="20201029 18:17:51.404" endtime="20201029 18:17:51.407"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:51.412" level="INFO">NAME: accuracy-TIMER_SLEEP-33-philip</msg>
<status status="PASS" starttime="20201029 18:17:51.410" endtime="20201029 18:17:51.412"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:51.414" level="INFO">VALUE: [4.766600000000176e-05, 4.727800000000129e-05, 4.772200000000004e-05, 4.747199999999979e-05, 4.7875000000002776e-05, 4.806900000000128e-05, 4.794400000000115e-05, 4.752800000000154e-05, 4.827800000000229e-05, 4.759699999999992e-05, 4.822200000000054e-05, 4.7917000000001486e-05, 4.7430999999997087e-05, 4.7667000000001236e-05, 4.780600000000093e-05, 4.798599999999986e-05, 4.741699999999752e-05, 4.734699999999967e-05, 4.7445000000000126e-05, 4.776399999999875e-05, 4.770800000000047e-05, 4.766599999999829e-05, 4.747199999999979e-05, 4.829100000000239e-05, 4.826299999999978e-05, 4.78330000000006e-05, 4.811099999999999e-05, 4.788899999999888e-05, 4.745800000000022e-05, 4.779199999999789e-05, 4.836199999999971e-05, 4.7707999999997e-05, 4.745800000000022e-05, 4.7431000000000556e-05, 4.83330000000011e-05, 4.7403000000001416e-05, 4.798599999999986e-05, 4.755600000000068e-05, 4.733399999999957e-05, 4.7403000000001416e-05, 4.808400000000032e-05, 4.768099999999734e-05, 4.740199999999847e-05, 4.745800000000022e-05, 4.815199999999922e-05, 4.779100000000189e-05, 4.766599999999829e-05, 4.80269999999991e-05, 4.759699999999992e-05, 4.736099999999924e-05]</msg>
<status status="PASS" starttime="20201029 18:17:51.413" endtime="20201029 18:17:51.416"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:51.408" endtime="20201029 18:17:51.416"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:51.420" endtime="20201029 18:17:51.439"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:51.418" endtime="20201029 18:17:51.440"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:51.417" endtime="20201029 18:17:51.440"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:51.061" endtime="20201029 18:17:51.440"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:51.060" endtime="20201029 18:17:51.441"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:51.449" endtime="20201029 18:17:51.465"></status>
</kw>
<msg timestamp="20201029 18:17:51.466" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:51.448" endtime="20201029 18:17:51.466"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:51.468" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:51.467" endtime="20201029 18:17:51.469"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:51.469" endtime="20201029 18:17:51.471"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:51.445" endtime="20201029 18:17:51.472"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:51.443" endtime="20201029 18:17:51.472"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:51.478" endtime="20201029 18:17:51.764"></status>
</kw>
<msg timestamp="20201029 18:17:51.767" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019777958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01982625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:17:51.477" endtime="20201029 18:17:51.768"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:51.776" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019777958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01982625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:17:51.768" endtime="20201029 18:17:51.776"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:51.777" endtime="20201029 18:17:51.778"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:51.474" endtime="20201029 18:17:51.779"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:51.473" endtime="20201029 18:17:51.779"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:51.783" level="INFO">${RESULT} = [{'diff': 4.829199999999839e-05}, {'diff': 4.854199999999864e-05}, {'diff': 4.845799999999775e-05}, {'diff': 4.875000000000018e-05}, {'diff': 4.8723000000000516e-05}, {'diff': 4.887500000000031e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:17:51.780" endtime="20201029 18:17:51.784"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:51.788" level="INFO">${ACCURACY} = {'diff': [4.829199999999839e-05, 4.854199999999864e-05, 4.845799999999775e-05, 4.875000000000018e-05, 4.8723000000000516e-05, 4.887500000000031e-05, 4.924999999999721e-05, 4.8445000000001126e-05, 4.91...</msg>
<status status="PASS" starttime="20201029 18:17:51.784" endtime="20201029 18:17:51.789"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:51.793" level="INFO">NAME: accuracy-TIMER_SLEEP-34-philip</msg>
<status status="PASS" starttime="20201029 18:17:51.792" endtime="20201029 18:17:51.793"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:51.796" level="INFO">VALUE: [4.829199999999839e-05, 4.854199999999864e-05, 4.845799999999775e-05, 4.875000000000018e-05, 4.8723000000000516e-05, 4.887500000000031e-05, 4.924999999999721e-05, 4.8445000000001126e-05, 4.919399999999893e-05, 4.8417000000001986e-05, 4.870800000000147e-05, 4.927700000000035e-05, 4.873600000000061e-05, 4.845799999999775e-05, 4.862500000000006e-05, 4.86529999999992e-05, 4.848600000000036e-05, 4.892999999999911e-05, 4.884700000000117e-05, 4.929199999999939e-05, 4.834700000000067e-05, 4.8917000000002486e-05, 4.883400000000107e-05, 4.8445000000001126e-05, 4.93330000000021e-05, 4.9167000000002736e-05, 4.859800000000039e-05, 4.888899999999988e-05, 4.862500000000006e-05, 4.86940000000019e-05, 4.916599999999979e-05, 4.915200000000022e-05, 4.838800000000337e-05, 4.847200000000079e-05, 4.922199999999807e-05, 4.930500000000296e-05, 4.925000000000068e-05, 4.866599999999929e-05, 4.898600000000086e-05, 4.836100000000024e-05, 4.881899999999856e-05, 4.852799999999907e-05, 4.834700000000067e-05, 4.8445000000001126e-05, 4.834700000000067e-05, 4.894499999999816e-05, 4.8709000000000946e-05, 4.93339999999981e-05, 4.833400000000057e-05, 4.913899999999666e-05]</msg>
<status status="PASS" starttime="20201029 18:17:51.794" endtime="20201029 18:17:51.796"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:51.789" endtime="20201029 18:17:51.797"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:51.801" endtime="20201029 18:17:51.820"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:51.799" endtime="20201029 18:17:51.821"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:51.798" endtime="20201029 18:17:51.821"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:51.441" endtime="20201029 18:17:51.821"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:51.441" endtime="20201029 18:17:51.821"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:51.830" endtime="20201029 18:17:51.846"></status>
</kw>
<msg timestamp="20201029 18:17:51.847" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:51.828" endtime="20201029 18:17:51.847"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:51.849" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:51.848" endtime="20201029 18:17:51.849"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:51.850" endtime="20201029 18:17:51.852"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:51.826" endtime="20201029 18:17:51.852"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:51.824" endtime="20201029 18:17:51.853"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:51.859" endtime="20201029 18:17:52.147"></status>
</kw>
<msg timestamp="20201029 18:17:52.150" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019782181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019831764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:51.858" endtime="20201029 18:17:52.150"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:52.158" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019782181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019831764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:52.151" endtime="20201029 18:17:52.159"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:52.159" endtime="20201029 18:17:52.161"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:51.855" endtime="20201029 18:17:52.162"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:51.853" endtime="20201029 18:17:52.162"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:52.166" level="INFO">${RESULT} = [{'diff': 4.958300000000235e-05}, {'diff': 4.98339999999986e-05}, {'diff': 4.944499999999866e-05}, {'diff': 5.006999999999928e-05}, {'diff': 4.958399999999835e-05}, {'diff': 5.005500000000024e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:17:52.163" endtime="20201029 18:17:52.166"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:52.170" level="INFO">${ACCURACY} = {'diff': [4.958300000000235e-05, 4.98339999999986e-05, 4.944499999999866e-05, 5.006999999999928e-05, 4.958399999999835e-05, 5.005500000000024e-05, 4.9473000000001266e-05, 4.967999999999986e-05, 4.9985...</msg>
<status status="PASS" starttime="20201029 18:17:52.167" endtime="20201029 18:17:52.170"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:52.175" level="INFO">NAME: accuracy-TIMER_SLEEP-35-philip</msg>
<status status="PASS" starttime="20201029 18:17:52.174" endtime="20201029 18:17:52.175"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:52.177" level="INFO">VALUE: [4.958300000000235e-05, 4.98339999999986e-05, 4.944499999999866e-05, 5.006999999999928e-05, 4.958399999999835e-05, 5.005500000000024e-05, 4.9473000000001266e-05, 4.967999999999986e-05, 4.998599999999839e-05, 4.959699999999845e-05, 5.01530000000007e-05, 4.95140000000005e-05, 5.030500000000049e-05, 5.027800000000082e-05, 4.980499999999999e-05, 5.019399999999993e-05, 5.002800000000057e-05, 4.952800000000007e-05, 4.944499999999866e-05, 4.977800000000032e-05, 4.975000000000118e-05, 5.030599999999996e-05, 5.001300000000153e-05, 4.936100000000124e-05, 5.0320000000003e-05, 4.984799999999817e-05, 4.993099999999959e-05, 5.022200000000254e-05, 4.9707999999999e-05, 5.022200000000254e-05, 5.026399999999778e-05, 5.008299999999938e-05, 4.931899999999906e-05, 4.956899999999931e-05, 4.940299999999995e-05, 4.990300000000045e-05, 4.954199999999964e-05, 4.986100000000174e-05, 5.013899999999766e-05, 5.033299999999963e-05, 5.006999999999928e-05, 4.954199999999964e-05, 5.025000000000168e-05, 5.0209000000002446e-05, 5.022199999999907e-05, 4.980600000000293e-05, 5.0138000000001653e-05, 4.9459000000001696e-05, 5.012499999999809e-05, 4.977700000000085e-05]</msg>
<status status="PASS" starttime="20201029 18:17:52.176" endtime="20201029 18:17:52.178"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:52.171" endtime="20201029 18:17:52.178"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:52.182" endtime="20201029 18:17:52.202"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:52.181" endtime="20201029 18:17:52.202"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:52.179" endtime="20201029 18:17:52.203"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:51.822" endtime="20201029 18:17:52.203"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:51.822" endtime="20201029 18:17:52.203"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:52.212" endtime="20201029 18:17:52.231"></status>
</kw>
<msg timestamp="20201029 18:17:52.231" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:52.210" endtime="20201029 18:17:52.232"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:52.234" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:52.232" endtime="20201029 18:17:52.234"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:52.235" endtime="20201029 18:17:52.237"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:52.207" endtime="20201029 18:17:52.237"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:52.205" endtime="20201029 18:17:52.238"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:52.244" endtime="20201029 18:17:52.530"></status>
</kw>
<msg timestamp="20201029 18:17:52.534" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023022819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023073528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:52.243" endtime="20201029 18:17:52.534"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:52.542" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023022819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023073528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:52.535" endtime="20201029 18:17:52.542"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:52.543" endtime="20201029 18:17:52.545"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:52.240" endtime="20201029 18:17:52.545"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:52.238" endtime="20201029 18:17:52.546"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:52.550" level="INFO">${RESULT} = [{'diff': 5.070899999999948e-05}, {'diff': 5.104200000000114e-05}, {'diff': 5.112499999999909e-05}, {'diff': 5.051399999999803e-05}, {'diff': 5.069400000000043e-05}, {'diff': 5.11669999999978e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:17:52.546" endtime="20201029 18:17:52.550"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:52.554" level="INFO">${ACCURACY} = {'diff': [5.070899999999948e-05, 5.104200000000114e-05, 5.112499999999909e-05, 5.051399999999803e-05, 5.069400000000043e-05, 5.11669999999978e-05, 5.073599999999914e-05, 5.099999999999896e-05, 5.07359...</msg>
<status status="PASS" starttime="20201029 18:17:52.551" endtime="20201029 18:17:52.554"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:52.558" level="INFO">NAME: accuracy-TIMER_SLEEP-36-philip</msg>
<status status="PASS" starttime="20201029 18:17:52.557" endtime="20201029 18:17:52.559"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:52.561" level="INFO">VALUE: [5.070899999999948e-05, 5.104200000000114e-05, 5.112499999999909e-05, 5.051399999999803e-05, 5.069400000000043e-05, 5.11669999999978e-05, 5.073599999999914e-05, 5.099999999999896e-05, 5.073599999999914e-05, 5.097200000000329e-05, 5.063899999999816e-05, 5.119400000000093e-05, 5.113899999999866e-05, 5.122200000000007e-05, 5.069499999999991e-05, 5.086099999999927e-05, 5.062499999999859e-05, 5.122200000000007e-05, 5.080600000000046e-05, 5.079200000000089e-05, 5.113900000000213e-05, 5.059700000000292e-05, 5.074999999999871e-05, 5.120899999999998e-05, 5.091700000000102e-05, 5.037500000000181e-05, 5.076399999999828e-05, 5.036100000000224e-05, 5.098599999999939e-05, 5.077700000000185e-05, 5.086099999999927e-05, 5.130499999999802e-05, 5.104200000000114e-05, 5.105500000000124e-05, 5.126400000000225e-05, 5.112499999999909e-05, 5.11530000000017e-05, 5.084700000000317e-05, 5.129200000000139e-05, 5.115299999999823e-05, 5.124999999999921e-05, 5.069499999999991e-05, 5.088900000000188e-05, 5.047199999999932e-05, 5.08339999999996e-05, 5.079200000000089e-05, 5.074999999999871e-05, 5.049999999999846e-05, 5.03330000000031e-05, 5.040300000000095e-05]</msg>
<status status="PASS" starttime="20201029 18:17:52.559" endtime="20201029 18:17:52.562"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:52.555" endtime="20201029 18:17:52.563"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:52.566" endtime="20201029 18:17:52.586"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:52.565" endtime="20201029 18:17:52.586"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:52.564" endtime="20201029 18:17:52.587"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:52.204" endtime="20201029 18:17:52.587"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:52.203" endtime="20201029 18:17:52.587"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:52.596" endtime="20201029 18:17:52.613"></status>
</kw>
<msg timestamp="20201029 18:17:52.613" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:52.594" endtime="20201029 18:17:52.614"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:52.616" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:52.614" endtime="20201029 18:17:52.616"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:52.617" endtime="20201029 18:17:52.619"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:52.592" endtime="20201029 18:17:52.619"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:52.590" endtime="20201029 18:17:52.619"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:52.626" endtime="20201029 18:17:52.912"></status>
</kw>
<msg timestamp="20201029 18:17:52.915" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019803819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019855431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:52.624" endtime="20201029 18:17:52.915"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:52.923" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019803819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019855431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:52.916" endtime="20201029 18:17:52.924"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:52.925" endtime="20201029 18:17:52.926"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:52.622" endtime="20201029 18:17:52.927"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:52.620" endtime="20201029 18:17:52.927"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:52.931" level="INFO">${RESULT} = [{'diff': 5.161199999999949e-05}, {'diff': 5.138899999999891e-05}, {'diff': 5.147200000000032e-05}, {'diff': 5.158299999999741e-05}, {'diff': 5.15140000000025e-05}, {'diff': 5.1708000000001e-05}, {'di...</msg>
<status status="PASS" starttime="20201029 18:17:52.928" endtime="20201029 18:17:52.932"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:52.936" level="INFO">${ACCURACY} = {'diff': [5.161199999999949e-05, 5.138899999999891e-05, 5.147200000000032e-05, 5.158299999999741e-05, 5.15140000000025e-05, 5.1708000000001e-05, 5.173600000000014e-05, 5.181999999999756e-05, 5.2138999...</msg>
<status status="PASS" starttime="20201029 18:17:52.932" endtime="20201029 18:17:52.937"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:52.941" level="INFO">NAME: accuracy-TIMER_SLEEP-37-philip</msg>
<status status="PASS" starttime="20201029 18:17:52.940" endtime="20201029 18:17:52.941"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:52.943" level="INFO">VALUE: [5.161199999999949e-05, 5.138899999999891e-05, 5.147200000000032e-05, 5.158299999999741e-05, 5.15140000000025e-05, 5.1708000000001e-05, 5.173600000000014e-05, 5.181999999999756e-05, 5.213899999999966e-05, 5.198600000000039e-05, 5.163900000000263e-05, 5.233300000000163e-05, 5.208299999999791e-05, 5.229199999999892e-05, 5.174999999999971e-05, 5.213899999999966e-05, 5.207000000000128e-05, 5.13340000000001e-05, 5.227799999999935e-05, 5.218100000000184e-05, 5.213900000000313e-05, 5.213899999999966e-05, 5.1416000000002043e-05, 5.138899999999891e-05, 5.20279999999991e-05, 5.223600000000064e-05, 5.152800000000207e-05, 5.1943999999998214e-05, 5.148599999999989e-05, 5.218000000000236e-05, 5.159700000000045e-05, 5.162499999999959e-05, 5.177799999999885e-05, 5.193099999999812e-05, 5.226399999999978e-05, 5.218100000000184e-05, 5.191699999999855e-05, 5.170900000000048e-05, 5.140299999999848e-05, 5.157000000000078e-05, 5.177799999999885e-05, 5.168000000000186e-05, 5.1707999999997534e-05, 5.1943999999998214e-05, 5.156900000000131e-05, 5.2165999999999324e-05, 5.147200000000032e-05, 5.230499999999902e-05, 5.197200000000082e-05, 5.223600000000064e-05]</msg>
<status status="PASS" starttime="20201029 18:17:52.942" endtime="20201029 18:17:52.944"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:52.937" endtime="20201029 18:17:52.945"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:52.948" endtime="20201029 18:17:52.968"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:52.947" endtime="20201029 18:17:52.968"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:52.946" endtime="20201029 18:17:52.969"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:52.588" endtime="20201029 18:17:52.969"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:52.588" endtime="20201029 18:17:52.969"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:52.978" endtime="20201029 18:17:52.994"></status>
</kw>
<msg timestamp="20201029 18:17:52.995" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:52.976" endtime="20201029 18:17:52.995"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:52.997" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:52.996" endtime="20201029 18:17:52.997"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:52.998" endtime="20201029 18:17:53.000"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:52.974" endtime="20201029 18:17:53.000"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:52.972" endtime="20201029 18:17:53.001"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:53.007" endtime="20201029 18:17:53.295"></status>
</kw>
<msg timestamp="20201029 18:17:53.298" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019759389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019812764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:53.006" endtime="20201029 18:17:53.299"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:53.307" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019759389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019812764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:53.299" endtime="20201029 18:17:53.307"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:53.308" endtime="20201029 18:17:53.309"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:53.003" endtime="20201029 18:17:53.310"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:53.001" endtime="20201029 18:17:53.310"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:53.314" level="INFO">${RESULT} = [{'diff': 5.337500000000134e-05}, {'diff': 5.236100000000077e-05}, {'diff': 5.2402000000000004e-05}, {'diff': 5.329100000000045e-05}, {'diff': 5.330500000000002e-05}, {'diff': 5.28609999999978e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:17:53.311" endtime="20201029 18:17:53.315"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:53.319" level="INFO">${ACCURACY} = {'diff': [5.337500000000134e-05, 5.236100000000077e-05, 5.2402000000000004e-05, 5.329100000000045e-05, 5.330500000000002e-05, 5.28609999999978e-05, 5.331900000000306e-05, 5.262499999999712e-05, 5.2582...</msg>
<status status="PASS" starttime="20201029 18:17:53.315" endtime="20201029 18:17:53.319"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:53.323" level="INFO">NAME: accuracy-TIMER_SLEEP-38-philip</msg>
<status status="PASS" starttime="20201029 18:17:53.322" endtime="20201029 18:17:53.323"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:53.326" level="INFO">VALUE: [5.337500000000134e-05, 5.236100000000077e-05, 5.2402000000000004e-05, 5.329100000000045e-05, 5.330500000000002e-05, 5.28609999999978e-05, 5.331900000000306e-05, 5.262499999999712e-05, 5.258299999999841e-05, 5.248600000000089e-05, 5.277799999999985e-05, 5.294500000000216e-05, 5.3221999999998604e-05, 5.31669999999998e-05, 5.259800000000092e-05, 5.280599999999899e-05, 5.280600000000246e-05, 5.258300000000188e-05, 5.252700000000013e-05, 5.284699999999823e-05, 5.28609999999978e-05, 5.309699999999848e-05, 5.326400000000078e-05, 5.287500000000084e-05, 5.309700000000195e-05, 5.309699999999848e-05, 5.283299999999866e-05, 5.293099999999912e-05, 5.315299999999676e-05, 5.2457999999998284e-05, 5.240300000000295e-05, 5.244500000000166e-05, 5.26530000000032e-05, 5.237500000000034e-05, 5.334800000000167e-05, 5.28470000000017e-05, 5.230599999999849e-05, 5.304199999999967e-05, 5.3179999999999894e-05, 5.2388000000000434e-05, 5.3207999999999034e-05, 5.2735999999997674e-05, 5.263900000000016e-05, 5.241699999999905e-05, 5.300000000000096e-05, 5.233299999999816e-05, 5.283299999999866e-05, 5.236100000000077e-05, 5.2707999999998534e-05, 5.305599999999924e-05]</msg>
<status status="PASS" starttime="20201029 18:17:53.324" endtime="20201029 18:17:53.326"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:53.319" endtime="20201029 18:17:53.327"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:53.331" endtime="20201029 18:17:53.350"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:53.329" endtime="20201029 18:17:53.351"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:53.328" endtime="20201029 18:17:53.351"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:52.970" endtime="20201029 18:17:53.351"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:52.969" endtime="20201029 18:17:53.351"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:53.360" endtime="20201029 18:17:53.378"></status>
</kw>
<msg timestamp="20201029 18:17:53.379" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:53.358" endtime="20201029 18:17:53.379"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:53.381" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:53.380" endtime="20201029 18:17:53.382"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:53.383" endtime="20201029 18:17:53.384"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:53.356" endtime="20201029 18:17:53.385"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:53.354" endtime="20201029 18:17:53.385"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:53.392" endtime="20201029 18:17:53.678"></status>
</kw>
<msg timestamp="20201029 18:17:53.681" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021530889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021585153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:53.390" endtime="20201029 18:17:53.681"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:53.689" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021530889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021585153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:53.682" endtime="20201029 18:17:53.690"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:53.690" endtime="20201029 18:17:53.692"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:53.387" endtime="20201029 18:17:53.693"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:53.386" endtime="20201029 18:17:53.693"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:53.697" level="INFO">${RESULT} = [{'diff': 5.4263999999998314e-05}, {'diff': 5.41670000000008e-05}, {'diff': 5.33479999999982e-05}, {'diff': 5.4263999999998314e-05}, {'diff': 5.40549999999973e-05}, {'diff': 5.430500000000102e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:17:53.694" endtime="20201029 18:17:53.697"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:53.701" level="INFO">${ACCURACY} = {'diff': [5.4263999999998314e-05, 5.41670000000008e-05, 5.33479999999982e-05, 5.4263999999998314e-05, 5.40549999999973e-05, 5.430500000000102e-05, 5.394499999999969e-05, 5.351299999999809e-05, 5.41379...</msg>
<status status="PASS" starttime="20201029 18:17:53.698" endtime="20201029 18:17:53.702"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:53.706" level="INFO">NAME: accuracy-TIMER_SLEEP-39-philip</msg>
<status status="PASS" starttime="20201029 18:17:53.705" endtime="20201029 18:17:53.706"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:53.708" level="INFO">VALUE: [5.4263999999998314e-05, 5.41670000000008e-05, 5.33479999999982e-05, 5.4263999999998314e-05, 5.40549999999973e-05, 5.430500000000102e-05, 5.394499999999969e-05, 5.351299999999809e-05, 5.4137999999998715e-05, 5.406900000000034e-05, 5.433299999999669e-05, 5.401400000000153e-05, 5.3971999999999354e-05, 5.411099999999905e-05, 5.3471999999998854e-05, 5.337500000000134e-05, 5.3457999999999284e-05, 5.3457999999999284e-05, 5.369499999999944e-05, 5.3999999999998494e-05, 5.381999999999956e-05, 5.393100000000012e-05, 5.338900000000091e-05, 5.4208000000000034e-05, 5.393100000000012e-05, 5.411099999999905e-05, 5.3749999999998244e-05, 5.3416000000000574e-05, 5.348600000000189e-05, 5.398600000000239e-05, 5.3457999999999284e-05, 5.38609999999988e-05, 5.376400000000128e-05, 5.390300000000098e-05, 5.388900000000141e-05, 5.40280000000011e-05, 5.394499999999969e-05, 5.3901999999998035e-05, 5.425000000000221e-05, 5.368099999999987e-05, 5.430600000000049e-05, 5.397299999999883e-05, 5.40280000000011e-05, 5.412500000000209e-05, 5.3443999999999714e-05, 5.3957999999999784e-05, 5.354099999999723e-05, 5.333299999999916e-05, 5.383299999999966e-05, 5.358299999999941e-05]</msg>
<status status="PASS" starttime="20201029 18:17:53.707" endtime="20201029 18:17:53.710"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:53.702" endtime="20201029 18:17:53.710"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:53.714" endtime="20201029 18:17:53.734"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:53.713" endtime="20201029 18:17:53.734"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:53.711" endtime="20201029 18:17:53.735"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:53.352" endtime="20201029 18:17:53.735"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:53.352" endtime="20201029 18:17:53.735"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:53.744" endtime="20201029 18:17:53.760"></status>
</kw>
<msg timestamp="20201029 18:17:53.760" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:53.742" endtime="20201029 18:17:53.760"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:53.763" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:53.761" endtime="20201029 18:17:53.763"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:53.764" endtime="20201029 18:17:53.765"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:53.739" endtime="20201029 18:17:53.766"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:53.737" endtime="20201029 18:17:53.766"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:53.773" endtime="20201029 18:17:54.058"></status>
</kw>
<msg timestamp="20201029 18:17:54.061" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020046903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020101403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:53.771" endtime="20201029 18:17:54.061"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:54.069" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020046903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020101403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:54.062" endtime="20201029 18:17:54.070"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:54.070" endtime="20201029 18:17:54.072"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:53.769" endtime="20201029 18:17:54.073"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:53.767" endtime="20201029 18:17:54.073"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:54.077" level="INFO">${RESULT} = [{'diff': 5.4499999999998994e-05}, {'diff': 5.495900000000026e-05}, {'diff': 5.490300000000198e-05}, {'diff': 5.461099999999955e-05}, {'diff': 5.461099999999955e-05}, {'diff': 5.445899999999976e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:17:54.074" endtime="20201029 18:17:54.077"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:54.082" level="INFO">${ACCURACY} = {'diff': [5.4499999999998994e-05, 5.495900000000026e-05, 5.490300000000198e-05, 5.461099999999955e-05, 5.461099999999955e-05, 5.445899999999976e-05, 5.5194000000001464e-05, 5.475000000000271e-05, 5.52...</msg>
<status status="PASS" starttime="20201029 18:17:54.078" endtime="20201029 18:17:54.082"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:54.087" level="INFO">NAME: accuracy-TIMER_SLEEP-40-philip</msg>
<status status="PASS" starttime="20201029 18:17:54.086" endtime="20201029 18:17:54.087"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:54.089" level="INFO">VALUE: [5.4499999999998994e-05, 5.495900000000026e-05, 5.490300000000198e-05, 5.461099999999955e-05, 5.461099999999955e-05, 5.445899999999976e-05, 5.5194000000001464e-05, 5.475000000000271e-05, 5.5221999999997134e-05, 5.534700000000073e-05, 5.509699999999701e-05, 5.4457999999996815e-05, 5.48479999999997e-05, 5.508299999999744e-05, 5.465300000000173e-05, 5.4749999999999244e-05, 5.5291999999998453e-05, 5.456899999999737e-05, 5.437500000000234e-05, 5.490300000000198e-05, 5.520900000000051e-05, 5.50280000000021e-05, 5.498700000000287e-05, 5.445900000000323e-05, 5.523699999999965e-05, 5.501299999999959e-05, 5.4749999999999244e-05, 5.506899999999787e-05, 5.437500000000234e-05, 5.5179999999998425e-05, 5.5291999999998453e-05, 5.4527999999998134e-05, 5.4985999999999924e-05, 5.4777999999998384e-05, 5.531900000000159e-05, 5.4749999999999244e-05, 5.5235999999996704e-05, 5.507000000000081e-05, 5.491700000000155e-05, 5.438899999999844e-05, 5.520900000000051e-05, 5.465299999999826e-05, 5.468100000000087e-05, 5.5194000000001464e-05, 5.462499999999912e-05, 5.4985999999999924e-05, 5.438900000000191e-05, 5.4694000000000964e-05, 5.436100000000277e-05, 5.5277999999998884e-05]</msg>
<status status="PASS" starttime="20201029 18:17:54.088" endtime="20201029 18:17:54.090"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:54.083" endtime="20201029 18:17:54.090"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:54.094" endtime="20201029 18:17:54.114"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:54.093" endtime="20201029 18:17:54.114"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:54.092" endtime="20201029 18:17:54.115"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:53.736" endtime="20201029 18:17:54.115"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:53.735" endtime="20201029 18:17:54.115"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:54.124" endtime="20201029 18:17:54.140"></status>
</kw>
<msg timestamp="20201029 18:17:54.141" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:54.122" endtime="20201029 18:17:54.141"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:54.143" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:54.142" endtime="20201029 18:17:54.144"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:54.145" endtime="20201029 18:17:54.146"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:54.119" endtime="20201029 18:17:54.147"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:54.117" endtime="20201029 18:17:54.147"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:54.154" endtime="20201029 18:17:54.440"></status>
</kw>
<msg timestamp="20201029 18:17:54.444" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020445875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020501917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:54.152" endtime="20201029 18:17:54.444"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:54.452" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020445875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020501917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:54.445" endtime="20201029 18:17:54.452"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:54.453" endtime="20201029 18:17:54.455"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:54.149" endtime="20201029 18:17:54.455"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:54.148" endtime="20201029 18:17:54.456"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:54.459" level="INFO">${RESULT} = [{'diff': 5.604200000000267e-05}, {'diff': 5.6014000000000064e-05}, {'diff': 5.6000000000000494e-05}, {'diff': 5.5651999999999785e-05}, {'diff': 5.53610000000003e-05}, {'diff': 5.5458000000001284e-05}...</msg>
<status status="PASS" starttime="20201029 18:17:54.456" endtime="20201029 18:17:54.460"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:54.464" level="INFO">${ACCURACY} = {'diff': [5.604200000000267e-05, 5.6014000000000064e-05, 5.6000000000000494e-05, 5.5651999999999785e-05, 5.53610000000003e-05, 5.5458000000001284e-05, 5.5722000000001104e-05, 5.612499999999715e-05, 5....</msg>
<status status="PASS" starttime="20201029 18:17:54.460" endtime="20201029 18:17:54.464"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:54.468" level="INFO">NAME: accuracy-TIMER_SLEEP-41-philip</msg>
<status status="PASS" starttime="20201029 18:17:54.467" endtime="20201029 18:17:54.469"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:54.471" level="INFO">VALUE: [5.604200000000267e-05, 5.6014000000000064e-05, 5.6000000000000494e-05, 5.5651999999999785e-05, 5.53610000000003e-05, 5.5458000000001284e-05, 5.5722000000001104e-05, 5.612499999999715e-05, 5.561100000000055e-05, 5.5985999999997454e-05, 5.591699999999908e-05, 5.5458000000001284e-05, 5.609699999999801e-05, 5.6000000000000494e-05, 5.611099999999758e-05, 5.5458000000001284e-05, 5.612499999999715e-05, 5.5527999999999134e-05, 5.587500000000037e-05, 5.538899999999944e-05, 5.540299999999901e-05, 5.558400000000088e-05, 5.5651999999999785e-05, 5.5652000000003254e-05, 5.53610000000003e-05, 5.5665999999999355e-05, 5.633299999999869e-05, 5.5763999999999814e-05, 5.591699999999908e-05, 5.5763999999999814e-05, 5.6291999999999454e-05, 5.6027999999999634e-05, 5.6000000000000494e-05, 5.583299999999819e-05, 5.55280000000026e-05, 5.579200000000242e-05, 5.5805999999998523e-05, 5.541699999999858e-05, 5.559700000000098e-05, 5.580499999999905e-05, 5.5415999999999105e-05, 5.5679999999998925e-05, 5.6277999999999884e-05, 5.630499999999955e-05, 5.633300000000216e-05, 5.6165999999999855e-05, 5.5458000000001284e-05, 5.588900000000341e-05, 5.579200000000242e-05, 5.58749999999969e-05]</msg>
<status status="PASS" starttime="20201029 18:17:54.469" endtime="20201029 18:17:54.472"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:54.465" endtime="20201029 18:17:54.472"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:54.476" endtime="20201029 18:17:54.495"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:54.474" endtime="20201029 18:17:54.496"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:54.473" endtime="20201029 18:17:54.496"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:54.116" endtime="20201029 18:17:54.496"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:54.115" endtime="20201029 18:17:54.497"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:54.505" endtime="20201029 18:17:54.524"></status>
</kw>
<msg timestamp="20201029 18:17:54.524" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:54.504" endtime="20201029 18:17:54.524"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:54.527" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:54.525" endtime="20201029 18:17:54.527"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:54.528" endtime="20201029 18:17:54.529"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:54.501" endtime="20201029 18:17:54.530"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:54.499" endtime="20201029 18:17:54.530"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:54.537" endtime="20201029 18:17:54.823"></status>
</kw>
<msg timestamp="20201029 18:17:54.826" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020631014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020687472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:54.535" endtime="20201029 18:17:54.826"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:54.834" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020631014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020687472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:54.827" endtime="20201029 18:17:54.835"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:54.836" endtime="20201029 18:17:54.837"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:54.533" endtime="20201029 18:17:54.838"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:54.531" endtime="20201029 18:17:54.838"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:54.842" level="INFO">${RESULT} = [{'diff': 5.6457999999998815e-05}, {'diff': 5.641699999999958e-05}, {'diff': 5.656899999999937e-05}, {'diff': 5.711099999999858e-05}, {'diff': 5.68749999999979e-05}, {'diff': 5.7333999999999163e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:17:54.839" endtime="20201029 18:17:54.843"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:54.847" level="INFO">${ACCURACY} = {'diff': [5.6457999999998815e-05, 5.641699999999958e-05, 5.656899999999937e-05, 5.711099999999858e-05, 5.68749999999979e-05, 5.7333999999999163e-05, 5.684700000000223e-05, 5.7014000000001064e-05, 5.71...</msg>
<status status="PASS" starttime="20201029 18:17:54.843" endtime="20201029 18:17:54.847"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:54.851" level="INFO">NAME: accuracy-TIMER_SLEEP-42-philip</msg>
<status status="PASS" starttime="20201029 18:17:54.850" endtime="20201029 18:17:54.851"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:54.854" level="INFO">VALUE: [5.6457999999998815e-05, 5.641699999999958e-05, 5.656899999999937e-05, 5.711099999999858e-05, 5.68749999999979e-05, 5.7333999999999163e-05, 5.684700000000223e-05, 5.7014000000001064e-05, 5.713900000000119e-05, 5.662500000000112e-05, 5.7028000000000634e-05, 5.6764000000000814e-05, 5.636099999999783e-05, 5.6901999999997566e-05, 5.7152000000001285e-05, 5.680500000000005e-05, 5.7014000000001064e-05, 5.6541999999999704e-05, 5.681900000000309e-05, 5.716700000000033e-05, 5.6986000000001924e-05, 5.7306000000000024e-05, 5.6986000000001924e-05, 5.7250000000001744e-05, 5.68610000000018e-05, 5.6749999999997774e-05, 5.687500000000137e-05, 5.6528000000000134e-05, 5.637500000000087e-05, 5.684699999999876e-05, 5.6637999999997746e-05, 5.712499999999815e-05, 5.6679999999999925e-05, 5.7249999999998274e-05, 5.6735999999998205e-05, 5.712500000000162e-05, 5.6943999999999745e-05, 5.6971999999998885e-05, 5.6471999999998385e-05, 5.716700000000033e-05, 5.658299999999894e-05, 5.6514000000000564e-05, 5.7042000000000204e-05, 5.7292000000000454e-05, 5.7221999999999135e-05, 5.691700000000008e-05, 5.6514000000000564e-05, 5.719499999999947e-05, 5.6805999999999524e-05, 5.7249999999998274e-05]</msg>
<status status="PASS" starttime="20201029 18:17:54.852" endtime="20201029 18:17:54.855"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:54.847" endtime="20201029 18:17:54.856"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:54.859" endtime="20201029 18:17:54.879"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:54.858" endtime="20201029 18:17:54.879"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:54.857" endtime="20201029 18:17:54.880"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:54.497" endtime="20201029 18:17:54.880"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:54.497" endtime="20201029 18:17:54.880"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:54.889" endtime="20201029 18:17:54.906"></status>
</kw>
<msg timestamp="20201029 18:17:54.906" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:54.887" endtime="20201029 18:17:54.906"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:54.909" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:54.907" endtime="20201029 18:17:54.909"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:54.910" endtime="20201029 18:17:54.912"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:54.885" endtime="20201029 18:17:54.912"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:54.883" endtime="20201029 18:17:54.912"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:54.919" endtime="20201029 18:17:55.205"></status>
</kw>
<msg timestamp="20201029 18:17:55.208" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020235931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020293972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:54.917" endtime="20201029 18:17:55.209"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:55.216" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020235931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020293972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:55.209" endtime="20201029 18:17:55.217"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:55.218" endtime="20201029 18:17:55.219"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:54.915" endtime="20201029 18:17:55.220"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:54.913" endtime="20201029 18:17:55.220"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:55.224" level="INFO">${RESULT} = [{'diff': 5.804100000000173e-05}, {'diff': 5.73610000000023e-05}, {'diff': 5.812500000000262e-05}, {'diff': 5.8222000000000135e-05}, {'diff': 5.763899999999822e-05}, {'diff': 5.8208000000000565e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:17:55.221" endtime="20201029 18:17:55.225"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:55.229" level="INFO">${ACCURACY} = {'diff': [5.804100000000173e-05, 5.73610000000023e-05, 5.812500000000262e-05, 5.8222000000000135e-05, 5.763899999999822e-05, 5.8208000000000565e-05, 5.740299999999754e-05, 5.758400000000288e-05, 5.768...</msg>
<status status="PASS" starttime="20201029 18:17:55.225" endtime="20201029 18:17:55.230"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:55.234" level="INFO">NAME: accuracy-TIMER_SLEEP-43-philip</msg>
<status status="PASS" starttime="20201029 18:17:55.233" endtime="20201029 18:17:55.234"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:55.236" level="INFO">VALUE: [5.804100000000173e-05, 5.73610000000023e-05, 5.812500000000262e-05, 5.8222000000000135e-05, 5.763899999999822e-05, 5.8208000000000565e-05, 5.740299999999754e-05, 5.758400000000288e-05, 5.76810000000004e-05, 5.786099999999933e-05, 5.7430000000000675e-05, 5.8249999999999275e-05, 5.738899999999797e-05, 5.8070000000000344e-05, 5.779100000000148e-05, 5.8179999999997956e-05, 5.813899999999872e-05, 5.80689999999974e-05, 5.830500000000155e-05, 5.791700000000108e-05, 5.8042000000001204e-05, 5.7750000000002244e-05, 5.783300000000019e-05, 5.762499999999865e-05, 5.7820000000000094e-05, 5.813899999999872e-05, 5.816700000000133e-05, 5.736099999999883e-05, 5.820900000000004e-05, 5.734799999999873e-05, 5.7820000000000094e-05, 5.7958000000000315e-05, 5.808300000000044e-05, 5.759699999999951e-05, 5.7750000000002244e-05, 5.830499999999808e-05, 5.812499999999915e-05, 5.7528000000001134e-05, 5.8264000000002314e-05, 5.813900000000219e-05, 5.794500000000022e-05, 5.8042000000001204e-05, 5.7416000000001105e-05, 5.8235999999999705e-05, 5.794500000000022e-05, 5.8083999999999913e-05, 5.7541999999997234e-05, 5.736200000000177e-05, 5.790300000000151e-05, 5.808300000000044e-05]</msg>
<status status="PASS" starttime="20201029 18:17:55.235" endtime="20201029 18:17:55.241"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:55.230" endtime="20201029 18:17:55.242"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:55.245" endtime="20201029 18:17:55.265"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:55.244" endtime="20201029 18:17:55.265"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:55.243" endtime="20201029 18:17:55.266"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:54.881" endtime="20201029 18:17:55.266"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:54.880" endtime="20201029 18:17:55.266"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:55.275" endtime="20201029 18:17:55.292"></status>
</kw>
<msg timestamp="20201029 18:17:55.292" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:55.274" endtime="20201029 18:17:55.293"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:55.295" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:55.293" endtime="20201029 18:17:55.295"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:55.296" endtime="20201029 18:17:55.298"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:55.271" endtime="20201029 18:17:55.298"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:55.269" endtime="20201029 18:17:55.299"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:55.305" endtime="20201029 18:17:55.592"></status>
</kw>
<msg timestamp="20201029 18:17:55.595" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019865639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019924014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:55.304" endtime="20201029 18:17:55.595"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:55.603" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019865639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019924014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:55.596" endtime="20201029 18:17:55.604"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:55.604" endtime="20201029 18:17:55.606"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:55.301" endtime="20201029 18:17:55.607"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:55.299" endtime="20201029 18:17:55.607"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:55.611" level="INFO">${RESULT} = [{'diff': 5.83749999999994e-05}, {'diff': 5.9236000000000705e-05}, {'diff': 5.858299999999747e-05}, {'diff': 5.8972000000000885e-05}, {'diff': 5.908299999999797e-05}, {'diff': 5.8792000000001954e-05},...</msg>
<status status="PASS" starttime="20201029 18:17:55.608" endtime="20201029 18:17:55.611"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:55.615" level="INFO">${ACCURACY} = {'diff': [5.83749999999994e-05, 5.9236000000000705e-05, 5.858299999999747e-05, 5.8972000000000885e-05, 5.908299999999797e-05, 5.8792000000001954e-05, 5.9236000000000705e-05, 5.836099999999983e-05, 5.8...</msg>
<status status="PASS" starttime="20201029 18:17:55.612" endtime="20201029 18:17:55.615"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:55.620" level="INFO">NAME: accuracy-TIMER_SLEEP-44-philip</msg>
<status status="PASS" starttime="20201029 18:17:55.619" endtime="20201029 18:17:55.620"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:55.622" level="INFO">VALUE: [5.83749999999994e-05, 5.9236000000000705e-05, 5.858299999999747e-05, 5.8972000000000885e-05, 5.908299999999797e-05, 5.8792000000001954e-05, 5.9236000000000705e-05, 5.836099999999983e-05, 5.843100000000115e-05, 5.8347999999999733e-05, 5.9319999999998124e-05, 5.856900000000137e-05, 5.8401999999999066e-05, 5.856900000000137e-05, 5.931899999999865e-05, 5.861100000000008e-05, 5.88749999999999e-05, 5.909700000000101e-05, 5.915300000000276e-05, 5.8556000000001274e-05, 5.9055999999998304e-05, 5.9055999999998304e-05, 5.8472000000000385e-05, 5.915299999999929e-05, 5.915299999999929e-05, 5.8722000000000635e-05, 5.838900000000244e-05, 5.866699999999836e-05, 5.883300000000119e-05, 5.9000000000000025e-05, 5.881900000000162e-05, 5.8416000000002105e-05, 5.861100000000008e-05, 5.884700000000076e-05, 5.886100000000033e-05, 5.8749999999999775e-05, 5.836099999999983e-05, 5.8513999999999095e-05, 5.8457999999997345e-05, 5.919500000000147e-05, 5.8514000000002564e-05, 5.9098000000000483e-05, 5.881900000000162e-05, 5.920900000000104e-05, 5.9305999999998554e-05, 5.9151999999999816e-05, 5.8444000000001245e-05, 5.852699999999919e-05, 5.90689999999984e-05, 5.890299999999904e-05]</msg>
<status status="PASS" starttime="20201029 18:17:55.621" endtime="20201029 18:17:55.623"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:55.616" endtime="20201029 18:17:55.624"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:55.627" endtime="20201029 18:17:55.647"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:55.626" endtime="20201029 18:17:55.647"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:55.625" endtime="20201029 18:17:55.648"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:55.267" endtime="20201029 18:17:55.648"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:55.267" endtime="20201029 18:17:55.648"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:55.657" endtime="20201029 18:17:55.676"></status>
</kw>
<msg timestamp="20201029 18:17:55.677" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:55.655" endtime="20201029 18:17:55.677"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:55.679" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:55.678" endtime="20201029 18:17:55.680"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:55.680" endtime="20201029 18:17:55.682"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:55.653" endtime="20201029 18:17:55.683"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:55.650" endtime="20201029 18:17:55.683"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:55.689" endtime="20201029 18:17:55.975"></status>
</kw>
<msg timestamp="20201029 18:17:55.978" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022848, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022908333, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:17:55.688" endtime="20201029 18:17:55.978"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:55.986" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022848, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022908333, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:17:55.979" endtime="20201029 18:17:55.987"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:55.988" endtime="20201029 18:17:55.989"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:55.685" endtime="20201029 18:17:55.990"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:55.684" endtime="20201029 18:17:55.990"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:55.994" level="INFO">${RESULT} = [{'diff': 6.033299999999922e-05}, {'diff': 5.938899999999997e-05}, {'diff': 6.009699999999854e-05}, {'diff': 5.9472000000001385e-05}, {'diff': 5.934699999999779e-05}, {'diff': 5.988900000000047e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:17:55.991" endtime="20201029 18:17:55.994"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:55.998" level="INFO">${ACCURACY} = {'diff': [6.033299999999922e-05, 5.938899999999997e-05, 6.009699999999854e-05, 5.9472000000001385e-05, 5.934699999999779e-05, 5.988900000000047e-05, 5.9721999999998165e-05, 5.9555999999998804e-05, 5.9...</msg>
<status status="PASS" starttime="20201029 18:17:55.995" endtime="20201029 18:17:55.999"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:56.003" level="INFO">NAME: accuracy-TIMER_SLEEP-45-philip</msg>
<status status="PASS" starttime="20201029 18:17:56.002" endtime="20201029 18:17:56.003"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:56.006" level="INFO">VALUE: [6.033299999999922e-05, 5.938899999999997e-05, 6.009699999999854e-05, 5.9472000000001385e-05, 5.934699999999779e-05, 5.988900000000047e-05, 5.9721999999998165e-05, 5.9555999999998804e-05, 5.993099999999918e-05, 6.0041999999999734e-05, 6.011100000000158e-05, 5.9500000000000525e-05, 5.936100000000083e-05, 5.947299999999739e-05, 5.988900000000047e-05, 6.015300000000029e-05, 6.005499999999983e-05, 5.9415999999999636e-05, 6.03889999999975e-05, 5.963900000000022e-05, 6.0319999999999124e-05, 5.95550000000028e-05, 5.958299999999847e-05, 5.959699999999804e-05, 5.9527999999999665e-05, 6.009699999999854e-05, 5.991699999999961e-05, 5.945899999999782e-05, 5.9721999999998165e-05, 5.9916000000000136e-05, 5.9986000000001455e-05, 5.9819999999998624e-05, 5.9583999999997944e-05, 5.936100000000083e-05, 5.9652000000000316e-05, 6.0179999999999956e-05, 5.9693999999999026e-05, 6.0235999999998235e-05, 5.966699999999936e-05, 6.00689999999994e-05, 5.9999999999997555e-05, 5.9820000000002094e-05, 6.0055999999999304e-05, 6.015300000000029e-05, 5.9527999999999665e-05, 5.9499999999997055e-05, 5.970899999999807e-05, 6.0278000000000415e-05, 5.9665999999999886e-05, 5.948699999999696e-05]</msg>
<status status="PASS" starttime="20201029 18:17:56.004" endtime="20201029 18:17:56.007"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:55.999" endtime="20201029 18:17:56.008"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:56.011" endtime="20201029 18:17:56.031"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:56.010" endtime="20201029 18:17:56.032"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:56.009" endtime="20201029 18:17:56.032"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:55.649" endtime="20201029 18:17:56.032"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:55.648" endtime="20201029 18:17:56.032"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:56.041" endtime="20201029 18:17:56.057"></status>
</kw>
<msg timestamp="20201029 18:17:56.058" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:56.039" endtime="20201029 18:17:56.058"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:56.060" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:56.059" endtime="20201029 18:17:56.061"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:56.061" endtime="20201029 18:17:56.063"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:56.037" endtime="20201029 18:17:56.064"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:56.035" endtime="20201029 18:17:56.064"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:56.070" endtime="20201029 18:17:56.356"></status>
</kw>
<msg timestamp="20201029 18:17:56.359" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01991025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019970889, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:17:56.069" endtime="20201029 18:17:56.359"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:56.367" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01991025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019970889, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:17:56.360" endtime="20201029 18:17:56.368"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:56.368" endtime="20201029 18:17:56.370"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:56.066" endtime="20201029 18:17:56.370"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:56.065" endtime="20201029 18:17:56.371"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:56.375" level="INFO">${RESULT} = [{'diff': 6.063899999999775e-05}, {'diff': 6.090300000000104e-05}, {'diff': 6.116700000000086e-05}, {'diff': 6.127700000000194e-05}, {'diff': 6.037499999999793e-05}, {'diff': 6.088900000000147e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:17:56.372" endtime="20201029 18:17:56.375"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:56.380" level="INFO">${ACCURACY} = {'diff': [6.063899999999775e-05, 6.090300000000104e-05, 6.116700000000086e-05, 6.127700000000194e-05, 6.037499999999793e-05, 6.088900000000147e-05, 6.086099999999886e-05, 6.0499999999998055e-05, 6.105...</msg>
<status status="PASS" starttime="20201029 18:17:56.376" endtime="20201029 18:17:56.380"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:56.384" level="INFO">NAME: accuracy-TIMER_SLEEP-46-philip</msg>
<status status="PASS" starttime="20201029 18:17:56.383" endtime="20201029 18:17:56.385"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:56.387" level="INFO">VALUE: [6.063899999999775e-05, 6.090300000000104e-05, 6.116700000000086e-05, 6.127700000000194e-05, 6.037499999999793e-05, 6.088900000000147e-05, 6.086099999999886e-05, 6.0499999999998055e-05, 6.105499999999736e-05, 6.0915999999997666e-05, 6.038900000000097e-05, 6.030500000000008e-05, 6.118000000000096e-05, 6.1000000000002025e-05, 6.0499999999998055e-05, 6.0971999999999416e-05, 6.122199999999967e-05, 6.0542000000000235e-05, 6.118100000000043e-05, 6.116700000000086e-05, 6.0500000000001525e-05, 6.0485999999998485e-05, 6.116699999999739e-05, 6.063900000000122e-05, 6.061099999999861e-05, 6.104100000000126e-05, 6.0986000000002455e-05, 6.0694000000000026e-05, 6.108299999999997e-05, 6.0999999999998555e-05, 6.0513999999997625e-05, 6.08750000000019e-05, 6.0957999999999846e-05, 6.0527999999997195e-05, 6.041700000000011e-05, 6.0583999999998944e-05, 6.134700000000326e-05, 6.091700000000061e-05, 6.111200000000205e-05, 6.045899999999882e-05, 6.0749999999998305e-05, 6.083299999999972e-05, 6.1014000000001595e-05, 6.0514000000001095e-05, 6.12360000000027e-05, 6.044500000000272e-05, 6.0778000000000915e-05, 6.116700000000086e-05, 6.036100000000183e-05, 6.036099999999836e-05]</msg>
<status status="PASS" starttime="20201029 18:17:56.386" endtime="20201029 18:17:56.388"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:56.381" endtime="20201029 18:17:56.388"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:56.392" endtime="20201029 18:17:56.411"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:56.390" endtime="20201029 18:17:56.412"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:56.389" endtime="20201029 18:17:56.412"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:56.033" endtime="20201029 18:17:56.413"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:56.033" endtime="20201029 18:17:56.413"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:56.421" endtime="20201029 18:17:56.438"></status>
</kw>
<msg timestamp="20201029 18:17:56.439" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:56.420" endtime="20201029 18:17:56.439"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:56.441" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:56.440" endtime="20201029 18:17:56.442"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:56.442" endtime="20201029 18:17:56.444"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:56.417" endtime="20201029 18:17:56.444"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:56.415" endtime="20201029 18:17:56.445"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:56.451" endtime="20201029 18:17:56.739"></status>
</kw>
<msg timestamp="20201029 18:17:56.743" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020374958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020437208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:56.450" endtime="20201029 18:17:56.743"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:56.751" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020374958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020437208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:56.744" endtime="20201029 18:17:56.751"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:56.752" endtime="20201029 18:17:56.754"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:56.447" endtime="20201029 18:17:56.754"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:56.446" endtime="20201029 18:17:56.755"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:56.759" level="INFO">${RESULT} = [{'diff': 6.22499999999998e-05}, {'diff': 6.17499999999993e-05}, {'diff': 6.227800000000241e-05}, {'diff': 6.177799999999845e-05}, {'diff': 6.166700000000136e-05}, {'diff': 6.168100000000093e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 18:17:56.755" endtime="20201029 18:17:56.759"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:56.763" level="INFO">${ACCURACY} = {'diff': [6.22499999999998e-05, 6.17499999999993e-05, 6.227800000000241e-05, 6.177799999999845e-05, 6.166700000000136e-05, 6.168100000000093e-05, 6.161099999999961e-05, 6.15140000000021e-05, 6.1860999...</msg>
<status status="PASS" starttime="20201029 18:17:56.760" endtime="20201029 18:17:56.763"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:56.768" level="INFO">NAME: accuracy-TIMER_SLEEP-47-philip</msg>
<status status="PASS" starttime="20201029 18:17:56.767" endtime="20201029 18:17:56.768"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:56.771" level="INFO">VALUE: [6.22499999999998e-05, 6.17499999999993e-05, 6.227800000000241e-05, 6.177799999999845e-05, 6.166700000000136e-05, 6.168100000000093e-05, 6.161099999999961e-05, 6.15140000000021e-05, 6.186099999999986e-05, 6.23340000000007e-05, 6.172299999999964e-05, 6.184799999999976e-05, 6.187499999999943e-05, 6.211199999999958e-05, 6.163799999999928e-05, 6.179099999999854e-05, 6.186099999999986e-05, 6.144400000000078e-05, 6.230499999999861e-05, 6.197200000000042e-05, 6.181900000000115e-05, 6.168000000000146e-05, 6.191699999999814e-05, 6.147199999999992e-05, 6.168100000000093e-05, 6.175000000000277e-05, 6.220900000000057e-05, 6.23340000000007e-05, 6.234700000000079e-05, 6.176400000000234e-05, 6.1888999999999e-05, 6.190299999999857e-05, 6.229099999999904e-05, 6.22499999999998e-05, 6.195799999999738e-05, 6.222200000000067e-05, 6.198699999999946e-05, 6.159700000000004e-05, 6.181999999999716e-05, 6.208300000000097e-05, 6.147199999999992e-05, 6.22080000000011e-05, 6.165300000000179e-05, 6.191699999999814e-05, 6.194499999999728e-05, 6.151399999999863e-05, 6.231899999999818e-05, 6.152699999999872e-05, 6.227700000000294e-05, 6.133300000000022e-05]</msg>
<status status="PASS" starttime="20201029 18:17:56.769" endtime="20201029 18:17:56.772"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:56.764" endtime="20201029 18:17:56.772"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:56.776" endtime="20201029 18:17:56.796"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:56.775" endtime="20201029 18:17:56.796"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:56.773" endtime="20201029 18:17:56.797"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:56.414" endtime="20201029 18:17:56.797"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:56.413" endtime="20201029 18:17:56.797"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:56.806" endtime="20201029 18:17:56.824"></status>
</kw>
<msg timestamp="20201029 18:17:56.824" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:56.804" endtime="20201029 18:17:56.825"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:56.827" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:56.825" endtime="20201029 18:17:56.827"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:56.828" endtime="20201029 18:17:56.829"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:56.802" endtime="20201029 18:17:56.830"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:56.799" endtime="20201029 18:17:56.830"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:56.837" endtime="20201029 18:17:57.123"></status>
</kw>
<msg timestamp="20201029 18:17:57.126" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020738417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020801347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:56.835" endtime="20201029 18:17:57.126"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:57.134" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020738417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020801347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:57.127" endtime="20201029 18:17:57.134"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:57.135" endtime="20201029 18:17:57.137"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:56.833" endtime="20201029 18:17:57.137"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:56.831" endtime="20201029 18:17:57.138"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:57.142" level="INFO">${RESULT} = [{'diff': 6.29300000000027e-05}, {'diff': 6.276400000000334e-05}, {'diff': 6.287500000000043e-05}, {'diff': 6.287500000000043e-05}, {'diff': 6.329100000000004e-05}, {'diff': 6.326400000000038e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:17:57.138" endtime="20201029 18:17:57.142"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:57.146" level="INFO">${ACCURACY} = {'diff': [6.29300000000027e-05, 6.276400000000334e-05, 6.287500000000043e-05, 6.287500000000043e-05, 6.329100000000004e-05, 6.326400000000038e-05, 6.27500000000003e-05, 6.276399999999988e-05, 6.290299...</msg>
<status status="PASS" starttime="20201029 18:17:57.143" endtime="20201029 18:17:57.146"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:57.150" level="INFO">NAME: accuracy-TIMER_SLEEP-48-philip</msg>
<status status="PASS" starttime="20201029 18:17:57.149" endtime="20201029 18:17:57.151"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:57.153" level="INFO">VALUE: [6.29300000000027e-05, 6.276400000000334e-05, 6.287500000000043e-05, 6.287500000000043e-05, 6.329100000000004e-05, 6.326400000000038e-05, 6.27500000000003e-05, 6.276399999999988e-05, 6.290299999999957e-05, 6.250000000000006e-05, 6.287500000000043e-05, 6.282000000000162e-05, 6.269499999999803e-05, 6.329100000000004e-05, 6.232000000000112e-05, 6.298599999999752e-05, 6.313900000000025e-05, 6.2889e-05, 6.306899999999893e-05, 6.25279999999992e-05, 6.277800000000291e-05, 6.233299999999775e-05, 6.256899999999843e-05, 6.258300000000147e-05, 6.247200000000092e-05, 6.301400000000013e-05, 6.291699999999914e-05, 6.283300000000172e-05, 6.262500000000018e-05, 6.279199999999902e-05, 6.298599999999752e-05, 6.293099999999871e-05, 6.266599999999942e-05, 6.316699999999939e-05, 6.331999999999866e-05, 6.251399999999963e-05, 6.326400000000038e-05, 6.305499999999936e-05, 6.32080000000021e-05, 6.311100000000111e-05, 6.295800000000185e-05, 6.247200000000092e-05, 6.24439999999983e-05, 6.327799999999995e-05, 6.311100000000111e-05, 6.287500000000043e-05, 6.2889e-05, 6.236100000000036e-05, 6.333399999999823e-05, 6.265299999999932e-05]</msg>
<status status="PASS" starttime="20201029 18:17:57.151" endtime="20201029 18:17:57.154"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:57.147" endtime="20201029 18:17:57.155"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:57.159" endtime="20201029 18:17:57.178"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:57.157" endtime="20201029 18:17:57.179"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:57.156" endtime="20201029 18:17:57.179"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:56.798" endtime="20201029 18:17:57.179"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:56.797" endtime="20201029 18:17:57.179"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:57.188" endtime="20201029 18:17:57.205"></status>
</kw>
<msg timestamp="20201029 18:17:57.205" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:57.187" endtime="20201029 18:17:57.206"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:57.208" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:57.206" endtime="20201029 18:17:57.208"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:57.209" endtime="20201029 18:17:57.210"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:57.184" endtime="20201029 18:17:57.211"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:57.182" endtime="20201029 18:17:57.212"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:57.218" endtime="20201029 18:17:57.504"></status>
</kw>
<msg timestamp="20201029 18:17:57.507" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019834958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019899028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:57.216" endtime="20201029 18:17:57.507"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:57.515" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019834958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019899028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:57.508" endtime="20201029 18:17:57.515"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:57.516" endtime="20201029 18:17:57.518"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:57.214" endtime="20201029 18:17:57.518"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:57.212" endtime="20201029 18:17:57.519"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:57.523" level="INFO">${RESULT} = [{'diff': 6.40699999999994e-05}, {'diff': 6.386099999999839e-05}, {'diff': 6.412499999999821e-05}, {'diff': 6.398600000000199e-05}, {'diff': 6.388899999999753e-05}, {'diff': 6.342999999999974e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:17:57.520" endtime="20201029 18:17:57.523"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:57.528" level="INFO">${ACCURACY} = {'diff': [6.40699999999994e-05, 6.386099999999839e-05, 6.412499999999821e-05, 6.398600000000199e-05, 6.388899999999753e-05, 6.342999999999974e-05, 6.40699999999994e-05, 6.355499999999986e-05, 6.427700...</msg>
<status status="PASS" starttime="20201029 18:17:57.524" endtime="20201029 18:17:57.528"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:57.532" level="INFO">NAME: accuracy-TIMER_SLEEP-49-philip</msg>
<status status="PASS" starttime="20201029 18:17:57.531" endtime="20201029 18:17:57.533"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:57.535" level="INFO">VALUE: [6.40699999999994e-05, 6.386099999999839e-05, 6.412499999999821e-05, 6.398600000000199e-05, 6.388899999999753e-05, 6.342999999999974e-05, 6.40699999999994e-05, 6.355499999999986e-05, 6.427700000000147e-05, 6.336099999999789e-05, 6.39159999999972e-05, 6.424999999999834e-05, 6.337500000000093e-05, 6.398599999999852e-05, 6.398600000000199e-05, 6.35699999999989e-05, 6.363899999999728e-05, 6.409699999999907e-05, 6.388899999999753e-05, 6.404200000000027e-05, 6.369499999999903e-05, 6.37500000000013e-05, 6.394499999999928e-05, 6.397199999999895e-05, 6.380500000000011e-05, 6.412499999999821e-05, 6.412499999999821e-05, 6.377800000000045e-05, 6.431900000000018e-05, 6.416700000000039e-05, 6.42080000000031e-05, 6.398599999999852e-05, 6.404200000000027e-05, 6.330599999999909e-05, 6.336100000000136e-05, 6.400000000000156e-05, 6.37639999999974e-05, 6.348599999999802e-05, 6.391700000000014e-05, 6.397199999999895e-05, 6.384699999999882e-05, 6.420799999999963e-05, 6.380500000000011e-05, 6.387500000000143e-05, 6.418000000000049e-05, 6.340300000000007e-05, 6.349999999999759e-05, 6.359700000000204e-05, 6.347200000000192e-05, 6.37089999999986e-05]</msg>
<status status="PASS" starttime="20201029 18:17:57.534" endtime="20201029 18:17:57.536"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:57.529" endtime="20201029 18:17:57.536"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:57.540" endtime="20201029 18:17:57.559"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:57.538" endtime="20201029 18:17:57.560"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:57.537" endtime="20201029 18:17:57.560"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:57.180" endtime="20201029 18:17:57.560"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:57.180" endtime="20201029 18:17:57.561"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:57.569" endtime="20201029 18:17:57.586"></status>
</kw>
<msg timestamp="20201029 18:17:57.586" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:57.568" endtime="20201029 18:17:57.587"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:57.589" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:57.587" endtime="20201029 18:17:57.589"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:57.590" endtime="20201029 18:17:57.592"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:57.565" endtime="20201029 18:17:57.592"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:57.563" endtime="20201029 18:17:57.593"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:57.599" endtime="20201029 18:17:57.885"></status>
</kw>
<msg timestamp="20201029 18:17:57.888" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019775806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019840625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:57.597" endtime="20201029 18:17:57.889"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:57.897" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019775806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019840625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:57.889" endtime="20201029 18:17:57.897"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:57.898" endtime="20201029 18:17:57.899"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:57.595" endtime="20201029 18:17:57.900"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:57.593" endtime="20201029 18:17:57.900"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:57.904" level="INFO">${RESULT} = [{'diff': 6.481900000000068e-05}, {'diff': 6.450000000000206e-05}, {'diff': 6.49440000000008e-05}, {'diff': 6.512499999999921e-05}, {'diff': 6.506999999999694e-05}, {'diff': 6.468100000000046e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:17:57.901" endtime="20201029 18:17:57.905"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:57.909" level="INFO">${ACCURACY} = {'diff': [6.481900000000068e-05, 6.450000000000206e-05, 6.49440000000008e-05, 6.512499999999921e-05, 6.506999999999694e-05, 6.468100000000046e-05, 6.444499999999978e-05, 6.508399999999998e-05, 6.45279...</msg>
<status status="PASS" starttime="20201029 18:17:57.905" endtime="20201029 18:17:57.909"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:57.913" level="INFO">NAME: accuracy-TIMER_SLEEP-50-philip</msg>
<status status="PASS" starttime="20201029 18:17:57.912" endtime="20201029 18:17:57.913"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:57.916" level="INFO">VALUE: [6.481900000000068e-05, 6.450000000000206e-05, 6.49440000000008e-05, 6.512499999999921e-05, 6.506999999999694e-05, 6.468100000000046e-05, 6.444499999999978e-05, 6.508399999999998e-05, 6.452799999999773e-05, 6.469500000000003e-05, 6.530600000000109e-05, 6.508399999999998e-05, 6.490300000000157e-05, 6.50830000000005e-05, 6.502700000000222e-05, 6.45280000000012e-05, 6.473599999999927e-05, 6.444499999999978e-05, 6.437500000000193e-05, 6.461099999999914e-05, 6.499999999999909e-05, 6.486099999999939e-05, 6.509700000000007e-05, 6.494500000000028e-05, 6.474999999999884e-05, 6.506999999999694e-05, 6.461099999999914e-05, 6.444499999999978e-05, 6.456900000000043e-05, 6.455500000000086e-05, 6.531900000000118e-05, 6.5276999999999e-05, 6.494500000000028e-05, 6.498599999999952e-05, 6.436099999999889e-05, 6.43890000000015e-05, 6.447199999999945e-05, 6.522199999999673e-05, 6.438899999999803e-05, 6.490300000000157e-05, 6.52090000000001e-05, 6.436099999999889e-05, 6.47630000000024e-05, 6.441700000000064e-05, 6.534700000000032e-05, 6.502700000000222e-05, 6.493000000000124e-05, 6.456900000000043e-05, 6.44440000000003e-05, 6.474999999999884e-05]</msg>
<status status="PASS" starttime="20201029 18:17:57.914" endtime="20201029 18:17:57.916"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:57.909" endtime="20201029 18:17:57.917"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:57.921" endtime="20201029 18:17:57.940"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:57.919" endtime="20201029 18:17:57.941"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:57.918" endtime="20201029 18:17:57.941"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:57.562" endtime="20201029 18:17:57.941"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:57.561" endtime="20201029 18:17:57.941"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:57.950" endtime="20201029 18:17:57.969"></status>
</kw>
<msg timestamp="20201029 18:17:57.970" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:57.948" endtime="20201029 18:17:57.970"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:57.972" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:57.971" endtime="20201029 18:17:57.973"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:57.973" endtime="20201029 18:17:57.975"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:57.946" endtime="20201029 18:17:57.975"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:57.944" endtime="20201029 18:17:57.976"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:57.982" endtime="20201029 18:17:58.268"></status>
</kw>
<msg timestamp="20201029 18:17:58.271" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020735389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020801292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:57.981" endtime="20201029 18:17:58.271"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:58.280" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020735389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020801292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:58.272" endtime="20201029 18:17:58.280"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:58.281" endtime="20201029 18:17:58.283"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:57.978" endtime="20201029 18:17:58.283"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:57.976" endtime="20201029 18:17:58.284"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:58.288" level="INFO">${RESULT} = [{'diff': 6.59029999999991e-05}, {'diff': 6.57639999999994e-05}, {'diff': 6.568099999999799e-05}, {'diff': 6.565199999999938e-05}, {'diff': 6.538799999999956e-05}, {'diff': 6.547200000000045e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 18:17:58.284" endtime="20201029 18:17:58.288"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:58.292" level="INFO">${ACCURACY} = {'diff': [6.59029999999991e-05, 6.57639999999994e-05, 6.568099999999799e-05, 6.565199999999938e-05, 6.538799999999956e-05, 6.547200000000045e-05, 6.601399999999966e-05, 6.541700000000164e-05, 6.615299...</msg>
<status status="PASS" starttime="20201029 18:17:58.289" endtime="20201029 18:17:58.292"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:58.297" level="INFO">NAME: accuracy-TIMER_SLEEP-51-philip</msg>
<status status="PASS" starttime="20201029 18:17:58.296" endtime="20201029 18:17:58.297"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:58.299" level="INFO">VALUE: [6.59029999999991e-05, 6.57639999999994e-05, 6.568099999999799e-05, 6.565199999999938e-05, 6.538799999999956e-05, 6.547200000000045e-05, 6.601399999999966e-05, 6.541700000000164e-05, 6.615299999999935e-05, 6.591700000000214e-05, 6.623600000000077e-05, 6.566700000000189e-05, 6.587499999999996e-05, 6.577799999999898e-05, 6.533400000000023e-05, 6.579199999999855e-05, 6.536099999999989e-05, 6.583399999999726e-05, 6.630500000000261e-05, 6.581900000000168e-05, 6.547200000000045e-05, 6.545799999999741e-05, 6.57639999999994e-05, 6.569399999999809e-05, 6.534700000000032e-05, 6.593099999999824e-05, 6.54029999999986e-05, 6.611099999999717e-05, 6.62220000000012e-05, 6.567999999999852e-05, 6.574999999999984e-05, 6.568100000000146e-05, 6.590199999999963e-05, 6.591699999999867e-05, 6.562499999999971e-05, 6.626299999999696e-05, 6.588899999999953e-05, 6.600000000000009e-05, 6.563899999999928e-05, 6.581899999999821e-05, 6.579199999999855e-05, 6.601399999999966e-05, 6.588899999999953e-05, 6.591699999999867e-05, 6.618100000000196e-05, 6.616699999999892e-05, 6.605600000000184e-05, 6.548600000000002e-05, 6.574999999999984e-05, 6.584700000000082e-05]</msg>
<status status="PASS" starttime="20201029 18:17:58.298" endtime="20201029 18:17:58.301"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:58.293" endtime="20201029 18:17:58.302"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:58.306" endtime="20201029 18:17:58.325"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:58.304" endtime="20201029 18:17:58.326"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:58.303" endtime="20201029 18:17:58.326"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:57.942" endtime="20201029 18:17:58.326"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:57.942" endtime="20201029 18:17:58.326"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:58.336" endtime="20201029 18:17:58.354"></status>
</kw>
<msg timestamp="20201029 18:17:58.354" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:58.334" endtime="20201029 18:17:58.354"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:58.357" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:58.355" endtime="20201029 18:17:58.357"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:58.358" endtime="20201029 18:17:58.359"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:58.331" endtime="20201029 18:17:58.360"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:58.329" endtime="20201029 18:17:58.360"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:58.367" endtime="20201029 18:17:58.653"></status>
</kw>
<msg timestamp="20201029 18:17:58.656" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020196458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020263819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:58.366" endtime="20201029 18:17:58.657"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:58.665" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020196458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020263819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:58.658" endtime="20201029 18:17:58.665"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:58.666" endtime="20201029 18:17:58.668"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:58.363" endtime="20201029 18:17:58.668"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:58.361" endtime="20201029 18:17:58.669"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:58.673" level="INFO">${RESULT} = [{'diff': 6.736099999999842e-05}, {'diff': 6.711099999999817e-05}, {'diff': 6.673600000000127e-05}, {'diff': 6.666699999999942e-05}, {'diff': 6.656999999999844e-05}, {'diff': 6.682000000000216e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:17:58.670" endtime="20201029 18:17:58.673"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:58.678" level="INFO">${ACCURACY} = {'diff': [6.736099999999842e-05, 6.711099999999817e-05, 6.673600000000127e-05, 6.666699999999942e-05, 6.656999999999844e-05, 6.682000000000216e-05, 6.687500000000096e-05, 6.700000000000109e-05, 6.7207...</msg>
<status status="PASS" starttime="20201029 18:17:58.674" endtime="20201029 18:17:58.678"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:58.683" level="INFO">NAME: accuracy-TIMER_SLEEP-52-philip</msg>
<status status="PASS" starttime="20201029 18:17:58.682" endtime="20201029 18:17:58.683"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:58.685" level="INFO">VALUE: [6.736099999999842e-05, 6.711099999999817e-05, 6.673600000000127e-05, 6.666699999999942e-05, 6.656999999999844e-05, 6.682000000000216e-05, 6.687500000000096e-05, 6.700000000000109e-05, 6.720799999999916e-05, 6.688900000000053e-05, 6.702800000000023e-05, 6.652799999999973e-05, 6.677799999999998e-05, 6.730499999999667e-05, 6.712500000000121e-05, 6.661099999999767e-05, 6.688900000000053e-05, 6.674999999999737e-05, 6.647300000000092e-05, 6.716699999999992e-05, 6.679199999999955e-05, 6.697199999999848e-05, 6.712500000000121e-05, 6.672199999999823e-05, 6.642999999999927e-05, 6.691599999999673e-05, 6.683300000000225e-05, 6.698599999999805e-05, 6.669499999999856e-05, 6.730500000000014e-05, 6.725000000000134e-05, 6.731899999999971e-05, 6.663900000000028e-05, 6.648700000000049e-05, 6.637500000000046e-05, 6.64029999999996e-05, 6.656999999999844e-05, 6.633400000000123e-05, 6.652699999999678e-05, 6.636100000000089e-05, 6.645799999999841e-05, 6.670800000000213e-05, 6.733299999999928e-05, 6.686100000000139e-05, 6.70419999999998e-05, 6.688900000000053e-05, 6.679199999999955e-05, 6.638900000000003e-05, 6.725000000000134e-05, 6.709800000000155e-05]</msg>
<status status="PASS" starttime="20201029 18:17:58.684" endtime="20201029 18:17:58.686"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:58.679" endtime="20201029 18:17:58.687"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:58.691" endtime="20201029 18:17:58.710"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:58.689" endtime="20201029 18:17:58.711"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:58.688" endtime="20201029 18:17:58.711"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:58.327" endtime="20201029 18:17:58.711"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:58.327" endtime="20201029 18:17:58.712"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:58.721" endtime="20201029 18:17:58.739"></status>
</kw>
<msg timestamp="20201029 18:17:58.739" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:58.719" endtime="20201029 18:17:58.739"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:58.742" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:58.740" endtime="20201029 18:17:58.742"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:58.743" endtime="20201029 18:17:58.745"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:58.716" endtime="20201029 18:17:58.745"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:58.714" endtime="20201029 18:17:58.746"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:58.752" endtime="20201029 18:17:59.061"></status>
</kw>
<msg timestamp="20201029 18:17:59.064" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020310208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020378056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:58.751" endtime="20201029 18:17:59.064"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:59.072" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020310208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020378056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:59.065" endtime="20201029 18:17:59.073"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:59.074" endtime="20201029 18:17:59.075"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:58.748" endtime="20201029 18:17:59.076"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:58.746" endtime="20201029 18:17:59.076"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:59.080" level="INFO">${RESULT} = [{'diff': 6.784799999999883e-05}, {'diff': 6.818100000000049e-05}, {'diff': 6.794400000000034e-05}, {'diff': 6.818000000000102e-05}, {'diff': 6.766600000000095e-05}, {'diff': 6.802799999999776e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:17:59.077" endtime="20201029 18:17:59.081"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:59.085" level="INFO">${ACCURACY} = {'diff': [6.784799999999883e-05, 6.818100000000049e-05, 6.794400000000034e-05, 6.818000000000102e-05, 6.766600000000095e-05, 6.802799999999776e-05, 6.777800000000098e-05, 6.797200000000295e-05, 6.7653...</msg>
<status status="PASS" starttime="20201029 18:17:59.081" endtime="20201029 18:17:59.085"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:59.089" level="INFO">NAME: accuracy-TIMER_SLEEP-53-philip</msg>
<status status="PASS" starttime="20201029 18:17:59.088" endtime="20201029 18:17:59.090"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:59.092" level="INFO">VALUE: [6.784799999999883e-05, 6.818100000000049e-05, 6.794400000000034e-05, 6.818000000000102e-05, 6.766600000000095e-05, 6.802799999999776e-05, 6.777800000000098e-05, 6.797200000000295e-05, 6.765300000000085e-05, 6.818000000000102e-05, 6.765300000000085e-05, 6.829200000000105e-05, 6.78619999999984e-05, 6.779199999999708e-05, 6.752799999999726e-05, 6.805600000000037e-05, 6.826399999999844e-05, 6.830500000000114e-05, 6.794400000000034e-05, 6.811099999999917e-05, 6.798599999999905e-05, 6.829100000000157e-05, 6.770799999999966e-05, 6.77909999999976e-05, 6.765300000000085e-05, 6.734699999999885e-05, 6.770799999999966e-05, 6.811099999999917e-05, 6.766700000000042e-05, 6.811200000000212e-05, 6.777800000000098e-05, 6.818099999999702e-05, 6.751399999999769e-05, 6.823600000000277e-05, 6.818000000000102e-05, 6.734700000000232e-05, 6.819500000000006e-05, 6.740299999999713e-05, 6.793000000000077e-05, 6.805500000000089e-05, 6.791700000000067e-05, 6.745799999999941e-05, 6.772199999999923e-05, 6.800000000000209e-05, 6.819500000000006e-05, 6.765300000000085e-05, 6.759799999999858e-05, 6.815300000000135e-05, 6.80969999999996e-05, 6.804100000000132e-05]</msg>
<status status="PASS" starttime="20201029 18:17:59.090" endtime="20201029 18:17:59.093"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:59.086" endtime="20201029 18:17:59.093"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:59.097" endtime="20201029 18:17:59.117"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:59.095" endtime="20201029 18:17:59.117"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:59.094" endtime="20201029 18:17:59.117"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:58.713" endtime="20201029 18:17:59.118"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:58.712" endtime="20201029 18:17:59.118"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:59.127" endtime="20201029 18:17:59.148"></status>
</kw>
<msg timestamp="20201029 18:17:59.149" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:59.125" endtime="20201029 18:17:59.149"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:59.152" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:59.150" endtime="20201029 18:17:59.152"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:59.153" endtime="20201029 18:17:59.155"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:59.123" endtime="20201029 18:17:59.155"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:59.120" endtime="20201029 18:17:59.156"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:59.162" endtime="20201029 18:17:59.449"></status>
</kw>
<msg timestamp="20201029 18:17:59.452" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023527931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023596806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:59.161" endtime="20201029 18:17:59.453"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:59.461" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023527931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023596806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:59.454" endtime="20201029 18:17:59.461"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:59.462" endtime="20201029 18:17:59.464"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:59.158" endtime="20201029 18:17:59.464"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:59.156" endtime="20201029 18:17:59.465"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:59.469" level="INFO">${RESULT} = [{'diff': 6.887500000000296e-05}, {'diff': 6.876399999999894e-05}, {'diff': 6.844400000000084e-05}, {'diff': 6.893000000000177e-05}, {'diff': 6.841599999999823e-05}, {'diff': 6.901399999999919e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:17:59.465" endtime="20201029 18:17:59.469"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:59.473" level="INFO">${ACCURACY} = {'diff': [6.887500000000296e-05, 6.876399999999894e-05, 6.844400000000084e-05, 6.893000000000177e-05, 6.841599999999823e-05, 6.901399999999919e-05, 6.92360000000003e-05, 6.865300000000185e-05, 6.90280...</msg>
<status status="PASS" starttime="20201029 18:17:59.470" endtime="20201029 18:17:59.473"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:59.478" level="INFO">NAME: accuracy-TIMER_SLEEP-54-philip</msg>
<status status="PASS" starttime="20201029 18:17:59.477" endtime="20201029 18:17:59.478"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:59.480" level="INFO">VALUE: [6.887500000000296e-05, 6.876399999999894e-05, 6.844400000000084e-05, 6.893000000000177e-05, 6.841599999999823e-05, 6.901399999999919e-05, 6.92360000000003e-05, 6.865300000000185e-05, 6.902800000000223e-05, 6.897200000000048e-05, 6.883400000000026e-05, 6.911100000000017e-05, 6.890299999999863e-05, 6.852799999999826e-05, 6.925000000000334e-05, 6.918100000000149e-05, 6.880499999999817e-05, 6.845800000000041e-05, 6.87640000000024e-05, 6.888900000000253e-05, 6.902799999999876e-05, 6.87359999999998e-05, 6.862499999999924e-05, 6.868100000000099e-05, 6.913899999999931e-05, 6.834699999999985e-05, 6.905500000000189e-05, 6.918100000000149e-05, 6.845899999999988e-05, 6.930500000000214e-05, 6.845899999999988e-05, 6.886099999999992e-05, 6.911100000000017e-05, 6.844400000000084e-05, 6.838900000000203e-05, 6.840299999999813e-05, 6.905499999999842e-05, 6.855499999999792e-05, 6.845800000000041e-05, 6.919400000000159e-05, 6.890299999999863e-05, 6.87359999999998e-05, 6.913899999999931e-05, 6.92230000000002e-05, 6.859799999999958e-05, 6.920900000000063e-05, 6.92360000000003e-05, 6.851300000000268e-05, 6.874999999999937e-05, 6.906899999999799e-05]</msg>
<status status="PASS" starttime="20201029 18:17:59.479" endtime="20201029 18:17:59.482"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:59.474" endtime="20201029 18:17:59.483"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:59.486" endtime="20201029 18:17:59.506"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:59.485" endtime="20201029 18:17:59.507"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:59.484" endtime="20201029 18:17:59.507"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:59.119" endtime="20201029 18:17:59.507"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:59.118" endtime="20201029 18:17:59.507"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:59.516" endtime="20201029 18:17:59.534"></status>
</kw>
<msg timestamp="20201029 18:17:59.534" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:59.515" endtime="20201029 18:17:59.534"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:59.537" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:59.535" endtime="20201029 18:17:59.537"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:59.538" endtime="20201029 18:17:59.540"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:59.512" endtime="20201029 18:17:59.540"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:59.510" endtime="20201029 18:17:59.541"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:59.547" endtime="20201029 18:17:59.834"></status>
</kw>
<msg timestamp="20201029 18:17:59.838" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020358722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020428722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:59.546" endtime="20201029 18:17:59.838"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:59.846" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020358722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020428722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:59.839" endtime="20201029 18:17:59.846"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:59.847" endtime="20201029 18:17:59.849"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:59.543" endtime="20201029 18:17:59.849"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:59.541" endtime="20201029 18:17:59.850"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:59.854" level="INFO">${RESULT} = [{'diff': 7.000000000000062e-05}, {'diff': 6.988900000000006e-05}, {'diff': 6.940299999999913e-05}, {'diff': 7.001400000000019e-05}, {'diff': 6.975000000000037e-05}, {'diff': 6.944500000000131e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:17:59.851" endtime="20201029 18:17:59.854"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:59.859" level="INFO">${ACCURACY} = {'diff': [7.000000000000062e-05, 6.988900000000006e-05, 6.940299999999913e-05, 7.001400000000019e-05, 6.975000000000037e-05, 6.944500000000131e-05, 6.970799999999819e-05, 6.956999999999797e-05, 7.0180...</msg>
<status status="PASS" starttime="20201029 18:17:59.855" endtime="20201029 18:17:59.860"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:59.864" level="INFO">NAME: accuracy-TIMER_SLEEP-55-philip</msg>
<status status="PASS" starttime="20201029 18:17:59.863" endtime="20201029 18:17:59.865"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:59.867" level="INFO">VALUE: [7.000000000000062e-05, 6.988900000000006e-05, 6.940299999999913e-05, 7.001400000000019e-05, 6.975000000000037e-05, 6.944500000000131e-05, 6.970799999999819e-05, 6.956999999999797e-05, 7.018099999999902e-05, 7.019400000000259e-05, 7.012500000000074e-05, 6.991599999999973e-05, 7.015200000000041e-05, 7.016700000000292e-05, 7.013900000000031e-05, 6.934700000000085e-05, 6.99299999999993e-05, 6.937499999999999e-05, 6.997200000000148e-05, 6.975000000000037e-05, 6.982000000000169e-05, 6.994500000000181e-05, 6.947200000000098e-05, 6.988900000000006e-05, 6.980600000000212e-05, 6.976399999999994e-05, 6.9762999999997e-05, 6.987500000000049e-05, 6.981899999999874e-05, 6.970799999999819e-05, 6.947200000000098e-05, 7.012500000000074e-05, 6.984699999999788e-05, 7.008299999999856e-05, 6.991599999999973e-05, 6.981999999999822e-05, 6.945900000000088e-05, 6.980600000000212e-05, 7.000000000000062e-05, 6.988900000000006e-05, 6.967999999999905e-05, 7.015200000000041e-05, 7.020799999999869e-05, 6.99299999999993e-05, 7.008299999999856e-05, 7.030499999999967e-05, 7.016699999999945e-05, 6.995799999999844e-05, 6.975000000000037e-05, 7.025000000000087e-05]</msg>
<status status="PASS" starttime="20201029 18:17:59.865" endtime="20201029 18:17:59.868"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:59.860" endtime="20201029 18:17:59.868"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:59.872" endtime="20201029 18:17:59.892"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:59.870" endtime="20201029 18:17:59.892"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:59.869" endtime="20201029 18:17:59.892"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:59.508" endtime="20201029 18:17:59.893"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:59.508" endtime="20201029 18:17:59.893"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:59.902" endtime="20201029 18:17:59.920"></status>
</kw>
<msg timestamp="20201029 18:17:59.920" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:59.900" endtime="20201029 18:17:59.921"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:59.923" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:59.922" endtime="20201029 18:17:59.923"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:59.924" endtime="20201029 18:17:59.926"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:59.898" endtime="20201029 18:17:59.926"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:59.895" endtime="20201029 18:17:59.927"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:59.934" endtime="20201029 18:18:00.221"></status>
</kw>
<msg timestamp="20201029 18:18:00.224" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020357667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020428097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:59.932" endtime="20201029 18:18:00.225"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:00.233" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020357667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020428097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:00.225" endtime="20201029 18:18:00.233"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:00.234" endtime="20201029 18:18:00.236"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:59.929" endtime="20201029 18:18:00.236"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:59.927" endtime="20201029 18:18:00.237"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:00.241" level="INFO">${RESULT} = [{'diff': 7.04299999999998e-05}, {'diff': 7.070799999999919e-05}, {'diff': 7.055499999999992e-05}, {'diff': 7.063900000000081e-05}, {'diff': 7.111100000000217e-05}, {'diff': 7.126400000000144e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:18:00.238" endtime="20201029 18:18:00.241"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:00.245" level="INFO">${ACCURACY} = {'diff': [7.04299999999998e-05, 7.070799999999919e-05, 7.055499999999992e-05, 7.063900000000081e-05, 7.111100000000217e-05, 7.126400000000144e-05, 7.073599999999833e-05, 7.050000000000112e-05, 7.10140...</msg>
<status status="PASS" starttime="20201029 18:18:00.242" endtime="20201029 18:18:00.245"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:00.250" level="INFO">NAME: accuracy-TIMER_SLEEP-56-philip</msg>
<status status="PASS" starttime="20201029 18:18:00.249" endtime="20201029 18:18:00.250"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:00.252" level="INFO">VALUE: [7.04299999999998e-05, 7.070799999999919e-05, 7.055499999999992e-05, 7.063900000000081e-05, 7.111100000000217e-05, 7.126400000000144e-05, 7.073599999999833e-05, 7.050000000000112e-05, 7.101400000000119e-05, 7.1069e-05, 7.048700000000102e-05, 7.02910000000001e-05, 7.07360000000018e-05, 7.036100000000142e-05, 7.063899999999734e-05, 7.088900000000106e-05, 7.06109999999982e-05, 7.113900000000131e-05, 7.076399999999747e-05, 7.108399999999904e-05, 7.115299999999741e-05, 7.112500000000174e-05, 7.068000000000005e-05, 7.047299999999798e-05, 7.097300000000195e-05, 7.07360000000018e-05, 7.063900000000081e-05, 7.070799999999919e-05, 7.09300000000003e-05, 7.06109999999982e-05, 7.052800000000026e-05, 7.115300000000088e-05, 7.090300000000063e-05, 7.100000000000162e-05, 7.104200000000033e-05, 7.033399999999829e-05, 7.127800000000101e-05, 7.094499999999934e-05, 7.056999999999897e-05, 7.036100000000142e-05, 7.076400000000094e-05, 7.05970000000021e-05, 7.127800000000101e-05, 7.077800000000051e-05, 7.07910000000006e-05, 7.061100000000167e-05, 7.081999999999922e-05, 7.075000000000137e-05, 7.099999999999815e-05, 7.083400000000226e-05]</msg>
<status status="PASS" starttime="20201029 18:18:00.251" endtime="20201029 18:18:00.259"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:00.246" endtime="20201029 18:18:00.259"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:00.263" endtime="20201029 18:18:00.283"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:00.262" endtime="20201029 18:18:00.283"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:00.260" endtime="20201029 18:18:00.284"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:59.894" endtime="20201029 18:18:00.284"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:59.893" endtime="20201029 18:18:00.284"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:00.293" endtime="20201029 18:18:00.312"></status>
</kw>
<msg timestamp="20201029 18:18:00.312" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:00.292" endtime="20201029 18:18:00.312"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:00.315" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:00.313" endtime="20201029 18:18:00.315"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:00.316" endtime="20201029 18:18:00.318"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:00.289" endtime="20201029 18:18:00.318"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:00.287" endtime="20201029 18:18:00.319"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:00.325" endtime="20201029 18:18:00.611"></status>
</kw>
<msg timestamp="20201029 18:18:00.614" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021179042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021250917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:00.324" endtime="20201029 18:18:00.614"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:00.623" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021179042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021250917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:00.615" endtime="20201029 18:18:00.623"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:00.624" endtime="20201029 18:18:00.625"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:00.321" endtime="20201029 18:18:00.626"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:00.319" endtime="20201029 18:18:00.626"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:00.631" level="INFO">${RESULT} = [{'diff': 7.187500000000249e-05}, {'diff': 7.173599999999933e-05}, {'diff': 7.21109999999997e-05}, {'diff': 7.195799999999697e-05}, {'diff': 7.230500000000167e-05}, {'diff': 7.191599999999826e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:18:00.627" endtime="20201029 18:18:00.631"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:00.635" level="INFO">${ACCURACY} = {'diff': [7.187500000000249e-05, 7.173599999999933e-05, 7.21109999999997e-05, 7.195799999999697e-05, 7.230500000000167e-05, 7.191599999999826e-05, 7.140300000000113e-05, 7.232000000000072e-05, 7.20279...</msg>
<status status="PASS" starttime="20201029 18:18:00.632" endtime="20201029 18:18:00.635"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:00.639" level="INFO">NAME: accuracy-TIMER_SLEEP-57-philip</msg>
<status status="PASS" starttime="20201029 18:18:00.638" endtime="20201029 18:18:00.640"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:00.642" level="INFO">VALUE: [7.187500000000249e-05, 7.173599999999933e-05, 7.21109999999997e-05, 7.195799999999697e-05, 7.230500000000167e-05, 7.191599999999826e-05, 7.140300000000113e-05, 7.232000000000072e-05, 7.202799999999829e-05, 7.148599999999908e-05, 7.166699999999748e-05, 7.162499999999877e-05, 7.216699999999798e-05, 7.165199999999844e-05, 7.18049999999977e-05, 7.170899999999966e-05, 7.147199999999951e-05, 7.168099999999705e-05, 7.234700000000038e-05, 7.155500000000092e-05, 7.151400000000169e-05, 7.223599999999983e-05, 7.199999999999915e-05, 7.179200000000108e-05, 7.230600000000115e-05, 7.212499999999927e-05, 7.15560000000004e-05, 7.187500000000249e-05, 7.208400000000004e-05, 7.22499999999994e-05, 7.158399999999954e-05, 7.138900000000156e-05, 7.215199999999894e-05, 7.231900000000124e-05, 7.215199999999894e-05, 7.205499999999795e-05, 7.208300000000056e-05, 7.167999999999758e-05, 7.140300000000113e-05, 7.204199999999786e-05, 7.163900000000181e-05, 7.162499999999877e-05, 7.219500000000059e-05, 7.197200000000001e-05, 7.145899999999941e-05, 7.206899999999752e-05, 7.148599999999908e-05, 7.208300000000056e-05, 7.162499999999877e-05, 7.220800000000069e-05]</msg>
<status status="PASS" starttime="20201029 18:18:00.641" endtime="20201029 18:18:00.644"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:00.636" endtime="20201029 18:18:00.644"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:00.648" endtime="20201029 18:18:00.668"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:00.647" endtime="20201029 18:18:00.668"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:00.645" endtime="20201029 18:18:00.669"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:00.285" endtime="20201029 18:18:00.669"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:00.285" endtime="20201029 18:18:00.669"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:00.678" endtime="20201029 18:18:00.697"></status>
</kw>
<msg timestamp="20201029 18:18:00.698" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:00.677" endtime="20201029 18:18:00.698"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:00.700" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:00.699" endtime="20201029 18:18:00.700"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:00.701" endtime="20201029 18:18:00.703"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:00.674" endtime="20201029 18:18:00.704"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:00.672" endtime="20201029 18:18:00.704"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:00.711" endtime="20201029 18:18:00.997"></status>
</kw>
<msg timestamp="20201029 18:18:01.001" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020234403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020307014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:00.709" endtime="20201029 18:18:01.001"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:01.009" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020234403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020307014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:01.002" endtime="20201029 18:18:01.010"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:01.011" endtime="20201029 18:18:01.012"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:00.707" endtime="20201029 18:18:01.013"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:00.705" endtime="20201029 18:18:01.013"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:01.018" level="INFO">${RESULT} = [{'diff': 7.26110000000002e-05}, {'diff': 7.315299999999941e-05}, {'diff': 7.227800000000201e-05}, {'diff': 7.295799999999797e-05}, {'diff': 7.258400000000054e-05}, {'diff': 7.291599999999926e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:18:01.014" endtime="20201029 18:18:01.018"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:01.023" level="INFO">${ACCURACY} = {'diff': [7.26110000000002e-05, 7.315299999999941e-05, 7.227800000000201e-05, 7.295799999999797e-05, 7.258400000000054e-05, 7.291599999999926e-05, 7.300000000000015e-05, 7.31110000000007e-05, 7.312500...</msg>
<status status="PASS" starttime="20201029 18:18:01.019" endtime="20201029 18:18:01.023"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:01.027" level="INFO">NAME: accuracy-TIMER_SLEEP-58-philip</msg>
<status status="PASS" starttime="20201029 18:18:01.026" endtime="20201029 18:18:01.028"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:01.030" level="INFO">VALUE: [7.26110000000002e-05, 7.315299999999941e-05, 7.227800000000201e-05, 7.295799999999797e-05, 7.258400000000054e-05, 7.291599999999926e-05, 7.300000000000015e-05, 7.31110000000007e-05, 7.312500000000027e-05, 7.281899999999827e-05, 7.277799999999904e-05, 7.27499999999999e-05, 7.273600000000033e-05, 7.312500000000027e-05, 7.254200000000183e-05, 7.298600000000058e-05, 7.32500000000004e-05, 7.276399999999947e-05, 7.245900000000041e-05, 7.237500000000299e-05, 7.288799999999665e-05, 7.258300000000106e-05, 7.301399999999972e-05, 7.265300000000238e-05, 7.268000000000205e-05, 7.237499999999952e-05, 7.292999999999883e-05, 7.29439999999984e-05, 7.330599999999868e-05, 7.236099999999995e-05, 7.259800000000011e-05, 7.316699999999898e-05, 7.247299999999998e-05, 7.245900000000041e-05, 7.279199999999861e-05, 7.236099999999995e-05, 7.304099999999938e-05, 7.273600000000033e-05, 7.290299999999916e-05, 7.284700000000088e-05, 7.262499999999977e-05, 7.29439999999984e-05, 7.309699999999766e-05, 7.232000000000072e-05, 7.234699999999691e-05, 7.238899999999909e-05, 7.268100000000152e-05, 7.24170000000017e-05, 7.330599999999868e-05, 7.295799999999797e-05]</msg>
<status status="PASS" starttime="20201029 18:18:01.029" endtime="20201029 18:18:01.031"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:01.024" endtime="20201029 18:18:01.032"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:01.035" endtime="20201029 18:18:01.055"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:01.034" endtime="20201029 18:18:01.056"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:01.033" endtime="20201029 18:18:01.056"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:00.670" endtime="20201029 18:18:01.056"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:00.669" endtime="20201029 18:18:01.056"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:01.066" endtime="20201029 18:18:01.084"></status>
</kw>
<msg timestamp="20201029 18:18:01.085" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:01.064" endtime="20201029 18:18:01.085"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:01.087" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:01.086" endtime="20201029 18:18:01.087"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:01.088" endtime="20201029 18:18:01.090"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:01.061" endtime="20201029 18:18:01.091"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:01.059" endtime="20201029 18:18:01.092"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:01.099" endtime="20201029 18:18:01.388"></status>
</kw>
<msg timestamp="20201029 18:18:01.391" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02204475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022118319, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:18:01.097" endtime="20201029 18:18:01.392"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:01.400" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02204475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022118319, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:18:01.392" endtime="20201029 18:18:01.400"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:01.401" endtime="20201029 18:18:01.403"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:01.094" endtime="20201029 18:18:01.403"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:01.092" endtime="20201029 18:18:01.404"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:01.408" level="INFO">${RESULT} = [{'diff': 7.35690000000025e-05}, {'diff': 7.334700000000138e-05}, {'diff': 7.420899999999869e-05}, {'diff': 7.381899999999927e-05}, {'diff': 7.411099999999823e-05}, {'diff': 7.426400000000097e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:18:01.405" endtime="20201029 18:18:01.408"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:01.412" level="INFO">${ACCURACY} = {'diff': [7.35690000000025e-05, 7.334700000000138e-05, 7.420899999999869e-05, 7.381899999999927e-05, 7.411099999999823e-05, 7.426400000000097e-05, 7.42500000000014e-05, 7.386099999999798e-05, 7.348600...</msg>
<status status="PASS" starttime="20201029 18:18:01.409" endtime="20201029 18:18:01.412"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:01.416" level="INFO">NAME: accuracy-TIMER_SLEEP-59-philip</msg>
<status status="PASS" starttime="20201029 18:18:01.415" endtime="20201029 18:18:01.417"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:01.419" level="INFO">VALUE: [7.35690000000025e-05, 7.334700000000138e-05, 7.420899999999869e-05, 7.381899999999927e-05, 7.411099999999823e-05, 7.426400000000097e-05, 7.42500000000014e-05, 7.386099999999798e-05, 7.348600000000108e-05, 7.359700000000163e-05, 7.36110000000012e-05, 7.347199999999804e-05, 7.391699999999973e-05, 7.366699999999948e-05, 7.41110000000017e-05, 7.336100000000095e-05, 7.369399999999915e-05, 7.36110000000012e-05, 7.3763999999997e-05, 7.418000000000008e-05, 7.401400000000072e-05, 7.417999999999661e-05, 7.337500000000052e-05, 7.351400000000022e-05, 7.42500000000014e-05, 7.365299999999991e-05, 7.413900000000084e-05, 7.369499999999862e-05, 7.42370000000013e-05, 7.427800000000054e-05, 7.350000000000065e-05, 7.383299999999884e-05, 7.338900000000009e-05, 7.373600000000133e-05, 7.416699999999998e-05, 7.411099999999823e-05, 7.391699999999973e-05, 7.379199999999961e-05, 7.359700000000163e-05, 7.350000000000065e-05, 7.431999999999925e-05, 7.416600000000051e-05, 7.37500000000009e-05, 7.419500000000259e-05, 7.373600000000133e-05, 7.344400000000237e-05, 7.405499999999995e-05, 7.376400000000047e-05, 7.342999999999933e-05, 7.362500000000077e-05]</msg>
<status status="PASS" starttime="20201029 18:18:01.418" endtime="20201029 18:18:01.420"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:01.413" endtime="20201029 18:18:01.420"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:01.424" endtime="20201029 18:18:01.444"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:01.423" endtime="20201029 18:18:01.444"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:01.421" endtime="20201029 18:18:01.445"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:01.057" endtime="20201029 18:18:01.445"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:01.057" endtime="20201029 18:18:01.445"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:01.454" endtime="20201029 18:18:01.473"></status>
</kw>
<msg timestamp="20201029 18:18:01.473" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:01.452" endtime="20201029 18:18:01.473"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:01.479" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:01.476" endtime="20201029 18:18:01.479"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:01.480" endtime="20201029 18:18:01.482"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:01.449" endtime="20201029 18:18:01.483"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:01.447" endtime="20201029 18:18:01.484"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:01.496" endtime="20201029 18:18:01.794"></status>
</kw>
<msg timestamp="20201029 18:18:01.801" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021264681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021339236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:01.494" endtime="20201029 18:18:01.802"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:01.820" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021264681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021339236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:01.804" endtime="20201029 18:18:01.820"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:01.822" endtime="20201029 18:18:01.825"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:01.489" endtime="20201029 18:18:01.827"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:01.486" endtime="20201029 18:18:01.828"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:01.836" level="INFO">${RESULT} = [{'diff': 7.455500000000045e-05}, {'diff': 7.473600000000233e-05}, {'diff': 7.49440000000004e-05}, {'diff': 7.463900000000134e-05}, {'diff': 7.459700000000263e-05}, {'diff': 7.468100000000005e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:18:01.829" endtime="20201029 18:18:01.837"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:01.844" level="INFO">${ACCURACY} = {'diff': [7.455500000000045e-05, 7.473600000000233e-05, 7.49440000000004e-05, 7.463900000000134e-05, 7.459700000000263e-05, 7.468100000000005e-05, 7.532000000000025e-05, 7.470799999999972e-05, 7.47089...</msg>
<status status="PASS" starttime="20201029 18:18:01.838" endtime="20201029 18:18:01.844"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:01.849" level="INFO">NAME: accuracy-TIMER_SLEEP-60-philip</msg>
<status status="PASS" starttime="20201029 18:18:01.848" endtime="20201029 18:18:01.849"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:01.852" level="INFO">VALUE: [7.455500000000045e-05, 7.473600000000233e-05, 7.49440000000004e-05, 7.463900000000134e-05, 7.459700000000263e-05, 7.468100000000005e-05, 7.532000000000025e-05, 7.470799999999972e-05, 7.470899999999919e-05, 7.497199999999954e-05, 7.479099999999766e-05, 7.46379999999984e-05, 7.51249999999988e-05, 7.498599999999911e-05, 7.455500000000045e-05, 7.497199999999954e-05, 7.486099999999898e-05, 7.44309999999998e-05, 7.438899999999762e-05, 7.487499999999855e-05, 7.434700000000238e-05, 7.437500000000152e-05, 7.495899999999944e-05, 7.4763999999998e-05, 7.452699999999784e-05, 7.498600000000258e-05, 7.50830000000001e-05, 7.498599999999911e-05, 7.49440000000004e-05, 7.438900000000109e-05, 7.473600000000233e-05, 7.433299999999934e-05, 7.49310000000003e-05, 7.518100000000055e-05, 7.502799999999782e-05, 7.509799999999914e-05, 7.497299999999901e-05, 7.486099999999898e-05, 7.476400000000147e-05, 7.434699999999891e-05, 7.44439999999999e-05, 7.4763999999998e-05, 7.480600000000018e-05, 7.441700000000023e-05, 7.49310000000003e-05, 7.487500000000202e-05, 7.507e-05, 7.504200000000086e-05, 7.530600000000068e-05, 7.505600000000043e-05]</msg>
<status status="PASS" starttime="20201029 18:18:01.850" endtime="20201029 18:18:01.854"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:01.845" endtime="20201029 18:18:01.854"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:01.858" endtime="20201029 18:18:01.877"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:01.856" endtime="20201029 18:18:01.878"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:01.855" endtime="20201029 18:18:01.878"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:01.446" endtime="20201029 18:18:01.879"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:01.445" endtime="20201029 18:18:01.879"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:01.887" endtime="20201029 18:18:01.906"></status>
</kw>
<msg timestamp="20201029 18:18:01.906" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:01.886" endtime="20201029 18:18:01.907"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:01.909" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:01.907" endtime="20201029 18:18:01.909"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:01.910" endtime="20201029 18:18:01.912"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:01.883" endtime="20201029 18:18:01.912"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:01.881" endtime="20201029 18:18:01.913"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:01.919" endtime="20201029 18:18:02.205"></status>
</kw>
<msg timestamp="20201029 18:18:02.208" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019792236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019867583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:01.918" endtime="20201029 18:18:02.209"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:02.217" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019792236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019867583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:02.210" endtime="20201029 18:18:02.217"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:02.218" endtime="20201029 18:18:02.219"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:01.915" endtime="20201029 18:18:02.220"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:01.913" endtime="20201029 18:18:02.220"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:02.225" level="INFO">${RESULT} = [{'diff': 7.534699999999991e-05}, {'diff': 7.559700000000016e-05}, {'diff': 7.538899999999862e-05}, {'diff': 7.536099999999948e-05}, {'diff': 7.613900000000284e-05}, {'diff': 7.566700000000148e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:18:02.221" endtime="20201029 18:18:02.225"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:02.230" level="INFO">${ACCURACY} = {'diff': [7.534699999999991e-05, 7.559700000000016e-05, 7.538899999999862e-05, 7.536099999999948e-05, 7.613900000000284e-05, 7.566700000000148e-05, 7.594500000000087e-05, 7.61249999999998e-05, 7.61379...</msg>
<status status="PASS" starttime="20201029 18:18:02.226" endtime="20201029 18:18:02.230"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:02.234" level="INFO">NAME: accuracy-TIMER_SLEEP-61-philip</msg>
<status status="PASS" starttime="20201029 18:18:02.233" endtime="20201029 18:18:02.234"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:02.237" level="INFO">VALUE: [7.534699999999991e-05, 7.559700000000016e-05, 7.538899999999862e-05, 7.536099999999948e-05, 7.613900000000284e-05, 7.566700000000148e-05, 7.594500000000087e-05, 7.61249999999998e-05, 7.61379999999999e-05, 7.623600000000036e-05, 7.559700000000016e-05, 7.580599999999771e-05, 7.537499999999905e-05, 7.620800000000122e-05, 7.579100000000213e-05, 7.540300000000166e-05, 7.59579999999975e-05, 7.611100000000023e-05, 7.54440000000009e-05, 7.599999999999968e-05, 7.576400000000247e-05, 7.624999999999993e-05, 7.572299999999976e-05, 7.565299999999844e-05, 7.545899999999994e-05, 7.565199999999897e-05, 7.606900000000152e-05, 7.61249999999998e-05, 7.623600000000036e-05, 7.59440000000014e-05, 7.577799999999857e-05, 7.611100000000023e-05, 7.565299999999844e-05, 7.604199999999839e-05, 7.533399999999982e-05, 7.570900000000019e-05, 7.609800000000014e-05, 7.579200000000161e-05, 7.618099999999808e-05, 7.63189999999983e-05, 7.605500000000195e-05, 7.587499999999955e-05, 7.547200000000004e-05, 7.545800000000047e-05, 7.587499999999955e-05, 7.534699999999991e-05, 7.584799999999989e-05, 7.59310000000013e-05, 7.59310000000013e-05, 7.573599999999986e-05]</msg>
<status status="PASS" starttime="20201029 18:18:02.235" endtime="20201029 18:18:02.238"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:02.230" endtime="20201029 18:18:02.239"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:02.244" endtime="20201029 18:18:02.263"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:02.242" endtime="20201029 18:18:02.264"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:02.240" endtime="20201029 18:18:02.264"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:01.880" endtime="20201029 18:18:02.264"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:01.879" endtime="20201029 18:18:02.265"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:02.273" endtime="20201029 18:18:02.291"></status>
</kw>
<msg timestamp="20201029 18:18:02.292" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:02.272" endtime="20201029 18:18:02.292"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:02.294" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:02.293" endtime="20201029 18:18:02.295"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:02.295" endtime="20201029 18:18:02.297"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:02.269" endtime="20201029 18:18:02.298"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:02.267" endtime="20201029 18:18:02.298"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:02.305" endtime="20201029 18:18:02.592"></status>
</kw>
<msg timestamp="20201029 18:18:02.595" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020625903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020703014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:02.303" endtime="20201029 18:18:02.595"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:02.603" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020625903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020703014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:02.596" endtime="20201029 18:18:02.604"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:02.604" endtime="20201029 18:18:02.606"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:02.300" endtime="20201029 18:18:02.607"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:02.299" endtime="20201029 18:18:02.607"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:02.611" level="INFO">${RESULT} = [{'diff': 7.711099999999776e-05}, {'diff': 7.723600000000136e-05}, {'diff': 7.656899999999855e-05}, {'diff': 7.717999999999961e-05}, {'diff': 7.697200000000154e-05}, {'diff': 7.716699999999951e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:18:02.608" endtime="20201029 18:18:02.611"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:02.615" level="INFO">${ACCURACY} = {'diff': [7.711099999999776e-05, 7.723600000000136e-05, 7.656899999999855e-05, 7.717999999999961e-05, 7.697200000000154e-05, 7.716699999999951e-05, 7.669400000000215e-05, 7.663899999999987e-05, 7.7181...</msg>
<status status="PASS" starttime="20201029 18:18:02.612" endtime="20201029 18:18:02.615"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:02.620" level="INFO">NAME: accuracy-TIMER_SLEEP-62-philip</msg>
<status status="PASS" starttime="20201029 18:18:02.619" endtime="20201029 18:18:02.620"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:02.622" level="INFO">VALUE: [7.711099999999776e-05, 7.723600000000136e-05, 7.656899999999855e-05, 7.717999999999961e-05, 7.697200000000154e-05, 7.716699999999951e-05, 7.669400000000215e-05, 7.663899999999987e-05, 7.718100000000255e-05, 7.686100000000098e-05, 7.656999999999803e-05, 7.723600000000136e-05, 7.675000000000043e-05, 7.641600000000276e-05, 7.658299999999812e-05, 7.684700000000141e-05, 7.683299999999837e-05, 7.694399999999893e-05, 7.706899999999905e-05, 7.687500000000055e-05, 7.641599999999929e-05, 7.661100000000073e-05, 7.693099999999883e-05, 7.687500000000055e-05, 7.705599999999896e-05, 7.670900000000119e-05, 7.647300000000051e-05, 7.68050000000027e-05, 7.684699999999794e-05, 7.700000000000068e-05, 7.713900000000037e-05, 7.716600000000004e-05, 7.72640000000005e-05, 7.634700000000091e-05, 7.686100000000098e-05, 7.69449999999984e-05, 7.688900000000012e-05, 7.688900000000012e-05, 7.702799999999982e-05, 7.679099999999967e-05, 7.64029999999992e-05, 7.697200000000154e-05, 7.716600000000004e-05, 7.654099999999942e-05, 7.708299999999862e-05, 7.634700000000091e-05, 7.6764e-05, 7.693099999999883e-05, 7.713900000000037e-05, 7.69029999999997e-05]</msg>
<status status="PASS" starttime="20201029 18:18:02.621" endtime="20201029 18:18:02.623"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:02.616" endtime="20201029 18:18:02.624"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:02.627" endtime="20201029 18:18:02.647"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:02.626" endtime="20201029 18:18:02.647"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:02.625" endtime="20201029 18:18:02.648"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:02.265" endtime="20201029 18:18:02.648"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:02.265" endtime="20201029 18:18:02.648"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:02.657" endtime="20201029 18:18:02.678"></status>
</kw>
<msg timestamp="20201029 18:18:02.678" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:02.655" endtime="20201029 18:18:02.678"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:02.681" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:02.679" endtime="20201029 18:18:02.681"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:02.682" endtime="20201029 18:18:02.684"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:02.653" endtime="20201029 18:18:02.684"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:02.650" endtime="20201029 18:18:02.685"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:02.691" endtime="20201029 18:18:02.977"></status>
</kw>
<msg timestamp="20201029 18:18:02.980" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023030542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023108111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:02.689" endtime="20201029 18:18:02.980"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:02.988" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023030542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023108111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:02.981" endtime="20201029 18:18:02.988"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:02.989" endtime="20201029 18:18:02.991"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:02.687" endtime="20201029 18:18:02.991"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:02.685" endtime="20201029 18:18:02.992"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:02.996" level="INFO">${RESULT} = [{'diff': 7.756899999999955e-05}, {'diff': 7.783300000000284e-05}, {'diff': 7.784699999999894e-05}, {'diff': 7.7457999999999e-05}, {'diff': 7.741700000000323e-05}, {'diff': 7.816699999999704e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 18:18:02.993" endtime="20201029 18:18:02.996"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:03.000" level="INFO">${ACCURACY} = {'diff': [7.756899999999955e-05, 7.783300000000284e-05, 7.784699999999894e-05, 7.7457999999999e-05, 7.741700000000323e-05, 7.816699999999704e-05, 7.745899999999847e-05, 7.74449999999989e-05, 7.7819999...</msg>
<status status="PASS" starttime="20201029 18:18:02.997" endtime="20201029 18:18:03.000"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:03.004" level="INFO">NAME: accuracy-TIMER_SLEEP-63-philip</msg>
<status status="PASS" starttime="20201029 18:18:03.003" endtime="20201029 18:18:03.005"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:03.007" level="INFO">VALUE: [7.756899999999955e-05, 7.783300000000284e-05, 7.784699999999894e-05, 7.7457999999999e-05, 7.741700000000323e-05, 7.816699999999704e-05, 7.745899999999847e-05, 7.74449999999989e-05, 7.781999999999928e-05, 7.790200000000122e-05, 7.7457999999999e-05, 7.836100000000248e-05, 7.772200000000229e-05, 7.816600000000104e-05, 7.833399999999935e-05, 7.781999999999928e-05, 7.777800000000057e-05, 7.748599999999814e-05, 7.780599999999971e-05, 7.761100000000173e-05, 7.745899999999847e-05, 7.784699999999894e-05, 7.799999999999821e-05, 7.784699999999894e-05, 7.773600000000186e-05, 7.798599999999864e-05, 7.79030000000007e-05, 7.783300000000284e-05, 7.788899999999765e-05, 7.815300000000094e-05, 7.827800000000107e-05, 7.816700000000051e-05, 7.818100000000008e-05, 7.798600000000211e-05, 7.783299999999937e-05, 7.798600000000211e-05, 7.76380000000014e-05, 7.820799999999975e-05, 7.750000000000118e-05, 7.758299999999912e-05, 7.76389999999974e-05, 7.793000000000036e-05, 7.816700000000051e-05, 7.738899999999715e-05, 7.768099999999958e-05, 7.816700000000051e-05, 7.772199999999882e-05, 7.74030000000002e-05, 7.745899999999847e-05, 7.754100000000042e-05]</msg>
<status status="PASS" starttime="20201029 18:18:03.006" endtime="20201029 18:18:03.009"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:03.001" endtime="20201029 18:18:03.009"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:03.013" endtime="20201029 18:18:03.032"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:03.011" endtime="20201029 18:18:03.033"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:03.010" endtime="20201029 18:18:03.033"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:02.649" endtime="20201029 18:18:03.033"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:02.648" endtime="20201029 18:18:03.034"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:03.042" endtime="20201029 18:18:03.061"></status>
</kw>
<msg timestamp="20201029 18:18:03.061" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:03.041" endtime="20201029 18:18:03.062"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:03.064" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:03.062" endtime="20201029 18:18:03.064"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:03.065" endtime="20201029 18:18:03.067"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:03.038" endtime="20201029 18:18:03.067"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:03.036" endtime="20201029 18:18:03.067"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:03.074" endtime="20201029 18:18:03.360"></status>
</kw>
<msg timestamp="20201029 18:18:03.364" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019809208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019887639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:03.072" endtime="20201029 18:18:03.364"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:03.372" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019809208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019887639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:03.365" endtime="20201029 18:18:03.372"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:03.373" endtime="20201029 18:18:03.375"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:03.070" endtime="20201029 18:18:03.375"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:03.068" endtime="20201029 18:18:03.376"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:03.379" level="INFO">${RESULT} = [{'diff': 7.843100000000033e-05}, {'diff': 7.899999999999921e-05}, {'diff': 7.923599999999989e-05}, {'diff': 7.909799999999967e-05}, {'diff': 7.916699999999804e-05}, {'diff': 7.912499999999933e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:18:03.376" endtime="20201029 18:18:03.380"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:03.384" level="INFO">${ACCURACY} = {'diff': [7.843100000000033e-05, 7.899999999999921e-05, 7.923599999999989e-05, 7.909799999999967e-05, 7.916699999999804e-05, 7.912499999999933e-05, 7.858300000000012e-05, 7.906899999999759e-05, 7.9290...</msg>
<status status="PASS" starttime="20201029 18:18:03.380" endtime="20201029 18:18:03.385"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:03.389" level="INFO">NAME: accuracy-TIMER_SLEEP-64-philip</msg>
<status status="PASS" starttime="20201029 18:18:03.388" endtime="20201029 18:18:03.389"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:03.392" level="INFO">VALUE: [7.843100000000033e-05, 7.899999999999921e-05, 7.923599999999989e-05, 7.909799999999967e-05, 7.916699999999804e-05, 7.912499999999933e-05, 7.858300000000012e-05, 7.906899999999759e-05, 7.92909999999987e-05, 7.886100000000298e-05, 7.93190000000013e-05, 7.88190000000008e-05, 7.838900000000162e-05, 7.899999999999921e-05, 7.883300000000037e-05, 7.907000000000053e-05, 7.872300000000276e-05, 7.911099999999976e-05, 7.838899999999815e-05, 7.933300000000088e-05, 7.874999999999896e-05, 7.869400000000068e-05, 7.924999999999946e-05, 7.891600000000179e-05, 7.888899999999865e-05, 7.856900000000056e-05, 7.901400000000225e-05, 7.868100000000058e-05, 7.879100000000167e-05, 7.926399999999903e-05, 7.919500000000065e-05, 7.901399999999878e-05, 7.893100000000083e-05, 7.912499999999933e-05, 7.844399999999696e-05, 7.873599999999939e-05, 7.886099999999951e-05, 7.887499999999908e-05, 7.887499999999908e-05, 7.874999999999896e-05, 7.920900000000022e-05, 7.861099999999926e-05, 7.911099999999976e-05, 7.873700000000233e-05, 7.922200000000032e-05, 7.88329999999969e-05, 7.904100000000192e-05, 7.919400000000118e-05, 7.84449999999999e-05, 7.927800000000207e-05]</msg>
<status status="PASS" starttime="20201029 18:18:03.390" endtime="20201029 18:18:03.392"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:03.385" endtime="20201029 18:18:03.393"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:03.397" endtime="20201029 18:18:03.416"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:03.395" endtime="20201029 18:18:03.417"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:03.394" endtime="20201029 18:18:03.417"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:03.034" endtime="20201029 18:18:03.417"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:03.034" endtime="20201029 18:18:03.417"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:03.426" endtime="20201029 18:18:03.443"></status>
</kw>
<msg timestamp="20201029 18:18:03.444" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:03.424" endtime="20201029 18:18:03.444"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:03.446" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:03.445" endtime="20201029 18:18:03.446"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:03.447" endtime="20201029 18:18:03.449"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:03.422" endtime="20201029 18:18:03.449"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:03.420" endtime="20201029 18:18:03.450"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:03.456" endtime="20201029 18:18:03.744"></status>
</kw>
<msg timestamp="20201029 18:18:03.747" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019782167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019862194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:03.455" endtime="20201029 18:18:03.747"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:03.755" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019782167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019862194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:03.748" endtime="20201029 18:18:03.756"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:03.756" endtime="20201029 18:18:03.758"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:03.452" endtime="20201029 18:18:03.759"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:03.450" endtime="20201029 18:18:03.759"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:03.764" level="INFO">${RESULT} = [{'diff': 8.002699999999988e-05}, {'diff': 7.979199999999867e-05}, {'diff': 7.936100000000001e-05}, {'diff': 7.9764000000003e-05}, {'diff': 7.994499999999793e-05}, {'diff': 7.980599999999824e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 18:18:03.760" endtime="20201029 18:18:03.764"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:03.768" level="INFO">${ACCURACY} = {'diff': [8.002699999999988e-05, 7.979199999999867e-05, 7.936100000000001e-05, 7.9764000000003e-05, 7.994499999999793e-05, 7.980599999999824e-05, 8.018099999999861e-05, 7.980600000000171e-05, 7.998600...</msg>
<status status="PASS" starttime="20201029 18:18:03.765" endtime="20201029 18:18:03.768"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:03.773" level="INFO">NAME: accuracy-TIMER_SLEEP-65-philip</msg>
<status status="PASS" starttime="20201029 18:18:03.771" endtime="20201029 18:18:03.773"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:03.775" level="INFO">VALUE: [8.002699999999988e-05, 7.979199999999867e-05, 7.936100000000001e-05, 7.9764000000003e-05, 7.994499999999793e-05, 7.980599999999824e-05, 8.018099999999861e-05, 7.980600000000171e-05, 7.998600000000064e-05, 7.945900000000047e-05, 7.995900000000097e-05, 8.000000000000021e-05, 7.965299999999897e-05, 7.96519999999995e-05, 7.940199999999925e-05, 8.005499999999902e-05, 7.988899999999965e-05, 8.029199999999917e-05, 7.95970000000007e-05, 7.936100000000001e-05, 7.977800000000257e-05, 8.023600000000089e-05, 7.96389999999994e-05, 7.99169999999988e-05, 7.948600000000014e-05, 7.984800000000042e-05, 8.025000000000046e-05, 7.97909999999992e-05, 8.023600000000089e-05, 7.940299999999872e-05, 7.981899999999834e-05, 8.023600000000089e-05, 7.949999999999971e-05, 7.987500000000008e-05, 8.005600000000196e-05, 8.023600000000089e-05, 8.004199999999892e-05, 7.97909999999992e-05, 7.991700000000226e-05, 7.961100000000026e-05, 7.995799999999803e-05, 7.990199999999975e-05, 8.018000000000261e-05, 7.997200000000107e-05, 7.987500000000008e-05, 8.004199999999892e-05, 8.002799999999935e-05, 7.987500000000008e-05, 8.002799999999935e-05, 8.009800000000067e-05]</msg>
<status status="PASS" starttime="20201029 18:18:03.774" endtime="20201029 18:18:03.776"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:03.769" endtime="20201029 18:18:03.776"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:03.780" endtime="20201029 18:18:03.800"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:03.779" endtime="20201029 18:18:03.800"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:03.777" endtime="20201029 18:18:03.801"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:03.418" endtime="20201029 18:18:03.801"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:03.418" endtime="20201029 18:18:03.801"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:03.810" endtime="20201029 18:18:03.830"></status>
</kw>
<msg timestamp="20201029 18:18:03.830" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:03.809" endtime="20201029 18:18:03.831"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:03.833" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:03.831" endtime="20201029 18:18:03.833"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:03.834" endtime="20201029 18:18:03.836"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:03.806" endtime="20201029 18:18:03.836"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:03.804" endtime="20201029 18:18:03.837"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:03.844" endtime="20201029 18:18:04.153"></status>
</kw>
<msg timestamp="20201029 18:18:04.156" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021277431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021358569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:03.842" endtime="20201029 18:18:04.156"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:04.164" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021277431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021358569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:04.157" endtime="20201029 18:18:04.165"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:04.165" endtime="20201029 18:18:04.167"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:03.839" endtime="20201029 18:18:04.168"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:03.837" endtime="20201029 18:18:04.168"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:04.172" level="INFO">${RESULT} = [{'diff': 8.113800000000143e-05}, {'diff': 8.087500000000108e-05}, {'diff': 8.098600000000164e-05}, {'diff': 8.112500000000133e-05}, {'diff': 8.109699999999873e-05}, {'diff': 8.074999999999749e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:18:04.169" endtime="20201029 18:18:04.173"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:04.177" level="INFO">${ACCURACY} = {'diff': [8.113800000000143e-05, 8.087500000000108e-05, 8.098600000000164e-05, 8.112500000000133e-05, 8.109699999999873e-05, 8.074999999999749e-05, 8.05970000000017e-05, 8.095799999999903e-05, 8.05140...</msg>
<status status="PASS" starttime="20201029 18:18:04.173" endtime="20201029 18:18:04.177"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:04.181" level="INFO">NAME: accuracy-TIMER_SLEEP-66-philip</msg>
<status status="PASS" starttime="20201029 18:18:04.180" endtime="20201029 18:18:04.182"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:04.184" level="INFO">VALUE: [8.113800000000143e-05, 8.087500000000108e-05, 8.098600000000164e-05, 8.112500000000133e-05, 8.109699999999873e-05, 8.074999999999749e-05, 8.05970000000017e-05, 8.095799999999903e-05, 8.051400000000028e-05, 8.125000000000146e-05, 8.075000000000096e-05, 8.038899999999669e-05, 8.07910000000002e-05, 8.08329999999989e-05, 8.11109999999983e-05, 8.081899999999934e-05, 8.076399999999706e-05, 8.076400000000053e-05, 8.12910000000007e-05, 8.051400000000028e-05, 8.07780000000001e-05, 8.07780000000001e-05, 8.056999999999856e-05, 8.074999999999749e-05, 8.065299999999997e-05, 8.087500000000108e-05, 8.129099999999723e-05, 8.07910000000002e-05, 8.098600000000164e-05, 8.13329999999994e-05, 8.042999999999939e-05, 8.122200000000232e-05, 8.102800000000035e-05, 8.126400000000103e-05, 8.084800000000142e-05, 8.055599999999899e-05, 8.054199999999942e-05, 8.065299999999997e-05, 8.124999999999799e-05, 8.056899999999909e-05, 8.058299999999866e-05, 8.072199999999835e-05, 8.072200000000182e-05, 8.102800000000035e-05, 8.101400000000078e-05, 8.063899999999694e-05, 8.069500000000215e-05, 8.045900000000147e-05, 8.065299999999997e-05, 8.051299999999734e-05]</msg>
<status status="PASS" starttime="20201029 18:18:04.183" endtime="20201029 18:18:04.186"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:04.178" endtime="20201029 18:18:04.186"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:04.190" endtime="20201029 18:18:04.209"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:04.188" endtime="20201029 18:18:04.210"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:04.187" endtime="20201029 18:18:04.210"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:03.802" endtime="20201029 18:18:04.211"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:03.802" endtime="20201029 18:18:04.211"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:04.220" endtime="20201029 18:18:04.240"></status>
</kw>
<msg timestamp="20201029 18:18:04.240" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:04.218" endtime="20201029 18:18:04.241"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:04.243" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:04.242" endtime="20201029 18:18:04.243"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:04.244" endtime="20201029 18:18:04.246"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:04.216" endtime="20201029 18:18:04.246"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:04.214" endtime="20201029 18:18:04.247"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:04.254" endtime="20201029 18:18:04.540"></status>
</kw>
<msg timestamp="20201029 18:18:04.543" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021416569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021498847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:04.252" endtime="20201029 18:18:04.544"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:04.552" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021416569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021498847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:04.545" endtime="20201029 18:18:04.552"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:04.553" endtime="20201029 18:18:04.555"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:04.249" endtime="20201029 18:18:04.555"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:04.248" endtime="20201029 18:18:04.556"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:04.560" level="INFO">${RESULT} = [{'diff': 8.22780000000016e-05}, {'diff': 8.195800000000003e-05}, {'diff': 8.173599999999892e-05}, {'diff': 8.145799999999953e-05}, {'diff': 8.21109999999993e-05}, {'diff': 8.230600000000074e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 18:18:04.557" endtime="20201029 18:18:04.560"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:04.565" level="INFO">${ACCURACY} = {'diff': [8.22780000000016e-05, 8.195800000000003e-05, 8.173599999999892e-05, 8.145799999999953e-05, 8.21109999999993e-05, 8.230600000000074e-05, 8.205600000000049e-05, 8.1458999999999e-05, 8.17499999...</msg>
<status status="PASS" starttime="20201029 18:18:04.561" endtime="20201029 18:18:04.566"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:04.570" level="INFO">NAME: accuracy-TIMER_SLEEP-67-philip</msg>
<status status="PASS" starttime="20201029 18:18:04.569" endtime="20201029 18:18:04.570"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:04.573" level="INFO">VALUE: [8.22780000000016e-05, 8.195800000000003e-05, 8.173599999999892e-05, 8.145799999999953e-05, 8.21109999999993e-05, 8.230600000000074e-05, 8.205600000000049e-05, 8.1458999999999e-05, 8.174999999999849e-05, 8.138799999999821e-05, 8.226400000000203e-05, 8.224999999999899e-05, 8.18329999999999e-05, 8.16390000000014e-05, 8.172199999999935e-05, 8.181999999999981e-05, 8.21109999999993e-05, 8.159699999999923e-05, 8.193100000000036e-05, 8.212499999999887e-05, 8.152799999999738e-05, 8.206900000000059e-05, 8.166600000000107e-05, 8.180500000000077e-05, 8.22910000000017e-05, 8.19719999999996e-05, 8.17780000000011e-05, 8.179200000000067e-05, 8.184699999999948e-05, 8.224999999999899e-05, 8.147200000000257e-05, 8.19719999999996e-05, 8.162500000000183e-05, 8.148599999999867e-05, 8.155599999999999e-05, 8.177799999999763e-05, 8.195800000000003e-05, 8.144399999999996e-05, 8.154099999999748e-05, 8.156999999999956e-05, 8.151400000000128e-05, 8.17230000000023e-05, 8.18329999999999e-05, 8.219500000000018e-05, 8.140300000000072e-05, 8.177799999999763e-05, 8.174999999999849e-05, 8.133399999999888e-05, 8.18329999999999e-05, 8.22919999999977e-05]</msg>
<status status="PASS" starttime="20201029 18:18:04.571" endtime="20201029 18:18:04.573"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:04.566" endtime="20201029 18:18:04.574"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:04.578" endtime="20201029 18:18:04.597"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:04.576" endtime="20201029 18:18:04.598"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:04.575" endtime="20201029 18:18:04.598"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:04.212" endtime="20201029 18:18:04.599"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:04.211" endtime="20201029 18:18:04.599"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:04.608" endtime="20201029 18:18:04.626"></status>
</kw>
<msg timestamp="20201029 18:18:04.626" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:04.606" endtime="20201029 18:18:04.627"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:04.629" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:04.627" endtime="20201029 18:18:04.629"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:04.630" endtime="20201029 18:18:04.632"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:04.603" endtime="20201029 18:18:04.632"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:04.601" endtime="20201029 18:18:04.633"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:04.640" endtime="20201029 18:18:04.926"></status>
</kw>
<msg timestamp="20201029 18:18:04.929" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020762542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020845361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:04.638" endtime="20201029 18:18:04.930"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:04.938" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020762542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020845361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:04.930" endtime="20201029 18:18:04.938"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:04.939" endtime="20201029 18:18:04.941"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:04.635" endtime="20201029 18:18:04.942"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:04.634" endtime="20201029 18:18:04.942"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:04.946" level="INFO">${RESULT} = [{'diff': 8.281900000000134e-05}, {'diff': 8.262499999999937e-05}, {'diff': 8.336100000000055e-05}, {'diff': 8.288899999999919e-05}, {'diff': 8.238899999999869e-05}, {'diff': 8.254200000000142e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:18:04.943" endtime="20201029 18:18:04.946"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:04.950" level="INFO">${ACCURACY} = {'diff': [8.281900000000134e-05, 8.262499999999937e-05, 8.336100000000055e-05, 8.288899999999919e-05, 8.238899999999869e-05, 8.254200000000142e-05, 8.327699999999966e-05, 8.316600000000257e-05, 8.2472...</msg>
<status status="PASS" starttime="20201029 18:18:04.947" endtime="20201029 18:18:04.951"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:04.955" level="INFO">NAME: accuracy-TIMER_SLEEP-68-philip</msg>
<status status="PASS" starttime="20201029 18:18:04.954" endtime="20201029 18:18:04.955"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:04.958" level="INFO">VALUE: [8.281900000000134e-05, 8.262499999999937e-05, 8.336100000000055e-05, 8.288899999999919e-05, 8.238899999999869e-05, 8.254200000000142e-05, 8.327699999999966e-05, 8.316600000000257e-05, 8.24720000000001e-05, 8.26659999999986e-05, 8.27910000000022e-05, 8.240300000000172e-05, 8.273599999999992e-05, 8.297199999999713e-05, 8.274999999999949e-05, 8.244500000000043e-05, 8.258400000000013e-05, 8.322300000000032e-05, 8.269499999999722e-05, 8.28330000000009e-05, 8.320800000000128e-05, 8.286100000000005e-05, 8.23049999999978e-05, 8.330599999999827e-05, 8.26529999999985e-05, 8.292999999999842e-05, 8.251399999999881e-05, 8.254199999999795e-05, 8.312499999999987e-05, 8.312499999999987e-05, 8.27919999999982e-05, 8.26109999999998e-05, 8.233399999999988e-05, 8.32919999999987e-05, 8.248599999999967e-05, 8.273599999999992e-05, 8.319499999999772e-05, 8.280500000000177e-05, 8.29309999999979e-05, 8.29309999999979e-05, 8.295800000000103e-05, 8.319500000000118e-05, 8.238900000000215e-05, 8.312499999999987e-05, 8.293100000000136e-05, 8.312499999999987e-05, 8.29170000000018e-05, 8.24720000000001e-05, 8.28049999999983e-05, 8.29309999999979e-05]</msg>
<status status="PASS" starttime="20201029 18:18:04.956" endtime="20201029 18:18:04.958"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:04.951" endtime="20201029 18:18:04.959"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:04.963" endtime="20201029 18:18:04.983"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:04.961" endtime="20201029 18:18:04.983"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:04.960" endtime="20201029 18:18:04.983"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:04.600" endtime="20201029 18:18:04.984"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:04.599" endtime="20201029 18:18:04.984"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:04.993" endtime="20201029 18:18:05.013"></status>
</kw>
<msg timestamp="20201029 18:18:05.013" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:04.991" endtime="20201029 18:18:05.013"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:05.016" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:05.014" endtime="20201029 18:18:05.016"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:05.017" endtime="20201029 18:18:05.018"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:04.989" endtime="20201029 18:18:05.019"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:04.987" endtime="20201029 18:18:05.019"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:05.026" endtime="20201029 18:18:05.314"></status>
</kw>
<msg timestamp="20201029 18:18:05.317" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021387431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021471389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:05.025" endtime="20201029 18:18:05.317"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:05.326" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021387431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021471389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:05.318" endtime="20201029 18:18:05.326"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:05.327" endtime="20201029 18:18:05.329"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:05.022" endtime="20201029 18:18:05.329"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:05.020" endtime="20201029 18:18:05.330"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:05.334" level="INFO">${RESULT} = [{'diff': 8.395800000000203e-05}, {'diff': 8.402799999999988e-05}, {'diff': 8.39170000000028e-05}, {'diff': 8.333400000000088e-05}, {'diff': 8.34729999999971e-05}, {'diff': 8.341599999999935e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 18:18:05.330" endtime="20201029 18:18:05.334"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:05.338" level="INFO">${ACCURACY} = {'diff': [8.395800000000203e-05, 8.402799999999988e-05, 8.39170000000028e-05, 8.333400000000088e-05, 8.34729999999971e-05, 8.341599999999935e-05, 8.348600000000067e-05, 8.395799999999856e-05, 8.413900...</msg>
<status status="PASS" starttime="20201029 18:18:05.335" endtime="20201029 18:18:05.338"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:05.347" level="INFO">NAME: accuracy-TIMER_SLEEP-69-philip</msg>
<status status="PASS" starttime="20201029 18:18:05.343" endtime="20201029 18:18:05.347"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:05.350" level="INFO">VALUE: [8.395800000000203e-05, 8.402799999999988e-05, 8.39170000000028e-05, 8.333400000000088e-05, 8.34729999999971e-05, 8.341599999999935e-05, 8.348600000000067e-05, 8.395799999999856e-05, 8.413900000000044e-05, 8.409700000000173e-05, 8.345800000000153e-05, 8.404199999999945e-05, 8.419499999999872e-05, 8.336099999999708e-05, 8.405599999999902e-05, 8.416699999999958e-05, 8.425000000000099e-05, 8.377700000000016e-05, 8.376400000000006e-05, 8.375000000000049e-05, 8.409700000000173e-05, 8.41110000000013e-05, 8.394400000000246e-05, 8.373600000000092e-05, 8.405599999999902e-05, 8.390299999999976e-05, 8.407000000000206e-05, 8.348600000000067e-05, 8.363899999999994e-05, 8.426300000000109e-05, 8.340300000000272e-05, 8.409699999999826e-05, 8.406899999999912e-05, 8.41110000000013e-05, 8.334700000000098e-05, 8.375000000000049e-05, 8.354199999999895e-05, 8.375000000000049e-05, 8.39859999999977e-05, 8.405599999999902e-05, 8.388900000000019e-05, 8.348600000000067e-05, 8.375000000000049e-05, 8.351300000000034e-05, 8.351399999999981e-05, 8.402799999999988e-05, 8.377799999999963e-05, 8.413900000000044e-05, 8.358300000000166e-05, 8.356900000000209e-05]</msg>
<status status="PASS" starttime="20201029 18:18:05.348" endtime="20201029 18:18:05.358"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:05.339" endtime="20201029 18:18:05.360"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:05.366" endtime="20201029 18:18:05.386"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:05.363" endtime="20201029 18:18:05.387"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:05.361" endtime="20201029 18:18:05.387"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:04.985" endtime="20201029 18:18:05.388"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:04.984" endtime="20201029 18:18:05.388"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:05.397" endtime="20201029 18:18:05.416"></status>
</kw>
<msg timestamp="20201029 18:18:05.416" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:05.395" endtime="20201029 18:18:05.416"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:05.419" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:05.417" endtime="20201029 18:18:05.419"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:05.420" endtime="20201029 18:18:05.422"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:05.393" endtime="20201029 18:18:05.422"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:05.390" endtime="20201029 18:18:05.423"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:05.429" endtime="20201029 18:18:05.715"></status>
</kw>
<msg timestamp="20201029 18:18:05.718" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020473861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020558278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:05.428" endtime="20201029 18:18:05.718"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:05.726" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020473861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020558278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:05.719" endtime="20201029 18:18:05.727"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:05.728" endtime="20201029 18:18:05.729"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:05.425" endtime="20201029 18:18:05.730"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:05.423" endtime="20201029 18:18:05.730"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:05.735" level="INFO">${RESULT} = [{'diff': 8.441699999999983e-05}, {'diff': 8.469499999999922e-05}, {'diff': 8.516700000000058e-05}, {'diff': 8.505500000000055e-05}, {'diff': 8.440200000000078e-05}, {'diff': 8.46660000000006e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:18:05.731" endtime="20201029 18:18:05.735"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:05.740" level="INFO">${ACCURACY} = {'diff': [8.441699999999983e-05, 8.469499999999922e-05, 8.516700000000058e-05, 8.505500000000055e-05, 8.440200000000078e-05, 8.46660000000006e-05, 8.456999999999909e-05, 8.511099999999883e-05, 8.46530...</msg>
<status status="PASS" starttime="20201029 18:18:05.736" endtime="20201029 18:18:05.740"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:05.745" level="INFO">NAME: accuracy-TIMER_SLEEP-70-philip</msg>
<status status="PASS" starttime="20201029 18:18:05.743" endtime="20201029 18:18:05.745"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:05.747" level="INFO">VALUE: [8.441699999999983e-05, 8.469499999999922e-05, 8.516700000000058e-05, 8.505500000000055e-05, 8.440200000000078e-05, 8.46660000000006e-05, 8.456999999999909e-05, 8.511099999999883e-05, 8.46530000000005e-05, 8.513899999999797e-05, 8.494500000000293e-05, 8.440300000000026e-05, 8.46249999999979e-05, 8.522299999999886e-05, 8.49590000000025e-05, 8.444500000000243e-05, 8.501399999999784e-05, 8.523600000000242e-05, 8.470799999999931e-05, 8.47920000000002e-05, 8.440300000000026e-05, 8.49859999999987e-05, 8.438900000000069e-05, 8.473599999999845e-05, 8.476400000000106e-05, 8.436100000000155e-05, 8.433399999999841e-05, 8.487500000000162e-05, 8.515199999999806e-05, 8.455500000000005e-05, 8.449999999999777e-05, 8.46660000000006e-05, 8.476400000000106e-05, 8.477800000000063e-05, 8.452800000000038e-05, 8.534700000000298e-05, 8.480599999999977e-05, 8.444499999999897e-05, 8.50980000000022e-05, 8.465200000000103e-05, 8.494399999999999e-05, 8.52920000000007e-05, 8.495800000000303e-05, 8.487499999999815e-05, 8.493000000000042e-05, 8.491700000000033e-05, 8.451400000000081e-05, 8.506999999999959e-05, 8.518100000000015e-05, 8.472199999999888e-05]</msg>
<status status="PASS" starttime="20201029 18:18:05.746" endtime="20201029 18:18:05.748"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:05.741" endtime="20201029 18:18:05.749"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:05.752" endtime="20201029 18:18:05.772"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:05.751" endtime="20201029 18:18:05.773"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:05.750" endtime="20201029 18:18:05.773"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:05.389" endtime="20201029 18:18:05.773"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:05.388" endtime="20201029 18:18:05.773"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:05.782" endtime="20201029 18:18:05.800"></status>
</kw>
<msg timestamp="20201029 18:18:05.801" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:05.781" endtime="20201029 18:18:05.801"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:05.804" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:05.802" endtime="20201029 18:18:05.804"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:05.805" endtime="20201029 18:18:05.806"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:05.778" endtime="20201029 18:18:05.807"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:05.776" endtime="20201029 18:18:05.807"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:05.814" endtime="20201029 18:18:06.104"></status>
</kw>
<msg timestamp="20201029 18:18:06.107" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020280625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020366208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:05.813" endtime="20201029 18:18:06.107"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:06.115" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020280625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020366208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:06.108" endtime="20201029 18:18:06.116"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:06.117" endtime="20201029 18:18:06.118"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:05.810" endtime="20201029 18:18:06.119"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:05.808" endtime="20201029 18:18:06.119"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:06.123" level="INFO">${RESULT} = [{'diff': 8.558300000000019e-05}, {'diff': 8.599999999999927e-05}, {'diff': 8.587499999999915e-05}, {'diff': 8.56249999999989e-05}, {'diff': 8.545800000000006e-05}, {'diff': 8.570899999999979e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:18:06.120" endtime="20201029 18:18:06.124"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:06.128" level="INFO">${ACCURACY} = {'diff': [8.558300000000019e-05, 8.599999999999927e-05, 8.587499999999915e-05, 8.56249999999989e-05, 8.545800000000006e-05, 8.570899999999979e-05, 8.591700000000133e-05, 8.562500000000237e-05, 8.59309...</msg>
<status status="PASS" starttime="20201029 18:18:06.125" endtime="20201029 18:18:06.128"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:06.132" level="INFO">NAME: accuracy-TIMER_SLEEP-71-philip</msg>
<status status="PASS" starttime="20201029 18:18:06.131" endtime="20201029 18:18:06.133"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:06.135" level="INFO">VALUE: [8.558300000000019e-05, 8.599999999999927e-05, 8.587499999999915e-05, 8.56249999999989e-05, 8.545800000000006e-05, 8.570899999999979e-05, 8.591700000000133e-05, 8.562500000000237e-05, 8.593099999999743e-05, 8.541599999999788e-05, 8.629099999999876e-05, 8.552699999999844e-05, 8.605599999999755e-05, 8.573599999999945e-05, 8.544499999999997e-05, 8.6153000000002e-05, 8.618100000000115e-05, 8.573599999999945e-05, 8.577800000000163e-05, 8.558399999999966e-05, 8.534799999999898e-05, 8.623699999999943e-05, 8.619400000000124e-05, 8.583299999999697e-05, 8.580499999999783e-05, 8.53469999999995e-05, 8.616599999999863e-05, 8.544499999999997e-05, 8.611099999999983e-05, 8.547199999999963e-05, 8.576400000000206e-05, 8.611099999999983e-05, 8.590300000000176e-05, 8.61119999999993e-05, 8.572199999999988e-05, 8.622200000000038e-05, 8.540300000000126e-05, 8.542999999999745e-05, 8.576399999999859e-05, 8.558300000000019e-05, 8.622200000000038e-05, 8.626399999999909e-05, 8.623599999999995e-05, 8.57920000000012e-05, 8.545899999999954e-05, 8.538900000000169e-05, 8.580600000000077e-05, 8.611099999999983e-05, 8.597200000000013e-05, 8.573599999999945e-05]</msg>
<status status="PASS" starttime="20201029 18:18:06.134" endtime="20201029 18:18:06.136"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:06.129" endtime="20201029 18:18:06.136"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:06.140" endtime="20201029 18:18:06.160"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:06.139" endtime="20201029 18:18:06.160"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:06.137" endtime="20201029 18:18:06.161"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:05.774" endtime="20201029 18:18:06.161"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:05.774" endtime="20201029 18:18:06.161"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:06.170" endtime="20201029 18:18:06.194"></status>
</kw>
<msg timestamp="20201029 18:18:06.194" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:06.169" endtime="20201029 18:18:06.194"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:06.197" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:06.195" endtime="20201029 18:18:06.197"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:06.198" endtime="20201029 18:18:06.200"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:06.166" endtime="20201029 18:18:06.200"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:06.164" endtime="20201029 18:18:06.201"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:06.207" endtime="20201029 18:18:06.494"></status>
</kw>
<msg timestamp="20201029 18:18:06.497" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024439889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024526722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:06.206" endtime="20201029 18:18:06.498"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:06.506" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024439889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024526722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:06.498" endtime="20201029 18:18:06.506"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:06.507" endtime="20201029 18:18:06.509"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:06.203" endtime="20201029 18:18:06.509"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:06.201" endtime="20201029 18:18:06.510"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:06.514" level="INFO">${RESULT} = [{'diff': 8.683300000000144e-05}, {'diff': 8.66799999999987e-05}, {'diff': 8.722199999999791e-05}, {'diff': 8.691699999999886e-05}, {'diff': 8.71669999999991e-05}, {'diff': 8.651399999999934e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 18:18:06.510" endtime="20201029 18:18:06.514"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:06.518" level="INFO">${ACCURACY} = {'diff': [8.683300000000144e-05, 8.66799999999987e-05, 8.722199999999791e-05, 8.691699999999886e-05, 8.71669999999991e-05, 8.651399999999934e-05, 8.700000000000027e-05, 8.698700000000018e-05, 8.676399...</msg>
<status status="PASS" starttime="20201029 18:18:06.515" endtime="20201029 18:18:06.519"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:06.523" level="INFO">NAME: accuracy-TIMER_SLEEP-72-philip</msg>
<status status="PASS" starttime="20201029 18:18:06.522" endtime="20201029 18:18:06.523"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:06.526" level="INFO">VALUE: [8.683300000000144e-05, 8.66799999999987e-05, 8.722199999999791e-05, 8.691699999999886e-05, 8.71669999999991e-05, 8.651399999999934e-05, 8.700000000000027e-05, 8.698700000000018e-05, 8.676399999999959e-05, 8.719399999999877e-05, 8.691599999999938e-05, 8.641699999999836e-05, 8.633300000000094e-05, 8.711100000000083e-05, 8.729199999999923e-05, 8.705599999999855e-05, 8.720800000000181e-05, 8.651400000000281e-05, 8.640299999999879e-05, 8.706999999999812e-05, 8.670799999999784e-05, 8.640199999999931e-05, 8.723600000000095e-05, 8.723599999999748e-05, 8.645800000000106e-05, 8.713899999999997e-05, 8.711099999999736e-05, 8.680600000000177e-05, 8.718100000000215e-05, 8.69860000000007e-05, 8.695899999999757e-05, 8.700000000000027e-05, 8.654100000000248e-05, 8.716599999999963e-05, 8.658299999999772e-05, 8.636100000000008e-05, 8.691599999999938e-05, 8.68189999999984e-05, 8.727799999999966e-05, 8.67920000000022e-05, 8.706999999999812e-05, 8.677799999999916e-05, 8.700000000000027e-05, 8.693000000000242e-05, 8.66119999999998e-05, 8.66249999999999e-05, 8.697200000000113e-05, 8.713899999999997e-05, 8.683299999999797e-05, 8.71669999999991e-05]</msg>
<status status="PASS" starttime="20201029 18:18:06.524" endtime="20201029 18:18:06.527"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:06.519" endtime="20201029 18:18:06.528"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:06.532" endtime="20201029 18:18:06.551"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:06.530" endtime="20201029 18:18:06.552"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:06.529" endtime="20201029 18:18:06.552"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:06.162" endtime="20201029 18:18:06.553"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:06.162" endtime="20201029 18:18:06.553"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:06.562" endtime="20201029 18:18:06.580"></status>
</kw>
<msg timestamp="20201029 18:18:06.580" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:06.560" endtime="20201029 18:18:06.580"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:06.583" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:06.581" endtime="20201029 18:18:06.583"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:06.584" endtime="20201029 18:18:06.586"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:06.557" endtime="20201029 18:18:06.586"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:06.555" endtime="20201029 18:18:06.587"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:06.593" endtime="20201029 18:18:06.880"></status>
</kw>
<msg timestamp="20201029 18:18:06.883" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020663319, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:18:06.592" endtime="20201029 18:18:06.883"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:06.891" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020663319, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:18:06.884" endtime="20201029 18:18:06.892"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:06.893" endtime="20201029 18:18:06.894"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:06.589" endtime="20201029 18:18:06.895"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:06.587" endtime="20201029 18:18:06.895"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:06.899" level="INFO">${RESULT} = [{'diff': 8.83189999999999e-05}, {'diff': 8.745800000000206e-05}, {'diff': 8.81800000000002e-05}, {'diff': 8.750000000000077e-05}, {'diff': 8.752799999999991e-05}, {'diff': 8.826400000000109e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 18:18:06.896" endtime="20201029 18:18:06.900"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:06.905" level="INFO">${ACCURACY} = {'diff': [8.83189999999999e-05, 8.745800000000206e-05, 8.81800000000002e-05, 8.750000000000077e-05, 8.752799999999991e-05, 8.826400000000109e-05, 8.788900000000072e-05, 8.763900000000047e-05, 8.773599...</msg>
<status status="PASS" starttime="20201029 18:18:06.900" endtime="20201029 18:18:06.905"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:06.909" level="INFO">NAME: accuracy-TIMER_SLEEP-73-philip</msg>
<status status="PASS" starttime="20201029 18:18:06.908" endtime="20201029 18:18:06.910"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:06.912" level="INFO">VALUE: [8.83189999999999e-05, 8.745800000000206e-05, 8.81800000000002e-05, 8.750000000000077e-05, 8.752799999999991e-05, 8.826400000000109e-05, 8.788900000000072e-05, 8.763900000000047e-05, 8.773599999999798e-05, 8.802799999999694e-05, 8.768099999999918e-05, 8.770899999999832e-05, 8.745799999999859e-05, 8.777700000000069e-05, 8.741599999999988e-05, 8.833299999999947e-05, 8.79860000000017e-05, 8.756899999999915e-05, 8.76250000000009e-05, 8.784699999999854e-05, 8.827800000000066e-05, 8.827799999999719e-05, 8.795899999999857e-05, 8.777800000000016e-05, 8.823600000000195e-05, 8.741599999999988e-05, 8.819399999999977e-05, 8.806899999999965e-05, 8.81670000000001e-05, 8.788900000000072e-05, 8.800000000000127e-05, 8.823599999999848e-05, 8.81389999999975e-05, 8.738900000000022e-05, 8.772300000000136e-05, 8.779199999999973e-05, 8.744399999999902e-05, 8.747199999999816e-05, 8.79999999999978e-05, 8.801400000000084e-05, 8.823600000000195e-05, 8.831999999999937e-05, 8.777800000000016e-05, 8.751400000000034e-05, 8.819499999999925e-05, 8.738900000000022e-05, 8.773600000000145e-05, 8.802800000000041e-05, 8.779100000000026e-05, 8.791600000000038e-05]</msg>
<status status="PASS" starttime="20201029 18:18:06.910" endtime="20201029 18:18:06.913"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:06.905" endtime="20201029 18:18:06.913"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:06.918" endtime="20201029 18:18:06.937"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:06.916" endtime="20201029 18:18:06.938"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:06.915" endtime="20201029 18:18:06.938"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:06.554" endtime="20201029 18:18:06.939"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:06.553" endtime="20201029 18:18:06.939"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:06.948" endtime="20201029 18:18:06.966"></status>
</kw>
<msg timestamp="20201029 18:18:06.967" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:06.946" endtime="20201029 18:18:06.967"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:06.969" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:06.968" endtime="20201029 18:18:06.970"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:06.970" endtime="20201029 18:18:06.972"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:06.944" endtime="20201029 18:18:06.973"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:06.942" endtime="20201029 18:18:06.973"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:06.980" endtime="20201029 18:18:07.268"></status>
</kw>
<msg timestamp="20201029 18:18:07.272" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020413333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020501944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:06.979" endtime="20201029 18:18:07.272"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:07.280" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020413333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020501944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:07.273" endtime="20201029 18:18:07.280"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:07.281" endtime="20201029 18:18:07.283"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:06.976" endtime="20201029 18:18:07.284"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:06.974" endtime="20201029 18:18:07.284"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:07.288" level="INFO">${RESULT} = [{'diff': 8.861100000000233e-05}, {'diff': 8.852700000000144e-05}, {'diff': 8.833299999999947e-05}, {'diff': 8.866699999999714e-05}, {'diff': 8.852800000000091e-05}, {'diff': 8.86670000000006e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:18:07.285" endtime="20201029 18:18:07.288"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:07.293" level="INFO">${ACCURACY} = {'diff': [8.861100000000233e-05, 8.852700000000144e-05, 8.833299999999947e-05, 8.866699999999714e-05, 8.852800000000091e-05, 8.86670000000006e-05, 8.834699999999904e-05, 8.868099999999671e-05, 8.86390...</msg>
<status status="PASS" starttime="20201029 18:18:07.289" endtime="20201029 18:18:07.293"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:07.297" level="INFO">NAME: accuracy-TIMER_SLEEP-74-philip</msg>
<status status="PASS" starttime="20201029 18:18:07.296" endtime="20201029 18:18:07.298"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:07.300" level="INFO">VALUE: [8.861100000000233e-05, 8.852700000000144e-05, 8.833299999999947e-05, 8.866699999999714e-05, 8.852800000000091e-05, 8.86670000000006e-05, 8.834699999999904e-05, 8.868099999999671e-05, 8.863900000000147e-05, 8.84999999999983e-05, 8.854100000000101e-05, 8.91250000000024e-05, 8.875000000000202e-05, 8.840300000000079e-05, 8.870799999999984e-05, 8.841600000000088e-05, 8.83189999999999e-05, 8.888900000000172e-05, 8.931899999999743e-05, 8.91389999999985e-05, 8.868100000000018e-05, 8.907000000000012e-05, 8.88060000000003e-05, 8.877699999999822e-05, 8.888899999999825e-05, 8.872199999999941e-05, 8.890300000000129e-05, 8.877800000000116e-05, 8.868099999999671e-05, 8.833299999999947e-05, 8.927800000000166e-05, 8.888900000000172e-05, 8.906900000000065e-05, 8.929099999999829e-05, 8.898700000000218e-05, 8.895800000000009e-05, 8.854100000000101e-05, 8.922199999999991e-05, 8.916600000000163e-05, 8.855500000000058e-05, 8.855600000000005e-05, 8.847199999999916e-05, 8.933300000000047e-05, 8.847299999999864e-05, 8.922199999999991e-05, 8.89869999999987e-05, 8.924999999999905e-05, 8.890300000000129e-05, 8.88190000000004e-05, 8.905500000000108e-05]</msg>
<status status="PASS" starttime="20201029 18:18:07.298" endtime="20201029 18:18:07.301"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:07.293" endtime="20201029 18:18:07.301"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:07.305" endtime="20201029 18:18:07.324"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:07.303" endtime="20201029 18:18:07.325"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:07.302" endtime="20201029 18:18:07.325"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:06.940" endtime="20201029 18:18:07.326"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:06.939" endtime="20201029 18:18:07.326"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:07.335" endtime="20201029 18:18:07.354"></status>
</kw>
<msg timestamp="20201029 18:18:07.355" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:07.333" endtime="20201029 18:18:07.355"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:07.358" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:07.356" endtime="20201029 18:18:07.358"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:07.359" endtime="20201029 18:18:07.360"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:07.330" endtime="20201029 18:18:07.361"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:07.328" endtime="20201029 18:18:07.362"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:07.368" endtime="20201029 18:18:07.655"></status>
</kw>
<msg timestamp="20201029 18:18:07.658" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021982833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022072653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:07.367" endtime="20201029 18:18:07.658"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:07.666" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021982833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022072653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:07.659" endtime="20201029 18:18:07.667"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:07.668" endtime="20201029 18:18:07.669"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:07.364" endtime="20201029 18:18:07.670"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:07.362" endtime="20201029 18:18:07.670"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:07.675" level="INFO">${RESULT} = [{'diff': 8.982000000000087e-05}, {'diff': 8.988899999999925e-05}, {'diff': 9.023699999999996e-05}, {'diff': 9.022200000000091e-05}, {'diff': 8.9638999999999e-05}, {'diff': 9.030599999999833e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 18:18:07.671" endtime="20201029 18:18:07.675"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:07.679" level="INFO">${ACCURACY} = {'diff': [8.982000000000087e-05, 8.988899999999925e-05, 9.023699999999996e-05, 9.022200000000091e-05, 8.9638999999999e-05, 9.030599999999833e-05, 8.969400000000127e-05, 8.965300000000204e-05, 8.973599...</msg>
<status status="PASS" starttime="20201029 18:18:07.676" endtime="20201029 18:18:07.679"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:07.684" level="INFO">NAME: accuracy-TIMER_SLEEP-75-philip</msg>
<status status="PASS" starttime="20201029 18:18:07.683" endtime="20201029 18:18:07.684"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:07.686" level="INFO">VALUE: [8.982000000000087e-05, 8.988899999999925e-05, 9.023699999999996e-05, 9.022200000000091e-05, 8.9638999999999e-05, 9.030599999999833e-05, 8.969400000000127e-05, 8.965300000000204e-05, 8.973599999999998e-05, 8.936099999999961e-05, 8.965299999999857e-05, 8.945900000000007e-05, 8.99999999999998e-05, 8.972299999999989e-05, 8.987499999999968e-05, 8.992999999999848e-05, 9.022199999999744e-05, 9.025000000000005e-05, 8.96939999999978e-05, 8.958300000000072e-05, 8.988900000000272e-05, 8.976399999999912e-05, 8.986100000000011e-05, 9.03060000000018e-05, 9.027799999999919e-05, 8.972199999999694e-05, 9.009800000000026e-05, 9.025000000000005e-05, 8.94999999999993e-05, 8.995799999999762e-05, 8.961199999999933e-05, 9.031899999999843e-05, 8.995800000000109e-05, 8.936099999999961e-05, 8.940300000000179e-05, 8.956899999999768e-05, 8.961099999999986e-05, 8.977799999999869e-05, 8.988899999999925e-05, 8.936099999999961e-05, 9.034699999999757e-05, 8.941699999999789e-05, 8.973599999999998e-05, 8.947200000000016e-05, 8.934700000000004e-05, 8.952799999999844e-05, 8.977799999999869e-05, 8.9945000000001e-05, 8.941700000000136e-05, 9.026300000000015e-05]</msg>
<status status="PASS" starttime="20201029 18:18:07.685" endtime="20201029 18:18:07.688"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:07.680" endtime="20201029 18:18:07.688"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:07.692" endtime="20201029 18:18:07.712"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:07.691" endtime="20201029 18:18:07.712"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:07.689" endtime="20201029 18:18:07.713"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:07.327" endtime="20201029 18:18:07.713"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:07.326" endtime="20201029 18:18:07.713"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:07.722" endtime="20201029 18:18:07.742"></status>
</kw>
<msg timestamp="20201029 18:18:07.742" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:07.721" endtime="20201029 18:18:07.743"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:07.745" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:07.743" endtime="20201029 18:18:07.745"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:07.746" endtime="20201029 18:18:07.748"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:07.718" endtime="20201029 18:18:07.748"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:07.716" endtime="20201029 18:18:07.749"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:07.755" endtime="20201029 18:18:08.042"></status>
</kw>
<msg timestamp="20201029 18:18:08.045" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020845125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020935889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:07.754" endtime="20201029 18:18:08.045"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:08.053" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020845125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020935889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:08.046" endtime="20201029 18:18:08.054"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:08.054" endtime="20201029 18:18:08.056"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:07.751" endtime="20201029 18:18:08.057"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:07.749" endtime="20201029 18:18:08.057"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:08.061" level="INFO">${RESULT} = [{'diff': 9.076400000000012e-05}, {'diff': 9.048599999999726e-05}, {'diff': 9.127800000000019e-05}, {'diff': 9.077800000000316e-05}, {'diff': 9.122300000000139e-05}, {'diff': 9.042999999999898e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:18:08.058" endtime="20201029 18:18:08.061"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:08.066" level="INFO">${ACCURACY} = {'diff': [9.076400000000012e-05, 9.048599999999726e-05, 9.127800000000019e-05, 9.077800000000316e-05, 9.122300000000139e-05, 9.042999999999898e-05, 9.0332999999998e-05, 9.088900000000025e-05, 9.106899...</msg>
<status status="PASS" starttime="20201029 18:18:08.062" endtime="20201029 18:18:08.067"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:08.071" level="INFO">NAME: accuracy-TIMER_SLEEP-76-philip</msg>
<status status="PASS" starttime="20201029 18:18:08.070" endtime="20201029 18:18:08.072"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:08.074" level="INFO">VALUE: [9.076400000000012e-05, 9.048599999999726e-05, 9.127800000000019e-05, 9.077800000000316e-05, 9.122300000000139e-05, 9.042999999999898e-05, 9.0332999999998e-05, 9.088900000000025e-05, 9.106899999999918e-05, 9.106899999999918e-05, 9.095799999999862e-05, 9.038899999999975e-05, 9.076400000000012e-05, 9.086099999999764e-05, 9.073700000000046e-05, 9.073700000000046e-05, 9.058300000000172e-05, 9.058299999999825e-05, 9.041699999999889e-05, 9.130599999999933e-05, 9.0639e-05, 9.079199999999926e-05, 9.077799999999969e-05, 9.062500000000043e-05, 9.10000000000008e-05, 9.093099999999896e-05, 9.034800000000051e-05, 9.11670000000031e-05, 9.111100000000136e-05, 9.112499999999746e-05, 9.094399999999905e-05, 9.105599999999908e-05, 9.029199999999876e-05, 9.120800000000234e-05, 9.08060000000023e-05, 9.102799999999994e-05, 9.086100000000111e-05, 9.073600000000098e-05, 9.129199999999976e-05, 9.087500000000068e-05, 9.058299999999825e-05, 9.065299999999957e-05, 9.094399999999905e-05, 9.129199999999976e-05, 9.055600000000205e-05, 9.104199999999951e-05, 9.13199999999989e-05, 9.041699999999889e-05, 9.038900000000322e-05, 9.087500000000068e-05]</msg>
<status status="PASS" starttime="20201029 18:18:08.072" endtime="20201029 18:18:08.075"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:08.067" endtime="20201029 18:18:08.075"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:08.079" endtime="20201029 18:18:08.099"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:08.077" endtime="20201029 18:18:08.099"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:08.076" endtime="20201029 18:18:08.099"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:07.714" endtime="20201029 18:18:08.100"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:07.714" endtime="20201029 18:18:08.100"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:08.109" endtime="20201029 18:18:08.128"></status>
</kw>
<msg timestamp="20201029 18:18:08.129" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:08.107" endtime="20201029 18:18:08.129"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:08.131" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:08.130" endtime="20201029 18:18:08.132"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:08.132" endtime="20201029 18:18:08.134"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:08.105" endtime="20201029 18:18:08.135"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:08.103" endtime="20201029 18:18:08.135"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:08.142" endtime="20201029 18:18:08.431"></status>
</kw>
<msg timestamp="20201029 18:18:08.434" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020137958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020229667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:08.140" endtime="20201029 18:18:08.434"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:08.442" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020137958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020229667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:08.435" endtime="20201029 18:18:08.443"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:08.444" endtime="20201029 18:18:08.445"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:08.137" endtime="20201029 18:18:08.446"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:08.136" endtime="20201029 18:18:08.446"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:08.450" level="INFO">${RESULT} = [{'diff': 9.170899999999885e-05}, {'diff': 9.143099999999946e-05}, {'diff': 9.148600000000173e-05}, {'diff': 9.218100000000021e-05}, {'diff': 9.1639000000001e-05}, {'diff': 9.177800000000069e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 18:18:08.447" endtime="20201029 18:18:08.451"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:08.455" level="INFO">${ACCURACY} = {'diff': [9.170899999999885e-05, 9.143099999999946e-05, 9.148600000000173e-05, 9.218100000000021e-05, 9.1639000000001e-05, 9.177800000000069e-05, 9.152799999999697e-05, 9.205499999999714e-05, 9.222300...</msg>
<status status="PASS" starttime="20201029 18:18:08.451" endtime="20201029 18:18:08.455"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:08.459" level="INFO">NAME: accuracy-TIMER_SLEEP-77-philip</msg>
<status status="PASS" starttime="20201029 18:18:08.458" endtime="20201029 18:18:08.460"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:08.462" level="INFO">VALUE: [9.170899999999885e-05, 9.143099999999946e-05, 9.148600000000173e-05, 9.218100000000021e-05, 9.1639000000001e-05, 9.177800000000069e-05, 9.152799999999697e-05, 9.205499999999714e-05, 9.222300000000239e-05, 9.215199999999812e-05, 9.147200000000216e-05, 9.144399999999955e-05, 9.219399999999683e-05, 9.222199999999944e-05, 9.21529999999976e-05, 9.140300000000032e-05, 9.184699999999907e-05, 9.134699999999857e-05, 9.174999999999808e-05, 9.154100000000054e-05, 9.216600000000116e-05, 9.199999999999833e-05, 9.209699999999932e-05, 9.152799999999697e-05, 9.152800000000044e-05, 9.176400000000112e-05, 9.15269999999975e-05, 9.155599999999958e-05, 9.154200000000001e-05, 9.147299999999817e-05, 9.179200000000026e-05, 9.177700000000122e-05, 9.136099999999814e-05, 9.231900000000043e-05, 9.18329999999995e-05, 9.158299999999925e-05, 9.227800000000119e-05, 9.176400000000112e-05, 9.165300000000057e-05, 9.19719999999992e-05, 9.209799999999879e-05, 9.202800000000094e-05, 9.1639000000001e-05, 9.224999999999858e-05, 9.190199999999787e-05, 9.176399999999765e-05, 9.170800000000284e-05, 9.177800000000069e-05, 9.156899999999968e-05, 9.183300000000297e-05]</msg>
<status status="PASS" starttime="20201029 18:18:08.460" endtime="20201029 18:18:08.463"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:08.455" endtime="20201029 18:18:08.463"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:08.467" endtime="20201029 18:18:08.487"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:08.466" endtime="20201029 18:18:08.487"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:08.464" endtime="20201029 18:18:08.488"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:08.101" endtime="20201029 18:18:08.488"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:08.100" endtime="20201029 18:18:08.488"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:08.497" endtime="20201029 18:18:08.517"></status>
</kw>
<msg timestamp="20201029 18:18:08.517" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:08.496" endtime="20201029 18:18:08.517"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:08.520" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:08.518" endtime="20201029 18:18:08.520"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:08.521" endtime="20201029 18:18:08.523"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:08.493" endtime="20201029 18:18:08.523"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:08.491" endtime="20201029 18:18:08.524"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:08.530" endtime="20201029 18:18:08.817"></status>
</kw>
<msg timestamp="20201029 18:18:08.820" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021401847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021495125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:08.529" endtime="20201029 18:18:08.820"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:08.828" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021401847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021495125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:08.821" endtime="20201029 18:18:08.829"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:08.830" endtime="20201029 18:18:08.831"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:08.526" endtime="20201029 18:18:08.832"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:08.524" endtime="20201029 18:18:08.832"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:08.836" level="INFO">${RESULT} = [{'diff': 9.327799999999872e-05}, {'diff': 9.26529999999981e-05}, {'diff': 9.273599999999951e-05}, {'diff': 9.269500000000028e-05}, {'diff': 9.297299999999967e-05}, {'diff': 9.299999999999933e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:18:08.833" endtime="20201029 18:18:08.837"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:08.841" level="INFO">${ACCURACY} = {'diff': [9.327799999999872e-05, 9.26529999999981e-05, 9.273599999999951e-05, 9.269500000000028e-05, 9.297299999999967e-05, 9.299999999999933e-05, 9.259699999999982e-05, 9.298599999999976e-05, 9.26109...</msg>
<status status="PASS" starttime="20201029 18:18:08.837" endtime="20201029 18:18:08.841"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:08.845" level="INFO">NAME: accuracy-TIMER_SLEEP-78-philip</msg>
<status status="PASS" starttime="20201029 18:18:08.844" endtime="20201029 18:18:08.846"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:08.848" level="INFO">VALUE: [9.327799999999872e-05, 9.26529999999981e-05, 9.273599999999951e-05, 9.269500000000028e-05, 9.297299999999967e-05, 9.299999999999933e-05, 9.259699999999982e-05, 9.298599999999976e-05, 9.261099999999939e-05, 9.306899999999771e-05, 9.280499999999789e-05, 9.334700000000057e-05, 9.240300000000132e-05, 9.327800000000219e-05, 9.309799999999979e-05, 9.325000000000305e-05, 9.297299999999967e-05, 9.326400000000262e-05, 9.254200000000101e-05, 9.244400000000055e-05, 9.323600000000001e-05, 9.229199999999729e-05, 9.311099999999989e-05, 9.316699999999817e-05, 9.311099999999989e-05, 9.259699999999982e-05, 9.293100000000096e-05, 9.290300000000182e-05, 9.244500000000003e-05, 9.29720000000002e-05, 9.329099999999882e-05, 9.256900000000068e-05, 9.241700000000089e-05, 9.302799999999847e-05, 9.295800000000062e-05, 9.287499999999921e-05, 9.320900000000035e-05, 9.291700000000139e-05, 9.233399999999947e-05, 9.329199999999829e-05, 9.247200000000316e-05, 9.295800000000062e-05, 9.327700000000272e-05, 9.251400000000187e-05, 9.259699999999982e-05, 9.25139999999984e-05, 9.3333000000001e-05, 9.248600000000273e-05, 9.283399999999997e-05, 9.320900000000035e-05]</msg>
<status status="PASS" starttime="20201029 18:18:08.847" endtime="20201029 18:18:08.850"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:08.842" endtime="20201029 18:18:08.850"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:08.854" endtime="20201029 18:18:08.874"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:08.853" endtime="20201029 18:18:08.874"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:08.851" endtime="20201029 18:18:08.875"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:08.489" endtime="20201029 18:18:08.875"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:08.488" endtime="20201029 18:18:08.875"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:08.884" endtime="20201029 18:18:08.903"></status>
</kw>
<msg timestamp="20201029 18:18:08.903" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:08.882" endtime="20201029 18:18:08.904"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:08.906" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:08.904" endtime="20201029 18:18:08.906"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:08.907" endtime="20201029 18:18:08.909"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:08.880" endtime="20201029 18:18:08.909"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:08.878" endtime="20201029 18:18:08.910"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:08.917" endtime="20201029 18:18:09.203"></status>
</kw>
<msg timestamp="20201029 18:18:09.207" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020243653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020337597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:08.915" endtime="20201029 18:18:09.207"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:09.215" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020243653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020337597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:09.208" endtime="20201029 18:18:09.215"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:09.216" endtime="20201029 18:18:09.218"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:08.912" endtime="20201029 18:18:09.218"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:08.910" endtime="20201029 18:18:09.219"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:09.223" level="INFO">${RESULT} = [{'diff': 9.394399999999858e-05}, {'diff': 9.379099999999932e-05}, {'diff': 9.405499999999914e-05}, {'diff': 9.418100000000221e-05}, {'diff': 9.367999999999876e-05}, {'diff': 9.391700000000239e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:18:09.220" endtime="20201029 18:18:09.224"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:09.229" level="INFO">${ACCURACY} = {'diff': [9.394399999999858e-05, 9.379099999999932e-05, 9.405499999999914e-05, 9.418100000000221e-05, 9.367999999999876e-05, 9.391700000000239e-05, 9.399999999999686e-05, 9.386100000000064e-05, 9.3902...</msg>
<status status="PASS" starttime="20201029 18:18:09.224" endtime="20201029 18:18:09.229"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:09.233" level="INFO">NAME: accuracy-TIMER_SLEEP-79-philip</msg>
<status status="PASS" starttime="20201029 18:18:09.232" endtime="20201029 18:18:09.234"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:09.236" level="INFO">VALUE: [9.394399999999858e-05, 9.379099999999932e-05, 9.405499999999914e-05, 9.418100000000221e-05, 9.367999999999876e-05, 9.391700000000239e-05, 9.399999999999686e-05, 9.386100000000064e-05, 9.390299999999935e-05, 9.400000000000033e-05, 9.36529999999991e-05, 9.409700000000132e-05, 9.363800000000005e-05, 9.361100000000039e-05, 9.380499999999889e-05, 9.368000000000223e-05, 9.423600000000101e-05, 9.33200000000009e-05, 9.336100000000014e-05, 9.412500000000046e-05, 9.341700000000189e-05, 9.429199999999929e-05, 9.393099999999849e-05, 9.379100000000279e-05, 9.426400000000015e-05, 9.406899999999871e-05, 9.405599999999861e-05, 9.373600000000051e-05, 9.363899999999953e-05, 9.416699999999917e-05, 9.416699999999917e-05, 9.36529999999991e-05, 9.409700000000132e-05, 9.404099999999957e-05, 9.370800000000137e-05, 9.363899999999953e-05, 9.347199999999722e-05, 9.333299999999753e-05, 9.38330000000015e-05, 9.352800000000244e-05, 9.419500000000178e-05, 9.425000000000058e-05, 9.398600000000076e-05, 9.354199999999854e-05, 9.388899999999978e-05, 9.356900000000168e-05, 9.397199999999772e-05, 9.338899999999928e-05, 9.392999999999901e-05, 9.359700000000082e-05]</msg>
<status status="PASS" starttime="20201029 18:18:09.234" endtime="20201029 18:18:09.237"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:09.229" endtime="20201029 18:18:09.237"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:09.241" endtime="20201029 18:18:09.261"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:09.239" endtime="20201029 18:18:09.261"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:09.238" endtime="20201029 18:18:09.262"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:08.876" endtime="20201029 18:18:09.262"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:08.875" endtime="20201029 18:18:09.262"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:09.271" endtime="20201029 18:18:09.290"></status>
</kw>
<msg timestamp="20201029 18:18:09.291" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:09.269" endtime="20201029 18:18:09.291"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:09.294" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:09.292" endtime="20201029 18:18:09.294"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:09.295" endtime="20201029 18:18:09.296"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:09.267" endtime="20201029 18:18:09.297"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:09.264" endtime="20201029 18:18:09.297"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:09.304" endtime="20201029 18:18:09.592"></status>
</kw>
<msg timestamp="20201029 18:18:09.595" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020378194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020472819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:09.303" endtime="20201029 18:18:09.596"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:09.604" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020378194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020472819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:09.597" endtime="20201029 18:18:09.604"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:09.605" endtime="20201029 18:18:09.607"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:09.300" endtime="20201029 18:18:09.607"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:09.298" endtime="20201029 18:18:09.608"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:09.612" level="INFO">${RESULT} = [{'diff': 9.462500000000096e-05}, {'diff': 9.479199999999979e-05}, {'diff': 9.441599999999994e-05}, {'diff': 9.476400000000065e-05}, {'diff': 9.469399999999933e-05}, {'diff': 9.505599999999961e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:18:09.609" endtime="20201029 18:18:09.612"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:09.616" level="INFO">${ACCURACY} = {'diff': [9.462500000000096e-05, 9.479199999999979e-05, 9.441599999999994e-05, 9.476400000000065e-05, 9.469399999999933e-05, 9.505599999999961e-05, 9.490300000000035e-05, 9.469499999999881e-05, 9.4653...</msg>
<status status="PASS" starttime="20201029 18:18:09.613" endtime="20201029 18:18:09.617"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:09.621" level="INFO">NAME: accuracy-TIMER_SLEEP-80-philip</msg>
<status status="PASS" starttime="20201029 18:18:09.620" endtime="20201029 18:18:09.621"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:09.624" level="INFO">VALUE: [9.462500000000096e-05, 9.479199999999979e-05, 9.441599999999994e-05, 9.476400000000065e-05, 9.469399999999933e-05, 9.505599999999961e-05, 9.490300000000035e-05, 9.469499999999881e-05, 9.46530000000001e-05, 9.463900000000053e-05, 9.51530000000006e-05, 9.463900000000053e-05, 9.499999999999786e-05, 9.500000000000133e-05, 9.49859999999983e-05, 9.500000000000133e-05, 9.46530000000001e-05, 9.488900000000078e-05, 9.44859999999978e-05, 9.509699999999885e-05, 9.461100000000139e-05, 9.444499999999856e-05, 9.512499999999799e-05, 9.476300000000118e-05, 9.444400000000255e-05, 9.445799999999865e-05, 9.530500000000039e-05, 9.456999999999868e-05, 9.461100000000139e-05, 9.491699999999992e-05, 9.513900000000103e-05, 9.480599999999936e-05, 9.462499999999749e-05, 9.504100000000057e-05, 9.47079999999989e-05, 9.444400000000255e-05, 9.447199999999822e-05, 9.518000000000026e-05, 9.438900000000028e-05, 9.480599999999936e-05, 9.48469999999986e-05, 9.504200000000004e-05, 9.520900000000235e-05, 9.520900000000235e-05, 9.481899999999946e-05, 9.444399999999908e-05, 9.470800000000237e-05, 9.526400000000115e-05, 9.487500000000121e-05, 9.480599999999936e-05]</msg>
<status status="PASS" starttime="20201029 18:18:09.622" endtime="20201029 18:18:09.625"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:09.617" endtime="20201029 18:18:09.625"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:09.629" endtime="20201029 18:18:09.648"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:09.627" endtime="20201029 18:18:09.649"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:09.626" endtime="20201029 18:18:09.649"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:09.263" endtime="20201029 18:18:09.650"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:09.262" endtime="20201029 18:18:09.650"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:09.659" endtime="20201029 18:18:09.681"></status>
</kw>
<msg timestamp="20201029 18:18:09.682" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:09.657" endtime="20201029 18:18:09.682"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:09.684" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:09.683" endtime="20201029 18:18:09.685"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:09.685" endtime="20201029 18:18:09.687"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:09.654" endtime="20201029 18:18:09.688"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:09.652" endtime="20201029 18:18:09.688"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:09.695" endtime="20201029 18:18:09.981"></status>
</kw>
<msg timestamp="20201029 18:18:09.984" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023599347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023695361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:09.693" endtime="20201029 18:18:09.984"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:09.996" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023599347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023695361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:09.986" endtime="20201029 18:18:09.996"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:09.998" endtime="20201029 18:18:10.001"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:09.690" endtime="20201029 18:18:10.002"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:09.689" endtime="20201029 18:18:10.003"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:10.010" level="INFO">${RESULT} = [{'diff': 9.60140000000019e-05}, {'diff': 9.587499999999874e-05}, {'diff': 9.598600000000276e-05}, {'diff': 9.575000000000208e-05}, {'diff': 9.606900000000071e-05}, {'diff': 9.612500000000246e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:18:10.005" endtime="20201029 18:18:10.011"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:10.018" level="INFO">${ACCURACY} = {'diff': [9.60140000000019e-05, 9.587499999999874e-05, 9.598600000000276e-05, 9.575000000000208e-05, 9.606900000000071e-05, 9.612500000000246e-05, 9.540299999999738e-05, 9.59729999999992e-05, 9.576400...</msg>
<status status="PASS" starttime="20201029 18:18:10.014" endtime="20201029 18:18:10.018"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:10.023" level="INFO">NAME: accuracy-TIMER_SLEEP-81-philip</msg>
<status status="PASS" starttime="20201029 18:18:10.022" endtime="20201029 18:18:10.023"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:10.026" level="INFO">VALUE: [9.60140000000019e-05, 9.587499999999874e-05, 9.598600000000276e-05, 9.575000000000208e-05, 9.606900000000071e-05, 9.612500000000246e-05, 9.540299999999738e-05, 9.59729999999992e-05, 9.576400000000165e-05, 9.595899999999963e-05, 9.558399999999925e-05, 9.623599999999954e-05, 9.573599999999904e-05, 9.618000000000126e-05, 9.563899999999806e-05, 9.591599999999798e-05, 9.533299999999953e-05, 9.595800000000015e-05, 9.59729999999992e-05, 9.570899999999938e-05, 9.613900000000203e-05, 9.54859999999988e-05, 9.615299999999813e-05, 9.630499999999792e-05, 9.625000000000258e-05, 9.592999999999755e-05, 9.60140000000019e-05, 9.547199999999922e-05, 9.590300000000135e-05, 9.631999999999696e-05, 9.543099999999999e-05, 9.630600000000086e-05, 9.619500000000031e-05, 9.620899999999988e-05, 9.600000000000233e-05, 9.618000000000126e-05, 9.551399999999793e-05, 9.587499999999874e-05, 9.572200000000294e-05, 9.622199999999997e-05, 9.586099999999917e-05, 9.607000000000018e-05, 9.597199999999972e-05, 9.547300000000217e-05, 9.540300000000085e-05, 9.534700000000257e-05, 9.559699999999935e-05, 9.632000000000043e-05, 9.573599999999904e-05, 9.622199999999997e-05]</msg>
<status status="PASS" starttime="20201029 18:18:10.024" endtime="20201029 18:18:10.027"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:10.019" endtime="20201029 18:18:10.028"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:10.032" endtime="20201029 18:18:10.051"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:10.030" endtime="20201029 18:18:10.052"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:10.029" endtime="20201029 18:18:10.052"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:09.651" endtime="20201029 18:18:10.053"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:09.650" endtime="20201029 18:18:10.053"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:10.062" endtime="20201029 18:18:10.081"></status>
</kw>
<msg timestamp="20201029 18:18:10.082" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:10.060" endtime="20201029 18:18:10.082"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:10.084" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:10.083" endtime="20201029 18:18:10.085"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:10.085" endtime="20201029 18:18:10.087"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:10.058" endtime="20201029 18:18:10.088"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:10.055" endtime="20201029 18:18:10.088"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:10.095" endtime="20201029 18:18:10.380"></status>
</kw>
<msg timestamp="20201029 18:18:10.384" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020650458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02074725, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:18:10.093" endtime="20201029 18:18:10.384"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:10.392" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020650458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02074725, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:18:10.385" endtime="20201029 18:18:10.392"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:10.393" endtime="20201029 18:18:10.394"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:10.090" endtime="20201029 18:18:10.395"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:10.089" endtime="20201029 18:18:10.395"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:10.399" level="INFO">${RESULT} = [{'diff': 9.679199999999832e-05}, {'diff': 9.706999999999771e-05}, {'diff': 9.677799999999875e-05}, {'diff': 9.706900000000171e-05}, {'diff': 9.708400000000075e-05}, {'diff': 9.661199999999939e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:18:10.396" endtime="20201029 18:18:10.399"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:10.404" level="INFO">${ACCURACY} = {'diff': [9.679199999999832e-05, 9.706999999999771e-05, 9.677799999999875e-05, 9.706900000000171e-05, 9.708400000000075e-05, 9.661199999999939e-05, 9.673600000000004e-05, 9.693000000000201e-05, 9.6416...</msg>
<status status="PASS" starttime="20201029 18:18:10.400" endtime="20201029 18:18:10.404"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:10.409" level="INFO">NAME: accuracy-TIMER_SLEEP-82-philip</msg>
<status status="PASS" starttime="20201029 18:18:10.408" endtime="20201029 18:18:10.409"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:10.411" level="INFO">VALUE: [9.679199999999832e-05, 9.706999999999771e-05, 9.677799999999875e-05, 9.706900000000171e-05, 9.708400000000075e-05, 9.661199999999939e-05, 9.673600000000004e-05, 9.693000000000201e-05, 9.641699999999795e-05, 9.711100000000042e-05, 9.713899999999956e-05, 9.712499999999999e-05, 9.673600000000004e-05, 9.704199999999857e-05, 9.713899999999956e-05, 9.641699999999795e-05, 9.668100000000124e-05, 9.677699999999928e-05, 9.633300000000053e-05, 9.674999999999961e-05, 9.658300000000078e-05, 9.672200000000047e-05, 9.683300000000103e-05, 9.736100000000067e-05, 9.662499999999949e-05, 9.672299999999995e-05, 9.723700000000002e-05, 9.644500000000056e-05, 9.706899999999824e-05, 9.69860000000003e-05, 9.691700000000192e-05, 9.66799999999983e-05, 9.705600000000161e-05, 9.647200000000022e-05, 9.683300000000103e-05, 9.722200000000097e-05, 9.727799999999925e-05, 9.691700000000192e-05, 9.656900000000121e-05, 9.734699999999763e-05, 9.705499999999867e-05, 9.72080000000014e-05, 9.713899999999956e-05, 9.67080000000009e-05, 9.687499999999974e-05, 9.687499999999974e-05, 9.673600000000004e-05, 9.693099999999802e-05, 9.683399999999703e-05, 9.725000000000011e-05]</msg>
<status status="PASS" starttime="20201029 18:18:10.410" endtime="20201029 18:18:10.416"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:10.405" endtime="20201029 18:18:10.417"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:10.421" endtime="20201029 18:18:10.442"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:10.419" endtime="20201029 18:18:10.443"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:10.418" endtime="20201029 18:18:10.444"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:10.054" endtime="20201029 18:18:10.444"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:10.053" endtime="20201029 18:18:10.445"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:10.463" endtime="20201029 18:18:10.485"></status>
</kw>
<msg timestamp="20201029 18:18:10.486" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:10.459" endtime="20201029 18:18:10.486"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:10.491" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:10.488" endtime="20201029 18:18:10.492"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:10.493" endtime="20201029 18:18:10.497"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:10.454" endtime="20201029 18:18:10.498"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:10.450" endtime="20201029 18:18:10.499"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:10.512" endtime="20201029 18:18:10.800"></status>
</kw>
<msg timestamp="20201029 18:18:10.804" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033436931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033534764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:10.509" endtime="20201029 18:18:10.804"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:10.812" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033436931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033534764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:10.805" endtime="20201029 18:18:10.812"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:10.813" endtime="20201029 18:18:10.814"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:10.503" endtime="20201029 18:18:10.815"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:10.500" endtime="20201029 18:18:10.815"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:10.819" level="INFO">${RESULT} = [{'diff': 9.783299999999856e-05}, {'diff': 9.754199999999907e-05}, {'diff': 9.770799999999497e-05}, {'diff': 9.79860000000013e-05}, {'diff': 9.816700000000317e-05}, {'diff': 9.763900000000353e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:18:10.816" endtime="20201029 18:18:10.820"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:10.823" level="INFO">${ACCURACY} = {'diff': [9.783299999999856e-05, 9.754199999999907e-05, 9.770799999999497e-05, 9.79860000000013e-05, 9.816700000000317e-05, 9.763900000000353e-05, 9.813900000000403e-05, 9.791700000000292e-05, 9.78479...</msg>
<status status="PASS" starttime="20201029 18:18:10.820" endtime="20201029 18:18:10.824"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:10.828" level="INFO">NAME: accuracy-TIMER_SLEEP-83-philip</msg>
<status status="PASS" starttime="20201029 18:18:10.827" endtime="20201029 18:18:10.828"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:10.830" level="INFO">VALUE: [9.783299999999856e-05, 9.754199999999907e-05, 9.770799999999497e-05, 9.79860000000013e-05, 9.816700000000317e-05, 9.763900000000353e-05, 9.813900000000403e-05, 9.791700000000292e-05, 9.78479999999976e-05, 9.770799999999497e-05, 9.758300000000525e-05, 9.776400000000018e-05, 9.747199999999429e-05, 9.798599999999436e-05, 9.745800000000165e-05, 9.811099999999795e-05, 9.786100000000464e-05, 9.754199999999907e-05, 9.806899999999924e-05, 9.763800000000405e-05, 9.805499999999967e-05, 9.7415999999996e-05, 9.80410000000001e-05, 9.78330000000055e-05, 9.793100000000249e-05, 9.8028e-05, 9.736100000000414e-05, 9.758400000000472e-05, 9.779199999999932e-05, 9.815299999999666e-05, 9.737500000000371e-05, 9.812499999999752e-05, 9.734700000000457e-05, 9.744500000000156e-05, 9.811099999999795e-05, 9.79860000000013e-05, 9.827800000000025e-05, 9.813899999999709e-05, 9.787499999999727e-05, 9.773600000000104e-05, 9.762500000000396e-05, 9.763800000000405e-05, 9.79860000000013e-05, 9.759699999999788e-05, 9.768000000000276e-05, 9.815299999999666e-05, 9.788899999999684e-05, 9.744500000000156e-05, 9.808399999999828e-05, 9.825000000000111e-05]</msg>
<status status="PASS" starttime="20201029 18:18:10.829" endtime="20201029 18:18:10.831"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:10.824" endtime="20201029 18:18:10.832"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:10.835" endtime="20201029 18:18:10.855"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:10.834" endtime="20201029 18:18:10.855"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:10.833" endtime="20201029 18:18:10.856"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:10.446" endtime="20201029 18:18:10.856"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:10.445" endtime="20201029 18:18:10.856"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:10.865" endtime="20201029 18:18:10.884"></status>
</kw>
<msg timestamp="20201029 18:18:10.885" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:10.863" endtime="20201029 18:18:10.885"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:10.887" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:10.886" endtime="20201029 18:18:10.887"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:10.888" endtime="20201029 18:18:10.890"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:10.860" endtime="20201029 18:18:10.890"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:10.858" endtime="20201029 18:18:10.891"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:10.897" endtime="20201029 18:18:11.184"></status>
</kw>
<msg timestamp="20201029 18:18:11.187" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020507069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020605736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:10.896" endtime="20201029 18:18:11.187"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:11.196" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020507069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020605736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:11.188" endtime="20201029 18:18:11.196"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:11.197" endtime="20201029 18:18:11.199"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:10.893" endtime="20201029 18:18:11.199"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:10.891" endtime="20201029 18:18:11.200"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:11.204" level="INFO">${RESULT} = [{'diff': 9.86670000000002e-05}, {'diff': 9.861099999999845e-05}, {'diff': 9.926400000000168e-05}, {'diff': 9.873600000000204e-05}, {'diff': 9.930499999999745e-05}, {'diff': 9.887500000000174e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:18:11.200" endtime="20201029 18:18:11.204"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:11.208" level="INFO">${ACCURACY} = {'diff': [9.86670000000002e-05, 9.861099999999845e-05, 9.926400000000168e-05, 9.873600000000204e-05, 9.930499999999745e-05, 9.887500000000174e-05, 9.848599999999832e-05, 9.879200000000032e-05, 9.90969...</msg>
<status status="PASS" starttime="20201029 18:18:11.205" endtime="20201029 18:18:11.208"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:11.213" level="INFO">NAME: accuracy-TIMER_SLEEP-84-philip</msg>
<status status="PASS" starttime="20201029 18:18:11.212" endtime="20201029 18:18:11.213"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:11.215" level="INFO">VALUE: [9.86670000000002e-05, 9.861099999999845e-05, 9.926400000000168e-05, 9.873600000000204e-05, 9.930499999999745e-05, 9.887500000000174e-05, 9.848599999999832e-05, 9.879200000000032e-05, 9.909699999999938e-05, 9.93479999999991e-05, 9.91670000000007e-05, 9.841600000000048e-05, 9.926299999999874e-05, 9.909699999999938e-05, 9.850000000000136e-05, 9.915299999999766e-05, 9.88609999999987e-05, 9.905600000000014e-05, 9.870799999999944e-05, 9.88059999999999e-05, 9.848599999999832e-05, 9.931999999999996e-05, 9.845799999999919e-05, 9.911099999999895e-05, 9.924999999999864e-05, 9.930500000000092e-05, 9.845799999999919e-05, 9.92080000000034e-05, 9.919499999999984e-05, 9.927799999999778e-05, 9.836200000000114e-05, 9.931999999999996e-05, 9.86800000000003e-05, 9.929099999999788e-05, 9.863900000000106e-05, 9.85280000000005e-05, 9.927800000000125e-05, 9.845799999999919e-05, 9.840300000000038e-05, 9.85280000000005e-05, 9.881999999999946e-05, 9.841699999999995e-05, 9.841699999999995e-05, 9.84020000000009e-05, 9.906900000000024e-05, 9.872200000000247e-05, 9.908299999999981e-05, 9.883299999999956e-05, 9.854200000000007e-05, 9.865299999999716e-05]</msg>
<status status="PASS" starttime="20201029 18:18:11.214" endtime="20201029 18:18:11.217"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:11.209" endtime="20201029 18:18:11.217"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:11.222" endtime="20201029 18:18:11.243"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:11.220" endtime="20201029 18:18:11.245"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:11.218" endtime="20201029 18:18:11.245"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:10.857" endtime="20201029 18:18:11.246"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:10.856" endtime="20201029 18:18:11.246"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:11.268" endtime="20201029 18:18:11.292"></status>
</kw>
<msg timestamp="20201029 18:18:11.293" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:11.265" endtime="20201029 18:18:11.294"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:11.299" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:11.296" endtime="20201029 18:18:11.299"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:11.301" endtime="20201029 18:18:11.305"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:11.257" endtime="20201029 18:18:11.306"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:11.252" endtime="20201029 18:18:11.307"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:11.321" endtime="20201029 18:18:11.609"></status>
</kw>
<msg timestamp="20201029 18:18:11.612" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038440875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038540764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:11.318" endtime="20201029 18:18:11.613"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:11.621" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038440875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038540764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:11.614" endtime="20201029 18:18:11.621"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:11.622" endtime="20201029 18:18:11.624"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:11.312" endtime="20201029 18:18:11.624"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:11.308" endtime="20201029 18:18:11.625"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:11.629" level="INFO">${RESULT} = [{'diff': 9.988899999999884e-05}, {'diff': 9.994499999999712e-05}, {'diff': 9.965299999999816e-05}, {'diff': 9.963899999999859e-05}, {'diff': 9.999999999999593e-05}, {'diff': 9.97359999999961e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:18:11.626" endtime="20201029 18:18:11.629"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:11.634" level="INFO">${ACCURACY} = {'diff': [9.988899999999884e-05, 9.994499999999712e-05, 9.965299999999816e-05, 9.963899999999859e-05, 9.999999999999593e-05, 9.97359999999961e-05, 0.0001000689999999943, 9.954200000000107e-05, 0.00010...</msg>
<status status="PASS" starttime="20201029 18:18:11.630" endtime="20201029 18:18:11.635"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:11.639" level="INFO">NAME: accuracy-TIMER_SLEEP-85-philip</msg>
<status status="PASS" starttime="20201029 18:18:11.638" endtime="20201029 18:18:11.639"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:11.641" level="INFO">VALUE: [9.988899999999884e-05, 9.994499999999712e-05, 9.965299999999816e-05, 9.963899999999859e-05, 9.999999999999593e-05, 9.97359999999961e-05, 0.0001000689999999943, 9.954200000000107e-05, 0.00010019400000000483, 9.983300000000056e-05, 9.941699999999748e-05, 9.952699999999509e-05, 9.963899999999859e-05, 0.00010019500000000431, 9.991700000000492e-05, 0.00010015199999999919, 9.959699999999988e-05, 9.970900000000338e-05, 9.970799999999697e-05, 9.958300000000031e-05, 9.937499999999877e-05, 9.954200000000107e-05, 9.987500000000621e-05, 9.942999999999758e-05, 9.959699999999988e-05, 0.0001000139999999955, 9.977699999999534e-05, 9.988899999999884e-05, 9.97359999999961e-05, 9.956900000000074e-05, 9.963900000000553e-05, 9.934699999999963e-05, 0.00010008299999999387, 9.977799999999482e-05, 0.00010022299999999651, 0.00010027800000000225, 9.951300000000246e-05, 9.93609999999992e-05, 9.987499999999927e-05, 9.977800000000175e-05, 9.983300000000056e-05, 9.937499999999877e-05, 9.963899999999859e-05, 0.0001002359999999966, 0.00010033400000000053, 9.947299999999576e-05, 9.957000000000021e-05, 9.931900000000049e-05, 9.944400000000408e-05, 9.962500000000596e-05]</msg>
<status status="PASS" starttime="20201029 18:18:11.640" endtime="20201029 18:18:11.642"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:11.635" endtime="20201029 18:18:11.643"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:11.647" endtime="20201029 18:18:11.666"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:11.645" endtime="20201029 18:18:11.667"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:11.644" endtime="20201029 18:18:11.667"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:11.248" endtime="20201029 18:18:11.667"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:11.247" endtime="20201029 18:18:11.668"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:11.677" endtime="20201029 18:18:11.696"></status>
</kw>
<msg timestamp="20201029 18:18:11.697" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:11.675" endtime="20201029 18:18:11.697"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:11.699" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:11.698" endtime="20201029 18:18:11.700"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:11.701" endtime="20201029 18:18:11.702"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:11.672" endtime="20201029 18:18:11.703"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:11.670" endtime="20201029 18:18:11.703"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:11.710" endtime="20201029 18:18:11.998"></status>
</kw>
<msg timestamp="20201029 18:18:12.001" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020400958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020501944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:11.708" endtime="20201029 18:18:12.001"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:12.009" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020400958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020501944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:12.002" endtime="20201029 18:18:12.010"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:12.011" endtime="20201029 18:18:12.013"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:11.706" endtime="20201029 18:18:12.013"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:11.704" endtime="20201029 18:18:12.013"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:12.018" level="INFO">${RESULT} = [{'diff': 0.00010098600000000083}, {'diff': 0.00010041700000000195}, {'diff': 0.00010080500000000242}, {'diff': 0.00010051399999999946}, {'diff': 0.0001003610000000002}, {'diff': 0.0001012919999999993...</msg>
<status status="PASS" starttime="20201029 18:18:12.014" endtime="20201029 18:18:12.018"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:12.022" level="INFO">${ACCURACY} = {'diff': [0.00010098600000000083, 0.00010041700000000195, 0.00010080500000000242, 0.00010051399999999946, 0.0001003610000000002, 0.00010129199999999935, 0.00010062500000000002, 0.00010101399999999996,...</msg>
<status status="PASS" starttime="20201029 18:18:12.019" endtime="20201029 18:18:12.022"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:12.026" level="INFO">NAME: accuracy-TIMER_SLEEP-86-philip</msg>
<status status="PASS" starttime="20201029 18:18:12.025" endtime="20201029 18:18:12.027"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:12.029" level="INFO">VALUE: [0.00010098600000000083, 0.00010041700000000195, 0.00010080500000000242, 0.00010051399999999946, 0.0001003610000000002, 0.00010129199999999935, 0.00010062500000000002, 0.00010101399999999996, 0.0001012359999999976, 0.00010106999999999824, 0.00010112499999999705, 0.00010098600000000083, 0.00010058299999999784, 0.0001010000000000004, 0.00010129199999999935, 0.000101028000000003, 0.00010073600000000058, 0.00010112500000000052, 0.0001009159999999995, 0.0001010000000000004, 0.0001010000000000004, 0.00010084700000000113, 0.0001004999999999999, 0.00010080499999999895, 0.00010092999999999908, 0.00010051399999999946, 0.00010083300000000156, 0.0001005280000000025, 0.00010055599999999817, 0.00010104200000000257, 0.00010070799999999797, 0.00010062500000000002, 0.00010073600000000058, 0.00010051399999999946, 0.00010115300000000313, 0.00010054200000000207, 0.00010097200000000126, 0.00010033399999999706, 0.00010043099999999805, 0.00010129199999999935, 0.0001011809999999988, 0.00010045800000000119, 0.00010102700000000006, 0.00010056899999999827, 0.00010076399999999971, 0.00010111100000000095, 0.00010048600000000033, 0.00010034700000000063, 0.00010044499999999762, 0.00010119499999999837]</msg>
<status status="PASS" starttime="20201029 18:18:12.028" endtime="20201029 18:18:12.030"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:12.023" endtime="20201029 18:18:12.030"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:12.034" endtime="20201029 18:18:12.054"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:12.033" endtime="20201029 18:18:12.054"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:12.031" endtime="20201029 18:18:12.055"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:11.668" endtime="20201029 18:18:12.055"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:11.668" endtime="20201029 18:18:12.055"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:12.064" endtime="20201029 18:18:12.084"></status>
</kw>
<msg timestamp="20201029 18:18:12.085" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:12.063" endtime="20201029 18:18:12.085"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:12.087" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:12.086" endtime="20201029 18:18:12.088"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:12.088" endtime="20201029 18:18:12.090"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:12.060" endtime="20201029 18:18:12.091"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:12.058" endtime="20201029 18:18:12.091"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:12.098" endtime="20201029 18:18:12.384"></status>
</kw>
<msg timestamp="20201029 18:18:12.387" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021134667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021236208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:12.096" endtime="20201029 18:18:12.388"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:12.396" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021134667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021236208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:12.388" endtime="20201029 18:18:12.396"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:12.397" endtime="20201029 18:18:12.399"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:12.094" endtime="20201029 18:18:12.399"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:12.092" endtime="20201029 18:18:12.400"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:12.404" level="INFO">${RESULT} = [{'diff': 0.00010154100000000013}, {'diff': 0.00010173700000000105}, {'diff': 0.00010131899999999902}, {'diff': 0.00010194399999999965}, {'diff': 0.00010156899999999927}, {'diff': 0.000101693999999999...</msg>
<status status="PASS" starttime="20201029 18:18:12.400" endtime="20201029 18:18:12.404"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:12.408" level="INFO">${ACCURACY} = {'diff': [0.00010154100000000013, 0.00010173700000000105, 0.00010131899999999902, 0.00010194399999999965, 0.00010156899999999927, 0.0001016939999999994, 0.00010170900000000191, 0.00010213899999999762,...</msg>
<status status="PASS" starttime="20201029 18:18:12.405" endtime="20201029 18:18:12.408"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:12.413" level="INFO">NAME: accuracy-TIMER_SLEEP-87-philip</msg>
<status status="PASS" starttime="20201029 18:18:12.411" endtime="20201029 18:18:12.413"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:12.415" level="INFO">VALUE: [0.00010154100000000013, 0.00010173700000000105, 0.00010131899999999902, 0.00010194399999999965, 0.00010156899999999927, 0.0001016939999999994, 0.00010170900000000191, 0.00010213899999999762, 0.00010134700000000163, 0.0001013610000000012, 0.0001018610000000017, 0.00010194499999999912, 0.00010142999999999958, 0.00010194399999999965, 0.00010179199999999985, 0.00010174999999999768, 0.00010231900000000002, 0.00010145799999999872, 0.0001021809999999998, 0.00010181899999999952, 0.00010229200000000035, 0.0001020550000000002, 0.0001020550000000002, 0.00010140200000000044, 0.00010166600000000026, 0.00010215300000000066, 0.00010138900000000034, 0.00010177800000000028, 0.00010163899999999712, 0.00010177800000000028, 0.0001020420000000001, 0.0001016809999999993, 0.0001013610000000012, 0.0001016939999999994, 0.00010218000000000033, 0.00010174999999999768, 0.00010226399999999775, 0.00010212500000000152, 0.000101722000000002, 0.00010148600000000133, 0.00010211200000000142, 0.00010208399999999881, 0.0001018480000000016, 0.00010144400000000262, 0.00010188899999999737, 0.00010188900000000084, 0.00010213900000000109, 0.00010193099999999955, 0.00010182000000000246, 0.00010147199999999829]</msg>
<status status="PASS" starttime="20201029 18:18:12.414" endtime="20201029 18:18:12.417"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:12.409" endtime="20201029 18:18:12.417"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:12.421" endtime="20201029 18:18:12.441"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:12.420" endtime="20201029 18:18:12.441"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:12.418" endtime="20201029 18:18:12.442"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:12.056" endtime="20201029 18:18:12.442"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:12.056" endtime="20201029 18:18:12.442"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:12.451" endtime="20201029 18:18:12.470"></status>
</kw>
<msg timestamp="20201029 18:18:12.470" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:12.449" endtime="20201029 18:18:12.470"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:12.473" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:12.471" endtime="20201029 18:18:12.473"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:12.474" endtime="20201029 18:18:12.475"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:12.447" endtime="20201029 18:18:12.476"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:12.445" endtime="20201029 18:18:12.477"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:12.483" endtime="20201029 18:18:12.771"></status>
</kw>
<msg timestamp="20201029 18:18:12.774" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020206333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020309264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:12.482" endtime="20201029 18:18:12.774"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:12.782" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020206333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020309264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:12.775" endtime="20201029 18:18:12.783"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:12.783" endtime="20201029 18:18:12.785"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:12.479" endtime="20201029 18:18:12.786"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:12.477" endtime="20201029 18:18:12.786"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:12.790" level="INFO">${RESULT} = [{'diff': 0.00010293100000000055}, {'diff': 0.0001030139999999985}, {'diff': 0.0001023749999999983}, {'diff': 0.00010327799999999832}, {'diff': 0.0001027359999999991}, {'diff': 0.00010275000000000215}...</msg>
<status status="PASS" starttime="20201029 18:18:12.787" endtime="20201029 18:18:12.790"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:12.795" level="INFO">${ACCURACY} = {'diff': [0.00010293100000000055, 0.0001030139999999985, 0.0001023749999999983, 0.00010327799999999832, 0.0001027359999999991, 0.00010275000000000215, 0.00010247200000000276, 0.00010244400000000015, 0...</msg>
<status status="PASS" starttime="20201029 18:18:12.791" endtime="20201029 18:18:12.795"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:12.800" level="INFO">NAME: accuracy-TIMER_SLEEP-88-philip</msg>
<status status="PASS" starttime="20201029 18:18:12.799" endtime="20201029 18:18:12.800"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:12.802" level="INFO">VALUE: [0.00010293100000000055, 0.0001030139999999985, 0.0001023749999999983, 0.00010327799999999832, 0.0001027359999999991, 0.00010275000000000215, 0.00010247200000000276, 0.00010244400000000015, 0.00010297199999999979, 0.00010279200000000085, 0.00010252800000000103, 0.00010265299999999769, 0.00010294500000000012, 0.00010281900000000052, 0.00010320800000000047, 0.00010297199999999979, 0.00010330500000000145, 0.0001023749999999983, 0.00010334799999999963, 0.00010290299999999794, 0.00010322200000000004, 0.00010316699999999776, 0.00010319500000000037, 0.00010258399999999931, 0.00010299999999999893, 0.0001030550000000012, 0.0001027359999999991, 0.00010237500000000177, 0.00010324999999999918, 0.00010276399999999825, 0.00010298599999999936, 0.0001033200000000005, 0.00010236099999999873, 0.00010248599999999886, 0.0001026810000000003, 0.00010316599999999829, 0.00010281900000000052, 0.00010315300000000166, 0.00010291699999999751, 0.00010319500000000037, 0.00010320800000000047, 0.00010284699999999966, 0.00010297199999999979, 0.000102513999999998, 0.00010329100000000188, 0.00010317999999999786, 0.00010245799999999972, 0.00010327800000000179, 0.00010298600000000283, 0.00010282]</msg>
<status status="PASS" starttime="20201029 18:18:12.801" endtime="20201029 18:18:12.803"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:12.796" endtime="20201029 18:18:12.804"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:12.808" endtime="20201029 18:18:12.827"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:12.806" endtime="20201029 18:18:12.828"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:12.805" endtime="20201029 18:18:12.828"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:12.443" endtime="20201029 18:18:12.828"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:12.442" endtime="20201029 18:18:12.829"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:12.838" endtime="20201029 18:18:12.856"></status>
</kw>
<msg timestamp="20201029 18:18:12.857" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:12.836" endtime="20201029 18:18:12.857"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:12.859" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:12.858" endtime="20201029 18:18:12.860"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:12.861" endtime="20201029 18:18:12.862"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:12.833" endtime="20201029 18:18:12.863"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:12.831" endtime="20201029 18:18:12.863"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:12.870" endtime="20201029 18:18:13.158"></status>
</kw>
<msg timestamp="20201029 18:18:13.161" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020286264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020390111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:12.868" endtime="20201029 18:18:13.161"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:13.169" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020286264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020390111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:13.162" endtime="20201029 18:18:13.169"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:13.170" endtime="20201029 18:18:13.172"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:12.866" endtime="20201029 18:18:13.172"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:12.864" endtime="20201029 18:18:13.173"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:13.177" level="INFO">${RESULT} = [{'diff': 0.00010384700000000066}, {'diff': 0.00010331899999999755}, {'diff': 0.00010379200000000185}, {'diff': 0.00010395900000000069}, {'diff': 0.00010370900000000044}, {'diff': 0.000103790999999998...</msg>
<status status="PASS" starttime="20201029 18:18:13.174" endtime="20201029 18:18:13.177"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:13.181" level="INFO">${ACCURACY} = {'diff': [0.00010384700000000066, 0.00010331899999999755, 0.00010379200000000185, 0.00010395900000000069, 0.00010370900000000044, 0.00010379099999999891, 0.00010376400000000272, 0.00010411099999999701...</msg>
<status status="PASS" starttime="20201029 18:18:13.178" endtime="20201029 18:18:13.182"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:13.186" level="INFO">NAME: accuracy-TIMER_SLEEP-89-philip</msg>
<status status="PASS" starttime="20201029 18:18:13.185" endtime="20201029 18:18:13.186"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:13.188" level="INFO">VALUE: [0.00010384700000000066, 0.00010331899999999755, 0.00010379200000000185, 0.00010395900000000069, 0.00010370900000000044, 0.00010379099999999891, 0.00010376400000000272, 0.00010411099999999701, 0.00010362499999999955, 0.00010394500000000112, 0.00010407000000000124, 0.00010430599999999846, 0.00010416700000000223, 0.00010422300000000051, 0.00010405600000000167, 0.00010413899999999962, 0.00010345900000000019, 0.0001037079999999975, 0.00010365199999999922, 0.0001043200000000015, 0.00010417999999999886, 0.000103513999999999, 0.00010412500000000005, 0.00010407000000000124, 0.00010363899999999912, 0.00010383300000000109, 0.00010351400000000247, 0.0001037360000000001, 0.000104207999999998, 0.00010388899999999937, 0.00010348599999999986, 0.00010394399999999818, 0.00010416700000000223, 0.00010363900000000259, 0.00010341700000000148, 0.00010372200000000054, 0.00010427800000000279, 0.00010401300000000002, 0.00010431900000000202, 0.00010412500000000005, 0.00010422200000000104, 0.00010366700000000173, 0.0001036810000000013, 0.00010352799999999857, 0.00010395900000000069, 0.00010366699999999826, 0.00010381999999999753, 0.0001040139999999995, 0.00010376399999999925, 0.00010431899999999855]</msg>
<status status="PASS" starttime="20201029 18:18:13.187" endtime="20201029 18:18:13.189"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:13.182" endtime="20201029 18:18:13.190"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:13.194" endtime="20201029 18:18:13.213"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:13.192" endtime="20201029 18:18:13.214"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:13.191" endtime="20201029 18:18:13.214"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:12.830" endtime="20201029 18:18:13.214"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:12.829" endtime="20201029 18:18:13.215"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:13.224" endtime="20201029 18:18:13.247"></status>
</kw>
<msg timestamp="20201029 18:18:13.248" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:13.222" endtime="20201029 18:18:13.248"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:13.251" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:13.249" endtime="20201029 18:18:13.251"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:13.252" endtime="20201029 18:18:13.254"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:13.219" endtime="20201029 18:18:13.254"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:13.217" endtime="20201029 18:18:13.255"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:13.261" endtime="20201029 18:18:13.548"></status>
</kw>
<msg timestamp="20201029 18:18:13.551" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024580417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024685708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:13.260" endtime="20201029 18:18:13.551"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:13.559" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024580417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024685708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:13.552" endtime="20201029 18:18:13.560"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:13.561" endtime="20201029 18:18:13.562"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:13.257" endtime="20201029 18:18:13.563"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:13.255" endtime="20201029 18:18:13.563"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:13.567" level="INFO">${RESULT} = [{'diff': 0.00010529100000000041}, {'diff': 0.00010513900000000062}, {'diff': 0.0001045420000000026}, {'diff': 0.00010484700000000166}, {'diff': 0.00010443099999999858}, {'diff': 0.0001053199999999990...</msg>
<status status="PASS" starttime="20201029 18:18:13.564" endtime="20201029 18:18:13.568"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:13.571" level="INFO">${ACCURACY} = {'diff': [0.00010529100000000041, 0.00010513900000000062, 0.0001045420000000026, 0.00010484700000000166, 0.00010443099999999858, 0.00010531999999999903, 0.00010477799999999982, 0.00010527800000000032,...</msg>
<status status="PASS" starttime="20201029 18:18:13.568" endtime="20201029 18:18:13.572"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:13.576" level="INFO">NAME: accuracy-TIMER_SLEEP-90-philip</msg>
<status status="PASS" starttime="20201029 18:18:13.575" endtime="20201029 18:18:13.576"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:13.579" level="INFO">VALUE: [0.00010529100000000041, 0.00010513900000000062, 0.0001045420000000026, 0.00010484700000000166, 0.00010443099999999858, 0.00010531999999999903, 0.00010477799999999982, 0.00010527800000000032, 0.00010492999999999961, 0.00010505499999999973, 0.00010452700000000009, 0.00010511100000000148, 0.0001052499999999977, 0.00010447200000000129, 0.0001051810000000028, 0.00010493099999999908, 0.00010434799999999717, 0.00010486099999999776, 0.0001048339999999981, 0.00010481899999999905, 0.000104514, 0.00010497199999999832, 0.00010452800000000304, 0.00010533300000000259, 0.000104514, 0.00010520900000000194, 0.00010486100000000123, 0.00010440299999999944, 0.000105207999999999, 0.00010525000000000118, 0.00010475000000000068, 0.0001045689999999988, 0.00010441699999999901, 0.00010480599999999896, 0.0001047360000000011, 0.00010463900000000012, 0.0001050559999999992, 0.00010516699999999976, 0.00010434800000000063, 0.00010520800000000247, 0.0001043750000000003, 0.00010452799999999957, 0.00010476400000000025, 0.00010458299999999837, 0.00010516699999999976, 0.0001048750000000008, 0.00010465299999999969, 0.00010441699999999901, 0.00010509699999999844, 0.00010454099999999966]</msg>
<status status="PASS" starttime="20201029 18:18:13.577" endtime="20201029 18:18:13.580"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:13.572" endtime="20201029 18:18:13.581"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:13.585" endtime="20201029 18:18:13.604"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:13.583" endtime="20201029 18:18:13.605"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:13.582" endtime="20201029 18:18:13.605"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:13.215" endtime="20201029 18:18:13.606"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:13.215" endtime="20201029 18:18:13.606"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:13.615" endtime="20201029 18:18:13.634"></status>
</kw>
<msg timestamp="20201029 18:18:13.635" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:13.613" endtime="20201029 18:18:13.635"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:13.637" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:13.636" endtime="20201029 18:18:13.638"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:13.638" endtime="20201029 18:18:13.640"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:13.611" endtime="20201029 18:18:13.641"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:13.608" endtime="20201029 18:18:13.641"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:13.648" endtime="20201029 18:18:13.934"></status>
</kw>
<msg timestamp="20201029 18:18:13.937" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020279958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020386056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:13.646" endtime="20201029 18:18:13.938"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:13.946" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020279958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020386056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:13.939" endtime="20201029 18:18:13.946"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:13.947" endtime="20201029 18:18:13.949"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:13.644" endtime="20201029 18:18:13.949"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:13.642" endtime="20201029 18:18:13.950"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:13.954" level="INFO">${RESULT} = [{'diff': 0.00010609799999999892}, {'diff': 0.00010600000000000193}, {'diff': 0.0001058750000000018}, {'diff': 0.00010568000000000036}, {'diff': 0.00010580500000000048}, {'diff': 0.0001053469999999986...</msg>
<status status="PASS" starttime="20201029 18:18:13.950" endtime="20201029 18:18:13.954"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:13.959" level="INFO">${ACCURACY} = {'diff': [0.00010609799999999892, 0.00010600000000000193, 0.0001058750000000018, 0.00010568000000000036, 0.00010580500000000048, 0.00010534699999999869, 0.000106208, 0.00010537499999999783, 0.00010604...</msg>
<status status="PASS" starttime="20201029 18:18:13.955" endtime="20201029 18:18:13.959"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:13.963" level="INFO">NAME: accuracy-TIMER_SLEEP-91-philip</msg>
<status status="PASS" starttime="20201029 18:18:13.962" endtime="20201029 18:18:13.964"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:13.966" level="INFO">VALUE: [0.00010609799999999892, 0.00010600000000000193, 0.0001058750000000018, 0.00010568000000000036, 0.00010580500000000048, 0.00010534699999999869, 0.000106208, 0.00010537499999999783, 0.00010604200000000064, 0.00010586099999999876, 0.00010627800000000132, 0.00010591600000000104, 0.00010592999999999714, 0.00010600000000000193, 0.00010594499999999965, 0.00010623599999999914, 0.00010629200000000089, 0.00010558299999999937, 0.00010577800000000082, 0.00010534800000000163, 0.00010606999999999978, 0.00010583299999999962, 0.00010622199999999957, 0.00010598599999999889, 0.0001057360000000021, 0.00010623599999999914, 0.00010573599999999864, 0.00010586099999999876, 0.00010593100000000008, 0.00010616700000000076, 0.0001058750000000018, 0.00010627700000000184, 0.0001060690000000003, 0.00010623599999999914, 0.00010534699999999869, 0.00010568000000000036, 0.00010588900000000137, 0.00010616699999999729, 0.00010537499999999783, 0.0001057499999999982, 0.00010630500000000098, 0.00010598599999999889, 0.00010576400000000125, 0.00010536100000000173, 0.00010608299999999987, 0.00010563900000000112, 0.00010545799999999925, 0.0001058889999999979, 0.00010611100000000248, 0.00010540300000000044]</msg>
<status status="PASS" starttime="20201029 18:18:13.965" endtime="20201029 18:18:13.967"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:13.959" endtime="20201029 18:18:13.967"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:13.971" endtime="20201029 18:18:13.991"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:13.970" endtime="20201029 18:18:13.991"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:13.968" endtime="20201029 18:18:13.992"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:13.607" endtime="20201029 18:18:13.992"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:13.606" endtime="20201029 18:18:13.992"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:14.001" endtime="20201029 18:18:14.022"></status>
</kw>
<msg timestamp="20201029 18:18:14.022" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:13.999" endtime="20201029 18:18:14.023"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:14.025" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:14.023" endtime="20201029 18:18:14.025"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:14.026" endtime="20201029 18:18:14.028"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:13.997" endtime="20201029 18:18:14.029"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:13.995" endtime="20201029 18:18:14.029"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:14.036" endtime="20201029 18:18:14.323"></status>
</kw>
<msg timestamp="20201029 18:18:14.326" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020280319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020386903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:14.035" endtime="20201029 18:18:14.326"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:14.334" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020280319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020386903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:14.327" endtime="20201029 18:18:14.335"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:14.336" endtime="20201029 18:18:14.337"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:14.032" endtime="20201029 18:18:14.338"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:14.030" endtime="20201029 18:18:14.338"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:14.342" level="INFO">${RESULT} = [{'diff': 0.00010658399999999985}, {'diff': 0.00010729200000000189}, {'diff': 0.00010708300000000087}, {'diff': 0.00010711199999999949}, {'diff': 0.00010663899999999865}, {'diff': 0.000107041000000002...</msg>
<status status="PASS" starttime="20201029 18:18:14.339" endtime="20201029 18:18:14.343"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:14.347" level="INFO">${ACCURACY} = {'diff': [0.00010658399999999985, 0.00010729200000000189, 0.00010708300000000087, 0.00010711199999999949, 0.00010663899999999865, 0.00010704100000000216, 0.000107208000000001, 0.00010712499999999958, ...</msg>
<status status="PASS" starttime="20201029 18:18:14.343" endtime="20201029 18:18:14.347"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:14.351" level="INFO">NAME: accuracy-TIMER_SLEEP-92-philip</msg>
<status status="PASS" starttime="20201029 18:18:14.350" endtime="20201029 18:18:14.352"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:14.354" level="INFO">VALUE: [0.00010658399999999985, 0.00010729200000000189, 0.00010708300000000087, 0.00010711199999999949, 0.00010663899999999865, 0.00010704100000000216, 0.000107208000000001, 0.00010712499999999958, 0.0001070279999999986, 0.00010712499999999958, 0.00010694499999999718, 0.00010690299999999847, 0.00010658399999999985, 0.00010677700000000234, 0.00010688900000000237, 0.00010705500000000173, 0.00010652800000000157, 0.00010663899999999865, 0.00010682000000000053, 0.0001070560000000012, 0.00010704200000000164, 0.00010693100000000108, 0.00010709799999999992, 0.00010683299999999715, 0.00010658300000000037, 0.00010652700000000209, 0.00010676399999999878, 0.00010665299999999822, 0.00010663900000000212, 0.00010644500000000015, 0.00010704200000000164, 0.0001063889999999984, 0.00010716599999999882, 0.00010641600000000154, 0.0001068889999999989, 0.00010666699999999779, 0.00010730500000000198, 0.00010666699999999779, 0.00010677799999999835, 0.00010673599999999964, 0.00010711100000000001, 0.00010688900000000237, 0.00010670899999999997, 0.00010688799999999943, 0.0001070690000000013, 0.00010697200000000032, 0.00010643100000000058, 0.00010673599999999964, 0.00010649999999999896, 0.00010684699999999672]</msg>
<status status="PASS" starttime="20201029 18:18:14.353" endtime="20201029 18:18:14.355"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:14.348" endtime="20201029 18:18:14.355"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:14.359" endtime="20201029 18:18:14.379"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:14.358" endtime="20201029 18:18:14.379"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:14.356" endtime="20201029 18:18:14.379"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:13.993" endtime="20201029 18:18:14.380"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:13.993" endtime="20201029 18:18:14.380"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:14.389" endtime="20201029 18:18:14.411"></status>
</kw>
<msg timestamp="20201029 18:18:14.411" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:14.388" endtime="20201029 18:18:14.411"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:14.414" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:14.412" endtime="20201029 18:18:14.414"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:14.415" endtime="20201029 18:18:14.417"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:14.385" endtime="20201029 18:18:14.417"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:14.383" endtime="20201029 18:18:14.418"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:14.424" endtime="20201029 18:18:14.711"></status>
</kw>
<msg timestamp="20201029 18:18:14.714" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022064653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022172764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:14.423" endtime="20201029 18:18:14.714"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:14.722" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022064653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022172764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:14.715" endtime="20201029 18:18:14.723"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:14.723" endtime="20201029 18:18:14.725"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:14.420" endtime="20201029 18:18:14.726"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:14.418" endtime="20201029 18:18:14.726"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:14.730" level="INFO">${RESULT} = [{'diff': 0.00010811100000000101}, {'diff': 0.00010765299999999922}, {'diff': 0.00010744499999999768}, {'diff': 0.0001077500000000002}, {'diff': 0.00010818099999999886}, {'diff': 0.0001081110000000010...</msg>
<status status="PASS" starttime="20201029 18:18:14.727" endtime="20201029 18:18:14.730"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:14.735" level="INFO">${ACCURACY} = {'diff': [0.00010811100000000101, 0.00010765299999999922, 0.00010744499999999768, 0.0001077500000000002, 0.00010818099999999886, 0.00010811100000000101, 0.00010816599999999982, 0.00010823599999999767,...</msg>
<status status="PASS" starttime="20201029 18:18:14.731" endtime="20201029 18:18:14.735"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:14.739" level="INFO">NAME: accuracy-TIMER_SLEEP-93-philip</msg>
<status status="PASS" starttime="20201029 18:18:14.738" endtime="20201029 18:18:14.740"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:14.742" level="INFO">VALUE: [0.00010811100000000101, 0.00010765299999999922, 0.00010744499999999768, 0.0001077500000000002, 0.00010818099999999886, 0.00010811100000000101, 0.00010816599999999982, 0.00010823599999999767, 0.00010822200000000157, 0.00010791700000000251, 0.00010773600000000064, 0.00010745800000000125, 0.0001077500000000002, 0.00010780600000000196, 0.00010819399999999896, 0.0001073340000000006, 0.00010780500000000248, 0.00010737499999999983, 0.00010763899999999965, 0.00010816699999999929, 0.00010743099999999811, 0.00010818100000000233, 0.0001073889999999994, 0.00010801400000000003, 0.00010797200000000132, 0.00010767999999999889, 0.000108208000000002, 0.00010811100000000101, 0.00010733300000000112, 0.00010751399999999953, 0.00010819499999999843, 0.00010772200000000107, 0.0001078340000000011, 0.0001076950000000014, 0.00010801300000000055, 0.00010809700000000144, 0.00010777699999999987, 0.00010762500000000008, 0.00010770900000000097, 0.00010784699999999772, 0.00010820799999999853, 0.0001076950000000014, 0.00010809700000000144, 0.00010776399999999978, 0.00010758400000000085, 0.00010797200000000132, 0.00010809700000000144, 0.00010800000000000046, 0.00010768100000000183, 0.00010813900000000015]</msg>
<status status="PASS" starttime="20201029 18:18:14.740" endtime="20201029 18:18:14.744"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:14.736" endtime="20201029 18:18:14.744"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:14.748" endtime="20201029 18:18:14.767"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:14.746" endtime="20201029 18:18:14.768"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:14.745" endtime="20201029 18:18:14.768"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:14.381" endtime="20201029 18:18:14.769"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:14.380" endtime="20201029 18:18:14.769"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:14.778" endtime="20201029 18:18:14.797"></status>
</kw>
<msg timestamp="20201029 18:18:14.797" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:14.776" endtime="20201029 18:18:14.797"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:14.800" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:14.798" endtime="20201029 18:18:14.800"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:14.801" endtime="20201029 18:18:14.803"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:14.773" endtime="20201029 18:18:14.803"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:14.771" endtime="20201029 18:18:14.804"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:14.810" endtime="20201029 18:18:15.097"></status>
</kw>
<msg timestamp="20201029 18:18:15.100" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020257347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020366194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:14.809" endtime="20201029 18:18:15.101"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:15.109" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020257347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020366194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:15.102" endtime="20201029 18:18:15.109"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:15.110" endtime="20201029 18:18:15.112"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:14.806" endtime="20201029 18:18:15.112"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:14.804" endtime="20201029 18:18:15.113"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:15.117" level="INFO">${RESULT} = [{'diff': 0.00010884700000000219}, {'diff': 0.0001083890000000004}, {'diff': 0.00010866699999999979}, {'diff': 0.00010899999999999799}, {'diff': 0.0001087219999999986}, {'diff': 0.00010898600000000189...</msg>
<status status="PASS" starttime="20201029 18:18:15.113" endtime="20201029 18:18:15.117"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:15.122" level="INFO">${ACCURACY} = {'diff': [0.00010884700000000219, 0.0001083890000000004, 0.00010866699999999979, 0.00010899999999999799, 0.0001087219999999986, 0.00010898600000000189, 0.0001085280000000001, 0.00010898599999999842, 0...</msg>
<status status="PASS" starttime="20201029 18:18:15.118" endtime="20201029 18:18:15.122"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:15.126" level="INFO">NAME: accuracy-TIMER_SLEEP-94-philip</msg>
<status status="PASS" starttime="20201029 18:18:15.125" endtime="20201029 18:18:15.127"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:15.129" level="INFO">VALUE: [0.00010884700000000219, 0.0001083890000000004, 0.00010866699999999979, 0.00010899999999999799, 0.0001087219999999986, 0.00010898600000000189, 0.0001085280000000001, 0.00010898599999999842, 0.00010881999999999906, 0.0001087219999999986, 0.00010867999999999989, 0.00010918000000000039, 0.00010834699999999822, 0.00010875000000000121, 0.00010862500000000108, 0.00010872200000000207, 0.00010927800000000085, 0.00010912500000000158, 0.00010854199999999967, 0.00010873600000000164, 0.00010836100000000126, 0.00010875000000000121, 0.00010840299999999997, 0.00010922200000000257, 0.00010833299999999865, 0.00010933299999999965, 0.00010834700000000169, 0.00010916700000000029, 0.0001092219999999991, 0.00010923599999999867, 0.00010879100000000044, 0.00010831899999999908, 0.0001087089999999985, 0.0001090280000000006, 0.0001091950000000029, 0.00010933399999999913, 0.00010927800000000085, 0.00010912500000000158, 0.00010898600000000189, 0.00010900000000000146, 0.00010876400000000078, 0.00010886099999999829, 0.00010837499999999736, 0.00010879199999999992, 0.00010886099999999829, 0.00010913900000000115, 0.00010902799999999713, 0.00010880500000000001, 0.0001085829999999989, 0.00010858300000000237]</msg>
<status status="PASS" starttime="20201029 18:18:15.128" endtime="20201029 18:18:15.130"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:15.123" endtime="20201029 18:18:15.130"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:15.134" endtime="20201029 18:18:15.154"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:15.133" endtime="20201029 18:18:15.155"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:15.132" endtime="20201029 18:18:15.155"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:14.770" endtime="20201029 18:18:15.155"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:14.769" endtime="20201029 18:18:15.155"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:15.164" endtime="20201029 18:18:15.185"></status>
</kw>
<msg timestamp="20201029 18:18:15.186" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:15.163" endtime="20201029 18:18:15.186"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:15.188" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:15.187" endtime="20201029 18:18:15.189"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:15.189" endtime="20201029 18:18:15.191"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:15.160" endtime="20201029 18:18:15.192"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:15.158" endtime="20201029 18:18:15.192"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:15.199" endtime="20201029 18:18:15.486"></status>
</kw>
<msg timestamp="20201029 18:18:15.489" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020242611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020352528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:15.197" endtime="20201029 18:18:15.489"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:15.497" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020242611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020352528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:15.490" endtime="20201029 18:18:15.497"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:15.498" endtime="20201029 18:18:15.500"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:15.195" endtime="20201029 18:18:15.501"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:15.193" endtime="20201029 18:18:15.501"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:15.505" level="INFO">${RESULT} = [{'diff': 0.00010991700000000104}, {'diff': 0.00010962499999999861}, {'diff': 0.00011009800000000292}, {'diff': 0.00011001299999999908}, {'diff': 0.00011011099999999954}, {'diff': 0.000109569000000000...</msg>
<status status="PASS" starttime="20201029 18:18:15.502" endtime="20201029 18:18:15.505"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:15.509" level="INFO">${ACCURACY} = {'diff': [0.00010991700000000104, 0.00010962499999999861, 0.00011009800000000292, 0.00011001299999999908, 0.00011011099999999954, 0.00010956900000000033, 0.00010944400000000021, 0.00010988899999999843...</msg>
<status status="PASS" starttime="20201029 18:18:15.506" endtime="20201029 18:18:15.509"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:15.514" level="INFO">NAME: accuracy-TIMER_SLEEP-95-philip</msg>
<status status="PASS" starttime="20201029 18:18:15.513" endtime="20201029 18:18:15.514"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:15.516" level="INFO">VALUE: [0.00010991700000000104, 0.00010962499999999861, 0.00011009800000000292, 0.00011001299999999908, 0.00011011099999999954, 0.00010956900000000033, 0.00010944400000000021, 0.00010988899999999843, 0.00010994399999999724, 0.00010987499999999886, 0.00011030500000000151, 0.00010976399999999831, 0.0001095280000000011, 0.00010995800000000028, 0.00011005500000000126, 0.00011029100000000194, 0.00010956900000000033, 0.00010976399999999831, 0.00010987499999999886, 0.00010980600000000049, 0.00011011099999999954, 0.00010976400000000178, 0.0001097630000000023, 0.0001094020000000015, 0.00010987499999999886, 0.00010936100000000226, 0.00011019400000000096, 0.00010948599999999892, 0.00011011099999999954, 0.00010980600000000049, 0.00010972299999999907, 0.00010993100000000061, 0.00010947199999999935, 0.00011012499999999911, 0.00010987499999999886, 0.0001095419999999972, 0.00011016699999999782, 0.00010952799999999763, 0.00011005599999999727, 0.00010980599999999702, 0.00010962499999999861, 0.00010954100000000119, 0.00010954100000000119, 0.00011000000000000246, 0.00010937500000000183, 0.00010948600000000239, 0.00011030600000000099, 0.00010969499999999993, 0.00010994500000000018, 0.00010969400000000046]</msg>
<status status="PASS" starttime="20201029 18:18:15.515" endtime="20201029 18:18:15.522"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:15.510" endtime="20201029 18:18:15.522"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:15.526" endtime="20201029 18:18:15.546"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:15.525" endtime="20201029 18:18:15.546"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:15.523" endtime="20201029 18:18:15.547"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:15.156" endtime="20201029 18:18:15.547"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:15.156" endtime="20201029 18:18:15.547"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:15.556" endtime="20201029 18:18:15.578"></status>
</kw>
<msg timestamp="20201029 18:18:15.578" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:15.554" endtime="20201029 18:18:15.578"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:15.581" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:15.579" endtime="20201029 18:18:15.581"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:15.582" endtime="20201029 18:18:15.584"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:15.552" endtime="20201029 18:18:15.584"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:15.549" endtime="20201029 18:18:15.585"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:15.592" endtime="20201029 18:18:15.893"></status>
</kw>
<msg timestamp="20201029 18:18:15.896" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021789542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021900125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:15.590" endtime="20201029 18:18:15.896"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:15.903" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021789542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021900125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:15.897" endtime="20201029 18:18:15.904"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:15.905" endtime="20201029 18:18:15.906"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:15.587" endtime="20201029 18:18:15.907"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:15.585" endtime="20201029 18:18:15.907"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:15.911" level="INFO">${RESULT} = [{'diff': 0.0001105830000000009}, {'diff': 0.00011115299999999925}, {'diff': 0.00011116699999999882}, {'diff': 0.00011063900000000265}, {'diff': 0.00011091699999999857}, {'diff': 0.0001109729999999968...</msg>
<status status="PASS" starttime="20201029 18:18:15.908" endtime="20201029 18:18:15.911"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:15.915" level="INFO">${ACCURACY} = {'diff': [0.0001105830000000009, 0.00011115299999999925, 0.00011116699999999882, 0.00011063900000000265, 0.00011091699999999857, 0.00011097299999999685, 0.00011045900000000025, 0.00011134700000000122,...</msg>
<status status="PASS" starttime="20201029 18:18:15.912" endtime="20201029 18:18:15.916"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:15.920" level="INFO">NAME: accuracy-TIMER_SLEEP-96-philip</msg>
<status status="PASS" starttime="20201029 18:18:15.919" endtime="20201029 18:18:15.920"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:15.922" level="INFO">VALUE: [0.0001105830000000009, 0.00011115299999999925, 0.00011116699999999882, 0.00011063900000000265, 0.00011091699999999857, 0.00011097299999999685, 0.00011045900000000025, 0.00011134700000000122, 0.0001112220000000011, 0.00011069399999999799, 0.00011127799999999938, 0.0001105419999999982, 0.00011097200000000085, 0.00011081900000000158, 0.00011070899999999703, 0.00011086199999999977, 0.00011059700000000047, 0.00011080499999999854, 0.00011074999999999974, 0.00011059700000000047, 0.00011129200000000242, 0.00011040300000000197, 0.00011045900000000025, 0.00011104200000000217, 0.00011086199999999977, 0.00011094400000000171, 0.0001105830000000009, 0.00011065199999999928, 0.00011092999999999867, 0.00011109700000000097, 0.00011105600000000174, 0.00011034700000000022, 0.00011093099999999814, 0.00011106999999999784, 0.00011048599999999992, 0.00011044399999999774, 0.00011116599999999935, 0.0001110830000000014, 0.00011045900000000025, 0.00011090300000000247, 0.00011068100000000136, 0.0001112220000000011, 0.00011066700000000179, 0.00011109800000000045, 0.00011065199999999928, 0.00011115199999999978, 0.00011067999999999842, 0.00011102799999999913, 0.00011106900000000183, 0.00011093099999999814]</msg>
<status status="PASS" starttime="20201029 18:18:15.921" endtime="20201029 18:18:15.924"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:15.916" endtime="20201029 18:18:15.924"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:15.928" endtime="20201029 18:18:15.947"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:15.927" endtime="20201029 18:18:15.948"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:15.925" endtime="20201029 18:18:15.948"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:15.548" endtime="20201029 18:18:15.949"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:15.547" endtime="20201029 18:18:15.949"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:15.957" endtime="20201029 18:18:15.976"></status>
</kw>
<msg timestamp="20201029 18:18:15.977" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:15.956" endtime="20201029 18:18:15.977"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:15.979" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:15.978" endtime="20201029 18:18:15.979"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:15.980" endtime="20201029 18:18:15.982"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:15.953" endtime="20201029 18:18:15.982"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:15.951" endtime="20201029 18:18:15.983"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:15.989" endtime="20201029 18:18:16.275"></status>
</kw>
<msg timestamp="20201029 18:18:16.278" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019747167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019859403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:15.988" endtime="20201029 18:18:16.279"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:16.296" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019747167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019859403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:16.280" endtime="20201029 18:18:16.296"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:16.298" endtime="20201029 18:18:16.301"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:15.985" endtime="20201029 18:18:16.303"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:15.983" endtime="20201029 18:18:16.303"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:16.312" level="INFO">${RESULT} = [{'diff': 0.00011223600000000167}, {'diff': 0.00011165299999999975}, {'diff': 0.00011184700000000172}, {'diff': 0.00011190200000000053}, {'diff': 0.00011144400000000221}, {'diff': 0.000112291000000000...</msg>
<status status="PASS" starttime="20201029 18:18:16.305" endtime="20201029 18:18:16.312"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:16.322" level="INFO">${ACCURACY} = {'diff': [0.00011223600000000167, 0.00011165299999999975, 0.00011184700000000172, 0.00011190200000000053, 0.00011144400000000221, 0.00011229100000000047, 0.00011138899999999993, 0.00011145800000000178...</msg>
<status status="PASS" starttime="20201029 18:18:16.314" endtime="20201029 18:18:16.323"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:16.331" level="INFO">NAME: accuracy-TIMER_SLEEP-97-philip</msg>
<status status="PASS" starttime="20201029 18:18:16.329" endtime="20201029 18:18:16.332"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:16.336" level="INFO">VALUE: [0.00011223600000000167, 0.00011165299999999975, 0.00011184700000000172, 0.00011190200000000053, 0.00011144400000000221, 0.00011229100000000047, 0.00011138899999999993, 0.00011145800000000178, 0.0001115419999999992, 0.00011227800000000038, 0.000111596999999998, 0.00011172199999999813, 0.00011184699999999825, 0.00011137499999999689, 0.00011206899999999936, 0.00011156900000000233, 0.00011205599999999927, 0.00011154200000000267, 0.00011130500000000251, 0.00011186099999999782, 0.00011197199999999838, 0.00011188900000000043, 0.00011136100000000079, 0.00011217999999999992, 0.00011169400000000246, 0.00011162500000000061, 0.00011193100000000261, 0.00011143100000000211, 0.000111596999999998, 0.0001118480000000012, 0.0001117770000000004, 0.0001117220000000016, 0.00011188900000000043, 0.0001120549999999998, 0.00011195800000000228, 0.00011176400000000031, 0.00011193099999999914, 0.00011162500000000061, 0.00011162500000000061, 0.00011224999999999777, 0.00011194399999999924, 0.00011216699999999982, 0.00011211100000000154, 0.0001122359999999982, 0.000111903, 0.00011176400000000031, 0.00011236099999999832, 0.00011150000000000049, 0.00011165299999999975, 0.00011202699999999718]</msg>
<status status="PASS" starttime="20201029 18:18:16.333" endtime="20201029 18:18:16.338"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:16.324" endtime="20201029 18:18:16.339"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:16.346" endtime="20201029 18:18:16.368"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:16.343" endtime="20201029 18:18:16.369"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:16.341" endtime="20201029 18:18:16.370"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:15.950" endtime="20201029 18:18:16.371"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:15.949" endtime="20201029 18:18:16.371"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:16.385" endtime="20201029 18:18:16.406"></status>
</kw>
<msg timestamp="20201029 18:18:16.407" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:16.384" endtime="20201029 18:18:16.407"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:16.409" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:16.408" endtime="20201029 18:18:16.410"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:16.410" endtime="20201029 18:18:16.412"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:16.381" endtime="20201029 18:18:16.413"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:16.376" endtime="20201029 18:18:16.413"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:16.419" endtime="20201029 18:18:16.706"></status>
</kw>
<msg timestamp="20201029 18:18:16.709" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028911153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029023944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:16.418" endtime="20201029 18:18:16.709"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:16.717" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028911153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029023944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:16.710" endtime="20201029 18:18:16.717"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:16.718" endtime="20201029 18:18:16.720"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:16.415" endtime="20201029 18:18:16.720"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:16.414" endtime="20201029 18:18:16.721"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:16.725" level="INFO">${RESULT} = [{'diff': 0.00011279100000000097}, {'diff': 0.00011236100000000179}, {'diff': 0.0001130969999999995}, {'diff': 0.0001127220000000026}, {'diff': 0.00011300000000000199}, {'diff': 0.0001129299999999972}...</msg>
<status status="PASS" starttime="20201029 18:18:16.722" endtime="20201029 18:18:16.725"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:16.729" level="INFO">${ACCURACY} = {'diff': [0.00011279100000000097, 0.00011236100000000179, 0.0001130969999999995, 0.0001127220000000026, 0.00011300000000000199, 0.0001129299999999972, 0.00011243099999999964, 0.00011329199999999748, 0...</msg>
<status status="PASS" starttime="20201029 18:18:16.726" endtime="20201029 18:18:16.729"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:16.733" level="INFO">NAME: accuracy-TIMER_SLEEP-98-philip</msg>
<status status="PASS" starttime="20201029 18:18:16.732" endtime="20201029 18:18:16.733"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:16.736" level="INFO">VALUE: [0.00011279100000000097, 0.00011236100000000179, 0.0001130969999999995, 0.0001127220000000026, 0.00011300000000000199, 0.0001129299999999972, 0.00011243099999999964, 0.00011329199999999748, 0.00011255599999999977, 0.00011311100000000254, 0.00011284700000000272, 0.00011313899999999821, 0.00011330499999999757, 0.00011274999999999827, 0.00011258299999999943, 0.00011330600000000052, 0.0001124030000000005, 0.00011269499999999946, 0.00011270899999999903, 0.0001132770000000019, 0.00011241600000000407, 0.00011319499999999649, 0.00011265299999999728, 0.00011330500000000104, 0.00011293099999999667, 0.00011290299999999753, 0.00011281999999999959, 0.00011316699999999735, 0.0001123749999999979, 0.00011325000000000224, 0.00011316699999999735, 0.0001130969999999995, 0.00011247199999999541, 0.00011334699999999975, 0.00011244399999999627, 0.00011262499999999814, 0.00011297199999999591, 0.00011319500000000343, 0.00011244400000000321, 0.00011301400000000156, 0.0001132770000000019, 0.0001128749999999984, 0.00011284699999999925, 0.00011269400000000346, 0.00011245799999999584, 0.00011330599999999358, 0.00011261100000000551, 0.00011338899999999846, 0.00011325000000000224, 0.00011268000000000389]</msg>
<status status="PASS" starttime="20201029 18:18:16.734" endtime="20201029 18:18:16.736"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:16.729" endtime="20201029 18:18:16.737"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:16.741" endtime="20201029 18:18:16.760"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:16.739" endtime="20201029 18:18:16.761"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:16.738" endtime="20201029 18:18:16.761"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:16.373" endtime="20201029 18:18:16.761"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:16.372" endtime="20201029 18:18:16.761"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:16.770" endtime="20201029 18:18:16.795"></status>
</kw>
<msg timestamp="20201029 18:18:16.795" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:16.768" endtime="20201029 18:18:16.795"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:16.798" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:16.796" endtime="20201029 18:18:16.798"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:16.799" endtime="20201029 18:18:16.800"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:16.766" endtime="20201029 18:18:16.801"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:16.764" endtime="20201029 18:18:16.801"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:16.808" endtime="20201029 18:18:17.095"></status>
</kw>
<msg timestamp="20201029 18:18:17.098" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023815042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023928792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:16.806" endtime="20201029 18:18:17.098"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:17.106" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023815042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023928792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:17.099" endtime="20201029 18:18:17.106"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:17.107" endtime="20201029 18:18:17.108"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:16.804" endtime="20201029 18:18:17.109"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:16.802" endtime="20201029 18:18:17.109"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:17.113" level="INFO">${RESULT} = [{'diff': 0.00011374999999999927}, {'diff': 0.00011366699999999785}, {'diff': 0.0001133749999999989}, {'diff': 0.00011341599999999813}, {'diff': 0.00011422200000000063}, {'diff': 0.0001135420000000012...</msg>
<status status="PASS" starttime="20201029 18:18:17.110" endtime="20201029 18:18:17.113"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:17.117" level="INFO">${ACCURACY} = {'diff': [0.00011374999999999927, 0.00011366699999999785, 0.0001133749999999989, 0.00011341599999999813, 0.00011422200000000063, 0.0001135420000000012, 0.00011366700000000132, 0.00011341700000000107, ...</msg>
<status status="PASS" starttime="20201029 18:18:17.114" endtime="20201029 18:18:17.117"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:17.122" level="INFO">NAME: accuracy-TIMER_SLEEP-99-philip</msg>
<status status="PASS" starttime="20201029 18:18:17.121" endtime="20201029 18:18:17.122"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:17.124" level="INFO">VALUE: [0.00011374999999999927, 0.00011366699999999785, 0.0001133749999999989, 0.00011341599999999813, 0.00011422200000000063, 0.0001135420000000012, 0.00011366700000000132, 0.00011341700000000107, 0.0001142360000000002, 0.0001142230000000001, 0.00011377800000000188, 0.00011374999999999927, 0.00011336099999999932, 0.00011381900000000111, 0.00011384700000000025, 0.00011372200000000013, 0.00011336099999999932, 0.00011368100000000089, 0.00011382000000000059, 0.00011359799999999948, 0.00011406900000000136, 0.00011423699999999967, 0.00011336100000000279, 0.00011404099999999875, 0.00011397200000000038, 0.00011420800000000106, 0.00011384700000000025, 0.00011368100000000089, 0.00011419500000000096, 0.00011397299999999985, 0.00011430600000000152, 0.00011417999999999845, 0.00011375000000000274, 0.00011362499999999914, 0.00011432000000000109, 0.00011336100000000279, 0.00011369500000000046, 0.00011420900000000053, 0.00011409699999999703, 0.00011338900000000193, 0.00011406900000000136, 0.00011336099999999932, 0.00011434700000000075, 0.00011417999999999845, 0.00011405600000000127, 0.0001140559999999978, 0.00011420900000000053, 0.00011377799999999841, 0.00011384799999999973, 0.00011433300000000118]</msg>
<status status="PASS" starttime="20201029 18:18:17.123" endtime="20201029 18:18:17.126"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:17.118" endtime="20201029 18:18:17.126"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:17.130" endtime="20201029 18:18:17.149"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:17.128" endtime="20201029 18:18:17.150"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:17.127" endtime="20201029 18:18:17.150"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:16.762" endtime="20201029 18:18:17.150"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:16.762" endtime="20201029 18:18:17.151"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:17.159" endtime="20201029 18:18:17.180"></status>
</kw>
<msg timestamp="20201029 18:18:17.181" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:17.158" endtime="20201029 18:18:17.181"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:17.183" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:17.182" endtime="20201029 18:18:17.183"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:17.184" endtime="20201029 18:18:17.186"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:17.155" endtime="20201029 18:18:17.186"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:17.153" endtime="20201029 18:18:17.187"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:17.193" endtime="20201029 18:18:17.479"></status>
</kw>
<msg timestamp="20201029 18:18:17.482" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020598458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020713389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:17.192" endtime="20201029 18:18:17.483"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:17.490" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020598458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020713389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:17.484" endtime="20201029 18:18:17.491"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:17.492" endtime="20201029 18:18:17.493"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:17.189" endtime="20201029 18:18:17.494"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:17.187" endtime="20201029 18:18:17.494"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:17.498" level="INFO">${RESULT} = [{'diff': 0.00011493099999999867}, {'diff': 0.00011512500000000064}, {'diff': 0.00011470899999999756}, {'diff': 0.0001143749999999999}, {'diff': 0.00011475000000000027}, {'diff': 0.0001143469999999972...</msg>
<status status="PASS" starttime="20201029 18:18:17.495" endtime="20201029 18:18:17.498"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:17.503" level="INFO">${ACCURACY} = {'diff': [0.00011493099999999867, 0.00011512500000000064, 0.00011470899999999756, 0.0001143749999999999, 0.00011475000000000027, 0.00011434699999999728, 0.00011476399999999984, 0.00011466700000000232,...</msg>
<status status="PASS" starttime="20201029 18:18:17.499" endtime="20201029 18:18:17.503"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:17.508" level="INFO">NAME: accuracy-TIMER_SLEEP-100-philip</msg>
<status status="PASS" starttime="20201029 18:18:17.507" endtime="20201029 18:18:17.508"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:17.510" level="INFO">VALUE: [0.00011493099999999867, 0.00011512500000000064, 0.00011470899999999756, 0.0001143749999999999, 0.00011475000000000027, 0.00011434699999999728, 0.00011476399999999984, 0.00011466700000000232, 0.00011467999999999895, 0.00011482000000000159, 0.00011466699999999885, 0.00011452800000000263, 0.00011480599999999855, 0.00011440200000000303, 0.00011466699999999885, 0.00011511100000000107, 0.0001151109999999976, 0.00011472200000000113, 0.0001151109999999976, 0.00011456999999999787, 0.00011454199999999873, 0.00011531999999999862, 0.00011477699999999993, 0.00011483300000000168, 0.00011466700000000232, 0.00011526400000000034, 0.00011494499999999824, 0.00011443099999999817, 0.000114597000000001, 0.00011518099999999892, 0.00011515299999999978, 0.00011467999999999895, 0.00011441599999999913, 0.00011476399999999984, 0.00011452799999999916, 0.00011484700000000125, 0.00011451399999999959, 0.0001145420000000022, 0.00011468099999999842, 0.0001143749999999999, 0.00011512500000000064, 0.00011493000000000267, 0.00011484700000000125, 0.00011445799999999784, 0.00011481999999999812, 0.00011469399999999852, 0.00011463899999999971, 0.00011504199999999923, 0.00011445900000000078, 0.00011484800000000073]</msg>
<status status="PASS" starttime="20201029 18:18:17.509" endtime="20201029 18:18:17.511"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:17.504" endtime="20201029 18:18:17.511"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:17.515" endtime="20201029 18:18:17.534"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:17.513" endtime="20201029 18:18:17.535"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:17.512" endtime="20201029 18:18:17.535"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:17.152" endtime="20201029 18:18:17.536"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:17.151" endtime="20201029 18:18:17.536"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:38.618" endtime="20201029 18:18:17.536"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
</tags>
<status status="PASS" starttime="20201029 18:17:35.520" endtime="20201029 18:18:17.536" critical="yes"></status>
</test>
<status status="PASS" starttime="20201029 18:16:46.339" endtime="20201029 18:18:17.540"></status>
</suite>
<suite id="s1-s4" name="Sleep Jitter" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/03__sleep_jitter.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 18:18:17.592" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 18:18:17.601" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 18:18:18.817" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 18:18:17.591" endtime="20201029 18:18:18.818"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 18:18:21.821" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20201029 18:18:18.819" endtime="20201029 18:18:21.822"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:17.590" endtime="20201029 18:18:21.823"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:21.827" endtime="20201029 18:18:22.046"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:21.825" endtime="20201029 18:18:22.047"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:22.059" endtime="20201029 18:18:25.086"></status>
</kw>
<msg timestamp="20201029 18:18:25.087" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:22.058" endtime="20201029 18:18:25.087"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:25.092" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:25.089" endtime="20201029 18:18:25.093"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:18:25.099" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:18:25.095" endtime="20201029 18:18:25.100"></status>
</kw>
<status status="FAIL" starttime="20201029 18:18:22.056" endtime="20201029 18:18:25.102"></status>
</kw>
<status status="FAIL" starttime="20201029 18:18:22.053" endtime="20201029 18:18:25.103"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:22.052" endtime="20201029 18:18:25.104"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:18:25.112" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:18:25.111" endtime="20201029 18:18:25.113"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:25.106" endtime="20201029 18:18:25.114"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:22.051" endtime="20201029 18:18:25.114"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:22.051" endtime="20201029 18:18:25.114"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:25.116" endtime="20201029 18:18:25.119"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:22.049" endtime="20201029 18:18:25.120"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:25.122" endtime="20201029 18:18:25.126"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:22.048" endtime="20201029 18:18:25.127"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:17.589" endtime="20201029 18:18:25.127"></status>
</kw>
<test id="s1-s4-t1" name="0 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:25.140" endtime="20201029 18:18:25.163"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:25.137" endtime="20201029 18:18:25.164"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:25.193" endtime="20201029 18:18:28.218"></status>
</kw>
<msg timestamp="20201029 18:18:28.219" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:25.189" endtime="20201029 18:18:28.220"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:28.225" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:28.222" endtime="20201029 18:18:28.226"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:18:28.234" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:18:28.228" endtime="20201029 18:18:28.234"></status>
</kw>
<status status="FAIL" starttime="20201029 18:18:25.183" endtime="20201029 18:18:28.236"></status>
</kw>
<status status="FAIL" starttime="20201029 18:18:25.178" endtime="20201029 18:18:28.237"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:25.175" endtime="20201029 18:18:28.238"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:18:28.246" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:18:28.244" endtime="20201029 18:18:28.247"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:28.240" endtime="20201029 18:18:28.247"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:25.173" endtime="20201029 18:18:28.248"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:25.172" endtime="20201029 18:18:28.248"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:28.250" endtime="20201029 18:18:28.253"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:25.169" endtime="20201029 18:18:28.254"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:25.166" endtime="20201029 18:18:28.255"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:25.134" endtime="20201029 18:18:28.256"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>0</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:28.275" endtime="20201029 18:18:34.401"></status>
</kw>
<msg timestamp="20201029 18:18:34.402" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0\r\n'], 'data': [{'bg-timer-count': '0'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:28.271" endtime="20201029 18:18:34.402"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:34.408" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0\r\n'], 'data': [{'bg-timer-count': '0'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:34.404" endtime="20201029 18:18:34.408"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:34.410" endtime="20201029 18:18:34.414"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:28.265" endtime="20201029 18:18:34.415"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:28.261" endtime="20201029 18:18:34.416"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:34.421" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'main-timer-interval': 100000, 'bg-timer-count': 0}</msg>
<status status="PASS" starttime="20201029 18:18:34.417" endtime="20201029 18:18:34.422"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:34.432" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 18:18:34.429" endtime="20201029 18:18:34.432"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:34.436" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 18:18:34.434" endtime="20201029 18:18:34.437"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:34.423" endtime="20201029 18:18:34.438"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:34.446" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 18:18:34.444" endtime="20201029 18:18:34.447"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:34.451" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 18:18:34.449" endtime="20201029 18:18:34.452"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:34.439" endtime="20201029 18:18:34.453"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:34.463" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 18:18:34.460" endtime="20201029 18:18:34.464"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:34.467" level="INFO">VALUE: 0</msg>
<status status="PASS" starttime="20201029 18:18:34.465" endtime="20201029 18:18:34.468"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:34.454" endtime="20201029 18:18:34.469"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:34.478" endtime="20201029 18:18:34.784"></status>
</kw>
<msg timestamp="20201029 18:18:34.787" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.124573028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.224599514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:34.477" endtime="20201029 18:18:34.787"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:34.795" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.124573028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.224599514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:34.788" endtime="20201029 18:18:34.796"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:34.796" endtime="20201029 18:18:34.798"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:34.474" endtime="20201029 18:18:34.799"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:34.471" endtime="20201029 18:18:34.799"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 18:18:34.803" level="INFO">${FILTERED} = [{'diff': 0.10002648599999997}, {'diff': 0.10000898600000019}, {'diff': 0.10001184799999985}, {'diff': 0.1000108609999999}, {'diff': 0.1000108609999999}, {'diff': 0.1000108609999999}, {'diff': 0.10001...</msg>
<status status="PASS" starttime="20201029 18:18:34.800" endtime="20201029 18:18:34.804"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:34.807" level="INFO">${RESULT} = {'diff': [0.10002648599999997, 0.10000898600000019, 0.10001184799999985, 0.1000108609999999, 0.1000108609999999, 0.1000108609999999, 0.10001087500000017, 0.10001084700000007, 0.10001086100000034, 0.10...</msg>
<status status="PASS" starttime="20201029 18:18:34.804" endtime="20201029 18:18:34.808"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:34.812" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 18:18:34.811" endtime="20201029 18:18:34.812"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:34.814" level="INFO">VALUE: [0.10002648599999997, 0.10000898600000019, 0.10001184799999985, 0.1000108609999999, 0.1000108609999999, 0.1000108609999999, 0.10001087500000017, 0.10001084700000007, 0.10001086100000034, 0.10001084700000007, 0.10001086099999945, 0.10001086099999945, 0.10001087499999972, 0.10001088899999999, 0.10001084700000007, 0.10001084800000015, 0.10001086100000034, 0.10001086100000034, 0.10001088899999999, 0.10001084800000015, 0.1000109449999993, 5.419999995481817e-07, 5.420000004363601e-07, 5.410000003536197e-07, 5.419999995481817e-07, 5.420000004363601e-07, 5.410000003536197e-07, 5.419999995481817e-07, 5.419999995481817e-07, 5.419999995481817e-07, 5.409999994654413e-07, 5.419999995481817e-07, 5.420000004363601e-07, 5.409999994654413e-07, 5.419999995481817e-07, 5.420000004363601e-07, 5.410000003536197e-07, 5.420000004363601e-07, 5.420000004363601e-07, 5.410000003536197e-07, 5.410000003536197e-07, 5.420000004363601e-07, 0.10001140300000078, 5.420000004363601e-07, 5.409999994654413e-07, 5.420000004363601e-07, 5.419999995481817e-07, 5.410000003536197e-07, 5.420000004363601e-07]</msg>
<status status="PASS" starttime="20201029 18:18:34.813" endtime="20201029 18:18:34.815"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:34.808" endtime="20201029 18:18:34.815"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:28.257" endtime="20201029 18:18:34.816"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
</tags>
<status status="PASS" starttime="20201029 18:18:25.128" endtime="20201029 18:18:34.817" critical="yes"></status>
</test>
<test id="s1-s4-t2" name="5 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:34.823" endtime="20201029 18:18:34.843"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:34.822" endtime="20201029 18:18:34.843"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:34.859" endtime="20201029 18:18:37.881"></status>
</kw>
<msg timestamp="20201029 18:18:37.882" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:34.857" endtime="20201029 18:18:37.883"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:37.888" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:37.884" endtime="20201029 18:18:37.888"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:18:37.894" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:18:37.890" endtime="20201029 18:18:37.895"></status>
</kw>
<status status="FAIL" starttime="20201029 18:18:34.854" endtime="20201029 18:18:37.897"></status>
</kw>
<status status="FAIL" starttime="20201029 18:18:34.851" endtime="20201029 18:18:37.898"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:34.849" endtime="20201029 18:18:37.899"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:18:37.907" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:18:37.905" endtime="20201029 18:18:37.908"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:37.901" endtime="20201029 18:18:37.908"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:34.848" endtime="20201029 18:18:37.909"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:34.847" endtime="20201029 18:18:37.909"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:37.911" endtime="20201029 18:18:37.914"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:34.846" endtime="20201029 18:18:37.915"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:34.844" endtime="20201029 18:18:37.916"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:34.820" endtime="20201029 18:18:37.917"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>5</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:37.935" endtime="20201029 18:18:44.061"></status>
</kw>
<msg timestamp="20201029 18:18:44.062" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'bg-timer-count': '5'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:37.932" endtime="20201029 18:18:44.063"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:44.068" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'bg-timer-count': '5'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:44.065" endtime="20201029 18:18:44.069"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:44.070" endtime="20201029 18:18:44.074"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:37.926" endtime="20201029 18:18:44.075"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:37.921" endtime="20201029 18:18:44.076"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:44.081" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'main-timer-interval': 100000, 'bg-timer-count': 5}</msg>
<status status="PASS" starttime="20201029 18:18:44.078" endtime="20201029 18:18:44.083"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:44.092" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 18:18:44.089" endtime="20201029 18:18:44.092"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:44.096" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 18:18:44.094" endtime="20201029 18:18:44.097"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:44.084" endtime="20201029 18:18:44.098"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:44.106" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 18:18:44.104" endtime="20201029 18:18:44.107"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:44.114" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 18:18:44.109" endtime="20201029 18:18:44.114"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:44.099" endtime="20201029 18:18:44.115"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:44.124" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 18:18:44.122" endtime="20201029 18:18:44.125"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:44.129" level="INFO">VALUE: 5</msg>
<status status="PASS" starttime="20201029 18:18:44.126" endtime="20201029 18:18:44.129"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:44.117" endtime="20201029 18:18:44.130"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:44.145" endtime="20201029 18:18:44.455"></status>
</kw>
<msg timestamp="20201029 18:18:44.458" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.102890153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.202971153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:44.141" endtime="20201029 18:18:44.458"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:44.466" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.102890153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.202971153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:44.459" endtime="20201029 18:18:44.466"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:44.467" endtime="20201029 18:18:44.469"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:44.135" endtime="20201029 18:18:44.469"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:44.132" endtime="20201029 18:18:44.470"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 18:18:44.474" level="INFO">${FILTERED} = [{'diff': 0.10008099999999986}, {'diff': 0.09995933400000023}, {'diff': 0.10000986199999984}, {'diff': 0.10001086100000034}, {'diff': 0.1000108329999998}, {'diff': 0.1000108609999999}, {'diff': 0.1000...</msg>
<status status="PASS" starttime="20201029 18:18:44.470" endtime="20201029 18:18:44.474"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:44.478" level="INFO">${RESULT} = {'diff': [0.10008099999999986, 0.09995933400000023, 0.10000986199999984, 0.10001086100000034, 0.1000108329999998, 0.1000108609999999, 0.10001084700000007, 0.10001084700000007, 0.10001086100000034, 0.1...</msg>
<status status="PASS" starttime="20201029 18:18:44.475" endtime="20201029 18:18:44.478"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:44.483" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 18:18:44.482" endtime="20201029 18:18:44.483"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:44.486" level="INFO">VALUE: [0.10008099999999986, 0.09995933400000023, 0.10000986199999984, 0.10001086100000034, 0.1000108329999998, 0.1000108609999999, 0.10001084700000007, 0.10001084700000007, 0.10001086100000034, 0.10001084800000015, 0.10001086099999945, 0.10001086099999945, 0.10001086100000034, 0.10001084700000007, 0.10001084799999926, 0.10001087499999972, 0.10001086099999945, 0.1000108329999998, 0.10001086099999945, 0.10001087499999972, 0.10001083399999988, 0.10001093099999991, 5.419999995481817e-07, 5.420000004363601e-07, 5.410000003536197e-07, 5.420000004363601e-07, 5.419999995481817e-07, 5.419999995481817e-07, 5.410000003536197e-07, 5.420000004363601e-07, 5.420000004363601e-07, 5.419999995481817e-07, 5.419999995481817e-07, 5.409999994654413e-07, 5.420000004363601e-07, 5.419999995481817e-07, 5.419999995481817e-07, 5.409999994654413e-07, 5.420000004363601e-07, 5.419999995481817e-07, 5.410000003536197e-07, 5.410000003536197e-07, 5.420000004363601e-07, 5.420000004363601e-07, 5.409999994654413e-07, 5.420000004363601e-07, 5.420000004363601e-07, 5.409999994654413e-07, 0.10001137499999935, 0.10001086099999945]</msg>
<status status="PASS" starttime="20201029 18:18:44.484" endtime="20201029 18:18:44.486"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:44.479" endtime="20201029 18:18:44.487"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:37.918" endtime="20201029 18:18:44.487"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
</tags>
<status status="PASS" starttime="20201029 18:18:34.818" endtime="20201029 18:18:44.488" critical="yes"></status>
</test>
<test id="s1-s4-t3" name="10 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:44.495" endtime="20201029 18:18:44.514"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:44.493" endtime="20201029 18:18:44.515"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:44.528" endtime="20201029 18:18:47.552"></status>
</kw>
<msg timestamp="20201029 18:18:47.553" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:44.527" endtime="20201029 18:18:47.553"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:47.558" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:47.555" endtime="20201029 18:18:47.559"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:18:47.565" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:18:47.561" endtime="20201029 18:18:47.566"></status>
</kw>
<status status="FAIL" starttime="20201029 18:18:44.524" endtime="20201029 18:18:47.567"></status>
</kw>
<status status="FAIL" starttime="20201029 18:18:44.522" endtime="20201029 18:18:47.568"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:44.520" endtime="20201029 18:18:47.569"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:18:47.577" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:18:47.576" endtime="20201029 18:18:47.578"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:47.571" endtime="20201029 18:18:47.579"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:44.519" endtime="20201029 18:18:47.579"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:44.519" endtime="20201029 18:18:47.579"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:47.581" endtime="20201029 18:18:47.584"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:44.517" endtime="20201029 18:18:47.585"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:44.516" endtime="20201029 18:18:47.586"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:44.492" endtime="20201029 18:18:47.587"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>10</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:47.603" endtime="20201029 18:18:53.729"></status>
</kw>
<msg timestamp="20201029 18:18:53.730" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'bg-timer-count': '10'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:47.601" endtime="20201029 18:18:53.730"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:53.735" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'bg-timer-count': '10'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:53.732" endtime="20201029 18:18:53.736"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:53.738" endtime="20201029 18:18:53.742"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:47.596" endtime="20201029 18:18:53.743"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:47.592" endtime="20201029 18:18:53.744"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:53.750" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'main-timer-interval': 100000, 'bg-timer-count': 10}</msg>
<status status="PASS" starttime="20201029 18:18:53.745" endtime="20201029 18:18:53.750"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:53.759" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 18:18:53.757" endtime="20201029 18:18:53.760"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:53.764" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 18:18:53.762" endtime="20201029 18:18:53.764"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:53.752" endtime="20201029 18:18:53.766"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:53.774" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 18:18:53.772" endtime="20201029 18:18:53.775"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:53.779" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 18:18:53.776" endtime="20201029 18:18:53.779"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:53.767" endtime="20201029 18:18:53.780"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:53.789" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 18:18:53.787" endtime="20201029 18:18:53.790"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:53.794" level="INFO">VALUE: 10</msg>
<status status="PASS" starttime="20201029 18:18:53.792" endtime="20201029 18:18:53.794"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:53.782" endtime="20201029 18:18:53.796"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:53.811" endtime="20201029 18:18:54.120"></status>
</kw>
<msg timestamp="20201029 18:18:54.123" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.098683986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.198815097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:53.808" endtime="20201029 18:18:54.123"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:54.130" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.098683986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.198815097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:54.124" endtime="20201029 18:18:54.131"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:54.132" endtime="20201029 18:18:54.133"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:53.802" endtime="20201029 18:18:54.134"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:53.797" endtime="20201029 18:18:54.134"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 18:18:54.138" level="INFO">${FILTERED} = [{'diff': 0.10013111100000005}, {'diff': 0.10004174999999993}, {'diff': 0.09988111099999974}, {'diff': 5.419999999922709e-07}, {'diff': 5.409999999095305e-07}, {'diff': 5.419999999922709e-07}, {'diff'...</msg>
<status status="PASS" starttime="20201029 18:18:54.135" endtime="20201029 18:18:54.139"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:54.146" level="INFO">${RESULT} = {'diff': [0.10013111100000005, 0.10004174999999993, 0.09988111099999974, 5.419999999922709e-07, 5.409999999095305e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.4199999999...</msg>
<status status="PASS" starttime="20201029 18:18:54.139" endtime="20201029 18:18:54.146"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:54.150" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 18:18:54.149" endtime="20201029 18:18:54.150"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:54.153" level="INFO">VALUE: [0.10013111100000005, 0.10004174999999993, 0.09988111099999974, 5.419999999922709e-07, 5.409999999095305e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999995481817e-07, 5.409999994654413e-07, 5.420000004363601e-07, 5.420000004363601e-07, 5.410000003536197e-07, 5.419999995481817e-07, 5.419999995481817e-07, 5.420000004363601e-07, 0.10001137500000024, 0.10001086100000034, 0.10001087500000061, 0.10001090300000026, 0.10001086099999945, 0.10001090299999937, 0.10001087499999972, 0.10001087499999972, 0.10001088899999999, 0.10001084800000015, 0.10001084700000007, 0.10001084700000007, 0.10001087499999972, 0.10001083300000069, 0.10001088899999999, 0.10001081999999961, 0.10001087499999972, 0.10001084699999918, 0.10001086100000034, 0.10001084700000007, 0.10001091599999956, 5.420000004363601e-07, 0.10001134700000058, 0.10001086100000034, 0.10001086200000042, 0.10001086100000034, 0.10001087499999972, 0.10001086100000034, 0.10001086199999953, 0.10001091699999964, 5.420000004363601e-07]</msg>
<status status="PASS" starttime="20201029 18:18:54.151" endtime="20201029 18:18:54.153"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:54.147" endtime="20201029 18:18:54.154"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:47.588" endtime="20201029 18:18:54.154"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
</tags>
<status status="PASS" starttime="20201029 18:18:44.489" endtime="20201029 18:18:54.155" critical="yes"></status>
</test>
<test id="s1-s4-t4" name="15 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:54.162" endtime="20201029 18:18:54.181"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:54.160" endtime="20201029 18:18:54.182"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:54.195" endtime="20201029 18:18:57.218"></status>
</kw>
<msg timestamp="20201029 18:18:57.219" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:54.194" endtime="20201029 18:18:57.219"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:57.224" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:57.221" endtime="20201029 18:18:57.225"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:18:57.230" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:18:57.226" endtime="20201029 18:18:57.231"></status>
</kw>
<status status="FAIL" starttime="20201029 18:18:54.191" endtime="20201029 18:18:57.232"></status>
</kw>
<status status="FAIL" starttime="20201029 18:18:54.188" endtime="20201029 18:18:57.233"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:54.187" endtime="20201029 18:18:57.234"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:18:57.244" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:18:57.242" endtime="20201029 18:18:57.245"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:57.236" endtime="20201029 18:18:57.245"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:54.186" endtime="20201029 18:18:57.245"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:54.185" endtime="20201029 18:18:57.246"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:57.247" endtime="20201029 18:18:57.250"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:54.184" endtime="20201029 18:18:57.251"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:54.182" endtime="20201029 18:18:57.252"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:54.159" endtime="20201029 18:18:57.253"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>15</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:57.270" endtime="20201029 18:19:03.399"></status>
</kw>
<msg timestamp="20201029 18:19:03.400" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15\r\n'], 'data': [{'bg-timer-count': '15'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:57.267" endtime="20201029 18:19:03.401"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:03.405" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15\r\n'], 'data': [{'bg-timer-count': '15'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:03.402" endtime="20201029 18:19:03.406"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:03.408" endtime="20201029 18:19:03.411"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:57.261" endtime="20201029 18:19:03.412"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:57.257" endtime="20201029 18:19:03.413"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:03.419" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'main-timer-interval': 100000, 'bg-timer-count': 15}</msg>
<status status="PASS" starttime="20201029 18:19:03.415" endtime="20201029 18:19:03.419"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:03.427" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 18:19:03.425" endtime="20201029 18:19:03.428"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:03.432" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 18:19:03.430" endtime="20201029 18:19:03.432"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:03.420" endtime="20201029 18:19:03.433"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:03.441" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 18:19:03.439" endtime="20201029 18:19:03.442"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:03.446" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 18:19:03.444" endtime="20201029 18:19:03.446"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:03.435" endtime="20201029 18:19:03.447"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:03.455" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 18:19:03.453" endtime="20201029 18:19:03.456"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:03.459" level="INFO">VALUE: 15</msg>
<status status="PASS" starttime="20201029 18:19:03.458" endtime="20201029 18:19:03.460"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:03.449" endtime="20201029 18:19:03.461"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:03.474" endtime="20201029 18:19:03.775"></status>
</kw>
<msg timestamp="20201029 18:19:03.778" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.099496222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.199721333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:03.471" endtime="20201029 18:19:03.778"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:03.786" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.099496222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.199721333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:03.779" endtime="20201029 18:19:03.786"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:03.787" endtime="20201029 18:19:03.789"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:03.466" endtime="20201029 18:19:03.789"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:03.463" endtime="20201029 18:19:03.790"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 18:19:03.794" level="INFO">${FILTERED} = [{'diff': 0.10022511099999987}, {'diff': 0.10004475000000035}, {'diff': 0.09978794400000002}, {'diff': 0.1000108609999999}, {'diff': 0.1000108609999999}, {'diff': 0.10001083400000033}, {'diff': 0.1000...</msg>
<status status="PASS" starttime="20201029 18:19:03.790" endtime="20201029 18:19:03.794"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:03.797" level="INFO">${RESULT} = {'diff': [0.10022511099999987, 0.10004475000000035, 0.09978794400000002, 0.1000108609999999, 0.1000108609999999, 0.10001083400000033, 0.10001084799999971, 0.10001087499999972, 0.10001087500000017, 0.1...</msg>
<status status="PASS" starttime="20201029 18:19:03.794" endtime="20201029 18:19:03.798"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:03.802" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 18:19:03.800" endtime="20201029 18:19:03.802"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:03.804" level="INFO">VALUE: [0.10022511099999987, 0.10004475000000035, 0.09978794400000002, 0.1000108609999999, 0.1000108609999999, 0.10001083400000033, 0.10001084799999971, 0.10001087499999972, 0.10001087500000017, 0.10001080500000015, 0.10001086100000034, 0.10001084700000007, 0.10001086199999953, 0.10001086100000034, 0.10001086100000034, 0.10001083300000069, 0.10001088899999999, 0.10001083399999988, 0.10001084800000015, 0.10001086099999945, 0.10001086100000034, 0.10001086100000034, 0.10001084700000007, 0.10001088899999999, 0.1000108329999998, 0.10001088899999999, 0.10001084699999918, 0.10001084800000015, 0.10001086100000034, 0.10001086099999945, 0.10001091699999964, 5.410000003536197e-07, 5.419999995481817e-07, 5.419999995481817e-07, 5.420000004363601e-07, 5.410000003536197e-07, 0.10001133300000031, 0.10001091700000053, 5.410000003536197e-07, 5.410000003536197e-07, 5.419999995481817e-07, 5.419999995481817e-07, 5.409999994654413e-07, 5.420000004363601e-07, 5.410000003536197e-07, 5.409999994654413e-07, 5.410000003536197e-07, 5.420000004363601e-07, 5.420000004363601e-07]</msg>
<status status="PASS" starttime="20201029 18:19:03.803" endtime="20201029 18:19:03.805"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:03.798" endtime="20201029 18:19:03.805"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:57.254" endtime="20201029 18:19:03.806"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
</tags>
<status status="PASS" starttime="20201029 18:18:54.156" endtime="20201029 18:19:03.806" critical="yes"></status>
</test>
<test id="s1-s4-t5" name="20 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:03.813" endtime="20201029 18:19:03.832"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:03.811" endtime="20201029 18:19:03.833"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:03.846" endtime="20201029 18:19:06.866"></status>
</kw>
<msg timestamp="20201029 18:19:06.866" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:03.845" endtime="20201029 18:19:06.867"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:06.869" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:06.868" endtime="20201029 18:19:06.870"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:19:06.873" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:19:06.871" endtime="20201029 18:19:06.874"></status>
</kw>
<status status="FAIL" starttime="20201029 18:19:03.842" endtime="20201029 18:19:06.874"></status>
</kw>
<status status="FAIL" starttime="20201029 18:19:03.839" endtime="20201029 18:19:06.875"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:03.838" endtime="20201029 18:19:06.876"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:19:06.880" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:19:06.879" endtime="20201029 18:19:06.880"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:06.877" endtime="20201029 18:19:06.880"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:03.837" endtime="20201029 18:19:06.881"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:03.836" endtime="20201029 18:19:06.881"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:06.882" endtime="20201029 18:19:06.884"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:03.835" endtime="20201029 18:19:06.884"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:03.833" endtime="20201029 18:19:06.885"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:03.810" endtime="20201029 18:19:06.885"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>20</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:06.895" endtime="20201029 18:19:13.019"></status>
</kw>
<msg timestamp="20201029 18:19:13.020" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20\r\n'], 'data': [{'bg-timer-count': '20'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:06.893" endtime="20201029 18:19:13.021"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:13.025" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20\r\n'], 'data': [{'bg-timer-count': '20'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:13.022" endtime="20201029 18:19:13.026"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:13.028" endtime="20201029 18:19:13.031"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:06.890" endtime="20201029 18:19:13.032"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:06.887" endtime="20201029 18:19:13.033"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:13.039" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'main-timer-interval': 100000, 'bg-timer-count': 20}</msg>
<status status="PASS" starttime="20201029 18:19:13.034" endtime="20201029 18:19:13.039"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:13.047" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 18:19:13.045" endtime="20201029 18:19:13.048"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:13.051" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 18:19:13.049" endtime="20201029 18:19:13.052"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:13.040" endtime="20201029 18:19:13.053"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:13.061" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 18:19:13.059" endtime="20201029 18:19:13.062"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:13.065" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 18:19:13.063" endtime="20201029 18:19:13.066"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:13.054" endtime="20201029 18:19:13.067"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:13.075" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 18:19:13.073" endtime="20201029 18:19:13.076"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:13.079" level="INFO">VALUE: 20</msg>
<status status="PASS" starttime="20201029 18:19:13.077" endtime="20201029 18:19:13.080"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:13.068" endtime="20201029 18:19:13.081"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:13.097" endtime="20201029 18:19:13.402"></status>
</kw>
<msg timestamp="20201029 18:19:13.405" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.07277275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.173111167, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:19:13.094" endtime="20201029 18:19:13.405"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:13.413" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.07277275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.173111167, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:19:13.406" endtime="20201029 18:19:13.413"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:13.414" endtime="20201029 18:19:13.416"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:13.088" endtime="20201029 18:19:13.416"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:13.082" endtime="20201029 18:19:13.417"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 18:19:13.421" level="INFO">${FILTERED} = [{'diff': 0.10033841700000012}, {'diff': 0.10004968100000022}, {'diff': 0.10005144399999999}, {'diff': 0.09963165199999979}, {'diff': 0.10001087500000017}, {'diff': 5.419999999922709e-07}, {'diff': 5....</msg>
<status status="PASS" starttime="20201029 18:19:13.418" endtime="20201029 18:19:13.421"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:13.425" level="INFO">${RESULT} = {'diff': [0.10033841700000012, 0.10004968100000022, 0.10005144399999999, 0.09963165199999979, 0.10001087500000017, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.41999999992270...</msg>
<status status="PASS" starttime="20201029 18:19:13.422" endtime="20201029 18:19:13.425"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:13.429" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 18:19:13.428" endtime="20201029 18:19:13.429"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:13.431" level="INFO">VALUE: [0.10033841700000012, 0.10004968100000022, 0.10005144399999999, 0.09963165199999979, 0.10001087500000017, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.409999994654413e-07, 5.420000004363601e-07, 5.420000004363601e-07, 5.419999995481817e-07, 5.420000004363601e-07, 5.420000004363601e-07, 5.409999994654413e-07, 5.420000004363601e-07, 5.420000004363601e-07, 5.420000004363601e-07, 5.420000004363601e-07, 5.409999994654413e-07, 5.410000003536197e-07, 5.419999995481817e-07, 5.420000004363601e-07, 5.419999995481817e-07, 5.409999994654413e-07, 5.419999995481817e-07, 5.419999995481817e-07, 5.420000004363601e-07, 5.410000003536197e-07, 5.410000003536197e-07, 5.419999995481817e-07, 5.420000004363601e-07, 5.419999995481817e-07, 5.409999994654413e-07, 5.419999995481817e-07, 5.420000004363601e-07, 5.409999994654413e-07, 5.419999995481817e-07, 5.419999995481817e-07, 5.419999995481817e-07, 5.409999994654413e-07, 5.420000004363601e-07, 5.419999995481817e-07, 5.410000003536197e-07, 5.409999994654413e-07, 5.419999995481817e-07, 5.419999995481817e-07, 5.410000003536197e-07, 5.420000004363601e-07]</msg>
<status status="PASS" starttime="20201029 18:19:13.430" endtime="20201029 18:19:13.432"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:13.426" endtime="20201029 18:19:13.433"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:06.886" endtime="20201029 18:19:13.433"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
</tags>
<status status="PASS" starttime="20201029 18:19:03.808" endtime="20201029 18:19:13.434" critical="yes"></status>
</test>
<test id="s1-s4-t6" name="25 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:13.441" endtime="20201029 18:19:13.460"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:13.438" endtime="20201029 18:19:13.461"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:13.474" endtime="20201029 18:19:16.495"></status>
</kw>
<msg timestamp="20201029 18:19:16.496" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:13.472" endtime="20201029 18:19:16.497"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:16.502" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:16.498" endtime="20201029 18:19:16.502"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:19:16.508" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:19:16.504" endtime="20201029 18:19:16.508"></status>
</kw>
<status status="FAIL" starttime="20201029 18:19:13.470" endtime="20201029 18:19:16.510"></status>
</kw>
<status status="FAIL" starttime="20201029 18:19:13.467" endtime="20201029 18:19:16.511"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:13.466" endtime="20201029 18:19:16.512"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:19:16.519" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:19:16.518" endtime="20201029 18:19:16.520"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:16.513" endtime="20201029 18:19:16.520"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:13.465" endtime="20201029 18:19:16.521"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:13.465" endtime="20201029 18:19:16.521"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:16.523" endtime="20201029 18:19:16.526"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:13.463" endtime="20201029 18:19:16.527"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:13.462" endtime="20201029 18:19:16.528"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:13.437" endtime="20201029 18:19:16.528"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>25</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:16.545" endtime="20201029 18:19:22.671"></status>
</kw>
<msg timestamp="20201029 18:19:22.672" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25\r\n'], 'data': [{'bg-timer-count': '25'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:16.542" endtime="20201029 18:19:22.672"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:22.677" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25\r\n'], 'data': [{'bg-timer-count': '25'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:22.674" endtime="20201029 18:19:22.677"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:22.679" endtime="20201029 18:19:22.682"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:16.536" endtime="20201029 18:19:22.683"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:16.532" endtime="20201029 18:19:22.684"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:22.694" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'main-timer-interval': 100000, 'bg-timer-count': 25}</msg>
<status status="PASS" starttime="20201029 18:19:22.686" endtime="20201029 18:19:22.695"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:22.705" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 18:19:22.701" endtime="20201029 18:19:22.706"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:22.709" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 18:19:22.707" endtime="20201029 18:19:22.710"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:22.696" endtime="20201029 18:19:22.711"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:22.719" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 18:19:22.717" endtime="20201029 18:19:22.720"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:22.722" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 18:19:22.721" endtime="20201029 18:19:22.722"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:22.712" endtime="20201029 18:19:22.723"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:22.727" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 18:19:22.726" endtime="20201029 18:19:22.727"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:22.729" level="INFO">VALUE: 25</msg>
<status status="PASS" starttime="20201029 18:19:22.728" endtime="20201029 18:19:22.729"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:22.724" endtime="20201029 18:19:22.730"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:22.736" endtime="20201029 18:19:23.037"></status>
</kw>
<msg timestamp="20201029 18:19:23.040" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.095319528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.195803667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:22.734" endtime="20201029 18:19:23.041"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:23.048" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.095319528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.195803667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:23.041" endtime="20201029 18:19:23.049"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:23.049" endtime="20201029 18:19:23.051"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:22.732" endtime="20201029 18:19:23.052"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:22.730" endtime="20201029 18:19:23.052"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 18:19:23.056" level="INFO">${FILTERED} = [{'diff': 0.10048413899999975}, {'diff': 0.10005166699999979}, {'diff': 0.10005184700000003}, {'diff': 0.09948775000000021}, {'diff': 0.1000108609999999}, {'diff': 0.1000108609999999}, {'diff': 0.1000...</msg>
<status status="PASS" starttime="20201029 18:19:23.053" endtime="20201029 18:19:23.056"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:23.060" level="INFO">${RESULT} = {'diff': [0.10048413899999975, 0.10005166699999979, 0.10005184700000003, 0.09948775000000021, 0.1000108609999999, 0.1000108609999999, 0.10001087500000017, 0.10001087500000017, 0.1000108609999999, 0.10...</msg>
<status status="PASS" starttime="20201029 18:19:23.057" endtime="20201029 18:19:23.061"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:23.065" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 18:19:23.064" endtime="20201029 18:19:23.065"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:23.067" level="INFO">VALUE: [0.10048413899999975, 0.10005166699999979, 0.10005184700000003, 0.09948775000000021, 0.1000108609999999, 0.1000108609999999, 0.10001087500000017, 0.10001087500000017, 0.1000108609999999, 0.10001087500000017, 0.10001088799999991, 0.10001084700000007, 0.10001091700000053, 0.10001084800000015, 0.10001086099999945, 0.10001087499999972, 0.10001087499999972, 0.10001088899999999, 0.10001086100000034, 0.10001087500000061, 0.10001087500000061, 0.10001087499999972, 0.10001087499999972, 0.10001087499999972, 0.10001090299999937, 0.10001086199999953, 0.10001087499999972, 0.10001088899999999, 0.10001086200000042, 0.10001088899999999, 0.10001084700000007, 0.10001084699999918, 0.10001084700000007, 0.10001087500000061, 0.10001083300000069, 0.10001087499999972, 0.10001084700000007, 0.10001088899999999, 0.10001083399999988, 0.10001084700000007, 0.10001087499999972, 0.10001084700000007, 0.10001087500000061, 0.10001084800000015, 0.10001086099999945, 0.10001090299999937, 0.1000108200000005, 0.10001086100000034, 0.10001090300000026, 0.1000108190000013, 0.10001086100000123]</msg>
<status status="PASS" starttime="20201029 18:19:23.066" endtime="20201029 18:19:23.068"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:23.061" endtime="20201029 18:19:23.068"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:16.529" endtime="20201029 18:19:23.069"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
</tags>
<status status="PASS" starttime="20201029 18:19:13.435" endtime="20201029 18:19:23.069" critical="yes"></status>
</test>
<status status="PASS" starttime="20201029 18:18:17.549" endtime="20201029 18:19:23.076"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_xtimer_benchmarks</item>
<item name="RIOT-Board">arduino-due</item>
<item name="RIOT-Version">2020.07</item>
</metadata>
<status status="PASS" starttime="20201029 18:15:07.178" endtime="20201029 18:19:23.109"></status>
</suite>
<statistics>
<total>
<stat pass="18" fail="0">Critical Tests</stat>
<stat pass="18" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="18" fail="0">APP_tests_xtimer_benchmarks</stat>
<stat pass="18" fail="0">BOARD_arduino-due</stat>
<stat pass="10" fail="0">dev</stat>
</tag>
<suite>
<stat pass="18" fail="0" id="s1" name="tests_xtimer_benchmarks">tests_xtimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_xtimer_benchmarks.Timer Version</stat>
<stat pass="9" fail="0" id="s1-s2" name="Timer Overhead">tests_xtimer_benchmarks.Timer Overhead</stat>
<stat pass="2" fail="0" id="s1-s3" name="Sleep Accuracy">tests_xtimer_benchmarks.Sleep Accuracy</stat>
<stat pass="6" fail="0" id="s1-s4" name="Sleep Jitter">tests_xtimer_benchmarks.Sleep Jitter</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
