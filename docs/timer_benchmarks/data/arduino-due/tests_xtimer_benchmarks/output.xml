<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201029 09:33:55.376" rpa="false">
<suite id="s1" name="tests_xtimer_benchmarks" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 09:33:59.012" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 09:33:59.021" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 09:34:00.240" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 09:33:59.011" endtime="20201029 09:34:00.242"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 09:34:03.247" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20201029 09:34:00.244" endtime="20201029 09:34:03.248"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:59.009" endtime="20201029 09:34:03.250"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:03.254" endtime="20201029 09:34:03.484"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:03.251" endtime="20201029 09:34:03.484"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:03.497" endtime="20201029 09:34:06.520"></status>
</kw>
<msg timestamp="20201029 09:34:06.521" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:03.495" endtime="20201029 09:34:06.522"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:06.528" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:06.524" endtime="20201029 09:34:06.529"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:34:06.537" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:34:06.531" endtime="20201029 09:34:06.538"></status>
</kw>
<status status="FAIL" starttime="20201029 09:34:03.493" endtime="20201029 09:34:06.540"></status>
</kw>
<status status="FAIL" starttime="20201029 09:34:03.491" endtime="20201029 09:34:06.542"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:03.489" endtime="20201029 09:34:06.543"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:34:06.553" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:34:06.551" endtime="20201029 09:34:06.556"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:06.545" endtime="20201029 09:34:06.557"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:03.489" endtime="20201029 09:34:06.557"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:03.488" endtime="20201029 09:34:06.558"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:06.559" endtime="20201029 09:34:06.564"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:03.487" endtime="20201029 09:34:06.565"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:06.567" endtime="20201029 09:34:06.572"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:03.485" endtime="20201029 09:34:06.573"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:59.008" endtime="20201029 09:34:06.574"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:06.590" endtime="20201029 09:34:06.613"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:06.586" endtime="20201029 09:34:06.615"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:06.638" endtime="20201029 09:34:09.660"></status>
</kw>
<msg timestamp="20201029 09:34:09.661" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:06.635" endtime="20201029 09:34:09.661"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:09.666" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:09.663" endtime="20201029 09:34:09.667"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:34:09.672" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:34:09.668" endtime="20201029 09:34:09.673"></status>
</kw>
<status status="FAIL" starttime="20201029 09:34:06.631" endtime="20201029 09:34:09.674"></status>
</kw>
<status status="FAIL" starttime="20201029 09:34:06.627" endtime="20201029 09:34:09.675"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:06.625" endtime="20201029 09:34:09.676"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:34:09.683" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:34:09.682" endtime="20201029 09:34:09.684"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:09.678" endtime="20201029 09:34:09.685"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:06.624" endtime="20201029 09:34:09.685"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:06.623" endtime="20201029 09:34:09.685"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:09.687" endtime="20201029 09:34:09.690"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:06.620" endtime="20201029 09:34:09.691"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:06.616" endtime="20201029 09:34:09.692"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:06.583" endtime="20201029 09:34:09.692"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:09.708" endtime="20201029 09:34:09.722"></status>
</kw>
<msg timestamp="20201029 09:34:09.723" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:09.703" endtime="20201029 09:34:09.724"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:09.728" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:09.726" endtime="20201029 09:34:09.729"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:09.730" endtime="20201029 09:34:09.734"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:09.697" endtime="20201029 09:34:09.735"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:09.694" endtime="20201029 09:34:09.736"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:09.744" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201029 09:34:09.742" endtime="20201029 09:34:09.744"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:09.748" level="INFO">VALUE: xtimer</msg>
<status status="PASS" starttime="20201029 09:34:09.746" endtime="20201029 09:34:09.748"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:09.737" endtime="20201029 09:34:09.750"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 09:34:06.575" endtime="20201029 09:34:09.751" critical="yes"></status>
</test>
<status status="PASS" starttime="20201029 09:33:55.488" endtime="20201029 09:34:09.757"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 09:34:09.819" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 09:34:09.827" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 09:34:10.945" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 09:34:09.818" endtime="20201029 09:34:10.946"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 09:34:13.948" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20201029 09:34:10.947" endtime="20201029 09:34:13.949"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:09.817" endtime="20201029 09:34:13.950"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:13.955" endtime="20201029 09:34:14.179"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:13.951" endtime="20201029 09:34:14.180"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:14.192" endtime="20201029 09:34:17.214"></status>
</kw>
<msg timestamp="20201029 09:34:17.215" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:14.191" endtime="20201029 09:34:17.215"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:17.220" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:17.217" endtime="20201029 09:34:17.221"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:34:17.227" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:34:17.223" endtime="20201029 09:34:17.228"></status>
</kw>
<status status="FAIL" starttime="20201029 09:34:14.188" endtime="20201029 09:34:17.229"></status>
</kw>
<status status="FAIL" starttime="20201029 09:34:14.186" endtime="20201029 09:34:17.230"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:14.185" endtime="20201029 09:34:17.231"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:34:17.238" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:34:17.237" endtime="20201029 09:34:17.239"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:17.233" endtime="20201029 09:34:17.239"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:14.184" endtime="20201029 09:34:17.240"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:14.184" endtime="20201029 09:34:17.240"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:17.242" endtime="20201029 09:34:17.245"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:14.182" endtime="20201029 09:34:17.246"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:17.247" endtime="20201029 09:34:17.251"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:14.181" endtime="20201029 09:34:17.252"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:09.816" endtime="20201029 09:34:17.252"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:17.265" endtime="20201029 09:34:17.287"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:17.260" endtime="20201029 09:34:17.288"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:17.314" endtime="20201029 09:34:20.337"></status>
</kw>
<msg timestamp="20201029 09:34:20.338" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:17.311" endtime="20201029 09:34:20.339"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:20.344" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:20.341" endtime="20201029 09:34:20.345"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:34:20.350" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:34:20.347" endtime="20201029 09:34:20.351"></status>
</kw>
<status status="FAIL" starttime="20201029 09:34:17.306" endtime="20201029 09:34:20.353"></status>
</kw>
<status status="FAIL" starttime="20201029 09:34:17.301" endtime="20201029 09:34:20.354"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:17.298" endtime="20201029 09:34:20.354"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:34:20.362" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:34:20.360" endtime="20201029 09:34:20.363"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:20.356" endtime="20201029 09:34:20.363"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:17.297" endtime="20201029 09:34:20.363"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:17.296" endtime="20201029 09:34:20.364"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:20.365" endtime="20201029 09:34:20.368"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:17.293" endtime="20201029 09:34:20.369"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:17.289" endtime="20201029 09:34:20.370"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:17.258" endtime="20201029 09:34:20.371"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:20.388" endtime="20201029 09:34:20.404"></status>
</kw>
<msg timestamp="20201029 09:34:20.404" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:20.385" endtime="20201029 09:34:20.405"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:20.407" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:20.405" endtime="20201029 09:34:20.407"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:20.408" endtime="20201029 09:34:20.409"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:20.380" endtime="20201029 09:34:20.410"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:20.376" endtime="20201029 09:34:20.410"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:20.417" endtime="20201029 09:34:20.691"></status>
</kw>
<msg timestamp="20201029 09:34:20.693" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.114769361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.114778889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:20.415" endtime="20201029 09:34:20.693"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:20.698" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.114769361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.114778889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:20.694" endtime="20201029 09:34:20.698"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:20.699" endtime="20201029 09:34:20.701"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:20.413" endtime="20201029 09:34:20.701"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:20.411" endtime="20201029 09:34:20.702"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:20.705" level="INFO">${RESULT} = [{'diff': 9.528000000091907e-06}, {'diff': 9.361000000041031e-06}, {'diff': 1.1014000000031388e-05}, {'diff': 7.3469999999353774e-06}, {'diff': 6.181000000271553e-06}, {'diff': 7.500000000160156e-06},...</msg>
<status status="PASS" starttime="20201029 09:34:20.702" endtime="20201029 09:34:20.705"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:20.709" level="INFO">${GPIO_OVERHEAD} = {'diff': [9.528000000091907e-06, 9.361000000041031e-06, 1.1014000000031388e-05, 7.3469999999353774e-06, 6.181000000271553e-06, 7.500000000160156e-06, 5.527999999976885e-06, 1.1556000000023658e-05, 8.4...</msg>
<status status="PASS" starttime="20201029 09:34:20.706" endtime="20201029 09:34:20.709"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:20.713" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:34:20.712" endtime="20201029 09:34:20.713"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:20.715" level="INFO">VALUE: [9.528000000091907e-06, 9.361000000041031e-06, 1.1014000000031388e-05, 7.3469999999353774e-06, 6.181000000271553e-06, 7.500000000160156e-06, 5.527999999976885e-06, 1.1556000000023658e-05, 8.458000000377552e-06, 9.472999999982079e-06, 7.569000000096082e-06, 1.0540999999975043e-05, 1.0638999999645904e-05, 8.151999999927995e-06, 6.972999999632634e-06, 7.874999999657462e-06, 8.763999999938932e-06, 8.054999999895784e-06, 8.37500000017144e-06, 5.527999999976885e-06, 9.347000000214933e-06, 8.52799999995213e-06, 1.1014000000031388e-05, 1.0000000000065512e-05, 8.999999999925734e-06]</msg>
<status status="PASS" starttime="20201029 09:34:20.714" endtime="20201029 09:34:20.715"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:20.709" endtime="20201029 09:34:20.716"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:20.374" endtime="20201029 09:34:20.716"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:20.373" endtime="20201029 09:34:20.717"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:20.724" endtime="20201029 09:34:20.736"></status>
</kw>
<msg timestamp="20201029 09:34:20.736" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:20.723" endtime="20201029 09:34:20.737"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:20.739" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:20.737" endtime="20201029 09:34:20.739"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:20.741" endtime="20201029 09:34:20.744"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:20.720" endtime="20201029 09:34:20.745"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:20.718" endtime="20201029 09:34:20.745"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:20.752" endtime="20201029 09:34:21.053"></status>
</kw>
<msg timestamp="20201029 09:34:21.056" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.114769361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.114778889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:20.750" endtime="20201029 09:34:21.056"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:21.064" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.114769361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.114778889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:21.057" endtime="20201029 09:34:21.064"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:21.065" endtime="20201029 09:34:21.067"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:20.748" endtime="20201029 09:34:21.067"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:20.746" endtime="20201029 09:34:21.068"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:21.072" level="INFO">${RESULT} = [{'diff': 9.528000000091907e-06}, {'diff': 9.361000000041031e-06}, {'diff': 1.1014000000031388e-05}, {'diff': 7.3469999999353774e-06}, {'diff': 6.181000000271553e-06}, {'diff': 7.500000000160156e-06},...</msg>
<status status="PASS" starttime="20201029 09:34:21.069" endtime="20201029 09:34:21.072"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:21.076" level="INFO">${GPIO_OVERHEAD} = {'diff': [9.528000000091907e-06, 9.361000000041031e-06, 1.1014000000031388e-05, 7.3469999999353774e-06, 6.181000000271553e-06, 7.500000000160156e-06, 5.527999999976885e-06, 1.1556000000023658e-05, 8.4...</msg>
<status status="PASS" starttime="20201029 09:34:21.073" endtime="20201029 09:34:21.076"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:21.081" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:34:21.079" endtime="20201029 09:34:21.081"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:21.083" level="INFO">VALUE: [9.528000000091907e-06, 9.361000000041031e-06, 1.1014000000031388e-05, 7.3469999999353774e-06, 6.181000000271553e-06, 7.500000000160156e-06, 5.527999999976885e-06, 1.1556000000023658e-05, 8.458000000377552e-06, 9.472999999982079e-06, 7.569000000096082e-06, 1.0540999999975043e-05, 1.0638999999645904e-05, 8.151999999927995e-06, 6.972999999632634e-06, 7.874999999657462e-06, 8.763999999938932e-06, 8.054999999895784e-06, 8.37500000017144e-06, 5.527999999976885e-06, 9.347000000214933e-06, 8.52799999995213e-06, 1.1014000000031388e-05, 1.0000000000065512e-05, 8.999999999925734e-06, 9.235999999912536e-06, 9.12499999961014e-06, 9.458000000073241e-06, 7.624999999844562e-06, 8.014000000056143e-06, 9.403000000407502e-06, 1.0610999999993709e-05, 8.583000000061958e-06, 5.305000000177529e-06, 1.1611000000133487e-05, 9.096999999957944e-06, 6.88899999978787e-06, 9.22299999972509e-06, 9.778000000348896e-06, 1.0596999999723522e-05, 9.277999999834918e-06, 8.138999999740548e-06, 8.096999999818166e-06, 1.1290999999857831e-05, 6.722000000181083e-06, 1.1068999999697127e-05, 8.930999999989808e-06, 8.167000000280922e-06, 7.319000000283182e-06, 1.0222999999864868e-05]</msg>
<status status="PASS" starttime="20201029 09:34:21.082" endtime="20201029 09:34:21.084"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:21.077" endtime="20201029 09:34:21.085"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:20.717" endtime="20201029 09:34:21.085"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:20.717" endtime="20201029 09:34:21.085"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:21.093" endtime="20201029 09:34:21.104"></status>
</kw>
<msg timestamp="20201029 09:34:21.105" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:21.092" endtime="20201029 09:34:21.105"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:21.107" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:21.106" endtime="20201029 09:34:21.107"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:21.108" endtime="20201029 09:34:21.110"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:21.089" endtime="20201029 09:34:21.110"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:21.087" endtime="20201029 09:34:21.111"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:21.124" endtime="20201029 09:34:21.443"></status>
</kw>
<msg timestamp="20201029 09:34:21.447" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.114969681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.114980222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:21.120" endtime="20201029 09:34:21.447"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:21.457" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.114969681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.114980222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:21.448" endtime="20201029 09:34:21.458"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:21.458" endtime="20201029 09:34:21.460"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:21.115" endtime="20201029 09:34:21.461"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:21.111" endtime="20201029 09:34:21.461"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:21.465" level="INFO">${RESULT} = [{'diff': 1.0540999999975043e-05}, {'diff': 1.0638999999645904e-05}, {'diff': 8.151999999927995e-06}, {'diff': 6.972999999632634e-06}, {'diff': 7.874999999657462e-06}, {'diff': 8.763999999938932e-06},...</msg>
<status status="PASS" starttime="20201029 09:34:21.462" endtime="20201029 09:34:21.466"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:21.471" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.0540999999975043e-05, 1.0638999999645904e-05, 8.151999999927995e-06, 6.972999999632634e-06, 7.874999999657462e-06, 8.763999999938932e-06, 8.054999999895784e-06, 8.37500000017144e-06, 5.527...</msg>
<status status="PASS" starttime="20201029 09:34:21.466" endtime="20201029 09:34:21.471"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:21.475" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:34:21.474" endtime="20201029 09:34:21.476"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:21.478" level="INFO">VALUE: [1.0540999999975043e-05, 1.0638999999645904e-05, 8.151999999927995e-06, 6.972999999632634e-06, 7.874999999657462e-06, 8.763999999938932e-06, 8.054999999895784e-06, 8.37500000017144e-06, 5.527999999976885e-06, 9.347000000214933e-06, 8.52799999995213e-06, 1.1014000000031388e-05, 1.0000000000065512e-05, 8.999999999925734e-06, 9.235999999912536e-06, 9.12499999961014e-06, 9.458000000073241e-06, 7.624999999844562e-06, 8.014000000056143e-06, 9.403000000407502e-06, 1.0610999999993709e-05, 8.583000000061958e-06, 5.305000000177529e-06, 1.1611000000133487e-05, 9.096999999957944e-06, 6.88899999978787e-06, 9.22299999972509e-06, 9.778000000348896e-06, 1.0596999999723522e-05, 9.277999999834918e-06, 8.138999999740548e-06, 8.096999999818166e-06, 1.1290999999857831e-05, 6.722000000181083e-06, 1.1068999999697127e-05, 8.930999999989808e-06, 8.167000000280922e-06, 7.319000000283182e-06, 1.0222999999864868e-05, 7.625000000288651e-06, 1.0888999999902893e-05, 8.402999999823635e-06, 9.291000000022365e-06, 9.347999999853585e-06, 8.513000000043291e-06, 8.319999999617522e-06, 8.87499999979724e-06, 8.318999999978871e-06, 8.499999999855845e-06, 7.348000000018118e-06, 1.0778000000044585e-05, 7.972000000133761e-06, 7.667000000211033e-06, 5.7770000001511335e-06, 7.0279999997424625e-06, 8.833999999957598e-06, 7.180999999967241e-06, 1.21939999999654e-05, 9.749999999808523e-06, 9.51399999982172e-06, 7.388999999857759e-06, 9.457999999629152e-06, 7.082999999852291e-06, 7.68100000003713e-06]</msg>
<status status="PASS" starttime="20201029 09:34:21.476" endtime="20201029 09:34:21.478"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:21.472" endtime="20201029 09:34:21.479"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:21.086" endtime="20201029 09:34:21.479"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:21.086" endtime="20201029 09:34:21.479"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:21.487" endtime="20201029 09:34:21.498"></status>
</kw>
<msg timestamp="20201029 09:34:21.500" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:21.486" endtime="20201029 09:34:21.500"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:21.502" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:21.501" endtime="20201029 09:34:21.503"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:21.504" endtime="20201029 09:34:21.505"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:21.483" endtime="20201029 09:34:21.506"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:21.481" endtime="20201029 09:34:21.506"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:21.514" endtime="20201029 09:34:21.827"></status>
</kw>
<msg timestamp="20201029 09:34:21.831" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.438520458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.438527347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:21.512" endtime="20201029 09:34:21.832"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:21.841" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.438520458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.438527347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:21.832" endtime="20201029 09:34:21.842"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:21.842" endtime="20201029 09:34:21.844"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:21.508" endtime="20201029 09:34:21.844"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:21.507" endtime="20201029 09:34:21.845"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:21.849" level="INFO">${RESULT} = [{'diff': 6.88899999978787e-06}, {'diff': 9.22299999972509e-06}, {'diff': 9.778000000348896e-06}, {'diff': 1.0596999999723522e-05}, {'diff': 9.277999999834918e-06}, {'diff': 8.138999999740548e-06}, {'...</msg>
<status status="PASS" starttime="20201029 09:34:21.846" endtime="20201029 09:34:21.849"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:21.854" level="INFO">${GPIO_OVERHEAD} = {'diff': [6.88899999978787e-06, 9.22299999972509e-06, 9.778000000348896e-06, 1.0596999999723522e-05, 9.277999999834918e-06, 8.138999999740548e-06, 8.096999999818166e-06, 1.1290999999857831e-05, 6.7220...</msg>
<status status="PASS" starttime="20201029 09:34:21.850" endtime="20201029 09:34:21.854"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:21.858" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:34:21.857" endtime="20201029 09:34:21.859"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:21.861" level="INFO">VALUE: [6.88899999978787e-06, 9.22299999972509e-06, 9.778000000348896e-06, 1.0596999999723522e-05, 9.277999999834918e-06, 8.138999999740548e-06, 8.096999999818166e-06, 1.1290999999857831e-05, 6.722000000181083e-06, 1.1068999999697127e-05, 8.930999999989808e-06, 8.167000000280922e-06, 7.319000000283182e-06, 1.0222999999864868e-05, 7.625000000288651e-06, 1.0888999999902893e-05, 8.402999999823635e-06, 9.291000000022365e-06, 9.347999999853585e-06, 8.513000000043291e-06, 8.319999999617522e-06, 8.87499999979724e-06, 8.318999999978871e-06, 8.499999999855845e-06, 7.348000000018118e-06, 1.0778000000044585e-05, 7.972000000133761e-06, 7.667000000211033e-06, 5.7770000001511335e-06, 7.0279999997424625e-06, 8.833999999957598e-06, 7.180999999967241e-06, 1.21939999999654e-05, 9.749999999808523e-06, 9.51399999982172e-06, 7.388999999857759e-06, 9.457999999629152e-06, 7.082999999852291e-06, 7.68100000003713e-06, 1.0417000000373378e-05, 7.861999999470015e-06, 8.33399999944362e-06, 8.27800000013923e-06, 1.070899999966457e-05, 1.0709000000552749e-05, 1.0929999999298445e-05, 7.3890000003018486e-06, 5.1389999997653035e-06, 8.097000000262256e-06, 9.527999999647818e-06, 7.082999999852291e-06, 9.958999999781781e-06, 1.0167000000116388e-05, 1.1082999999523224e-05, 8.957999999559263e-06, 5.902999999918279e-06, 7.83399999981782e-06, 9.931000000129586e-06, 6.4310000000844525e-06, 8.263999999869043e-06, 1.0638000000007253e-05, 1.1610999999689398e-05, 7.791000000700876e-06, 7.723000000403601e-06]</msg>
<status status="PASS" starttime="20201029 09:34:21.860" endtime="20201029 09:34:21.862"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:21.855" endtime="20201029 09:34:21.862"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:21.480" endtime="20201029 09:34:21.863"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:21.480" endtime="20201029 09:34:21.863"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:21.871" endtime="20201029 09:34:21.883"></status>
</kw>
<msg timestamp="20201029 09:34:21.883" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:21.869" endtime="20201029 09:34:21.883"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:21.886" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:21.884" endtime="20201029 09:34:21.886"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:21.887" endtime="20201029 09:34:21.888"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:21.866" endtime="20201029 09:34:21.889"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:21.865" endtime="20201029 09:34:21.889"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:21.896" endtime="20201029 09:34:22.206"></status>
</kw>
<msg timestamp="20201029 09:34:22.210" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.797567208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.797577986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:21.894" endtime="20201029 09:34:22.210"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:22.220" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.797567208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.797577986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:22.211" endtime="20201029 09:34:22.221"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:22.221" endtime="20201029 09:34:22.223"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:21.892" endtime="20201029 09:34:22.224"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:21.890" endtime="20201029 09:34:22.224"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:22.228" level="INFO">${RESULT} = [{'diff': 1.0778000000044585e-05}, {'diff': 7.972000000133761e-06}, {'diff': 7.667000000211033e-06}, {'diff': 5.7770000001511335e-06}, {'diff': 7.0279999997424625e-06}, {'diff': 8.833999999957598e-06}...</msg>
<status status="PASS" starttime="20201029 09:34:22.225" endtime="20201029 09:34:22.228"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:22.234" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.0778000000044585e-05, 7.972000000133761e-06, 7.667000000211033e-06, 5.7770000001511335e-06, 7.0279999997424625e-06, 8.833999999957598e-06, 7.180999999967241e-06, 1.21939999999654e-05, 9.74...</msg>
<status status="PASS" starttime="20201029 09:34:22.229" endtime="20201029 09:34:22.234"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:22.238" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:34:22.237" endtime="20201029 09:34:22.239"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:22.241" level="INFO">VALUE: [1.0778000000044585e-05, 7.972000000133761e-06, 7.667000000211033e-06, 5.7770000001511335e-06, 7.0279999997424625e-06, 8.833999999957598e-06, 7.180999999967241e-06, 1.21939999999654e-05, 9.749999999808523e-06, 9.51399999982172e-06, 7.388999999857759e-06, 9.457999999629152e-06, 7.082999999852291e-06, 7.68100000003713e-06, 1.0417000000373378e-05, 7.861999999470015e-06, 8.33399999944362e-06, 8.27800000013923e-06, 1.070899999966457e-05, 1.0709000000552749e-05, 1.0929999999298445e-05, 7.3890000003018486e-06, 5.1389999997653035e-06, 8.097000000262256e-06, 9.527999999647818e-06, 7.082999999852291e-06, 9.958999999781781e-06, 1.0167000000116388e-05, 1.1082999999523224e-05, 8.957999999559263e-06, 5.902999999918279e-06, 7.83399999981782e-06, 9.931000000129586e-06, 6.4310000000844525e-06, 8.263999999869043e-06, 1.0638000000007253e-05, 1.1610999999689398e-05, 7.791000000700876e-06, 7.723000000403601e-06, 8.790999999952476e-06, 8.77799999976503e-06, 8.72199999957246e-06, 8.431000000364008e-06, 7.959000000390404e-06, 6.0690000003305045e-06, 7.513999999986254e-06, 8.875000000685418e-06, 1.1776999999213444e-05, 7.680999999593041e-06, 1.0194999999768584e-05, 7.957999999419485e-06, 8.87499999979724e-06, 8.06900000061006e-06, 8.166999999836833e-06, 7.555999999908636e-06, 6.153000000175268e-06, 9.721999999712239e-06, 1.04169999994852e-05, 6.6659999999885144e-06, 9.583000000645825e-06, 9.06899999986166e-06, 1.174999999964399e-05, 7.583000000366269e-06, 8.208999999759214e-06]</msg>
<status status="PASS" starttime="20201029 09:34:22.239" endtime="20201029 09:34:22.241"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:22.234" endtime="20201029 09:34:22.242"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:21.864" endtime="20201029 09:34:22.242"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:21.863" endtime="20201029 09:34:22.242"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:22.250" endtime="20201029 09:34:22.261"></status>
</kw>
<msg timestamp="20201029 09:34:22.261" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:22.249" endtime="20201029 09:34:22.261"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:22.264" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:22.262" endtime="20201029 09:34:22.264"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:22.265" endtime="20201029 09:34:22.266"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:22.246" endtime="20201029 09:34:22.267"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:22.244" endtime="20201029 09:34:22.267"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:22.274" endtime="20201029 09:34:22.587"></status>
</kw>
<msg timestamp="20201029 09:34:22.591" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.180731111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.180738194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:22.272" endtime="20201029 09:34:22.591"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:22.601" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.180731111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.180738194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:22.592" endtime="20201029 09:34:22.601"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:22.602" endtime="20201029 09:34:22.604"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:22.269" endtime="20201029 09:34:22.604"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:22.268" endtime="20201029 09:34:22.605"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:22.609" level="INFO">${RESULT} = [{'diff': 7.082999999852291e-06}, {'diff': 9.958999999781781e-06}, {'diff': 1.0167000000116388e-05}, {'diff': 1.1082999999523224e-05}, {'diff': 8.957999999559263e-06}, {'diff': 5.902999999918279e-06},...</msg>
<status status="PASS" starttime="20201029 09:34:22.605" endtime="20201029 09:34:22.609"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:22.616" level="INFO">${GPIO_OVERHEAD} = {'diff': [7.082999999852291e-06, 9.958999999781781e-06, 1.0167000000116388e-05, 1.1082999999523224e-05, 8.957999999559263e-06, 5.902999999918279e-06, 7.83399999981782e-06, 9.931000000129586e-06, 6.431...</msg>
<status status="PASS" starttime="20201029 09:34:22.610" endtime="20201029 09:34:22.616"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:22.620" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:34:22.619" endtime="20201029 09:34:22.621"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:22.623" level="INFO">VALUE: [7.082999999852291e-06, 9.958999999781781e-06, 1.0167000000116388e-05, 1.1082999999523224e-05, 8.957999999559263e-06, 5.902999999918279e-06, 7.83399999981782e-06, 9.931000000129586e-06, 6.4310000000844525e-06, 8.263999999869043e-06, 1.0638000000007253e-05, 1.1610999999689398e-05, 7.791000000700876e-06, 7.723000000403601e-06, 8.790999999952476e-06, 8.77799999976503e-06, 8.72199999957246e-06, 8.431000000364008e-06, 7.959000000390404e-06, 6.0690000003305045e-06, 7.513999999986254e-06, 8.875000000685418e-06, 1.1776999999213444e-05, 7.680999999593041e-06, 1.0194999999768584e-05, 7.957999999419485e-06, 8.87499999979724e-06, 8.06900000061006e-06, 8.166999999836833e-06, 7.555999999908636e-06, 6.153000000175268e-06, 9.721999999712239e-06, 1.04169999994852e-05, 6.6659999999885144e-06, 9.583000000645825e-06, 9.06899999986166e-06, 1.174999999964399e-05, 7.583000000366269e-06, 8.208999999759214e-06, 1.0624999999819806e-05, 7.652999999940846e-06, 6.8049999999431066e-06, 6.417000000702444e-06, 1.080499999961404e-05, 6.832999999595302e-06, 9.805999999557002e-06, 9.695000000142784e-06, 6.3199999997820555e-06, 1.0639000000089993e-05, 1.0526999999704856e-05, 1.1125000000333785e-05, 8.165999999754092e-06, 1.0554999999357051e-05, 7.903000000197835e-06, 8.165999999754092e-06, 9.291000000466454e-06, 6.943999999897699e-06, 8.611000000158242e-06, 8.347999999713807e-06, 7.499999999716067e-06, 1.0235999999608225e-05, 1.0222000000226217e-05, 9.76399999963462e-06, 7.680999999593041e-06]</msg>
<status status="PASS" starttime="20201029 09:34:22.621" endtime="20201029 09:34:22.623"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:22.617" endtime="20201029 09:34:22.624"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:22.243" endtime="20201029 09:34:22.624"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:22.243" endtime="20201029 09:34:22.624"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:22.632" endtime="20201029 09:34:22.645"></status>
</kw>
<msg timestamp="20201029 09:34:22.645" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:22.631" endtime="20201029 09:34:22.645"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:22.648" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:22.646" endtime="20201029 09:34:22.648"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:22.649" endtime="20201029 09:34:22.650"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:22.628" endtime="20201029 09:34:22.651"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:22.626" endtime="20201029 09:34:22.651"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:22.658" endtime="20201029 09:34:22.973"></status>
</kw>
<msg timestamp="20201029 09:34:22.977" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.554950875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.554958833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:22.656" endtime="20201029 09:34:22.977"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:22.987" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.554950875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.554958833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:22.978" endtime="20201029 09:34:22.988"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:22.988" endtime="20201029 09:34:22.990"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:22.654" endtime="20201029 09:34:22.991"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:22.652" endtime="20201029 09:34:22.991"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:22.995" level="INFO">${RESULT} = [{'diff': 7.957999999419485e-06}, {'diff': 8.87499999979724e-06}, {'diff': 8.06900000061006e-06}, {'diff': 8.166999999836833e-06}, {'diff': 7.555999999908636e-06}, {'diff': 6.153000000175268e-06}, {'d...</msg>
<status status="PASS" starttime="20201029 09:34:22.992" endtime="20201029 09:34:22.996"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:23.000" level="INFO">${GPIO_OVERHEAD} = {'diff': [7.957999999419485e-06, 8.87499999979724e-06, 8.06900000061006e-06, 8.166999999836833e-06, 7.555999999908636e-06, 6.153000000175268e-06, 9.721999999712239e-06, 1.04169999994852e-05, 6.6659999...</msg>
<status status="PASS" starttime="20201029 09:34:22.996" endtime="20201029 09:34:23.001"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:23.005" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:34:23.004" endtime="20201029 09:34:23.005"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:23.007" level="INFO">VALUE: [7.957999999419485e-06, 8.87499999979724e-06, 8.06900000061006e-06, 8.166999999836833e-06, 7.555999999908636e-06, 6.153000000175268e-06, 9.721999999712239e-06, 1.04169999994852e-05, 6.6659999999885144e-06, 9.583000000645825e-06, 9.06899999986166e-06, 1.174999999964399e-05, 7.583000000366269e-06, 8.208999999759214e-06, 1.0624999999819806e-05, 7.652999999940846e-06, 6.8049999999431066e-06, 6.417000000702444e-06, 1.080499999961404e-05, 6.832999999595302e-06, 9.805999999557002e-06, 9.695000000142784e-06, 6.3199999997820555e-06, 1.0639000000089993e-05, 1.0526999999704856e-05, 1.1125000000333785e-05, 8.165999999754092e-06, 1.0554999999357051e-05, 7.903000000197835e-06, 8.165999999754092e-06, 9.291000000466454e-06, 6.943999999897699e-06, 8.611000000158242e-06, 8.347999999713807e-06, 7.499999999716067e-06, 1.0235999999608225e-05, 1.0222000000226217e-05, 9.76399999963462e-06, 7.680999999593041e-06, 7.4439999995234984e-06, 9.889000000207204e-06, 8.680999999732819e-06, 7.944000000037477e-06, 1.1084000000494143e-05, 8.152000000372084e-06, 7.264000000617443e-06, 7.375000000031662e-06, 9.541999999918005e-06, 1.0540999999975043e-05, 9.750000000252612e-06, 8.47300000028639e-06, 9.332999999500657e-06, 8.209000000647393e-06, 8.346999999631066e-06, 6.179999999744723e-06, 1.2513999999796965e-05, 1.2055000000010807e-05, 6.056000000143058e-06, 9.61200000038076e-06, 8.097000000262256e-06, 9.110999999784042e-06, 8.986000000099637e-06, 7.985999999959859e-06, 7.736000000591048e-06]</msg>
<status status="PASS" starttime="20201029 09:34:23.006" endtime="20201029 09:34:23.008"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:23.001" endtime="20201029 09:34:23.008"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:22.625" endtime="20201029 09:34:23.009"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:22.625" endtime="20201029 09:34:23.009"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:23.017" endtime="20201029 09:34:23.029"></status>
</kw>
<msg timestamp="20201029 09:34:23.030" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:23.016" endtime="20201029 09:34:23.030"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:23.032" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:23.031" endtime="20201029 09:34:23.033"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:23.033" endtime="20201029 09:34:23.035"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:23.012" endtime="20201029 09:34:23.036"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:23.011" endtime="20201029 09:34:23.036"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:23.043" endtime="20201029 09:34:23.353"></status>
</kw>
<msg timestamp="20201029 09:34:23.357" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.924894944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.924906069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:23.041" endtime="20201029 09:34:23.358"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:23.367" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.924894944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.924906069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:23.358" endtime="20201029 09:34:23.368"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:23.368" endtime="20201029 09:34:23.370"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:23.038" endtime="20201029 09:34:23.371"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:23.037" endtime="20201029 09:34:23.371"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:23.375" level="INFO">${RESULT} = [{'diff': 1.1125000000333785e-05}, {'diff': 8.165999999754092e-06}, {'diff': 1.0554999999357051e-05}, {'diff': 7.903000000197835e-06}, {'diff': 8.165999999754092e-06}, {'diff': 9.291000000466454e-06},...</msg>
<status status="PASS" starttime="20201029 09:34:23.372" endtime="20201029 09:34:23.376"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:23.381" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.1125000000333785e-05, 8.165999999754092e-06, 1.0554999999357051e-05, 7.903000000197835e-06, 8.165999999754092e-06, 9.291000000466454e-06, 6.943999999897699e-06, 8.611000000158242e-06, 8.34...</msg>
<status status="PASS" starttime="20201029 09:34:23.376" endtime="20201029 09:34:23.385"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:23.390" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:34:23.389" endtime="20201029 09:34:23.390"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:23.392" level="INFO">VALUE: [1.1125000000333785e-05, 8.165999999754092e-06, 1.0554999999357051e-05, 7.903000000197835e-06, 8.165999999754092e-06, 9.291000000466454e-06, 6.943999999897699e-06, 8.611000000158242e-06, 8.347999999713807e-06, 7.499999999716067e-06, 1.0235999999608225e-05, 1.0222000000226217e-05, 9.76399999963462e-06, 7.680999999593041e-06, 7.4439999995234984e-06, 9.889000000207204e-06, 8.680999999732819e-06, 7.944000000037477e-06, 1.1084000000494143e-05, 8.152000000372084e-06, 7.264000000617443e-06, 7.375000000031662e-06, 9.541999999918005e-06, 1.0540999999975043e-05, 9.750000000252612e-06, 8.47300000028639e-06, 9.332999999500657e-06, 8.209000000647393e-06, 8.346999999631066e-06, 6.179999999744723e-06, 1.2513999999796965e-05, 1.2055000000010807e-05, 6.056000000143058e-06, 9.61200000038076e-06, 8.097000000262256e-06, 9.110999999784042e-06, 8.986000000099637e-06, 7.985999999959859e-06, 7.736000000591048e-06, 8.430000000281268e-06, 6.986000000708259e-06, 9.4170000002336e-06, 9.346999999770844e-06, 1.0972000000109006e-05, 7.026999999659722e-06, 1.0180000000303835e-05, 9.401999999880672e-06, 1.1972000000248784e-05, 8.819999999687411e-06, 1.2014000000171166e-05, 9.680999999872597e-06, 1.105599999995377e-05, 1.1082999999523224e-05, 9.388999999693226e-06, 7.569000000096082e-06, 5.625000000009095e-06, 7.805999999277446e-06, 8.693999999920266e-06, 1.0361000000180809e-05, 8.87499999979724e-06, 8.97199999982945e-06, 8.986000000099637e-06, 9.277999999390829e-06, 7.87500000054564e-06]</msg>
<status status="PASS" starttime="20201029 09:34:23.391" endtime="20201029 09:34:23.393"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:23.386" endtime="20201029 09:34:23.393"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:23.009" endtime="20201029 09:34:23.394"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:23.009" endtime="20201029 09:34:23.394"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:23.402" endtime="20201029 09:34:23.413"></status>
</kw>
<msg timestamp="20201029 09:34:23.414" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:23.400" endtime="20201029 09:34:23.414"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:23.416" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:23.415" endtime="20201029 09:34:23.417"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:23.417" endtime="20201029 09:34:23.419"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:23.398" endtime="20201029 09:34:23.419"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:23.396" endtime="20201029 09:34:23.420"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:23.426" endtime="20201029 09:34:23.742"></status>
</kw>
<msg timestamp="20201029 09:34:23.745" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.296850319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.296858792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:23.425" endtime="20201029 09:34:23.746"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:23.755" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.296850319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.296858792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:23.747" endtime="20201029 09:34:23.756"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:23.757" endtime="20201029 09:34:23.758"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:23.422" endtime="20201029 09:34:23.759"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:23.420" endtime="20201029 09:34:23.759"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:23.763" level="INFO">${RESULT} = [{'diff': 8.47300000028639e-06}, {'diff': 9.332999999500657e-06}, {'diff': 8.209000000647393e-06}, {'diff': 8.346999999631066e-06}, {'diff': 6.179999999744723e-06}, {'diff': 1.2513999999796965e-05}, {...</msg>
<status status="PASS" starttime="20201029 09:34:23.760" endtime="20201029 09:34:23.764"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:23.769" level="INFO">${GPIO_OVERHEAD} = {'diff': [8.47300000028639e-06, 9.332999999500657e-06, 8.209000000647393e-06, 8.346999999631066e-06, 6.179999999744723e-06, 1.2513999999796965e-05, 1.2055000000010807e-05, 6.056000000143058e-06, 9.612...</msg>
<status status="PASS" starttime="20201029 09:34:23.764" endtime="20201029 09:34:23.770"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:23.774" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:34:23.773" endtime="20201029 09:34:23.774"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:23.776" level="INFO">VALUE: [8.47300000028639e-06, 9.332999999500657e-06, 8.209000000647393e-06, 8.346999999631066e-06, 6.179999999744723e-06, 1.2513999999796965e-05, 1.2055000000010807e-05, 6.056000000143058e-06, 9.61200000038076e-06, 8.097000000262256e-06, 9.110999999784042e-06, 8.986000000099637e-06, 7.985999999959859e-06, 7.736000000591048e-06, 8.430000000281268e-06, 6.986000000708259e-06, 9.4170000002336e-06, 9.346999999770844e-06, 1.0972000000109006e-05, 7.026999999659722e-06, 1.0180000000303835e-05, 9.401999999880672e-06, 1.1972000000248784e-05, 8.819999999687411e-06, 1.2014000000171166e-05, 9.680999999872597e-06, 1.105599999995377e-05, 1.1082999999523224e-05, 9.388999999693226e-06, 7.569000000096082e-06, 5.625000000009095e-06, 7.805999999277446e-06, 8.693999999920266e-06, 1.0361000000180809e-05, 8.87499999979724e-06, 8.97199999982945e-06, 8.986000000099637e-06, 9.277999999390829e-06, 7.87500000054564e-06, 1.0361000000180809e-05, 8.556000000048414e-06, 6.973000000520813e-06, 8.028000000770419e-06, 1.0346999999910622e-05, 8.87499999979724e-06, 6.221999999667105e-06, 9.152999999706424e-06, 6.347000000239689e-06, 9.708999999524792e-06, 8.152999999566646e-06, 6.79199999975566e-06, 7.444999999606239e-06, 9.874999999937017e-06, 7.5270000001737e-06, 7.722999999515423e-06, 7.5700000001788226e-06, 1.0597000000167611e-05, 7.806000000165625e-06, 9.139000000324415e-06, 9.721999999712239e-06, 7.068999999582104e-06, 6.2080000002850966e-06, 9.834000000097376e-06, 8.680999999732819e-06]</msg>
<status status="PASS" starttime="20201029 09:34:23.775" endtime="20201029 09:34:23.777"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:23.770" endtime="20201029 09:34:23.777"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:23.395" endtime="20201029 09:34:23.778"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:23.394" endtime="20201029 09:34:23.778"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:23.786" endtime="20201029 09:34:23.797"></status>
</kw>
<msg timestamp="20201029 09:34:23.798" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:23.784" endtime="20201029 09:34:23.798"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:23.800" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:23.799" endtime="20201029 09:34:23.800"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:23.801" endtime="20201029 09:34:23.803"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:23.782" endtime="20201029 09:34:23.803"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:23.780" endtime="20201029 09:34:23.804"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:23.811" endtime="20201029 09:34:24.126"></status>
</kw>
<msg timestamp="20201029 09:34:24.130" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.671569944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.671579625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:23.810" endtime="20201029 09:34:24.131"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:24.140" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.671569944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.671579625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:24.132" endtime="20201029 09:34:24.141"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:24.141" endtime="20201029 09:34:24.143"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:23.806" endtime="20201029 09:34:24.144"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:23.804" endtime="20201029 09:34:24.144"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:24.148" level="INFO">${RESULT} = [{'diff': 9.680999999872597e-06}, {'diff': 1.105599999995377e-05}, {'diff': 1.1082999999523224e-05}, {'diff': 9.388999999693226e-06}, {'diff': 7.569000000096082e-06}, {'diff': 5.625000000009095e-06}, ...</msg>
<status status="PASS" starttime="20201029 09:34:24.145" endtime="20201029 09:34:24.149"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:24.153" level="INFO">${GPIO_OVERHEAD} = {'diff': [9.680999999872597e-06, 1.105599999995377e-05, 1.1082999999523224e-05, 9.388999999693226e-06, 7.569000000096082e-06, 5.625000000009095e-06, 7.805999999277446e-06, 8.693999999920266e-06, 1.036...</msg>
<status status="PASS" starttime="20201029 09:34:24.149" endtime="20201029 09:34:24.154"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:24.158" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:34:24.157" endtime="20201029 09:34:24.158"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:24.161" level="INFO">VALUE: [9.680999999872597e-06, 1.105599999995377e-05, 1.1082999999523224e-05, 9.388999999693226e-06, 7.569000000096082e-06, 5.625000000009095e-06, 7.805999999277446e-06, 8.693999999920266e-06, 1.0361000000180809e-05, 8.87499999979724e-06, 8.97199999982945e-06, 8.986000000099637e-06, 9.277999999390829e-06, 7.87500000054564e-06, 1.0361000000180809e-05, 8.556000000048414e-06, 6.973000000520813e-06, 8.028000000770419e-06, 1.0346999999910622e-05, 8.87499999979724e-06, 6.221999999667105e-06, 9.152999999706424e-06, 6.347000000239689e-06, 9.708999999524792e-06, 8.152999999566646e-06, 6.79199999975566e-06, 7.444999999606239e-06, 9.874999999937017e-06, 7.5270000001737e-06, 7.722999999515423e-06, 7.5700000001788226e-06, 1.0597000000167611e-05, 7.806000000165625e-06, 9.139000000324415e-06, 9.721999999712239e-06, 7.068999999582104e-06, 6.2080000002850966e-06, 9.834000000097376e-06, 8.680999999732819e-06, 1.130499999923984e-05, 1.0540999999975043e-05, 6.9580000001678854e-06, 1.0582999999897424e-05, 9.861999999749571e-06, 1.1861000000834565e-05, 1.11940000007138e-05, 8.333000000249058e-06, 8.87499999979724e-06, 5.902999999918279e-06, 8.333000000249058e-06, 8.459000000016204e-06, 9.971999999969228e-06, 9.527999999647818e-06, 9.459000000155982e-06, 9.583000000645825e-06, 6.610999999878686e-06, 8.02799999988224e-06, 7.4719999991756936e-06, 8.596999999888055e-06, 7.056000000282836e-06, 8.43099999947583e-06, 9.458000000073241e-06, 7.596999999748277e-06, 9.402999999963413e-06]</msg>
<status status="PASS" starttime="20201029 09:34:24.159" endtime="20201029 09:34:24.161"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:24.154" endtime="20201029 09:34:24.162"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:23.779" endtime="20201029 09:34:24.162"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:23.778" endtime="20201029 09:34:24.162"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:24.170" endtime="20201029 09:34:24.181"></status>
</kw>
<msg timestamp="20201029 09:34:24.181" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:24.169" endtime="20201029 09:34:24.181"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:24.184" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:24.182" endtime="20201029 09:34:24.184"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:24.185" endtime="20201029 09:34:24.186"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:24.166" endtime="20201029 09:34:24.187"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:24.164" endtime="20201029 09:34:24.187"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:24.194" endtime="20201029 09:34:24.507"></status>
</kw>
<msg timestamp="20201029 09:34:24.511" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.043509861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.043516653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:24.192" endtime="20201029 09:34:24.511"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:24.521" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.043509861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.043516653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:24.512" endtime="20201029 09:34:24.521"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:24.522" endtime="20201029 09:34:24.524"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:24.190" endtime="20201029 09:34:24.524"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:24.188" endtime="20201029 09:34:24.525"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:24.529" level="INFO">${RESULT} = [{'diff': 6.79199999975566e-06}, {'diff': 7.444999999606239e-06}, {'diff': 9.874999999937017e-06}, {'diff': 7.5270000001737e-06}, {'diff': 7.722999999515423e-06}, {'diff': 7.5700000001788226e-06}, {'d...</msg>
<status status="PASS" starttime="20201029 09:34:24.525" endtime="20201029 09:34:24.529"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:24.534" level="INFO">${GPIO_OVERHEAD} = {'diff': [6.79199999975566e-06, 7.444999999606239e-06, 9.874999999937017e-06, 7.5270000001737e-06, 7.722999999515423e-06, 7.5700000001788226e-06, 1.0597000000167611e-05, 7.806000000165625e-06, 9.13900...</msg>
<status status="PASS" starttime="20201029 09:34:24.530" endtime="20201029 09:34:24.535"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:24.539" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:34:24.538" endtime="20201029 09:34:24.539"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:24.541" level="INFO">VALUE: [6.79199999975566e-06, 7.444999999606239e-06, 9.874999999937017e-06, 7.5270000001737e-06, 7.722999999515423e-06, 7.5700000001788226e-06, 1.0597000000167611e-05, 7.806000000165625e-06, 9.139000000324415e-06, 9.721999999712239e-06, 7.068999999582104e-06, 6.2080000002850966e-06, 9.834000000097376e-06, 8.680999999732819e-06, 1.130499999923984e-05, 1.0540999999975043e-05, 6.9580000001678854e-06, 1.0582999999897424e-05, 9.861999999749571e-06, 1.1861000000834565e-05, 1.11940000007138e-05, 8.333000000249058e-06, 8.87499999979724e-06, 5.902999999918279e-06, 8.333000000249058e-06, 8.459000000016204e-06, 9.971999999969228e-06, 9.527999999647818e-06, 9.459000000155982e-06, 9.583000000645825e-06, 6.610999999878686e-06, 8.02799999988224e-06, 7.4719999991756936e-06, 8.596999999888055e-06, 7.056000000282836e-06, 8.43099999947583e-06, 9.458000000073241e-06, 7.596999999748277e-06, 9.402999999963413e-06, 5.833000000343702e-06, 7.348000000462207e-06, 1.0957999999838819e-05, 7.2089999996194365e-06, 7.917000000468022e-06, 8.929999999907068e-06, 8.77799999976503e-06, 1.0180999999498397e-05, 8.388999999553448e-06, 9.041000000209465e-06, 1.1833000000294192e-05, 1.1014000000031388e-05, 8.680999999732819e-06, 7.917000000468022e-06, 7.93099999985003e-06, 9.055999999674214e-06, 9.986999999433976e-06, 8.750000000112834e-06, 9.110999999784042e-06, 6.527999999228484e-06, 7.555999999908636e-06, 9.250000000626812e-06, 7.916999999579843e-06, 8.749999999224656e-06, 7.87500000054564e-06]</msg>
<status status="PASS" starttime="20201029 09:34:24.540" endtime="20201029 09:34:24.542"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:24.535" endtime="20201029 09:34:24.542"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:24.163" endtime="20201029 09:34:24.543"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:24.163" endtime="20201029 09:34:24.543"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:24.551" endtime="20201029 09:34:24.562"></status>
</kw>
<msg timestamp="20201029 09:34:24.563" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:24.549" endtime="20201029 09:34:24.563"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:24.565" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:24.564" endtime="20201029 09:34:24.565"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:24.566" endtime="20201029 09:34:24.568"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:24.547" endtime="20201029 09:34:24.568"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:24.545" endtime="20201029 09:34:24.569"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:24.575" endtime="20201029 09:34:24.885"></status>
</kw>
<msg timestamp="20201029 09:34:24.889" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.417075472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.417083931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:24.574" endtime="20201029 09:34:24.890"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:24.899" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.417075472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.417083931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:24.890" endtime="20201029 09:34:24.900"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:24.900" endtime="20201029 09:34:24.902"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:24.571" endtime="20201029 09:34:24.903"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:24.569" endtime="20201029 09:34:24.903"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:24.907" level="INFO">${RESULT} = [{'diff': 8.459000000016204e-06}, {'diff': 9.971999999969228e-06}, {'diff': 9.527999999647818e-06}, {'diff': 9.459000000155982e-06}, {'diff': 9.583000000645825e-06}, {'diff': 6.610999999878686e-06}, {...</msg>
<status status="PASS" starttime="20201029 09:34:24.904" endtime="20201029 09:34:24.908"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:24.912" level="INFO">${GPIO_OVERHEAD} = {'diff': [8.459000000016204e-06, 9.971999999969228e-06, 9.527999999647818e-06, 9.459000000155982e-06, 9.583000000645825e-06, 6.610999999878686e-06, 8.02799999988224e-06, 7.4719999991756936e-06, 8.5969...</msg>
<status status="PASS" starttime="20201029 09:34:24.908" endtime="20201029 09:34:24.913"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:24.917" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:34:24.916" endtime="20201029 09:34:24.917"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:24.919" level="INFO">VALUE: [8.459000000016204e-06, 9.971999999969228e-06, 9.527999999647818e-06, 9.459000000155982e-06, 9.583000000645825e-06, 6.610999999878686e-06, 8.02799999988224e-06, 7.4719999991756936e-06, 8.596999999888055e-06, 7.056000000282836e-06, 8.43099999947583e-06, 9.458000000073241e-06, 7.596999999748277e-06, 9.402999999963413e-06, 5.833000000343702e-06, 7.348000000462207e-06, 1.0957999999838819e-05, 7.2089999996194365e-06, 7.917000000468022e-06, 8.929999999907068e-06, 8.77799999976503e-06, 1.0180999999498397e-05, 8.388999999553448e-06, 9.041000000209465e-06, 1.1833000000294192e-05, 1.1014000000031388e-05, 8.680999999732819e-06, 7.917000000468022e-06, 7.93099999985003e-06, 9.055999999674214e-06, 9.986999999433976e-06, 8.750000000112834e-06, 9.110999999784042e-06, 6.527999999228484e-06, 7.555999999908636e-06, 9.250000000626812e-06, 7.916999999579843e-06, 8.749999999224656e-06, 7.87500000054564e-06, 1.2277999999810163e-05, 8.37500000017144e-06, 7.222000000695061e-06, 9.304999999848462e-06, 8.055999999534436e-06, 7.194000000154688e-06, 5.9580000000281075e-06, 1.1069000000141216e-05, 1.0471999999595027e-05, 8.556000000048414e-06, 9.110999999784042e-06, 6.9169999994400655e-06, 8.860999999527053e-06, 9.194999999628806e-06, 1.0055999999813992e-05, 9.305999999931203e-06, 8.402000000629073e-06, 8.87499999979724e-06, 8.62499999954025e-06, 8.777000000570467e-06, 7.1519999993441274e-06, 1.2417000000652934e-05, 7.693999999780488e-06, 9.110999999784042e-06, 8.041000000069687e-06]</msg>
<status status="PASS" starttime="20201029 09:34:24.918" endtime="20201029 09:34:24.920"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:24.913" endtime="20201029 09:34:24.920"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:24.544" endtime="20201029 09:34:24.921"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:24.543" endtime="20201029 09:34:24.921"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:24.929" endtime="20201029 09:34:24.942"></status>
</kw>
<msg timestamp="20201029 09:34:24.942" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:24.927" endtime="20201029 09:34:24.942"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:24.945" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:24.943" endtime="20201029 09:34:24.945"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:24.946" endtime="20201029 09:34:24.947"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:24.925" endtime="20201029 09:34:24.948"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:24.923" endtime="20201029 09:34:24.948"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:24.955" endtime="20201029 09:34:25.263"></status>
</kw>
<msg timestamp="20201029 09:34:25.266" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.792161569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.792172583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:24.953" endtime="20201029 09:34:25.267"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:25.276" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.792161569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.792172583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:25.268" endtime="20201029 09:34:25.277"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:25.277" endtime="20201029 09:34:25.279"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:24.951" endtime="20201029 09:34:25.280"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:24.949" endtime="20201029 09:34:25.280"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:25.284" level="INFO">${RESULT} = [{'diff': 1.1014000000031388e-05}, {'diff': 8.680999999732819e-06}, {'diff': 7.917000000468022e-06}, {'diff': 7.93099999985003e-06}, {'diff': 9.055999999674214e-06}, {'diff': 9.986999999433976e-06}, {...</msg>
<status status="PASS" starttime="20201029 09:34:25.281" endtime="20201029 09:34:25.285"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:25.290" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.1014000000031388e-05, 8.680999999732819e-06, 7.917000000468022e-06, 7.93099999985003e-06, 9.055999999674214e-06, 9.986999999433976e-06, 8.750000000112834e-06, 9.110999999784042e-06, 6.5279...</msg>
<status status="PASS" starttime="20201029 09:34:25.285" endtime="20201029 09:34:25.290"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:25.294" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:34:25.293" endtime="20201029 09:34:25.295"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:25.297" level="INFO">VALUE: [1.1014000000031388e-05, 8.680999999732819e-06, 7.917000000468022e-06, 7.93099999985003e-06, 9.055999999674214e-06, 9.986999999433976e-06, 8.750000000112834e-06, 9.110999999784042e-06, 6.527999999228484e-06, 7.555999999908636e-06, 9.250000000626812e-06, 7.916999999579843e-06, 8.749999999224656e-06, 7.87500000054564e-06, 1.2277999999810163e-05, 8.37500000017144e-06, 7.222000000695061e-06, 9.304999999848462e-06, 8.055999999534436e-06, 7.194000000154688e-06, 5.9580000000281075e-06, 1.1069000000141216e-05, 1.0471999999595027e-05, 8.556000000048414e-06, 9.110999999784042e-06, 6.9169999994400655e-06, 8.860999999527053e-06, 9.194999999628806e-06, 1.0055999999813992e-05, 9.305999999931203e-06, 8.402000000629073e-06, 8.87499999979724e-06, 8.62499999954025e-06, 8.777000000570467e-06, 7.1519999993441274e-06, 1.2417000000652934e-05, 7.693999999780488e-06, 9.110999999784042e-06, 8.041000000069687e-06, 1.0026999999190878e-05, 9.874999999937017e-06, 1.0681000000012375e-05, 7.5700000001788226e-06, 7.555999999908636e-06, 9.291999999661016e-06, 1.0193999999685843e-05, 1.1070000000223956e-05, 1.1124999999445606e-05, 8.194000000294466e-06, 6.7230000002638235e-06, 8.583999999700609e-06, 7.2080000004248745e-06, 7.722000000320861e-06, 1.0694999999394383e-05, 1.0957999999838819e-05, 7.1390000000448595e-06, 1.1972000000248784e-05, 9.556000000188192e-06, 7.0279999997424625e-06, 1.0514000000405588e-05, 8.416000000011081e-06, 1.0235999999608225e-05, 7.264000000617443e-06, 7.082999999852291e-06]</msg>
<status status="PASS" starttime="20201029 09:34:25.295" endtime="20201029 09:34:25.297"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:25.291" endtime="20201029 09:34:25.298"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:24.922" endtime="20201029 09:34:25.298"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:24.921" endtime="20201029 09:34:25.298"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:25.306" endtime="20201029 09:34:25.317"></status>
</kw>
<msg timestamp="20201029 09:34:25.317" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:25.305" endtime="20201029 09:34:25.317"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:25.320" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:25.318" endtime="20201029 09:34:25.320"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:25.321" endtime="20201029 09:34:25.322"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:25.302" endtime="20201029 09:34:25.323"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:25.300" endtime="20201029 09:34:25.323"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:25.330" endtime="20201029 09:34:25.639"></status>
</kw>
<msg timestamp="20201029 09:34:25.642" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.162602639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.162609556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:25.328" endtime="20201029 09:34:25.643"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:25.652" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.162602639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.162609556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:25.644" endtime="20201029 09:34:25.653"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:25.654" endtime="20201029 09:34:25.655"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:25.326" endtime="20201029 09:34:25.656"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:25.324" endtime="20201029 09:34:25.656"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:25.660" level="INFO">${RESULT} = [{'diff': 6.9169999994400655e-06}, {'diff': 8.860999999527053e-06}, {'diff': 9.194999999628806e-06}, {'diff': 1.0055999999813992e-05}, {'diff': 9.305999999931203e-06}, {'diff': 8.402000000629073e-06},...</msg>
<status status="PASS" starttime="20201029 09:34:25.657" endtime="20201029 09:34:25.661"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:25.666" level="INFO">${GPIO_OVERHEAD} = {'diff': [6.9169999994400655e-06, 8.860999999527053e-06, 9.194999999628806e-06, 1.0055999999813992e-05, 9.305999999931203e-06, 8.402000000629073e-06, 8.87499999979724e-06, 8.62499999954025e-06, 8.7770...</msg>
<status status="PASS" starttime="20201029 09:34:25.661" endtime="20201029 09:34:25.667"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:25.671" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:34:25.670" endtime="20201029 09:34:25.671"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:25.673" level="INFO">VALUE: [6.9169999994400655e-06, 8.860999999527053e-06, 9.194999999628806e-06, 1.0055999999813992e-05, 9.305999999931203e-06, 8.402000000629073e-06, 8.87499999979724e-06, 8.62499999954025e-06, 8.777000000570467e-06, 7.1519999993441274e-06, 1.2417000000652934e-05, 7.693999999780488e-06, 9.110999999784042e-06, 8.041000000069687e-06, 1.0026999999190878e-05, 9.874999999937017e-06, 1.0681000000012375e-05, 7.5700000001788226e-06, 7.555999999908636e-06, 9.291999999661016e-06, 1.0193999999685843e-05, 1.1070000000223956e-05, 1.1124999999445606e-05, 8.194000000294466e-06, 6.7230000002638235e-06, 8.583999999700609e-06, 7.2080000004248745e-06, 7.722000000320861e-06, 1.0694999999394383e-05, 1.0957999999838819e-05, 7.1390000000448595e-06, 1.1972000000248784e-05, 9.556000000188192e-06, 7.0279999997424625e-06, 1.0514000000405588e-05, 8.416000000011081e-06, 1.0235999999608225e-05, 7.264000000617443e-06, 7.082999999852291e-06, 8.875000000685418e-06, 9.526999999565078e-06, 1.2138999999855571e-05, 5.348000000182651e-06, 8.958000000447441e-06, 9.889000000207204e-06, 9.041000000209465e-06, 9.887999999236285e-06, 1.0000000000509601e-05, 8.750000000112834e-06, 1.0055999999813992e-05, 6.681000000341442e-06, 1.1665999999799226e-05, 1.1500000000275179e-05, 7.6249999994004725e-06, 6.541999999498671e-06, 1.030499999998824e-05, 7.861000000275453e-06, 6.736999999645832e-06, 9.346999999770844e-06, 1.1652000000417218e-05, 5.944999999840661e-06, 1.0125000000194007e-05, 9.236000000356626e-06, 1.1069999999335778e-05]</msg>
<status status="PASS" starttime="20201029 09:34:25.672" endtime="20201029 09:34:25.674"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:25.667" endtime="20201029 09:34:25.674"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:25.299" endtime="20201029 09:34:25.675"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:25.299" endtime="20201029 09:34:25.675"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:25.683" endtime="20201029 09:34:25.694"></status>
</kw>
<msg timestamp="20201029 09:34:25.694" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:25.681" endtime="20201029 09:34:25.694"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:25.696" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:25.695" endtime="20201029 09:34:25.697"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:25.698" endtime="20201029 09:34:25.699"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:25.678" endtime="20201029 09:34:25.700"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:25.677" endtime="20201029 09:34:25.700"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:25.707" endtime="20201029 09:34:26.031"></status>
</kw>
<msg timestamp="20201029 09:34:26.035" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.530642694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.530651278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:25.705" endtime="20201029 09:34:26.035"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:26.045" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.530642694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.530651278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:26.036" endtime="20201029 09:34:26.045"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:26.046" endtime="20201029 09:34:26.047"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:25.702" endtime="20201029 09:34:26.048"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:25.701" endtime="20201029 09:34:26.048"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:26.053" level="INFO">${RESULT} = [{'diff': 8.583999999700609e-06}, {'diff': 7.2080000004248745e-06}, {'diff': 7.722000000320861e-06}, {'diff': 1.0694999999394383e-05}, {'diff': 1.0957999999838819e-05}, {'diff': 7.1390000000448595e-06...</msg>
<status status="PASS" starttime="20201029 09:34:26.049" endtime="20201029 09:34:26.053"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:26.058" level="INFO">${GPIO_OVERHEAD} = {'diff': [8.583999999700609e-06, 7.2080000004248745e-06, 7.722000000320861e-06, 1.0694999999394383e-05, 1.0957999999838819e-05, 7.1390000000448595e-06, 1.1972000000248784e-05, 9.556000000188192e-06, 7...</msg>
<status status="PASS" starttime="20201029 09:34:26.054" endtime="20201029 09:34:26.058"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:26.062" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:34:26.061" endtime="20201029 09:34:26.063"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:26.065" level="INFO">VALUE: [8.583999999700609e-06, 7.2080000004248745e-06, 7.722000000320861e-06, 1.0694999999394383e-05, 1.0957999999838819e-05, 7.1390000000448595e-06, 1.1972000000248784e-05, 9.556000000188192e-06, 7.0279999997424625e-06, 1.0514000000405588e-05, 8.416000000011081e-06, 1.0235999999608225e-05, 7.264000000617443e-06, 7.082999999852291e-06, 8.875000000685418e-06, 9.526999999565078e-06, 1.2138999999855571e-05, 5.348000000182651e-06, 8.958000000447441e-06, 9.889000000207204e-06, 9.041000000209465e-06, 9.887999999236285e-06, 1.0000000000509601e-05, 8.750000000112834e-06, 1.0055999999813992e-05, 6.681000000341442e-06, 1.1665999999799226e-05, 1.1500000000275179e-05, 7.6249999994004725e-06, 6.541999999498671e-06, 1.030499999998824e-05, 7.861000000275453e-06, 6.736999999645832e-06, 9.346999999770844e-06, 1.1652000000417218e-05, 5.944999999840661e-06, 1.0125000000194007e-05, 9.236000000356626e-06, 1.1069999999335778e-05, 7.541000000443887e-06, 7.569000000984261e-06, 9.042000000292205e-06, 7.750000001749413e-06, 6.9580000001678854e-06, 7.513999999986254e-06, 7.680999999593041e-06, 6.486000000194281e-06, 1.090299999972899e-05, 1.0500000000135401e-05, 6.318999998811137e-06, 7.708000000050674e-06, 9.000000000369823e-06, 7.4310000002242305e-06, 6.167000000445455e-06, 1.025000000076659e-05, 9.76399999963462e-06, 7.569000000984261e-06, 7.693999998892309e-06, 1.0361000001068987e-05, 6.7359999995630915e-06, 1.0346999999910622e-05, 6.014000000220676e-06, 8.263999999869043e-06, 7.249999999459078e-06]</msg>
<status status="PASS" starttime="20201029 09:34:26.063" endtime="20201029 09:34:26.065"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:26.059" endtime="20201029 09:34:26.066"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:25.676" endtime="20201029 09:34:26.066"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:25.675" endtime="20201029 09:34:26.066"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:26.075" endtime="20201029 09:34:26.086"></status>
</kw>
<msg timestamp="20201029 09:34:26.087" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:26.073" endtime="20201029 09:34:26.087"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:26.089" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:26.088" endtime="20201029 09:34:26.089"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:26.090" endtime="20201029 09:34:26.092"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:26.070" endtime="20201029 09:34:26.092"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:26.068" endtime="20201029 09:34:26.093"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:26.099" endtime="20201029 09:34:26.416"></status>
</kw>
<msg timestamp="20201029 09:34:26.420" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.896336722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.896343403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:26.097" endtime="20201029 09:34:26.420"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:26.430" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.896336722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.896343403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:26.421" endtime="20201029 09:34:26.430"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:26.431" endtime="20201029 09:34:26.433"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:26.095" endtime="20201029 09:34:26.433"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:26.093" endtime="20201029 09:34:26.433"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:26.438" level="INFO">${RESULT} = [{'diff': 6.681000000341442e-06}, {'diff': 1.1665999999799226e-05}, {'diff': 1.1500000000275179e-05}, {'diff': 7.6249999994004725e-06}, {'diff': 6.541999999498671e-06}, {'diff': 1.030499999998824e-05}...</msg>
<status status="PASS" starttime="20201029 09:34:26.434" endtime="20201029 09:34:26.438"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:26.444" level="INFO">${GPIO_OVERHEAD} = {'diff': [6.681000000341442e-06, 1.1665999999799226e-05, 1.1500000000275179e-05, 7.6249999994004725e-06, 6.541999999498671e-06, 1.030499999998824e-05, 7.861000000275453e-06, 6.736999999645832e-06, 9.3...</msg>
<status status="PASS" starttime="20201029 09:34:26.439" endtime="20201029 09:34:26.444"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:26.448" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:34:26.447" endtime="20201029 09:34:26.448"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:26.450" level="INFO">VALUE: [6.681000000341442e-06, 1.1665999999799226e-05, 1.1500000000275179e-05, 7.6249999994004725e-06, 6.541999999498671e-06, 1.030499999998824e-05, 7.861000000275453e-06, 6.736999999645832e-06, 9.346999999770844e-06, 1.1652000000417218e-05, 5.944999999840661e-06, 1.0125000000194007e-05, 9.236000000356626e-06, 1.1069999999335778e-05, 7.541000000443887e-06, 7.569000000984261e-06, 9.042000000292205e-06, 7.750000001749413e-06, 6.9580000001678854e-06, 7.513999999986254e-06, 7.680999999593041e-06, 6.486000000194281e-06, 1.090299999972899e-05, 1.0500000000135401e-05, 6.318999998811137e-06, 7.708000000050674e-06, 9.000000000369823e-06, 7.4310000002242305e-06, 6.167000000445455e-06, 1.025000000076659e-05, 9.76399999963462e-06, 7.569000000984261e-06, 7.693999998892309e-06, 1.0361000001068987e-05, 6.7359999995630915e-06, 1.0346999999910622e-05, 6.014000000220676e-06, 8.263999999869043e-06, 7.249999999459078e-06, 9.778000000792986e-06, 6.7920000006438386e-06, 8.499999999855845e-06, 1.0444999999137394e-05, 7.111000000392664e-06, 1.179100000037181e-05, 7.3890000003018486e-06, 1.090299999972899e-05, 8.582999999617869e-06, 7.944000000037477e-06, 5.6530000005494685e-06, 9.638999999950215e-06, 1.1555000000385007e-05, 9.583000000645825e-06, 9.610999999409842e-06, 8.695000000003006e-06, 8.943999999289076e-06, 1.0028000000161796e-05, 8.693999999920266e-06, 7.555999999908636e-06, 1.0235999999608225e-05, 1.2403000001270925e-05, 6.1389999999050815e-06, 6.486000000194281e-06, 1.0292000000688972e-05]</msg>
<status status="PASS" starttime="20201029 09:34:26.449" endtime="20201029 09:34:26.451"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:26.444" endtime="20201029 09:34:26.451"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:26.067" endtime="20201029 09:34:26.452"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:26.067" endtime="20201029 09:34:26.452"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:26.460" endtime="20201029 09:34:26.470"></status>
</kw>
<msg timestamp="20201029 09:34:26.471" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:26.458" endtime="20201029 09:34:26.471"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:26.473" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:26.472" endtime="20201029 09:34:26.473"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:26.474" endtime="20201029 09:34:26.476"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:26.455" endtime="20201029 09:34:26.476"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:26.454" endtime="20201029 09:34:26.477"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:26.483" endtime="20201029 09:34:26.801"></status>
</kw>
<msg timestamp="20201029 09:34:26.805" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.260010917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.260018625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:26.482" endtime="20201029 09:34:26.805"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:26.814" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.260010917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.260018625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:26.806" endtime="20201029 09:34:26.815"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:26.815" endtime="20201029 09:34:26.817"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:26.479" endtime="20201029 09:34:26.818"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:26.477" endtime="20201029 09:34:26.818"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:26.823" level="INFO">${RESULT} = [{'diff': 7.708000000050674e-06}, {'diff': 9.000000000369823e-06}, {'diff': 7.4310000002242305e-06}, {'diff': 6.167000000445455e-06}, {'diff': 1.025000000076659e-05}, {'diff': 9.76399999963462e-06}, {...</msg>
<status status="PASS" starttime="20201029 09:34:26.819" endtime="20201029 09:34:26.824"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:26.828" level="INFO">${GPIO_OVERHEAD} = {'diff': [7.708000000050674e-06, 9.000000000369823e-06, 7.4310000002242305e-06, 6.167000000445455e-06, 1.025000000076659e-05, 9.76399999963462e-06, 7.569000000984261e-06, 7.693999998892309e-06, 1.0361...</msg>
<status status="PASS" starttime="20201029 09:34:26.825" endtime="20201029 09:34:26.829"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:26.833" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:34:26.832" endtime="20201029 09:34:26.833"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:26.835" level="INFO">VALUE: [7.708000000050674e-06, 9.000000000369823e-06, 7.4310000002242305e-06, 6.167000000445455e-06, 1.025000000076659e-05, 9.76399999963462e-06, 7.569000000984261e-06, 7.693999998892309e-06, 1.0361000001068987e-05, 6.7359999995630915e-06, 1.0346999999910622e-05, 6.014000000220676e-06, 8.263999999869043e-06, 7.249999999459078e-06, 9.778000000792986e-06, 6.7920000006438386e-06, 8.499999999855845e-06, 1.0444999999137394e-05, 7.111000000392664e-06, 1.179100000037181e-05, 7.3890000003018486e-06, 1.090299999972899e-05, 8.582999999617869e-06, 7.944000000037477e-06, 5.6530000005494685e-06, 9.638999999950215e-06, 1.1555000000385007e-05, 9.583000000645825e-06, 9.610999999409842e-06, 8.695000000003006e-06, 8.943999999289076e-06, 1.0028000000161796e-05, 8.693999999920266e-06, 7.555999999908636e-06, 1.0235999999608225e-05, 1.2403000001270925e-05, 6.1389999999050815e-06, 6.486000000194281e-06, 1.0292000000688972e-05, 7.194000000154688e-06, 7.347000000379467e-06, 7.847000000893445e-06, 1.0666999999742188e-05, 6.7359999995630915e-06, 8.639000000698616e-06, 1.0167000001004567e-05, 8.985999999211458e-06, 8.166999998948654e-06, 9.611000001186198e-06, 9.222000000974617e-06, 9.903000000477391e-06, 1.21939999999654e-05, 1.1610999999689398e-05, 6.736000001339448e-06, 1.0596999999279433e-05, 1.11940000007138e-05, 8.693999999920266e-06, 8.416000000011081e-06, 8.860999999527053e-06, 1.0097999998848195e-05, 8.707999999302274e-06, 9.777000000710245e-06, 8.333000000249058e-06, 9.957999999699041e-06]</msg>
<status status="PASS" starttime="20201029 09:34:26.834" endtime="20201029 09:34:26.836"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:26.829" endtime="20201029 09:34:26.836"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:26.453" endtime="20201029 09:34:26.837"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:26.452" endtime="20201029 09:34:26.837"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:26.845" endtime="20201029 09:34:26.856"></status>
</kw>
<msg timestamp="20201029 09:34:26.856" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:26.843" endtime="20201029 09:34:26.857"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:26.859" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:26.858" endtime="20201029 09:34:26.859"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:26.860" endtime="20201029 09:34:26.862"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:26.840" endtime="20201029 09:34:26.862"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:26.839" endtime="20201029 09:34:26.863"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:26.870" endtime="20201029 09:34:27.182"></status>
</kw>
<msg timestamp="20201029 09:34:27.186" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.642256014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.642265653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:26.868" endtime="20201029 09:34:27.186"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:27.195" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.642256014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.642265653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:27.187" endtime="20201029 09:34:27.196"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:27.197" endtime="20201029 09:34:27.198"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:26.865" endtime="20201029 09:34:27.199"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:26.863" endtime="20201029 09:34:27.199"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:27.204" level="INFO">${RESULT} = [{'diff': 9.638999999950215e-06}, {'diff': 1.1555000000385007e-05}, {'diff': 9.583000000645825e-06}, {'diff': 9.610999999409842e-06}, {'diff': 8.695000000003006e-06}, {'diff': 8.943999999289076e-06}, ...</msg>
<status status="PASS" starttime="20201029 09:34:27.200" endtime="20201029 09:34:27.204"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:27.209" level="INFO">${GPIO_OVERHEAD} = {'diff': [9.638999999950215e-06, 1.1555000000385007e-05, 9.583000000645825e-06, 9.610999999409842e-06, 8.695000000003006e-06, 8.943999999289076e-06, 1.0028000000161796e-05, 8.693999999920266e-06, 7.55...</msg>
<status status="PASS" starttime="20201029 09:34:27.205" endtime="20201029 09:34:27.209"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:27.213" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:34:27.212" endtime="20201029 09:34:27.214"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:27.216" level="INFO">VALUE: [9.638999999950215e-06, 1.1555000000385007e-05, 9.583000000645825e-06, 9.610999999409842e-06, 8.695000000003006e-06, 8.943999999289076e-06, 1.0028000000161796e-05, 8.693999999920266e-06, 7.555999999908636e-06, 1.0235999999608225e-05, 1.2403000001270925e-05, 6.1389999999050815e-06, 6.486000000194281e-06, 1.0292000000688972e-05, 7.194000000154688e-06, 7.347000000379467e-06, 7.847000000893445e-06, 1.0666999999742188e-05, 6.7359999995630915e-06, 8.639000000698616e-06, 1.0167000001004567e-05, 8.985999999211458e-06, 8.166999998948654e-06, 9.611000001186198e-06, 9.222000000974617e-06, 9.903000000477391e-06, 1.21939999999654e-05, 1.1610999999689398e-05, 6.736000001339448e-06, 1.0596999999279433e-05, 1.11940000007138e-05, 8.693999999920266e-06, 8.416000000011081e-06, 8.860999999527053e-06, 1.0097999998848195e-05, 8.707999999302274e-06, 9.777000000710245e-06, 8.333000000249058e-06, 9.957999999699041e-06, 8.722000000460639e-06, 8.860999999527053e-06, 1.095799999895064e-05, 1.0999999998873022e-05, 6.930999999710252e-06, 8.986999999294198e-06, 1.1430999999006985e-05, 7.34699999860311e-06, 8.388999999553448e-06, 7.23600000007707e-06, 8.098000000344996e-06, 5.778000000233874e-06, 8.041999999264249e-06, 5.528000000865063e-06, 1.0180000000303835e-05, 8.735999999842647e-06, 9.042000000292205e-06, 9.236000000356626e-06, 9.999999999621423e-06, 1.1320000000480945e-05, 7.791999999895438e-06, 7.749999999973056e-06, 7.847999999199828e-06, 7.48599999944588e-06, 7.444999999606239e-06]</msg>
<status status="PASS" starttime="20201029 09:34:27.215" endtime="20201029 09:34:27.217"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:27.209" endtime="20201029 09:34:27.217"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:26.837" endtime="20201029 09:34:27.217"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:26.837" endtime="20201029 09:34:27.218"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:27.226" endtime="20201029 09:34:27.236"></status>
</kw>
<msg timestamp="20201029 09:34:27.237" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:27.224" endtime="20201029 09:34:27.237"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:27.239" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:27.238" endtime="20201029 09:34:27.239"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:27.240" endtime="20201029 09:34:27.242"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:27.222" endtime="20201029 09:34:27.242"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:27.220" endtime="20201029 09:34:27.243"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:27.249" endtime="20201029 09:34:27.562"></status>
</kw>
<msg timestamp="20201029 09:34:27.566" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 9.017021875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 9.017031778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:27.248" endtime="20201029 09:34:27.566"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:27.575" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 9.017021875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 9.017031778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:27.567" endtime="20201029 09:34:27.576"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:27.577" endtime="20201029 09:34:27.578"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:27.245" endtime="20201029 09:34:27.579"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:27.243" endtime="20201029 09:34:27.580"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:27.584" level="INFO">${RESULT} = [{'diff': 9.903000000477391e-06}, {'diff': 1.21939999999654e-05}, {'diff': 1.1610999999689398e-05}, {'diff': 6.736000001339448e-06}, {'diff': 1.0596999999279433e-05}, {'diff': 1.11940000007138e-05}, {...</msg>
<status status="PASS" starttime="20201029 09:34:27.580" endtime="20201029 09:34:27.584"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:27.589" level="INFO">${GPIO_OVERHEAD} = {'diff': [9.903000000477391e-06, 1.21939999999654e-05, 1.1610999999689398e-05, 6.736000001339448e-06, 1.0596999999279433e-05, 1.11940000007138e-05, 8.693999999920266e-06, 8.416000000011081e-06, 8.8609...</msg>
<status status="PASS" starttime="20201029 09:34:27.585" endtime="20201029 09:34:27.590"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:27.594" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:34:27.593" endtime="20201029 09:34:27.594"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:27.596" level="INFO">VALUE: [9.903000000477391e-06, 1.21939999999654e-05, 1.1610999999689398e-05, 6.736000001339448e-06, 1.0596999999279433e-05, 1.11940000007138e-05, 8.693999999920266e-06, 8.416000000011081e-06, 8.860999999527053e-06, 1.0097999998848195e-05, 8.707999999302274e-06, 9.777000000710245e-06, 8.333000000249058e-06, 9.957999999699041e-06, 8.722000000460639e-06, 8.860999999527053e-06, 1.095799999895064e-05, 1.0999999998873022e-05, 6.930999999710252e-06, 8.986999999294198e-06, 1.1430999999006985e-05, 7.34699999860311e-06, 8.388999999553448e-06, 7.23600000007707e-06, 8.098000000344996e-06, 5.778000000233874e-06, 8.041999999264249e-06, 5.528000000865063e-06, 1.0180000000303835e-05, 8.735999999842647e-06, 9.042000000292205e-06, 9.236000000356626e-06, 9.999999999621423e-06, 1.1320000000480945e-05, 7.791999999895438e-06, 7.749999999973056e-06, 7.847999999199828e-06, 7.48599999944588e-06, 7.444999999606239e-06, 6.347000001127867e-06, 1.041599999851428e-05, 1.1472000000622984e-05, 8.56900000023586e-06, 7.804999999194706e-06, 1.051399999951741e-05, 6.028000001379041e-06, 7.624999998512294e-06, 8.735999999842647e-06, 8.556000000936592e-06, 9.416999999345421e-06, 1.0874999999188617e-05, 9.584000000728565e-06, 9.401999999880672e-06, 8.721999998684282e-06, 9.278000000279008e-06, 1.0749999999504212e-05, 6.29100000004712e-06, 1.0556000001216148e-05, 8.985999999211458e-06, 9.874999999937017e-06, 8.152999999566646e-06, 6.806000000025847e-06, 1.0542000000057783e-05, 7.000000000090267e-06]</msg>
<status status="PASS" starttime="20201029 09:34:27.595" endtime="20201029 09:34:27.597"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:27.590" endtime="20201029 09:34:27.597"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:27.218" endtime="20201029 09:34:27.598"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:27.218" endtime="20201029 09:34:27.598"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:27.606" endtime="20201029 09:34:27.618"></status>
</kw>
<msg timestamp="20201029 09:34:27.618" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:27.604" endtime="20201029 09:34:27.618"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:27.620" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:27.619" endtime="20201029 09:34:27.621"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:27.622" endtime="20201029 09:34:27.623"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:27.602" endtime="20201029 09:34:27.624"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:27.600" endtime="20201029 09:34:27.624"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:27.630" endtime="20201029 09:34:27.946"></status>
</kw>
<msg timestamp="20201029 09:34:27.950" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 9.392530153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 9.392535931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:27.629" endtime="20201029 09:34:27.950"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:27.960" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 9.392530153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 9.392535931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:27.951" endtime="20201029 09:34:27.960"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:27.961" endtime="20201029 09:34:27.963"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:27.626" endtime="20201029 09:34:27.964"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:27.625" endtime="20201029 09:34:27.964"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:27.968" level="INFO">${RESULT} = [{'diff': 5.778000000233874e-06}, {'diff': 8.041999999264249e-06}, {'diff': 5.528000000865063e-06}, {'diff': 1.0180000000303835e-05}, {'diff': 8.735999999842647e-06}, {'diff': 9.042000000292205e-06}, ...</msg>
<status status="PASS" starttime="20201029 09:34:27.965" endtime="20201029 09:34:27.969"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:27.973" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.778000000233874e-06, 8.041999999264249e-06, 5.528000000865063e-06, 1.0180000000303835e-05, 8.735999999842647e-06, 9.042000000292205e-06, 9.236000000356626e-06, 9.999999999621423e-06, 1.132...</msg>
<status status="PASS" starttime="20201029 09:34:27.969" endtime="20201029 09:34:27.973"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:27.977" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:34:27.976" endtime="20201029 09:34:27.978"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:27.980" level="INFO">VALUE: [5.778000000233874e-06, 8.041999999264249e-06, 5.528000000865063e-06, 1.0180000000303835e-05, 8.735999999842647e-06, 9.042000000292205e-06, 9.236000000356626e-06, 9.999999999621423e-06, 1.1320000000480945e-05, 7.791999999895438e-06, 7.749999999973056e-06, 7.847999999199828e-06, 7.48599999944588e-06, 7.444999999606239e-06, 6.347000001127867e-06, 1.041599999851428e-05, 1.1472000000622984e-05, 8.56900000023586e-06, 7.804999999194706e-06, 1.051399999951741e-05, 6.028000001379041e-06, 7.624999998512294e-06, 8.735999999842647e-06, 8.556000000936592e-06, 9.416999999345421e-06, 1.0874999999188617e-05, 9.584000000728565e-06, 9.401999999880672e-06, 8.721999998684282e-06, 9.278000000279008e-06, 1.0749999999504212e-05, 6.29100000004712e-06, 1.0556000001216148e-05, 8.985999999211458e-06, 9.874999999937017e-06, 8.152999999566646e-06, 6.806000000025847e-06, 1.0542000000057783e-05, 7.000000000090267e-06, 7.388999998525492e-06, 1.0235999999608225e-05, 7.305999998763468e-06, 8.417000000093822e-06, 9.097999999596595e-06, 8.110999999644264e-06, 1.1569999999849756e-05, 1.0776999999961845e-05, 6.403000000432257e-06, 7.527999999368262e-06, 1.0709000001440927e-05, 1.105599999995377e-05, 7.208000001313053e-06, 8.860999999527053e-06, 6.264000001365844e-06, 9.16699999997661e-06, 9.361000000041031e-06, 8.347999999713807e-06, 8.695000000003006e-06, 1.0874999999188617e-05, 7.929999998879111e-06, 1.130599999932258e-05, 8.346999999631066e-06, 1.1597999998613773e-05, 8.167000000725011e-06]</msg>
<status status="PASS" starttime="20201029 09:34:27.978" endtime="20201029 09:34:27.980"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:27.974" endtime="20201029 09:34:27.981"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:27.599" endtime="20201029 09:34:27.981"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:27.598" endtime="20201029 09:34:27.981"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:20.372" endtime="20201029 09:34:27.982"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 09:34:17.253" endtime="20201029 09:34:27.982" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:27.989" endtime="20201029 09:34:28.008"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:27.987" endtime="20201029 09:34:28.009"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:28.023" endtime="20201029 09:34:31.045"></status>
</kw>
<msg timestamp="20201029 09:34:31.046" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:28.022" endtime="20201029 09:34:31.047"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:31.051" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:31.048" endtime="20201029 09:34:31.052"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:34:31.058" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:34:31.054" endtime="20201029 09:34:31.058"></status>
</kw>
<status status="FAIL" starttime="20201029 09:34:28.019" endtime="20201029 09:34:31.060"></status>
</kw>
<status status="FAIL" starttime="20201029 09:34:28.017" endtime="20201029 09:34:31.061"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:28.015" endtime="20201029 09:34:31.062"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:34:31.070" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:34:31.068" endtime="20201029 09:34:31.071"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:31.064" endtime="20201029 09:34:31.071"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:28.014" endtime="20201029 09:34:31.072"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:28.014" endtime="20201029 09:34:31.072"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:31.074" endtime="20201029 09:34:31.077"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:28.011" endtime="20201029 09:34:31.078"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:28.009" endtime="20201029 09:34:31.079"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:27.986" endtime="20201029 09:34:31.079"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:31.097" endtime="20201029 09:34:31.114"></status>
</kw>
<msg timestamp="20201029 09:34:31.114" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:31.094" endtime="20201029 09:34:31.115"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:31.120" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:31.117" endtime="20201029 09:34:31.120"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:31.122" endtime="20201029 09:34:31.123"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:31.088" endtime="20201029 09:34:31.124"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:31.085" endtime="20201029 09:34:31.124"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:31.132" endtime="20201029 09:34:31.424"></status>
</kw>
<msg timestamp="20201029 09:34:31.427" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.100347125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.100348667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:31.130" endtime="20201029 09:34:31.428"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:31.436" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.100347125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.100348667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:31.428" endtime="20201029 09:34:31.436"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:31.437" endtime="20201029 09:34:31.438"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:31.127" endtime="20201029 09:34:31.439"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:31.125" endtime="20201029 09:34:31.439"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:31.443" level="INFO">${RESULT} = [{'diff': 1.5420000001320489e-06}, {'diff': 1.5690000001455928e-06}, {'diff': 1.5829999999716904e-06}, {'diff': 1.6110000000679747e-06}, {'diff': 1.5559999999581464e-06}, {'diff': 1.554999999875406e-0...</msg>
<status status="PASS" starttime="20201029 09:34:31.440" endtime="20201029 09:34:31.444"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:31.448" level="INFO">${OVERHEAD} = {'diff': [1.5420000001320489e-06, 1.5690000001455928e-06, 1.5829999999716904e-06, 1.6110000000679747e-06, 1.5559999999581464e-06, 1.554999999875406e-06, 1.5410000000493085e-06, 1.5840000000544308e-06,...</msg>
<status status="PASS" starttime="20201029 09:34:31.444" endtime="20201029 09:34:31.448"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:31.452" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:34:31.451" endtime="20201029 09:34:31.452"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:31.454" level="INFO">VALUE: [1.5420000001320489e-06, 1.5690000001455928e-06, 1.5829999999716904e-06, 1.6110000000679747e-06, 1.5559999999581464e-06, 1.554999999875406e-06, 1.5410000000493085e-06, 1.5840000000544308e-06, 1.5410000000493085e-06, 1.5690000001455928e-06, 1.5559999999581464e-06, 1.554999999875406e-06, 1.5979999998805283e-06, 1.5700000002283332e-06, 1.5560000004022356e-06, 1.569999999784244e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.5420000001320489e-06, 1.500000000209667e-06, 1.5550000003194953e-06, 1.554999999875406e-06, 1.5420000001320489e-06, 1.5700000002283332e-06, 1.5559999999581464e-06, 1.5420000001320489e-06, 1.5700000002283332e-06, 1.5280000003059513e-06, 1.5559999999581464e-06, 1.5420000001320489e-06, 1.5690000001455928e-06, 1.5690000001455928e-06, 1.5700000002283332e-06, 1.554999999875406e-06, 1.5700000002283332e-06, 1.5700000002283332e-06, 1.554999999875406e-06, 1.5410000000493085e-06, 1.5979999998805283e-06, 1.5840000000544308e-06, 1.5550000003194953e-06, 1.5559999999581464e-06, 1.5560000004022356e-06, 1.596999999797788e-06, 1.5829999999716904e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.5409999996052193e-06, 1.569999999784244e-06, 1.569999999784244e-06]</msg>
<status status="PASS" starttime="20201029 09:34:31.453" endtime="20201029 09:34:31.455"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:31.448" endtime="20201029 09:34:31.456"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:31.082" endtime="20201029 09:34:31.456"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:31.081" endtime="20201029 09:34:31.456"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:31.465" endtime="20201029 09:34:31.476"></status>
</kw>
<msg timestamp="20201029 09:34:31.477" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:31.463" endtime="20201029 09:34:31.477"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:31.479" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:31.478" endtime="20201029 09:34:31.480"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:31.480" endtime="20201029 09:34:31.482"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:31.460" endtime="20201029 09:34:31.483"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:31.458" endtime="20201029 09:34:31.483"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:31.489" endtime="20201029 09:34:31.810"></status>
</kw>
<msg timestamp="20201029 09:34:31.814" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.100561667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.100563222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:31.488" endtime="20201029 09:34:31.814"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:31.823" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.100561667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.100563222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:31.815" endtime="20201029 09:34:31.824"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:31.825" endtime="20201029 09:34:31.826"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:31.485" endtime="20201029 09:34:31.827"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:31.484" endtime="20201029 09:34:31.827"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:31.832" level="INFO">${RESULT} = [{'diff': 1.554999999875406e-06}, {'diff': 1.5410000000493085e-06}, {'diff': 1.5979999998805283e-06}, {'diff': 1.5840000000544308e-06}, {'diff': 1.5550000003194953e-06}, {'diff': 1.5559999999581464e-0...</msg>
<status status="PASS" starttime="20201029 09:34:31.828" endtime="20201029 09:34:31.832"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:31.837" level="INFO">${OVERHEAD} = {'diff': [1.554999999875406e-06, 1.5410000000493085e-06, 1.5979999998805283e-06, 1.5840000000544308e-06, 1.5550000003194953e-06, 1.5559999999581464e-06, 1.5560000004022356e-06, 1.596999999797788e-06, ...</msg>
<status status="PASS" starttime="20201029 09:34:31.833" endtime="20201029 09:34:31.837"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:31.841" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:34:31.840" endtime="20201029 09:34:31.842"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:31.844" level="INFO">VALUE: [1.554999999875406e-06, 1.5410000000493085e-06, 1.5979999998805283e-06, 1.5840000000544308e-06, 1.5550000003194953e-06, 1.5559999999581464e-06, 1.5560000004022356e-06, 1.596999999797788e-06, 1.5829999999716904e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.5409999996052193e-06, 1.569999999784244e-06, 1.569999999784244e-06, 1.5559999999581464e-06, 1.5550000003194953e-06, 1.569999999784244e-06, 1.554999999875406e-06, 1.554999999875406e-06, 1.5420000001320489e-06, 1.5550000003194953e-06, 1.5559999999581464e-06, 1.5980000003246175e-06, 1.5690000001455928e-06, 1.554999999875406e-06, 1.639000000164259e-06, 1.5420000001320489e-06, 1.554999999875406e-06, 1.5840000000544308e-06, 1.5559999999581464e-06, 1.5690000001455928e-06, 1.5829999999716904e-06, 1.5559999999581464e-06, 1.5690000001455928e-06, 1.5829999999716904e-06, 1.5560000004022356e-06, 1.5979999998805283e-06, 1.5689999997015036e-06, 1.5559999999581464e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.5140000000357645e-06, 1.5689999997015036e-06, 1.5140000000357645e-06, 1.569999999784244e-06, 1.5559999999581464e-06, 1.596999999797788e-06, 1.5559999999581464e-06, 1.5560000004022356e-06, 1.5690000001455928e-06, 1.5410000000493085e-06, 1.5559999999581464e-06, 1.5420000001320489e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5689999997015036e-06, 1.554999999875406e-06, 1.5690000001455928e-06, 1.569999999784244e-06, 1.554999999875406e-06, 1.5550000003194953e-06, 1.5690000001455928e-06, 1.4999999997655777e-06]</msg>
<status status="PASS" starttime="20201029 09:34:31.842" endtime="20201029 09:34:31.845"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:31.838" endtime="20201029 09:34:31.845"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:31.457" endtime="20201029 09:34:31.846"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:31.456" endtime="20201029 09:34:31.846"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:31.854" endtime="20201029 09:34:31.865"></status>
</kw>
<msg timestamp="20201029 09:34:31.866" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:31.852" endtime="20201029 09:34:31.866"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:31.868" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:31.867" endtime="20201029 09:34:31.869"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:31.869" endtime="20201029 09:34:31.871"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:31.849" endtime="20201029 09:34:31.872"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:31.848" endtime="20201029 09:34:31.872"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:31.879" endtime="20201029 09:34:32.202"></status>
</kw>
<msg timestamp="20201029 09:34:32.206" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.456935431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.456936972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:31.877" endtime="20201029 09:34:32.206"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:32.216" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.456935431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.456936972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:32.207" endtime="20201029 09:34:32.217"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:32.217" endtime="20201029 09:34:32.219"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:31.874" endtime="20201029 09:34:32.219"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:31.873" endtime="20201029 09:34:32.220"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:32.225" level="INFO">${RESULT} = [{'diff': 1.5410000000493085e-06}, {'diff': 1.5559999999581464e-06}, {'diff': 1.5420000001320489e-06}, {'diff': 1.554999999875406e-06}, {'diff': 1.5559999999581464e-06}, {'diff': 1.5559999999581464e-0...</msg>
<status status="PASS" starttime="20201029 09:34:32.221" endtime="20201029 09:34:32.225"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:32.232" level="INFO">${OVERHEAD} = {'diff': [1.5410000000493085e-06, 1.5559999999581464e-06, 1.5420000001320489e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5689999997015036e-06, 1.554999999875406e-06, ...</msg>
<status status="PASS" starttime="20201029 09:34:32.226" endtime="20201029 09:34:32.232"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:32.236" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:34:32.235" endtime="20201029 09:34:32.236"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:32.239" level="INFO">VALUE: [1.5410000000493085e-06, 1.5559999999581464e-06, 1.5420000001320489e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5689999997015036e-06, 1.554999999875406e-06, 1.5690000001455928e-06, 1.569999999784244e-06, 1.554999999875406e-06, 1.5550000003194953e-06, 1.5690000001455928e-06, 1.4999999997655777e-06, 1.5559999999581464e-06, 1.5410000000493085e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5420000001320489e-06, 1.5420000001320489e-06, 1.554999999875406e-06, 1.5550000003194953e-06, 1.5420000001320489e-06, 1.569999999784244e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5840000000544308e-06, 1.5420000001320489e-06, 1.5559999999581464e-06, 1.5550000003194953e-06, 1.554999999875406e-06, 1.5550000003194953e-06, 1.569999999784244e-06, 1.5559999999581464e-06, 1.5140000000357645e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.554999999875406e-06, 1.5689999997015036e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.569999999784244e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5690000001455928e-06, 1.5410000000493085e-06, 1.5550000003194953e-06, 1.5559999999581464e-06, 1.5419999996879596e-06, 1.5840000000544308e-06, 1.5829999999716904e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.5690000001455928e-06, 1.5559999999581464e-06, 1.5700000002283332e-06, 1.5840000000544308e-06, 1.5559999999581464e-06, 1.5979999998805283e-06, 1.5410000000493085e-06, 1.554999999875406e-06, 1.5690000001455928e-06]</msg>
<status status="PASS" starttime="20201029 09:34:32.237" endtime="20201029 09:34:32.239"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:32.233" endtime="20201029 09:34:32.240"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:31.846" endtime="20201029 09:34:32.240"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:31.846" endtime="20201029 09:34:32.241"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:32.248" endtime="20201029 09:34:32.259"></status>
</kw>
<msg timestamp="20201029 09:34:32.260" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:32.247" endtime="20201029 09:34:32.260"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:32.262" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:32.261" endtime="20201029 09:34:32.263"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:32.263" endtime="20201029 09:34:32.265"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:32.244" endtime="20201029 09:34:32.265"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:32.243" endtime="20201029 09:34:32.266"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:32.272" endtime="20201029 09:34:32.588"></status>
</kw>
<msg timestamp="20201029 09:34:32.592" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.836521486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.836523028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:32.271" endtime="20201029 09:34:32.592"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:32.601" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.836521486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.836523028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:32.593" endtime="20201029 09:34:32.602"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:32.603" endtime="20201029 09:34:32.604"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:32.268" endtime="20201029 09:34:32.605"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:32.266" endtime="20201029 09:34:32.605"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:32.610" level="INFO">${RESULT} = [{'diff': 1.5419999996879596e-06}, {'diff': 1.5840000000544308e-06}, {'diff': 1.5829999999716904e-06}, {'diff': 1.554999999875406e-06}, {'diff': 1.5559999999581464e-06}, {'diff': 1.5690000001455928e-0...</msg>
<status status="PASS" starttime="20201029 09:34:32.606" endtime="20201029 09:34:32.610"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:32.614" level="INFO">${OVERHEAD} = {'diff': [1.5419999996879596e-06, 1.5840000000544308e-06, 1.5829999999716904e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.5690000001455928e-06, 1.5559999999581464e-06, 1.5700000002283332e-06,...</msg>
<status status="PASS" starttime="20201029 09:34:32.611" endtime="20201029 09:34:32.615"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:32.618" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:34:32.617" endtime="20201029 09:34:32.619"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:32.621" level="INFO">VALUE: [1.5419999996879596e-06, 1.5840000000544308e-06, 1.5829999999716904e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.5690000001455928e-06, 1.5559999999581464e-06, 1.5700000002283332e-06, 1.5840000000544308e-06, 1.5559999999581464e-06, 1.5979999998805283e-06, 1.5410000000493085e-06, 1.554999999875406e-06, 1.5690000001455928e-06, 1.5690000001455928e-06, 1.5700000002283332e-06, 1.5699999993401548e-06, 1.554999999875406e-06, 1.5409999996052193e-06, 1.5559999999581464e-06, 1.5700000002283332e-06, 1.5700000002283332e-06, 1.5550000007635845e-06, 1.5690000001455928e-06, 1.596999999797788e-06, 1.5559999999581464e-06, 1.5409999996052193e-06, 1.5559999999581464e-06, 1.554999999875406e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.554999999875406e-06, 1.5839999996103415e-06, 1.554999999875406e-06, 1.5689999992574144e-06, 1.5700000002283332e-06, 1.5410000004933977e-06, 1.5690000001455928e-06, 1.527000000223211e-06, 1.5559999999581464e-06, 1.5410000004933977e-06, 1.5560000008463248e-06, 1.5690000001455928e-06, 1.4999999997655777e-06, 1.5279999994177729e-06, 1.5559999999581464e-06, 1.554999999875406e-06, 1.5280000003059513e-06, 1.5690000001455928e-06, 1.5690000001455928e-06, 1.554999999875406e-06, 1.5690000001455928e-06, 1.554999999875406e-06, 1.554999999875406e-06, 1.554999999875406e-06, 1.554999999875406e-06, 1.5550000007635845e-06, 1.5700000002283332e-06, 1.5559999999581464e-06, 1.554999999875406e-06, 1.542000000576138e-06, 1.5559999999581464e-06, 1.5700000002283332e-06, 1.554999999875406e-06]</msg>
<status status="PASS" starttime="20201029 09:34:32.619" endtime="20201029 09:34:32.622"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:32.615" endtime="20201029 09:34:32.622"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:32.241" endtime="20201029 09:34:32.623"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:32.241" endtime="20201029 09:34:32.623"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:32.632" endtime="20201029 09:34:32.644"></status>
</kw>
<msg timestamp="20201029 09:34:32.644" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:32.630" endtime="20201029 09:34:32.644"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:32.647" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:32.645" endtime="20201029 09:34:32.647"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:32.648" endtime="20201029 09:34:32.649"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:32.627" endtime="20201029 09:34:32.650"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:32.625" endtime="20201029 09:34:32.650"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:32.657" endtime="20201029 09:34:32.979"></status>
</kw>
<msg timestamp="20201029 09:34:32.983" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.221322681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.221324236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:32.655" endtime="20201029 09:34:32.983"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:32.993" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.221322681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.221324236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:32.984" endtime="20201029 09:34:32.993"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:32.994" endtime="20201029 09:34:32.996"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:32.653" endtime="20201029 09:34:32.996"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:32.651" endtime="20201029 09:34:32.997"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:33.001" level="INFO">${RESULT} = [{'diff': 1.554999999875406e-06}, {'diff': 1.5690000001455928e-06}, {'diff': 1.554999999875406e-06}, {'diff': 1.554999999875406e-06}, {'diff': 1.554999999875406e-06}, {'diff': 1.554999999875406e-06}, ...</msg>
<status status="PASS" starttime="20201029 09:34:32.998" endtime="20201029 09:34:33.002"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:33.007" level="INFO">${OVERHEAD} = {'diff': [1.554999999875406e-06, 1.5690000001455928e-06, 1.554999999875406e-06, 1.554999999875406e-06, 1.554999999875406e-06, 1.554999999875406e-06, 1.5550000007635845e-06, 1.5700000002283332e-06, 1.5...</msg>
<status status="PASS" starttime="20201029 09:34:33.003" endtime="20201029 09:34:33.007"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:33.011" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:34:33.010" endtime="20201029 09:34:33.012"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:33.014" level="INFO">VALUE: [1.554999999875406e-06, 1.5690000001455928e-06, 1.554999999875406e-06, 1.554999999875406e-06, 1.554999999875406e-06, 1.554999999875406e-06, 1.5550000007635845e-06, 1.5700000002283332e-06, 1.5559999999581464e-06, 1.554999999875406e-06, 1.542000000576138e-06, 1.5559999999581464e-06, 1.5700000002283332e-06, 1.554999999875406e-06, 1.596999999797788e-06, 1.554999999875406e-06, 1.5690000001455928e-06, 1.5140000000357645e-06, 1.5690000001455928e-06, 1.5550000007635845e-06, 1.554999999875406e-06, 1.5409999996052193e-06, 1.5690000001455928e-06, 1.5419999996879596e-06, 1.5550000007635845e-06, 1.554999999875406e-06, 1.5690000001455928e-06, 1.596999999797788e-06, 1.5830000004157796e-06, 1.554999999875406e-06, 1.5690000001455928e-06, 1.5419999996879596e-06, 1.5699999993401548e-06, 1.5559999999581464e-06, 1.5700000002283332e-06, 1.5129999999530241e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.5409999996052193e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.5690000001455928e-06, 1.5559999999581464e-06, 1.5269999993350325e-06, 1.554999999875406e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.5410000004933977e-06, 1.5559999999581464e-06, 1.554999999875406e-06, 1.5140000000357645e-06, 1.554999999875406e-06, 1.5700000002283332e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5700000002283332e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5560000008463248e-06, 1.554999999875406e-06, 1.5700000002283332e-06, 1.5559999999581464e-06, 1.5700000002283332e-06, 1.5419999996879596e-06]</msg>
<status status="PASS" starttime="20201029 09:34:33.012" endtime="20201029 09:34:33.015"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:33.008" endtime="20201029 09:34:33.015"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:32.624" endtime="20201029 09:34:33.016"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:32.623" endtime="20201029 09:34:33.016"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:33.024" endtime="20201029 09:34:33.037"></status>
</kw>
<msg timestamp="20201029 09:34:33.037" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:33.022" endtime="20201029 09:34:33.037"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:33.039" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:33.038" endtime="20201029 09:34:33.040"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:33.040" endtime="20201029 09:34:33.042"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:33.019" endtime="20201029 09:34:33.043"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:33.018" endtime="20201029 09:34:33.043"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:33.049" endtime="20201029 09:34:33.364"></status>
</kw>
<msg timestamp="20201029 09:34:33.368" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.595528819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.595530333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:33.048" endtime="20201029 09:34:33.368"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:33.378" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.595528819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.595530333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:33.369" endtime="20201029 09:34:33.378"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:33.379" endtime="20201029 09:34:33.381"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:33.045" endtime="20201029 09:34:33.381"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:33.044" endtime="20201029 09:34:33.382"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:33.386" level="INFO">${RESULT} = [{'diff': 1.5140000000357645e-06}, {'diff': 1.554999999875406e-06}, {'diff': 1.5700000002283332e-06}, {'diff': 1.5419999996879596e-06}, {'diff': 1.5419999996879596e-06}, {'diff': 1.5700000002283332e-0...</msg>
<status status="PASS" starttime="20201029 09:34:33.383" endtime="20201029 09:34:33.386"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:33.392" level="INFO">${OVERHEAD} = {'diff': [1.5140000000357645e-06, 1.554999999875406e-06, 1.5700000002283332e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5700000002283332e-06, 1.5559999999581464e-06, 1.5559999999581464e-06,...</msg>
<status status="PASS" starttime="20201029 09:34:33.387" endtime="20201029 09:34:33.392"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:33.396" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:34:33.395" endtime="20201029 09:34:33.396"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:33.398" level="INFO">VALUE: [1.5140000000357645e-06, 1.554999999875406e-06, 1.5700000002283332e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5700000002283332e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5560000008463248e-06, 1.554999999875406e-06, 1.5700000002283332e-06, 1.5559999999581464e-06, 1.5700000002283332e-06, 1.5419999996879596e-06, 1.5409999996052193e-06, 1.5559999999581464e-06, 1.5690000001455928e-06, 1.5559999999581464e-06, 1.5690000001455928e-06, 1.554999999875406e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.554999999875406e-06, 1.5279999994177729e-06, 1.596999999797788e-06, 1.5140000000357645e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5690000001455928e-06, 1.5700000002283332e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.5700000002283332e-06, 1.5559999999581464e-06, 1.5699999993401548e-06, 1.5559999999581464e-06, 1.5690000001455928e-06, 1.5560000008463248e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.5560000008463248e-06, 1.554999999875406e-06, 1.542000000576138e-06, 1.554999999875406e-06, 1.554999999875406e-06, 1.5140000000357645e-06, 1.542000000576138e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.554999999875406e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.554999999875406e-06, 1.58400000049852e-06, 1.5690000001455928e-06, 1.513999999147586e-06, 1.554999999875406e-06, 1.5419999996879596e-06, 1.5559999999581464e-06, 1.5550000007635845e-06, 1.5419999996879596e-06, 1.5700000002283332e-06, 1.5559999999581464e-06]</msg>
<status status="PASS" starttime="20201029 09:34:33.397" endtime="20201029 09:34:33.399"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:33.393" endtime="20201029 09:34:33.400"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:33.017" endtime="20201029 09:34:33.400"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:33.016" endtime="20201029 09:34:33.400"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:33.408" endtime="20201029 09:34:33.421"></status>
</kw>
<msg timestamp="20201029 09:34:33.421" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:33.407" endtime="20201029 09:34:33.421"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:33.424" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:33.422" endtime="20201029 09:34:33.424"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:33.425" endtime="20201029 09:34:33.426"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:33.404" endtime="20201029 09:34:33.427"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:33.402" endtime="20201029 09:34:33.427"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:33.435" endtime="20201029 09:34:33.749"></status>
</kw>
<msg timestamp="20201029 09:34:33.753" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.975824889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.975826444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:33.432" endtime="20201029 09:34:33.753"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:33.763" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.975824889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.975826444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:33.754" endtime="20201029 09:34:33.763"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:33.764" endtime="20201029 09:34:33.766"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:33.430" endtime="20201029 09:34:33.766"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:33.428" endtime="20201029 09:34:33.767"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:33.771" level="INFO">${RESULT} = [{'diff': 1.554999999875406e-06}, {'diff': 1.554999999875406e-06}, {'diff': 1.5559999999581464e-06}, {'diff': 1.554999999875406e-06}, {'diff': 1.58400000049852e-06}, {'diff': 1.5690000001455928e-06}, ...</msg>
<status status="PASS" starttime="20201029 09:34:33.767" endtime="20201029 09:34:33.771"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:33.776" level="INFO">${OVERHEAD} = {'diff': [1.554999999875406e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.554999999875406e-06, 1.58400000049852e-06, 1.5690000001455928e-06, 1.513999999147586e-06, 1.554999999875406e-06, 1.541...</msg>
<status status="PASS" starttime="20201029 09:34:33.772" endtime="20201029 09:34:33.776"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:33.780" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:34:33.779" endtime="20201029 09:34:33.780"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:33.782" level="INFO">VALUE: [1.554999999875406e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.554999999875406e-06, 1.58400000049852e-06, 1.5690000001455928e-06, 1.513999999147586e-06, 1.554999999875406e-06, 1.5419999996879596e-06, 1.5559999999581464e-06, 1.5550000007635845e-06, 1.5419999996879596e-06, 1.5700000002283332e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5690000001455928e-06, 1.5559999999581464e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.5560000008463248e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5140000000357645e-06, 1.5559999999581464e-06, 1.5700000002283332e-06, 1.554999999875406e-06, 1.596999999797788e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5699999993401548e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.596999999797788e-06, 1.5700000002283332e-06, 1.5979999998805283e-06, 1.5830000004157796e-06, 1.5419999996879596e-06, 1.5690000001455928e-06, 1.5700000002283332e-06, 1.5699999993401548e-06, 1.5419999996879596e-06, 1.5280000003059513e-06, 1.5550000007635845e-06, 1.5700000002283332e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.5690000001455928e-06, 1.5559999999581464e-06, 1.554999999875406e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5690000001455928e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5690000001455928e-06, 1.5839999996103415e-06, 1.554999999875406e-06, 1.5409999996052193e-06, 1.5690000001455928e-06, 1.554999999875406e-06, 1.5700000002283332e-06]</msg>
<status status="PASS" starttime="20201029 09:34:33.781" endtime="20201029 09:34:33.783"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:33.776" endtime="20201029 09:34:33.784"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:33.401" endtime="20201029 09:34:33.784"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:33.401" endtime="20201029 09:34:33.784"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:33.793" endtime="20201029 09:34:33.805"></status>
</kw>
<msg timestamp="20201029 09:34:33.806" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:33.791" endtime="20201029 09:34:33.806"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:33.808" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:33.807" endtime="20201029 09:34:33.808"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:33.809" endtime="20201029 09:34:33.811"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:33.789" endtime="20201029 09:34:33.811"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:33.786" endtime="20201029 09:34:33.812"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:33.818" endtime="20201029 09:34:34.139"></status>
</kw>
<msg timestamp="20201029 09:34:34.143" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.350421139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.350422694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:33.817" endtime="20201029 09:34:34.143"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:34.153" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.350421139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.350422694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:34.144" endtime="20201029 09:34:34.153"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:34.154" endtime="20201029 09:34:34.156"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:33.814" endtime="20201029 09:34:34.156"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:33.812" endtime="20201029 09:34:34.157"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:34.161" level="INFO">${RESULT} = [{'diff': 1.554999999875406e-06}, {'diff': 1.5559999999581464e-06}, {'diff': 1.5559999999581464e-06}, {'diff': 1.5690000001455928e-06}, {'diff': 1.5559999999581464e-06}, {'diff': 1.5559999999581464e-0...</msg>
<status status="PASS" starttime="20201029 09:34:34.157" endtime="20201029 09:34:34.161"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:34.166" level="INFO">${OVERHEAD} = {'diff': [1.554999999875406e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5690000001455928e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5690000001455928e-06,...</msg>
<status status="PASS" starttime="20201029 09:34:34.162" endtime="20201029 09:34:34.166"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:34.170" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:34:34.169" endtime="20201029 09:34:34.171"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:34.173" level="INFO">VALUE: [1.554999999875406e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5690000001455928e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5690000001455928e-06, 1.5839999996103415e-06, 1.554999999875406e-06, 1.5409999996052193e-06, 1.5690000001455928e-06, 1.554999999875406e-06, 1.5700000002283332e-06, 1.5689999992574144e-06, 1.5839999996103415e-06, 1.5129999999530241e-06, 1.5690000001455928e-06, 1.5000000006537562e-06, 1.5409999996052193e-06, 1.5690000001455928e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5419999996879596e-06, 1.5409999996052193e-06, 1.5689999992574144e-06, 1.596999999797788e-06, 1.5559999999581464e-06, 1.554999999875406e-06, 1.5690000001455928e-06, 1.5689999992574144e-06, 1.5559999999581464e-06, 1.596999999797788e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5699999993401548e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5699999993401548e-06, 1.5700000002283332e-06, 1.5830000004157796e-06, 1.5550000007635845e-06, 1.5829999995276012e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5979999998805283e-06, 1.5690000001455928e-06, 1.5550000007635845e-06, 1.5559999999581464e-06, 1.5970000006859664e-06, 1.5559999999581464e-06, 1.5690000001455928e-06, 1.5559999999581464e-06, 1.542000000576138e-06, 1.5280000003059513e-06, 1.5559999999581464e-06, 1.5690000001455928e-06, 1.5839999996103415e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.554999999875406e-06]</msg>
<status status="PASS" starttime="20201029 09:34:34.171" endtime="20201029 09:34:34.174"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:34.167" endtime="20201029 09:34:34.174"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:33.785" endtime="20201029 09:34:34.175"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:33.784" endtime="20201029 09:34:34.175"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:34.183" endtime="20201029 09:34:34.195"></status>
</kw>
<msg timestamp="20201029 09:34:34.196" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:34.181" endtime="20201029 09:34:34.196"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:34.198" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:34.197" endtime="20201029 09:34:34.198"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:34.199" endtime="20201029 09:34:34.201"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:34.179" endtime="20201029 09:34:34.201"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:34.177" endtime="20201029 09:34:34.202"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:34.208" endtime="20201029 09:34:34.523"></status>
</kw>
<msg timestamp="20201029 09:34:34.527" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.723291569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.723293125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:34.207" endtime="20201029 09:34:34.527"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:34.537" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.723291569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.723293125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:34.528" endtime="20201029 09:34:34.537"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:34.538" endtime="20201029 09:34:34.540"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:34.204" endtime="20201029 09:34:34.540"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:34.202" endtime="20201029 09:34:34.541"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:34.546" level="INFO">${RESULT} = [{'diff': 1.5559999999581464e-06}, {'diff': 1.5970000006859664e-06}, {'diff': 1.5559999999581464e-06}, {'diff': 1.5690000001455928e-06}, {'diff': 1.5559999999581464e-06}, {'diff': 1.542000000576138e-0...</msg>
<status status="PASS" starttime="20201029 09:34:34.541" endtime="20201029 09:34:34.546"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:34.551" level="INFO">${OVERHEAD} = {'diff': [1.5559999999581464e-06, 1.5970000006859664e-06, 1.5559999999581464e-06, 1.5690000001455928e-06, 1.5559999999581464e-06, 1.542000000576138e-06, 1.5280000003059513e-06, 1.5559999999581464e-06,...</msg>
<status status="PASS" starttime="20201029 09:34:34.547" endtime="20201029 09:34:34.551"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:34.555" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:34:34.554" endtime="20201029 09:34:34.555"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:34.557" level="INFO">VALUE: [1.5559999999581464e-06, 1.5970000006859664e-06, 1.5559999999581464e-06, 1.5690000001455928e-06, 1.5559999999581464e-06, 1.542000000576138e-06, 1.5280000003059513e-06, 1.5559999999581464e-06, 1.5690000001455928e-06, 1.5839999996103415e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.554999999875406e-06, 1.6110000000679747e-06, 1.5700000002283332e-06, 1.5279999994177729e-06, 1.554999999875406e-06, 1.5700000002283332e-06, 1.5700000002283332e-06, 1.554999999875406e-06, 1.554999999875406e-06, 1.5839999996103415e-06, 1.5559999999581464e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.4999999997655777e-06, 1.554999999875406e-06, 1.554999999875406e-06, 1.5690000001455928e-06, 1.5700000002283332e-06, 1.5690000001455928e-06, 1.5690000001455928e-06, 1.5700000002283332e-06, 1.5550000007635845e-06, 1.5559999999581464e-06, 1.5690000001455928e-06, 1.554999999875406e-06, 1.5419999996879596e-06, 1.5689999992574144e-06, 1.5970000006859664e-06, 1.5559999999581464e-06, 1.5690000001455928e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5279999994177729e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5419999996879596e-06, 1.5559999999581464e-06, 1.5279999994177729e-06, 1.4860000003835694e-06, 1.5690000001455928e-06, 1.5700000002283332e-06, 1.5700000002283332e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.596999999797788e-06, 1.5690000001455928e-06, 1.5699999993401548e-06, 1.5690000001455928e-06, 1.5690000001455928e-06, 1.596999999797788e-06, 1.554999999875406e-06]</msg>
<status status="PASS" starttime="20201029 09:34:34.556" endtime="20201029 09:34:34.558"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:34.552" endtime="20201029 09:34:34.559"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:34.176" endtime="20201029 09:34:34.559"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:34.175" endtime="20201029 09:34:34.559"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:34.567" endtime="20201029 09:34:34.580"></status>
</kw>
<msg timestamp="20201029 09:34:34.581" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:34.566" endtime="20201029 09:34:34.581"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:34.583" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:34.582" endtime="20201029 09:34:34.584"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:34.584" endtime="20201029 09:34:34.586"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:34.563" endtime="20201029 09:34:34.587"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:34.561" endtime="20201029 09:34:34.587"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:34.594" endtime="20201029 09:34:34.913"></status>
</kw>
<msg timestamp="20201029 09:34:34.917" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.102777028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.102778556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:34.593" endtime="20201029 09:34:34.917"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:34.927" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.102777028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.102778556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:34.918" endtime="20201029 09:34:34.927"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:34.928" endtime="20201029 09:34:34.930"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:34.589" endtime="20201029 09:34:34.930"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:34.588" endtime="20201029 09:34:34.931"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:34.935" level="INFO">${RESULT} = [{'diff': 1.5279999994177729e-06}, {'diff': 1.4860000003835694e-06}, {'diff': 1.5690000001455928e-06}, {'diff': 1.5700000002283332e-06}, {'diff': 1.5700000002283332e-06}, {'diff': 1.5559999999581464e-...</msg>
<status status="PASS" starttime="20201029 09:34:34.931" endtime="20201029 09:34:34.935"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:34.940" level="INFO">${OVERHEAD} = {'diff': [1.5279999994177729e-06, 1.4860000003835694e-06, 1.5690000001455928e-06, 1.5700000002283332e-06, 1.5700000002283332e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.596999999797788e-06,...</msg>
<status status="PASS" starttime="20201029 09:34:34.936" endtime="20201029 09:34:34.940"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:34.945" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:34:34.943" endtime="20201029 09:34:34.945"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:34.948" level="INFO">VALUE: [1.5279999994177729e-06, 1.4860000003835694e-06, 1.5690000001455928e-06, 1.5700000002283332e-06, 1.5700000002283332e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.596999999797788e-06, 1.5690000001455928e-06, 1.5699999993401548e-06, 1.5690000001455928e-06, 1.5690000001455928e-06, 1.596999999797788e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.5839999996103415e-06, 1.5559999999581464e-06, 1.5560000008463248e-06, 1.5700000002283332e-06, 1.5559999999581464e-06, 1.5839999996103415e-06, 1.5550000007635845e-06, 1.5700000002283332e-06, 1.5419999996879596e-06, 1.5559999999581464e-06, 1.5690000001455928e-06, 1.5690000001455928e-06, 1.5550000007635845e-06, 1.554999999875406e-06, 1.554999999875406e-06, 1.542000000576138e-06, 1.5419999996879596e-06, 1.5409999996052193e-06, 1.5690000001455928e-06, 1.5280000003059513e-06, 1.542000000576138e-06, 1.5560000008463248e-06, 1.5700000002283332e-06, 1.5559999999581464e-06, 1.554999999875406e-06, 1.554999999875406e-06, 1.5970000006859664e-06, 1.554999999875406e-06, 1.5409999996052193e-06, 1.5419999996879596e-06, 1.554999999875406e-06, 1.5279999994177729e-06, 1.5829999995276012e-06, 1.5690000001455928e-06, 1.554999999875406e-06, 1.554999999875406e-06, 1.5690000001455928e-06, 1.5419999996879596e-06, 1.5689999992574144e-06, 1.5559999999581464e-06, 1.58400000049852e-06, 1.5690000001455928e-06, 1.5280000003059513e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.554999999875406e-06, 1.5700000002283332e-06, 1.5140000000357645e-06, 1.5700000002283332e-06]</msg>
<status status="PASS" starttime="20201029 09:34:34.946" endtime="20201029 09:34:34.949"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:34.941" endtime="20201029 09:34:34.949"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:34.560" endtime="20201029 09:34:34.950"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:34.560" endtime="20201029 09:34:34.950"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:34.958" endtime="20201029 09:34:34.970"></status>
</kw>
<msg timestamp="20201029 09:34:34.970" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:34.956" endtime="20201029 09:34:34.970"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:34.973" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:34.971" endtime="20201029 09:34:34.973"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:34.974" endtime="20201029 09:34:34.976"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:34.954" endtime="20201029 09:34:34.976"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:34.952" endtime="20201029 09:34:34.977"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:34.984" endtime="20201029 09:34:35.307"></status>
</kw>
<msg timestamp="20201029 09:34:35.311" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.475827917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.475829472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:34.982" endtime="20201029 09:34:35.311"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:35.321" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.475827917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.475829472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:35.312" endtime="20201029 09:34:35.321"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:35.322" endtime="20201029 09:34:35.324"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:34.979" endtime="20201029 09:34:35.324"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:34.977" endtime="20201029 09:34:35.324"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:35.329" level="INFO">${RESULT} = [{'diff': 1.554999999875406e-06}, {'diff': 1.5690000001455928e-06}, {'diff': 1.5419999996879596e-06}, {'diff': 1.5689999992574144e-06}, {'diff': 1.5559999999581464e-06}, {'diff': 1.58400000049852e-06}...</msg>
<status status="PASS" starttime="20201029 09:34:35.325" endtime="20201029 09:34:35.329"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:35.334" level="INFO">${OVERHEAD} = {'diff': [1.554999999875406e-06, 1.5690000001455928e-06, 1.5419999996879596e-06, 1.5689999992574144e-06, 1.5559999999581464e-06, 1.58400000049852e-06, 1.5690000001455928e-06, 1.5280000003059513e-06, 1...</msg>
<status status="PASS" starttime="20201029 09:34:35.330" endtime="20201029 09:34:35.335"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:35.338" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:34:35.337" endtime="20201029 09:34:35.339"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:35.341" level="INFO">VALUE: [1.554999999875406e-06, 1.5690000001455928e-06, 1.5419999996879596e-06, 1.5689999992574144e-06, 1.5559999999581464e-06, 1.58400000049852e-06, 1.5690000001455928e-06, 1.5280000003059513e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.554999999875406e-06, 1.5700000002283332e-06, 1.5140000000357645e-06, 1.5700000002283332e-06, 1.5839999996103415e-06, 1.5690000001455928e-06, 1.5559999999581464e-06, 1.5690000001455928e-06, 1.4999999997655777e-06, 1.5559999999581464e-06, 1.5690000001455928e-06, 1.554999999875406e-06, 1.6529999999903566e-06, 1.5559999999581464e-06, 1.5699999993401548e-06, 1.5830000004157796e-06, 1.5690000001455928e-06, 1.5550000007635845e-06, 1.5280000003059513e-06, 1.5700000002283332e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5690000001455928e-06, 1.5559999999581464e-06, 1.5140000000357645e-06, 1.5839999996103415e-06, 1.5690000001455928e-06, 1.5689999992574144e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.5419999996879596e-06, 1.5700000002283332e-06, 1.5690000001455928e-06, 1.554999999875406e-06, 1.5700000002283332e-06, 1.5690000001455928e-06, 1.5690000001455928e-06, 1.5559999999581464e-06, 1.5979999998805283e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.554999999875406e-06, 1.596999999797788e-06, 1.5829999995276012e-06, 1.554999999875406e-06, 1.5419999996879596e-06, 1.5559999999581464e-06, 1.554999999875406e-06, 1.5419999996879596e-06]</msg>
<status status="PASS" starttime="20201029 09:34:35.340" endtime="20201029 09:34:35.347"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:35.335" endtime="20201029 09:34:35.348"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:34.951" endtime="20201029 09:34:35.348"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:34.950" endtime="20201029 09:34:35.348"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:35.356" endtime="20201029 09:34:35.370"></status>
</kw>
<msg timestamp="20201029 09:34:35.371" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:35.354" endtime="20201029 09:34:35.372"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:35.376" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:35.373" endtime="20201029 09:34:35.377"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:35.379" endtime="20201029 09:34:35.382"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:35.352" endtime="20201029 09:34:35.383"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:35.350" endtime="20201029 09:34:35.384"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:35.397" endtime="20201029 09:34:35.713"></status>
</kw>
<msg timestamp="20201029 09:34:35.717" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.856599986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.856601542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:35.394" endtime="20201029 09:34:35.717"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:35.727" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.856599986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.856601542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:35.718" endtime="20201029 09:34:35.727"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:35.728" endtime="20201029 09:34:35.730"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:35.389" endtime="20201029 09:34:35.730"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:35.385" endtime="20201029 09:34:35.731"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:35.735" level="INFO">${RESULT} = [{'diff': 1.5559999999581464e-06}, {'diff': 1.5979999998805283e-06}, {'diff': 1.5559999999581464e-06}, {'diff': 1.5559999999581464e-06}, {'diff': 1.5559999999581464e-06}, {'diff': 1.5559999999581464e-...</msg>
<status status="PASS" starttime="20201029 09:34:35.732" endtime="20201029 09:34:35.735"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:35.740" level="INFO">${OVERHEAD} = {'diff': [1.5559999999581464e-06, 1.5979999998805283e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.554999999875406e-06, 1.596999999797788e-06, ...</msg>
<status status="PASS" starttime="20201029 09:34:35.736" endtime="20201029 09:34:35.740"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:35.744" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:34:35.743" endtime="20201029 09:34:35.744"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:35.747" level="INFO">VALUE: [1.5559999999581464e-06, 1.5979999998805283e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.554999999875406e-06, 1.596999999797788e-06, 1.5829999995276012e-06, 1.554999999875406e-06, 1.5419999996879596e-06, 1.5559999999581464e-06, 1.554999999875406e-06, 1.5419999996879596e-06, 1.5559999999581464e-06, 1.554999999875406e-06, 1.5829999995276012e-06, 1.5559999999581464e-06, 1.5419999996879596e-06, 1.5559999999581464e-06, 1.5410000004933977e-06, 1.554999999875406e-06, 1.5689999992574144e-06, 1.5829999995276012e-06, 1.542000000576138e-06, 1.5699999993401548e-06, 1.485999999495391e-06, 1.5560000008463248e-06, 1.554999999875406e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.5700000002283332e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.527000000223211e-06, 1.5559999999581464e-06, 1.5690000001455928e-06, 1.5410000004933977e-06, 1.554999999875406e-06, 1.5409999996052193e-06, 1.554999999875406e-06, 1.554999999875406e-06, 1.5700000002283332e-06, 1.5550000007635845e-06, 1.6389999997201699e-06, 1.5690000001455928e-06, 1.5560000008463248e-06, 1.5700000002283332e-06, 1.554999999875406e-06, 1.5690000001455928e-06, 1.5700000002283332e-06, 1.554999999875406e-06, 1.5690000001455928e-06, 1.5700000002283332e-06, 1.542000000576138e-06, 1.4999999997655777e-06, 1.485999999495391e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5979999998805283e-06, 1.5690000001455928e-06, 1.5559999999581464e-06]</msg>
<status status="PASS" starttime="20201029 09:34:35.745" endtime="20201029 09:34:35.747"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:35.741" endtime="20201029 09:34:35.748"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:35.349" endtime="20201029 09:34:35.748"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:35.348" endtime="20201029 09:34:35.748"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:35.757" endtime="20201029 09:34:35.769"></status>
</kw>
<msg timestamp="20201029 09:34:35.770" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:35.755" endtime="20201029 09:34:35.770"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:35.772" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:35.771" endtime="20201029 09:34:35.773"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:35.773" endtime="20201029 09:34:35.775"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:35.752" endtime="20201029 09:34:35.776"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:35.750" endtime="20201029 09:34:35.776"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:35.783" endtime="20201029 09:34:36.099"></status>
</kw>
<msg timestamp="20201029 09:34:36.104" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.243757444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.243759014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:35.781" endtime="20201029 09:34:36.104"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:36.115" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.243757444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.243759014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:36.105" endtime="20201029 09:34:36.115"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:36.116" endtime="20201029 09:34:36.118"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:35.778" endtime="20201029 09:34:36.119"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:35.777" endtime="20201029 09:34:36.119"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:36.125" level="INFO">${RESULT} = [{'diff': 1.5700000002283332e-06}, {'diff': 1.554999999875406e-06}, {'diff': 1.5690000001455928e-06}, {'diff': 1.5700000002283332e-06}, {'diff': 1.542000000576138e-06}, {'diff': 1.4999999997655777e-06...</msg>
<status status="PASS" starttime="20201029 09:34:36.120" endtime="20201029 09:34:36.125"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:36.130" level="INFO">${OVERHEAD} = {'diff': [1.5700000002283332e-06, 1.554999999875406e-06, 1.5690000001455928e-06, 1.5700000002283332e-06, 1.542000000576138e-06, 1.4999999997655777e-06, 1.485999999495391e-06, 1.554999999875406e-06, 1....</msg>
<status status="PASS" starttime="20201029 09:34:36.126" endtime="20201029 09:34:36.130"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:36.134" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:34:36.133" endtime="20201029 09:34:36.135"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:36.137" level="INFO">VALUE: [1.5700000002283332e-06, 1.554999999875406e-06, 1.5690000001455928e-06, 1.5700000002283332e-06, 1.542000000576138e-06, 1.4999999997655777e-06, 1.485999999495391e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5979999998805283e-06, 1.5690000001455928e-06, 1.5559999999581464e-06, 1.5410000004933977e-06, 1.5690000001455928e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.5690000001455928e-06, 1.5280000003059513e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5410000004933977e-06, 1.4860000003835694e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.5700000002283332e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5419999996879596e-06, 1.554999999875406e-06, 1.5280000003059513e-06, 1.5690000001455928e-06, 1.5700000002283332e-06, 1.554999999875406e-06, 1.5140000000357645e-06, 1.4860000003835694e-06, 1.5279999994177729e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5830000004157796e-06, 1.5829999995276012e-06, 1.5410000004933977e-06, 1.5550000007635845e-06, 1.554999999875406e-06, 1.554999999875406e-06, 1.58400000049852e-06, 1.5550000007635845e-06, 1.6389999997201699e-06, 1.5419999996879596e-06, 1.596999999797788e-06, 1.5830000004157796e-06, 1.554999999875406e-06, 1.5699999993401548e-06, 1.5690000001455928e-06, 1.5690000001455928e-06, 1.5699999993401548e-06, 1.5699999993401548e-06, 1.554999999875406e-06, 1.5690000001455928e-06, 1.5830000004157796e-06]</msg>
<status status="PASS" starttime="20201029 09:34:36.135" endtime="20201029 09:34:36.138"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:36.131" endtime="20201029 09:34:36.138"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:35.749" endtime="20201029 09:34:36.139"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:35.749" endtime="20201029 09:34:36.139"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:36.147" endtime="20201029 09:34:36.158"></status>
</kw>
<msg timestamp="20201029 09:34:36.158" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:36.145" endtime="20201029 09:34:36.158"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:36.161" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:36.159" endtime="20201029 09:34:36.161"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:36.162" endtime="20201029 09:34:36.163"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:36.143" endtime="20201029 09:34:36.164"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:36.141" endtime="20201029 09:34:36.164"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:36.171" endtime="20201029 09:34:36.487"></status>
</kw>
<msg timestamp="20201029 09:34:36.491" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.634905931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.634907486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:36.169" endtime="20201029 09:34:36.491"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:36.501" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.634905931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.634907486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:36.492" endtime="20201029 09:34:36.501"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:36.502" endtime="20201029 09:34:36.504"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:36.167" endtime="20201029 09:34:36.504"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:36.165" endtime="20201029 09:34:36.505"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:36.509" level="INFO">${RESULT} = [{'diff': 1.5550000007635845e-06}, {'diff': 1.6389999997201699e-06}, {'diff': 1.5419999996879596e-06}, {'diff': 1.596999999797788e-06}, {'diff': 1.5830000004157796e-06}, {'diff': 1.554999999875406e-06...</msg>
<status status="PASS" starttime="20201029 09:34:36.505" endtime="20201029 09:34:36.509"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:36.515" level="INFO">${OVERHEAD} = {'diff': [1.5550000007635845e-06, 1.6389999997201699e-06, 1.5419999996879596e-06, 1.596999999797788e-06, 1.5830000004157796e-06, 1.554999999875406e-06, 1.5699999993401548e-06, 1.5690000001455928e-06, ...</msg>
<status status="PASS" starttime="20201029 09:34:36.510" endtime="20201029 09:34:36.515"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:36.519" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:34:36.518" endtime="20201029 09:34:36.519"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:36.521" level="INFO">VALUE: [1.5550000007635845e-06, 1.6389999997201699e-06, 1.5419999996879596e-06, 1.596999999797788e-06, 1.5830000004157796e-06, 1.554999999875406e-06, 1.5699999993401548e-06, 1.5690000001455928e-06, 1.5690000001455928e-06, 1.5699999993401548e-06, 1.5699999993401548e-06, 1.554999999875406e-06, 1.5690000001455928e-06, 1.5830000004157796e-06, 1.5560000008463248e-06, 1.5970000006859664e-06, 1.5690000001455928e-06, 1.527000000223211e-06, 1.5690000001455928e-06, 1.555999999069968e-06, 1.5700000002283332e-06, 1.5550000007635845e-06, 1.5419999996879596e-06, 1.555999999069968e-06, 1.5550000007635845e-06, 1.5970000006859664e-06, 1.5560000008463248e-06, 1.555999999069968e-06, 1.5549999989872276e-06, 1.4860000003835694e-06, 1.5550000007635845e-06, 1.5700000002283332e-06, 1.5690000001455928e-06, 1.5550000007635845e-06, 1.5560000008463248e-06, 1.4860000003835694e-06, 1.5420000014643165e-06, 1.5419999996879596e-06, 1.555999999069968e-06, 1.5409999996052193e-06, 1.472000001001561e-06, 1.5690000001455928e-06, 1.5690000001455928e-06, 1.555999999069968e-06, 1.5690000001455928e-06, 1.5699999984519764e-06, 1.5549999989872276e-06, 1.5409999996052193e-06, 1.555999999069968e-06, 1.5409999996052193e-06, 1.5690000001455928e-06, 1.5560000008463248e-06, 1.5700000002283332e-06, 1.5409999996052193e-06, 1.5560000008463248e-06, 1.555999999069968e-06, 1.5700000002283332e-06, 1.5690000001455928e-06, 1.5690000001455928e-06, 1.5560000008463248e-06, 1.555999999069968e-06, 1.583000001303958e-06, 1.5549999989872276e-06, 1.5700000002283332e-06]</msg>
<status status="PASS" starttime="20201029 09:34:36.520" endtime="20201029 09:34:36.522"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:36.515" endtime="20201029 09:34:36.523"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:36.139" endtime="20201029 09:34:36.523"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:36.139" endtime="20201029 09:34:36.523"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:36.531" endtime="20201029 09:34:36.543"></status>
</kw>
<msg timestamp="20201029 09:34:36.543" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:36.529" endtime="20201029 09:34:36.544"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:36.546" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:36.544" endtime="20201029 09:34:36.546"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:36.547" endtime="20201029 09:34:36.548"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:36.527" endtime="20201029 09:34:36.549"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:36.525" endtime="20201029 09:34:36.549"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:36.556" endtime="20201029 09:34:36.870"></status>
</kw>
<msg timestamp="20201029 09:34:36.874" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.015486014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.015487583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:36.554" endtime="20201029 09:34:36.875"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:36.884" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.015486014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.015487583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:36.875" endtime="20201029 09:34:36.885"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:36.885" endtime="20201029 09:34:36.887"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:36.552" endtime="20201029 09:34:36.888"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:36.550" endtime="20201029 09:34:36.888"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:36.892" level="INFO">${RESULT} = [{'diff': 1.5690000001455928e-06}, {'diff': 1.5560000008463248e-06}, {'diff': 1.5700000002283332e-06}, {'diff': 1.5409999996052193e-06}, {'diff': 1.5560000008463248e-06}, {'diff': 1.555999999069968e-0...</msg>
<status status="PASS" starttime="20201029 09:34:36.889" endtime="20201029 09:34:36.893"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:36.897" level="INFO">${OVERHEAD} = {'diff': [1.5690000001455928e-06, 1.5560000008463248e-06, 1.5700000002283332e-06, 1.5409999996052193e-06, 1.5560000008463248e-06, 1.555999999069968e-06, 1.5700000002283332e-06, 1.5690000001455928e-06,...</msg>
<status status="PASS" starttime="20201029 09:34:36.893" endtime="20201029 09:34:36.897"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:36.901" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:34:36.900" endtime="20201029 09:34:36.902"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:36.904" level="INFO">VALUE: [1.5690000001455928e-06, 1.5560000008463248e-06, 1.5700000002283332e-06, 1.5409999996052193e-06, 1.5560000008463248e-06, 1.555999999069968e-06, 1.5700000002283332e-06, 1.5690000001455928e-06, 1.5690000001455928e-06, 1.5560000008463248e-06, 1.555999999069968e-06, 1.583000001303958e-06, 1.5549999989872276e-06, 1.5700000002283332e-06, 1.5419999996879596e-06, 1.555999999069968e-06, 1.5550000007635845e-06, 1.5560000008463248e-06, 1.555999999069968e-06, 1.5549999989872276e-06, 1.5690000001455928e-06, 1.5829999995276012e-06, 1.5700000002283332e-06, 1.5280000003059513e-06, 1.5690000001455928e-06, 1.5560000008463248e-06, 1.555999999069968e-06, 1.5690000001455928e-06, 1.5550000007635845e-06, 1.5560000008463248e-06, 1.5280000003059513e-06, 1.5690000001455928e-06, 1.5420000014643165e-06, 1.5419999996879596e-06, 1.5550000007635845e-06, 1.555999999069968e-06, 1.5700000002283332e-06, 1.5419999996879596e-06, 1.5280000003059513e-06, 1.5690000001455928e-06, 1.5690000001455928e-06, 1.513999999147586e-06, 1.5690000001455928e-06, 1.5549999989872276e-06, 1.4999999997655777e-06, 1.5410000013815761e-06, 1.5549999989872276e-06, 1.5419999996879596e-06, 1.5690000001455928e-06, 1.5829999995276012e-06, 1.5700000002283332e-06, 1.513999999147586e-06, 1.5829999995276012e-06, 1.5550000007635845e-06, 1.5280000003059513e-06, 1.5560000008463248e-06, 1.5549999989872276e-06, 1.5700000002283332e-06, 1.5419999996879596e-06, 1.5550000007635845e-06, 1.5690000001455928e-06, 1.5700000002283332e-06, 1.555999999069968e-06, 1.6389999988319914e-06]</msg>
<status status="PASS" starttime="20201029 09:34:36.902" endtime="20201029 09:34:36.905"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:36.898" endtime="20201029 09:34:36.905"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:36.524" endtime="20201029 09:34:36.906"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:36.524" endtime="20201029 09:34:36.906"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:36.914" endtime="20201029 09:34:36.926"></status>
</kw>
<msg timestamp="20201029 09:34:36.927" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:36.913" endtime="20201029 09:34:36.927"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:36.929" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:36.928" endtime="20201029 09:34:36.930"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:36.930" endtime="20201029 09:34:36.932"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:36.909" endtime="20201029 09:34:36.933"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:36.908" endtime="20201029 09:34:36.933"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:36.939" endtime="20201029 09:34:37.260"></status>
</kw>
<msg timestamp="20201029 09:34:37.264" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.387119111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.387120681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:36.938" endtime="20201029 09:34:37.264"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:37.274" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.387119111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.387120681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:37.265" endtime="20201029 09:34:37.274"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:37.275" endtime="20201029 09:34:37.277"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:36.935" endtime="20201029 09:34:37.277"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:36.934" endtime="20201029 09:34:37.277"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:37.282" level="INFO">${RESULT} = [{'diff': 1.5700000002283332e-06}, {'diff': 1.513999999147586e-06}, {'diff': 1.5829999995276012e-06}, {'diff': 1.5550000007635845e-06}, {'diff': 1.5280000003059513e-06}, {'diff': 1.5560000008463248e-0...</msg>
<status status="PASS" starttime="20201029 09:34:37.278" endtime="20201029 09:34:37.282"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:37.287" level="INFO">${OVERHEAD} = {'diff': [1.5700000002283332e-06, 1.513999999147586e-06, 1.5829999995276012e-06, 1.5550000007635845e-06, 1.5280000003059513e-06, 1.5560000008463248e-06, 1.5549999989872276e-06, 1.5700000002283332e-06,...</msg>
<status status="PASS" starttime="20201029 09:34:37.283" endtime="20201029 09:34:37.287"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:37.291" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:34:37.290" endtime="20201029 09:34:37.292"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:37.294" level="INFO">VALUE: [1.5700000002283332e-06, 1.513999999147586e-06, 1.5829999995276012e-06, 1.5550000007635845e-06, 1.5280000003059513e-06, 1.5560000008463248e-06, 1.5549999989872276e-06, 1.5700000002283332e-06, 1.5419999996879596e-06, 1.5550000007635845e-06, 1.5690000001455928e-06, 1.5700000002283332e-06, 1.555999999069968e-06, 1.6389999988319914e-06, 1.5690000001455928e-06, 1.5690000001455928e-06, 1.5560000008463248e-06, 1.5700000002283332e-06, 1.5420000014643165e-06, 1.5700000002283332e-06, 1.5829999995276012e-06, 1.5550000007635845e-06, 1.5410000013815761e-06, 1.5419999996879596e-06, 1.5550000007635845e-06, 1.555999999069968e-06, 1.5280000003059513e-06, 1.5700000002283332e-06, 1.5550000007635845e-06, 1.555999999069968e-06, 1.583000001303958e-06, 1.5560000008463248e-06, 1.5560000008463248e-06, 1.5550000007635845e-06, 1.5410000013815761e-06, 1.5699999984519764e-06, 1.555999999069968e-06, 1.555999999069968e-06, 1.514000000923943e-06, 1.5690000001455928e-06, 1.5409999996052193e-06, 1.555999999069968e-06, 1.5560000008463248e-06, 1.5409999996052193e-06, 1.5280000003059513e-06, 1.5279999985295944e-06, 1.5690000001455928e-06, 1.5279999985295944e-06, 1.555999999069968e-06, 1.5690000001455928e-06, 1.568999998369236e-06, 1.5550000007635845e-06, 1.5690000001455928e-06, 1.5279999985295944e-06, 1.5700000002283332e-06, 1.555999999069968e-06, 1.5419999996879596e-06, 1.5280000003059513e-06, 1.5410000013815761e-06, 1.5550000007635845e-06, 1.5700000002283332e-06, 1.5549999989872276e-06, 1.568999998369236e-06, 1.5560000008463248e-06]</msg>
<status status="PASS" starttime="20201029 09:34:37.292" endtime="20201029 09:34:37.295"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:37.288" endtime="20201029 09:34:37.295"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:36.907" endtime="20201029 09:34:37.296"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:36.906" endtime="20201029 09:34:37.296"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:37.304" endtime="20201029 09:34:37.316"></status>
</kw>
<msg timestamp="20201029 09:34:37.317" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:37.302" endtime="20201029 09:34:37.317"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:37.319" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:37.318" endtime="20201029 09:34:37.319"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:37.320" endtime="20201029 09:34:37.322"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:37.300" endtime="20201029 09:34:37.322"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:37.298" endtime="20201029 09:34:37.323"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:37.329" endtime="20201029 09:34:37.635"></status>
</kw>
<msg timestamp="20201029 09:34:37.639" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.760449917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.760451486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:37.328" endtime="20201029 09:34:37.639"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:37.649" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.760449917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.760451486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:37.640" endtime="20201029 09:34:37.649"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:37.650" endtime="20201029 09:34:37.652"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:37.325" endtime="20201029 09:34:37.652"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:37.323" endtime="20201029 09:34:37.653"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:37.657" level="INFO">${RESULT} = [{'diff': 1.568999998369236e-06}, {'diff': 1.5550000007635845e-06}, {'diff': 1.5690000001455928e-06}, {'diff': 1.5279999985295944e-06}, {'diff': 1.5700000002283332e-06}, {'diff': 1.555999999069968e-06...</msg>
<status status="PASS" starttime="20201029 09:34:37.653" endtime="20201029 09:34:37.657"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:37.663" level="INFO">${OVERHEAD} = {'diff': [1.568999998369236e-06, 1.5550000007635845e-06, 1.5690000001455928e-06, 1.5279999985295944e-06, 1.5700000002283332e-06, 1.555999999069968e-06, 1.5419999996879596e-06, 1.5280000003059513e-06, ...</msg>
<status status="PASS" starttime="20201029 09:34:37.658" endtime="20201029 09:34:37.663"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:37.667" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:34:37.666" endtime="20201029 09:34:37.667"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:37.670" level="INFO">VALUE: [1.568999998369236e-06, 1.5550000007635845e-06, 1.5690000001455928e-06, 1.5279999985295944e-06, 1.5700000002283332e-06, 1.555999999069968e-06, 1.5419999996879596e-06, 1.5280000003059513e-06, 1.5410000013815761e-06, 1.5550000007635845e-06, 1.5700000002283332e-06, 1.5549999989872276e-06, 1.568999998369236e-06, 1.5560000008463248e-06, 1.555999999069968e-06, 1.5690000001455928e-06, 1.5829999995276012e-06, 1.624999999449983e-06, 1.5690000001455928e-06, 1.5419999996879596e-06, 1.5549999989872276e-06, 1.4860000003835694e-06, 1.5550000007635845e-06, 1.5550000007635845e-06, 1.555999999069968e-06, 1.5549999989872276e-06, 1.5700000002283332e-06, 1.5700000002283332e-06, 1.555999999069968e-06, 1.5560000008463248e-06, 1.5409999996052193e-06, 1.5419999996879596e-06, 1.5970000006859664e-06, 1.5690000001455928e-06, 1.5700000002283332e-06, 1.5690000001455928e-06, 1.5550000007635845e-06, 1.5690000001455928e-06, 1.5549999989872276e-06, 1.5549999989872276e-06, 1.5839999996103415e-06, 1.5550000007635845e-06, 1.5969999989096095e-06, 1.5280000003059513e-06, 1.5560000008463248e-06, 1.555999999069968e-06, 1.5560000008463248e-06, 1.5690000001455928e-06, 1.5550000007635845e-06, 1.5409999996052193e-06, 1.5690000001455928e-06, 1.5700000002283332e-06, 1.5419999996879596e-06, 1.5970000006859664e-06, 1.5419999996879596e-06, 1.5549999989872276e-06, 1.5550000007635845e-06, 1.4999999997655777e-06, 1.5690000001455928e-06, 1.555999999069968e-06, 1.5419999996879596e-06, 1.5550000007635845e-06, 1.5419999996879596e-06, 1.5690000001455928e-06]</msg>
<status status="PASS" starttime="20201029 09:34:37.668" endtime="20201029 09:34:37.671"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:37.664" endtime="20201029 09:34:37.672"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:37.297" endtime="20201029 09:34:37.673"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:37.296" endtime="20201029 09:34:37.673"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:37.682" endtime="20201029 09:34:37.699"></status>
</kw>
<msg timestamp="20201029 09:34:37.699" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:37.680" endtime="20201029 09:34:37.700"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:37.703" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:37.701" endtime="20201029 09:34:37.703"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:37.704" endtime="20201029 09:34:37.707"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:37.677" endtime="20201029 09:34:37.708"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:37.675" endtime="20201029 09:34:37.708"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:37.716" endtime="20201029 09:34:38.030"></status>
</kw>
<msg timestamp="20201029 09:34:38.035" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 9.140723653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 9.140725222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:37.714" endtime="20201029 09:34:38.035"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:38.045" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 9.140723653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 9.140725222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:38.036" endtime="20201029 09:34:38.045"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:38.046" endtime="20201029 09:34:38.048"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:37.711" endtime="20201029 09:34:38.048"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:37.709" endtime="20201029 09:34:38.049"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:38.053" level="INFO">${RESULT} = [{'diff': 1.5690000001455928e-06}, {'diff': 1.5700000002283332e-06}, {'diff': 1.5419999996879596e-06}, {'diff': 1.5970000006859664e-06}, {'diff': 1.5419999996879596e-06}, {'diff': 1.5549999989872276e-...</msg>
<status status="PASS" starttime="20201029 09:34:38.050" endtime="20201029 09:34:38.054"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:38.058" level="INFO">${OVERHEAD} = {'diff': [1.5690000001455928e-06, 1.5700000002283332e-06, 1.5419999996879596e-06, 1.5970000006859664e-06, 1.5419999996879596e-06, 1.5549999989872276e-06, 1.5550000007635845e-06, 1.4999999997655777e-06...</msg>
<status status="PASS" starttime="20201029 09:34:38.054" endtime="20201029 09:34:38.058"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:38.063" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:34:38.062" endtime="20201029 09:34:38.063"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:38.067" level="INFO">VALUE: [1.5690000001455928e-06, 1.5700000002283332e-06, 1.5419999996879596e-06, 1.5970000006859664e-06, 1.5419999996879596e-06, 1.5549999989872276e-06, 1.5550000007635845e-06, 1.4999999997655777e-06, 1.5690000001455928e-06, 1.555999999069968e-06, 1.5419999996879596e-06, 1.5550000007635845e-06, 1.5419999996879596e-06, 1.5690000001455928e-06, 1.5829999995276012e-06, 1.5550000007635845e-06, 1.5550000007635845e-06, 1.6390000006083483e-06, 1.568999998369236e-06, 1.5550000007635845e-06, 1.5409999996052193e-06, 1.5690000001455928e-06, 1.5700000002283332e-06, 1.513999999147586e-06, 1.4999999997655777e-06, 1.513999999147586e-06, 1.5550000007635845e-06, 1.5690000001455928e-06, 1.555999999069968e-06, 1.5419999996879596e-06, 1.5690000001455928e-06, 1.5560000008463248e-06, 1.5419999996879596e-06, 1.6389999988319914e-06, 1.5700000002283332e-06, 1.5700000002283332e-06, 1.5549999989872276e-06, 1.5700000002283332e-06, 1.5419999996879596e-06, 1.5550000007635845e-06, 1.5550000007635845e-06, 1.5549999989872276e-06, 1.5829999995276012e-06, 1.4729999993079446e-06, 1.5550000007635845e-06, 1.555999999069968e-06, 1.5550000007635845e-06, 1.5699999984519764e-06, 1.5700000002283332e-06, 1.5690000001455928e-06, 1.555999999069968e-06, 1.5700000002283332e-06, 1.5690000001455928e-06, 1.5690000001455928e-06, 1.555999999069968e-06, 1.5560000008463248e-06, 1.513999999147586e-06, 1.5549999989872276e-06, 1.5690000001455928e-06, 1.5700000002283332e-06, 1.5690000001455928e-06, 1.5419999996879596e-06, 1.5690000001455928e-06, 1.5690000001455928e-06]</msg>
<status status="PASS" starttime="20201029 09:34:38.064" endtime="20201029 09:34:38.067"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:38.059" endtime="20201029 09:34:38.068"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:37.674" endtime="20201029 09:34:38.069"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:37.674" endtime="20201029 09:34:38.069"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:38.078" endtime="20201029 09:34:38.090"></status>
</kw>
<msg timestamp="20201029 09:34:38.090" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:38.076" endtime="20201029 09:34:38.091"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:38.094" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:38.092" endtime="20201029 09:34:38.094"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:38.095" endtime="20201029 09:34:38.097"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:38.073" endtime="20201029 09:34:38.097"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:38.071" endtime="20201029 09:34:38.098"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:38.104" endtime="20201029 09:34:38.426"></status>
</kw>
<msg timestamp="20201029 09:34:38.430" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 9.513885819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 9.513887375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:38.103" endtime="20201029 09:34:38.430"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:38.440" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 9.513885819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 9.513887375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:38.431" endtime="20201029 09:34:38.440"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:38.441" endtime="20201029 09:34:38.443"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:38.100" endtime="20201029 09:34:38.443"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:38.098" endtime="20201029 09:34:38.444"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:38.448" level="INFO">${RESULT} = [{'diff': 1.555999999069968e-06}, {'diff': 1.5700000002283332e-06}, {'diff': 1.5690000001455928e-06}, {'diff': 1.5690000001455928e-06}, {'diff': 1.555999999069968e-06}, {'diff': 1.5560000008463248e-06...</msg>
<status status="PASS" starttime="20201029 09:34:38.444" endtime="20201029 09:34:38.448"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:38.454" level="INFO">${OVERHEAD} = {'diff': [1.555999999069968e-06, 1.5700000002283332e-06, 1.5690000001455928e-06, 1.5690000001455928e-06, 1.555999999069968e-06, 1.5560000008463248e-06, 1.513999999147586e-06, 1.5549999989872276e-06, 1...</msg>
<status status="PASS" starttime="20201029 09:34:38.449" endtime="20201029 09:34:38.454"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:38.458" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:34:38.457" endtime="20201029 09:34:38.458"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:38.461" level="INFO">VALUE: [1.555999999069968e-06, 1.5700000002283332e-06, 1.5690000001455928e-06, 1.5690000001455928e-06, 1.555999999069968e-06, 1.5560000008463248e-06, 1.513999999147586e-06, 1.5549999989872276e-06, 1.5690000001455928e-06, 1.5700000002283332e-06, 1.5690000001455928e-06, 1.5419999996879596e-06, 1.5690000001455928e-06, 1.5690000001455928e-06, 1.5560000008463248e-06, 1.5829999995276012e-06, 1.5700000002283332e-06, 1.5690000001455928e-06, 1.5700000002283332e-06, 1.5280000003059513e-06, 1.5550000007635845e-06, 1.568999998369236e-06, 1.5550000007635845e-06, 1.5700000002283332e-06, 1.5700000002283332e-06, 1.555999999069968e-06, 1.5560000008463248e-06, 1.5419999996879596e-06, 1.555999999069968e-06, 1.5130000008412026e-06, 1.5560000008463248e-06, 1.5550000007635845e-06, 1.624999999449983e-06, 1.5690000001455928e-06, 1.5700000002283332e-06, 1.5420000014643165e-06, 1.5980000007687067e-06, 1.5550000007635845e-06, 1.5700000002283332e-06, 1.555999999069968e-06, 1.5560000008463248e-06, 1.5550000007635845e-06, 1.5700000002283332e-06, 1.5560000008463248e-06, 1.5560000008463248e-06, 1.5549999989872276e-06, 1.5690000001455928e-06, 1.555999999069968e-06, 1.555999999069968e-06, 1.5419999996879596e-06, 1.555999999069968e-06, 1.5560000008463248e-06, 1.5560000008463248e-06, 1.5560000008463248e-06, 1.5690000001455928e-06, 1.59799999899235e-06, 1.5690000001455928e-06, 1.5829999995276012e-06, 1.555999999069968e-06, 1.5549999989872276e-06, 1.5410000013815761e-06, 1.5409999996052193e-06, 1.6110000000679747e-06, 1.5560000008463248e-06]</msg>
<status status="PASS" starttime="20201029 09:34:38.459" endtime="20201029 09:34:38.462"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:38.455" endtime="20201029 09:34:38.462"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:38.070" endtime="20201029 09:34:38.463"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:38.069" endtime="20201029 09:34:38.463"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:38.471" endtime="20201029 09:34:38.483"></status>
</kw>
<msg timestamp="20201029 09:34:38.484" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:38.469" endtime="20201029 09:34:38.484"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:38.486" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:38.485" endtime="20201029 09:34:38.486"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:38.487" endtime="20201029 09:34:38.489"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:38.467" endtime="20201029 09:34:38.489"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:38.465" endtime="20201029 09:34:38.490"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:38.497" endtime="20201029 09:34:38.813"></status>
</kw>
<msg timestamp="20201029 09:34:38.817" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 9.893932694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 9.89393425, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 09:34:38.495" endtime="20201029 09:34:38.818"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:38.828" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 9.893932694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 9.89393425, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 09:34:38.819" endtime="20201029 09:34:38.828"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:38.829" endtime="20201029 09:34:38.831"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:38.492" endtime="20201029 09:34:38.831"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:38.490" endtime="20201029 09:34:38.832"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:38.836" level="INFO">${RESULT} = [{'diff': 1.555999999069968e-06}, {'diff': 1.5560000008463248e-06}, {'diff': 1.5560000008463248e-06}, {'diff': 1.5560000008463248e-06}, {'diff': 1.5690000001455928e-06}, {'diff': 1.59799999899235e-06}...</msg>
<status status="PASS" starttime="20201029 09:34:38.832" endtime="20201029 09:34:38.836"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:38.841" level="INFO">${OVERHEAD} = {'diff': [1.555999999069968e-06, 1.5560000008463248e-06, 1.5560000008463248e-06, 1.5560000008463248e-06, 1.5690000001455928e-06, 1.59799999899235e-06, 1.5690000001455928e-06, 1.5829999995276012e-06, 1...</msg>
<status status="PASS" starttime="20201029 09:34:38.837" endtime="20201029 09:34:38.841"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:38.845" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:34:38.844" endtime="20201029 09:34:38.846"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:38.848" level="INFO">VALUE: [1.555999999069968e-06, 1.5560000008463248e-06, 1.5560000008463248e-06, 1.5560000008463248e-06, 1.5690000001455928e-06, 1.59799999899235e-06, 1.5690000001455928e-06, 1.5829999995276012e-06, 1.555999999069968e-06, 1.5549999989872276e-06, 1.5410000013815761e-06, 1.5409999996052193e-06, 1.6110000000679747e-06, 1.5560000008463248e-06, 1.5550000007635845e-06, 1.5550000007635845e-06, 1.5560000008463248e-06, 1.4999999997655777e-06, 1.5410000013815761e-06, 1.5700000002283332e-06, 1.5560000008463248e-06, 1.5690000001455928e-06, 1.5690000001455928e-06, 1.5409999996052193e-06, 1.5279999985295944e-06, 1.5690000001455928e-06, 1.5419999996879596e-06, 1.5549999989872276e-06, 1.5409999996052193e-06, 1.5690000001455928e-06, 1.5970000006859664e-06, 1.5700000002283332e-06, 1.5550000007635845e-06, 1.5419999996879596e-06, 1.5690000001455928e-06, 1.555999999069968e-06, 1.5560000008463248e-06, 1.5969999989096095e-06, 1.5690000001455928e-06, 1.5969999989096095e-06, 1.5560000008463248e-06, 1.5410000013815761e-06, 1.555999999069968e-06, 1.5700000002283332e-06, 1.5550000007635845e-06, 1.4999999997655777e-06, 1.5550000007635845e-06, 1.5409999996052193e-06, 1.5419999996879596e-06, 1.5560000008463248e-06, 1.5550000007635845e-06, 1.4999999997655777e-06, 1.5700000002283332e-06, 1.5560000008463248e-06, 1.5690000001455928e-06, 1.5560000008463248e-06, 1.5549999989872276e-06, 1.555999999069968e-06, 1.555999999069968e-06, 1.5280000003059513e-06, 1.5419999996879596e-06, 1.5549999989872276e-06, 1.5550000007635845e-06, 1.555999999069968e-06]</msg>
<status status="PASS" starttime="20201029 09:34:38.846" endtime="20201029 09:34:38.849"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:38.842" endtime="20201029 09:34:38.849"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:38.464" endtime="20201029 09:34:38.850"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:38.463" endtime="20201029 09:34:38.850"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:31.080" endtime="20201029 09:34:38.850"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 09:34:27.984" endtime="20201029 09:34:38.851" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:38.858" endtime="20201029 09:34:38.877"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:38.856" endtime="20201029 09:34:38.878"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:38.894" endtime="20201029 09:34:41.916"></status>
</kw>
<msg timestamp="20201029 09:34:41.917" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:38.892" endtime="20201029 09:34:41.918"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:41.923" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:41.919" endtime="20201029 09:34:41.923"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:34:41.929" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:34:41.925" endtime="20201029 09:34:41.930"></status>
</kw>
<status status="FAIL" starttime="20201029 09:34:38.890" endtime="20201029 09:34:41.931"></status>
</kw>
<status status="FAIL" starttime="20201029 09:34:38.887" endtime="20201029 09:34:41.933"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:38.886" endtime="20201029 09:34:41.933"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:34:41.941" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:34:41.940" endtime="20201029 09:34:41.942"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:41.935" endtime="20201029 09:34:41.943"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:38.885" endtime="20201029 09:34:41.943"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:38.884" endtime="20201029 09:34:41.943"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:41.945" endtime="20201029 09:34:41.948"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:38.880" endtime="20201029 09:34:41.949"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:38.878" endtime="20201029 09:34:41.950"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:38.855" endtime="20201029 09:34:41.951"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>02</arg>
<arg>set</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:41.970" endtime="20201029 09:34:41.994"></status>
</kw>
<msg timestamp="20201029 09:34:41.994" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:41.966" endtime="20201029 09:34:41.995"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:41.997" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:41.996" endtime="20201029 09:34:41.997"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:41.998" endtime="20201029 09:34:42.000"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:41.960" endtime="20201029 09:34:42.000"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:41.956" endtime="20201029 09:34:42.001"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:42.004" endtime="20201029 09:34:42.005"></status>
</kw>
<msg timestamp="20201029 09:34:42.006" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201029 09:34:42.002" endtime="20201029 09:34:42.006"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:42.010" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 09:34:42.009" endtime="20201029 09:34:42.010"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:42.013" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 09:34:42.011" endtime="20201029 09:34:42.014"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:42.007" endtime="20201029 09:34:42.014"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:42.018" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 09:34:42.017" endtime="20201029 09:34:42.019"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:42.020" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 09:34:42.019" endtime="20201029 09:34:42.021"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:42.015" endtime="20201029 09:34:42.021"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:42.028" endtime="20201029 09:34:42.323"></status>
</kw>
<msg timestamp="20201029 09:34:42.326" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.1039825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.103987458, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 09:34:42.026" endtime="20201029 09:34:42.327"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:42.337" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.1039825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.103987458, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 09:34:42.328" endtime="20201029 09:34:42.337"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:42.338" endtime="20201029 09:34:42.341"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:42.024" endtime="20201029 09:34:42.342"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:42.022" endtime="20201029 09:34:42.343"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:42.349" level="INFO">${RESULT} = [{'diff': 4.958000000332419e-06}, {'diff': 5.083000000016824e-06}, {'diff': 5.069999999829378e-06}, {'diff': 5.083000000016824e-06}, {'diff': 5.0690000001907265e-06}, {'diff': 5.083000000016824e-06}, ...</msg>
<status status="PASS" starttime="20201029 09:34:42.345" endtime="20201029 09:34:42.350"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:42.355" level="INFO">${OVERHEAD} = {'diff': [4.958000000332419e-06, 5.083000000016824e-06, 5.069999999829378e-06, 5.083000000016824e-06, 5.0690000001907265e-06, 5.083000000016824e-06, 5.111000000113108e-06, 5.0840000000995644e-06, 5.08...</msg>
<status status="PASS" starttime="20201029 09:34:42.351" endtime="20201029 09:34:42.356"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:42.361" level="INFO">NAME: overhead-02-set-first-timer</msg>
<status status="PASS" starttime="20201029 09:34:42.360" endtime="20201029 09:34:42.362"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:42.364" level="INFO">VALUE: [4.958000000332419e-06, 5.083000000016824e-06, 5.069999999829378e-06, 5.083000000016824e-06, 5.0690000001907265e-06, 5.083000000016824e-06, 5.111000000113108e-06, 5.0840000000995644e-06, 5.083000000016824e-06, 5.05600000000328e-06, 5.068999999746637e-06, 5.05600000000328e-06, 5.0690000001907265e-06, 5.068999999746637e-06, 5.068999999746637e-06, 5.083000000016824e-06, 5.097000000287011e-06, 5.0840000000995644e-06, 5.124999999939206e-06, 5.0690000001907265e-06, 5.068999999746637e-06, 5.0840000000995644e-06, 5.0690000001907265e-06, 5.069999999829378e-06, 5.0690000001907265e-06, 5.124999999939206e-06, 5.000000000254801e-06, 5.027999999906996e-06, 5.0690000001907265e-06, 5.111000000113108e-06, 5.05499999992054e-06, 5.0690000001907265e-06, 5.055000000364629e-06, 5.05600000000328e-06, 5.070000000273467e-06, 5.097000000287011e-06, 5.05600000000328e-06, 5.124999999939206e-06, 5.068999999746637e-06, 5.0420000001771825e-06, 5.070000000273467e-06, 5.083000000016824e-06, 5.05600000000328e-06, 5.068999999746637e-06, 5.05600000000328e-06, 5.0690000001907265e-06, 4.999999999810711e-06, 5.05499999992054e-06, 5.027999999906996e-06, 5.069999999829378e-06]</msg>
<status status="PASS" starttime="20201029 09:34:42.363" endtime="20201029 09:34:42.364"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:42.357" endtime="20201029 09:34:42.365"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:41.952" endtime="20201029 09:34:42.366"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 09:34:38.852" endtime="20201029 09:34:42.366" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Set Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:42.373" endtime="20201029 09:34:42.393"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:42.372" endtime="20201029 09:34:42.394"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:42.407" endtime="20201029 09:34:45.434"></status>
</kw>
<msg timestamp="20201029 09:34:45.436" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:42.405" endtime="20201029 09:34:45.437"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:45.445" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:45.439" endtime="20201029 09:34:45.446"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:34:45.453" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:34:45.449" endtime="20201029 09:34:45.454"></status>
</kw>
<status status="FAIL" starttime="20201029 09:34:42.403" endtime="20201029 09:34:45.455"></status>
</kw>
<status status="FAIL" starttime="20201029 09:34:42.400" endtime="20201029 09:34:45.457"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:42.399" endtime="20201029 09:34:45.458"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:34:45.463" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:34:45.462" endtime="20201029 09:34:45.464"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:45.459" endtime="20201029 09:34:45.465"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:42.398" endtime="20201029 09:34:45.465"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:42.397" endtime="20201029 09:34:45.466"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:45.467" endtime="20201029 09:34:45.469"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:42.396" endtime="20201029 09:34:45.470"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:42.394" endtime="20201029 09:34:45.471"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:42.371" endtime="20201029 09:34:45.472"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>03</arg>
<arg>set</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:45.488" endtime="20201029 09:34:45.554"></status>
</kw>
<msg timestamp="20201029 09:34:45.554" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:45.483" endtime="20201029 09:34:45.555"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:45.557" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:45.556" endtime="20201029 09:34:45.557"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:45.558" endtime="20201029 09:34:45.560"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:45.479" endtime="20201029 09:34:45.560"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:45.476" endtime="20201029 09:34:45.561"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:45.564" endtime="20201029 09:34:45.565"></status>
</kw>
<msg timestamp="20201029 09:34:45.566" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201029 09:34:45.562" endtime="20201029 09:34:45.566"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:45.570" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 09:34:45.569" endtime="20201029 09:34:45.570"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:45.572" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 09:34:45.571" endtime="20201029 09:34:45.572"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:45.567" endtime="20201029 09:34:45.573"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:45.577" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 09:34:45.576" endtime="20201029 09:34:45.577"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:45.579" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 09:34:45.578" endtime="20201029 09:34:45.579"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:45.574" endtime="20201029 09:34:45.580"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:45.587" endtime="20201029 09:34:45.888"></status>
</kw>
<msg timestamp="20201029 09:34:45.893" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.10597525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.106008819, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 09:34:45.585" endtime="20201029 09:34:45.893"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:45.904" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.10597525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.106008819, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 09:34:45.894" endtime="20201029 09:34:45.904"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:45.905" endtime="20201029 09:34:45.907"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:45.582" endtime="20201029 09:34:45.908"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:45.581" endtime="20201029 09:34:45.908"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:45.912" level="INFO">${RESULT} = [{'diff': 3.3568999999733506e-05}, {'diff': 3.365299999957827e-05}, {'diff': 3.365300000002236e-05}, {'diff': 3.3666000000209806e-05}, {'diff': 3.365300000002236e-05}, {'diff': 3.365199999993962e-05},...</msg>
<status status="PASS" starttime="20201029 09:34:45.909" endtime="20201029 09:34:45.912"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:45.917" level="INFO">${OVERHEAD} = {'diff': [3.3568999999733506e-05, 3.365299999957827e-05, 3.365300000002236e-05, 3.3666000000209806e-05, 3.365300000002236e-05, 3.365199999993962e-05, 3.3667000000292546e-05, 3.363900000019626e-05, 3.3...</msg>
<status status="PASS" starttime="20201029 09:34:45.913" endtime="20201029 09:34:45.917"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:45.922" level="INFO">NAME: overhead-03-set-middle-timer</msg>
<status status="PASS" starttime="20201029 09:34:45.921" endtime="20201029 09:34:45.922"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:45.925" level="INFO">VALUE: [3.3568999999733506e-05, 3.365299999957827e-05, 3.365300000002236e-05, 3.3666000000209806e-05, 3.365300000002236e-05, 3.365199999993962e-05, 3.3667000000292546e-05, 3.363900000019626e-05, 3.365300000002236e-05, 3.365199999993962e-05, 3.365300000002236e-05, 3.361100000009998e-05, 3.365300000002236e-05, 3.3693999999862e-05, 3.3681000000118644e-05, 3.365300000002236e-05, 3.3624999999926075e-05, 3.3624999999926075e-05, 3.365199999993962e-05, 3.370800000013219e-05, 3.365300000002236e-05, 3.366699999984846e-05, 3.366699999984846e-05, 3.3667000000292546e-05, 3.365300000002236e-05, 3.3666000000209806e-05, 3.365300000002236e-05, 3.373699999986712e-05, 3.365299999957827e-05, 3.363900000019626e-05, 3.366599999976572e-05, 3.365199999993962e-05, 3.3624999999926075e-05, 3.365300000002236e-05, 3.3666000000209806e-05, 3.373600000022847e-05, 3.3667000000292546e-05, 3.365300000002236e-05, 3.366599999976572e-05, 3.3681000000118644e-05, 3.365300000002236e-05, 3.3667000000292546e-05, 3.373599999978438e-05, 3.3666000000209806e-05, 3.363899999975217e-05, 3.3666000000209806e-05, 3.3625000000370164e-05, 3.3680000000035903e-05, 3.365300000002236e-05, 3.363899999975217e-05]</msg>
<status status="PASS" starttime="20201029 09:34:45.923" endtime="20201029 09:34:45.925"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:45.918" endtime="20201029 09:34:45.926"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:45.473" endtime="20201029 09:34:45.926"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 09:34:42.368" endtime="20201029 09:34:45.927" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="Measure Overhead Set Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:45.934" endtime="20201029 09:34:45.953"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:45.932" endtime="20201029 09:34:45.954"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:45.967" endtime="20201029 09:34:48.990"></status>
</kw>
<msg timestamp="20201029 09:34:48.991" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:45.966" endtime="20201029 09:34:48.991"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:48.996" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:48.993" endtime="20201029 09:34:48.997"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:34:49.003" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:34:48.998" endtime="20201029 09:34:49.004"></status>
</kw>
<status status="FAIL" starttime="20201029 09:34:45.963" endtime="20201029 09:34:49.005"></status>
</kw>
<status status="FAIL" starttime="20201029 09:34:45.961" endtime="20201029 09:34:49.006"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:45.959" endtime="20201029 09:34:49.007"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:34:49.015" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:34:49.013" endtime="20201029 09:34:49.018"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:49.009" endtime="20201029 09:34:49.018"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:45.959" endtime="20201029 09:34:49.019"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:45.958" endtime="20201029 09:34:49.019"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:49.021" endtime="20201029 09:34:49.024"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:45.956" endtime="20201029 09:34:49.025"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:45.955" endtime="20201029 09:34:49.026"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:45.931" endtime="20201029 09:34:49.027"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>04</arg>
<arg>set</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:49.046" endtime="20201029 09:34:49.241"></status>
</kw>
<msg timestamp="20201029 09:34:49.241" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:49.042" endtime="20201029 09:34:49.242"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:49.244" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:49.243" endtime="20201029 09:34:49.244"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:49.245" endtime="20201029 09:34:49.247"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:49.036" endtime="20201029 09:34:49.247"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:49.032" endtime="20201029 09:34:49.248"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:49.250" endtime="20201029 09:34:49.252"></status>
</kw>
<msg timestamp="20201029 09:34:49.253" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201029 09:34:49.249" endtime="20201029 09:34:49.253"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:49.257" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 09:34:49.256" endtime="20201029 09:34:49.257"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:49.259" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 09:34:49.258" endtime="20201029 09:34:49.259"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:49.253" endtime="20201029 09:34:49.260"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:49.264" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 09:34:49.263" endtime="20201029 09:34:49.264"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:49.266" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 09:34:49.265" endtime="20201029 09:34:49.266"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:49.260" endtime="20201029 09:34:49.267"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:49.274" endtime="20201029 09:34:49.575"></status>
</kw>
<msg timestamp="20201029 09:34:49.579" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.106603944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.106667833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:49.272" endtime="20201029 09:34:49.579"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:49.587" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.106603944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.106667833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:49.580" endtime="20201029 09:34:49.587"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:49.588" endtime="20201029 09:34:49.589"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:49.269" endtime="20201029 09:34:49.590"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:49.268" endtime="20201029 09:34:49.591"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:49.596" level="INFO">${RESULT} = [{'diff': 6.388899999976161e-05}, {'diff': 6.355600000018669e-05}, {'diff': 6.356900000037413e-05}, {'diff': 6.362499999967852e-05}, {'diff': 6.358300000020023e-05}, {'diff': 6.359700000002633e-05}, {...</msg>
<status status="PASS" starttime="20201029 09:34:49.591" endtime="20201029 09:34:49.596"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:49.600" level="INFO">${OVERHEAD} = {'diff': [6.388899999976161e-05, 6.355600000018669e-05, 6.356900000037413e-05, 6.362499999967852e-05, 6.358300000020023e-05, 6.359700000002633e-05, 6.359700000002633e-05, 6.355600000018669e-05, 6.3598...</msg>
<status status="PASS" starttime="20201029 09:34:49.597" endtime="20201029 09:34:49.600"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:49.605" level="INFO">NAME: overhead-04-set-last-timer</msg>
<status status="PASS" starttime="20201029 09:34:49.604" endtime="20201029 09:34:49.605"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:49.607" level="INFO">VALUE: [6.388899999976161e-05, 6.355600000018669e-05, 6.356900000037413e-05, 6.362499999967852e-05, 6.358300000020023e-05, 6.359700000002633e-05, 6.359700000002633e-05, 6.355600000018669e-05, 6.359800000010907e-05, 6.357000000001278e-05, 6.358299999975614e-05, 6.359800000010907e-05, 6.359800000010907e-05, 6.357000000001278e-05, 6.363899999994871e-05, 6.355499999965986e-05, 6.359800000010907e-05, 6.359800000010907e-05, 6.358400000028297e-05, 6.359700000002633e-05, 6.357000000001278e-05, 6.358299999975614e-05, 6.359699999958224e-05, 6.361099999985242e-05, 6.36669999996009e-05, 6.358299999975614e-05, 6.359700000002633e-05, 6.358300000020023e-05, 6.358300000020023e-05, 6.366599999996225e-05, 6.358399999983888e-05, 6.358300000020023e-05, 6.359700000002633e-05, 6.359700000002633e-05, 6.361199999993516e-05, 6.362500000012261e-05, 6.361099999985242e-05, 6.359700000002633e-05, 6.359700000002633e-05, 6.356899999993004e-05, 6.359700000002633e-05, 6.358300000020023e-05, 6.359700000002633e-05, 6.356899999993004e-05, 6.363899999994871e-05, 6.358399999983888e-05, 6.35559999997426e-05, 6.359700000002633e-05, 6.361099999985242e-05, 6.359700000002633e-05]</msg>
<status status="PASS" starttime="20201029 09:34:49.606" endtime="20201029 09:34:49.608"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:49.601" endtime="20201029 09:34:49.608"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:49.028" endtime="20201029 09:34:49.609"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 09:34:45.929" endtime="20201029 09:34:49.609" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="Measure Overhead Remove First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:49.617" endtime="20201029 09:34:49.636"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:49.615" endtime="20201029 09:34:49.637"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:49.651" endtime="20201029 09:34:52.670"></status>
</kw>
<msg timestamp="20201029 09:34:52.670" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:49.649" endtime="20201029 09:34:52.670"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:52.673" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:52.671" endtime="20201029 09:34:52.673"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:34:52.676" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:34:52.674" endtime="20201029 09:34:52.676"></status>
</kw>
<status status="FAIL" starttime="20201029 09:34:49.646" endtime="20201029 09:34:52.677"></status>
</kw>
<status status="FAIL" starttime="20201029 09:34:49.643" endtime="20201029 09:34:52.677"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:49.642" endtime="20201029 09:34:52.678"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:34:52.682" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:34:52.681" endtime="20201029 09:34:52.682"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:52.679" endtime="20201029 09:34:52.682"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:49.641" endtime="20201029 09:34:52.683"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:49.641" endtime="20201029 09:34:52.683"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:52.683" endtime="20201029 09:34:52.685"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:49.639" endtime="20201029 09:34:52.686"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:49.637" endtime="20201029 09:34:52.686"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:49.614" endtime="20201029 09:34:52.686"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>05</arg>
<arg>remove</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:52.695" endtime="20201029 09:34:52.714"></status>
</kw>
<msg timestamp="20201029 09:34:52.715" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:52.693" endtime="20201029 09:34:52.715"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:52.717" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:52.716" endtime="20201029 09:34:52.718"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:52.718" endtime="20201029 09:34:52.720"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:52.691" endtime="20201029 09:34:52.721"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:52.688" endtime="20201029 09:34:52.721"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:52.723" endtime="20201029 09:34:52.725"></status>
</kw>
<msg timestamp="20201029 09:34:52.726" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201029 09:34:52.722" endtime="20201029 09:34:52.726"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:52.730" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 09:34:52.729" endtime="20201029 09:34:52.731"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:52.732" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 09:34:52.731" endtime="20201029 09:34:52.733"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:52.727" endtime="20201029 09:34:52.733"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:52.737" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 09:34:52.736" endtime="20201029 09:34:52.738"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:52.739" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 09:34:52.738" endtime="20201029 09:34:52.740"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:52.734" endtime="20201029 09:34:52.740"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:52.748" endtime="20201029 09:34:53.043"></status>
</kw>
<msg timestamp="20201029 09:34:53.046" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.068979875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.068981208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:52.747" endtime="20201029 09:34:53.046"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:53.054" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.068979875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.068981208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:53.047" endtime="20201029 09:34:53.055"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:53.056" endtime="20201029 09:34:53.057"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:52.743" endtime="20201029 09:34:53.058"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:52.741" endtime="20201029 09:34:53.058"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:53.062" level="INFO">${RESULT} = [{'diff': 1.3329999997147013e-06}, {'diff': 1.319000000332693e-06}, {'diff': 1.319999999971344e-06}, {'diff': 1.304999999618417e-06}, {'diff': 1.3329999997147013e-06}, {'diff': 1.2919999998750598e-06}...</msg>
<status status="PASS" starttime="20201029 09:34:53.059" endtime="20201029 09:34:53.062"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:53.066" level="INFO">${OVERHEAD} = {'diff': [1.3329999997147013e-06, 1.319000000332693e-06, 1.319999999971344e-06, 1.304999999618417e-06, 1.3329999997147013e-06, 1.2919999998750598e-06, 1.304999999618417e-06, 1.2919999998750598e-06, 1....</msg>
<status status="PASS" starttime="20201029 09:34:53.063" endtime="20201029 09:34:53.066"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:53.071" level="INFO">NAME: overhead-05-remove-first-timer</msg>
<status status="PASS" starttime="20201029 09:34:53.070" endtime="20201029 09:34:53.071"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:53.073" level="INFO">VALUE: [1.3329999997147013e-06, 1.319000000332693e-06, 1.319999999971344e-06, 1.304999999618417e-06, 1.3329999997147013e-06, 1.2919999998750598e-06, 1.304999999618417e-06, 1.2919999998750598e-06, 1.2780000000489622e-06, 1.3060000001452465e-06, 1.319999999971344e-06, 1.3340000002415309e-06, 1.3060000001452465e-06, 1.292000000319149e-06, 1.2919999998750598e-06, 1.3060000001452465e-06, 1.3050000000625062e-06, 1.3059999997011573e-06, 1.2910000002364086e-06, 1.2919999998750598e-06, 1.3050000000625062e-06, 1.3059999997011573e-06, 1.2909999997923194e-06, 1.2780000000489622e-06, 1.2909999997923194e-06, 1.292000000319149e-06, 1.319999999971344e-06, 1.346999999984888e-06, 1.2909999997923194e-06, 1.3050000000625062e-06, 1.2910000002364086e-06, 1.2910000002364086e-06, 1.2780000000489622e-06, 1.2219999998563935e-06, 1.3060000001452465e-06, 1.2919999998750598e-06, 1.2910000002364086e-06, 1.3050000000625062e-06, 1.319999999971344e-06, 1.2909999997923194e-06, 1.2910000002364086e-06, 1.2769999999662218e-06, 1.2769999999662218e-06, 1.2780000000489622e-06, 1.2910000002364086e-06, 1.2639999997787754e-06, 1.292000000319149e-06, 1.3050000000625062e-06, 1.2640000002228646e-06, 1.2909999997923194e-06]</msg>
<status status="PASS" starttime="20201029 09:34:53.072" endtime="20201029 09:34:53.074"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:53.067" endtime="20201029 09:34:53.074"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:52.687" endtime="20201029 09:34:53.074"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 09:34:49.611" endtime="20201029 09:34:53.075" critical="yes"></status>
</test>
<test id="s1-s2-t7" name="Measure Overhead Remove Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:53.082" endtime="20201029 09:34:53.102"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:53.081" endtime="20201029 09:34:53.102"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:53.116" endtime="20201029 09:34:56.137"></status>
</kw>
<msg timestamp="20201029 09:34:56.138" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:53.114" endtime="20201029 09:34:56.139"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:56.143" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:56.140" endtime="20201029 09:34:56.144"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:34:56.150" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:34:56.146" endtime="20201029 09:34:56.150"></status>
</kw>
<status status="FAIL" starttime="20201029 09:34:53.112" endtime="20201029 09:34:56.152"></status>
</kw>
<status status="FAIL" starttime="20201029 09:34:53.109" endtime="20201029 09:34:56.153"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:53.108" endtime="20201029 09:34:56.153"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:34:56.161" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:34:56.159" endtime="20201029 09:34:56.162"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:56.155" endtime="20201029 09:34:56.162"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:53.107" endtime="20201029 09:34:56.162"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:53.107" endtime="20201029 09:34:56.163"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:56.164" endtime="20201029 09:34:56.167"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:53.105" endtime="20201029 09:34:56.168"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:53.103" endtime="20201029 09:34:56.169"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:53.079" endtime="20201029 09:34:56.170"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>06</arg>
<arg>remove</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:56.187" endtime="20201029 09:34:56.258"></status>
</kw>
<msg timestamp="20201029 09:34:56.259" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:56.184" endtime="20201029 09:34:56.260"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:56.265" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:56.262" endtime="20201029 09:34:56.265"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:56.267" endtime="20201029 09:34:56.270"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:56.179" endtime="20201029 09:34:56.271"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:56.174" endtime="20201029 09:34:56.272"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:56.277" endtime="20201029 09:34:56.282"></status>
</kw>
<msg timestamp="20201029 09:34:56.283" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201029 09:34:56.274" endtime="20201029 09:34:56.283"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:56.292" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 09:34:56.290" endtime="20201029 09:34:56.292"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:56.296" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 09:34:56.294" endtime="20201029 09:34:56.297"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:56.285" endtime="20201029 09:34:56.298"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:56.305" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 09:34:56.303" endtime="20201029 09:34:56.306"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:56.309" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 09:34:56.308" endtime="20201029 09:34:56.310"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:56.299" endtime="20201029 09:34:56.311"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:56.325" endtime="20201029 09:34:56.630"></status>
</kw>
<msg timestamp="20201029 09:34:56.633" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.098002653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.098010944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:56.322" endtime="20201029 09:34:56.634"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:56.641" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.098002653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.098010944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:56.634" endtime="20201029 09:34:56.642"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:56.642" endtime="20201029 09:34:56.644"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:56.316" endtime="20201029 09:34:56.645"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:56.313" endtime="20201029 09:34:56.645"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:56.649" level="INFO">${RESULT} = [{'diff': 8.290999999882587e-06}, {'diff': 8.263999999869043e-06}, {'diff': 8.291999999965327e-06}, {'diff': 8.291999999965327e-06}, {'diff': 8.27800000013923e-06}, {'diff': 8.306000000235514e-06}, {'...</msg>
<status status="PASS" starttime="20201029 09:34:56.646" endtime="20201029 09:34:56.649"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:56.654" level="INFO">${OVERHEAD} = {'diff': [8.290999999882587e-06, 8.263999999869043e-06, 8.291999999965327e-06, 8.291999999965327e-06, 8.27800000013923e-06, 8.306000000235514e-06, 8.306000000235514e-06, 8.250000000042945e-06, 8.30599...</msg>
<status status="PASS" starttime="20201029 09:34:56.650" endtime="20201029 09:34:56.654"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:56.658" level="INFO">NAME: overhead-06-remove-middle-timer</msg>
<status status="PASS" starttime="20201029 09:34:56.657" endtime="20201029 09:34:56.659"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:56.661" level="INFO">VALUE: [8.290999999882587e-06, 8.263999999869043e-06, 8.291999999965327e-06, 8.291999999965327e-06, 8.27800000013923e-06, 8.306000000235514e-06, 8.306000000235514e-06, 8.250000000042945e-06, 8.305999999791425e-06, 8.291999999965327e-06, 8.304999999708684e-06, 8.305999999791425e-06, 8.291000000326676e-06, 8.318999999978871e-06, 8.347000000075155e-06, 8.291999999965327e-06, 8.291999999965327e-06, 8.318999999978871e-06, 8.262999999786302e-06, 8.305000000152774e-06, 8.291999999965327e-06, 8.291999999965327e-06, 8.291999999965327e-06, 8.27799999969514e-06, 8.291999999965327e-06, 8.291999999965327e-06, 8.2769999996124e-06, 8.291999999965327e-06, 8.305000000152774e-06, 8.291999999965327e-06, 8.334000000331798e-06, 8.347000000075155e-06, 8.290999999882587e-06, 8.290999999882587e-06, 8.291999999965327e-06, 8.291999999965327e-06, 8.291999999965327e-06, 8.305000000152774e-06, 8.318999999978871e-06, 8.2769999996124e-06, 8.291999999965327e-06, 8.291999999965327e-06, 8.290999999882587e-06, 8.291999999965327e-06, 8.250000000042945e-06, 8.319999999617522e-06, 8.291999999965327e-06, 8.27700000005649e-06, 8.27800000013923e-06, 8.290999999882587e-06]</msg>
<status status="PASS" starttime="20201029 09:34:56.659" endtime="20201029 09:34:56.661"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:56.655" endtime="20201029 09:34:56.662"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:56.171" endtime="20201029 09:34:56.662"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 09:34:53.077" endtime="20201029 09:34:56.663" critical="yes"></status>
</test>
<test id="s1-s2-t8" name="Measure Overhead Remove Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:56.670" endtime="20201029 09:34:56.689"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:56.668" endtime="20201029 09:34:56.690"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:56.703" endtime="20201029 09:34:59.721"></status>
</kw>
<msg timestamp="20201029 09:34:59.722" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:56.701" endtime="20201029 09:34:59.722"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:59.724" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:59.723" endtime="20201029 09:34:59.725"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:34:59.727" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:34:59.725" endtime="20201029 09:34:59.728"></status>
</kw>
<status status="FAIL" starttime="20201029 09:34:56.698" endtime="20201029 09:34:59.728"></status>
</kw>
<status status="FAIL" starttime="20201029 09:34:56.696" endtime="20201029 09:34:59.729"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:56.695" endtime="20201029 09:34:59.729"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:34:59.733" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:34:59.732" endtime="20201029 09:34:59.733"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:59.730" endtime="20201029 09:34:59.734"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:56.694" endtime="20201029 09:34:59.734"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:56.694" endtime="20201029 09:34:59.734"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:59.735" endtime="20201029 09:34:59.736"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:56.692" endtime="20201029 09:34:59.737"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:56.690" endtime="20201029 09:34:59.737"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:56.667" endtime="20201029 09:34:59.737"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>07</arg>
<arg>remove</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:59.749" endtime="20201029 09:34:59.945"></status>
</kw>
<msg timestamp="20201029 09:34:59.946" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:59.747" endtime="20201029 09:34:59.947"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:59.951" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:59.948" endtime="20201029 09:34:59.952"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:59.954" endtime="20201029 09:34:59.957"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:59.744" endtime="20201029 09:34:59.958"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:59.739" endtime="20201029 09:34:59.959"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:59.963" endtime="20201029 09:34:59.967"></status>
</kw>
<msg timestamp="20201029 09:34:59.967" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201029 09:34:59.960" endtime="20201029 09:34:59.968"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:59.976" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 09:34:59.974" endtime="20201029 09:34:59.977"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:59.981" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 09:34:59.979" endtime="20201029 09:34:59.981"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:59.969" endtime="20201029 09:34:59.982"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:59.990" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 09:34:59.988" endtime="20201029 09:34:59.991"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:59.995" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 09:34:59.993" endtime="20201029 09:34:59.995"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:59.984" endtime="20201029 09:34:59.996"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:00.010" endtime="20201029 09:35:00.315"></status>
</kw>
<msg timestamp="20201029 09:35:00.318" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.073007667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.073023167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:00.006" endtime="20201029 09:35:00.318"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:00.326" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.073007667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.073023167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:00.319" endtime="20201029 09:35:00.327"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:00.327" endtime="20201029 09:35:00.329"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:00.001" endtime="20201029 09:35:00.330"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:59.997" endtime="20201029 09:35:00.330"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:35:00.334" level="INFO">${RESULT} = [{'diff': 1.5499999999946112e-05}, {'diff': 1.5430000000371535e-05}, {'diff': 1.5431000000010187e-05}, {'diff': 1.551399999977221e-05}, {'diff': 1.5445000000280373e-05}, {'diff': 1.5429999999927446e-0...</msg>
<status status="PASS" starttime="20201029 09:35:00.331" endtime="20201029 09:35:00.334"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:35:00.339" level="INFO">${OVERHEAD} = {'diff': [1.5499999999946112e-05, 1.5430000000371535e-05, 1.5431000000010187e-05, 1.551399999977221e-05, 1.5445000000280373e-05, 1.5429999999927446e-05, 1.5471999999849828e-05, 1.5444000000197633e-05,...</msg>
<status status="PASS" starttime="20201029 09:35:00.335" endtime="20201029 09:35:00.339"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:35:00.343" level="INFO">NAME: overhead-07-remove-last-timer</msg>
<status status="PASS" starttime="20201029 09:35:00.342" endtime="20201029 09:35:00.344"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:35:00.346" level="INFO">VALUE: [1.5499999999946112e-05, 1.5430000000371535e-05, 1.5431000000010187e-05, 1.551399999977221e-05, 1.5445000000280373e-05, 1.5429999999927446e-05, 1.5471999999849828e-05, 1.5444000000197633e-05, 1.545800000002373e-05, 1.5444999999836284e-05, 1.5443999999753544e-05, 1.5444000000197633e-05, 1.5444999999836284e-05, 1.5443999999753544e-05, 1.551399999977221e-05, 1.5402999999913902e-05, 1.5375000000261707e-05, 1.545800000002373e-05, 1.545800000002373e-05, 1.545800000002373e-05, 1.5431000000010187e-05, 1.5444000000197633e-05, 1.5444999999836284e-05, 1.541700000018409e-05, 1.5444000000197633e-05, 1.5431000000010187e-05, 1.545800000002373e-05, 1.5429999999927446e-05, 1.5486000000120015e-05, 1.5402999999913902e-05, 1.5443999999753544e-05, 1.545800000002373e-05, 1.5444000000197633e-05, 1.541700000018409e-05, 1.545800000002373e-05, 1.5444000000197633e-05, 1.5444000000197633e-05, 1.541600000010135e-05, 1.545900000010647e-05, 1.5444999999836284e-05, 1.5445000000280373e-05, 1.545900000010647e-05, 1.5375000000261707e-05, 1.5430000000371535e-05, 1.545800000002373e-05, 1.545900000010647e-05, 1.5431000000010187e-05, 1.5444999999836284e-05, 1.5431000000010187e-05, 1.545800000002373e-05]</msg>
<status status="PASS" starttime="20201029 09:35:00.344" endtime="20201029 09:35:00.346"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:00.340" endtime="20201029 09:35:00.347"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:59.738" endtime="20201029 09:35:00.347"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 09:34:56.664" endtime="20201029 09:35:00.348" critical="yes"></status>
</test>
<test id="s1-s2-t9" name="Measure Add Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:35:00.355" endtime="20201029 09:35:00.374"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:00.353" endtime="20201029 09:35:00.375"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:00.388" endtime="20201029 09:35:03.410"></status>
</kw>
<msg timestamp="20201029 09:35:03.412" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:00.386" endtime="20201029 09:35:03.412"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:03.417" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:03.414" endtime="20201029 09:35:03.418"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:35:03.425" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:35:03.419" endtime="20201029 09:35:03.426"></status>
</kw>
<status status="FAIL" starttime="20201029 09:35:00.384" endtime="20201029 09:35:03.427"></status>
</kw>
<status status="FAIL" starttime="20201029 09:35:00.381" endtime="20201029 09:35:03.428"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:00.380" endtime="20201029 09:35:03.429"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:35:03.436" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:35:03.435" endtime="20201029 09:35:03.437"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:03.430" endtime="20201029 09:35:03.438"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:00.379" endtime="20201029 09:35:03.438"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:00.379" endtime="20201029 09:35:03.438"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:03.440" endtime="20201029 09:35:03.443"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:00.377" endtime="20201029 09:35:03.444"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:00.376" endtime="20201029 09:35:03.445"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:00.352" endtime="20201029 09:35:03.446"></status>
</kw>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 09:35:03.453" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 09:35:03.469" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 09:35:04.647" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 09:35:03.450" endtime="20201029 09:35:04.648"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 09:35:07.651" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20201029 09:35:04.649" endtime="20201029 09:35:07.652"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:03.447" endtime="20201029 09:35:07.653"></status>
</kw>
<kw name="${n} IN RANGE [ 1 | 51 ]" type="for">
<kw name="${n} = 1" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:35:07.661" endtime="20201029 09:35:07.683"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:07.657" endtime="20201029 09:35:07.684"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:07.701" endtime="20201029 09:35:07.713"></status>
</kw>
<msg timestamp="20201029 09:35:07.714" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['list_ops 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:07.698" endtime="20201029 09:35:07.715"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:07.719" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['list_ops 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:07.716" endtime="20201029 09:35:07.720"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:07.722" endtime="20201029 09:35:07.725"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:07.692" endtime="20201029 09:35:07.727"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:07.688" endtime="20201029 09:35:07.728"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:07.741" endtime="20201029 09:35:08.038"></status>
</kw>
<msg timestamp="20201029 09:35:08.041" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029311472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029316542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:07.738" endtime="20201029 09:35:08.041"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:08.049" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029311472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029316542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:08.042" endtime="20201029 09:35:08.050"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:08.050" endtime="20201029 09:35:08.052"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:07.733" endtime="20201029 09:35:08.052"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:07.729" endtime="20201029 09:35:08.053"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:35:08.057" level="INFO">${PHILIP_RES} = [{'diff': 5.0699999999993806e-06}, {'diff': 4.930999999999686e-06}, {'diff': 4.917000000000116e-06}, {'diff': 4.917000000000116e-06}, {'diff': 4.930999999999686e-06}, {'diff': 4.943999999999782e-06}, ...</msg>
<status status="PASS" starttime="20201029 09:35:08.054" endtime="20201029 09:35:08.057"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:35:08.064" level="INFO">${RESULT} = {'diff': [5.0699999999993806e-06, 4.930999999999686e-06, 4.917000000000116e-06, 4.917000000000116e-06, 4.930999999999686e-06, 4.943999999999782e-06, 4.888000000001502e-06, 4.930000000000212e-06, 4.930...</msg>
<status status="PASS" starttime="20201029 09:35:08.058" endtime="20201029 09:35:08.064"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:35:08.070" level="INFO">NAME: 1-timer-trace</msg>
<status status="PASS" starttime="20201029 09:35:08.069" endtime="20201029 09:35:08.071"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:35:08.074" level="INFO">VALUE: [5.0699999999993806e-06, 4.930999999999686e-06, 4.917000000000116e-06, 4.917000000000116e-06, 4.930999999999686e-06, 4.943999999999782e-06, 4.888000000001502e-06, 4.930000000000212e-06, 4.930000000000212e-06, 4.930000000000212e-06, 4.916000000000642e-06, 4.889000000000976e-06, 4.916000000000642e-06, 4.930000000000212e-06, 4.917000000000116e-06, 4.917000000000116e-06, 4.930999999999686e-06, 4.930999999999686e-06, 4.930999999999686e-06, 4.930999999999686e-06, 4.917000000000116e-06, 4.930999999999686e-06, 4.930999999999686e-06, 4.972000000002391e-06, 4.930000000000212e-06, 4.930000000000212e-06, 4.875000000001406e-06, 4.943999999999782e-06, 4.9299999999967425e-06, 4.943999999999782e-06, 4.930000000000212e-06, 4.930000000000212e-06, 4.917000000000116e-06, 4.930999999999686e-06, 4.903000000000546e-06, 4.930999999999686e-06, 4.8749999999979365e-06, 4.917000000000116e-06, 4.930999999999686e-06, 4.9449999999992555e-06, 4.9449999999992555e-06, 4.930999999999686e-06, 4.931000000003155e-06, 4.985999999998492e-06, 4.916000000000642e-06, 4.930000000000212e-06, 4.930000000000212e-06, 4.9299999999967425e-06, 4.916000000000642e-06, 4.930000000000212e-06]</msg>
<status status="PASS" starttime="20201029 09:35:08.072" endtime="20201029 09:35:08.075"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:08.065" endtime="20201029 09:35:08.076"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:07.685" endtime="20201029 09:35:08.077"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:07.655" endtime="20201029 09:35:08.077"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:35:08.080" endtime="20201029 09:35:08.101"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:08.078" endtime="20201029 09:35:08.101"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:08.113" endtime="20201029 09:35:08.123"></status>
</kw>
<msg timestamp="20201029 09:35:08.124" level="INFO">${RESULT} = {'cmd': 'list_ops 2', 'msg': ['list_ops 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:08.111" endtime="20201029 09:35:08.124"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:08.127" level="INFO">${RESULT} = {'cmd': 'list_ops 2', 'msg': ['list_ops 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:08.125" endtime="20201029 09:35:08.128"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:08.129" endtime="20201029 09:35:08.131"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:08.107" endtime="20201029 09:35:08.132"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:08.104" endtime="20201029 09:35:08.133"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:08.142" endtime="20201029 09:35:08.431"></status>
</kw>
<msg timestamp="20201029 09:35:08.435" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021412236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021421514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:08.140" endtime="20201029 09:35:08.435"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:08.443" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021412236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021421514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:08.436" endtime="20201029 09:35:08.443"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:08.444" endtime="20201029 09:35:08.446"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:08.136" endtime="20201029 09:35:08.446"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:08.134" endtime="20201029 09:35:08.446"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:35:08.450" level="INFO">${PHILIP_RES} = [{'diff': 9.277999999997982e-06}, {'diff': 9.181000000000467e-06}, {'diff': 9.166999999997427e-06}, {'diff': 9.181000000000467e-06}, {'diff': 9.181000000000467e-06}, {'diff': 9.180999999996997e-06}, {...</msg>
<status status="PASS" starttime="20201029 09:35:08.447" endtime="20201029 09:35:08.451"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:35:08.454" level="INFO">${RESULT} = {'diff': [9.277999999997982e-06, 9.181000000000467e-06, 9.166999999997427e-06, 9.181000000000467e-06, 9.181000000000467e-06, 9.180999999996997e-06, 9.181000000000467e-06, 9.181000000000467e-06, 9.1810...</msg>
<status status="PASS" starttime="20201029 09:35:08.451" endtime="20201029 09:35:08.455"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:35:08.459" level="INFO">NAME: 2-timer-trace</msg>
<status status="PASS" starttime="20201029 09:35:08.458" endtime="20201029 09:35:08.459"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:35:08.461" level="INFO">VALUE: [9.277999999997982e-06, 9.181000000000467e-06, 9.166999999997427e-06, 9.181000000000467e-06, 9.181000000000467e-06, 9.180999999996997e-06, 9.181000000000467e-06, 9.181000000000467e-06, 9.181000000000467e-06, 9.195000000000036e-06, 9.181000000000467e-06, 9.195000000000036e-06, 9.181000000000467e-06, 9.180999999996997e-06, 9.167000000000897e-06, 9.125000000002187e-06, 9.236000000002742e-06, 9.181000000000467e-06, 9.181000000000467e-06, 9.181000000000467e-06, 9.181000000000467e-06, 9.180999999996997e-06, 9.181000000000467e-06, 9.181000000000467e-06, 9.167000000000897e-06, 9.181000000000467e-06, 9.181000000000467e-06, 9.138999999998287e-06, 9.221999999999703e-06, 9.180999999996997e-06, 9.181000000000467e-06, 9.181000000000467e-06, 9.194000000000563e-06, 9.167000000000897e-06, 9.166999999997427e-06, 9.166000000001423e-06, 9.180000000000993e-06, 9.208000000000133e-06, 9.151999999998384e-06, 9.165999999997954e-06, 9.180000000000993e-06, 9.180000000000993e-06, 9.179999999997523e-06, 9.180000000000993e-06, 9.166000000001423e-06, 9.151999999998384e-06, 9.166000000001423e-06, 9.194000000000563e-06, 9.194000000000563e-06, 9.180000000000993e-06]</msg>
<status status="PASS" starttime="20201029 09:35:08.460" endtime="20201029 09:35:08.462"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:08.455" endtime="20201029 09:35:08.462"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:08.102" endtime="20201029 09:35:08.463"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:08.077" endtime="20201029 09:35:08.463"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:35:08.465" endtime="20201029 09:35:08.484"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:08.464" endtime="20201029 09:35:08.485"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:08.496" endtime="20201029 09:35:08.508"></status>
</kw>
<msg timestamp="20201029 09:35:08.509" level="INFO">${RESULT} = {'cmd': 'list_ops 3', 'msg': ['list_ops 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:08.492" endtime="20201029 09:35:08.510"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:08.514" level="INFO">${RESULT} = {'cmd': 'list_ops 3', 'msg': ['list_ops 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:08.512" endtime="20201029 09:35:08.516"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:08.517" endtime="20201029 09:35:08.521"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:08.489" endtime="20201029 09:35:08.522"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:08.487" endtime="20201029 09:35:08.523"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:08.536" endtime="20201029 09:35:08.828"></status>
</kw>
<msg timestamp="20201029 09:35:08.831" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021328917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021343111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:08.533" endtime="20201029 09:35:08.831"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:08.839" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021328917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021343111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:08.832" endtime="20201029 09:35:08.840"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:08.840" endtime="20201029 09:35:08.842"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:08.527" endtime="20201029 09:35:08.843"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:08.524" endtime="20201029 09:35:08.843"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:35:08.847" level="INFO">${PHILIP_RES} = [{'diff': 1.4194000000002094e-05}, {'diff': 1.4041999999998833e-05}, {'diff': 1.4070000000001442e-05}, {'diff': 1.4042000000002303e-05}, {'diff': 1.4112000000000152e-05}, {'diff': 1.408299999999807e-0...</msg>
<status status="PASS" starttime="20201029 09:35:08.844" endtime="20201029 09:35:08.847"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:35:08.851" level="INFO">${RESULT} = {'diff': [1.4194000000002094e-05, 1.4041999999998833e-05, 1.4070000000001442e-05, 1.4042000000002303e-05, 1.4112000000000152e-05, 1.408299999999807e-05, 1.4041000000002829e-05, 1.4083000000001539e-05,...</msg>
<status status="PASS" starttime="20201029 09:35:08.848" endtime="20201029 09:35:08.851"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:35:08.861" level="INFO">NAME: 3-timer-trace</msg>
<status status="PASS" starttime="20201029 09:35:08.854" endtime="20201029 09:35:08.862"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:35:08.865" level="INFO">VALUE: [1.4194000000002094e-05, 1.4041999999998833e-05, 1.4070000000001442e-05, 1.4042000000002303e-05, 1.4112000000000152e-05, 1.408299999999807e-05, 1.4041000000002829e-05, 1.4083000000001539e-05, 1.4055999999998403e-05, 1.4027999999999263e-05, 1.4056000000001873e-05, 1.4083000000001539e-05, 1.4013999999999693e-05, 1.4069000000001969e-05, 1.4055999999998403e-05, 1.4041999999998833e-05, 1.4056000000001873e-05, 1.4097000000001109e-05, 1.4041999999998833e-05, 1.4027999999999263e-05, 1.4056000000001873e-05, 1.4013999999999693e-05, 1.405499999999893e-05, 1.4097000000001109e-05, 1.4083000000001539e-05, 1.40689999999985e-05, 1.4055999999998403e-05, 1.4028000000002733e-05, 1.4056000000001873e-05, 1.4097000000001109e-05, 1.4042000000002303e-05, 1.4042000000002303e-05, 1.4055999999998403e-05, 1.4027999999999263e-05, 1.3972000000000984e-05, 1.3987000000000027e-05, 1.4041999999998833e-05, 1.4056000000001873e-05, 1.4056000000001873e-05, 1.404099999999936e-05, 1.4000000000000123e-05, 1.404099999999936e-05, 1.4027999999999263e-05, 1.4013999999999693e-05, 1.4027999999999263e-05, 1.4041000000002829e-05, 1.404099999999936e-05, 1.4027999999999263e-05, 1.4042000000002303e-05, 1.4027999999999263e-05]</msg>
<status status="PASS" starttime="20201029 09:35:08.863" endtime="20201029 09:35:08.865"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:08.852" endtime="20201029 09:35:08.866"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:08.485" endtime="20201029 09:35:08.866"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:08.463" endtime="20201029 09:35:08.866"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:35:08.869" endtime="20201029 09:35:08.889"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:08.867" endtime="20201029 09:35:08.889"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:08.898" endtime="20201029 09:35:08.907"></status>
</kw>
<msg timestamp="20201029 09:35:08.908" level="INFO">${RESULT} = {'cmd': 'list_ops 4', 'msg': ['list_ops 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:08.896" endtime="20201029 09:35:08.908"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:08.911" level="INFO">${RESULT} = {'cmd': 'list_ops 4', 'msg': ['list_ops 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:08.909" endtime="20201029 09:35:08.911"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:08.912" endtime="20201029 09:35:08.914"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:08.893" endtime="20201029 09:35:08.914"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:08.891" endtime="20201029 09:35:08.915"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:08.921" endtime="20201029 09:35:09.208"></status>
</kw>
<msg timestamp="20201029 09:35:09.211" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017047931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017067542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:08.920" endtime="20201029 09:35:09.211"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:09.220" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017047931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017067542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:09.212" endtime="20201029 09:35:09.220"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:09.221" endtime="20201029 09:35:09.223"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:08.917" endtime="20201029 09:35:09.223"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:08.915" endtime="20201029 09:35:09.224"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:35:09.228" level="INFO">${PHILIP_RES} = [{'diff': 1.961100000000271e-05}, {'diff': 1.9499999999998685e-05}, {'diff': 1.9486000000002585e-05}, {'diff': 1.9499999999998685e-05}, {'diff': 1.9500000000002154e-05}, {'diff': 1.9527999999997825e-0...</msg>
<status status="PASS" starttime="20201029 09:35:09.224" endtime="20201029 09:35:09.228"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:35:09.233" level="INFO">${RESULT} = {'diff': [1.961100000000271e-05, 1.9499999999998685e-05, 1.9486000000002585e-05, 1.9499999999998685e-05, 1.9500000000002154e-05, 1.9527999999997825e-05, 1.9500000000002154e-05, 1.9499999999998685e-05,...</msg>
<status status="PASS" starttime="20201029 09:35:09.229" endtime="20201029 09:35:09.233"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:35:09.238" level="INFO">NAME: 4-timer-trace</msg>
<status status="PASS" starttime="20201029 09:35:09.236" endtime="20201029 09:35:09.238"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:35:09.240" level="INFO">VALUE: [1.961100000000271e-05, 1.9499999999998685e-05, 1.9486000000002585e-05, 1.9499999999998685e-05, 1.9500000000002154e-05, 1.9527999999997825e-05, 1.9500000000002154e-05, 1.9499999999998685e-05, 1.9513999999998255e-05, 1.9541999999997395e-05, 1.9513999999998255e-05, 1.9499999999998685e-05, 1.9513999999998255e-05, 1.9444000000000405e-05, 1.9513999999998255e-05, 1.9485999999999115e-05, 1.9499999999998685e-05, 1.9416000000001266e-05, 1.9485999999999115e-05, 1.9500000000002154e-05, 1.9485999999999115e-05, 1.9486000000002585e-05, 1.9513999999998255e-05, 1.9500000000002154e-05, 1.9499999999998685e-05, 1.9486000000002585e-05, 1.9485999999999115e-05, 1.9500000000002154e-05, 1.9513999999998255e-05, 1.9500000000002154e-05, 1.9485999999999115e-05, 1.9500000000002154e-05, 1.9499999999998685e-05, 1.9500000000002154e-05, 1.9499999999998685e-05, 1.9486000000002585e-05, 1.9499999999998685e-05, 1.9500000000002154e-05, 1.9527999999997825e-05, 1.9500000000002154e-05, 1.9499999999998685e-05, 1.9500000000002154e-05, 1.954099999999792e-05, 1.9486000000002585e-05, 1.955499999999749e-05, 1.9500000000002154e-05, 1.9485999999999115e-05, 1.9514000000001724e-05, 1.9499999999998685e-05, 1.9499999999998685e-05]</msg>
<status status="PASS" starttime="20201029 09:35:09.239" endtime="20201029 09:35:09.241"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:09.234" endtime="20201029 09:35:09.241"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:08.890" endtime="20201029 09:35:09.242"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:08.867" endtime="20201029 09:35:09.242"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:35:09.244" endtime="20201029 09:35:09.264"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:09.243" endtime="20201029 09:35:09.264"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:09.273" endtime="20201029 09:35:09.283"></status>
</kw>
<msg timestamp="20201029 09:35:09.284" level="INFO">${RESULT} = {'cmd': 'list_ops 5', 'msg': ['list_ops 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:09.271" endtime="20201029 09:35:09.284"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:09.287" level="INFO">${RESULT} = {'cmd': 'list_ops 5', 'msg': ['list_ops 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:09.285" endtime="20201029 09:35:09.287"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:09.288" endtime="20201029 09:35:09.290"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:09.268" endtime="20201029 09:35:09.290"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:09.266" endtime="20201029 09:35:09.291"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:09.298" endtime="20201029 09:35:09.605"></status>
</kw>
<msg timestamp="20201029 09:35:09.609" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017104319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017130014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:09.296" endtime="20201029 09:35:09.609"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:09.617" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017104319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017130014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:09.610" endtime="20201029 09:35:09.618"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:09.618" endtime="20201029 09:35:09.621"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:09.294" endtime="20201029 09:35:09.622"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:09.291" endtime="20201029 09:35:09.622"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:35:09.626" level="INFO">${PHILIP_RES} = [{'diff': 2.569499999999919e-05}, {'diff': 2.5569999999999066e-05}, {'diff': 2.5500000000001216e-05}, {'diff': 2.5583999999998636e-05}, {'diff': 2.5569999999999066e-05}, {'diff': 2.5555999999999496e-0...</msg>
<status status="PASS" starttime="20201029 09:35:09.623" endtime="20201029 09:35:09.626"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:35:09.630" level="INFO">${RESULT} = {'diff': [2.569499999999919e-05, 2.5569999999999066e-05, 2.5500000000001216e-05, 2.5583999999998636e-05, 2.5569999999999066e-05, 2.5555999999999496e-05, 2.5610999999998302e-05, 2.5569999999999066e-05,...</msg>
<status status="PASS" starttime="20201029 09:35:09.627" endtime="20201029 09:35:09.631"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:35:09.635" level="INFO">NAME: 5-timer-trace</msg>
<status status="PASS" starttime="20201029 09:35:09.634" endtime="20201029 09:35:09.635"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:35:09.638" level="INFO">VALUE: [2.569499999999919e-05, 2.5569999999999066e-05, 2.5500000000001216e-05, 2.5583999999998636e-05, 2.5569999999999066e-05, 2.5555999999999496e-05, 2.5610999999998302e-05, 2.5569999999999066e-05, 2.5582999999999162e-05, 2.5583999999998636e-05, 2.5555999999999496e-05, 2.561100000000177e-05, 2.5570000000002535e-05, 2.5570000000002535e-05, 2.5570000000002535e-05, 2.5582999999999162e-05, 2.5568999999999592e-05, 2.5555000000000022e-05, 2.5568999999999592e-05, 2.5568999999999592e-05, 2.5582999999999162e-05, 2.5528000000000356e-05, 2.5568999999999592e-05, 2.5568999999999592e-05, 2.5582999999999162e-05, 2.5582999999999162e-05, 2.5541999999999926e-05, 2.5582999999999162e-05, 2.5624999999997872e-05, 2.5610999999998302e-05, 2.558300000000263e-05, 2.558300000000263e-05, 2.558300000000263e-05, 2.5513999999997317e-05, 2.558300000000263e-05, 2.5584000000002105e-05, 2.5569999999999066e-05, 2.5555999999999496e-05, 2.5597999999998206e-05, 2.5555999999999496e-05, 2.5541999999999926e-05, 2.5528000000000356e-05, 2.5597999999998206e-05, 2.5569999999999066e-05, 2.5583999999998636e-05, 2.5555999999999496e-05, 2.5569999999999066e-05, 2.5555999999999496e-05, 2.5582999999999162e-05, 2.5527000000000882e-05]</msg>
<status status="PASS" starttime="20201029 09:35:09.636" endtime="20201029 09:35:09.638"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:09.631" endtime="20201029 09:35:09.639"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:09.265" endtime="20201029 09:35:09.639"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:09.242" endtime="20201029 09:35:09.639"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:35:09.642" endtime="20201029 09:35:09.661"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:09.640" endtime="20201029 09:35:09.662"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:09.671" endtime="20201029 09:35:09.680"></status>
</kw>
<msg timestamp="20201029 09:35:09.681" level="INFO">${RESULT} = {'cmd': 'list_ops 6', 'msg': ['list_ops 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:09.668" endtime="20201029 09:35:09.681"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:09.683" level="INFO">${RESULT} = {'cmd': 'list_ops 6', 'msg': ['list_ops 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:09.682" endtime="20201029 09:35:09.684"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:09.684" endtime="20201029 09:35:09.687"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:09.666" endtime="20201029 09:35:09.687"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:09.664" endtime="20201029 09:35:09.688"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:09.695" endtime="20201029 09:35:09.981"></status>
</kw>
<msg timestamp="20201029 09:35:09.984" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017544278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017576653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:09.693" endtime="20201029 09:35:09.985"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:09.993" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017544278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017576653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:09.986" endtime="20201029 09:35:09.993"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:09.994" endtime="20201029 09:35:09.996"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:09.690" endtime="20201029 09:35:09.996"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:09.689" endtime="20201029 09:35:09.997"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:35:10.001" level="INFO">${PHILIP_RES} = [{'diff': 3.237500000000115e-05}, {'diff': 3.22640000000006e-05}, {'diff': 3.225000000000103e-05}, {'diff': 3.2263000000001124e-05}, {'diff': 3.232000000000235e-05}, {'diff': 3.220899999999832e-05}, {...</msg>
<status status="PASS" starttime="20201029 09:35:09.998" endtime="20201029 09:35:10.001"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:35:10.005" level="INFO">${RESULT} = {'diff': [3.237500000000115e-05, 3.22640000000006e-05, 3.225000000000103e-05, 3.2263000000001124e-05, 3.232000000000235e-05, 3.220899999999832e-05, 3.22640000000006e-05, 3.223599999999799e-05, 3.22499...</msg>
<status status="PASS" starttime="20201029 09:35:10.002" endtime="20201029 09:35:10.006"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:35:10.010" level="INFO">NAME: 6-timer-trace</msg>
<status status="PASS" starttime="20201029 09:35:10.009" endtime="20201029 09:35:10.010"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:35:10.013" level="INFO">VALUE: [3.237500000000115e-05, 3.22640000000006e-05, 3.225000000000103e-05, 3.2263000000001124e-05, 3.232000000000235e-05, 3.220899999999832e-05, 3.22640000000006e-05, 3.223599999999799e-05, 3.224999999999756e-05, 3.231999999999888e-05, 3.225000000000103e-05, 3.225000000000103e-05, 3.2304999999999834e-05, 3.225000000000103e-05, 3.227800000000017e-05, 3.225000000000103e-05, 3.231900000000287e-05, 3.22640000000006e-05, 3.225000000000103e-05, 3.224999999999756e-05, 3.224999999999756e-05, 3.227800000000017e-05, 3.2277000000000694e-05, 3.225000000000103e-05, 3.225000000000103e-05, 3.22640000000006e-05, 3.222199999999842e-05, 3.225000000000103e-05, 3.225000000000103e-05, 3.2318999999999404e-05, 3.223600000000146e-05, 3.223599999999799e-05, 3.22640000000006e-05, 3.22640000000006e-05, 3.225000000000103e-05, 3.227800000000017e-05, 3.223600000000146e-05, 3.225000000000103e-05, 3.222199999999842e-05, 3.2304999999999834e-05, 3.225000000000103e-05, 3.222299999999789e-05, 3.223599999999799e-05, 3.224999999999756e-05, 3.22640000000006e-05, 3.225000000000103e-05, 3.2277000000000694e-05, 3.225000000000103e-05, 3.225000000000103e-05, 3.225000000000103e-05]</msg>
<status status="PASS" starttime="20201029 09:35:10.011" endtime="20201029 09:35:10.014"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:10.006" endtime="20201029 09:35:10.014"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:09.662" endtime="20201029 09:35:10.015"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:09.639" endtime="20201029 09:35:10.015"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:35:10.017" endtime="20201029 09:35:10.037"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:10.016" endtime="20201029 09:35:10.037"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:10.046" endtime="20201029 09:35:10.057"></status>
</kw>
<msg timestamp="20201029 09:35:10.057" level="INFO">${RESULT} = {'cmd': 'list_ops 7', 'msg': ['list_ops 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:10.045" endtime="20201029 09:35:10.058"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:10.060" level="INFO">${RESULT} = {'cmd': 'list_ops 7', 'msg': ['list_ops 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:10.059" endtime="20201029 09:35:10.060"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:10.061" endtime="20201029 09:35:10.063"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:10.042" endtime="20201029 09:35:10.063"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:10.040" endtime="20201029 09:35:10.064"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:10.071" endtime="20201029 09:35:10.358"></status>
</kw>
<msg timestamp="20201029 09:35:10.361" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017632083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017671764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:10.069" endtime="20201029 09:35:10.361"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:10.370" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017632083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017671764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:10.362" endtime="20201029 09:35:10.370"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:10.371" endtime="20201029 09:35:10.373"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:10.066" endtime="20201029 09:35:10.373"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:10.065" endtime="20201029 09:35:10.374"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:35:10.378" level="INFO">${PHILIP_RES} = [{'diff': 3.9680999999999744e-05}, {'diff': 3.9555000000000146e-05}, {'diff': 3.9582999999999285e-05}, {'diff': 3.954200000000005e-05}, {'diff': 3.948600000000177e-05}, {'diff': 3.952800000000048e-05}...</msg>
<status status="PASS" starttime="20201029 09:35:10.374" endtime="20201029 09:35:10.378"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:35:10.383" level="INFO">${RESULT} = {'diff': [3.9680999999999744e-05, 3.9555000000000146e-05, 3.9582999999999285e-05, 3.954200000000005e-05, 3.948600000000177e-05, 3.952800000000048e-05, 3.951399999999744e-05, 3.949999999999787e-05, 3.9...</msg>
<status status="PASS" starttime="20201029 09:35:10.379" endtime="20201029 09:35:10.383"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:35:10.387" level="INFO">NAME: 7-timer-trace</msg>
<status status="PASS" starttime="20201029 09:35:10.386" endtime="20201029 09:35:10.388"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:35:10.390" level="INFO">VALUE: [3.9680999999999744e-05, 3.9555000000000146e-05, 3.9582999999999285e-05, 3.954200000000005e-05, 3.948600000000177e-05, 3.952800000000048e-05, 3.951399999999744e-05, 3.949999999999787e-05, 3.954200000000005e-05, 3.951400000000091e-05, 3.9541000000000576e-05, 3.954200000000005e-05, 3.954200000000005e-05, 3.9555000000000146e-05, 3.952800000000048e-05, 3.952800000000048e-05, 3.9555000000000146e-05, 3.954200000000005e-05, 3.949999999999787e-05, 3.9541000000000576e-05, 3.952800000000048e-05, 3.94859999999983e-05, 3.9555000000000146e-05, 3.9625000000001465e-05, 3.952800000000048e-05, 3.9541000000000576e-05, 3.954200000000005e-05, 3.955599999999962e-05, 3.9568999999999716e-05, 3.949999999999787e-05, 3.961200000000137e-05, 3.9541000000000576e-05, 3.954200000000005e-05, 3.954200000000005e-05, 3.9555000000000146e-05, 3.952800000000048e-05, 3.954200000000005e-05, 3.952800000000048e-05, 3.952800000000048e-05, 3.954200000000005e-05, 3.954200000000005e-05, 3.952800000000048e-05, 3.9541000000000576e-05, 3.9555000000000146e-05, 3.956999999999919e-05, 3.952800000000048e-05, 3.954200000000005e-05, 3.955599999999962e-05, 3.9541000000000576e-05, 3.951400000000091e-05]</msg>
<status status="PASS" starttime="20201029 09:35:10.388" endtime="20201029 09:35:10.390"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:10.384" endtime="20201029 09:35:10.391"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:10.038" endtime="20201029 09:35:10.391"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:10.015" endtime="20201029 09:35:10.391"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:35:10.394" endtime="20201029 09:35:10.413"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:10.392" endtime="20201029 09:35:10.414"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:10.423" endtime="20201029 09:35:10.434"></status>
</kw>
<msg timestamp="20201029 09:35:10.434" level="INFO">${RESULT} = {'cmd': 'list_ops 8', 'msg': ['list_ops 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:10.421" endtime="20201029 09:35:10.434"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:10.437" level="INFO">${RESULT} = {'cmd': 'list_ops 8', 'msg': ['list_ops 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:10.435" endtime="20201029 09:35:10.437"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:10.438" endtime="20201029 09:35:10.439"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:10.419" endtime="20201029 09:35:10.440"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:10.416" endtime="20201029 09:35:10.440"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:10.447" endtime="20201029 09:35:10.737"></status>
</kw>
<msg timestamp="20201029 09:35:10.740" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017639972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0176875, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 09:35:10.446" endtime="20201029 09:35:10.740"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:10.749" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017639972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0176875, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 09:35:10.741" endtime="20201029 09:35:10.749"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:10.750" endtime="20201029 09:35:10.752"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:10.443" endtime="20201029 09:35:10.752"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:10.441" endtime="20201029 09:35:10.753"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:35:10.757" level="INFO">${PHILIP_RES} = [{'diff': 4.752799999999807e-05}, {'diff': 4.743000000000108e-05}, {'diff': 4.742999999999761e-05}, {'diff': 4.7445000000000126e-05}, {'diff': 4.7445000000000126e-05}, {'diff': 4.743000000000108e-05},...</msg>
<status status="PASS" starttime="20201029 09:35:10.753" endtime="20201029 09:35:10.757"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:35:10.761" level="INFO">${RESULT} = {'diff': [4.752799999999807e-05, 4.743000000000108e-05, 4.742999999999761e-05, 4.7445000000000126e-05, 4.7445000000000126e-05, 4.743000000000108e-05, 4.744400000000065e-05, 4.7430999999997087e-05, 4.7...</msg>
<status status="PASS" starttime="20201029 09:35:10.758" endtime="20201029 09:35:10.761"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:35:10.766" level="INFO">NAME: 8-timer-trace</msg>
<status status="PASS" starttime="20201029 09:35:10.764" endtime="20201029 09:35:10.766"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:35:10.768" level="INFO">VALUE: [4.752799999999807e-05, 4.743000000000108e-05, 4.742999999999761e-05, 4.7445000000000126e-05, 4.7445000000000126e-05, 4.743000000000108e-05, 4.744400000000065e-05, 4.7430999999997087e-05, 4.7431000000000556e-05, 4.7459000000003165e-05, 4.743000000000108e-05, 4.744400000000065e-05, 4.7458999999999696e-05, 4.744400000000065e-05, 4.741599999999804e-05, 4.7417000000000986e-05, 4.7431000000000556e-05, 4.7431000000000556e-05, 4.743000000000108e-05, 4.742999999999761e-05, 4.7431000000000556e-05, 4.7472999999999266e-05, 4.743000000000108e-05, 4.741600000000151e-05, 4.741699999999752e-05, 4.7431000000000556e-05, 4.742999999999761e-05, 4.734699999999967e-05, 4.7431000000000556e-05, 4.7431000000000556e-05, 4.744400000000065e-05, 4.741599999999804e-05, 4.744400000000065e-05, 4.7431000000000556e-05, 4.7417000000000986e-05, 4.743000000000108e-05, 4.742999999999761e-05, 4.7445000000000126e-05, 4.7459000000003165e-05, 4.743000000000108e-05, 4.743000000000108e-05, 4.7431000000000556e-05, 4.7431000000000556e-05, 4.742999999999761e-05, 4.7375000000002276e-05, 4.7431000000000556e-05, 4.7417000000000986e-05, 4.7431000000000556e-05, 4.745800000000022e-05, 4.744400000000065e-05]</msg>
<status status="PASS" starttime="20201029 09:35:10.767" endtime="20201029 09:35:10.769"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:10.762" endtime="20201029 09:35:10.769"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:10.415" endtime="20201029 09:35:10.769"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:10.392" endtime="20201029 09:35:10.770"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:35:10.772" endtime="20201029 09:35:10.792"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:10.771" endtime="20201029 09:35:10.792"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:10.801" endtime="20201029 09:35:10.814"></status>
</kw>
<msg timestamp="20201029 09:35:10.814" level="INFO">${RESULT} = {'cmd': 'list_ops 9', 'msg': ['list_ops 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:10.799" endtime="20201029 09:35:10.814"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:10.817" level="INFO">${RESULT} = {'cmd': 'list_ops 9', 'msg': ['list_ops 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:10.815" endtime="20201029 09:35:10.817"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:10.818" endtime="20201029 09:35:10.820"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:10.797" endtime="20201029 09:35:10.821"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:10.795" endtime="20201029 09:35:10.821"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:10.828" endtime="20201029 09:35:11.115"></status>
</kw>
<msg timestamp="20201029 09:35:11.118" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017685278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017741333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:10.826" endtime="20201029 09:35:11.118"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:11.127" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017685278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017741333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:11.119" endtime="20201029 09:35:11.127"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:11.128" endtime="20201029 09:35:11.129"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:10.824" endtime="20201029 09:35:11.130"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:10.822" endtime="20201029 09:35:11.130"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:35:11.135" level="INFO">${PHILIP_RES} = [{'diff': 5.605500000000277e-05}, {'diff': 5.593099999999865e-05}, {'diff': 5.593100000000212e-05}, {'diff': 5.5929999999999175e-05}, {'diff': 5.5943999999998745e-05}, {'diff': 5.587500000000037e-05},...</msg>
<status status="PASS" starttime="20201029 09:35:11.131" endtime="20201029 09:35:11.135"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:35:11.139" level="INFO">${RESULT} = {'diff': [5.605500000000277e-05, 5.593099999999865e-05, 5.593100000000212e-05, 5.5929999999999175e-05, 5.5943999999998745e-05, 5.587500000000037e-05, 5.594499999999822e-05, 5.5943999999998745e-05, 5.5...</msg>
<status status="PASS" starttime="20201029 09:35:11.136" endtime="20201029 09:35:11.139"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:35:11.143" level="INFO">NAME: 9-timer-trace</msg>
<status status="PASS" starttime="20201029 09:35:11.142" endtime="20201029 09:35:11.144"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:35:11.146" level="INFO">VALUE: [5.605500000000277e-05, 5.593099999999865e-05, 5.593100000000212e-05, 5.5929999999999175e-05, 5.5943999999998745e-05, 5.587500000000037e-05, 5.594499999999822e-05, 5.5943999999998745e-05, 5.5887999999996996e-05, 5.593099999999865e-05, 5.5958000000001784e-05, 5.5929999999999175e-05, 5.5957999999998315e-05, 5.588899999999994e-05, 5.5929999999999175e-05, 5.6014000000000064e-05, 5.591699999999908e-05, 5.594500000000169e-05, 5.5929999999999175e-05, 5.5957999999998315e-05, 5.593100000000212e-05, 5.594499999999822e-05, 5.5943999999998745e-05, 5.587500000000037e-05, 5.593099999999865e-05, 5.591700000000255e-05, 5.5943999999998745e-05, 5.593099999999865e-05, 5.594500000000169e-05, 5.5929999999999175e-05, 5.5944000000002214e-05, 5.591699999999908e-05, 5.594499999999822e-05, 5.5916000000003074e-05, 5.5943999999998745e-05, 5.591699999999908e-05, 5.5929999999999175e-05, 5.5957999999998315e-05, 5.5958000000001784e-05, 5.594499999999822e-05, 5.588899999999994e-05, 5.5943999999998745e-05, 5.594499999999822e-05, 5.593100000000212e-05, 5.5943999999998745e-05, 5.593099999999865e-05, 5.593099999999865e-05, 5.5929999999999175e-05, 5.5944000000002214e-05, 5.58749999999969e-05]</msg>
<status status="PASS" starttime="20201029 09:35:11.144" endtime="20201029 09:35:11.147"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:11.140" endtime="20201029 09:35:11.148"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:10.793" endtime="20201029 09:35:11.148"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:10.770" endtime="20201029 09:35:11.148"></status>
</kw>
<kw name="${n} = 10" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:35:11.151" endtime="20201029 09:35:11.171"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:11.149" endtime="20201029 09:35:11.171"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:11.180" endtime="20201029 09:35:11.191"></status>
</kw>
<msg timestamp="20201029 09:35:11.192" level="INFO">${RESULT} = {'cmd': 'list_ops 10', 'msg': ['list_ops 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:11.178" endtime="20201029 09:35:11.192"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:11.194" level="INFO">${RESULT} = {'cmd': 'list_ops 10', 'msg': ['list_ops 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:11.193" endtime="20201029 09:35:11.195"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:11.196" endtime="20201029 09:35:11.197"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:11.175" endtime="20201029 09:35:11.198"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:11.173" endtime="20201029 09:35:11.198"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:11.205" endtime="20201029 09:35:11.492"></status>
</kw>
<msg timestamp="20201029 09:35:11.495" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017434625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017499778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:11.203" endtime="20201029 09:35:11.495"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:11.504" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017434625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017499778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:11.496" endtime="20201029 09:35:11.504"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:11.505" endtime="20201029 09:35:11.507"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:11.201" endtime="20201029 09:35:11.507"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:11.199" endtime="20201029 09:35:11.508"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:35:11.512" level="INFO">${PHILIP_RES} = [{'diff': 6.515300000000182e-05}, {'diff': 6.50700000000004e-05}, {'diff': 6.505600000000084e-05}, {'diff': 6.502799999999823e-05}, {'diff': 6.504200000000127e-05}, {'diff': 6.502799999999823e-05}, {'...</msg>
<status status="PASS" starttime="20201029 09:35:11.508" endtime="20201029 09:35:11.512"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:35:11.517" level="INFO">${RESULT} = {'diff': [6.515300000000182e-05, 6.50700000000004e-05, 6.505600000000084e-05, 6.502799999999823e-05, 6.504200000000127e-05, 6.502799999999823e-05, 6.50280000000017e-05, 6.504200000000127e-05, 6.505500...</msg>
<status status="PASS" starttime="20201029 09:35:11.513" endtime="20201029 09:35:11.517"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:35:11.522" level="INFO">NAME: 10-timer-trace</msg>
<status status="PASS" starttime="20201029 09:35:11.520" endtime="20201029 09:35:11.522"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:35:11.524" level="INFO">VALUE: [6.515300000000182e-05, 6.50700000000004e-05, 6.505600000000084e-05, 6.502799999999823e-05, 6.504200000000127e-05, 6.502799999999823e-05, 6.50280000000017e-05, 6.504200000000127e-05, 6.505500000000136e-05, 6.504200000000127e-05, 6.504100000000179e-05, 6.504200000000127e-05, 6.509799999999955e-05, 6.501399999999866e-05, 6.50419999999978e-05, 6.498599999999952e-05, 6.502799999999823e-05, 6.50280000000017e-05, 6.50419999999978e-05, 6.504100000000179e-05, 6.502799999999823e-05, 6.502700000000222e-05, 6.505599999999737e-05, 6.511099999999964e-05, 6.50419999999978e-05, 6.504200000000127e-05, 6.499999999999909e-05, 6.500000000000256e-05, 6.502799999999823e-05, 6.504200000000127e-05, 6.509700000000007e-05, 6.504200000000127e-05, 6.502699999999875e-05, 6.502799999999823e-05, 6.505500000000136e-05, 6.50419999999978e-05, 6.504200000000127e-05, 6.505499999999789e-05, 6.504200000000127e-05, 6.509700000000007e-05, 6.501400000000213e-05, 6.505499999999789e-05, 6.504200000000127e-05, 6.499999999999909e-05, 6.505600000000084e-05, 6.501399999999866e-05, 6.504200000000127e-05, 6.505600000000084e-05, 6.50280000000017e-05, 6.505600000000084e-05]</msg>
<status status="PASS" starttime="20201029 09:35:11.523" endtime="20201029 09:35:11.525"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:11.518" endtime="20201029 09:35:11.525"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:11.172" endtime="20201029 09:35:11.526"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:11.149" endtime="20201029 09:35:11.531"></status>
</kw>
<kw name="${n} = 11" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:35:11.534" endtime="20201029 09:35:11.553"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:11.532" endtime="20201029 09:35:11.554"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:11.563" endtime="20201029 09:35:11.577"></status>
</kw>
<msg timestamp="20201029 09:35:11.577" level="INFO">${RESULT} = {'cmd': 'list_ops 11', 'msg': ['list_ops 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:11.561" endtime="20201029 09:35:11.577"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:11.580" level="INFO">${RESULT} = {'cmd': 'list_ops 11', 'msg': ['list_ops 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:11.578" endtime="20201029 09:35:11.580"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:11.581" endtime="20201029 09:35:11.583"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:11.558" endtime="20201029 09:35:11.583"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:11.556" endtime="20201029 09:35:11.584"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:11.590" endtime="20201029 09:35:11.877"></status>
</kw>
<msg timestamp="20201029 09:35:11.880" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017275958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017350833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:11.589" endtime="20201029 09:35:11.880"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:11.888" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017275958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017350833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:11.881" endtime="20201029 09:35:11.889"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:11.889" endtime="20201029 09:35:11.892"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:11.586" endtime="20201029 09:35:11.893"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:11.584" endtime="20201029 09:35:11.893"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:35:11.897" level="INFO">${PHILIP_RES} = [{'diff': 7.487499999999855e-05}, {'diff': 7.474999999999843e-05}, {'diff': 7.477799999999757e-05}, {'diff': 7.479199999999714e-05}, {'diff': 7.483299999999984e-05}, {'diff': 7.473599999999886e-05}, {...</msg>
<status status="PASS" starttime="20201029 09:35:11.894" endtime="20201029 09:35:11.898"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:35:11.902" level="INFO">${RESULT} = {'diff': [7.487499999999855e-05, 7.474999999999843e-05, 7.477799999999757e-05, 7.479199999999714e-05, 7.483299999999984e-05, 7.473599999999886e-05, 7.477799999999757e-05, 7.477799999999757e-05, 7.4749...</msg>
<status status="PASS" starttime="20201029 09:35:11.898" endtime="20201029 09:35:11.902"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:35:11.907" level="INFO">NAME: 11-timer-trace</msg>
<status status="PASS" starttime="20201029 09:35:11.906" endtime="20201029 09:35:11.907"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:35:11.910" level="INFO">VALUE: [7.487499999999855e-05, 7.474999999999843e-05, 7.477799999999757e-05, 7.479199999999714e-05, 7.483299999999984e-05, 7.473599999999886e-05, 7.477799999999757e-05, 7.477799999999757e-05, 7.474999999999843e-05, 7.4763999999998e-05, 7.474999999999843e-05, 7.479200000000061e-05, 7.4763999999998e-05, 7.476299999999853e-05, 7.47500000000019e-05, 7.4763999999998e-05, 7.473600000000233e-05, 7.476400000000147e-05, 7.47500000000019e-05, 7.480600000000018e-05, 7.476400000000147e-05, 7.470900000000266e-05, 7.476400000000147e-05, 7.476400000000147e-05, 7.47500000000019e-05, 7.48050000000007e-05, 7.476400000000147e-05, 7.472199999999929e-05, 7.484800000000236e-05, 7.476400000000147e-05, 7.47500000000019e-05, 7.476299999999853e-05, 7.476400000000147e-05, 7.470799999999972e-05, 7.469499999999962e-05, 7.4763999999998e-05, 7.481900000000027e-05, 7.476400000000147e-05, 7.4763999999998e-05, 7.470899999999919e-05, 7.480499999999723e-05, 7.474999999999843e-05, 7.4763999999998e-05, 7.4763999999998e-05, 7.474999999999843e-05, 7.479200000000061e-05, 7.474999999999843e-05, 7.4763999999998e-05, 7.4763999999998e-05, 7.47500000000019e-05]</msg>
<status status="PASS" starttime="20201029 09:35:11.908" endtime="20201029 09:35:11.910"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:11.903" endtime="20201029 09:35:11.911"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:11.555" endtime="20201029 09:35:11.912"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:11.532" endtime="20201029 09:35:11.912"></status>
</kw>
<kw name="${n} = 12" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:35:11.915" endtime="20201029 09:35:11.934"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:11.913" endtime="20201029 09:35:11.935"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:11.943" endtime="20201029 09:35:11.958"></status>
</kw>
<msg timestamp="20201029 09:35:11.958" level="INFO">${RESULT} = {'cmd': 'list_ops 12', 'msg': ['list_ops 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:11.942" endtime="20201029 09:35:11.958"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:11.961" level="INFO">${RESULT} = {'cmd': 'list_ops 12', 'msg': ['list_ops 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:11.959" endtime="20201029 09:35:11.961"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:11.962" endtime="20201029 09:35:11.965"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:11.939" endtime="20201029 09:35:11.965"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:11.937" endtime="20201029 09:35:11.966"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:11.972" endtime="20201029 09:35:12.257"></status>
</kw>
<msg timestamp="20201029 09:35:12.261" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017140833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017226042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:11.971" endtime="20201029 09:35:12.261"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:12.269" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017140833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017226042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:12.262" endtime="20201029 09:35:12.270"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:12.271" endtime="20201029 09:35:12.272"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:11.968" endtime="20201029 09:35:12.273"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:11.966" endtime="20201029 09:35:12.273"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:35:12.277" level="INFO">${PHILIP_RES} = [{'diff': 8.520899999999929e-05}, {'diff': 8.509699999999926e-05}, {'diff': 8.506900000000012e-05}, {'diff': 8.508300000000316e-05}, {'diff': 8.509799999999873e-05}, {'diff': 8.51249999999984e-05}, {'...</msg>
<status status="PASS" starttime="20201029 09:35:12.274" endtime="20201029 09:35:12.278"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:35:12.282" level="INFO">${RESULT} = {'diff': [8.520899999999929e-05, 8.509699999999926e-05, 8.506900000000012e-05, 8.508300000000316e-05, 8.509799999999873e-05, 8.51249999999984e-05, 8.512500000000187e-05, 8.506900000000012e-05, 8.50699...</msg>
<status status="PASS" starttime="20201029 09:35:12.278" endtime="20201029 09:35:12.282"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:35:12.286" level="INFO">NAME: 12-timer-trace</msg>
<status status="PASS" starttime="20201029 09:35:12.285" endtime="20201029 09:35:12.287"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:35:12.289" level="INFO">VALUE: [8.520899999999929e-05, 8.509699999999926e-05, 8.506900000000012e-05, 8.508300000000316e-05, 8.509799999999873e-05, 8.51249999999984e-05, 8.512500000000187e-05, 8.506900000000012e-05, 8.506999999999959e-05, 8.506900000000012e-05, 8.508299999999969e-05, 8.508300000000316e-05, 8.506999999999959e-05, 8.509699999999926e-05, 8.509699999999926e-05, 8.51249999999984e-05, 8.51249999999984e-05, 8.506999999999959e-05, 8.505499999999708e-05, 8.506900000000012e-05, 8.509799999999873e-05, 8.51110000000023e-05, 8.506900000000012e-05, 8.508299999999969e-05, 8.51249999999984e-05, 8.509699999999926e-05, 8.508300000000316e-05, 8.509699999999926e-05, 8.508399999999916e-05, 8.508399999999916e-05, 8.506900000000012e-05, 8.508299999999969e-05, 8.508399999999916e-05, 8.5153000000001e-05, 8.504200000000045e-05, 8.509699999999926e-05, 8.502699999999794e-05, 8.511200000000177e-05, 8.509699999999926e-05, 8.505500000000055e-05, 8.509699999999926e-05, 8.508400000000263e-05, 8.508299999999969e-05, 8.508299999999969e-05, 8.508299999999969e-05, 8.507000000000306e-05, 8.506900000000012e-05, 8.509699999999926e-05, 8.508299999999969e-05, 8.506999999999959e-05]</msg>
<status status="PASS" starttime="20201029 09:35:12.287" endtime="20201029 09:35:12.290"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:12.283" endtime="20201029 09:35:12.291"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:11.935" endtime="20201029 09:35:12.291"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:11.913" endtime="20201029 09:35:12.292"></status>
</kw>
<kw name="${n} = 13" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:35:12.294" endtime="20201029 09:35:12.314"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:12.293" endtime="20201029 09:35:12.314"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:12.323" endtime="20201029 09:35:12.338"></status>
</kw>
<msg timestamp="20201029 09:35:12.339" level="INFO">${RESULT} = {'cmd': 'list_ops 13', 'msg': ['list_ops 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:12.321" endtime="20201029 09:35:12.339"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:12.342" level="INFO">${RESULT} = {'cmd': 'list_ops 13', 'msg': ['list_ops 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:12.340" endtime="20201029 09:35:12.342"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:12.343" endtime="20201029 09:35:12.344"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:12.318" endtime="20201029 09:35:12.345"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:12.316" endtime="20201029 09:35:12.345"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:12.352" endtime="20201029 09:35:12.639"></status>
</kw>
<msg timestamp="20201029 09:35:12.642" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018094542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018190708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:12.350" endtime="20201029 09:35:12.642"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:12.650" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018094542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018190708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:12.643" endtime="20201029 09:35:12.651"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:12.652" endtime="20201029 09:35:12.653"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:12.348" endtime="20201029 09:35:12.654"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:12.346" endtime="20201029 09:35:12.654"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:35:12.658" level="INFO">${PHILIP_RES} = [{'diff': 9.616599999999823e-05}, {'diff': 9.60140000000019e-05}, {'diff': 9.601399999999843e-05}, {'diff': 9.597199999999972e-05}, {'diff': 9.601399999999843e-05}, {'diff': 9.59859999999993e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 09:35:12.655" endtime="20201029 09:35:12.658"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:35:12.664" level="INFO">${RESULT} = {'diff': [9.616599999999823e-05, 9.60140000000019e-05, 9.601399999999843e-05, 9.597199999999972e-05, 9.601399999999843e-05, 9.59859999999993e-05, 9.600000000000233e-05, 9.60140000000019e-05, 9.6027999...</msg>
<status status="PASS" starttime="20201029 09:35:12.659" endtime="20201029 09:35:12.664"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:35:12.668" level="INFO">NAME: 13-timer-trace</msg>
<status status="PASS" starttime="20201029 09:35:12.667" endtime="20201029 09:35:12.668"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:35:12.671" level="INFO">VALUE: [9.616599999999823e-05, 9.60140000000019e-05, 9.601399999999843e-05, 9.597199999999972e-05, 9.601399999999843e-05, 9.59859999999993e-05, 9.600000000000233e-05, 9.60140000000019e-05, 9.6027999999998e-05, 9.59859999999993e-05, 9.602800000000147e-05, 9.60140000000019e-05, 9.602699999999853e-05, 9.604199999999757e-05, 9.601399999999843e-05, 9.601299999999896e-05, 9.601299999999896e-05, 9.59859999999993e-05, 9.597199999999972e-05, 9.597199999999972e-05, 9.604200000000104e-05, 9.598600000000276e-05, 9.6027000000002e-05, 9.6027999999998e-05, 9.601399999999843e-05, 9.601399999999843e-05, 9.599999999999886e-05, 9.602800000000147e-05, 9.599999999999886e-05, 9.599999999999886e-05, 9.6027999999998e-05, 9.601399999999843e-05, 9.60140000000019e-05, 9.60140000000019e-05, 9.60140000000019e-05, 9.599999999999886e-05, 9.602699999999853e-05, 9.599999999999886e-05, 9.599999999999886e-05, 9.60140000000019e-05, 9.602699999999853e-05, 9.6027999999998e-05, 9.599999999999886e-05, 9.601299999999896e-05, 9.600000000000233e-05, 9.60140000000019e-05, 9.601399999999843e-05, 9.599999999999886e-05, 9.601399999999843e-05, 9.600000000000233e-05]</msg>
<status status="PASS" starttime="20201029 09:35:12.669" endtime="20201029 09:35:12.672"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:12.664" endtime="20201029 09:35:12.672"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:12.315" endtime="20201029 09:35:12.673"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:12.292" endtime="20201029 09:35:12.673"></status>
</kw>
<kw name="${n} = 14" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:35:12.675" endtime="20201029 09:35:12.695"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:12.674" endtime="20201029 09:35:12.695"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:12.704" endtime="20201029 09:35:12.719"></status>
</kw>
<msg timestamp="20201029 09:35:12.720" level="INFO">${RESULT} = {'cmd': 'list_ops 14', 'msg': ['list_ops 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:12.702" endtime="20201029 09:35:12.720"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:12.722" level="INFO">${RESULT} = {'cmd': 'list_ops 14', 'msg': ['list_ops 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:12.721" endtime="20201029 09:35:12.723"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:12.723" endtime="20201029 09:35:12.725"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:12.699" endtime="20201029 09:35:12.726"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:12.697" endtime="20201029 09:35:12.726"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:12.733" endtime="20201029 09:35:13.019"></status>
</kw>
<msg timestamp="20201029 09:35:13.022" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01712, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017227681, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201029 09:35:12.731" endtime="20201029 09:35:13.022"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:13.030" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01712, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017227681, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201029 09:35:13.023" endtime="20201029 09:35:13.031"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:13.031" endtime="20201029 09:35:13.034"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:12.728" endtime="20201029 09:35:13.035"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:12.727" endtime="20201029 09:35:13.035"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:35:13.039" level="INFO">${PHILIP_RES} = [{'diff': 0.00010768100000000183}, {'diff': 0.00010754099999999919}, {'diff': 0.0001075279999999991}, {'diff': 0.00010754200000000214}, {'diff': 0.00010754099999999919}, {'diff': 0.0001075839999999973...</msg>
<status status="PASS" starttime="20201029 09:35:13.036" endtime="20201029 09:35:13.039"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:35:13.043" level="INFO">${RESULT} = {'diff': [0.00010768100000000183, 0.00010754099999999919, 0.0001075279999999991, 0.00010754200000000214, 0.00010754099999999919, 0.00010758399999999738, 0.00010754099999999919, 0.00010754200000000214,...</msg>
<status status="PASS" starttime="20201029 09:35:13.040" endtime="20201029 09:35:13.044"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:35:13.048" level="INFO">NAME: 14-timer-trace</msg>
<status status="PASS" starttime="20201029 09:35:13.047" endtime="20201029 09:35:13.048"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:35:13.050" level="INFO">VALUE: [0.00010768100000000183, 0.00010754099999999919, 0.0001075279999999991, 0.00010754200000000214, 0.00010754099999999919, 0.00010758399999999738, 0.00010754099999999919, 0.00010754200000000214, 0.0001075560000000017, 0.0001075279999999991, 0.00010754199999999867, 0.00010754099999999919, 0.00010755599999999824, 0.0001075690000000018, 0.00010754099999999919, 0.00010749999999999996, 0.00010752699999999962, 0.0001075560000000017, 0.00010754199999999867, 0.0001075279999999991, 0.0001075560000000017, 0.00010752699999999962, 0.0001075560000000017, 0.00010754199999999867, 0.00010754099999999919, 0.00010755599999999824, 0.00010754100000000266, 0.00010754199999999867, 0.00010755599999999824, 0.0001075829999999979, 0.0001075560000000017, 0.00010754099999999919, 0.00010755599999999824, 0.00010748699999999986, 0.00010755499999999876, 0.00010749999999999996, 0.00010751300000000005, 0.00010759800000000042, 0.0001075279999999991, 0.00010754099999999919, 0.0001075560000000017, 0.00010751300000000005, 0.00010755599999999824, 0.00010755499999999876, 0.0001075279999999991, 0.00010754200000000214, 0.00010763899999999965, 0.00010755599999999824, 0.0001075829999999979, 0.00010752800000000257]</msg>
<status status="PASS" starttime="20201029 09:35:13.049" endtime="20201029 09:35:13.051"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:13.044" endtime="20201029 09:35:13.052"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:12.696" endtime="20201029 09:35:13.052"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:12.673" endtime="20201029 09:35:13.052"></status>
</kw>
<kw name="${n} = 15" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:35:13.055" endtime="20201029 09:35:13.074"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:13.053" endtime="20201029 09:35:13.075"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:13.083" endtime="20201029 09:35:13.100"></status>
</kw>
<msg timestamp="20201029 09:35:13.100" level="INFO">${RESULT} = {'cmd': 'list_ops 15', 'msg': ['list_ops 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:13.082" endtime="20201029 09:35:13.100"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:13.103" level="INFO">${RESULT} = {'cmd': 'list_ops 15', 'msg': ['list_ops 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:13.101" endtime="20201029 09:35:13.103"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:13.104" endtime="20201029 09:35:13.106"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:13.079" endtime="20201029 09:35:13.107"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:13.077" endtime="20201029 09:35:13.107"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:13.114" endtime="20201029 09:35:13.401"></status>
</kw>
<msg timestamp="20201029 09:35:13.404" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017162556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017282361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:13.113" endtime="20201029 09:35:13.404"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:13.412" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017162556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017282361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:13.405" endtime="20201029 09:35:13.413"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:13.414" endtime="20201029 09:35:13.415"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:13.110" endtime="20201029 09:35:13.416"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:13.108" endtime="20201029 09:35:13.416"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:35:13.420" level="INFO">${PHILIP_RES} = [{'diff': 0.0001198050000000006}, {'diff': 0.00011969499999999952}, {'diff': 0.00011969400000000005}, {'diff': 0.00011969499999999952}, {'diff': 0.00011967999999999701}, {'diff': 0.0001196809999999999...</msg>
<status status="PASS" starttime="20201029 09:35:13.417" endtime="20201029 09:35:13.421"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:35:13.424" level="INFO">${RESULT} = {'diff': [0.0001198050000000006, 0.00011969499999999952, 0.00011969400000000005, 0.00011969499999999952, 0.00011967999999999701, 0.00011968099999999995, 0.00011969400000000005, 0.00011968099999999995,...</msg>
<status status="PASS" starttime="20201029 09:35:13.421" endtime="20201029 09:35:13.425"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:35:13.429" level="INFO">NAME: 15-timer-trace</msg>
<status status="PASS" starttime="20201029 09:35:13.428" endtime="20201029 09:35:13.429"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:35:13.432" level="INFO">VALUE: [0.0001198050000000006, 0.00011969499999999952, 0.00011969400000000005, 0.00011969499999999952, 0.00011967999999999701, 0.00011968099999999995, 0.00011969400000000005, 0.00011968099999999995, 0.00011969400000000005, 0.00011969499999999952, 0.00011969400000000005, 0.00011969499999999952, 0.0001197370000000017, 0.00011970799999999962, 0.00011965299999999734, 0.00011970799999999962, 0.0001197500000000018, 0.00011968099999999995, 0.00011969400000000005, 0.00011968099999999995, 0.000119695000000003, 0.00011969400000000005, 0.00011968099999999995, 0.00011969400000000005, 0.00011969400000000005, 0.00011969400000000005, 0.00011965300000000081, 0.00011968000000000048, 0.00011968099999999995, 0.00011969400000000005, 0.00011965300000000081, 0.00011969400000000005, 0.00011969499999999952, 0.00011969400000000005, 0.00011968099999999995, 0.00011967999999999701, 0.00011969499999999952, 0.00011966600000000091, 0.0001197089999999991, 0.00011969400000000005, 0.00011968099999999995, 0.00011963900000000124, 0.0001197089999999991, 0.00011969400000000005, 0.00011968099999999995, 0.00011976400000000137, 0.00011968099999999995, 0.0001196249999999982, 0.00011968099999999995, 0.00011969400000000005]</msg>
<status status="PASS" starttime="20201029 09:35:13.430" endtime="20201029 09:35:13.433"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:13.425" endtime="20201029 09:35:13.434"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:13.076" endtime="20201029 09:35:13.434"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:13.053" endtime="20201029 09:35:13.434"></status>
</kw>
<kw name="${n} = 16" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:35:13.437" endtime="20201029 09:35:13.456"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:13.435" endtime="20201029 09:35:13.457"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:13.465" endtime="20201029 09:35:13.481"></status>
</kw>
<msg timestamp="20201029 09:35:13.482" level="INFO">${RESULT} = {'cmd': 'list_ops 16', 'msg': ['list_ops 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:13.464" endtime="20201029 09:35:13.482"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:13.484" level="INFO">${RESULT} = {'cmd': 'list_ops 16', 'msg': ['list_ops 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:13.483" endtime="20201029 09:35:13.485"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:13.485" endtime="20201029 09:35:13.487"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:13.461" endtime="20201029 09:35:13.487"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:13.459" endtime="20201029 09:35:13.488"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:13.495" endtime="20201029 09:35:13.782"></status>
</kw>
<msg timestamp="20201029 09:35:13.785" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017989694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018122292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:13.493" endtime="20201029 09:35:13.786"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:13.796" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017989694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018122292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:13.787" endtime="20201029 09:35:13.797"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:13.798" endtime="20201029 09:35:13.800"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:13.490" endtime="20201029 09:35:13.801"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:13.489" endtime="20201029 09:35:13.801"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:35:13.805" level="INFO">${PHILIP_RES} = [{'diff': 0.00013259800000000113}, {'diff': 0.0001324579999999985}, {'diff': 0.00013237500000000055}, {'diff': 0.00013241699999999926}, {'diff': 0.00013244399999999892}, {'diff': 0.0001324309999999988...</msg>
<status status="PASS" starttime="20201029 09:35:13.802" endtime="20201029 09:35:13.805"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:35:13.810" level="INFO">${RESULT} = {'diff': [0.00013259800000000113, 0.0001324579999999985, 0.00013237500000000055, 0.00013241699999999926, 0.00013244399999999892, 0.00013243099999999883, 0.00013244399999999892, 0.0001324449999999984, ...</msg>
<status status="PASS" starttime="20201029 09:35:13.806" endtime="20201029 09:35:13.810"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:35:13.815" level="INFO">NAME: 16-timer-trace</msg>
<status status="PASS" starttime="20201029 09:35:13.814" endtime="20201029 09:35:13.815"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:35:13.817" level="INFO">VALUE: [0.00013259800000000113, 0.0001324579999999985, 0.00013237500000000055, 0.00013241699999999926, 0.00013244399999999892, 0.00013243099999999883, 0.00013244399999999892, 0.0001324449999999984, 0.00013245800000000196, 0.0001324449999999984, 0.00013241599999999978, 0.00013244500000000187, 0.00013243000000000282, 0.0001324310000000023, 0.0001324440000000024, 0.0001324440000000024, 0.00013243000000000282, 0.00013245800000000196, 0.0001324310000000023, 0.00013243099999999883, 0.00013244500000000187, 0.00013248599999999763, 0.00013243099999999883, 0.0001324579999999985, 0.00013243099999999883, 0.00013244399999999892, 0.00013251400000000024, 0.00013244399999999892, 0.00013243099999999883, 0.00013244399999999892, 0.0001324449999999984, 0.00013244399999999892, 0.0001324449999999984, 0.00013244399999999892, 0.00013244399999999892, 0.0001324579999999985, 0.00013242999999999935, 0.0001324310000000023, 0.00013245800000000196, 0.00013244500000000187, 0.00013245800000000196, 0.00013244500000000187, 0.0001324440000000024, 0.00013250000000000067, 0.0001324440000000024, 0.00013245900000000144, 0.00013242999999999935, 0.00013244500000000187, 0.0001324440000000024, 0.000132473000000001]</msg>
<status status="PASS" starttime="20201029 09:35:13.816" endtime="20201029 09:35:13.818"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:13.811" endtime="20201029 09:35:13.819"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:13.457" endtime="20201029 09:35:13.819"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:13.435" endtime="20201029 09:35:13.819"></status>
</kw>
<kw name="${n} = 17" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:35:13.822" endtime="20201029 09:35:13.841"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:13.820" endtime="20201029 09:35:13.842"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:13.850" endtime="20201029 09:35:13.867"></status>
</kw>
<msg timestamp="20201029 09:35:13.867" level="INFO">${RESULT} = {'cmd': 'list_ops 17', 'msg': ['list_ops 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:13.849" endtime="20201029 09:35:13.868"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:13.870" level="INFO">${RESULT} = {'cmd': 'list_ops 17', 'msg': ['list_ops 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:13.869" endtime="20201029 09:35:13.870"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:13.871" endtime="20201029 09:35:13.873"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:13.846" endtime="20201029 09:35:13.873"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:13.844" endtime="20201029 09:35:13.874"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:13.880" endtime="20201029 09:35:14.167"></status>
</kw>
<msg timestamp="20201029 09:35:14.170" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017335528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017481431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:13.879" endtime="20201029 09:35:14.170"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:14.178" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017335528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017481431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:14.171" endtime="20201029 09:35:14.179"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:14.180" endtime="20201029 09:35:14.181"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:13.876" endtime="20201029 09:35:14.182"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:13.874" endtime="20201029 09:35:14.182"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:35:14.186" level="INFO">${PHILIP_RES} = [{'diff': 0.0001459029999999993}, {'diff': 0.00014581899999999842}, {'diff': 0.00014579200000000223}, {'diff': 0.00014580599999999833}, {'diff': 0.00014579099999999928}, {'diff': 0.0001457920000000022...</msg>
<status status="PASS" starttime="20201029 09:35:14.183" endtime="20201029 09:35:14.187"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:35:14.190" level="INFO">${RESULT} = {'diff': [0.0001459029999999993, 0.00014581899999999842, 0.00014579200000000223, 0.00014580599999999833, 0.00014579099999999928, 0.00014579200000000223, 0.00014580599999999833, 0.00014580499999999885,...</msg>
<status status="PASS" starttime="20201029 09:35:14.187" endtime="20201029 09:35:14.191"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:35:14.195" level="INFO">NAME: 17-timer-trace</msg>
<status status="PASS" starttime="20201029 09:35:14.194" endtime="20201029 09:35:14.195"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:35:14.197" level="INFO">VALUE: [0.0001459029999999993, 0.00014581899999999842, 0.00014579200000000223, 0.00014580599999999833, 0.00014579099999999928, 0.00014579200000000223, 0.00014580599999999833, 0.00014580499999999885, 0.00014579199999999876, 0.0001458060000000018, 0.00014580599999999833, 0.00014580499999999885, 0.00014579200000000223, 0.0001458199999999979, 0.00014580499999999885, 0.0001458190000000019, 0.00014579199999999876, 0.00014580499999999885, 0.00014579100000000275, 0.00014579199999999876, 0.00014577799999999919, 0.00014583300000000146, 0.00014577799999999919, 0.0001458199999999979, 0.000145832999999998, 0.00014576399999999962, 0.00014580599999999833, 0.0001458060000000018, 0.00014579099999999928, 0.00014579199999999876, 0.00014580599999999833, 0.00014576299999999667, 0.00014581899999999842, 0.00014580599999999833, 0.0001458060000000018, 0.00014583300000000146, 0.00014573600000000048, 0.00014577800000000266, 0.00014580499999999885, 0.00014580599999999833, 0.00014582000000000137, 0.0001458190000000019, 0.00014577799999999919, 0.00014579200000000223, 0.00014580500000000232, 0.00014580499999999885, 0.00014582000000000137, 0.0001458060000000018, 0.00014579099999999928, 0.00014579199999999876]</msg>
<status status="PASS" starttime="20201029 09:35:14.196" endtime="20201029 09:35:14.198"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:14.191" endtime="20201029 09:35:14.199"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:13.843" endtime="20201029 09:35:14.199"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:13.820" endtime="20201029 09:35:14.199"></status>
</kw>
<kw name="${n} = 18" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:35:14.202" endtime="20201029 09:35:14.222"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:14.200" endtime="20201029 09:35:14.222"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:14.230" endtime="20201029 09:35:14.248"></status>
</kw>
<msg timestamp="20201029 09:35:14.248" level="INFO">${RESULT} = {'cmd': 'list_ops 18', 'msg': ['list_ops 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:14.229" endtime="20201029 09:35:14.248"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:14.251" level="INFO">${RESULT} = {'cmd': 'list_ops 18', 'msg': ['list_ops 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:14.249" endtime="20201029 09:35:14.251"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:14.252" endtime="20201029 09:35:14.254"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:14.226" endtime="20201029 09:35:14.255"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:14.224" endtime="20201029 09:35:14.255"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:14.262" endtime="20201029 09:35:14.548"></status>
</kw>
<msg timestamp="20201029 09:35:14.551" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017183347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01734325, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 09:35:14.260" endtime="20201029 09:35:14.552"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:14.560" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017183347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01734325, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 09:35:14.552" endtime="20201029 09:35:14.560"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:14.561" endtime="20201029 09:35:14.563"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:14.258" endtime="20201029 09:35:14.563"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:14.256" endtime="20201029 09:35:14.564"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:35:14.568" level="INFO">${PHILIP_RES} = [{'diff': 0.00015990299999999943}, {'diff': 0.00015979199999999888}, {'diff': 0.00015979200000000235}, {'diff': 0.0001598339999999976}, {'diff': 0.00015975000000000017}, {'diff': 0.0001597639999999997...</msg>
<status status="PASS" starttime="20201029 09:35:14.564" endtime="20201029 09:35:14.568"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:35:14.572" level="INFO">${RESULT} = {'diff': [0.00015990299999999943, 0.00015979199999999888, 0.00015979200000000235, 0.0001598339999999976, 0.00015975000000000017, 0.00015976399999999974, 0.0001597779999999993, 0.00015975000000000017, ...</msg>
<status status="PASS" starttime="20201029 09:35:14.569" endtime="20201029 09:35:14.572"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:35:14.576" level="INFO">NAME: 18-timer-trace</msg>
<status status="PASS" starttime="20201029 09:35:14.575" endtime="20201029 09:35:14.577"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:35:14.579" level="INFO">VALUE: [0.00015990299999999943, 0.00015979199999999888, 0.00015979200000000235, 0.0001598339999999976, 0.00015975000000000017, 0.00015976399999999974, 0.0001597779999999993, 0.00015975000000000017, 0.00015975000000000017, 0.00015976399999999974, 0.00015975000000000017, 0.00015975000000000017, 0.00015976300000000027, 0.00015981899999999855, 0.0001597909999999994, 0.00015977699999999984, 0.00015977699999999984, 0.00015976300000000027, 0.00015975000000000017, 0.0001597909999999994, 0.00015983299999999812, 0.0001597779999999993, 0.00015975000000000017, 0.0001597779999999993, 0.0001597779999999993, 0.00015981900000000202, 0.00015975000000000017, 0.00015979199999999888, 0.00015979199999999888, 0.00015975000000000017, 0.00015976399999999974, 0.0001597779999999993, 0.0001597779999999993, 0.0001597779999999993, 0.0001597779999999993, 0.00015980600000000192, 0.0001597779999999993, 0.00015979199999999888, 0.00015976399999999974, 0.00015975000000000017, 0.00015976399999999974, 0.00015984700000000115, 0.00015976399999999974, 0.00015972199999999756, 0.00015976399999999974, 0.0001597779999999993, 0.00015980600000000192, 0.00015975000000000017, 0.00015976399999999974, 0.00015977699999999984]</msg>
<status status="PASS" starttime="20201029 09:35:14.577" endtime="20201029 09:35:14.580"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:14.573" endtime="20201029 09:35:14.581"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:14.223" endtime="20201029 09:35:14.581"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:14.200" endtime="20201029 09:35:14.582"></status>
</kw>
<kw name="${n} = 19" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:35:14.584" endtime="20201029 09:35:14.604"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:14.583" endtime="20201029 09:35:14.604"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:14.613" endtime="20201029 09:35:14.631"></status>
</kw>
<msg timestamp="20201029 09:35:14.632" level="INFO">${RESULT} = {'cmd': 'list_ops 19', 'msg': ['list_ops 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:14.611" endtime="20201029 09:35:14.632"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:14.634" level="INFO">${RESULT} = {'cmd': 'list_ops 19', 'msg': ['list_ops 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:14.633" endtime="20201029 09:35:14.635"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:14.636" endtime="20201029 09:35:14.637"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:14.608" endtime="20201029 09:35:14.638"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:14.606" endtime="20201029 09:35:14.638"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:14.645" endtime="20201029 09:35:14.931"></status>
</kw>
<msg timestamp="20201029 09:35:14.935" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017073042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017247528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:14.643" endtime="20201029 09:35:14.935"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:14.943" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017073042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017247528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:14.936" endtime="20201029 09:35:14.943"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:14.944" endtime="20201029 09:35:14.946"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:14.641" endtime="20201029 09:35:14.947"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:14.639" endtime="20201029 09:35:14.947"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:35:14.952" level="INFO">${PHILIP_RES} = [{'diff': 0.00017448600000000147}, {'diff': 0.00017433299999999874}, {'diff': 0.00017427799999999993}, {'diff': 0.00017431899999999917}, {'diff': 0.0001743200000000021}, {'diff': 0.0001743470000000017...</msg>
<status status="PASS" starttime="20201029 09:35:14.948" endtime="20201029 09:35:14.952"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:35:14.957" level="INFO">${RESULT} = {'diff': [0.00017448600000000147, 0.00017433299999999874, 0.00017427799999999993, 0.00017431899999999917, 0.0001743200000000021, 0.00017434700000000178, 0.0001743330000000022, 0.00017436100000000135, ...</msg>
<status status="PASS" starttime="20201029 09:35:14.953" endtime="20201029 09:35:14.957"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:35:14.961" level="INFO">NAME: 19-timer-trace</msg>
<status status="PASS" starttime="20201029 09:35:14.960" endtime="20201029 09:35:14.962"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:35:14.964" level="INFO">VALUE: [0.00017448600000000147, 0.00017433299999999874, 0.00017427799999999993, 0.00017431899999999917, 0.0001743200000000021, 0.00017434700000000178, 0.0001743330000000022, 0.00017436100000000135, 0.00017434700000000178, 0.00017434700000000178, 0.00017433400000000168, 0.00017433299999999874, 0.00017434700000000178, 0.0001743330000000022, 0.00017433400000000168, 0.0001742919999999995, 0.00017433400000000168, 0.00017429100000000003, 0.00017434799999999778, 0.00017431899999999917, 0.0001743339999999982, 0.00017433299999999874, 0.00017436200000000082, 0.00017436099999999788, 0.00017430599999999907, 0.00017433299999999874, 0.00017427799999999993, 0.00017433299999999874, 0.00017434799999999778, 0.0001743049999999996, 0.0001743339999999982, 0.0001743469999999983, 0.0001743339999999982, 0.0001743469999999983, 0.00017433299999999874, 0.00017436100000000135, 0.0001743469999999983, 0.00017431900000000264, 0.00017434700000000178, 0.0001743330000000022, 0.00017434700000000178, 0.00017436100000000135, 0.00017434700000000178, 0.0001743330000000022, 0.0001743330000000022, 0.00017434700000000178, 0.00017436100000000135, 0.00017430599999999907, 0.00017429100000000003, 0.00017436099999999788]</msg>
<status status="PASS" starttime="20201029 09:35:14.963" endtime="20201029 09:35:14.965"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:14.958" endtime="20201029 09:35:14.965"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:14.605" endtime="20201029 09:35:14.966"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:14.582" endtime="20201029 09:35:14.966"></status>
</kw>
<kw name="${n} = 20" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:35:14.969" endtime="20201029 09:35:14.988"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:14.967" endtime="20201029 09:35:14.989"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:14.997" endtime="20201029 09:35:15.017"></status>
</kw>
<msg timestamp="20201029 09:35:15.017" level="INFO">${RESULT} = {'cmd': 'list_ops 20', 'msg': ['list_ops 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:14.995" endtime="20201029 09:35:15.018"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:15.020" level="INFO">${RESULT} = {'cmd': 'list_ops 20', 'msg': ['list_ops 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:15.019" endtime="20201029 09:35:15.021"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:15.022" endtime="20201029 09:35:15.024"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:14.993" endtime="20201029 09:35:15.024"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:14.991" endtime="20201029 09:35:15.025"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:15.032" endtime="20201029 09:35:15.319"></status>
</kw>
<msg timestamp="20201029 09:35:15.322" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017653292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017842944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:15.030" endtime="20201029 09:35:15.322"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:15.330" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017653292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017842944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:15.323" endtime="20201029 09:35:15.330"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:15.331" endtime="20201029 09:35:15.334"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:15.027" endtime="20201029 09:35:15.335"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:15.025" endtime="20201029 09:35:15.335"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:35:15.339" level="INFO">${PHILIP_RES} = [{'diff': 0.0001896519999999985}, {'diff': 0.0001895280000000013}, {'diff': 0.00018954200000000088}, {'diff': 0.00018955600000000045}, {'diff': 0.00018952799999999784}, {'diff': 0.00018947199999999956...</msg>
<status status="PASS" starttime="20201029 09:35:15.336" endtime="20201029 09:35:15.339"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:35:15.343" level="INFO">${RESULT} = {'diff': [0.0001896519999999985, 0.0001895280000000013, 0.00018954200000000088, 0.00018955600000000045, 0.00018952799999999784, 0.00018947199999999956, 0.0001895280000000013, 0.00018952799999999784, 0...</msg>
<status status="PASS" starttime="20201029 09:35:15.340" endtime="20201029 09:35:15.343"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:35:15.348" level="INFO">NAME: 20-timer-trace</msg>
<status status="PASS" starttime="20201029 09:35:15.346" endtime="20201029 09:35:15.348"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:35:15.350" level="INFO">VALUE: [0.0001896519999999985, 0.0001895280000000013, 0.00018954200000000088, 0.00018955600000000045, 0.00018952799999999784, 0.00018947199999999956, 0.0001895280000000013, 0.00018952799999999784, 0.0001895280000000013, 0.00018952700000000183, 0.00018951399999999827, 0.0001894869999999986, 0.00018955500000000097, 0.00018954200000000088, 0.0001894730000000025, 0.00018955600000000045, 0.00018948599999999913, 0.00018951399999999827, 0.00018952799999999784, 0.0001895419999999974, 0.00018952700000000183, 0.00018952699999999836, 0.0001895129999999988, 0.00018951400000000174, 0.0001895280000000013, 0.0001894999999999987, 0.00018951399999999827, 0.00018951400000000174, 0.0001895280000000013, 0.0001894999999999987, 0.00018955600000000045, 0.00018951400000000174, 0.00018954200000000088, 0.00018956900000000054, 0.0001895410000000014, 0.00018951400000000174, 0.00018952799999999784, 0.00018951399999999827, 0.0001895280000000013, 0.00018950000000000217, 0.0001894999999999987, 0.00018951399999999827, 0.0001895280000000013, 0.0001895410000000014, 0.00018954099999999793, 0.00018951400000000174, 0.00018951400000000174, 0.0001895280000000013, 0.00018952799999999784, 0.00018954200000000088]</msg>
<status status="PASS" starttime="20201029 09:35:15.349" endtime="20201029 09:35:15.351"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:15.344" endtime="20201029 09:35:15.352"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:14.989" endtime="20201029 09:35:15.352"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:14.966" endtime="20201029 09:35:15.352"></status>
</kw>
<kw name="${n} = 21" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:35:15.355" endtime="20201029 09:35:15.374"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:15.353" endtime="20201029 09:35:15.375"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:15.383" endtime="20201029 09:35:15.402"></status>
</kw>
<msg timestamp="20201029 09:35:15.403" level="INFO">${RESULT} = {'cmd': 'list_ops 21', 'msg': ['list_ops 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:15.381" endtime="20201029 09:35:15.403"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:15.405" level="INFO">${RESULT} = {'cmd': 'list_ops 21', 'msg': ['list_ops 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:15.404" endtime="20201029 09:35:15.406"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:15.406" endtime="20201029 09:35:15.409"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:15.379" endtime="20201029 09:35:15.410"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:15.377" endtime="20201029 09:35:15.410"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:15.417" endtime="20201029 09:35:15.704"></status>
</kw>
<msg timestamp="20201029 09:35:15.707" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017185653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017391056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:15.415" endtime="20201029 09:35:15.708"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:15.716" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017185653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017391056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:15.709" endtime="20201029 09:35:15.716"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:15.717" endtime="20201029 09:35:15.719"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:15.413" endtime="20201029 09:35:15.719"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:15.411" endtime="20201029 09:35:15.720"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:35:15.724" level="INFO">${PHILIP_RES} = [{'diff': 0.00020540299999999984}, {'diff': 0.00020527699999999677}, {'diff': 0.00020530500000000285}, {'diff': 0.0002053200000000019}, {'diff': 0.00020531999999999842}, {'diff': 0.0002053199999999984...</msg>
<status status="PASS" starttime="20201029 09:35:15.721" endtime="20201029 09:35:15.724"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:35:15.728" level="INFO">${RESULT} = {'diff': [0.00020540299999999984, 0.00020527699999999677, 0.00020530500000000285, 0.0002053200000000019, 0.00020531999999999842, 0.00020531999999999842, 0.00020527700000000024, 0.00020531899999999895,...</msg>
<status status="PASS" starttime="20201029 09:35:15.725" endtime="20201029 09:35:15.728"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:35:15.733" level="INFO">NAME: 21-timer-trace</msg>
<status status="PASS" starttime="20201029 09:35:15.731" endtime="20201029 09:35:15.733"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:35:15.735" level="INFO">VALUE: [0.00020540299999999984, 0.00020527699999999677, 0.00020530500000000285, 0.0002053200000000019, 0.00020531999999999842, 0.00020531999999999842, 0.00020527700000000024, 0.00020531899999999895, 0.00020531899999999895, 0.00020533300000000199, 0.0002053200000000019, 0.00020529200000000275, 0.0002052909999999998, 0.00020537499999999723, 0.00020530499999999938, 0.00020530499999999938, 0.00020530599999999885, 0.00020530599999999885, 0.00020533299999999852, 0.00020533300000000199, 0.00020536100000000113, 0.00020530499999999938, 0.0002053200000000019, 0.00020529199999999928, 0.000205236000000001, 0.0002052909999999998, 0.00020530499999999938, 0.00020530499999999938, 0.00020529199999999928, 0.00020530600000000232, 0.00020529199999999928, 0.00020531900000000242, 0.00020526400000000014, 0.00020531899999999895, 0.00020530599999999885, 0.00020531999999999842, 0.00020530599999999885, 0.00020530499999999938, 0.00020530500000000285, 0.00020530500000000285, 0.00020531899999999895, 0.00020530599999999885, 0.00020531999999999842, 0.00020530599999999885, 0.00020531899999999895, 0.00020523599999999753, 0.00020531900000000242, 0.00020530600000000232, 0.00020536100000000113, 0.00020530499999999938]</msg>
<status status="PASS" starttime="20201029 09:35:15.734" endtime="20201029 09:35:15.737"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:15.729" endtime="20201029 09:35:15.737"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:15.375" endtime="20201029 09:35:15.738"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:15.353" endtime="20201029 09:35:15.738"></status>
</kw>
<kw name="${n} = 22" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:35:15.740" endtime="20201029 09:35:15.760"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:15.739" endtime="20201029 09:35:15.760"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:15.769" endtime="20201029 09:35:15.791"></status>
</kw>
<msg timestamp="20201029 09:35:15.792" level="INFO">${RESULT} = {'cmd': 'list_ops 22', 'msg': ['list_ops 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:15.767" endtime="20201029 09:35:15.792"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:15.794" level="INFO">${RESULT} = {'cmd': 'list_ops 22', 'msg': ['list_ops 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:15.793" endtime="20201029 09:35:15.794"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:15.795" endtime="20201029 09:35:15.797"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:15.764" endtime="20201029 09:35:15.797"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:15.762" endtime="20201029 09:35:15.798"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:15.805" endtime="20201029 09:35:16.091"></status>
</kw>
<msg timestamp="20201029 09:35:16.094" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017293347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017515167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:15.803" endtime="20201029 09:35:16.094"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:16.102" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017293347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017515167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:16.095" endtime="20201029 09:35:16.103"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:16.103" endtime="20201029 09:35:16.105"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:15.800" endtime="20201029 09:35:16.106"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:15.798" endtime="20201029 09:35:16.106"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:35:16.110" level="INFO">${PHILIP_RES} = [{'diff': 0.00022182000000000104}, {'diff': 0.00022174999999999973}, {'diff': 0.00022169400000000145}, {'diff': 0.00022169500000000092}, {'diff': 0.0002217090000000005}, {'diff': 0.0002217079999999975...</msg>
<status status="PASS" starttime="20201029 09:35:16.107" endtime="20201029 09:35:16.110"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:35:16.115" level="INFO">${RESULT} = {'diff': [0.00022182000000000104, 0.00022174999999999973, 0.00022169400000000145, 0.00022169500000000092, 0.0002217090000000005, 0.00022170799999999755, 0.00022170800000000102, 0.00022169500000000092,...</msg>
<status status="PASS" starttime="20201029 09:35:16.111" endtime="20201029 09:35:16.115"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:35:16.120" level="INFO">NAME: 22-timer-trace</msg>
<status status="PASS" starttime="20201029 09:35:16.119" endtime="20201029 09:35:16.120"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:35:16.122" level="INFO">VALUE: [0.00022182000000000104, 0.00022174999999999973, 0.00022169400000000145, 0.00022169500000000092, 0.0002217090000000005, 0.00022170799999999755, 0.00022170800000000102, 0.00022169500000000092, 0.00022169400000000145, 0.00022170800000000102, 0.00022172199999999712, 0.00022169500000000092, 0.00022172200000000059, 0.00022170800000000102, 0.0002217639999999993, 0.0002217090000000005, 0.00022170799999999755, 0.00022170799999999755, 0.0002217090000000005, 0.0002216379999999997, 0.0002216249999999996, 0.00022165299999999874, 0.0002216669999999983, 0.00022170799999999755, 0.00022170800000000102, 0.00022169500000000092, 0.00022172200000000059, 0.00022169400000000145, 0.00022170799999999755, 0.00022169499999999745, 0.00022170800000000102, 0.00022174999999999973, 0.00022165299999999874, 0.00022169500000000092, 0.00022169399999999798, 0.00022172200000000059, 0.00022174999999999973, 0.00022170800000000102, 0.00022169400000000145, 0.00022170799999999755, 0.00022170899999999702, 0.00022172200000000059, 0.00022168000000000188, 0.00022169500000000092, 0.00022172199999999712, 0.00022170799999999755, 0.00022169399999999798, 0.00022169500000000092, 0.00022169500000000092, 0.00022170800000000102]</msg>
<status status="PASS" starttime="20201029 09:35:16.121" endtime="20201029 09:35:16.123"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:16.116" endtime="20201029 09:35:16.124"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:15.761" endtime="20201029 09:35:16.124"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:15.738" endtime="20201029 09:35:16.124"></status>
</kw>
<kw name="${n} = 23" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:35:16.127" endtime="20201029 09:35:16.146"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:16.125" endtime="20201029 09:35:16.147"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:16.155" endtime="20201029 09:35:16.176"></status>
</kw>
<msg timestamp="20201029 09:35:16.177" level="INFO">${RESULT} = {'cmd': 'list_ops 23', 'msg': ['list_ops 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:16.154" endtime="20201029 09:35:16.177"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:16.179" level="INFO">${RESULT} = {'cmd': 'list_ops 23', 'msg': ['list_ops 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:16.178" endtime="20201029 09:35:16.179"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:16.180" endtime="20201029 09:35:16.182"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:16.151" endtime="20201029 09:35:16.183"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:16.149" endtime="20201029 09:35:16.183"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:16.190" endtime="20201029 09:35:16.477"></status>
</kw>
<msg timestamp="20201029 09:35:16.481" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017131903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017370722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:16.188" endtime="20201029 09:35:16.481"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:16.489" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017131903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017370722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:16.482" endtime="20201029 09:35:16.489"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:16.490" endtime="20201029 09:35:16.492"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:16.186" endtime="20201029 09:35:16.493"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:16.184" endtime="20201029 09:35:16.493"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:35:16.497" level="INFO">${PHILIP_RES} = [{'diff': 0.00023881900000000122}, {'diff': 0.00023866699999999796}, {'diff': 0.0002386949999999971}, {'diff': 0.00023872200000000024}, {'diff': 0.0002387359999999998}, {'diff': 0.00023870800000000067...</msg>
<status status="PASS" starttime="20201029 09:35:16.494" endtime="20201029 09:35:16.497"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:35:16.501" level="INFO">${RESULT} = {'diff': [0.00023881900000000122, 0.00023866699999999796, 0.0002386949999999971, 0.00023872200000000024, 0.0002387359999999998, 0.00023870800000000067, 0.00023870900000000014, 0.00023870900000000014, ...</msg>
<status status="PASS" starttime="20201029 09:35:16.498" endtime="20201029 09:35:16.501"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:35:16.506" level="INFO">NAME: 23-timer-trace</msg>
<status status="PASS" starttime="20201029 09:35:16.505" endtime="20201029 09:35:16.506"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:35:16.508" level="INFO">VALUE: [0.00023881900000000122, 0.00023866699999999796, 0.0002386949999999971, 0.00023872200000000024, 0.0002387359999999998, 0.00023870800000000067, 0.00023870900000000014, 0.00023870900000000014, 0.0002386940000000011, 0.00023870800000000067, 0.00023870900000000014, 0.00023869500000000057, 0.00023872200000000024, 0.00023869399999999763, 0.00023870899999999667, 0.00023872200000000024, 0.000238778000000002, 0.00023870800000000067, 0.00023862499999999925, 0.00023869500000000057, 0.0002386940000000011, 0.00023870800000000067, 0.00023874999999999938, 0.0002387229999999997, 0.00023870800000000067, 0.0002386940000000011, 0.0002386949999999971, 0.00023870900000000014, 0.00023869399999999763, 0.00023870800000000067, 0.0002387229999999997, 0.00023872200000000024, 0.00023872200000000024, 0.00023870800000000067, 0.00023872200000000024, 0.00023870900000000014, 0.0002387359999999998, 0.00023870800000000067, 0.0002387079999999972, 0.00023870900000000014, 0.00023872200000000024, 0.0002386940000000011, 0.00023870800000000067, 0.0002387229999999997, 0.000238681000000001, 0.00023868000000000153, 0.00023866700000000143, 0.00023869500000000057, 0.00023870800000000067, 0.00023872200000000024]</msg>
<status status="PASS" starttime="20201029 09:35:16.507" endtime="20201029 09:35:16.509"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:16.502" endtime="20201029 09:35:16.509"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:16.147" endtime="20201029 09:35:16.510"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:16.125" endtime="20201029 09:35:16.510"></status>
</kw>
<kw name="${n} = 24" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:35:16.513" endtime="20201029 09:35:16.532"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:16.511" endtime="20201029 09:35:16.533"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:16.541" endtime="20201029 09:35:16.562"></status>
</kw>
<msg timestamp="20201029 09:35:16.562" level="INFO">${RESULT} = {'cmd': 'list_ops 24', 'msg': ['list_ops 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:16.539" endtime="20201029 09:35:16.563"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:16.565" level="INFO">${RESULT} = {'cmd': 'list_ops 24', 'msg': ['list_ops 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:16.563" endtime="20201029 09:35:16.565"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:16.566" endtime="20201029 09:35:16.569"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:16.537" endtime="20201029 09:35:16.570"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:16.535" endtime="20201029 09:35:16.570"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:16.577" endtime="20201029 09:35:16.864"></status>
</kw>
<msg timestamp="20201029 09:35:16.867" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017147222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017403653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:16.575" endtime="20201029 09:35:16.867"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:16.875" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017147222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017403653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:16.868" endtime="20201029 09:35:16.875"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:16.876" endtime="20201029 09:35:16.878"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:16.573" endtime="20201029 09:35:16.878"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:16.571" endtime="20201029 09:35:16.879"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:35:16.883" level="INFO">${PHILIP_RES} = [{'diff': 0.0002564310000000014}, {'diff': 0.00025632000000000085}, {'diff': 0.0002563059999999978}, {'diff': 0.00025632000000000085}, {'diff': 0.00025633300000000095}, {'diff': 0.0002563189999999979}...</msg>
<status status="PASS" starttime="20201029 09:35:16.880" endtime="20201029 09:35:16.883"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:35:16.887" level="INFO">${RESULT} = {'diff': [0.0002564310000000014, 0.00025632000000000085, 0.0002563059999999978, 0.00025632000000000085, 0.00025633300000000095, 0.0002563189999999979, 0.0002563470000000005, 0.0002563190000000014, 0.0...</msg>
<status status="PASS" starttime="20201029 09:35:16.884" endtime="20201029 09:35:16.887"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:35:16.892" level="INFO">NAME: 24-timer-trace</msg>
<status status="PASS" starttime="20201029 09:35:16.890" endtime="20201029 09:35:16.892"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:35:16.894" level="INFO">VALUE: [0.0002564310000000014, 0.00025632000000000085, 0.0002563059999999978, 0.00025632000000000085, 0.00025633300000000095, 0.0002563189999999979, 0.0002563470000000005, 0.0002563190000000014, 0.00025630499999999834, 0.00025633300000000095, 0.00025633300000000095, 0.0002562779999999987, 0.00025623599999999996, 0.00025632000000000085, 0.0002563059999999978, 0.0002563060000000013, 0.0002563340000000004, 0.00025623599999999996, 0.0002563060000000013, 0.0002563190000000014, 0.0002563190000000014, 0.0002563050000000018, 0.0002563189999999979, 0.0002563190000000014, 0.0002563190000000014, 0.0002563189999999979, 0.0002563340000000004, 0.00025638899999999923, 0.00025624999999999953, 0.00025632000000000085, 0.0002563060000000013, 0.0002563059999999978, 0.0002563190000000014, 0.0002563190000000014, 0.0002563329999999975, 0.0002563190000000014, 0.0002563050000000018, 0.0002563470000000005, 0.0002563470000000005, 0.0002563050000000018, 0.0002563329999999975, 0.0002563340000000004, 0.0002563060000000013, 0.0002563199999999974, 0.0002563340000000004, 0.0002563340000000004, 0.00025632000000000085, 0.00025632000000000085, 0.0002563470000000005, 0.0002563050000000018]</msg>
<status status="PASS" starttime="20201029 09:35:16.893" endtime="20201029 09:35:16.902"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:16.888" endtime="20201029 09:35:16.903"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:16.533" endtime="20201029 09:35:16.903"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:16.510" endtime="20201029 09:35:16.904"></status>
</kw>
<kw name="${n} = 25" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:35:16.906" endtime="20201029 09:35:16.926"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:16.905" endtime="20201029 09:35:16.926"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:16.935" endtime="20201029 09:35:16.959"></status>
</kw>
<msg timestamp="20201029 09:35:16.960" level="INFO">${RESULT} = {'cmd': 'list_ops 25', 'msg': ['list_ops 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:16.933" endtime="20201029 09:35:16.960"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:16.962" level="INFO">${RESULT} = {'cmd': 'list_ops 25', 'msg': ['list_ops 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:16.961" endtime="20201029 09:35:16.963"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:16.963" endtime="20201029 09:35:16.965"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:16.930" endtime="20201029 09:35:16.966"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:16.928" endtime="20201029 09:35:16.966"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:16.973" endtime="20201029 09:35:17.260"></status>
</kw>
<msg timestamp="20201029 09:35:17.263" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017748556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018023264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:16.971" endtime="20201029 09:35:17.263"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:17.272" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017748556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018023264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:17.264" endtime="20201029 09:35:17.272"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:17.273" endtime="20201029 09:35:17.275"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:16.968" endtime="20201029 09:35:17.275"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:16.967" endtime="20201029 09:35:17.276"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:35:17.279" level="INFO">${PHILIP_RES} = [{'diff': 0.000274708000000002}, {'diff': 0.00027454199999999915}, {'diff': 0.0002745559999999987}, {'diff': 0.0002745279999999996}, {'diff': 0.0002745270000000001}, {'diff': 0.0002745409999999997}, {...</msg>
<status status="PASS" starttime="20201029 09:35:17.276" endtime="20201029 09:35:17.280"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:35:17.284" level="INFO">${RESULT} = {'diff': [0.000274708000000002, 0.00027454199999999915, 0.0002745559999999987, 0.0002745279999999996, 0.0002745270000000001, 0.0002745409999999997, 0.0002745279999999996, 0.00027451399999999654, 0.000...</msg>
<status status="PASS" starttime="20201029 09:35:17.280" endtime="20201029 09:35:17.285"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:35:17.289" level="INFO">NAME: 25-timer-trace</msg>
<status status="PASS" starttime="20201029 09:35:17.288" endtime="20201029 09:35:17.289"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:35:17.291" level="INFO">VALUE: [0.000274708000000002, 0.00027454199999999915, 0.0002745559999999987, 0.0002745279999999996, 0.0002745270000000001, 0.0002745409999999997, 0.0002745279999999996, 0.00027451399999999654, 0.0002745270000000001, 0.00027454100000000314, 0.0002745829999999984, 0.00027454199999999915, 0.0002745270000000001, 0.0002745409999999997, 0.00027448600000000087, 0.00027454199999999915, 0.0002745270000000001, 0.0002745409999999997, 0.0002745420000000026, 0.00027448600000000087, 0.00027454100000000314, 0.0002745270000000001, 0.00027445899999999773, 0.0002745279999999996, 0.0002745970000000014, 0.000274514, 0.0002745279999999996, 0.00027454199999999915, 0.0002745279999999996, 0.0002745550000000027, 0.000274514, 0.000274514, 0.0002745279999999996, 0.000274514, 0.0002745279999999996, 0.0002745279999999996, 0.0002745559999999987, 0.000274514, 0.0002745279999999996, 0.00027454199999999915, 0.000274514, 0.000274514, 0.0002745279999999996, 0.0002745279999999996, 0.00027454199999999915, 0.0002745970000000014, 0.0002745000000000039, 0.0002745560000000022, 0.0002745279999999961, 0.00027454100000000314]</msg>
<status status="PASS" starttime="20201029 09:35:17.290" endtime="20201029 09:35:17.292"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:17.285" endtime="20201029 09:35:17.293"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:16.927" endtime="20201029 09:35:17.293"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:16.904" endtime="20201029 09:35:17.293"></status>
</kw>
<kw name="${n} = 26" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:35:17.296" endtime="20201029 09:35:17.315"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:17.294" endtime="20201029 09:35:17.316"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:17.324" endtime="20201029 09:35:17.348"></status>
</kw>
<msg timestamp="20201029 09:35:17.349" level="INFO">${RESULT} = {'cmd': 'list_ops 26', 'msg': ['list_ops 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:17.323" endtime="20201029 09:35:17.349"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:17.351" level="INFO">${RESULT} = {'cmd': 'list_ops 26', 'msg': ['list_ops 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:17.350" endtime="20201029 09:35:17.352"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:17.353" endtime="20201029 09:35:17.354"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:17.320" endtime="20201029 09:35:17.355"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:17.318" endtime="20201029 09:35:17.355"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:17.362" endtime="20201029 09:35:17.651"></status>
</kw>
<msg timestamp="20201029 09:35:17.654" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01733025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017623722, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 09:35:17.360" endtime="20201029 09:35:17.654"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:17.663" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01733025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017623722, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 09:35:17.655" endtime="20201029 09:35:17.663"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:17.664" endtime="20201029 09:35:17.665"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:17.358" endtime="20201029 09:35:17.666"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:17.356" endtime="20201029 09:35:17.666"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:35:17.670" level="INFO">${PHILIP_RES} = [{'diff': 0.00029347200000000295}, {'diff': 0.00029334699999999936}, {'diff': 0.0002934170000000007}, {'diff': 0.0002933749999999985}, {'diff': 0.00029333300000000326}, {'diff': 0.0002933060000000001}...</msg>
<status status="PASS" starttime="20201029 09:35:17.667" endtime="20201029 09:35:17.671"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:35:17.675" level="INFO">${RESULT} = {'diff': [0.00029347200000000295, 0.00029334699999999936, 0.0002934170000000007, 0.0002933749999999985, 0.00029333300000000326, 0.0002933060000000001, 0.00029334699999999936, 0.00029336099999999893, 0...</msg>
<status status="PASS" starttime="20201029 09:35:17.671" endtime="20201029 09:35:17.675"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:35:17.679" level="INFO">NAME: 26-timer-trace</msg>
<status status="PASS" starttime="20201029 09:35:17.678" endtime="20201029 09:35:17.680"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:35:17.682" level="INFO">VALUE: [0.00029347200000000295, 0.00029334699999999936, 0.0002934170000000007, 0.0002933749999999985, 0.00029333300000000326, 0.0002933060000000001, 0.00029334699999999936, 0.00029336099999999893, 0.0002933610000000024, 0.00029336200000000187, 0.00029334699999999936, 0.00029336099999999893, 0.0002934160000000012, 0.00029338899999999807, 0.00029336099999999893, 0.00029334699999999936, 0.0002933610000000024, 0.00029336099999999893, 0.00029336099999999893, 0.00029334799999999883, 0.00029337500000000197, 0.00029340299999999764, 0.00029334699999999936, 0.0002933610000000024, 0.00029334700000000283, 0.0002933329999999998, 0.0002933749999999985, 0.0002934170000000007, 0.0002933610000000024, 0.00029340199999999816, 0.00029334699999999936, 0.00029334699999999936, 0.0002933610000000024, 0.00029333399999999926, 0.0002933060000000001, 0.00029338900000000154, 0.0002933480000000023, 0.0002933190000000002, 0.0002933749999999985, 0.00029334699999999936, 0.0002933610000000024, 0.00029336099999999893, 0.00029336099999999893, 0.00029337500000000197, 0.00029336099999999893, 0.0002933329999999998, 0.00029337500000000544, 0.0002933749999999985, 0.00029336099999999893, 0.00029336099999999893]</msg>
<status status="PASS" starttime="20201029 09:35:17.680" endtime="20201029 09:35:17.683"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:17.676" endtime="20201029 09:35:17.683"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:17.316" endtime="20201029 09:35:17.684"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:17.294" endtime="20201029 09:35:17.684"></status>
</kw>
<kw name="${n} = 27" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:35:17.686" endtime="20201029 09:35:17.706"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:17.685" endtime="20201029 09:35:17.706"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:17.714" endtime="20201029 09:35:17.741"></status>
</kw>
<msg timestamp="20201029 09:35:17.742" level="INFO">${RESULT} = {'cmd': 'list_ops 27', 'msg': ['list_ops 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:17.713" endtime="20201029 09:35:17.742"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:17.744" level="INFO">${RESULT} = {'cmd': 'list_ops 27', 'msg': ['list_ops 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:17.743" endtime="20201029 09:35:17.745"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:17.745" endtime="20201029 09:35:17.748"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:17.710" endtime="20201029 09:35:17.749"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:17.708" endtime="20201029 09:35:17.749"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:17.756" endtime="20201029 09:35:18.042"></status>
</kw>
<msg timestamp="20201029 09:35:18.045" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017055903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01736875, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 09:35:17.754" endtime="20201029 09:35:18.046"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:18.054" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017055903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01736875, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 09:35:18.046" endtime="20201029 09:35:18.054"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:18.055" endtime="20201029 09:35:18.057"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:17.751" endtime="20201029 09:35:18.057"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:17.750" endtime="20201029 09:35:18.058"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:35:18.062" level="INFO">${PHILIP_RES} = [{'diff': 0.00031284699999999804}, {'diff': 0.0003127359999999975}, {'diff': 0.00031279199999999924}, {'diff': 0.0003128060000000023}, {'diff': 0.00031279199999999924}, {'diff': 0.00031280499999999933...</msg>
<status status="PASS" starttime="20201029 09:35:18.058" endtime="20201029 09:35:18.062"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:35:18.066" level="INFO">${RESULT} = {'diff': [0.00031284699999999804, 0.0003127359999999975, 0.00031279199999999924, 0.0003128060000000023, 0.00031279199999999924, 0.00031280499999999933, 0.00031277799999999967, 0.0003127640000000001, 0...</msg>
<status status="PASS" starttime="20201029 09:35:18.063" endtime="20201029 09:35:18.066"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:35:18.070" level="INFO">NAME: 27-timer-trace</msg>
<status status="PASS" starttime="20201029 09:35:18.069" endtime="20201029 09:35:18.070"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:35:18.073" level="INFO">VALUE: [0.00031284699999999804, 0.0003127359999999975, 0.00031279199999999924, 0.0003128060000000023, 0.00031279199999999924, 0.00031280499999999933, 0.00031277799999999967, 0.0003127640000000001, 0.0003127770000000002, 0.0003128059999999988, 0.0003128329999999985, 0.0003127920000000027, 0.00031279199999999924, 0.00031279199999999924, 0.00031287500000000065, 0.00031277799999999967, 0.00031279199999999924, 0.0003128059999999988, 0.00031279099999999976, 0.00031275000000000053, 0.0003127220000000014, 0.00031279099999999976, 0.00031277799999999967, 0.0003127640000000001, 0.0003127640000000001, 0.00031279099999999976, 0.0003127359999999975, 0.0003127220000000014, 0.00031275000000000053, 0.0003128060000000023, 0.00031279199999999924, 0.0003127770000000002, 0.00031279199999999924, 0.00031279199999999924, 0.0003127770000000002, 0.0003127770000000002, 0.00031277799999999967, 0.00031277799999999967, 0.00031279199999999924, 0.00031273600000000096, 0.00031279199999999924, 0.0003128189999999989, 0.00031277799999999967, 0.00031277799999999967, 0.00031280499999999933, 0.00031280600000000575, 0.00031279199999999924, 0.0003127770000000002, 0.00031277799999999967, 0.0003128059999999988]</msg>
<status status="PASS" starttime="20201029 09:35:18.071" endtime="20201029 09:35:18.074"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:18.067" endtime="20201029 09:35:18.075"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:17.707" endtime="20201029 09:35:18.075"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:17.684" endtime="20201029 09:35:18.076"></status>
</kw>
<kw name="${n} = 28" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:35:18.078" endtime="20201029 09:35:18.097"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:18.077" endtime="20201029 09:35:18.098"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:18.106" endtime="20201029 09:35:18.134"></status>
</kw>
<msg timestamp="20201029 09:35:18.135" level="INFO">${RESULT} = {'cmd': 'list_ops 28', 'msg': ['list_ops 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:18.105" endtime="20201029 09:35:18.135"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:18.137" level="INFO">${RESULT} = {'cmd': 'list_ops 28', 'msg': ['list_ops 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:18.136" endtime="20201029 09:35:18.138"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:18.138" endtime="20201029 09:35:18.140"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:18.102" endtime="20201029 09:35:18.141"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:18.100" endtime="20201029 09:35:18.141"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:18.148" endtime="20201029 09:35:18.434"></status>
</kw>
<msg timestamp="20201029 09:35:18.437" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017166972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017499931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:18.146" endtime="20201029 09:35:18.437"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:18.446" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017166972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017499931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:18.438" endtime="20201029 09:35:18.447"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:18.447" endtime="20201029 09:35:18.449"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:18.144" endtime="20201029 09:35:18.450"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:18.142" endtime="20201029 09:35:18.450"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:35:18.454" level="INFO">${PHILIP_RES} = [{'diff': 0.0003329590000000007}, {'diff': 0.00033282000000000103}, {'diff': 0.00033282000000000103}, {'diff': 0.0003328340000000006}, {'diff': 0.00033281999999999756}, {'diff': 0.00033283299999999766...</msg>
<status status="PASS" starttime="20201029 09:35:18.451" endtime="20201029 09:35:18.454"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:35:18.459" level="INFO">${RESULT} = {'diff': [0.0003329590000000007, 0.00033282000000000103, 0.00033282000000000103, 0.0003328340000000006, 0.00033281999999999756, 0.00033283299999999766, 0.0003328189999999981, 0.00033283299999999766, 0...</msg>
<status status="PASS" starttime="20201029 09:35:18.455" endtime="20201029 09:35:18.459"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:35:18.464" level="INFO">NAME: 28-timer-trace</msg>
<status status="PASS" starttime="20201029 09:35:18.463" endtime="20201029 09:35:18.464"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:35:18.466" level="INFO">VALUE: [0.0003329590000000007, 0.00033282000000000103, 0.00033282000000000103, 0.0003328340000000006, 0.00033281999999999756, 0.00033283299999999766, 0.0003328189999999981, 0.00033283299999999766, 0.000332805000000002, 0.00033281900000000156, 0.00033281900000000156, 0.000332805000000002, 0.0003328189999999981, 0.0003328470000000007, 0.00033284699999999723, 0.00033283300000000113, 0.00033281900000000156, 0.00033281900000000156, 0.00033282000000000103, 0.0003328340000000006, 0.00033282000000000103, 0.0003328340000000006, 0.00033283399999999713, 0.000332805999999998, 0.00033282000000000103, 0.00033282000000000103, 0.0003328340000000006, 0.00033283300000000113, 0.00033286100000000027, 0.0003328189999999981, 0.00033283299999999766, 0.0003328189999999981, 0.0003328189999999981, 0.00033283300000000113, 0.000332805000000002, 0.00033277799999999885, 0.0003327910000000024, 0.00033283300000000113, 0.00033281999999999756, 0.0003327639999999993, 0.00033281999999999756, 0.0003328200000000045, 0.00033283399999999713, 0.000332805999999998, 0.00033281999999999756, 0.00033281999999999756, 0.0003328200000000045, 0.00033283299999999766, 0.000332902000000003, 0.0003328189999999981]</msg>
<status status="PASS" starttime="20201029 09:35:18.465" endtime="20201029 09:35:18.467"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:18.460" endtime="20201029 09:35:18.468"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:18.099" endtime="20201029 09:35:18.468"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:18.076" endtime="20201029 09:35:18.468"></status>
</kw>
<kw name="${n} = 29" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:35:18.471" endtime="20201029 09:35:18.490"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:18.469" endtime="20201029 09:35:18.491"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:18.499" endtime="20201029 09:35:18.528"></status>
</kw>
<msg timestamp="20201029 09:35:18.529" level="INFO">${RESULT} = {'cmd': 'list_ops 29', 'msg': ['list_ops 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:18.498" endtime="20201029 09:35:18.529"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:18.531" level="INFO">${RESULT} = {'cmd': 'list_ops 29', 'msg': ['list_ops 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:18.530" endtime="20201029 09:35:18.532"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:18.532" endtime="20201029 09:35:18.534"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:18.495" endtime="20201029 09:35:18.535"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:18.493" endtime="20201029 09:35:18.535"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:18.542" endtime="20201029 09:35:18.829"></status>
</kw>
<msg timestamp="20201029 09:35:18.832" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018214389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018567972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:18.540" endtime="20201029 09:35:18.833"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:18.841" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018214389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018567972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:18.834" endtime="20201029 09:35:18.841"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:18.842" endtime="20201029 09:35:18.844"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:18.538" endtime="20201029 09:35:18.844"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:18.536" endtime="20201029 09:35:18.845"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:35:18.849" level="INFO">${PHILIP_RES} = [{'diff': 0.0003535829999999976}, {'diff': 0.0003535140000000027}, {'diff': 0.00035341699999999823}, {'diff': 0.0003534720000000005}, {'diff': 0.00035345799999999747}, {'diff': 0.0003534860000000001},...</msg>
<status status="PASS" starttime="20201029 09:35:18.845" endtime="20201029 09:35:18.849"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:35:18.853" level="INFO">${RESULT} = {'diff': [0.0003535829999999976, 0.0003535140000000027, 0.00035341699999999823, 0.0003534720000000005, 0.00035345799999999747, 0.0003534860000000001, 0.00035351299999999974, 0.000353473, 0.00035345900...</msg>
<status status="PASS" starttime="20201029 09:35:18.850" endtime="20201029 09:35:18.853"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:35:18.857" level="INFO">NAME: 29-timer-trace</msg>
<status status="PASS" starttime="20201029 09:35:18.856" endtime="20201029 09:35:18.857"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:35:18.860" level="INFO">VALUE: [0.0003535829999999976, 0.0003535140000000027, 0.00035341699999999823, 0.0003534720000000005, 0.00035345799999999747, 0.0003534860000000001, 0.00035351299999999974, 0.000353473, 0.0003534590000000004, 0.000353473, 0.0003534590000000004, 0.0003534860000000001, 0.0003534720000000005, 0.00035345800000000094, 0.0003534720000000005, 0.00035345799999999747, 0.00035349999999999965, 0.00035345800000000094, 0.00035344400000000137, 0.0003535270000000028, 0.0003534720000000005, 0.000353473, 0.0003534590000000004, 0.00035344500000000084, 0.0003534860000000001, 0.0003534720000000005, 0.00035347199999999704, 0.00035345800000000094, 0.0003534720000000005, 0.0003534720000000005, 0.0003534860000000001, 0.00035354100000000235, 0.0003534720000000005, 0.0003534720000000005, 0.00035345800000000094, 0.000353473, 0.0003534590000000004, 0.0003534590000000004, 0.0003534590000000004, 0.0003534860000000001, 0.0003534860000000001, 0.0003534720000000005, 0.0003534720000000005, 0.00035347199999999357, 0.0003534860000000001, 0.0003535279999999988, 0.00035344399999999443, 0.0003534720000000005, 0.0003534720000000005, 0.0003534590000000004]</msg>
<status status="PASS" starttime="20201029 09:35:18.858" endtime="20201029 09:35:18.860"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:18.854" endtime="20201029 09:35:18.861"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:18.492" endtime="20201029 09:35:18.861"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:18.469" endtime="20201029 09:35:18.862"></status>
</kw>
<kw name="${n} = 30" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:35:18.864" endtime="20201029 09:35:18.883"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:18.863" endtime="20201029 09:35:18.884"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:18.893" endtime="20201029 09:35:18.921"></status>
</kw>
<msg timestamp="20201029 09:35:18.922" level="INFO">${RESULT} = {'cmd': 'list_ops 30', 'msg': ['list_ops 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:18.891" endtime="20201029 09:35:18.922"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:18.925" level="INFO">${RESULT} = {'cmd': 'list_ops 30', 'msg': ['list_ops 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:18.923" endtime="20201029 09:35:18.925"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:18.926" endtime="20201029 09:35:18.928"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:18.888" endtime="20201029 09:35:18.929"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:18.886" endtime="20201029 09:35:18.929"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:18.936" endtime="20201029 09:35:19.223"></status>
</kw>
<msg timestamp="20201029 09:35:19.226" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017251208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017626042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:18.934" endtime="20201029 09:35:19.226"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:19.234" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017251208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017626042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:19.227" endtime="20201029 09:35:19.235"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:19.235" endtime="20201029 09:35:19.237"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:18.932" endtime="20201029 09:35:19.238"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:18.930" endtime="20201029 09:35:19.238"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:35:19.242" level="INFO">${PHILIP_RES} = [{'diff': 0.00037483400000000097}, {'diff': 0.00037470900000000085}, {'diff': 0.0003747360000000005}, {'diff': 0.00037479200000000226}, {'diff': 0.00037472200000000094}, {'diff': 0.0003747360000000005...</msg>
<status status="PASS" starttime="20201029 09:35:19.239" endtime="20201029 09:35:19.242"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:35:19.246" level="INFO">${RESULT} = {'diff': [0.00037483400000000097, 0.00037470900000000085, 0.0003747360000000005, 0.00037479200000000226, 0.00037472200000000094, 0.0003747360000000005, 0.0003747360000000005, 0.0003747079999999979, 0....</msg>
<status status="PASS" starttime="20201029 09:35:19.243" endtime="20201029 09:35:19.246"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:35:19.251" level="INFO">NAME: 30-timer-trace</msg>
<status status="PASS" starttime="20201029 09:35:19.250" endtime="20201029 09:35:19.251"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:35:19.253" level="INFO">VALUE: [0.00037483400000000097, 0.00037470900000000085, 0.0003747360000000005, 0.00037479200000000226, 0.00037472200000000094, 0.0003747360000000005, 0.0003747360000000005, 0.0003747079999999979, 0.0003747779999999992, 0.00037472200000000094, 0.00037469399999999833, 0.0003747079999999979, 0.00037472200000000094, 0.0003746940000000018, 0.0003747080000000014, 0.0003747219999999975, 0.0003747080000000014, 0.0003747080000000014, 0.00037472200000000094, 0.0003747219999999975, 0.0003746950000000013, 0.0003746529999999991, 0.0003747500000000001, 0.00037472299999999695, 0.00037470900000000085, 0.0003747500000000001, 0.0003747230000000004, 0.0003747230000000004, 0.00037468000000000223, 0.00037472200000000094, 0.00037472200000000094, 0.0003747219999999975, 0.00037472200000000094, 0.0003747080000000014, 0.0003747360000000005, 0.0003747080000000014, 0.0003747080000000014, 0.0003747360000000005, 0.0003747360000000005, 0.00037472200000000094, 0.0003747360000000005, 0.0003747360000000005, 0.0003747360000000005, 0.0003747080000000014, 0.0003747500000000001, 0.0003747230000000004, 0.00037470900000000085, 0.00037470900000000085, 0.00037470900000000085, 0.0003747230000000004]</msg>
<status status="PASS" starttime="20201029 09:35:19.252" endtime="20201029 09:35:19.255"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:19.247" endtime="20201029 09:35:19.255"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:18.885" endtime="20201029 09:35:19.256"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:18.862" endtime="20201029 09:35:19.256"></status>
</kw>
<kw name="${n} = 31" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:35:19.258" endtime="20201029 09:35:19.278"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:19.257" endtime="20201029 09:35:19.278"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:19.287" endtime="20201029 09:35:19.318"></status>
</kw>
<msg timestamp="20201029 09:35:19.318" level="INFO">${RESULT} = {'cmd': 'list_ops 31', 'msg': ['list_ops 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:19.285" endtime="20201029 09:35:19.319"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:19.321" level="INFO">${RESULT} = {'cmd': 'list_ops 31', 'msg': ['list_ops 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:19.319" endtime="20201029 09:35:19.321"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:19.322" endtime="20201029 09:35:19.324"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:19.283" endtime="20201029 09:35:19.324"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:19.281" endtime="20201029 09:35:19.325"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:19.332" endtime="20201029 09:35:19.618"></status>
</kw>
<msg timestamp="20201029 09:35:19.621" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017142764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017539389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:19.330" endtime="20201029 09:35:19.621"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:19.629" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017142764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017539389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:19.622" endtime="20201029 09:35:19.630"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:19.631" endtime="20201029 09:35:19.633"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:19.327" endtime="20201029 09:35:19.633"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:19.326" endtime="20201029 09:35:19.633"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:35:19.637" level="INFO">${PHILIP_RES} = [{'diff': 0.0003966249999999977}, {'diff': 0.0003965689999999994}, {'diff': 0.0003965689999999994}, {'diff': 0.00039658300000000243}, {'diff': 0.00039659699999999853}, {'diff': 0.0003965840000000019},...</msg>
<status status="PASS" starttime="20201029 09:35:19.634" endtime="20201029 09:35:19.638"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:35:19.642" level="INFO">${RESULT} = {'diff': [0.0003966249999999977, 0.0003965689999999994, 0.0003965689999999994, 0.00039658300000000243, 0.00039659699999999853, 0.0003965840000000019, 0.0003965559999999993, 0.00039657000000000234, 0.0...</msg>
<status status="PASS" starttime="20201029 09:35:19.638" endtime="20201029 09:35:19.643"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:35:19.647" level="INFO">NAME: 31-timer-trace</msg>
<status status="PASS" starttime="20201029 09:35:19.646" endtime="20201029 09:35:19.647"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:35:19.649" level="INFO">VALUE: [0.0003966249999999977, 0.0003965689999999994, 0.0003965689999999994, 0.00039658300000000243, 0.00039659699999999853, 0.0003965840000000019, 0.0003965559999999993, 0.00039657000000000234, 0.00039658299999999896, 0.00039659699999999853, 0.00039658299999999896, 0.00039659699999999853, 0.0003965689999999994, 0.00039656999999999887, 0.00039654199999999973, 0.0003965559999999993, 0.0003966110000000016, 0.00039658299999999896, 0.0003966110000000016, 0.00039658299999999896, 0.0003965139999999971, 0.0003965840000000019, 0.000396597999999998, 0.000396597000000002, 0.00039655600000000277, 0.0003965549999999998, 0.000396500000000001, 0.000396597000000002, 0.00039658399999999844, 0.0003966110000000016, 0.0003966249999999977, 0.00039656999999999887, 0.00039658299999999896, 0.0003965689999999994, 0.0003965689999999994, 0.0003965689999999994, 0.00039658399999999844, 0.00039656999999999887, 0.00039658399999999844, 0.0003965700000000058, 0.0003965549999999998, 0.0003965689999999994, 0.0003966109999999981, 0.00039658299999999896, 0.0003965559999999993, 0.00039656999999999887, 0.0003966249999999977, 0.00039658299999999896, 0.0003965830000000059, 0.00039659699999999853]</msg>
<status status="PASS" starttime="20201029 09:35:19.648" endtime="20201029 09:35:19.650"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:19.643" endtime="20201029 09:35:19.651"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:19.279" endtime="20201029 09:35:19.651"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:19.256" endtime="20201029 09:35:19.651"></status>
</kw>
<kw name="${n} = 32" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:35:19.654" endtime="20201029 09:35:19.673"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:19.652" endtime="20201029 09:35:19.674"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:19.683" endtime="20201029 09:35:19.715"></status>
</kw>
<msg timestamp="20201029 09:35:19.715" level="INFO">${RESULT} = {'cmd': 'list_ops 32', 'msg': ['list_ops 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:19.681" endtime="20201029 09:35:19.716"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:19.718" level="INFO">${RESULT} = {'cmd': 'list_ops 32', 'msg': ['list_ops 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:19.716" endtime="20201029 09:35:19.718"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:19.719" endtime="20201029 09:35:19.721"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:19.678" endtime="20201029 09:35:19.721"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:19.676" endtime="20201029 09:35:19.722"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:19.728" endtime="20201029 09:35:20.015"></status>
</kw>
<msg timestamp="20201029 09:35:20.018" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017415861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017835028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:19.727" endtime="20201029 09:35:20.018"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:20.027" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017415861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017835028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:20.019" endtime="20201029 09:35:20.028"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:20.028" endtime="20201029 09:35:20.030"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:19.724" endtime="20201029 09:35:20.031"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:19.722" endtime="20201029 09:35:20.031"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:35:20.035" level="INFO">${PHILIP_RES} = [{'diff': 0.00041916699999999807}, {'diff': 0.00041904099999999847}, {'diff': 0.0004190420000000014}, {'diff': 0.0004190139999999988}, {'diff': 0.0004190690000000011}, {'diff': 0.0004190840000000001},...</msg>
<status status="PASS" starttime="20201029 09:35:20.032" endtime="20201029 09:35:20.035"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:35:20.039" level="INFO">${RESULT} = {'diff': [0.00041916699999999807, 0.00041904099999999847, 0.0004190420000000014, 0.0004190139999999988, 0.0004190690000000011, 0.0004190840000000001, 0.00041904099999999847, 0.00041907000000000055, 0....</msg>
<status status="PASS" starttime="20201029 09:35:20.036" endtime="20201029 09:35:20.039"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:35:20.044" level="INFO">NAME: 32-timer-trace</msg>
<status status="PASS" starttime="20201029 09:35:20.043" endtime="20201029 09:35:20.044"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:35:20.046" level="INFO">VALUE: [0.00041916699999999807, 0.00041904099999999847, 0.0004190420000000014, 0.0004190139999999988, 0.0004190690000000011, 0.0004190840000000001, 0.00041904099999999847, 0.00041907000000000055, 0.00041904099999999847, 0.00041904199999999794, 0.00041911199999999926, 0.000419056000000001, 0.00041904199999999794, 0.0004190550000000015, 0.00041907000000000055, 0.00041904099999999847, 0.000419056000000001, 0.0004190840000000001, 0.00041902800000000184, 0.00041902800000000184, 0.00041904199999999794, 0.00041899999999999923, 0.00041904199999999794, 0.0004190279999999984, 0.00041904099999999847, 0.0004190420000000014, 0.0004190279999999984, 0.000419056000000001, 0.0004190420000000014, 0.00041904199999999794, 0.00041902800000000184, 0.00041902700000000237, 0.00041902800000000184, 0.00041905499999999457, 0.0004189719999999966, 0.00041904100000000194, 0.0004190420000000014, 0.0004190840000000001, 0.0004190690000000011, 0.00041899999999999576, 0.0004190140000000023, 0.000419056000000001, 0.0004190550000000015, 0.000419056000000001, 0.0004191250000000063, 0.00041905499999999457, 0.000419056000000001, 0.0004190550000000015, 0.0004190420000000014, 0.0004190140000000023]</msg>
<status status="PASS" starttime="20201029 09:35:20.045" endtime="20201029 09:35:20.047"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:20.040" endtime="20201029 09:35:20.047"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:19.674" endtime="20201029 09:35:20.048"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:19.652" endtime="20201029 09:35:20.048"></status>
</kw>
<kw name="${n} = 33" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:35:20.050" endtime="20201029 09:35:20.070"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:20.049" endtime="20201029 09:35:20.071"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:20.079" endtime="20201029 09:35:20.112"></status>
</kw>
<msg timestamp="20201029 09:35:20.113" level="INFO">${RESULT} = {'cmd': 'list_ops 33', 'msg': ['list_ops 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:20.078" endtime="20201029 09:35:20.113"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:20.115" level="INFO">${RESULT} = {'cmd': 'list_ops 33', 'msg': ['list_ops 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:20.114" endtime="20201029 09:35:20.116"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:20.116" endtime="20201029 09:35:20.119"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:20.075" endtime="20201029 09:35:20.119"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:20.073" endtime="20201029 09:35:20.120"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:20.127" endtime="20201029 09:35:20.413"></status>
</kw>
<msg timestamp="20201029 09:35:20.416" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017417583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017859833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:20.125" endtime="20201029 09:35:20.417"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:20.425" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017417583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017859833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:20.417" endtime="20201029 09:35:20.425"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:20.426" endtime="20201029 09:35:20.428"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:20.122" endtime="20201029 09:35:20.428"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:20.121" endtime="20201029 09:35:20.429"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:35:20.433" level="INFO">${PHILIP_RES} = [{'diff': 0.0004422499999999982}, {'diff': 0.0004421109999999985}, {'diff': 0.0004421249999999981}, {'diff': 0.0004421249999999981}, {'diff': 0.00044212500000000154}, {'diff': 0.0004421109999999985}, ...</msg>
<status status="PASS" starttime="20201029 09:35:20.429" endtime="20201029 09:35:20.433"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:35:20.437" level="INFO">${RESULT} = {'diff': [0.0004422499999999982, 0.0004421109999999985, 0.0004421249999999981, 0.0004421249999999981, 0.00044212500000000154, 0.0004421109999999985, 0.0004421109999999985, 0.0004421660000000008, 0.000...</msg>
<status status="PASS" starttime="20201029 09:35:20.434" endtime="20201029 09:35:20.437"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:35:20.441" level="INFO">NAME: 33-timer-trace</msg>
<status status="PASS" starttime="20201029 09:35:20.440" endtime="20201029 09:35:20.442"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:35:20.444" level="INFO">VALUE: [0.0004422499999999982, 0.0004421109999999985, 0.0004421249999999981, 0.0004421249999999981, 0.00044212500000000154, 0.0004421109999999985, 0.0004421109999999985, 0.0004421660000000008, 0.0004421660000000008, 0.0004420970000000024, 0.0004420970000000024, 0.0004421249999999981, 0.0004421249999999981, 0.00044209699999999894, 0.0004421249999999981, 0.0004421249999999981, 0.0004421249999999981, 0.00044212500000000154, 0.00044212500000000154, 0.00044212500000000154, 0.000442111000000002, 0.0004420970000000024, 0.00044212500000000154, 0.0004421390000000011, 0.0004421249999999981, 0.00044212500000000154, 0.0004420979999999984, 0.0004421249999999981, 0.00044209699999999894, 0.00044212500000000154, 0.000442111000000002, 0.00044211099999999504, 0.000442111000000002, 0.0004421249999999946, 0.00044212500000000154, 0.00044212500000000154, 0.00044212500000000154, 0.00044212500000000154, 0.0004421390000000011, 0.00044212500000000154, 0.0004421949999999994, 0.00044212500000000154, 0.0004421390000000011, 0.00044212500000000154, 0.0004421660000000008, 0.000442111000000002, 0.00044209699999999547, 0.00044211200000000145, 0.000442111000000002, 0.000442111000000002]</msg>
<status status="PASS" starttime="20201029 09:35:20.442" endtime="20201029 09:35:20.445"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:20.438" endtime="20201029 09:35:20.446"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:20.071" endtime="20201029 09:35:20.446"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:20.048" endtime="20201029 09:35:20.447"></status>
</kw>
<kw name="${n} = 34" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:35:20.449" endtime="20201029 09:35:20.468"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:20.447" endtime="20201029 09:35:20.469"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:20.478" endtime="20201029 09:35:20.511"></status>
</kw>
<msg timestamp="20201029 09:35:20.512" level="INFO">${RESULT} = {'cmd': 'list_ops 34', 'msg': ['list_ops 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:20.476" endtime="20201029 09:35:20.512"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:20.514" level="INFO">${RESULT} = {'cmd': 'list_ops 34', 'msg': ['list_ops 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:20.513" endtime="20201029 09:35:20.514"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:20.515" endtime="20201029 09:35:20.517"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:20.473" endtime="20201029 09:35:20.517"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:20.471" endtime="20201029 09:35:20.518"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:20.524" endtime="20201029 09:35:20.811"></status>
</kw>
<msg timestamp="20201029 09:35:20.814" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017710889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018176806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:20.523" endtime="20201029 09:35:20.814"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:20.822" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017710889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018176806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:20.815" endtime="20201029 09:35:20.823"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:20.824" endtime="20201029 09:35:20.825"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:20.520" endtime="20201029 09:35:20.826"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:20.518" endtime="20201029 09:35:20.826"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:35:20.830" level="INFO">${PHILIP_RES} = [{'diff': 0.0004659169999999997}, {'diff': 0.0004658620000000009}, {'diff': 0.0004657919999999996}, {'diff': 0.000465778}, {'diff': 0.0004657919999999996}, {'diff': 0.00046586099999999797}, {'diff': 0...</msg>
<status status="PASS" starttime="20201029 09:35:20.827" endtime="20201029 09:35:20.831"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:35:20.835" level="INFO">${RESULT} = {'diff': [0.0004659169999999997, 0.0004658620000000009, 0.0004657919999999996, 0.000465778, 0.0004657919999999996, 0.00046586099999999797, 0.00046580599999999917, 0.0004658049999999997, 0.000465818999...</msg>
<status status="PASS" starttime="20201029 09:35:20.831" endtime="20201029 09:35:20.836"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:35:20.840" level="INFO">NAME: 34-timer-trace</msg>
<status status="PASS" starttime="20201029 09:35:20.839" endtime="20201029 09:35:20.840"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:35:20.842" level="INFO">VALUE: [0.0004659169999999997, 0.0004658620000000009, 0.0004657919999999996, 0.000465778, 0.0004657919999999996, 0.00046586099999999797, 0.00046580599999999917, 0.0004658049999999997, 0.00046581899999999926, 0.00046581899999999926, 0.00046580600000000263, 0.00046580600000000263, 0.00046577700000000055, 0.0004657919999999996, 0.00046580599999999917, 0.000465778, 0.00046579200000000306, 0.000465875000000001, 0.000465778, 0.00046580599999999917, 0.0004658049999999997, 0.0004657919999999996, 0.00046581900000000273, 0.0004658200000000022, 0.00046581899999999926, 0.0004657499999999974, 0.0004657910000000036, 0.00046580599999999917, 0.00046581899999999926, 0.00046581999999999874, 0.0004657360000000013, 0.00046581999999999874, 0.00046581899999999926, 0.00046588900000000405, 0.0004658049999999997, 0.00046581999999999874, 0.0004658190000000062, 0.0004657919999999996, 0.00046581899999999926, 0.0004657919999999996, 0.00046576400000000046, 0.00046576400000000046, 0.0004658049999999997, 0.00046580599999999917, 0.0004658049999999997, 0.00046581999999999874, 0.0004658049999999997, 0.0004657919999999996, 0.0004658190000000062, 0.000465778]</msg>
<status status="PASS" starttime="20201029 09:35:20.841" endtime="20201029 09:35:20.843"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:20.836" endtime="20201029 09:35:20.844"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:20.470" endtime="20201029 09:35:20.844"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:20.447" endtime="20201029 09:35:20.844"></status>
</kw>
<kw name="${n} = 35" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:35:20.847" endtime="20201029 09:35:20.866"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:20.845" endtime="20201029 09:35:20.867"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:20.875" endtime="20201029 09:35:20.911"></status>
</kw>
<msg timestamp="20201029 09:35:20.912" level="INFO">${RESULT} = {'cmd': 'list_ops 35', 'msg': ['list_ops 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:20.874" endtime="20201029 09:35:20.912"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:20.914" level="INFO">${RESULT} = {'cmd': 'list_ops 35', 'msg': ['list_ops 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:20.913" endtime="20201029 09:35:20.914"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:20.915" endtime="20201029 09:35:20.917"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:20.871" endtime="20201029 09:35:20.917"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:20.869" endtime="20201029 09:35:20.918"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:20.925" endtime="20201029 09:35:21.215"></status>
</kw>
<msg timestamp="20201029 09:35:21.218" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017187222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017677431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:20.923" endtime="20201029 09:35:21.218"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:21.227" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017187222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017677431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:21.219" endtime="20201029 09:35:21.228"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:21.229" endtime="20201029 09:35:21.230"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:20.920" endtime="20201029 09:35:21.231"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:20.918" endtime="20201029 09:35:21.231"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:35:21.235" level="INFO">${PHILIP_RES} = [{'diff': 0.0004902090000000019}, {'diff': 0.0004900969999999984}, {'diff': 0.0004900969999999984}, {'diff': 0.0004900829999999988}, {'diff': 0.000490125000000001}, {'diff': 0.0004900699999999987}, {'...</msg>
<status status="PASS" starttime="20201029 09:35:21.232" endtime="20201029 09:35:21.235"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:35:21.239" level="INFO">${RESULT} = {'diff': [0.0004902090000000019, 0.0004900969999999984, 0.0004900969999999984, 0.0004900829999999988, 0.000490125000000001, 0.0004900699999999987, 0.000490125000000001, 0.0004900830000000023, 0.000490...</msg>
<status status="PASS" starttime="20201029 09:35:21.236" endtime="20201029 09:35:21.239"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:35:21.243" level="INFO">NAME: 35-timer-trace</msg>
<status status="PASS" starttime="20201029 09:35:21.242" endtime="20201029 09:35:21.244"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:35:21.246" level="INFO">VALUE: [0.0004902090000000019, 0.0004900969999999984, 0.0004900969999999984, 0.0004900829999999988, 0.000490125000000001, 0.0004900699999999987, 0.000490125000000001, 0.0004900830000000023, 0.0004900830000000023, 0.0004900559999999991, 0.0004901109999999979, 0.0004900969999999984, 0.0004900969999999984, 0.0004900839999999983, 0.0004901110000000014, 0.0004900969999999984, 0.0004900970000000018, 0.0004901110000000014, 0.000490125000000001, 0.0004900829999999988, 0.0004900969999999984, 0.000490125000000001, 0.0004900839999999983, 0.000490125000000001, 0.0004900829999999988, 0.0004901390000000005, 0.0004900979999999978, 0.0004900969999999949, 0.0004900969999999949, 0.0004901110000000014, 0.0004901110000000014, 0.0004900980000000013, 0.0004900970000000018, 0.0004900830000000023, 0.0004900690000000027, 0.0004900280000000035, 0.0004900830000000023, 0.0004900970000000018, 0.0004900550000000031, 0.0004900840000000017, 0.0004900980000000013, 0.0004900830000000023, 0.0004900829999999953, 0.0004901109999999945, 0.000490124999999994, 0.0004900969999999949, 0.0004900419999999961, 0.0004901110000000014, 0.0004900980000000013, 0.0004900280000000035]</msg>
<status status="PASS" starttime="20201029 09:35:21.244" endtime="20201029 09:35:21.246"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:21.240" endtime="20201029 09:35:21.247"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:20.868" endtime="20201029 09:35:21.247"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:20.845" endtime="20201029 09:35:21.247"></status>
</kw>
<kw name="${n} = 36" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:35:21.250" endtime="20201029 09:35:21.269"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:21.248" endtime="20201029 09:35:21.270"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:21.278" endtime="20201029 09:35:21.313"></status>
</kw>
<msg timestamp="20201029 09:35:21.314" level="INFO">${RESULT} = {'cmd': 'list_ops 36', 'msg': ['list_ops 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:21.276" endtime="20201029 09:35:21.314"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:21.316" level="INFO">${RESULT} = {'cmd': 'list_ops 36', 'msg': ['list_ops 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:21.315" endtime="20201029 09:35:21.317"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:21.317" endtime="20201029 09:35:21.320"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:21.274" endtime="20201029 09:35:21.320"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:21.272" endtime="20201029 09:35:21.321"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:21.327" endtime="20201029 09:35:21.629"></status>
</kw>
<msg timestamp="20201029 09:35:21.632" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016642958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017158056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:21.326" endtime="20201029 09:35:21.632"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:21.640" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016642958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017158056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:21.633" endtime="20201029 09:35:21.640"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:21.641" endtime="20201029 09:35:21.642"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:21.323" endtime="20201029 09:35:21.643"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:21.321" endtime="20201029 09:35:21.643"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:35:21.647" level="INFO">${PHILIP_RES} = [{'diff': 0.000515098000000002}, {'diff': 0.0005149859999999985}, {'diff': 0.0005149589999999989}, {'diff': 0.0005150000000000016}, {'diff': 0.0005149859999999985}, {'diff': 0.0005150559999999998}, {'...</msg>
<status status="PASS" starttime="20201029 09:35:21.644" endtime="20201029 09:35:21.647"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:35:21.651" level="INFO">${RESULT} = {'diff': [0.000515098000000002, 0.0005149859999999985, 0.0005149589999999989, 0.0005150000000000016, 0.0005149859999999985, 0.0005150559999999998, 0.000514986000000002, 0.000514986000000002, 0.0005149...</msg>
<status status="PASS" starttime="20201029 09:35:21.648" endtime="20201029 09:35:21.651"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:35:21.655" level="INFO">NAME: 36-timer-trace</msg>
<status status="PASS" starttime="20201029 09:35:21.654" endtime="20201029 09:35:21.656"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:35:21.658" level="INFO">VALUE: [0.000515098000000002, 0.0005149859999999985, 0.0005149589999999989, 0.0005150000000000016, 0.0005149859999999985, 0.0005150559999999998, 0.000514986000000002, 0.000514986000000002, 0.0005149859999999985, 0.000514986999999998, 0.0005149870000000015, 0.000514986000000002, 0.000514971999999999, 0.000514971999999999, 0.000514986000000002, 0.0005150140000000011, 0.0005149859999999985, 0.000514971999999999, 0.0005150140000000011, 0.0005149859999999985, 0.0005149999999999981, 0.000514971999999999, 0.000514986000000002, 0.000514971999999999, 0.0005150280000000007, 0.0005149720000000024, 0.0005149720000000024, 0.0005149870000000015, 0.000514986000000002, 0.000514986000000002, 0.0005149859999999951, 0.0005150000000000016, 0.0005149720000000024, 0.0005149859999999951, 0.0005150000000000016, 0.0005149720000000024, 0.0005150280000000007, 0.0005149870000000015, 0.0005150270000000012, 0.0005150000000000016, 0.0005150280000000007, 0.0005150000000000016, 0.0005150000000000016, 0.0005150000000000016, 0.0005149999999999946, 0.0005149870000000015, 0.0005149590000000023, 0.000514986000000002, 0.0005149720000000024, 0.0005149719999999955]</msg>
<status status="PASS" starttime="20201029 09:35:21.656" endtime="20201029 09:35:21.659"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:21.652" endtime="20201029 09:35:21.660"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:21.270" endtime="20201029 09:35:21.660"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:21.248" endtime="20201029 09:35:21.660"></status>
</kw>
<kw name="${n} = 37" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:35:21.663" endtime="20201029 09:35:21.682"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:21.661" endtime="20201029 09:35:21.683"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:21.690" endtime="20201029 09:35:21.726"></status>
</kw>
<msg timestamp="20201029 09:35:21.727" level="INFO">${RESULT} = {'cmd': 'list_ops 37', 'msg': ['list_ops 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:21.689" endtime="20201029 09:35:21.727"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:21.729" level="INFO">${RESULT} = {'cmd': 'list_ops 37', 'msg': ['list_ops 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:21.728" endtime="20201029 09:35:21.730"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:21.730" endtime="20201029 09:35:21.732"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:21.686" endtime="20201029 09:35:21.733"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:21.685" endtime="20201029 09:35:21.733"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:21.739" endtime="20201029 09:35:22.026"></status>
</kw>
<msg timestamp="20201029 09:35:22.029" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016546, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017086611, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 09:35:21.738" endtime="20201029 09:35:22.029"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:22.037" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016546, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017086611, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 09:35:22.030" endtime="20201029 09:35:22.038"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:22.039" endtime="20201029 09:35:22.040"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:21.735" endtime="20201029 09:35:22.041"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:21.734" endtime="20201029 09:35:22.041"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:35:22.046" level="INFO">${PHILIP_RES} = [{'diff': 0.0005406109999999999}, {'diff': 0.0005404859999999997}, {'diff': 0.0005404859999999997}, {'diff': 0.0005404859999999997}, {'diff': 0.0005404729999999996}, {'diff': 0.0005404999999999993}, {...</msg>
<status status="PASS" starttime="20201029 09:35:22.042" endtime="20201029 09:35:22.046"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:35:22.051" level="INFO">${RESULT} = {'diff': [0.0005406109999999999, 0.0005404859999999997, 0.0005404859999999997, 0.0005404859999999997, 0.0005404729999999996, 0.0005404999999999993, 0.0005404859999999997, 0.0005404999999999993, 0.0005...</msg>
<status status="PASS" starttime="20201029 09:35:22.047" endtime="20201029 09:35:22.051"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:35:22.056" level="INFO">NAME: 37-timer-trace</msg>
<status status="PASS" starttime="20201029 09:35:22.055" endtime="20201029 09:35:22.056"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:35:22.059" level="INFO">VALUE: [0.0005406109999999999, 0.0005404859999999997, 0.0005404859999999997, 0.0005404859999999997, 0.0005404729999999996, 0.0005404999999999993, 0.0005404859999999997, 0.0005404999999999993, 0.0005405139999999989, 0.0005404720000000002, 0.0005404859999999997, 0.0005404869999999992, 0.0005404999999999993, 0.0005404999999999993, 0.0005404720000000002, 0.000540444000000001, 0.0005404720000000002, 0.0005405279999999985, 0.0005405139999999989, 0.0005404309999999975, 0.0005404859999999997, 0.0005405000000000028, 0.0005404999999999993, 0.0005404859999999997, 0.0005404019999999989, 0.0005404859999999997, 0.0005404590000000001, 0.0005404999999999993, 0.0005404859999999997, 0.0005404859999999997, 0.0005404720000000002, 0.0005404859999999997, 0.0005405139999999989, 0.0005405139999999989, 0.0005404590000000001, 0.0005404999999999993, 0.0005405139999999989, 0.0005404999999999993, 0.0005404720000000002, 0.0005405560000000045, 0.0005404859999999997, 0.0005405410000000055, 0.0005405000000000063, 0.0005404859999999997, 0.0005404720000000002, 0.0005404859999999997, 0.000540444000000001, 0.0005404720000000002, 0.0005404869999999992, 0.0005404859999999997]</msg>
<status status="PASS" starttime="20201029 09:35:22.057" endtime="20201029 09:35:22.066"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:22.052" endtime="20201029 09:35:22.067"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:21.683" endtime="20201029 09:35:22.067"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:21.661" endtime="20201029 09:35:22.067"></status>
</kw>
<kw name="${n} = 38" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:35:22.070" endtime="20201029 09:35:22.089"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:22.068" endtime="20201029 09:35:22.090"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:22.098" endtime="20201029 09:35:22.137"></status>
</kw>
<msg timestamp="20201029 09:35:22.137" level="INFO">${RESULT} = {'cmd': 'list_ops 38', 'msg': ['list_ops 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:22.097" endtime="20201029 09:35:22.138"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:22.140" level="INFO">${RESULT} = {'cmd': 'list_ops 38', 'msg': ['list_ops 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:22.139" endtime="20201029 09:35:22.140"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:22.141" endtime="20201029 09:35:22.143"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:22.094" endtime="20201029 09:35:22.143"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:22.092" endtime="20201029 09:35:22.144"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:22.150" endtime="20201029 09:35:22.460"></status>
</kw>
<msg timestamp="20201029 09:35:22.463" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017244556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01781125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 09:35:22.149" endtime="20201029 09:35:22.463"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:22.471" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017244556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01781125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 09:35:22.464" endtime="20201029 09:35:22.471"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:22.472" endtime="20201029 09:35:22.474"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:22.146" endtime="20201029 09:35:22.475"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:22.144" endtime="20201029 09:35:22.475"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:35:22.479" level="INFO">${PHILIP_RES} = [{'diff': 0.0005666939999999995}, {'diff': 0.0005666110000000016}, {'diff': 0.0005665980000000015}, {'diff': 0.000566597000000002}, {'diff': 0.0005665419999999997}, {'diff': 0.000566582999999999}, {'d...</msg>
<status status="PASS" starttime="20201029 09:35:22.476" endtime="20201029 09:35:22.479"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:35:22.483" level="INFO">${RESULT} = {'diff': [0.0005666939999999995, 0.0005666110000000016, 0.0005665980000000015, 0.000566597000000002, 0.0005665419999999997, 0.000566582999999999, 0.0005666109999999981, 0.00056668, 0.00056659699999999...</msg>
<status status="PASS" starttime="20201029 09:35:22.480" endtime="20201029 09:35:22.483"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:35:22.488" level="INFO">NAME: 38-timer-trace</msg>
<status status="PASS" starttime="20201029 09:35:22.487" endtime="20201029 09:35:22.488"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:35:22.490" level="INFO">VALUE: [0.0005666939999999995, 0.0005666110000000016, 0.0005665980000000015, 0.000566597000000002, 0.0005665419999999997, 0.000566582999999999, 0.0005666109999999981, 0.00056668, 0.0005665969999999985, 0.0005666120000000011, 0.0005666659999999969, 0.0005666109999999981, 0.0005665839999999984, 0.0005665969999999985, 0.0005665969999999985, 0.0005665969999999985, 0.0005665969999999985, 0.0005665969999999985, 0.000566582999999999, 0.000566597999999998, 0.0005666109999999981, 0.0005666109999999981, 0.0005665839999999984, 0.000566597000000002, 0.000566597000000002, 0.000566597000000002, 0.000566597000000002, 0.0005666250000000012, 0.000566597000000002, 0.0005665980000000015, 0.0005665559999999958, 0.0005665829999999955, 0.0005665980000000015, 0.0005666109999999946, 0.0005666109999999946, 0.0005665549999999964, 0.000566583999999995, 0.0005666249999999942, 0.0005666669999999999, 0.0005665979999999946, 0.0005666109999999946, 0.0005665969999999951, 0.0005666109999999946, 0.0005665829999999955, 0.0005665969999999951, 0.0005665969999999951, 0.0005665979999999946, 0.0005665279999999967, 0.0005665829999999955, 0.0005666119999999941]</msg>
<status status="PASS" starttime="20201029 09:35:22.489" endtime="20201029 09:35:22.491"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:22.484" endtime="20201029 09:35:22.492"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:22.091" endtime="20201029 09:35:22.492"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:22.068" endtime="20201029 09:35:22.492"></status>
</kw>
<kw name="${n} = 39" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:35:22.495" endtime="20201029 09:35:22.514"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:22.493" endtime="20201029 09:35:22.515"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:22.523" endtime="20201029 09:35:22.562"></status>
</kw>
<msg timestamp="20201029 09:35:22.563" level="INFO">${RESULT} = {'cmd': 'list_ops 39', 'msg': ['list_ops 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:22.521" endtime="20201029 09:35:22.563"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:22.565" level="INFO">${RESULT} = {'cmd': 'list_ops 39', 'msg': ['list_ops 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:22.564" endtime="20201029 09:35:22.566"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:22.567" endtime="20201029 09:35:22.569"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:22.519" endtime="20201029 09:35:22.570"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:22.517" endtime="20201029 09:35:22.570"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:22.577" endtime="20201029 09:35:22.863"></status>
</kw>
<msg timestamp="20201029 09:35:22.866" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017111069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0177045, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 09:35:22.575" endtime="20201029 09:35:22.867"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:22.875" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017111069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0177045, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 09:35:22.868" endtime="20201029 09:35:22.875"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:22.876" endtime="20201029 09:35:22.878"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:22.573" endtime="20201029 09:35:22.878"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:22.571" endtime="20201029 09:35:22.879"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:35:22.883" level="INFO">${PHILIP_RES} = [{'diff': 0.0005934310000000019}, {'diff': 0.0005932919999999987}, {'diff': 0.0005933190000000019}, {'diff': 0.0005933340000000009}, {'diff': 0.0005932639999999996}, {'diff': 0.000593332999999998}, {'...</msg>
<status status="PASS" starttime="20201029 09:35:22.879" endtime="20201029 09:35:22.883"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:35:22.887" level="INFO">${RESULT} = {'diff': [0.0005934310000000019, 0.0005932919999999987, 0.0005933190000000019, 0.0005933340000000009, 0.0005932639999999996, 0.000593332999999998, 0.0005933200000000013, 0.0005933189999999984, 0.00059...</msg>
<status status="PASS" starttime="20201029 09:35:22.884" endtime="20201029 09:35:22.887"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:35:22.891" level="INFO">NAME: 39-timer-trace</msg>
<status status="PASS" starttime="20201029 09:35:22.890" endtime="20201029 09:35:22.892"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:35:22.894" level="INFO">VALUE: [0.0005934310000000019, 0.0005932919999999987, 0.0005933190000000019, 0.0005933340000000009, 0.0005932639999999996, 0.000593332999999998, 0.0005933200000000013, 0.0005933189999999984, 0.0005932919999999987, 0.0005933190000000019, 0.0005933049999999988, 0.0005933750000000002, 0.0005932769999999997, 0.0005933620000000001, 0.0005933049999999988, 0.0005932779999999992, 0.0005933060000000018, 0.0005933189999999984, 0.0005933200000000013, 0.0005933200000000013, 0.0005933189999999984, 0.0005933200000000013, 0.0005933190000000019, 0.0005933200000000013, 0.000593347000000001, 0.0005933050000000023, 0.0005933480000000005, 0.0005933050000000023, 0.0005933330000000014, 0.0005932639999999961, 0.0005933190000000019, 0.0005933060000000018, 0.0005933329999999945, 0.0005932920000000022, 0.0005933200000000013, 0.0005932499999999966, 0.0005933060000000018, 0.0005933050000000023, 0.0005933199999999944, 0.0005933200000000013, 0.0005933050000000023, 0.0005933199999999944, 0.0005933050000000023, 0.0005933190000000019, 0.0005933059999999948, 0.0005933050000000023, 0.0005933200000000013, 0.000593347000000001, 0.0005933190000000019, 0.0005933060000000018]</msg>
<status status="PASS" starttime="20201029 09:35:22.892" endtime="20201029 09:35:22.895"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:22.888" endtime="20201029 09:35:22.896"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:22.515" endtime="20201029 09:35:22.897"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:22.493" endtime="20201029 09:35:22.897"></status>
</kw>
<kw name="${n} = 40" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:35:22.899" endtime="20201029 09:35:22.919"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:22.898" endtime="20201029 09:35:22.919"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:22.927" endtime="20201029 09:35:22.968"></status>
</kw>
<msg timestamp="20201029 09:35:22.968" level="INFO">${RESULT} = {'cmd': 'list_ops 40', 'msg': ['list_ops 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:22.926" endtime="20201029 09:35:22.969"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:22.971" level="INFO">${RESULT} = {'cmd': 'list_ops 40', 'msg': ['list_ops 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:22.970" endtime="20201029 09:35:22.971"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:22.972" endtime="20201029 09:35:22.974"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:22.923" endtime="20201029 09:35:22.974"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:22.921" endtime="20201029 09:35:22.975"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:22.982" endtime="20201029 09:35:23.268"></status>
</kw>
<msg timestamp="20201029 09:35:23.271" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017112153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017732861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:22.980" endtime="20201029 09:35:23.272"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:23.280" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017112153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017732861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:23.272" endtime="20201029 09:35:23.280"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:23.281" endtime="20201029 09:35:23.283"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:22.977" endtime="20201029 09:35:23.283"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:22.975" endtime="20201029 09:35:23.284"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:35:23.288" level="INFO">${PHILIP_RES} = [{'diff': 0.0006207079999999976}, {'diff': 0.0006206529999999988}, {'diff': 0.0006206529999999988}, {'diff': 0.0006206529999999988}, {'diff': 0.0006206249999999996}, {'diff': 0.0006206249999999996}, {...</msg>
<status status="PASS" starttime="20201029 09:35:23.284" endtime="20201029 09:35:23.288"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:35:23.293" level="INFO">${RESULT} = {'diff': [0.0006207079999999976, 0.0006206529999999988, 0.0006206529999999988, 0.0006206529999999988, 0.0006206249999999996, 0.0006206249999999996, 0.0006206519999999993, 0.0006206250000000031, 0.0006...</msg>
<status status="PASS" starttime="20201029 09:35:23.289" endtime="20201029 09:35:23.293"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:35:23.297" level="INFO">NAME: 40-timer-trace</msg>
<status status="PASS" starttime="20201029 09:35:23.296" endtime="20201029 09:35:23.298"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:35:23.300" level="INFO">VALUE: [0.0006207079999999976, 0.0006206529999999988, 0.0006206529999999988, 0.0006206529999999988, 0.0006206249999999996, 0.0006206249999999996, 0.0006206519999999993, 0.0006206250000000031, 0.0006206250000000031, 0.0006206390000000027, 0.0006206249999999996, 0.0006206390000000027, 0.0006206390000000027, 0.0006206529999999988, 0.0006206949999999975, 0.0006206530000000023, 0.0006206249999999996, 0.0006206529999999988, 0.0006206529999999988, 0.0006206110000000001, 0.0006206110000000001, 0.0006206659999999989, 0.0006206110000000001, 0.0006206389999999992, 0.0006206389999999992, 0.0006206529999999988, 0.0006206389999999992, 0.0006206389999999992, 0.0006206389999999992, 0.0006206389999999992, 0.0006206529999999988, 0.0006206249999999996, 0.0006206110000000001, 0.0006206669999999984, 0.0006207220000000041, 0.0006206389999999992, 0.0006206809999999979, 0.0006206389999999992, 0.000620709000000004, 0.0006206249999999996, 0.0006206249999999996, 0.0006206389999999992, 0.000620598, 0.0006206110000000001, 0.0006206670000000053, 0.0006206389999999992, 0.0006206670000000053, 0.0006206390000000062, 0.0006205700000000008, 0.0006206250000000066]</msg>
<status status="PASS" starttime="20201029 09:35:23.298" endtime="20201029 09:35:23.300"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:23.294" endtime="20201029 09:35:23.301"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:22.920" endtime="20201029 09:35:23.301"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:22.897" endtime="20201029 09:35:23.302"></status>
</kw>
<kw name="${n} = 41" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:35:23.304" endtime="20201029 09:35:23.324"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:23.303" endtime="20201029 09:35:23.324"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:23.333" endtime="20201029 09:35:23.377"></status>
</kw>
<msg timestamp="20201029 09:35:23.378" level="INFO">${RESULT} = {'cmd': 'list_ops 41', 'msg': ['list_ops 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:23.331" endtime="20201029 09:35:23.378"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:23.380" level="INFO">${RESULT} = {'cmd': 'list_ops 41', 'msg': ['list_ops 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:23.379" endtime="20201029 09:35:23.381"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:23.382" endtime="20201029 09:35:23.383"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:23.328" endtime="20201029 09:35:23.384"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:23.326" endtime="20201029 09:35:23.384"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:23.391" endtime="20201029 09:35:23.678"></status>
</kw>
<msg timestamp="20201029 09:35:23.681" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017997194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018645889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:23.389" endtime="20201029 09:35:23.682"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:23.690" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017997194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018645889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:23.683" endtime="20201029 09:35:23.690"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:23.691" endtime="20201029 09:35:23.693"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:23.387" endtime="20201029 09:35:23.693"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:23.385" endtime="20201029 09:35:23.694"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:35:23.698" level="INFO">${PHILIP_RES} = [{'diff': 0.0006486949999999977}, {'diff': 0.0006486249999999999}, {'diff': 0.0006485830000000012}, {'diff': 0.0006485840000000007}, {'diff': 0.0006485690000000016}, {'diff': 0.000648555000000002}, {'...</msg>
<status status="PASS" starttime="20201029 09:35:23.694" endtime="20201029 09:35:23.698"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:35:23.702" level="INFO">${RESULT} = {'diff': [0.0006486949999999977, 0.0006486249999999999, 0.0006485830000000012, 0.0006485840000000007, 0.0006485690000000016, 0.000648555000000002, 0.0006485700000000011, 0.0006485690000000016, 0.00064...</msg>
<status status="PASS" starttime="20201029 09:35:23.699" endtime="20201029 09:35:23.702"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:35:23.706" level="INFO">NAME: 41-timer-trace</msg>
<status status="PASS" starttime="20201029 09:35:23.705" endtime="20201029 09:35:23.707"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:35:23.709" level="INFO">VALUE: [0.0006486949999999977, 0.0006486249999999999, 0.0006485830000000012, 0.0006485840000000007, 0.0006485690000000016, 0.000648555000000002, 0.0006485700000000011, 0.0006485690000000016, 0.0006485830000000012, 0.0006485840000000007, 0.0006485689999999981, 0.0006485689999999981, 0.0006486249999999999, 0.0006485829999999977, 0.0006486249999999999, 0.0006485830000000012, 0.0006485970000000008, 0.0006485840000000007, 0.0006485700000000011, 0.0006485830000000012, 0.0006485560000000015, 0.0006485690000000016, 0.0006485830000000012, 0.0006485700000000011, 0.0006485970000000008, 0.0006485690000000016, 0.0006485280000000024, 0.000648555000000002, 0.0006485690000000016, 0.0006485700000000011, 0.0006485549999999951, 0.0006485689999999947, 0.0006486110000000003, 0.0006485549999999951, 0.0006485689999999947, 0.0006485839999999937, 0.0006485829999999942, 0.0006485970000000008, 0.0006485560000000015, 0.0006485690000000016, 0.0006485560000000015, 0.0006485560000000015, 0.0006485690000000016, 0.0006485840000000007, 0.0006485830000000012, 0.0006485690000000016, 0.0006485700000000011, 0.000648555000000002, 0.0006485830000000012, 0.0006485980000000002]</msg>
<status status="PASS" starttime="20201029 09:35:23.707" endtime="20201029 09:35:23.710"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:23.703" endtime="20201029 09:35:23.710"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:23.325" endtime="20201029 09:35:23.711"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:23.302" endtime="20201029 09:35:23.711"></status>
</kw>
<kw name="${n} = 42" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:35:23.713" endtime="20201029 09:35:23.733"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:23.712" endtime="20201029 09:35:23.733"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:23.742" endtime="20201029 09:35:23.787"></status>
</kw>
<msg timestamp="20201029 09:35:23.788" level="INFO">${RESULT} = {'cmd': 'list_ops 42', 'msg': ['list_ops 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:23.740" endtime="20201029 09:35:23.788"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:23.790" level="INFO">${RESULT} = {'cmd': 'list_ops 42', 'msg': ['list_ops 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:23.789" endtime="20201029 09:35:23.791"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:23.791" endtime="20201029 09:35:23.794"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:23.738" endtime="20201029 09:35:23.795"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:23.736" endtime="20201029 09:35:23.795"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:23.802" endtime="20201029 09:35:24.090"></status>
</kw>
<msg timestamp="20201029 09:35:24.093" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017301708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017978944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:23.800" endtime="20201029 09:35:24.093"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:24.101" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017301708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017978944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:24.094" endtime="20201029 09:35:24.102"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:24.102" endtime="20201029 09:35:24.104"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:23.797" endtime="20201029 09:35:24.105"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:23.796" endtime="20201029 09:35:24.105"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:35:24.109" level="INFO">${PHILIP_RES} = [{'diff': 0.0006772360000000012}, {'diff': 0.0006771250000000006}, {'diff': 0.0006771250000000006}, {'diff': 0.0006770979999999975}, {'diff': 0.0006770689999999989}, {'diff': 0.0006771250000000006}, {...</msg>
<status status="PASS" starttime="20201029 09:35:24.106" endtime="20201029 09:35:24.109"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:35:24.113" level="INFO">${RESULT} = {'diff': [0.0006772360000000012, 0.0006771250000000006, 0.0006771250000000006, 0.0006770979999999975, 0.0006770689999999989, 0.0006771250000000006, 0.0006771250000000006, 0.0006771110000000011, 0.0006...</msg>
<status status="PASS" starttime="20201029 09:35:24.110" endtime="20201029 09:35:24.114"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:35:24.118" level="INFO">NAME: 42-timer-trace</msg>
<status status="PASS" starttime="20201029 09:35:24.117" endtime="20201029 09:35:24.118"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:35:24.120" level="INFO">VALUE: [0.0006772360000000012, 0.0006771250000000006, 0.0006771250000000006, 0.0006770979999999975, 0.0006770689999999989, 0.0006771250000000006, 0.0006771250000000006, 0.0006771110000000011, 0.0006771249999999972, 0.0006771110000000011, 0.0006771110000000011, 0.0006771799999999994, 0.0006771109999999976, 0.0006771250000000006, 0.0006771250000000006, 0.0006771390000000002, 0.0006770970000000015, 0.0006770970000000015, 0.0006770829999999985, 0.0006771110000000011, 0.0006771109999999941, 0.0006771529999999998, 0.0006770970000000015, 0.0006771110000000011, 0.0006770970000000015, 0.0006770689999999954, 0.0006771110000000011, 0.0006771110000000011, 0.0006771390000000002, 0.0006771110000000011, 0.0006770969999999946, 0.0006770830000000019, 0.0006771110000000011, 0.0006771110000000011, 0.0006770700000000018, 0.0006770699999999949, 0.0006771110000000011, 0.0006771250000000006, 0.0006771109999999941, 0.0006771120000000005, 0.0006771250000000006, 0.0006771110000000011, 0.0006771250000000006, 0.0006771109999999941, 0.0006771250000000006, 0.0006770970000000015, 0.0006771110000000011, 0.0006770690000000024, 0.0006770969999999946, 0.0006771529999999998]</msg>
<status status="PASS" starttime="20201029 09:35:24.119" endtime="20201029 09:35:24.122"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:24.114" endtime="20201029 09:35:24.122"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:23.734" endtime="20201029 09:35:24.123"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:23.711" endtime="20201029 09:35:24.123"></status>
</kw>
<kw name="${n} = 43" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:35:24.125" endtime="20201029 09:35:24.145"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:24.124" endtime="20201029 09:35:24.146"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:24.154" endtime="20201029 09:35:24.200"></status>
</kw>
<msg timestamp="20201029 09:35:24.201" level="INFO">${RESULT} = {'cmd': 'list_ops 43', 'msg': ['list_ops 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:24.152" endtime="20201029 09:35:24.201"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:24.204" level="INFO">${RESULT} = {'cmd': 'list_ops 43', 'msg': ['list_ops 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:24.202" endtime="20201029 09:35:24.204"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:24.205" endtime="20201029 09:35:24.206"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:24.150" endtime="20201029 09:35:24.207"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:24.148" endtime="20201029 09:35:24.207"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:24.214" endtime="20201029 09:35:24.500"></status>
</kw>
<msg timestamp="20201029 09:35:24.504" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017223014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017929375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:24.212" endtime="20201029 09:35:24.504"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:24.512" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017223014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017929375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:24.505" endtime="20201029 09:35:24.512"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:24.513" endtime="20201029 09:35:24.515"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:24.210" endtime="20201029 09:35:24.515"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:24.208" endtime="20201029 09:35:24.516"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:35:24.520" level="INFO">${PHILIP_RES} = [{'diff': 0.0007063610000000026}, {'diff': 0.0007062499999999985}, {'diff': 0.0007062499999999985}, {'diff': 0.0007062639999999981}, {'diff': 0.0007062780000000012}, {'diff': 0.000706250000000002}, {'...</msg>
<status status="PASS" starttime="20201029 09:35:24.516" endtime="20201029 09:35:24.520"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:35:24.525" level="INFO">${RESULT} = {'diff': [0.0007063610000000026, 0.0007062499999999985, 0.0007062499999999985, 0.0007062639999999981, 0.0007062780000000012, 0.000706250000000002, 0.0007062770000000017, 0.0007062499999999985, 0.00070...</msg>
<status status="PASS" starttime="20201029 09:35:24.521" endtime="20201029 09:35:24.525"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:35:24.529" level="INFO">NAME: 43-timer-trace</msg>
<status status="PASS" starttime="20201029 09:35:24.528" endtime="20201029 09:35:24.530"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:35:24.532" level="INFO">VALUE: [0.0007063610000000026, 0.0007062499999999985, 0.0007062499999999985, 0.0007062639999999981, 0.0007062780000000012, 0.000706250000000002, 0.0007062770000000017, 0.0007062499999999985, 0.0007062499999999985, 0.0007062780000000012, 0.000706250000000002, 0.0007062079999999998, 0.0007062640000000016, 0.0007062639999999981, 0.0007062630000000021, 0.0007062780000000012, 0.000706250000000002, 0.0007062630000000021, 0.0007062499999999985, 0.0007062499999999985, 0.0007062639999999981, 0.0007062499999999985, 0.0007062639999999981, 0.0007062640000000051, 0.0007062360000000059, 0.0007062770000000052, 0.0007062639999999981, 0.0007062499999999985, 0.0007062499999999985, 0.0007062909999999978, 0.0007062499999999985, 0.0007062499999999985, 0.0007062499999999985, 0.0007062640000000051, 0.0007062640000000051, 0.0007062500000000055, 0.0007062630000000056, 0.0007062639999999981, 0.000706235999999999, 0.0007062639999999981, 0.0007062499999999985, 0.0007062639999999981, 0.0007062919999999973, 0.0007062639999999981, 0.0007062219999999994, 0.0007062640000000051, 0.0007062500000000055, 0.0007062780000000046, 0.0007062769999999982, 0.0007062499999999985]</msg>
<status status="PASS" starttime="20201029 09:35:24.530" endtime="20201029 09:35:24.533"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:24.526" endtime="20201029 09:35:24.533"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:24.146" endtime="20201029 09:35:24.534"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:24.123" endtime="20201029 09:35:24.534"></status>
</kw>
<kw name="${n} = 44" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:35:24.536" endtime="20201029 09:35:24.556"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:24.535" endtime="20201029 09:35:24.556"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:24.565" endtime="20201029 09:35:24.613"></status>
</kw>
<msg timestamp="20201029 09:35:24.614" level="INFO">${RESULT} = {'cmd': 'list_ops 44', 'msg': ['list_ops 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:24.563" endtime="20201029 09:35:24.614"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:24.616" level="INFO">${RESULT} = {'cmd': 'list_ops 44', 'msg': ['list_ops 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:24.615" endtime="20201029 09:35:24.617"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:24.617" endtime="20201029 09:35:24.619"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:24.561" endtime="20201029 09:35:24.620"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:24.559" endtime="20201029 09:35:24.620"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:24.627" endtime="20201029 09:35:24.916"></status>
</kw>
<msg timestamp="20201029 09:35:24.919" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017143042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017879167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:24.625" endtime="20201029 09:35:24.919"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:24.927" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017143042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017879167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:24.920" endtime="20201029 09:35:24.928"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:24.929" endtime="20201029 09:35:24.930"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:24.623" endtime="20201029 09:35:24.931"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:24.621" endtime="20201029 09:35:24.931"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:35:24.935" level="INFO">${PHILIP_RES} = [{'diff': 0.0007361250000000007}, {'diff': 0.0007360279999999997}, {'diff': 0.0007359579999999984}, {'diff': 0.0007360549999999993}, {'diff': 0.0007360000000000005}, {'diff': 0.0007360140000000001}, {...</msg>
<status status="PASS" starttime="20201029 09:35:24.932" endtime="20201029 09:35:24.935"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:35:24.939" level="INFO">${RESULT} = {'diff': [0.0007361250000000007, 0.0007360279999999997, 0.0007359579999999984, 0.0007360549999999993, 0.0007360000000000005, 0.0007360140000000001, 0.0007359719999999979, 0.0007360140000000001, 0.0007...</msg>
<status status="PASS" starttime="20201029 09:35:24.936" endtime="20201029 09:35:24.940"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:35:24.944" level="INFO">NAME: 44-timer-trace</msg>
<status status="PASS" starttime="20201029 09:35:24.943" endtime="20201029 09:35:24.944"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:35:24.946" level="INFO">VALUE: [0.0007361250000000007, 0.0007360279999999997, 0.0007359579999999984, 0.0007360549999999993, 0.0007360000000000005, 0.0007360140000000001, 0.0007359719999999979, 0.0007360140000000001, 0.0007360140000000001, 0.0007360419999999993, 0.0007360000000000005, 0.0007360549999999993, 0.000735986000000001, 0.0007360140000000001, 0.0007360140000000001, 0.0007360000000000005, 0.0007360140000000001, 0.0007360000000000005, 0.0007360140000000001, 0.0007360000000000005, 0.000735985999999994, 0.0007360270000000002, 0.0007360279999999997, 0.0007359720000000014, 0.0007360419999999993, 0.0007360829999999985, 0.0007360279999999997, 0.0007359579999999949, 0.0007360000000000005, 0.0007360000000000005, 0.0007360140000000001, 0.0007360279999999997, 0.0007360130000000006, 0.0007360140000000001, 0.0007360279999999997, 0.0007360129999999937, 0.0007360689999999989, 0.0007360140000000001, 0.0007360140000000001, 0.0007359590000000013, 0.0007360000000000005, 0.0007360140000000001, 0.0007360130000000006, 0.0007360279999999997, 0.0007359720000000014, 0.0007360000000000005, 0.0007360130000000006, 0.0007360000000000005, 0.0007360000000000005, 0.0007360270000000002]</msg>
<status status="PASS" starttime="20201029 09:35:24.945" endtime="20201029 09:35:24.947"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:24.940" endtime="20201029 09:35:24.948"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:24.557" endtime="20201029 09:35:24.948"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:24.534" endtime="20201029 09:35:24.948"></status>
</kw>
<kw name="${n} = 45" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:35:24.951" endtime="20201029 09:35:24.970"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:24.949" endtime="20201029 09:35:24.971"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:24.979" endtime="20201029 09:35:25.029"></status>
</kw>
<msg timestamp="20201029 09:35:25.029" level="INFO">${RESULT} = {'cmd': 'list_ops 45', 'msg': ['list_ops 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:24.978" endtime="20201029 09:35:25.029"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:25.032" level="INFO">${RESULT} = {'cmd': 'list_ops 45', 'msg': ['list_ops 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:25.030" endtime="20201029 09:35:25.032"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:25.033" endtime="20201029 09:35:25.036"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:24.975" endtime="20201029 09:35:25.036"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:24.973" endtime="20201029 09:35:25.037"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:25.043" endtime="20201029 09:35:25.329"></status>
</kw>
<msg timestamp="20201029 09:35:25.333" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017339542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018106069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:25.042" endtime="20201029 09:35:25.333"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:25.341" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017339542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018106069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:25.334" endtime="20201029 09:35:25.341"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:25.342" endtime="20201029 09:35:25.344"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:25.039" endtime="20201029 09:35:25.344"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:25.037" endtime="20201029 09:35:25.345"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:35:25.349" level="INFO">${PHILIP_RES} = [{'diff': 0.0007665269999999995}, {'diff': 0.000766333000000001}, {'diff': 0.0007663889999999993}, {'diff': 0.0007663610000000001}, {'diff': 0.0007663889999999993}, {'diff': 0.0007664169999999984}, {'...</msg>
<status status="PASS" starttime="20201029 09:35:25.345" endtime="20201029 09:35:25.349"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:35:25.353" level="INFO">${RESULT} = {'diff': [0.0007665269999999995, 0.000766333000000001, 0.0007663889999999993, 0.0007663610000000001, 0.0007663889999999993, 0.0007664169999999984, 0.0007663749999999997, 0.0007663610000000001, 0.00076...</msg>
<status status="PASS" starttime="20201029 09:35:25.350" endtime="20201029 09:35:25.353"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:35:25.357" level="INFO">NAME: 45-timer-trace</msg>
<status status="PASS" starttime="20201029 09:35:25.356" endtime="20201029 09:35:25.358"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:35:25.360" level="INFO">VALUE: [0.0007665269999999995, 0.000766333000000001, 0.0007663889999999993, 0.0007663610000000001, 0.0007663889999999993, 0.0007664169999999984, 0.0007663749999999997, 0.0007663610000000001, 0.0007663749999999997, 0.0007663749999999997, 0.0007663610000000001, 0.0007663749999999997, 0.0007663749999999997, 0.0007663620000000031, 0.0007663610000000001, 0.0007663049999999984, 0.0007663610000000001, 0.0007663610000000001, 0.0007663610000000001, 0.0007663610000000001, 0.0007663610000000001, 0.0007663470000000006, 0.0007663749999999997, 0.000766333000000001, 0.000766333000000001, 0.0007663749999999997, 0.0007663610000000001, 0.0007663610000000001, 0.0007663749999999997, 0.0007663749999999997, 0.0007663610000000001, 0.000766348, 0.0007663470000000006, 0.000766348, 0.0007663749999999997, 0.0007663890000000062, 0.0007663610000000001, 0.0007663749999999997, 0.0007663200000000009, 0.0007663470000000006, 0.0007664169999999984, 0.0007663470000000006, 0.0007663749999999997, 0.0007663470000000006, 0.0007663749999999997, 0.0007663610000000001, 0.0007663749999999997, 0.0007663610000000001, 0.0007663189999999945, 0.0007663619999999996]</msg>
<status status="PASS" starttime="20201029 09:35:25.358" endtime="20201029 09:35:25.361"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:25.354" endtime="20201029 09:35:25.362"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:24.972" endtime="20201029 09:35:25.362"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:24.949" endtime="20201029 09:35:25.363"></status>
</kw>
<kw name="${n} = 46" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:35:25.365" endtime="20201029 09:35:25.384"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:25.363" endtime="20201029 09:35:25.385"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:25.394" endtime="20201029 09:35:25.445"></status>
</kw>
<msg timestamp="20201029 09:35:25.446" level="INFO">${RESULT} = {'cmd': 'list_ops 46', 'msg': ['list_ops 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:25.392" endtime="20201029 09:35:25.446"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:25.448" level="INFO">${RESULT} = {'cmd': 'list_ops 46', 'msg': ['list_ops 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:25.447" endtime="20201029 09:35:25.448"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:25.449" endtime="20201029 09:35:25.451"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:25.389" endtime="20201029 09:35:25.451"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:25.387" endtime="20201029 09:35:25.452"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:25.458" endtime="20201029 09:35:25.745"></status>
</kw>
<msg timestamp="20201029 09:35:25.748" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017412556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018210014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:25.457" endtime="20201029 09:35:25.748"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:25.756" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017412556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018210014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:25.749" endtime="20201029 09:35:25.757"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:25.757" endtime="20201029 09:35:25.759"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:25.454" endtime="20201029 09:35:25.760"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:25.452" endtime="20201029 09:35:25.760"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:35:25.764" level="INFO">${PHILIP_RES} = [{'diff': 0.0007974580000000009}, {'diff': 0.0007973609999999999}, {'diff': 0.0007973330000000008}, {'diff': 0.0007973470000000003}, {'diff': 0.0007973609999999999}, {'diff': 0.0007973609999999999}, {...</msg>
<status status="PASS" starttime="20201029 09:35:25.761" endtime="20201029 09:35:25.764"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:35:25.769" level="INFO">${RESULT} = {'diff': [0.0007974580000000009, 0.0007973609999999999, 0.0007973330000000008, 0.0007973470000000003, 0.0007973609999999999, 0.0007973609999999999, 0.0007973330000000008, 0.0007973469999999969, 0.0007...</msg>
<status status="PASS" starttime="20201029 09:35:25.765" endtime="20201029 09:35:25.769"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:35:25.774" level="INFO">NAME: 46-timer-trace</msg>
<status status="PASS" starttime="20201029 09:35:25.772" endtime="20201029 09:35:25.774"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:35:25.776" level="INFO">VALUE: [0.0007974580000000009, 0.0007973609999999999, 0.0007973330000000008, 0.0007973470000000003, 0.0007973609999999999, 0.0007973609999999999, 0.0007973330000000008, 0.0007973469999999969, 0.0007973340000000002, 0.0007973479999999998, 0.0007973190000000012, 0.0007973330000000008, 0.0007973609999999999, 0.0007972919999999981, 0.0007973470000000003, 0.0007973890000000025, 0.0007973339999999968, 0.0007973470000000038, 0.0007973330000000042, 0.0007973609999999964, 0.0007973339999999968, 0.0007973330000000042, 0.0007973470000000038, 0.0007973469999999969, 0.0007973199999999972, 0.0007973469999999969, 0.0007973330000000042, 0.0007973329999999973, 0.0007973339999999968, 0.0007973339999999968, 0.0007973470000000038, 0.0007973189999999977, 0.0007973339999999968, 0.0007973329999999973, 0.0007973470000000038, 0.0007973330000000042, 0.0007973339999999968, 0.0007973469999999969, 0.0007972910000000055, 0.0007973330000000042, 0.0007974169999999947, 0.0007973189999999977, 0.0007972910000000055, 0.0007973330000000042, 0.0007973479999999963, 0.0007973329999999973, 0.0007973049999999982, 0.0007973330000000042, 0.0007973619999999959, 0.0007973609999999964]</msg>
<status status="PASS" starttime="20201029 09:35:25.775" endtime="20201029 09:35:25.777"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:25.770" endtime="20201029 09:35:25.777"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:25.386" endtime="20201029 09:35:25.778"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:25.363" endtime="20201029 09:35:25.778"></status>
</kw>
<kw name="${n} = 47" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:35:25.780" endtime="20201029 09:35:25.800"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:25.779" endtime="20201029 09:35:25.801"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:25.809" endtime="20201029 09:35:25.862"></status>
</kw>
<msg timestamp="20201029 09:35:25.863" level="INFO">${RESULT} = {'cmd': 'list_ops 47', 'msg': ['list_ops 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:25.807" endtime="20201029 09:35:25.863"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:25.868" level="INFO">${RESULT} = {'cmd': 'list_ops 47', 'msg': ['list_ops 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:25.865" endtime="20201029 09:35:25.869"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:25.870" endtime="20201029 09:35:25.874"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:25.805" endtime="20201029 09:35:25.875"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:25.803" endtime="20201029 09:35:25.876"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:25.891" endtime="20201029 09:35:26.188"></status>
</kw>
<msg timestamp="20201029 09:35:26.191" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017121681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017950708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:25.887" endtime="20201029 09:35:26.191"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:26.199" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017121681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017950708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:26.192" endtime="20201029 09:35:26.200"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:26.200" endtime="20201029 09:35:26.202"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:25.881" endtime="20201029 09:35:26.203"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:25.878" endtime="20201029 09:35:26.203"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:35:26.207" level="INFO">${PHILIP_RES} = [{'diff': 0.0008290269999999995}, {'diff': 0.0008289299999999986}, {'diff': 0.0008289029999999989}, {'diff': 0.0008289029999999989}, {'diff': 0.0008289160000000025}, {'diff': 0.0008289299999999986}, {...</msg>
<status status="PASS" starttime="20201029 09:35:26.204" endtime="20201029 09:35:26.207"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:35:26.211" level="INFO">${RESULT} = {'diff': [0.0008290269999999995, 0.0008289299999999986, 0.0008289029999999989, 0.0008289029999999989, 0.0008289160000000025, 0.0008289299999999986, 0.0008289029999999989, 0.0008289170000000019, 0.0008...</msg>
<status status="PASS" starttime="20201029 09:35:26.208" endtime="20201029 09:35:26.212"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:35:26.216" level="INFO">NAME: 47-timer-trace</msg>
<status status="PASS" starttime="20201029 09:35:26.215" endtime="20201029 09:35:26.216"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:35:26.218" level="INFO">VALUE: [0.0008290269999999995, 0.0008289299999999986, 0.0008289029999999989, 0.0008289029999999989, 0.0008289160000000025, 0.0008289299999999986, 0.0008289029999999989, 0.0008289170000000019, 0.0008289169999999985, 0.0008289170000000019, 0.000828915999999999, 0.0008289170000000019, 0.0008289029999999989, 0.0008289169999999985, 0.0008289310000000015, 0.000828915999999999, 0.0008289580000000012, 0.0008289169999999985, 0.0008288749999999998, 0.0008289169999999985, 0.0008289019999999994, 0.0008289019999999994, 0.0008289029999999989, 0.0008289170000000054, 0.0008289029999999989, 0.000828930999999998, 0.0008289160000000059, 0.0008289169999999985, 0.0008289029999999989, 0.0008289169999999985, 0.0008289299999999986, 0.0008289019999999994, 0.0008289169999999985, 0.0008288470000000006, 0.0008288749999999998, 0.000828915999999999, 0.0008289160000000059, 0.0008289169999999985, 0.0008289029999999989, 0.000828931000000005, 0.0008289029999999989, 0.0008289019999999994, 0.0008289169999999985, 0.0008289030000000058, 0.0008289029999999989, 0.0008289169999999985, 0.0008289160000000059, 0.0008289029999999989, 0.0008289169999999985, 0.0008289169999999985]</msg>
<status status="PASS" starttime="20201029 09:35:26.217" endtime="20201029 09:35:26.219"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:26.212" endtime="20201029 09:35:26.220"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:25.801" endtime="20201029 09:35:26.220"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:25.778" endtime="20201029 09:35:26.220"></status>
</kw>
<kw name="${n} = 48" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:35:26.223" endtime="20201029 09:35:26.242"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:26.221" endtime="20201029 09:35:26.243"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:26.251" endtime="20201029 09:35:26.307"></status>
</kw>
<msg timestamp="20201029 09:35:26.307" level="INFO">${RESULT} = {'cmd': 'list_ops 48', 'msg': ['list_ops 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:26.249" endtime="20201029 09:35:26.307"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:26.310" level="INFO">${RESULT} = {'cmd': 'list_ops 48', 'msg': ['list_ops 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:26.308" endtime="20201029 09:35:26.310"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:26.311" endtime="20201029 09:35:26.313"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:26.247" endtime="20201029 09:35:26.314"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:26.245" endtime="20201029 09:35:26.314"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:26.321" endtime="20201029 09:35:26.606"></status>
</kw>
<msg timestamp="20201029 09:35:26.609" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017194611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018055833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:26.319" endtime="20201029 09:35:26.609"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:26.617" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017194611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018055833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:35:26.610" endtime="20201029 09:35:26.618"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:26.618" endtime="20201029 09:35:26.620"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:26.317" endtime="20201029 09:35:26.621"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:26.315" endtime="20201029 09:35:26.621"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:35:26.625" level="INFO">${PHILIP_RES} = [{'diff': 0.0008612220000000018}, {'diff': 0.0008611529999999999}, {'diff': 0.0008610970000000016}, {'diff': 0.0008610979999999976}, {'diff': 0.0008610970000000016}, {'diff': 0.0008610969999999982}, {...</msg>
<status status="PASS" starttime="20201029 09:35:26.622" endtime="20201029 09:35:26.625"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:35:26.629" level="INFO">${RESULT} = {'diff': [0.0008612220000000018, 0.0008611529999999999, 0.0008610970000000016, 0.0008610979999999976, 0.0008610970000000016, 0.0008610969999999982, 0.0008610830000000021, 0.0008610699999999985, 0.0008...</msg>
<status status="PASS" starttime="20201029 09:35:26.626" endtime="20201029 09:35:26.629"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:35:26.634" level="INFO">NAME: 48-timer-trace</msg>
<status status="PASS" starttime="20201029 09:35:26.633" endtime="20201029 09:35:26.634"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:35:26.636" level="INFO">VALUE: [0.0008612220000000018, 0.0008611529999999999, 0.0008610970000000016, 0.0008610979999999976, 0.0008610970000000016, 0.0008610969999999982, 0.0008610830000000021, 0.0008610699999999985, 0.0008610979999999976, 0.0008610270000000003, 0.0008610969999999982, 0.0008610830000000021, 0.0008611120000000007, 0.0008610969999999982, 0.0008610969999999982, 0.0008611390000000003, 0.0008610969999999982, 0.0008610969999999982, 0.0008610969999999982, 0.0008611390000000038, 0.0008611109999999977, 0.0008610979999999976, 0.0008610980000000046, 0.0008610829999999986, 0.0008610969999999982, 0.0008610829999999986, 0.0008610979999999976, 0.0008611109999999977, 0.0008610969999999982, 0.0008610830000000055, 0.0008610839999999981, 0.0008610979999999976, 0.000861167000000003, 0.0008610969999999982, 0.0008610969999999982, 0.0008611119999999972, 0.0008611110000000047, 0.000861068999999999, 0.0008610969999999982, 0.000861084000000005, 0.0008610979999999976, 0.0008610969999999982, 0.0008610279999999998, 0.0008611110000000047, 0.0008611109999999977, 0.0008611109999999977, 0.0008610830000000055, 0.0008610559999999989, 0.0008611109999999977, 0.0008610979999999976]</msg>
<status status="PASS" starttime="20201029 09:35:26.635" endtime="20201029 09:35:26.638"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:26.630" endtime="20201029 09:35:26.638"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:26.243" endtime="20201029 09:35:26.639"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:26.221" endtime="20201029 09:35:26.639"></status>
</kw>
<kw name="${n} = 49" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:35:26.641" endtime="20201029 09:35:26.661"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:26.640" endtime="20201029 09:35:26.662"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:26.670" endtime="20201029 09:35:26.724"></status>
</kw>
<msg timestamp="20201029 09:35:26.724" level="INFO">${RESULT} = {'cmd': 'list_ops 49', 'msg': ['list_ops 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:26.668" endtime="20201029 09:35:26.724"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:26.727" level="INFO">${RESULT} = {'cmd': 'list_ops 49', 'msg': ['list_ops 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:26.725" endtime="20201029 09:35:26.727"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:26.728" endtime="20201029 09:35:26.729"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:26.666" endtime="20201029 09:35:26.730"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:26.664" endtime="20201029 09:35:26.730"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:26.737" endtime="20201029 09:35:27.024"></status>
</kw>
<msg timestamp="20201029 09:35:27.027" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0171395, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018033514, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 09:35:26.736" endtime="20201029 09:35:27.027"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:27.035" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0171395, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018033514, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 09:35:27.028" endtime="20201029 09:35:27.035"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:27.036" endtime="20201029 09:35:27.038"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:26.733" endtime="20201029 09:35:27.038"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:26.731" endtime="20201029 09:35:27.039"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:35:27.043" level="INFO">${PHILIP_RES} = [{'diff': 0.000894014000000002}, {'diff': 0.0008938890000000019}, {'diff': 0.0008938609999999993}, {'diff': 0.0008938620000000022}, {'diff': 0.0008938889999999984}, {'diff': 0.0008938749999999988}, {'...</msg>
<status status="PASS" starttime="20201029 09:35:27.040" endtime="20201029 09:35:27.043"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:35:27.048" level="INFO">${RESULT} = {'diff': [0.000894014000000002, 0.0008938890000000019, 0.0008938609999999993, 0.0008938620000000022, 0.0008938889999999984, 0.0008938749999999988, 0.000893902999999998, 0.0008939299999999976, 0.000893...</msg>
<status status="PASS" starttime="20201029 09:35:27.044" endtime="20201029 09:35:27.048"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:35:27.053" level="INFO">NAME: 49-timer-trace</msg>
<status status="PASS" starttime="20201029 09:35:27.051" endtime="20201029 09:35:27.053"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:35:27.055" level="INFO">VALUE: [0.000894014000000002, 0.0008938890000000019, 0.0008938609999999993, 0.0008938620000000022, 0.0008938889999999984, 0.0008938749999999988, 0.000893902999999998, 0.0008939299999999976, 0.0008938889999999984, 0.000893902999999998, 0.0008938609999999993, 0.0008938750000000023, 0.0008938750000000023, 0.0008938890000000019, 0.0008938889999999984, 0.0008938610000000027, 0.0008939029999999945, 0.0008938890000000019, 0.0008938890000000019, 0.0008938890000000019, 0.0008938890000000019, 0.0008939030000000014, 0.0008938890000000019, 0.0008938339999999961, 0.0008938890000000019, 0.0008938749999999954, 0.0008938610000000027, 0.0008938890000000019, 0.0008938750000000023, 0.0008938750000000023, 0.0008938330000000036, 0.0008938890000000019, 0.0008938609999999958, 0.0008938890000000019, 0.000893901999999995, 0.0008938890000000019, 0.0008938879999999955, 0.0008938890000000019, 0.0008938889999999949, 0.0008939030000000014, 0.0008938890000000019, 0.0008938750000000023, 0.0008938880000000024, 0.0008938890000000019, 0.0008938750000000023, 0.0008938889999999949, 0.0008938890000000019, 0.0008938890000000019, 0.0008939030000000014, 0.0008938890000000088]</msg>
<status status="PASS" starttime="20201029 09:35:27.054" endtime="20201029 09:35:27.061"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:27.049" endtime="20201029 09:35:27.062"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:26.662" endtime="20201029 09:35:27.062"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:26.639" endtime="20201029 09:35:27.062"></status>
</kw>
<kw name="${n} = 50" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:35:27.065" endtime="20201029 09:35:27.084"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:27.063" endtime="20201029 09:35:27.085"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:27.093" endtime="20201029 09:35:27.151"></status>
</kw>
<msg timestamp="20201029 09:35:27.151" level="INFO">${RESULT} = {'cmd': 'list_ops 50', 'msg': ['list_ops 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:27.092" endtime="20201029 09:35:27.151"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:27.154" level="INFO">${RESULT} = {'cmd': 'list_ops 50', 'msg': ['list_ops 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:27.152" endtime="20201029 09:35:27.154"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:27.155" endtime="20201029 09:35:27.156"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:27.089" endtime="20201029 09:35:27.157"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:27.087" endtime="20201029 09:35:27.157"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:27.164" endtime="20201029 09:35:27.472"></status>
</kw>
<msg timestamp="20201029 09:35:27.475" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01722425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018151653, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 09:35:27.163" endtime="20201029 09:35:27.476"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:27.484" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01722425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018151653, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 09:35:27.477" endtime="20201029 09:35:27.484"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:27.485" endtime="20201029 09:35:27.487"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:27.160" endtime="20201029 09:35:27.487"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:27.158" endtime="20201029 09:35:27.488"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:35:27.492" level="INFO">${PHILIP_RES} = [{'diff': 0.0009274030000000003}, {'diff': 0.0009272780000000001}, {'diff': 0.0009273049999999998}, {'diff': 0.0009273059999999993}, {'diff': 0.0009272499999999975}, {'diff': 0.0009272919999999997}, {...</msg>
<status status="PASS" starttime="20201029 09:35:27.488" endtime="20201029 09:35:27.492"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:35:27.496" level="INFO">${RESULT} = {'diff': [0.0009274030000000003, 0.0009272780000000001, 0.0009273049999999998, 0.0009273059999999993, 0.0009272499999999975, 0.0009272919999999997, 0.0009272919999999997, 0.0009272910000000002, 0.0009...</msg>
<status status="PASS" starttime="20201029 09:35:27.493" endtime="20201029 09:35:27.496"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:35:27.500" level="INFO">NAME: 50-timer-trace</msg>
<status status="PASS" starttime="20201029 09:35:27.499" endtime="20201029 09:35:27.501"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:35:27.503" level="INFO">VALUE: [0.0009274030000000003, 0.0009272780000000001, 0.0009273049999999998, 0.0009273059999999993, 0.0009272499999999975, 0.0009272919999999997, 0.0009272919999999997, 0.0009272910000000002, 0.0009272919999999997, 0.0009272770000000007, 0.0009272780000000001, 0.0009272220000000019, 0.0009272770000000007, 0.0009273059999999993, 0.0009272919999999997, 0.0009272770000000041, 0.0009273339999999949, 0.0009273050000000033, 0.0009272229999999979, 0.0009272219999999984, 0.0009272639999999971, 0.0009273060000000027, 0.0009272769999999972, 0.0009273190000000028, 0.000927264000000004, 0.0009272769999999972, 0.0009272780000000036, 0.0009272779999999967, 0.0009272780000000036, 0.0009272919999999962, 0.0009272770000000041, 0.0009272919999999962, 0.0009272920000000032, 0.0009272909999999968, 0.0009272779999999967, 0.0009272770000000041, 0.0009272919999999962, 0.000927264000000004, 0.0009272769999999972, 0.0009272780000000036, 0.0009272909999999968, 0.0009272920000000032, 0.0009272919999999962, 0.0009272769999999972, 0.0009273060000000027, 0.0009272780000000036, 0.0009272919999999962, 0.0009272780000000036, 0.0009272780000000036, 0.0009272920000000101]</msg>
<status status="PASS" starttime="20201029 09:35:27.501" endtime="20201029 09:35:27.504"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:27.497" endtime="20201029 09:35:27.504"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:27.085" endtime="20201029 09:35:27.505"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:27.063" endtime="20201029 09:35:27.505"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:07.654" endtime="20201029 09:35:27.505"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 09:35:00.349" endtime="20201029 09:35:27.506" critical="yes"></status>
</test>
<status status="PASS" starttime="20201029 09:34:09.770" endtime="20201029 09:35:27.516"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_xtimer_benchmarks</item>
<item name="RIOT-Board">arduino-due</item>
<item name="RIOT-Version">2020.07</item>
</metadata>
<status status="PASS" starttime="20201029 09:33:55.379" endtime="20201029 09:35:27.553"></status>
</suite>
<statistics>
<total>
<stat pass="10" fail="0">Critical Tests</stat>
<stat pass="10" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="10" fail="0">APP_tests_xtimer_benchmarks</stat>
<stat pass="10" fail="0">BOARD_arduino-due</stat>
<stat pass="10" fail="0">dev</stat>
</tag>
<suite>
<stat pass="10" fail="0" id="s1" name="tests_xtimer_benchmarks">tests_xtimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_xtimer_benchmarks.Timer Version</stat>
<stat pass="9" fail="0" id="s1-s2" name="Timer Overhead">tests_xtimer_benchmarks.Timer Overhead</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
