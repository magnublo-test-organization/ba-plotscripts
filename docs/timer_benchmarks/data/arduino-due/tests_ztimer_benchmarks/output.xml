<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201029 18:19:48.391" rpa="false">
<suite id="s1" name="tests_ztimer_benchmarks" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 18:19:52.003" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 18:19:52.012" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 18:19:53.126" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 18:19:52.002" endtime="20201029 18:19:53.126"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 18:19:56.129" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20201029 18:19:53.127" endtime="20201029 18:19:56.131"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:52.000" endtime="20201029 18:19:56.132"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:56.136" endtime="20201029 18:19:56.378"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:56.133" endtime="20201029 18:19:56.378"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:56.391" endtime="20201029 18:19:59.413"></status>
</kw>
<msg timestamp="20201029 18:19:59.414" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:56.389" endtime="20201029 18:19:59.414"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:59.419" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:59.416" endtime="20201029 18:19:59.420"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:19:59.425" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:19:59.421" endtime="20201029 18:19:59.426"></status>
</kw>
<status status="FAIL" starttime="20201029 18:19:56.387" endtime="20201029 18:19:59.428"></status>
</kw>
<status status="FAIL" starttime="20201029 18:19:56.385" endtime="20201029 18:19:59.429"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:56.383" endtime="20201029 18:19:59.429"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:19:59.437" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:19:59.436" endtime="20201029 18:19:59.439"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:59.431" endtime="20201029 18:19:59.440"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:56.383" endtime="20201029 18:19:59.440"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:56.382" endtime="20201029 18:19:59.441"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:59.442" endtime="20201029 18:19:59.445"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:56.380" endtime="20201029 18:19:59.446"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:59.448" endtime="20201029 18:19:59.451"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:56.379" endtime="20201029 18:19:59.452"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:51.999" endtime="20201029 18:19:59.453"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:59.465" endtime="20201029 18:19:59.487"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:59.462" endtime="20201029 18:19:59.488"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:59.514" endtime="20201029 18:20:02.535"></status>
</kw>
<msg timestamp="20201029 18:20:02.536" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:59.512" endtime="20201029 18:20:02.537"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:02.542" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:02.539" endtime="20201029 18:20:02.542"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:20:02.548" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:20:02.544" endtime="20201029 18:20:02.548"></status>
</kw>
<status status="FAIL" starttime="20201029 18:19:59.507" endtime="20201029 18:20:02.550"></status>
</kw>
<status status="FAIL" starttime="20201029 18:19:59.502" endtime="20201029 18:20:02.551"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:59.499" endtime="20201029 18:20:02.552"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:20:02.559" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:20:02.558" endtime="20201029 18:20:02.560"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:02.554" endtime="20201029 18:20:02.561"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:59.497" endtime="20201029 18:20:02.561"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:59.496" endtime="20201029 18:20:02.561"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:02.563" endtime="20201029 18:20:02.566"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:59.493" endtime="20201029 18:20:02.567"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:59.490" endtime="20201029 18:20:02.568"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:59.460" endtime="20201029 18:20:02.569"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:02.584" endtime="20201029 18:20:02.599"></status>
</kw>
<msg timestamp="20201029 18:20:02.600" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:02.579" endtime="20201029 18:20:02.601"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:02.605" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:02.602" endtime="20201029 18:20:02.606"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:02.608" endtime="20201029 18:20:02.611"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:02.574" endtime="20201029 18:20:02.612"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:02.570" endtime="20201029 18:20:02.613"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:02.621" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201029 18:20:02.619" endtime="20201029 18:20:02.622"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:02.625" level="INFO">VALUE: ztimer</msg>
<status status="PASS" starttime="20201029 18:20:02.623" endtime="20201029 18:20:02.626"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:02.614" endtime="20201029 18:20:02.627"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 18:19:59.454" endtime="20201029 18:20:02.628" critical="yes"></status>
</test>
<status status="PASS" starttime="20201029 18:19:48.513" endtime="20201029 18:20:02.635"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 18:20:02.705" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 18:20:02.714" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 18:20:03.904" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 18:20:02.704" endtime="20201029 18:20:03.904"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 18:20:06.907" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20201029 18:20:03.905" endtime="20201029 18:20:06.908"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:02.703" endtime="20201029 18:20:06.910"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:06.914" endtime="20201029 18:20:07.175"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:06.911" endtime="20201029 18:20:07.176"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:07.188" endtime="20201029 18:20:10.211"></status>
</kw>
<msg timestamp="20201029 18:20:10.212" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:07.186" endtime="20201029 18:20:10.212"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:10.217" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:10.214" endtime="20201029 18:20:10.218"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:20:10.225" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:20:10.219" endtime="20201029 18:20:10.226"></status>
</kw>
<status status="FAIL" starttime="20201029 18:20:07.184" endtime="20201029 18:20:10.227"></status>
</kw>
<status status="FAIL" starttime="20201029 18:20:07.182" endtime="20201029 18:20:10.228"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:07.181" endtime="20201029 18:20:10.229"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:20:10.237" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:20:10.235" endtime="20201029 18:20:10.238"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:10.231" endtime="20201029 18:20:10.238"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:07.180" endtime="20201029 18:20:10.238"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:07.179" endtime="20201029 18:20:10.239"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:10.240" endtime="20201029 18:20:10.243"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:07.178" endtime="20201029 18:20:10.244"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:10.246" endtime="20201029 18:20:10.249"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:07.176" endtime="20201029 18:20:10.250"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:02.702" endtime="20201029 18:20:10.251"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:10.264" endtime="20201029 18:20:10.286"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:10.260" endtime="20201029 18:20:10.288"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:10.315" endtime="20201029 18:20:13.350"></status>
</kw>
<msg timestamp="20201029 18:20:13.354" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:10.311" endtime="20201029 18:20:13.357"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:13.364" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:13.359" endtime="20201029 18:20:13.365"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:20:13.374" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:20:13.368" endtime="20201029 18:20:13.375"></status>
</kw>
<status status="FAIL" starttime="20201029 18:20:10.306" endtime="20201029 18:20:13.376"></status>
</kw>
<status status="FAIL" starttime="20201029 18:20:10.301" endtime="20201029 18:20:13.379"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:10.298" endtime="20201029 18:20:13.379"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:20:13.391" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:20:13.388" endtime="20201029 18:20:13.392"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:13.382" endtime="20201029 18:20:13.392"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:10.297" endtime="20201029 18:20:13.392"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:10.295" endtime="20201029 18:20:13.393"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:13.394" endtime="20201029 18:20:13.397"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:10.293" endtime="20201029 18:20:13.398"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:10.289" endtime="20201029 18:20:13.399"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:10.257" endtime="20201029 18:20:13.400"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:13.418" endtime="20201029 18:20:13.435"></status>
</kw>
<msg timestamp="20201029 18:20:13.436" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:13.415" endtime="20201029 18:20:13.436"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:13.441" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:13.438" endtime="20201029 18:20:13.442"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:13.442" endtime="20201029 18:20:13.444"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:13.409" endtime="20201029 18:20:13.444"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:13.406" endtime="20201029 18:20:13.445"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:13.451" endtime="20201029 18:20:13.738"></status>
</kw>
<msg timestamp="20201029 18:20:13.740" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.145369708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.145379264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:13.450" endtime="20201029 18:20:13.740"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:13.746" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.145369708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.145379264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:13.741" endtime="20201029 18:20:13.746"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:13.747" endtime="20201029 18:20:13.748"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:13.447" endtime="20201029 18:20:13.749"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:13.446" endtime="20201029 18:20:13.749"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:13.753" level="INFO">${RESULT} = [{'diff': 9.555999999744103e-06}, {'diff': 9.3199999997573e-06}, {'diff': 1.1014000000031388e-05}, {'diff': 7.2779999999994516e-06}, {'diff': 6.19400000001491e-06}, {'diff': 7.472000000063872e-06}, {'...</msg>
<status status="PASS" starttime="20201029 18:20:13.750" endtime="20201029 18:20:13.753"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:20:13.756" level="INFO">${GPIO_OVERHEAD} = {'diff': [9.555999999744103e-06, 9.3199999997573e-06, 1.1014000000031388e-05, 7.2779999999994516e-06, 6.19400000001491e-06, 7.472000000063872e-06, 5.541999999802982e-06, 1.1583000000037202e-05, 8.5140...</msg>
<status status="PASS" starttime="20201029 18:20:13.754" endtime="20201029 18:20:13.757"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:13.761" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:20:13.760" endtime="20201029 18:20:13.761"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:13.763" level="INFO">VALUE: [9.555999999744103e-06, 9.3199999997573e-06, 1.1014000000031388e-05, 7.2779999999994516e-06, 6.19400000001491e-06, 7.472000000063872e-06, 5.541999999802982e-06, 1.1583000000037202e-05, 8.514000000126032e-06, 9.499999999995623e-06, 7.625000000288651e-06, 1.055499999980114e-05, 1.0694999999838473e-05, 8.165999999754092e-06, 6.9859999998200806e-06, 7.888000000288997e-06, 8.72300000009929e-06, 8.055999999978525e-06, 8.47199999975956e-06, 5.584000000169453e-06, 9.389000000137315e-06, 8.555999999604325e-06, 1.1042000000127672e-05, 1.0040999999905154e-05, 8.985999999655547e-06]</msg>
<status status="PASS" starttime="20201029 18:20:13.762" endtime="20201029 18:20:13.763"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:13.757" endtime="20201029 18:20:13.764"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:13.403" endtime="20201029 18:20:13.764"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:13.402" endtime="20201029 18:20:13.764"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:13.772" endtime="20201029 18:20:13.784"></status>
</kw>
<msg timestamp="20201029 18:20:13.784" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:13.771" endtime="20201029 18:20:13.784"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:13.786" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:13.785" endtime="20201029 18:20:13.787"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:13.787" endtime="20201029 18:20:13.790"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:13.768" endtime="20201029 18:20:13.791"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:13.766" endtime="20201029 18:20:13.791"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:13.797" endtime="20201029 18:20:14.102"></status>
</kw>
<msg timestamp="20201029 18:20:14.105" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.145369708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.145379264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:13.796" endtime="20201029 18:20:14.105"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:14.113" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.145369708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.145379264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:14.106" endtime="20201029 18:20:14.113"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:14.114" endtime="20201029 18:20:14.116"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:13.793" endtime="20201029 18:20:14.116"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:13.792" endtime="20201029 18:20:14.117"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:14.120" level="INFO">${RESULT} = [{'diff': 9.555999999744103e-06}, {'diff': 9.3199999997573e-06}, {'diff': 1.1014000000031388e-05}, {'diff': 7.2779999999994516e-06}, {'diff': 6.19400000001491e-06}, {'diff': 7.472000000063872e-06}, {'...</msg>
<status status="PASS" starttime="20201029 18:20:14.117" endtime="20201029 18:20:14.121"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:20:14.125" level="INFO">${GPIO_OVERHEAD} = {'diff': [9.555999999744103e-06, 9.3199999997573e-06, 1.1014000000031388e-05, 7.2779999999994516e-06, 6.19400000001491e-06, 7.472000000063872e-06, 5.541999999802982e-06, 1.1583000000037202e-05, 8.5140...</msg>
<status status="PASS" starttime="20201029 18:20:14.121" endtime="20201029 18:20:14.125"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:14.129" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:20:14.128" endtime="20201029 18:20:14.130"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:14.132" level="INFO">VALUE: [9.555999999744103e-06, 9.3199999997573e-06, 1.1014000000031388e-05, 7.2779999999994516e-06, 6.19400000001491e-06, 7.472000000063872e-06, 5.541999999802982e-06, 1.1583000000037202e-05, 8.514000000126032e-06, 9.499999999995623e-06, 7.625000000288651e-06, 1.055499999980114e-05, 1.0694999999838473e-05, 8.165999999754092e-06, 6.9859999998200806e-06, 7.888000000288997e-06, 8.72300000009929e-06, 8.055999999978525e-06, 8.47199999975956e-06, 5.584000000169453e-06, 9.389000000137315e-06, 8.555999999604325e-06, 1.1042000000127672e-05, 1.0040999999905154e-05, 8.985999999655547e-06, 9.249999999738634e-06, 9.096999999957944e-06, 9.486000000169525e-06, 7.708000000050674e-06, 8.084000000074809e-06, 9.431000000059697e-06, 1.0582999999897424e-05, 8.66600000026807e-06, 5.277999999719896e-06, 1.1611000000133487e-05, 9.125000000054229e-06, 6.88899999978787e-06, 9.250000000182723e-06, 9.806000000001092e-06, 1.0639000000089993e-05, 9.249999999738634e-06, 8.193999999850377e-06, 8.12499999991445e-06, 1.1333000000224303e-05, 6.736000000007181e-06, 1.1096999999793411e-05, 8.958000000003352e-06, 8.236000000216848e-06, 7.3469999999353774e-06, 1.01669999996723e-05]</msg>
<status status="PASS" starttime="20201029 18:20:14.130" endtime="20201029 18:20:14.133"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:14.126" endtime="20201029 18:20:14.133"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:13.765" endtime="20201029 18:20:14.134"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:13.765" endtime="20201029 18:20:14.134"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:14.142" endtime="20201029 18:20:14.153"></status>
</kw>
<msg timestamp="20201029 18:20:14.154" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:14.140" endtime="20201029 18:20:14.154"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:14.156" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:14.155" endtime="20201029 18:20:14.156"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:14.157" endtime="20201029 18:20:14.159"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:14.138" endtime="20201029 18:20:14.159"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:14.136" endtime="20201029 18:20:14.160"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:14.166" endtime="20201029 18:20:14.486"></status>
</kw>
<msg timestamp="20201029 18:20:14.490" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.145570556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.145581111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:14.165" endtime="20201029 18:20:14.490"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:14.500" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.145570556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.145581111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:14.491" endtime="20201029 18:20:14.500"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:14.501" endtime="20201029 18:20:14.503"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:14.162" endtime="20201029 18:20:14.503"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:14.160" endtime="20201029 18:20:14.503"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:14.508" level="INFO">${RESULT} = [{'diff': 1.055499999980114e-05}, {'diff': 1.0694999999838473e-05}, {'diff': 8.165999999754092e-06}, {'diff': 6.9859999998200806e-06}, {'diff': 7.888000000288997e-06}, {'diff': 8.72300000009929e-06}, ...</msg>
<status status="PASS" starttime="20201029 18:20:14.504" endtime="20201029 18:20:14.508"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:20:14.513" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.055499999980114e-05, 1.0694999999838473e-05, 8.165999999754092e-06, 6.9859999998200806e-06, 7.888000000288997e-06, 8.72300000009929e-06, 8.055999999978525e-06, 8.47199999975956e-06, 5.5840...</msg>
<status status="PASS" starttime="20201029 18:20:14.509" endtime="20201029 18:20:14.513"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:14.517" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:20:14.516" endtime="20201029 18:20:14.518"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:14.520" level="INFO">VALUE: [1.055499999980114e-05, 1.0694999999838473e-05, 8.165999999754092e-06, 6.9859999998200806e-06, 7.888000000288997e-06, 8.72300000009929e-06, 8.055999999978525e-06, 8.47199999975956e-06, 5.584000000169453e-06, 9.389000000137315e-06, 8.555999999604325e-06, 1.1042000000127672e-05, 1.0040999999905154e-05, 8.985999999655547e-06, 9.249999999738634e-06, 9.096999999957944e-06, 9.486000000169525e-06, 7.708000000050674e-06, 8.084000000074809e-06, 9.431000000059697e-06, 1.0582999999897424e-05, 8.66600000026807e-06, 5.277999999719896e-06, 1.1611000000133487e-05, 9.125000000054229e-06, 6.88899999978787e-06, 9.250000000182723e-06, 9.806000000001092e-06, 1.0639000000089993e-05, 9.249999999738634e-06, 8.193999999850377e-06, 8.12499999991445e-06, 1.1333000000224303e-05, 6.736000000007181e-06, 1.1096999999793411e-05, 8.958000000003352e-06, 8.236000000216848e-06, 7.3469999999353774e-06, 1.01669999996723e-05, 7.639000000114748e-06, 1.0915999999916437e-05, 8.430000000281268e-06, 9.32000000020139e-06, 9.374999999867129e-06, 8.556000000048414e-06, 8.388999999997537e-06, 8.887999999984686e-06, 8.333999999887709e-06, 8.526999999869389e-06, 7.416999999954044e-06, 1.0861000000250698e-05, 8.000000000230045e-06, 7.708000000050674e-06, 5.792000000059971e-06, 7.028000000186552e-06, 8.846999999700955e-06, 7.209000000063526e-06, 1.2249999999713879e-05, 9.722999999794979e-06, 9.582999999757646e-06, 7.472000000063872e-06, 9.57000000001429e-06, 7.110999999948575e-06, 7.693999999780488e-06]</msg>
<status status="PASS" starttime="20201029 18:20:14.519" endtime="20201029 18:20:14.521"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:14.514" endtime="20201029 18:20:14.521"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:14.135" endtime="20201029 18:20:14.522"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:14.134" endtime="20201029 18:20:14.522"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:14.530" endtime="20201029 18:20:14.541"></status>
</kw>
<msg timestamp="20201029 18:20:14.541" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:14.528" endtime="20201029 18:20:14.542"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:14.544" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:14.542" endtime="20201029 18:20:14.544"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:14.545" endtime="20201029 18:20:14.546"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:14.525" endtime="20201029 18:20:14.547"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:14.524" endtime="20201029 18:20:14.547"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:14.554" endtime="20201029 18:20:14.875"></status>
</kw>
<msg timestamp="20201029 18:20:14.879" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.486504639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.486511528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:14.552" endtime="20201029 18:20:14.879"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:14.888" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.486504639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.486511528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:14.880" endtime="20201029 18:20:14.889"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:14.890" endtime="20201029 18:20:14.891"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:14.550" endtime="20201029 18:20:14.892"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:14.548" endtime="20201029 18:20:14.892"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:14.896" level="INFO">${RESULT} = [{'diff': 6.88899999978787e-06}, {'diff': 9.250000000182723e-06}, {'diff': 9.806000000001092e-06}, {'diff': 1.0639000000089993e-05}, {'diff': 9.249999999738634e-06}, {'diff': 8.193999999850377e-06}, {...</msg>
<status status="PASS" starttime="20201029 18:20:14.893" endtime="20201029 18:20:14.897"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:20:14.901" level="INFO">${GPIO_OVERHEAD} = {'diff': [6.88899999978787e-06, 9.250000000182723e-06, 9.806000000001092e-06, 1.0639000000089993e-05, 9.249999999738634e-06, 8.193999999850377e-06, 8.12499999991445e-06, 1.1333000000224303e-05, 6.7360...</msg>
<status status="PASS" starttime="20201029 18:20:14.897" endtime="20201029 18:20:14.901"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:14.906" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:20:14.904" endtime="20201029 18:20:14.906"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:14.908" level="INFO">VALUE: [6.88899999978787e-06, 9.250000000182723e-06, 9.806000000001092e-06, 1.0639000000089993e-05, 9.249999999738634e-06, 8.193999999850377e-06, 8.12499999991445e-06, 1.1333000000224303e-05, 6.736000000007181e-06, 1.1096999999793411e-05, 8.958000000003352e-06, 8.236000000216848e-06, 7.3469999999353774e-06, 1.01669999996723e-05, 7.639000000114748e-06, 1.0915999999916437e-05, 8.430000000281268e-06, 9.32000000020139e-06, 9.374999999867129e-06, 8.556000000048414e-06, 8.388999999997537e-06, 8.887999999984686e-06, 8.333999999887709e-06, 8.526999999869389e-06, 7.416999999954044e-06, 1.0861000000250698e-05, 8.000000000230045e-06, 7.708000000050674e-06, 5.792000000059971e-06, 7.028000000186552e-06, 8.846999999700955e-06, 7.209000000063526e-06, 1.2249999999713879e-05, 9.722999999794979e-06, 9.582999999757646e-06, 7.472000000063872e-06, 9.57000000001429e-06, 7.110999999948575e-06, 7.693999999780488e-06, 1.0443999999942832e-05, 7.944000000037477e-06, 8.360999999901253e-06, 8.291999999521238e-06, 1.0778000000044585e-05, 1.0736000000122203e-05, 1.0986000000379192e-05, 7.415999999871303e-06, 5.194999999957872e-06, 8.111000000532442e-06, 9.554999999217273e-06, 7.111000000392664e-06, 9.971999999969228e-06, 1.0221999999338038e-05, 1.1028000000301574e-05, 9.028000000022018e-06, 5.917000000188466e-06, 7.860999999387275e-06, 9.944999999511595e-06, 6.444999999466461e-06, 8.304999999708684e-06, 1.0624999999819806e-05, 1.1624999999959584e-05, 7.819999999547633e-06, 7.763999999355065e-06]</msg>
<status status="PASS" starttime="20201029 18:20:14.907" endtime="20201029 18:20:14.909"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:14.902" endtime="20201029 18:20:14.909"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:14.523" endtime="20201029 18:20:14.910"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:14.522" endtime="20201029 18:20:14.910"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:14.918" endtime="20201029 18:20:14.930"></status>
</kw>
<msg timestamp="20201029 18:20:14.931" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:14.916" endtime="20201029 18:20:14.931"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:14.933" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:14.932" endtime="20201029 18:20:14.933"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:14.934" endtime="20201029 18:20:14.936"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:14.913" endtime="20201029 18:20:14.936"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:14.912" endtime="20201029 18:20:14.937"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:14.943" endtime="20201029 18:20:15.263"></status>
</kw>
<msg timestamp="20201029 18:20:15.266" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.846159764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.846170625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:14.942" endtime="20201029 18:20:15.267"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:15.276" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.846159764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.846170625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:15.268" endtime="20201029 18:20:15.277"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:15.277" endtime="20201029 18:20:15.279"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:14.939" endtime="20201029 18:20:15.279"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:14.937" endtime="20201029 18:20:15.280"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:15.284" level="INFO">${RESULT} = [{'diff': 1.0861000000250698e-05}, {'diff': 8.000000000230045e-06}, {'diff': 7.708000000050674e-06}, {'diff': 5.792000000059971e-06}, {'diff': 7.028000000186552e-06}, {'diff': 8.846999999700955e-06}, ...</msg>
<status status="PASS" starttime="20201029 18:20:15.281" endtime="20201029 18:20:15.284"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:20:15.290" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.0861000000250698e-05, 8.000000000230045e-06, 7.708000000050674e-06, 5.792000000059971e-06, 7.028000000186552e-06, 8.846999999700955e-06, 7.209000000063526e-06, 1.2249999999713879e-05, 9.72...</msg>
<status status="PASS" starttime="20201029 18:20:15.285" endtime="20201029 18:20:15.290"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:15.294" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:20:15.293" endtime="20201029 18:20:15.295"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:15.297" level="INFO">VALUE: [1.0861000000250698e-05, 8.000000000230045e-06, 7.708000000050674e-06, 5.792000000059971e-06, 7.028000000186552e-06, 8.846999999700955e-06, 7.209000000063526e-06, 1.2249999999713879e-05, 9.722999999794979e-06, 9.582999999757646e-06, 7.472000000063872e-06, 9.57000000001429e-06, 7.110999999948575e-06, 7.693999999780488e-06, 1.0443999999942832e-05, 7.944000000037477e-06, 8.360999999901253e-06, 8.291999999521238e-06, 1.0778000000044585e-05, 1.0736000000122203e-05, 1.0986000000379192e-05, 7.415999999871303e-06, 5.194999999957872e-06, 8.111000000532442e-06, 9.554999999217273e-06, 7.111000000392664e-06, 9.971999999969228e-06, 1.0221999999338038e-05, 1.1028000000301574e-05, 9.028000000022018e-06, 5.917000000188466e-06, 7.860999999387275e-06, 9.944999999511595e-06, 6.444999999466461e-06, 8.304999999708684e-06, 1.0624999999819806e-05, 1.1624999999959584e-05, 7.819999999547633e-06, 7.763999999355065e-06, 8.832999999874858e-06, 8.778000000653208e-06, 8.792000000035216e-06, 8.527000000313478e-06, 7.985999999959859e-06, 6.0969999999827e-06, 7.555999999908636e-06, 8.903000000337613e-06, 1.1819000000024005e-05, 7.625000000288651e-06, 1.0222999999420779e-05, 8.013999999612054e-06, 8.903000000337613e-06, 8.069999999804622e-06, 8.16600000064227e-06, 7.5829999994780906e-06, 6.221999999667105e-06, 9.707999999442052e-06, 1.0485999999865214e-05, 6.707999999910896e-06, 9.582999999757646e-06, 9.0699999999444e-06, 1.179200000045455e-05, 7.639000000558838e-06, 8.250000000487034e-06]</msg>
<status status="PASS" starttime="20201029 18:20:15.296" endtime="20201029 18:20:15.297"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:15.290" endtime="20201029 18:20:15.298"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:14.910" endtime="20201029 18:20:15.298"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:14.910" endtime="20201029 18:20:15.298"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:15.306" endtime="20201029 18:20:15.317"></status>
</kw>
<msg timestamp="20201029 18:20:15.318" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:15.305" endtime="20201029 18:20:15.318"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:15.320" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:15.319" endtime="20201029 18:20:15.320"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:15.321" endtime="20201029 18:20:15.323"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:15.302" endtime="20201029 18:20:15.323"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:15.300" endtime="20201029 18:20:15.324"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:15.330" endtime="20201029 18:20:15.645"></status>
</kw>
<msg timestamp="20201029 18:20:15.649" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.223082986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.223090097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:15.329" endtime="20201029 18:20:15.649"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:15.658" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.223082986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.223090097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:15.650" endtime="20201029 18:20:15.659"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:15.660" endtime="20201029 18:20:15.661"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:15.326" endtime="20201029 18:20:15.662"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:15.324" endtime="20201029 18:20:15.662"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:15.666" level="INFO">${RESULT} = [{'diff': 7.111000000392664e-06}, {'diff': 9.971999999969228e-06}, {'diff': 1.0221999999338038e-05}, {'diff': 1.1028000000301574e-05}, {'diff': 9.028000000022018e-06}, {'diff': 5.917000000188466e-06},...</msg>
<status status="PASS" starttime="20201029 18:20:15.663" endtime="20201029 18:20:15.667"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:20:15.673" level="INFO">${GPIO_OVERHEAD} = {'diff': [7.111000000392664e-06, 9.971999999969228e-06, 1.0221999999338038e-05, 1.1028000000301574e-05, 9.028000000022018e-06, 5.917000000188466e-06, 7.860999999387275e-06, 9.944999999511595e-06, 6.44...</msg>
<status status="PASS" starttime="20201029 18:20:15.667" endtime="20201029 18:20:15.674"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:15.678" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:20:15.677" endtime="20201029 18:20:15.678"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:15.680" level="INFO">VALUE: [7.111000000392664e-06, 9.971999999969228e-06, 1.0221999999338038e-05, 1.1028000000301574e-05, 9.028000000022018e-06, 5.917000000188466e-06, 7.860999999387275e-06, 9.944999999511595e-06, 6.444999999466461e-06, 8.304999999708684e-06, 1.0624999999819806e-05, 1.1624999999959584e-05, 7.819999999547633e-06, 7.763999999355065e-06, 8.832999999874858e-06, 8.778000000653208e-06, 8.792000000035216e-06, 8.527000000313478e-06, 7.985999999959859e-06, 6.0969999999827e-06, 7.555999999908636e-06, 8.903000000337613e-06, 1.1819000000024005e-05, 7.625000000288651e-06, 1.0222999999420779e-05, 8.013999999612054e-06, 8.903000000337613e-06, 8.069999999804622e-06, 8.16600000064227e-06, 7.5829999994780906e-06, 6.221999999667105e-06, 9.707999999442052e-06, 1.0485999999865214e-05, 6.707999999910896e-06, 9.582999999757646e-06, 9.0699999999444e-06, 1.179200000045455e-05, 7.639000000558838e-06, 8.250000000487034e-06, 1.0667000000630367e-05, 7.6799999995103e-06, 6.7359999995630915e-06, 6.444000000271899e-06, 1.0916999999999177e-05, 6.861000000135675e-06, 9.792000000174994e-06, 9.721999999712239e-06, 6.347000000239689e-06, 1.0681000000012375e-05, 1.0542000000057783e-05, 1.1166999999367988e-05, 8.111999999727004e-06, 1.0542000000057783e-05, 7.93099999985003e-06, 8.180000000024279e-06, 9.291999999661016e-06, 6.9859999998200806e-06, 8.651999999997884e-06, 8.318999999978871e-06, 7.555999999908636e-06, 1.0278000000418785e-05, 1.0263000000065858e-05, 9.791000000092254e-06, 7.722000000320861e-06]</msg>
<status status="PASS" starttime="20201029 18:20:15.679" endtime="20201029 18:20:15.681"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:15.675" endtime="20201029 18:20:15.681"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:15.299" endtime="20201029 18:20:15.682"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:15.299" endtime="20201029 18:20:15.682"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:15.690" endtime="20201029 18:20:15.701"></status>
</kw>
<msg timestamp="20201029 18:20:15.701" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:15.688" endtime="20201029 18:20:15.701"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:15.703" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:15.702" endtime="20201029 18:20:15.704"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:15.705" endtime="20201029 18:20:15.706"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:15.686" endtime="20201029 18:20:15.707"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:15.684" endtime="20201029 18:20:15.707"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:15.714" endtime="20201029 18:20:16.029"></status>
</kw>
<msg timestamp="20201029 18:20:16.033" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.600910153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.600918167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:15.712" endtime="20201029 18:20:16.034"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:16.043" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.600910153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.600918167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:16.034" endtime="20201029 18:20:16.044"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:16.044" endtime="20201029 18:20:16.046"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:15.709" endtime="20201029 18:20:16.047"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:15.708" endtime="20201029 18:20:16.047"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:16.051" level="INFO">${RESULT} = [{'diff': 8.013999999612054e-06}, {'diff': 8.903000000337613e-06}, {'diff': 8.069999999804622e-06}, {'diff': 8.16600000064227e-06}, {'diff': 7.5829999994780906e-06}, {'diff': 6.221999999667105e-06}, {...</msg>
<status status="PASS" starttime="20201029 18:20:16.048" endtime="20201029 18:20:16.051"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:20:16.056" level="INFO">${GPIO_OVERHEAD} = {'diff': [8.013999999612054e-06, 8.903000000337613e-06, 8.069999999804622e-06, 8.16600000064227e-06, 7.5829999994780906e-06, 6.221999999667105e-06, 9.707999999442052e-06, 1.0485999999865214e-05, 6.707...</msg>
<status status="PASS" starttime="20201029 18:20:16.052" endtime="20201029 18:20:16.056"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:16.060" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:20:16.059" endtime="20201029 18:20:16.061"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:16.063" level="INFO">VALUE: [8.013999999612054e-06, 8.903000000337613e-06, 8.069999999804622e-06, 8.16600000064227e-06, 7.5829999994780906e-06, 6.221999999667105e-06, 9.707999999442052e-06, 1.0485999999865214e-05, 6.707999999910896e-06, 9.582999999757646e-06, 9.0699999999444e-06, 1.179200000045455e-05, 7.639000000558838e-06, 8.250000000487034e-06, 1.0667000000630367e-05, 7.6799999995103e-06, 6.7359999995630915e-06, 6.444000000271899e-06, 1.0916999999999177e-05, 6.861000000135675e-06, 9.792000000174994e-06, 9.721999999712239e-06, 6.347000000239689e-06, 1.0681000000012375e-05, 1.0542000000057783e-05, 1.1166999999367988e-05, 8.111999999727004e-06, 1.0542000000057783e-05, 7.93099999985003e-06, 8.180000000024279e-06, 9.291999999661016e-06, 6.9859999998200806e-06, 8.651999999997884e-06, 8.318999999978871e-06, 7.555999999908636e-06, 1.0278000000418785e-05, 1.0263000000065858e-05, 9.791000000092254e-06, 7.722000000320861e-06, 7.444000000411677e-06, 9.889000000207204e-06, 8.76300000030028e-06, 7.944999999232039e-06, 1.115299999998598e-05, 8.18100000010702e-06, 7.348000000462207e-06, 7.3890000003018486e-06, 9.555000000105451e-06, 1.051399999951741e-05, 9.903000000477391e-06, 8.485999999585658e-06, 9.333000000388836e-06, 8.236000000216848e-06, 8.444000000551455e-06, 6.19400000001491e-06, 1.2582999999288802e-05, 1.2027999999553174e-05, 6.083999999795253e-06, 9.66699999960241e-06, 8.110999999644264e-06, 9.125000000054229e-06, 9.028000000022018e-06, 8.014000000500232e-06, 7.736000000591048e-06]</msg>
<status status="PASS" starttime="20201029 18:20:16.061" endtime="20201029 18:20:16.063"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:16.057" endtime="20201029 18:20:16.064"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:15.683" endtime="20201029 18:20:16.064"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:15.682" endtime="20201029 18:20:16.064"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:16.073" endtime="20201029 18:20:16.085"></status>
</kw>
<msg timestamp="20201029 18:20:16.086" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:16.071" endtime="20201029 18:20:16.086"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:16.088" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:16.087" endtime="20201029 18:20:16.089"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:16.089" endtime="20201029 18:20:16.091"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:16.068" endtime="20201029 18:20:16.092"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:16.066" endtime="20201029 18:20:16.092"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:16.098" endtime="20201029 18:20:16.411"></status>
</kw>
<msg timestamp="20201029 18:20:16.415" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.97881625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.978827417, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:20:16.097" endtime="20201029 18:20:16.415"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:16.424" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.97881625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.978827417, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:20:16.416" endtime="20201029 18:20:16.425"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:16.426" endtime="20201029 18:20:16.427"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:16.094" endtime="20201029 18:20:16.428"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:16.093" endtime="20201029 18:20:16.428"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:16.432" level="INFO">${RESULT} = [{'diff': 1.1166999999367988e-05}, {'diff': 8.111999999727004e-06}, {'diff': 1.0542000000057783e-05}, {'diff': 7.93099999985003e-06}, {'diff': 8.180000000024279e-06}, {'diff': 9.291999999661016e-06}, ...</msg>
<status status="PASS" starttime="20201029 18:20:16.429" endtime="20201029 18:20:16.433"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:20:16.438" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.1166999999367988e-05, 8.111999999727004e-06, 1.0542000000057783e-05, 7.93099999985003e-06, 8.180000000024279e-06, 9.291999999661016e-06, 6.9859999998200806e-06, 8.651999999997884e-06, 8.31...</msg>
<status status="PASS" starttime="20201029 18:20:16.433" endtime="20201029 18:20:16.442"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:16.446" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:20:16.445" endtime="20201029 18:20:16.447"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:16.449" level="INFO">VALUE: [1.1166999999367988e-05, 8.111999999727004e-06, 1.0542000000057783e-05, 7.93099999985003e-06, 8.180000000024279e-06, 9.291999999661016e-06, 6.9859999998200806e-06, 8.651999999997884e-06, 8.318999999978871e-06, 7.555999999908636e-06, 1.0278000000418785e-05, 1.0263000000065858e-05, 9.791000000092254e-06, 7.722000000320861e-06, 7.444000000411677e-06, 9.889000000207204e-06, 8.76300000030028e-06, 7.944999999232039e-06, 1.115299999998598e-05, 8.18100000010702e-06, 7.348000000462207e-06, 7.3890000003018486e-06, 9.555000000105451e-06, 1.051399999951741e-05, 9.903000000477391e-06, 8.485999999585658e-06, 9.333000000388836e-06, 8.236000000216848e-06, 8.444000000551455e-06, 6.19400000001491e-06, 1.2582999999288802e-05, 1.2027999999553174e-05, 6.083999999795253e-06, 9.66699999960241e-06, 8.110999999644264e-06, 9.125000000054229e-06, 9.028000000022018e-06, 8.014000000500232e-06, 7.736000000591048e-06, 8.402999999823635e-06, 7.054999999311917e-06, 9.47199999945525e-06, 9.361000000041031e-06, 1.09999999997612e-05, 6.972000000438072e-06, 1.0180000000303835e-05, 9.430999999615608e-06, 1.198600000051897e-05, 8.792000000035216e-06, 1.2055000000010807e-05, 9.721999999712239e-06, 1.1096999999793411e-05, 1.115299999998598e-05, 9.429999999532868e-06, 7.583999999560831e-06, 5.6530000005494685e-06, 7.847000000005266e-06, 8.764000000383021e-06, 1.0388999999833004e-05, 8.875000000685418e-06, 9.01400000064001e-06, 9.000000000369823e-06, 9.305999999931203e-06, 7.888999999927648e-06]</msg>
<status status="PASS" starttime="20201029 18:20:16.447" endtime="20201029 18:20:16.449"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:16.443" endtime="20201029 18:20:16.450"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:16.065" endtime="20201029 18:20:16.450"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:16.065" endtime="20201029 18:20:16.450"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:16.458" endtime="20201029 18:20:16.470"></status>
</kw>
<msg timestamp="20201029 18:20:16.470" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:16.457" endtime="20201029 18:20:16.471"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:16.473" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:16.472" endtime="20201029 18:20:16.473"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:16.474" endtime="20201029 18:20:16.476"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:16.454" endtime="20201029 18:20:16.476"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:16.452" endtime="20201029 18:20:16.477"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:16.483" endtime="20201029 18:20:16.797"></status>
</kw>
<msg timestamp="20201029 18:20:16.801" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.351378597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.351387083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:16.481" endtime="20201029 18:20:16.801"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:16.811" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.351378597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.351387083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:16.802" endtime="20201029 18:20:16.811"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:16.812" endtime="20201029 18:20:16.814"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:16.479" endtime="20201029 18:20:16.814"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:16.477" endtime="20201029 18:20:16.814"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:16.819" level="INFO">${RESULT} = [{'diff': 8.485999999585658e-06}, {'diff': 9.333000000388836e-06}, {'diff': 8.236000000216848e-06}, {'diff': 8.444000000551455e-06}, {'diff': 6.19400000001491e-06}, {'diff': 1.2582999999288802e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:20:16.815" endtime="20201029 18:20:16.819"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:20:16.826" level="INFO">${GPIO_OVERHEAD} = {'diff': [8.485999999585658e-06, 9.333000000388836e-06, 8.236000000216848e-06, 8.444000000551455e-06, 6.19400000001491e-06, 1.2582999999288802e-05, 1.2027999999553174e-05, 6.083999999795253e-06, 9.666...</msg>
<status status="PASS" starttime="20201029 18:20:16.820" endtime="20201029 18:20:16.827"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:16.833" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:20:16.831" endtime="20201029 18:20:16.833"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:16.836" level="INFO">VALUE: [8.485999999585658e-06, 9.333000000388836e-06, 8.236000000216848e-06, 8.444000000551455e-06, 6.19400000001491e-06, 1.2582999999288802e-05, 1.2027999999553174e-05, 6.083999999795253e-06, 9.66699999960241e-06, 8.110999999644264e-06, 9.125000000054229e-06, 9.028000000022018e-06, 8.014000000500232e-06, 7.736000000591048e-06, 8.402999999823635e-06, 7.054999999311917e-06, 9.47199999945525e-06, 9.361000000041031e-06, 1.09999999997612e-05, 6.972000000438072e-06, 1.0180000000303835e-05, 9.430999999615608e-06, 1.198600000051897e-05, 8.792000000035216e-06, 1.2055000000010807e-05, 9.721999999712239e-06, 1.1096999999793411e-05, 1.115299999998598e-05, 9.429999999532868e-06, 7.583999999560831e-06, 5.6530000005494685e-06, 7.847000000005266e-06, 8.764000000383021e-06, 1.0388999999833004e-05, 8.875000000685418e-06, 9.01400000064001e-06, 9.000000000369823e-06, 9.305999999931203e-06, 7.888999999927648e-06, 1.0346999999910622e-05, 8.596999999888055e-06, 6.972000000438072e-06, 8.056000000422614e-06, 1.0374999999562817e-05, 8.902999999449435e-06, 6.207999999396918e-06, 9.180000000164057e-06, 6.402999999544079e-06, 9.722999999794979e-06, 8.193999999406287e-06, 6.820000000296034e-06, 7.430999999336052e-06, 9.887999999236285e-06, 7.652999999940846e-06, 7.819999999547633e-06, 7.625000000288651e-06, 1.065300000036018e-05, 7.83299999973508e-06, 9.152999999706424e-06, 9.735999999982425e-06, 7.083999999935031e-06, 6.207999999396918e-06, 9.846999999396644e-06, 8.708999999385014e-06]</msg>
<status status="PASS" starttime="20201029 18:20:16.834" endtime="20201029 18:20:16.837"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:16.827" endtime="20201029 18:20:16.838"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:16.451" endtime="20201029 18:20:16.839"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:16.451" endtime="20201029 18:20:16.839"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:16.850" endtime="20201029 18:20:16.861"></status>
</kw>
<msg timestamp="20201029 18:20:16.861" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:16.849" endtime="20201029 18:20:16.862"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:16.864" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:16.862" endtime="20201029 18:20:16.864"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:16.865" endtime="20201029 18:20:16.866"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:16.845" endtime="20201029 18:20:16.867"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:16.842" endtime="20201029 18:20:16.867"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:16.875" endtime="20201029 18:20:17.192"></status>
</kw>
<msg timestamp="20201029 18:20:17.196" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.724711042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.724720764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:16.873" endtime="20201029 18:20:17.196"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:17.206" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.724711042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.724720764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:17.197" endtime="20201029 18:20:17.206"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:17.207" endtime="20201029 18:20:17.208"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:16.870" endtime="20201029 18:20:17.209"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:16.868" endtime="20201029 18:20:17.209"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:17.214" level="INFO">${RESULT} = [{'diff': 9.721999999712239e-06}, {'diff': 1.1096999999793411e-05}, {'diff': 1.115299999998598e-05}, {'diff': 9.429999999532868e-06}, {'diff': 7.583999999560831e-06}, {'diff': 5.6530000005494685e-06},...</msg>
<status status="PASS" starttime="20201029 18:20:17.210" endtime="20201029 18:20:17.214"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:20:17.218" level="INFO">${GPIO_OVERHEAD} = {'diff': [9.721999999712239e-06, 1.1096999999793411e-05, 1.115299999998598e-05, 9.429999999532868e-06, 7.583999999560831e-06, 5.6530000005494685e-06, 7.847000000005266e-06, 8.764000000383021e-06, 1.03...</msg>
<status status="PASS" starttime="20201029 18:20:17.215" endtime="20201029 18:20:17.219"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:17.223" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:20:17.222" endtime="20201029 18:20:17.224"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:17.226" level="INFO">VALUE: [9.721999999712239e-06, 1.1096999999793411e-05, 1.115299999998598e-05, 9.429999999532868e-06, 7.583999999560831e-06, 5.6530000005494685e-06, 7.847000000005266e-06, 8.764000000383021e-06, 1.0388999999833004e-05, 8.875000000685418e-06, 9.01400000064001e-06, 9.000000000369823e-06, 9.305999999931203e-06, 7.888999999927648e-06, 1.0346999999910622e-05, 8.596999999888055e-06, 6.972000000438072e-06, 8.056000000422614e-06, 1.0374999999562817e-05, 8.902999999449435e-06, 6.207999999396918e-06, 9.180000000164057e-06, 6.402999999544079e-06, 9.722999999794979e-06, 8.193999999406287e-06, 6.820000000296034e-06, 7.430999999336052e-06, 9.887999999236285e-06, 7.652999999940846e-06, 7.819999999547633e-06, 7.625000000288651e-06, 1.065300000036018e-05, 7.83299999973508e-06, 9.152999999706424e-06, 9.735999999982425e-06, 7.083999999935031e-06, 6.207999999396918e-06, 9.846999999396644e-06, 8.708999999385014e-06, 1.134800000013314e-05, 1.055500000024523e-05, 6.9859999998200806e-06, 1.0597000000167611e-05, 9.9169999998594e-06, 1.1860999999946387e-05, 1.1222000000365995e-05, 8.360999999901253e-06, 8.889000000067426e-06, 5.986000000568481e-06, 8.388000000358886e-06, 8.541999999778227e-06, 1.0069000000001438e-05, 9.541999999918005e-06, 9.499999999995623e-06, 9.597000000027833e-06, 6.625000000148873e-06, 8.055999999534436e-06, 7.527999999368262e-06, 8.62499999954025e-06, 7.166999999697055e-06, 8.457999999933463e-06, 9.499999999995623e-06, 7.63899999967066e-06, 9.443999999803054e-06]</msg>
<status status="PASS" starttime="20201029 18:20:17.224" endtime="20201029 18:20:17.227"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:17.220" endtime="20201029 18:20:17.227"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:16.841" endtime="20201029 18:20:17.228"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:16.840" endtime="20201029 18:20:17.228"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:17.236" endtime="20201029 18:20:17.246"></status>
</kw>
<msg timestamp="20201029 18:20:17.247" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:17.234" endtime="20201029 18:20:17.247"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:17.249" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:17.248" endtime="20201029 18:20:17.250"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:17.250" endtime="20201029 18:20:17.252"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:17.232" endtime="20201029 18:20:17.253"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:17.230" endtime="20201029 18:20:17.253"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:17.259" endtime="20201029 18:20:17.578"></status>
</kw>
<msg timestamp="20201029 18:20:17.582" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.099877069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.099883889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:17.258" endtime="20201029 18:20:17.582"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:17.591" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.099877069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.099883889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:17.583" endtime="20201029 18:20:17.592"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:17.592" endtime="20201029 18:20:17.594"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:17.255" endtime="20201029 18:20:17.595"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:17.254" endtime="20201029 18:20:17.595"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:17.599" level="INFO">${RESULT} = [{'diff': 6.820000000296034e-06}, {'diff': 7.430999999336052e-06}, {'diff': 9.887999999236285e-06}, {'diff': 7.652999999940846e-06}, {'diff': 7.819999999547633e-06}, {'diff': 7.625000000288651e-06}, {...</msg>
<status status="PASS" starttime="20201029 18:20:17.596" endtime="20201029 18:20:17.599"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:20:17.605" level="INFO">${GPIO_OVERHEAD} = {'diff': [6.820000000296034e-06, 7.430999999336052e-06, 9.887999999236285e-06, 7.652999999940846e-06, 7.819999999547633e-06, 7.625000000288651e-06, 1.065300000036018e-05, 7.83299999973508e-06, 9.15299...</msg>
<status status="PASS" starttime="20201029 18:20:17.600" endtime="20201029 18:20:17.605"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:17.609" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:20:17.608" endtime="20201029 18:20:17.609"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:17.612" level="INFO">VALUE: [6.820000000296034e-06, 7.430999999336052e-06, 9.887999999236285e-06, 7.652999999940846e-06, 7.819999999547633e-06, 7.625000000288651e-06, 1.065300000036018e-05, 7.83299999973508e-06, 9.152999999706424e-06, 9.735999999982425e-06, 7.083999999935031e-06, 6.207999999396918e-06, 9.846999999396644e-06, 8.708999999385014e-06, 1.134800000013314e-05, 1.055500000024523e-05, 6.9859999998200806e-06, 1.0597000000167611e-05, 9.9169999998594e-06, 1.1860999999946387e-05, 1.1222000000365995e-05, 8.360999999901253e-06, 8.889000000067426e-06, 5.986000000568481e-06, 8.388000000358886e-06, 8.541999999778227e-06, 1.0069000000001438e-05, 9.541999999918005e-06, 9.499999999995623e-06, 9.597000000027833e-06, 6.625000000148873e-06, 8.055999999534436e-06, 7.527999999368262e-06, 8.62499999954025e-06, 7.166999999697055e-06, 8.457999999933463e-06, 9.499999999995623e-06, 7.63899999967066e-06, 9.443999999803054e-06, 5.860999999995897e-06, 7.346999999491288e-06, 1.0971999999220827e-05, 7.2089999996194365e-06, 7.930000000655468e-06, 8.943999999289076e-06, 8.776999999682289e-06, 1.020799999995603e-05, 8.417000000093822e-06, 9.097999999596595e-06, 1.1860999999946387e-05, 1.100000000064938e-05, 8.707999999302274e-06, 7.92999999976729e-06, 7.944999999232039e-06, 9.096999999513855e-06, 1.0027000000079056e-05, 8.77799999976503e-06, 9.152999999706424e-06, 6.597000000496678e-06, 7.652999999940846e-06, 9.278000000279008e-06, 8.014000000500232e-06, 8.792000000035216e-06, 7.959000000390404e-06]</msg>
<status status="PASS" starttime="20201029 18:20:17.610" endtime="20201029 18:20:17.612"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:17.606" endtime="20201029 18:20:17.613"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:17.229" endtime="20201029 18:20:17.613"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:17.228" endtime="20201029 18:20:17.613"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:17.621" endtime="20201029 18:20:17.631"></status>
</kw>
<msg timestamp="20201029 18:20:17.631" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:17.619" endtime="20201029 18:20:17.631"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:17.634" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:17.632" endtime="20201029 18:20:17.634"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:17.635" endtime="20201029 18:20:17.636"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:17.617" endtime="20201029 18:20:17.637"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:17.615" endtime="20201029 18:20:17.637"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:17.644" endtime="20201029 18:20:17.958"></status>
</kw>
<msg timestamp="20201029 18:20:17.961" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.482162319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.482170861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:17.642" endtime="20201029 18:20:17.962"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:17.971" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.482162319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.482170861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:17.962" endtime="20201029 18:20:17.971"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:17.972" endtime="20201029 18:20:17.974"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:17.639" endtime="20201029 18:20:17.974"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:17.638" endtime="20201029 18:20:17.975"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:17.979" level="INFO">${RESULT} = [{'diff': 8.541999999778227e-06}, {'diff': 1.0069000000001438e-05}, {'diff': 9.541999999918005e-06}, {'diff': 9.499999999995623e-06}, {'diff': 9.597000000027833e-06}, {'diff': 6.625000000148873e-06}, ...</msg>
<status status="PASS" starttime="20201029 18:20:17.976" endtime="20201029 18:20:17.979"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:20:17.984" level="INFO">${GPIO_OVERHEAD} = {'diff': [8.541999999778227e-06, 1.0069000000001438e-05, 9.541999999918005e-06, 9.499999999995623e-06, 9.597000000027833e-06, 6.625000000148873e-06, 8.055999999534436e-06, 7.527999999368262e-06, 8.624...</msg>
<status status="PASS" starttime="20201029 18:20:17.980" endtime="20201029 18:20:17.984"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:17.988" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:20:17.987" endtime="20201029 18:20:17.989"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:17.991" level="INFO">VALUE: [8.541999999778227e-06, 1.0069000000001438e-05, 9.541999999918005e-06, 9.499999999995623e-06, 9.597000000027833e-06, 6.625000000148873e-06, 8.055999999534436e-06, 7.527999999368262e-06, 8.62499999954025e-06, 7.166999999697055e-06, 8.457999999933463e-06, 9.499999999995623e-06, 7.63899999967066e-06, 9.443999999803054e-06, 5.860999999995897e-06, 7.346999999491288e-06, 1.0971999999220827e-05, 7.2089999996194365e-06, 7.930000000655468e-06, 8.943999999289076e-06, 8.776999999682289e-06, 1.020799999995603e-05, 8.417000000093822e-06, 9.097999999596595e-06, 1.1860999999946387e-05, 1.100000000064938e-05, 8.707999999302274e-06, 7.92999999976729e-06, 7.944999999232039e-06, 9.096999999513855e-06, 1.0027000000079056e-05, 8.77799999976503e-06, 9.152999999706424e-06, 6.597000000496678e-06, 7.652999999940846e-06, 9.278000000279008e-06, 8.014000000500232e-06, 8.792000000035216e-06, 7.959000000390404e-06, 1.2250000000157968e-05, 8.402999999823635e-06, 7.222000000695061e-06, 9.319999999313211e-06, 8.139000000184637e-06, 7.23600000007707e-06, 5.985999999680303e-06, 1.1111000000063598e-05, 1.0500000000135401e-05, 8.611000000158242e-06, 9.139000000324415e-06, 6.929999999627512e-06, 8.903000000337613e-06, 9.208999999898992e-06, 1.0028000000161796e-05, 9.235999999468447e-06, 8.416000000011081e-06, 8.902999999449435e-06, 8.665999999379892e-06, 8.861000000415231e-06, 7.166999999697055e-06, 1.248600000014477e-05, 7.749999999973056e-06, 9.12499999916605e-06, 8.041000000069687e-06]</msg>
<status status="PASS" starttime="20201029 18:20:17.989" endtime="20201029 18:20:17.991"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:17.985" endtime="20201029 18:20:17.992"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:17.614" endtime="20201029 18:20:17.992"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:17.614" endtime="20201029 18:20:17.992"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:18.001" endtime="20201029 18:20:18.012"></status>
</kw>
<msg timestamp="20201029 18:20:18.013" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:17.999" endtime="20201029 18:20:18.013"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:18.015" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:18.014" endtime="20201029 18:20:18.015"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:18.016" endtime="20201029 18:20:18.018"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:17.996" endtime="20201029 18:20:18.018"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:17.994" endtime="20201029 18:20:18.019"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:18.025" endtime="20201029 18:20:18.338"></status>
</kw>
<msg timestamp="20201029 18:20:18.341" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.8574955, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.8575065, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201029 18:20:18.024" endtime="20201029 18:20:18.342"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:18.351" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.8574955, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.8575065, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201029 18:20:18.343" endtime="20201029 18:20:18.352"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:18.352" endtime="20201029 18:20:18.354"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:18.021" endtime="20201029 18:20:18.355"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:18.019" endtime="20201029 18:20:18.355"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:18.359" level="INFO">${RESULT} = [{'diff': 1.100000000064938e-05}, {'diff': 8.707999999302274e-06}, {'diff': 7.92999999976729e-06}, {'diff': 7.944999999232039e-06}, {'diff': 9.096999999513855e-06}, {'diff': 1.0027000000079056e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:20:18.356" endtime="20201029 18:20:18.360"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:20:18.365" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.100000000064938e-05, 8.707999999302274e-06, 7.92999999976729e-06, 7.944999999232039e-06, 9.096999999513855e-06, 1.0027000000079056e-05, 8.77799999976503e-06, 9.152999999706424e-06, 6.59700...</msg>
<status status="PASS" starttime="20201029 18:20:18.360" endtime="20201029 18:20:18.365"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:18.369" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:20:18.368" endtime="20201029 18:20:18.370"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:18.372" level="INFO">VALUE: [1.100000000064938e-05, 8.707999999302274e-06, 7.92999999976729e-06, 7.944999999232039e-06, 9.096999999513855e-06, 1.0027000000079056e-05, 8.77799999976503e-06, 9.152999999706424e-06, 6.597000000496678e-06, 7.652999999940846e-06, 9.278000000279008e-06, 8.014000000500232e-06, 8.792000000035216e-06, 7.959000000390404e-06, 1.2250000000157968e-05, 8.402999999823635e-06, 7.222000000695061e-06, 9.319999999313211e-06, 8.139000000184637e-06, 7.23600000007707e-06, 5.985999999680303e-06, 1.1111000000063598e-05, 1.0500000000135401e-05, 8.611000000158242e-06, 9.139000000324415e-06, 6.929999999627512e-06, 8.903000000337613e-06, 9.208999999898992e-06, 1.0028000000161796e-05, 9.235999999468447e-06, 8.416000000011081e-06, 8.902999999449435e-06, 8.665999999379892e-06, 8.861000000415231e-06, 7.166999999697055e-06, 1.248600000014477e-05, 7.749999999973056e-06, 9.12499999916605e-06, 8.041000000069687e-06, 9.957999999699041e-06, 9.819000000632627e-06, 1.0721999999852017e-05, 7.597999999831018e-06, 7.5700000001788226e-06, 9.430999999615608e-06, 1.0235999999608225e-05, 1.1139000000603971e-05, 1.115299999998598e-05, 8.263999999869043e-06, 6.721999999292905e-06, 8.596999999888055e-06, 7.23600000007707e-06, 7.763999999355065e-06, 1.080499999961404e-05, 1.0972000000109006e-05, 7.165999999614314e-06, 1.198600000051897e-05, 9.610999999409842e-06, 7.0970000001224776e-06, 1.0500000000135401e-05, 8.486000000473837e-06, 1.0264000000148599e-05, 7.2779999999994516e-06, 7.0970000001224776e-06]</msg>
<status status="PASS" starttime="20201029 18:20:18.370" endtime="20201029 18:20:18.372"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:18.366" endtime="20201029 18:20:18.373"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:17.993" endtime="20201029 18:20:18.373"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:17.993" endtime="20201029 18:20:18.373"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:18.381" endtime="20201029 18:20:18.392"></status>
</kw>
<msg timestamp="20201029 18:20:18.393" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:18.380" endtime="20201029 18:20:18.393"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:18.395" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:18.394" endtime="20201029 18:20:18.395"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:18.396" endtime="20201029 18:20:18.398"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:18.377" endtime="20201029 18:20:18.398"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:18.375" endtime="20201029 18:20:18.399"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:18.405" endtime="20201029 18:20:18.716"></status>
</kw>
<msg timestamp="20201029 18:20:18.720" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.233698639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.233705569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:18.404" endtime="20201029 18:20:18.720"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:18.730" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.233698639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.233705569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:18.721" endtime="20201029 18:20:18.730"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:18.731" endtime="20201029 18:20:18.733"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:18.401" endtime="20201029 18:20:18.733"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:18.399" endtime="20201029 18:20:18.734"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:18.738" level="INFO">${RESULT} = [{'diff': 6.929999999627512e-06}, {'diff': 8.903000000337613e-06}, {'diff': 9.208999999898992e-06}, {'diff': 1.0028000000161796e-05}, {'diff': 9.235999999468447e-06}, {'diff': 8.416000000011081e-06}, ...</msg>
<status status="PASS" starttime="20201029 18:20:18.734" endtime="20201029 18:20:18.738"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:20:18.743" level="INFO">${GPIO_OVERHEAD} = {'diff': [6.929999999627512e-06, 8.903000000337613e-06, 9.208999999898992e-06, 1.0028000000161796e-05, 9.235999999468447e-06, 8.416000000011081e-06, 8.902999999449435e-06, 8.665999999379892e-06, 8.861...</msg>
<status status="PASS" starttime="20201029 18:20:18.739" endtime="20201029 18:20:18.744"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:18.748" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:20:18.747" endtime="20201029 18:20:18.748"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:18.750" level="INFO">VALUE: [6.929999999627512e-06, 8.903000000337613e-06, 9.208999999898992e-06, 1.0028000000161796e-05, 9.235999999468447e-06, 8.416000000011081e-06, 8.902999999449435e-06, 8.665999999379892e-06, 8.861000000415231e-06, 7.166999999697055e-06, 1.248600000014477e-05, 7.749999999973056e-06, 9.12499999916605e-06, 8.041000000069687e-06, 9.957999999699041e-06, 9.819000000632627e-06, 1.0721999999852017e-05, 7.597999999831018e-06, 7.5700000001788226e-06, 9.430999999615608e-06, 1.0235999999608225e-05, 1.1139000000603971e-05, 1.115299999998598e-05, 8.263999999869043e-06, 6.721999999292905e-06, 8.596999999888055e-06, 7.23600000007707e-06, 7.763999999355065e-06, 1.080499999961404e-05, 1.0972000000109006e-05, 7.165999999614314e-06, 1.198600000051897e-05, 9.610999999409842e-06, 7.0970000001224776e-06, 1.0500000000135401e-05, 8.486000000473837e-06, 1.0264000000148599e-05, 7.2779999999994516e-06, 7.0970000001224776e-06, 8.806000000305403e-06, 9.540999999835265e-06, 1.2180999999777953e-05, 5.389000000022293e-06, 8.957999999559263e-06, 9.902999999589213e-06, 9.06899999986166e-06, 9.90200000039465e-06, 1.001399999989161e-05, 8.776999999682289e-06, 1.0124999999305828e-05, 6.6939999996407096e-06, 1.16940000003396e-05, 1.1555000000385007e-05, 7.680999999593041e-06, 6.625000000148873e-06, 1.0361000000180809e-05, 7.847000000005266e-06, 6.777999999485473e-06, 9.431000000503786e-06, 1.1680000000069413e-05, 5.972000000298294e-06, 1.0139000000464193e-05, 9.319000000118649e-06, 1.1096999999793411e-05]</msg>
<status status="PASS" starttime="20201029 18:20:18.749" endtime="20201029 18:20:18.751"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:18.745" endtime="20201029 18:20:18.751"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:18.374" endtime="20201029 18:20:18.752"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:18.374" endtime="20201029 18:20:18.752"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:18.760" endtime="20201029 18:20:18.770"></status>
</kw>
<msg timestamp="20201029 18:20:18.770" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:18.758" endtime="20201029 18:20:18.770"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:18.773" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:18.771" endtime="20201029 18:20:18.773"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:18.774" endtime="20201029 18:20:18.775"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:18.756" endtime="20201029 18:20:18.776"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:18.754" endtime="20201029 18:20:18.776"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:18.783" endtime="20201029 18:20:19.099"></status>
</kw>
<msg timestamp="20201029 18:20:19.102" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.604784917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.604793514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:18.781" endtime="20201029 18:20:19.103"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:19.112" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.604784917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.604793514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:19.104" endtime="20201029 18:20:19.113"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:19.113" endtime="20201029 18:20:19.115"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:18.779" endtime="20201029 18:20:19.116"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:18.777" endtime="20201029 18:20:19.116"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:19.120" level="INFO">${RESULT} = [{'diff': 8.596999999888055e-06}, {'diff': 7.23600000007707e-06}, {'diff': 7.763999999355065e-06}, {'diff': 1.080499999961404e-05}, {'diff': 1.0972000000109006e-05}, {'diff': 7.165999999614314e-06}, {...</msg>
<status status="PASS" starttime="20201029 18:20:19.117" endtime="20201029 18:20:19.120"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:20:19.125" level="INFO">${GPIO_OVERHEAD} = {'diff': [8.596999999888055e-06, 7.23600000007707e-06, 7.763999999355065e-06, 1.080499999961404e-05, 1.0972000000109006e-05, 7.165999999614314e-06, 1.198600000051897e-05, 9.610999999409842e-06, 7.0970...</msg>
<status status="PASS" starttime="20201029 18:20:19.121" endtime="20201029 18:20:19.125"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:19.129" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:20:19.128" endtime="20201029 18:20:19.130"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:19.132" level="INFO">VALUE: [8.596999999888055e-06, 7.23600000007707e-06, 7.763999999355065e-06, 1.080499999961404e-05, 1.0972000000109006e-05, 7.165999999614314e-06, 1.198600000051897e-05, 9.610999999409842e-06, 7.0970000001224776e-06, 1.0500000000135401e-05, 8.486000000473837e-06, 1.0264000000148599e-05, 7.2779999999994516e-06, 7.0970000001224776e-06, 8.806000000305403e-06, 9.540999999835265e-06, 1.2180999999777953e-05, 5.389000000022293e-06, 8.957999999559263e-06, 9.902999999589213e-06, 9.06899999986166e-06, 9.90200000039465e-06, 1.001399999989161e-05, 8.776999999682289e-06, 1.0124999999305828e-05, 6.6939999996407096e-06, 1.16940000003396e-05, 1.1555000000385007e-05, 7.680999999593041e-06, 6.625000000148873e-06, 1.0361000000180809e-05, 7.847000000005266e-06, 6.777999999485473e-06, 9.431000000503786e-06, 1.1680000000069413e-05, 5.972000000298294e-06, 1.0139000000464193e-05, 9.319000000118649e-06, 1.1096999999793411e-05, 7.596999999748277e-06, 7.569999999290644e-06, 9.068999998973482e-06, 7.83299999973508e-06, 6.930999999710252e-06, 7.541000000443887e-06, 7.693999998892309e-06, 6.527000000033922e-06, 1.08470000004246e-05, 1.0514000001293766e-05, 6.389000001050249e-06, 7.763999999355065e-06, 9.013999999751832e-06, 7.471999998287515e-06, 6.221999999667105e-06, 1.0264000000148599e-05, 9.819000000632627e-06, 7.569000000984261e-06, 7.722999999515423e-06, 1.0445000000913751e-05, 6.750000000721457e-06, 1.036099999929263e-05, 6.041999998984693e-06, 8.304999999708684e-06, 7.292000001157817e-06]</msg>
<status status="PASS" starttime="20201029 18:20:19.130" endtime="20201029 18:20:19.132"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:19.126" endtime="20201029 18:20:19.133"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:18.753" endtime="20201029 18:20:19.133"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:18.752" endtime="20201029 18:20:19.134"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:19.142" endtime="20201029 18:20:19.154"></status>
</kw>
<msg timestamp="20201029 18:20:19.155" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:19.140" endtime="20201029 18:20:19.155"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:19.157" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:19.156" endtime="20201029 18:20:19.157"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:19.158" endtime="20201029 18:20:19.160"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:19.137" endtime="20201029 18:20:19.160"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:19.135" endtime="20201029 18:20:19.161"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:19.167" endtime="20201029 18:20:19.484"></status>
</kw>
<msg timestamp="20201029 18:20:19.487" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.973057542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.973064236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:19.166" endtime="20201029 18:20:19.488"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:19.497" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.973057542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.973064236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:19.489" endtime="20201029 18:20:19.498"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:19.498" endtime="20201029 18:20:19.500"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:19.163" endtime="20201029 18:20:19.500"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:19.161" endtime="20201029 18:20:19.501"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:19.505" level="INFO">${RESULT} = [{'diff': 6.6939999996407096e-06}, {'diff': 1.16940000003396e-05}, {'diff': 1.1555000000385007e-05}, {'diff': 7.680999999593041e-06}, {'diff': 6.625000000148873e-06}, {'diff': 1.0361000000180809e-05},...</msg>
<status status="PASS" starttime="20201029 18:20:19.502" endtime="20201029 18:20:19.505"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:20:19.511" level="INFO">${GPIO_OVERHEAD} = {'diff': [6.6939999996407096e-06, 1.16940000003396e-05, 1.1555000000385007e-05, 7.680999999593041e-06, 6.625000000148873e-06, 1.0361000000180809e-05, 7.847000000005266e-06, 6.777999999485473e-06, 9.43...</msg>
<status status="PASS" starttime="20201029 18:20:19.506" endtime="20201029 18:20:19.511"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:19.515" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:20:19.514" endtime="20201029 18:20:19.515"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:19.518" level="INFO">VALUE: [6.6939999996407096e-06, 1.16940000003396e-05, 1.1555000000385007e-05, 7.680999999593041e-06, 6.625000000148873e-06, 1.0361000000180809e-05, 7.847000000005266e-06, 6.777999999485473e-06, 9.431000000503786e-06, 1.1680000000069413e-05, 5.972000000298294e-06, 1.0139000000464193e-05, 9.319000000118649e-06, 1.1096999999793411e-05, 7.596999999748277e-06, 7.569999999290644e-06, 9.068999998973482e-06, 7.83299999973508e-06, 6.930999999710252e-06, 7.541000000443887e-06, 7.693999998892309e-06, 6.527000000033922e-06, 1.08470000004246e-05, 1.0514000001293766e-05, 6.389000001050249e-06, 7.763999999355065e-06, 9.013999999751832e-06, 7.471999998287515e-06, 6.221999999667105e-06, 1.0264000000148599e-05, 9.819000000632627e-06, 7.569000000984261e-06, 7.722999999515423e-06, 1.0445000000913751e-05, 6.750000000721457e-06, 1.036099999929263e-05, 6.041999998984693e-06, 8.304999999708684e-06, 7.292000001157817e-06, 9.778000000792986e-06, 6.819000001101472e-06, 8.554999999077495e-06, 1.0500000000135401e-05, 7.040999999929909e-06, 1.1804999999753818e-05, 7.3890000003018486e-06, 1.0916999999110999e-05, 8.583000001394225e-06, 7.999999999341867e-06, 5.6949999986954936e-06, 9.666000000407848e-06, 1.1527999999927374e-05, 9.679999999789857e-06, 9.679999999789857e-06, 8.707999999302274e-06, 9.013999999751832e-06, 1.0069000000001438e-05, 8.707999999302274e-06, 7.513999999986254e-06, 1.0264000000148599e-05, 1.2403000001270925e-05, 6.15299999928709e-06, 6.583999999421053e-06, 1.0334000000611354e-05]</msg>
<status status="PASS" starttime="20201029 18:20:19.516" endtime="20201029 18:20:19.518"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:19.512" endtime="20201029 18:20:19.519"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:19.134" endtime="20201029 18:20:19.519"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:19.134" endtime="20201029 18:20:19.519"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:19.527" endtime="20201029 18:20:19.539"></status>
</kw>
<msg timestamp="20201029 18:20:19.539" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:19.525" endtime="20201029 18:20:19.540"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:19.542" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:19.540" endtime="20201029 18:20:19.542"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:19.543" endtime="20201029 18:20:19.545"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:19.523" endtime="20201029 18:20:19.545"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:19.521" endtime="20201029 18:20:19.546"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:19.552" endtime="20201029 18:20:19.861"></status>
</kw>
<msg timestamp="20201029 18:20:19.865" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.342532819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.342540583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:19.550" endtime="20201029 18:20:19.865"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:19.875" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.342532819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.342540583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:19.866" endtime="20201029 18:20:19.875"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:19.876" endtime="20201029 18:20:19.877"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:19.548" endtime="20201029 18:20:19.878"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:19.546" endtime="20201029 18:20:19.878"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:19.883" level="INFO">${RESULT} = [{'diff': 7.763999999355065e-06}, {'diff': 9.013999999751832e-06}, {'diff': 7.471999998287515e-06}, {'diff': 6.221999999667105e-06}, {'diff': 1.0264000000148599e-05}, {'diff': 9.819000000632627e-06}, ...</msg>
<status status="PASS" starttime="20201029 18:20:19.879" endtime="20201029 18:20:19.884"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:20:19.889" level="INFO">${GPIO_OVERHEAD} = {'diff': [7.763999999355065e-06, 9.013999999751832e-06, 7.471999998287515e-06, 6.221999999667105e-06, 1.0264000000148599e-05, 9.819000000632627e-06, 7.569000000984261e-06, 7.722999999515423e-06, 1.044...</msg>
<status status="PASS" starttime="20201029 18:20:19.885" endtime="20201029 18:20:19.889"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:19.893" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:20:19.892" endtime="20201029 18:20:19.893"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:19.895" level="INFO">VALUE: [7.763999999355065e-06, 9.013999999751832e-06, 7.471999998287515e-06, 6.221999999667105e-06, 1.0264000000148599e-05, 9.819000000632627e-06, 7.569000000984261e-06, 7.722999999515423e-06, 1.0445000000913751e-05, 6.750000000721457e-06, 1.036099999929263e-05, 6.041999998984693e-06, 8.304999999708684e-06, 7.292000001157817e-06, 9.778000000792986e-06, 6.819000001101472e-06, 8.554999999077495e-06, 1.0500000000135401e-05, 7.040999999929909e-06, 1.1804999999753818e-05, 7.3890000003018486e-06, 1.0916999999110999e-05, 8.583000001394225e-06, 7.999999999341867e-06, 5.6949999986954936e-06, 9.666000000407848e-06, 1.1527999999927374e-05, 9.679999999789857e-06, 9.679999999789857e-06, 8.707999999302274e-06, 9.013999999751832e-06, 1.0069000000001438e-05, 8.707999999302274e-06, 7.513999999986254e-06, 1.0264000000148599e-05, 1.2403000001270925e-05, 6.15299999928709e-06, 6.583999999421053e-06, 1.0334000000611354e-05, 7.2219999989187045e-06, 7.360999999761475e-06, 7.847000000893445e-06, 1.0694999998506205e-05, 6.6939999996407096e-06, 8.666000001156249e-06, 1.0209000000926949e-05, 9.000000000369823e-06, 8.16600000064227e-06, 9.652999999332224e-06, 9.264000000897e-06, 9.903000000477391e-06, 1.2222000000505773e-05, 1.1625000000847763e-05, 6.77800000126183e-06, 1.0624999999819806e-05, 1.1222000001254173e-05, 8.833000000763036e-06, 8.417000000093822e-06, 8.889000000067426e-06, 1.0082999999383446e-05, 8.652999998304267e-06, 9.778000000792986e-06, 8.360999999013075e-06, 9.957999999699041e-06]</msg>
<status status="PASS" starttime="20201029 18:20:19.894" endtime="20201029 18:20:19.896"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:19.889" endtime="20201029 18:20:19.896"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:19.520" endtime="20201029 18:20:19.897"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:19.519" endtime="20201029 18:20:19.897"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:19.905" endtime="20201029 18:20:19.916"></status>
</kw>
<msg timestamp="20201029 18:20:19.916" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:19.903" endtime="20201029 18:20:19.916"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:19.919" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:19.917" endtime="20201029 18:20:19.919"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:19.920" endtime="20201029 18:20:19.921"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:19.900" endtime="20201029 18:20:19.922"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:19.899" endtime="20201029 18:20:19.922"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:19.930" endtime="20201029 18:20:20.238"></status>
</kw>
<msg timestamp="20201029 18:20:20.242" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.714833806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.714843472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:19.928" endtime="20201029 18:20:20.242"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:20.252" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.714833806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.714843472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:20.243" endtime="20201029 18:20:20.252"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:20.253" endtime="20201029 18:20:20.254"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:19.925" endtime="20201029 18:20:20.255"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:19.923" endtime="20201029 18:20:20.255"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:20.260" level="INFO">${RESULT} = [{'diff': 9.666000000407848e-06}, {'diff': 1.1527999999927374e-05}, {'diff': 9.679999999789857e-06}, {'diff': 9.679999999789857e-06}, {'diff': 8.707999999302274e-06}, {'diff': 9.013999999751832e-06}, ...</msg>
<status status="PASS" starttime="20201029 18:20:20.256" endtime="20201029 18:20:20.260"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:20:20.265" level="INFO">${GPIO_OVERHEAD} = {'diff': [9.666000000407848e-06, 1.1527999999927374e-05, 9.679999999789857e-06, 9.679999999789857e-06, 8.707999999302274e-06, 9.013999999751832e-06, 1.0069000000001438e-05, 8.707999999302274e-06, 7.51...</msg>
<status status="PASS" starttime="20201029 18:20:20.261" endtime="20201029 18:20:20.265"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:20.270" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:20:20.268" endtime="20201029 18:20:20.270"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:20.272" level="INFO">VALUE: [9.666000000407848e-06, 1.1527999999927374e-05, 9.679999999789857e-06, 9.679999999789857e-06, 8.707999999302274e-06, 9.013999999751832e-06, 1.0069000000001438e-05, 8.707999999302274e-06, 7.513999999986254e-06, 1.0264000000148599e-05, 1.2403000001270925e-05, 6.15299999928709e-06, 6.583999999421053e-06, 1.0334000000611354e-05, 7.2219999989187045e-06, 7.360999999761475e-06, 7.847000000893445e-06, 1.0694999998506205e-05, 6.6939999996407096e-06, 8.666000001156249e-06, 1.0209000000926949e-05, 9.000000000369823e-06, 8.16600000064227e-06, 9.652999999332224e-06, 9.264000000897e-06, 9.903000000477391e-06, 1.2222000000505773e-05, 1.1625000000847763e-05, 6.77800000126183e-06, 1.0624999999819806e-05, 1.1222000001254173e-05, 8.833000000763036e-06, 8.417000000093822e-06, 8.889000000067426e-06, 1.0082999999383446e-05, 8.652999998304267e-06, 9.778000000792986e-06, 8.360999999013075e-06, 9.957999999699041e-06, 8.776999999682289e-06, 8.889000000067426e-06, 1.0958000000726997e-05, 1.0972000000109006e-05, 6.917000000328244e-06, 8.959000000530182e-06, 1.1402999998466612e-05, 7.347000000379467e-06, 8.417000000093822e-06, 7.2779999999994516e-06, 8.097000000262256e-06, 5.820000000156256e-06, 8.069999999804622e-06, 5.5549999995463395e-06, 1.0222000000226217e-05, 8.791000000840654e-06, 9.125000000054229e-06, 9.236000000356626e-06, 1.0028000000161796e-05, 1.1347999999244962e-05, 7.820000000435812e-06, 7.763000001048681e-06, 7.888000000733086e-06, 7.541000000443887e-06, 7.472000000063872e-06]</msg>
<status status="PASS" starttime="20201029 18:20:20.271" endtime="20201029 18:20:20.273"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:20.266" endtime="20201029 18:20:20.273"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:19.898" endtime="20201029 18:20:20.274"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:19.897" endtime="20201029 18:20:20.274"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:20.282" endtime="20201029 18:20:20.293"></status>
</kw>
<msg timestamp="20201029 18:20:20.293" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:20.280" endtime="20201029 18:20:20.293"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:20.295" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:20.294" endtime="20201029 18:20:20.296"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:20.296" endtime="20201029 18:20:20.298"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:20.277" endtime="20201029 18:20:20.299"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:20.276" endtime="20201029 18:20:20.299"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:20.305" endtime="20201029 18:20:20.613"></status>
</kw>
<msg timestamp="20201029 18:20:20.616" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 9.091315639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 9.091325542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:20.304" endtime="20201029 18:20:20.617"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:20.626" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 9.091315639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 9.091325542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:20.617" endtime="20201029 18:20:20.626"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:20.627" endtime="20201029 18:20:20.629"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:20.301" endtime="20201029 18:20:20.629"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:20.300" endtime="20201029 18:20:20.630"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:20.635" level="INFO">${RESULT} = [{'diff': 9.903000000477391e-06}, {'diff': 1.2222000000505773e-05}, {'diff': 1.1625000000847763e-05}, {'diff': 6.77800000126183e-06}, {'diff': 1.0624999999819806e-05}, {'diff': 1.1222000001254173e-05}...</msg>
<status status="PASS" starttime="20201029 18:20:20.631" endtime="20201029 18:20:20.635"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:20:20.640" level="INFO">${GPIO_OVERHEAD} = {'diff': [9.903000000477391e-06, 1.2222000000505773e-05, 1.1625000000847763e-05, 6.77800000126183e-06, 1.0624999999819806e-05, 1.1222000001254173e-05, 8.833000000763036e-06, 8.417000000093822e-06, 8.8...</msg>
<status status="PASS" starttime="20201029 18:20:20.635" endtime="20201029 18:20:20.640"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:20.644" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:20:20.643" endtime="20201029 18:20:20.644"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:20.647" level="INFO">VALUE: [9.903000000477391e-06, 1.2222000000505773e-05, 1.1625000000847763e-05, 6.77800000126183e-06, 1.0624999999819806e-05, 1.1222000001254173e-05, 8.833000000763036e-06, 8.417000000093822e-06, 8.889000000067426e-06, 1.0082999999383446e-05, 8.652999998304267e-06, 9.778000000792986e-06, 8.360999999013075e-06, 9.957999999699041e-06, 8.776999999682289e-06, 8.889000000067426e-06, 1.0958000000726997e-05, 1.0972000000109006e-05, 6.917000000328244e-06, 8.959000000530182e-06, 1.1402999998466612e-05, 7.347000000379467e-06, 8.417000000093822e-06, 7.2779999999994516e-06, 8.097000000262256e-06, 5.820000000156256e-06, 8.069999999804622e-06, 5.5549999995463395e-06, 1.0222000000226217e-05, 8.791000000840654e-06, 9.125000000054229e-06, 9.236000000356626e-06, 1.0028000000161796e-05, 1.1347999999244962e-05, 7.820000000435812e-06, 7.763000001048681e-06, 7.888000000733086e-06, 7.541000000443887e-06, 7.472000000063872e-06, 6.389000001050249e-06, 1.044400000083101e-05, 1.1500000001163357e-05, 8.597000000776234e-06, 7.861000000275453e-06, 1.0597999999362173e-05, 6.014000000220676e-06, 7.652999999052668e-06, 8.764000000383021e-06, 8.611000000158242e-06, 9.485999999725436e-06, 1.0915999999028259e-05, 9.62499999879185e-06, 9.443999999803054e-06, 8.693999999920266e-06, 9.361000000041031e-06, 1.0722000000740195e-05, 6.388999999273892e-06, 1.0610999998661441e-05, 9.000000000369823e-06, 9.986000000239414e-06, 8.139000000184637e-06, 6.820000001184212e-06, 1.0556000001216148e-05, 7.068999998693926e-06]</msg>
<status status="PASS" starttime="20201029 18:20:20.645" endtime="20201029 18:20:20.647"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:20.641" endtime="20201029 18:20:20.648"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:20.275" endtime="20201029 18:20:20.648"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:20.274" endtime="20201029 18:20:20.648"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:20.656" endtime="20201029 18:20:20.666"></status>
</kw>
<msg timestamp="20201029 18:20:20.667" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:20.654" endtime="20201029 18:20:20.667"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:20.669" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:20.668" endtime="20201029 18:20:20.670"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:20.670" endtime="20201029 18:20:20.672"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:20.652" endtime="20201029 18:20:20.673"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:20.650" endtime="20201029 18:20:20.673"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:20.679" endtime="20201029 18:20:20.996"></status>
</kw>
<msg timestamp="20201029 18:20:21.000" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 9.459230236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 9.459236056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:20.678" endtime="20201029 18:20:21.000"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:21.010" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 9.459230236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 9.459236056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:21.001" endtime="20201029 18:20:21.011"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:21.011" endtime="20201029 18:20:21.013"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:20.675" endtime="20201029 18:20:21.014"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:20.674" endtime="20201029 18:20:21.015"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:21.019" level="INFO">${RESULT} = [{'diff': 5.820000000156256e-06}, {'diff': 8.069999999804622e-06}, {'diff': 5.5549999995463395e-06}, {'diff': 1.0222000000226217e-05}, {'diff': 8.791000000840654e-06}, {'diff': 9.125000000054229e-06},...</msg>
<status status="PASS" starttime="20201029 18:20:21.015" endtime="20201029 18:20:21.019"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:20:21.024" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.820000000156256e-06, 8.069999999804622e-06, 5.5549999995463395e-06, 1.0222000000226217e-05, 8.791000000840654e-06, 9.125000000054229e-06, 9.236000000356626e-06, 1.0028000000161796e-05, 1.1...</msg>
<status status="PASS" starttime="20201029 18:20:21.020" endtime="20201029 18:20:21.024"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:21.028" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:20:21.027" endtime="20201029 18:20:21.029"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:21.031" level="INFO">VALUE: [5.820000000156256e-06, 8.069999999804622e-06, 5.5549999995463395e-06, 1.0222000000226217e-05, 8.791000000840654e-06, 9.125000000054229e-06, 9.236000000356626e-06, 1.0028000000161796e-05, 1.1347999999244962e-05, 7.820000000435812e-06, 7.763000001048681e-06, 7.888000000733086e-06, 7.541000000443887e-06, 7.472000000063872e-06, 6.389000001050249e-06, 1.044400000083101e-05, 1.1500000001163357e-05, 8.597000000776234e-06, 7.861000000275453e-06, 1.0597999999362173e-05, 6.014000000220676e-06, 7.652999999052668e-06, 8.764000000383021e-06, 8.611000000158242e-06, 9.485999999725436e-06, 1.0915999999028259e-05, 9.62499999879185e-06, 9.443999999803054e-06, 8.693999999920266e-06, 9.361000000041031e-06, 1.0722000000740195e-05, 6.388999999273892e-06, 1.0610999998661441e-05, 9.000000000369823e-06, 9.986000000239414e-06, 8.139000000184637e-06, 6.820000001184212e-06, 1.0556000001216148e-05, 7.068999998693926e-06, 7.402999999683857e-06, 1.0264000000148599e-05, 7.2909999992987196e-06, 8.417000000093822e-06, 9.138999999436237e-06, 8.125000000802629e-06, 1.1610999999689398e-05, 1.0790999999343853e-05, 6.374999999891884e-06, 7.611999999213026e-06, 1.0764000000662577e-05, 1.1097999999876151e-05, 7.222000000695061e-06, 8.860999999527053e-06, 6.29100000004712e-06, 9.083000000131847e-06, 9.431000000503786e-06, 8.430000001169446e-06, 8.707999999302274e-06, 1.0916000000804615e-05, 7.971999998801493e-06, 1.1332999999780213e-05, 8.360999999013075e-06, 1.165299999961178e-05, 8.194000001182644e-06]</msg>
<status status="PASS" starttime="20201029 18:20:21.029" endtime="20201029 18:20:21.031"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:21.025" endtime="20201029 18:20:21.032"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:20.649" endtime="20201029 18:20:21.032"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:20.648" endtime="20201029 18:20:21.032"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:13.401" endtime="20201029 18:20:21.033"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 18:20:10.252" endtime="20201029 18:20:21.033" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:21.040" endtime="20201029 18:20:21.060"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:21.039" endtime="20201029 18:20:21.060"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:21.075" endtime="20201029 18:20:24.097"></status>
</kw>
<msg timestamp="20201029 18:20:24.098" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:21.073" endtime="20201029 18:20:24.098"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:24.103" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:24.100" endtime="20201029 18:20:24.104"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:20:24.110" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:20:24.106" endtime="20201029 18:20:24.110"></status>
</kw>
<status status="FAIL" starttime="20201029 18:20:21.071" endtime="20201029 18:20:24.112"></status>
</kw>
<status status="FAIL" starttime="20201029 18:20:21.068" endtime="20201029 18:20:24.113"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:21.067" endtime="20201029 18:20:24.114"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:20:24.123" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:20:24.121" endtime="20201029 18:20:24.124"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:24.116" endtime="20201029 18:20:24.124"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:21.066" endtime="20201029 18:20:24.124"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:21.065" endtime="20201029 18:20:24.125"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:24.126" endtime="20201029 18:20:24.130"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:21.063" endtime="20201029 18:20:24.131"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:21.061" endtime="20201029 18:20:24.132"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:21.037" endtime="20201029 18:20:24.133"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:24.152" endtime="20201029 18:20:24.165"></status>
</kw>
<msg timestamp="20201029 18:20:24.166" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:24.148" endtime="20201029 18:20:24.166"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:24.168" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:24.167" endtime="20201029 18:20:24.168"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:24.169" endtime="20201029 18:20:24.171"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:24.142" endtime="20201029 18:20:24.171"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:24.138" endtime="20201029 18:20:24.172"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:24.180" endtime="20201029 18:20:24.479"></status>
</kw>
<msg timestamp="20201029 18:20:24.482" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.102592431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.102593375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:24.178" endtime="20201029 18:20:24.482"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:24.490" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.102592431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.102593375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:24.483" endtime="20201029 18:20:24.491"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:24.492" endtime="20201029 18:20:24.493"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:24.174" endtime="20201029 18:20:24.494"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:24.172" endtime="20201029 18:20:24.494"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:24.498" level="INFO">${RESULT} = [{'diff': 9.439999999472093e-07}, {'diff': 9.450000000299497e-07}, {'diff': 9.309999997597629e-07}, {'diff': 9.450000000299497e-07}, {'diff': 9.309999997597629e-07}, {'diff': 9.160000002950142e-07}, {...</msg>
<status status="PASS" starttime="20201029 18:20:24.495" endtime="20201029 18:20:24.498"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:20:24.502" level="INFO">${OVERHEAD} = {'diff': [9.439999999472093e-07, 9.450000000299497e-07, 9.309999997597629e-07, 9.450000000299497e-07, 9.309999997597629e-07, 9.160000002950142e-07, 9.299999996770225e-07, 9.440000003912985e-07, 9.4500...</msg>
<status status="PASS" starttime="20201029 18:20:24.499" endtime="20201029 18:20:24.502"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:24.506" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:20:24.505" endtime="20201029 18:20:24.507"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:24.509" level="INFO">VALUE: [9.439999999472093e-07, 9.450000000299497e-07, 9.309999997597629e-07, 9.450000000299497e-07, 9.309999997597629e-07, 9.160000002950142e-07, 9.299999996770225e-07, 9.440000003912985e-07, 9.450000000299497e-07, 9.589999998560472e-07, 9.309999997597629e-07, 9.589999998560472e-07, 9.300000001211117e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.309999997597629e-07, 9.309999997597629e-07, 9.439999999472093e-07, 9.310000002038521e-07, 9.439999999472093e-07, 9.310000002038521e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.310000002038521e-07, 8.609999997410966e-07, 9.439999999472093e-07, 9.309999997597629e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.15999999850925e-07, 9.439999999472093e-07, 9.589999998560472e-07, 9.170000003777545e-07, 9.299999996770225e-07, 9.300000001211117e-07, 9.450000000299497e-07, 9.58000000217396e-07, 9.450000000299497e-07, 9.310000002038521e-07, 9.589999998560472e-07, 9.439999999472093e-07, 9.590000003001364e-07, 9.439999999472093e-07, 9.440000003912985e-07, 9.579999997733069e-07, 9.439999999472093e-07, 9.590000003001364e-07]</msg>
<status status="PASS" starttime="20201029 18:20:24.507" endtime="20201029 18:20:24.509"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:24.503" endtime="20201029 18:20:24.510"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:24.136" endtime="20201029 18:20:24.510"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:24.135" endtime="20201029 18:20:24.511"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:24.519" endtime="20201029 18:20:24.532"></status>
</kw>
<msg timestamp="20201029 18:20:24.532" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:24.517" endtime="20201029 18:20:24.533"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:24.535" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:24.533" endtime="20201029 18:20:24.535"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:24.536" endtime="20201029 18:20:24.537"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:24.514" endtime="20201029 18:20:24.538"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:24.513" endtime="20201029 18:20:24.538"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:24.545" endtime="20201029 18:20:24.858"></status>
</kw>
<msg timestamp="20201029 18:20:24.862" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.102785653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.102786583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:24.543" endtime="20201029 18:20:24.862"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:24.873" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.102785653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.102786583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:24.863" endtime="20201029 18:20:24.874"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:24.875" endtime="20201029 18:20:24.878"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:24.541" endtime="20201029 18:20:24.879"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:24.539" endtime="20201029 18:20:24.880"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:24.889" level="INFO">${RESULT} = [{'diff': 9.299999996770225e-07}, {'diff': 9.300000001211117e-07}, {'diff': 9.450000000299497e-07}, {'diff': 9.58000000217396e-07}, {'diff': 9.450000000299497e-07}, {'diff': 9.310000002038521e-07}, {'...</msg>
<status status="PASS" starttime="20201029 18:20:24.882" endtime="20201029 18:20:24.890"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:20:24.901" level="INFO">${OVERHEAD} = {'diff': [9.299999996770225e-07, 9.300000001211117e-07, 9.450000000299497e-07, 9.58000000217396e-07, 9.450000000299497e-07, 9.310000002038521e-07, 9.589999998560472e-07, 9.439999999472093e-07, 9.59000...</msg>
<status status="PASS" starttime="20201029 18:20:24.891" endtime="20201029 18:20:24.901"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:24.909" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:20:24.907" endtime="20201029 18:20:24.910"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:24.915" level="INFO">VALUE: [9.299999996770225e-07, 9.300000001211117e-07, 9.450000000299497e-07, 9.58000000217396e-07, 9.450000000299497e-07, 9.310000002038521e-07, 9.589999998560472e-07, 9.439999999472093e-07, 9.590000003001364e-07, 9.439999999472093e-07, 9.440000003912985e-07, 9.579999997733069e-07, 9.439999999472093e-07, 9.590000003001364e-07, 9.439999999472093e-07, 9.310000002038521e-07, 9.300000001211117e-07, 9.300000001211117e-07, 9.310000002038521e-07, 9.160000002950142e-07, 9.450000000299497e-07, 9.310000002038521e-07, 9.310000002038521e-07, 9.449999995858605e-07, 8.88999999837381e-07, 9.450000000299497e-07, 9.310000002038521e-07, 9.579999997733069e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.300000001211117e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.310000002038521e-07, 9.300000001211117e-07, 9.450000000299497e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.579999997733069e-07, 9.309999997597629e-07, 9.450000000299497e-07, 9.58000000217396e-07, 9.439999999472093e-07, 9.720000000434936e-07, 9.300000001211117e-07, 9.450000000299497e-07, 9.440000003912985e-07, 9.440000003912985e-07, 9.299999996770225e-07, 9.450000000299497e-07, 9.720000000434936e-07, 9.310000002038521e-07, 9.58000000217396e-07, 9.169999999336653e-07, 9.309999997597629e-07, 9.299999996770225e-07, 9.440000003912985e-07, 9.449999995858605e-07, 9.439999999472093e-07, 8.750000000112834e-07, 9.299999996770225e-07]</msg>
<status status="PASS" starttime="20201029 18:20:24.911" endtime="20201029 18:20:24.916"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:24.903" endtime="20201029 18:20:24.917"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:24.511" endtime="20201029 18:20:24.918"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:24.511" endtime="20201029 18:20:24.919"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:24.935" endtime="20201029 18:20:24.950"></status>
</kw>
<msg timestamp="20201029 18:20:24.951" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:24.932" endtime="20201029 18:20:24.951"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:24.956" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:24.953" endtime="20201029 18:20:24.956"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:24.958" endtime="20201029 18:20:24.961"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:24.926" endtime="20201029 18:20:24.962"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:24.923" endtime="20201029 18:20:24.963"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:24.975" endtime="20201029 18:20:25.308"></status>
</kw>
<msg timestamp="20201029 18:20:25.312" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.458969167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.458970111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:24.973" endtime="20201029 18:20:25.312"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:25.321" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.458969167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.458970111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:25.313" endtime="20201029 18:20:25.322"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:25.323" endtime="20201029 18:20:25.324"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:24.968" endtime="20201029 18:20:25.325"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:24.965" endtime="20201029 18:20:25.325"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:25.329" level="INFO">${RESULT} = [{'diff': 9.440000003912985e-07}, {'diff': 9.299999996770225e-07}, {'diff': 9.450000000299497e-07}, {'diff': 9.720000000434936e-07}, {'diff': 9.310000002038521e-07}, {'diff': 9.58000000217396e-07}, {'...</msg>
<status status="PASS" starttime="20201029 18:20:25.326" endtime="20201029 18:20:25.330"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:20:25.337" level="INFO">${OVERHEAD} = {'diff': [9.440000003912985e-07, 9.299999996770225e-07, 9.450000000299497e-07, 9.720000000434936e-07, 9.310000002038521e-07, 9.58000000217396e-07, 9.169999999336653e-07, 9.309999997597629e-07, 9.29999...</msg>
<status status="PASS" starttime="20201029 18:20:25.330" endtime="20201029 18:20:25.337"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:25.341" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:20:25.340" endtime="20201029 18:20:25.341"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:25.343" level="INFO">VALUE: [9.440000003912985e-07, 9.299999996770225e-07, 9.450000000299497e-07, 9.720000000434936e-07, 9.310000002038521e-07, 9.58000000217396e-07, 9.169999999336653e-07, 9.309999997597629e-07, 9.299999996770225e-07, 9.440000003912985e-07, 9.449999995858605e-07, 9.439999999472093e-07, 8.750000000112834e-07, 9.299999996770225e-07, 9.439999999472093e-07, 9.589999998560472e-07, 9.310000002038521e-07, 9.439999999472093e-07, 9.579999997733069e-07, 9.440000003912985e-07, 9.58000000217396e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.310000002038521e-07, 9.300000001211117e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.309999997597629e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.450000000299497e-07, 9.300000001211117e-07, 9.450000000299497e-07, 9.310000002038521e-07, 9.439999999472093e-07, 9.309999997597629e-07, 9.169999999336653e-07, 9.450000000299497e-07, 9.300000001211117e-07, 9.439999999472093e-07, 9.309999997597629e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.169999999336653e-07, 9.300000001211117e-07, 9.439999999472093e-07, 9.589999998560472e-07, 9.309999997597629e-07, 9.169999999336653e-07, 9.450000000299497e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.160000002950142e-07, 9.579999997733069e-07, 9.300000001211117e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.450000000299497e-07, 9.310000002038521e-07, 9.450000000299497e-07, 9.15999999850925e-07, 9.589999998560472e-07]</msg>
<status status="PASS" starttime="20201029 18:20:25.342" endtime="20201029 18:20:25.344"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:25.338" endtime="20201029 18:20:25.345"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:24.920" endtime="20201029 18:20:25.345"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:24.919" endtime="20201029 18:20:25.345"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:25.353" endtime="20201029 18:20:25.365"></status>
</kw>
<msg timestamp="20201029 18:20:25.365" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:25.352" endtime="20201029 18:20:25.365"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:25.367" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:25.366" endtime="20201029 18:20:25.368"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:25.368" endtime="20201029 18:20:25.370"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:25.349" endtime="20201029 18:20:25.371"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:25.347" endtime="20201029 18:20:25.371"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:25.377" endtime="20201029 18:20:25.691"></status>
</kw>
<msg timestamp="20201029 18:20:25.700" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.865057861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.865058778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:25.376" endtime="20201029 18:20:25.700"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:25.722" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.865057861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.865058778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:25.702" endtime="20201029 18:20:25.723"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:25.725" endtime="20201029 18:20:25.728"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:25.373" endtime="20201029 18:20:25.729"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:25.372" endtime="20201029 18:20:25.730"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:25.739" level="INFO">${RESULT} = [{'diff': 9.169999999336653e-07}, {'diff': 9.450000000299497e-07}, {'diff': 9.450000000299497e-07}, {'diff': 9.439999999472093e-07}, {'diff': 9.160000002950142e-07}, {'diff': 9.579999997733069e-07}, {...</msg>
<status status="PASS" starttime="20201029 18:20:25.732" endtime="20201029 18:20:25.740"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:20:25.749" level="INFO">${OVERHEAD} = {'diff': [9.169999999336653e-07, 9.450000000299497e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.160000002950142e-07, 9.579999997733069e-07, 9.300000001211117e-07, 9.439999999472093e-07, 9.4500...</msg>
<status status="PASS" starttime="20201029 18:20:25.741" endtime="20201029 18:20:25.750"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:25.758" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:20:25.756" endtime="20201029 18:20:25.758"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:25.763" level="INFO">VALUE: [9.169999999336653e-07, 9.450000000299497e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.160000002950142e-07, 9.579999997733069e-07, 9.300000001211117e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.450000000299497e-07, 9.310000002038521e-07, 9.450000000299497e-07, 9.15999999850925e-07, 9.589999998560472e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.300000005652009e-07, 9.309999997597629e-07, 9.579999993292176e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.299999996770225e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.300000005652009e-07, 9.160000002950142e-07, 9.309999997597629e-07, 9.299999996770225e-07, 9.170000003777545e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.309999997597629e-07, 9.310000006479413e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.299999996770225e-07, 9.170000003777545e-07, 9.450000000299497e-07, 9.450000000299497e-07, 9.299999996770225e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.309999997597629e-07, 9.450000000299497e-07, 8.749999995671942e-07, 9.299999996770225e-07, 9.309999997597629e-07, 9.450000000299497e-07, 9.310000006479413e-07, 9.439999999472093e-07, 9.310000006479413e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.160000002950142e-07, 9.300000005652009e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.299999996770225e-07, 9.299999996770225e-07, 9.299999996770225e-07]</msg>
<status status="PASS" starttime="20201029 18:20:25.760" endtime="20201029 18:20:25.765"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:25.751" endtime="20201029 18:20:25.766"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:25.346" endtime="20201029 18:20:25.767"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:25.346" endtime="20201029 18:20:25.767"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:25.784" endtime="20201029 18:20:25.797"></status>
</kw>
<msg timestamp="20201029 18:20:25.798" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:25.782" endtime="20201029 18:20:25.798"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:25.800" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:25.799" endtime="20201029 18:20:25.801"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:25.801" endtime="20201029 18:20:25.803"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:25.775" endtime="20201029 18:20:25.804"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:25.771" endtime="20201029 18:20:25.804"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:25.810" endtime="20201029 18:20:26.118"></status>
</kw>
<msg timestamp="20201029 18:20:26.122" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.272138597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.272139542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:25.809" endtime="20201029 18:20:26.122"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:26.132" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.272138597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.272139542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:26.123" endtime="20201029 18:20:26.132"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:26.133" endtime="20201029 18:20:26.134"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:25.806" endtime="20201029 18:20:26.135"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:25.805" endtime="20201029 18:20:26.135"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:26.140" level="INFO">${RESULT} = [{'diff': 9.450000000299497e-07}, {'diff': 9.310000006479413e-07}, {'diff': 9.439999999472093e-07}, {'diff': 9.310000006479413e-07}, {'diff': 9.450000000299497e-07}, {'diff': 9.439999999472093e-07}, {...</msg>
<status status="PASS" starttime="20201029 18:20:26.136" endtime="20201029 18:20:26.140"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:20:26.145" level="INFO">${OVERHEAD} = {'diff': [9.450000000299497e-07, 9.310000006479413e-07, 9.439999999472093e-07, 9.310000006479413e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.160000002950142e-07, 9.3000...</msg>
<status status="PASS" starttime="20201029 18:20:26.141" endtime="20201029 18:20:26.145"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:26.149" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:20:26.148" endtime="20201029 18:20:26.149"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:26.152" level="INFO">VALUE: [9.450000000299497e-07, 9.310000006479413e-07, 9.439999999472093e-07, 9.310000006479413e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.160000002950142e-07, 9.300000005652009e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.299999996770225e-07, 9.299999996770225e-07, 9.299999996770225e-07, 9.160000002950142e-07, 9.450000000299497e-07, 9.169999994895761e-07, 9.309999997597629e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.58000000217396e-07, 9.439999999472093e-07, 9.309999997597629e-07, 9.450000000299497e-07, 9.450000000299497e-07, 9.170000003777545e-07, 9.439999999472093e-07, 9.58000000217396e-07, 9.299999996770225e-07, 9.309999997597629e-07, 9.440000008353877e-07, 9.450000000299497e-07, 9.300000005652009e-07, 9.170000003777545e-07, 9.58000000217396e-07, 9.300000005652009e-07, 9.300000005652009e-07, 9.439999999472093e-07, 9.58000000217396e-07, 9.300000005652009e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.170000003777545e-07, 9.58000000217396e-07, 9.439999999472093e-07, 1.000000000139778e-06, 9.439999999472093e-07, 9.439999999472093e-07, 9.170000003777545e-07, 9.439999999472093e-07, 9.309999997597629e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.299999996770225e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.450000000299497e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.439999999472093e-07]</msg>
<status status="PASS" starttime="20201029 18:20:26.150" endtime="20201029 18:20:26.152"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:26.146" endtime="20201029 18:20:26.153"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:25.769" endtime="20201029 18:20:26.153"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:25.768" endtime="20201029 18:20:26.154"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:26.161" endtime="20201029 18:20:26.175"></status>
</kw>
<msg timestamp="20201029 18:20:26.175" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:26.160" endtime="20201029 18:20:26.175"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:26.177" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:26.176" endtime="20201029 18:20:26.178"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:26.178" endtime="20201029 18:20:26.180"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:26.157" endtime="20201029 18:20:26.181"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:26.156" endtime="20201029 18:20:26.181"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:26.187" endtime="20201029 18:20:26.503"></status>
</kw>
<msg timestamp="20201029 18:20:26.507" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.693148361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.693149292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:26.186" endtime="20201029 18:20:26.507"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:26.517" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.693148361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.693149292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:26.508" endtime="20201029 18:20:26.517"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:26.518" endtime="20201029 18:20:26.520"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:26.183" endtime="20201029 18:20:26.520"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:26.182" endtime="20201029 18:20:26.521"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:26.525" level="INFO">${RESULT} = [{'diff': 9.309999997597629e-07}, {'diff': 9.439999999472093e-07}, {'diff': 9.450000000299497e-07}, {'diff': 9.299999996770225e-07}, {'diff': 9.439999999472093e-07}, {'diff': 9.439999999472093e-07}, {...</msg>
<status status="PASS" starttime="20201029 18:20:26.521" endtime="20201029 18:20:26.525"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:20:26.531" level="INFO">${OVERHEAD} = {'diff': [9.309999997597629e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.299999996770225e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.4399...</msg>
<status status="PASS" starttime="20201029 18:20:26.526" endtime="20201029 18:20:26.531"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:26.535" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:20:26.534" endtime="20201029 18:20:26.535"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:26.537" level="INFO">VALUE: [9.309999997597629e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.299999996770225e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.450000000299497e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.170000003777545e-07, 9.310000006479413e-07, 9.300000005652009e-07, 9.439999999472093e-07, 9.300000005652009e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.299999996770225e-07, 9.860000007577696e-07, 9.170000003777545e-07, 9.450000000299497e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.170000003777545e-07, 9.300000005652009e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.439999999472093e-07, 8.749999995671942e-07, 8.750000004553726e-07, 9.450000000299497e-07, 9.300000005652009e-07, 9.449999991417712e-07, 9.169999994895761e-07, 9.439999999472093e-07, 9.309999997597629e-07, 9.300000005652009e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.299999996770225e-07, 9.309999997597629e-07, 9.450000000299497e-07, 9.309999997597629e-07, 9.310000006479413e-07, 9.309999997597629e-07, 9.299999996770225e-07, 9.309999997597629e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.859999998695912e-07, 9.450000000299497e-07, 9.590000003001364e-07, 9.439999999472093e-07, 9.310000006479413e-07, 9.439999999472093e-07, 9.309999997597629e-07, 9.449999991417712e-07, 9.309999997597629e-07, 9.450000000299497e-07]</msg>
<status status="PASS" starttime="20201029 18:20:26.536" endtime="20201029 18:20:26.538"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:26.531" endtime="20201029 18:20:26.539"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:26.154" endtime="20201029 18:20:26.539"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:26.154" endtime="20201029 18:20:26.539"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:26.547" endtime="20201029 18:20:26.560"></status>
</kw>
<msg timestamp="20201029 18:20:26.560" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:26.546" endtime="20201029 18:20:26.560"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:26.563" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:26.561" endtime="20201029 18:20:26.563"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:26.564" endtime="20201029 18:20:26.565"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:26.543" endtime="20201029 18:20:26.566"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:26.541" endtime="20201029 18:20:26.566"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:26.574" endtime="20201029 18:20:26.889"></status>
</kw>
<msg timestamp="20201029 18:20:26.893" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.060383167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.060384097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:26.571" endtime="20201029 18:20:26.893"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:26.903" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.060383167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.060384097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:26.894" endtime="20201029 18:20:26.903"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:26.904" endtime="20201029 18:20:26.905"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:26.569" endtime="20201029 18:20:26.906"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:26.567" endtime="20201029 18:20:26.906"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:26.911" level="INFO">${RESULT} = [{'diff': 9.299999996770225e-07}, {'diff': 9.309999997597629e-07}, {'diff': 9.439999999472093e-07}, {'diff': 9.439999999472093e-07}, {'diff': 9.859999998695912e-07}, {'diff': 9.450000000299497e-07}, {...</msg>
<status status="PASS" starttime="20201029 18:20:26.907" endtime="20201029 18:20:26.911"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:20:26.915" level="INFO">${OVERHEAD} = {'diff': [9.299999996770225e-07, 9.309999997597629e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.859999998695912e-07, 9.450000000299497e-07, 9.590000003001364e-07, 9.439999999472093e-07, 9.3100...</msg>
<status status="PASS" starttime="20201029 18:20:26.912" endtime="20201029 18:20:26.916"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:26.919" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:20:26.918" endtime="20201029 18:20:26.920"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:26.922" level="INFO">VALUE: [9.299999996770225e-07, 9.309999997597629e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.859999998695912e-07, 9.450000000299497e-07, 9.590000003001364e-07, 9.439999999472093e-07, 9.310000006479413e-07, 9.439999999472093e-07, 9.309999997597629e-07, 9.449999991417712e-07, 9.309999997597629e-07, 9.450000000299497e-07, 1.000000000139778e-06, 9.159999994068357e-07, 9.309999997597629e-07, 9.439999999472093e-07, 9.449999991417712e-07, 9.439999999472093e-07, 9.159999994068357e-07, 9.439999999472093e-07, 9.309999997597629e-07, 9.030000001075678e-07, 9.160000002950142e-07, 9.450000000299497e-07, 9.450000000299497e-07, 9.160000002950142e-07, 9.300000005652009e-07, 9.160000002950142e-07, 9.309999997597629e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.170000003777545e-07, 9.579999993292176e-07, 9.299999996770225e-07, 9.299999996770225e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.309999997597629e-07, 9.300000005652009e-07, 9.58000000217396e-07, 9.300000005652009e-07, 9.299999996770225e-07, 9.58000000217396e-07, 9.450000000299497e-07, 9.450000000299497e-07, 9.170000003777545e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.309999997597629e-07, 9.309999997597629e-07, 9.310000006479413e-07, 9.309999997597629e-07, 9.450000000299497e-07, 9.58000000217396e-07, 9.299999996770225e-07]</msg>
<status status="PASS" starttime="20201029 18:20:26.920" endtime="20201029 18:20:26.923"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:26.916" endtime="20201029 18:20:26.923"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:26.540" endtime="20201029 18:20:26.924"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:26.540" endtime="20201029 18:20:26.924"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:26.933" endtime="20201029 18:20:26.944"></status>
</kw>
<msg timestamp="20201029 18:20:26.945" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:26.931" endtime="20201029 18:20:26.945"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:26.947" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:26.946" endtime="20201029 18:20:26.947"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:26.948" endtime="20201029 18:20:26.950"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:26.928" endtime="20201029 18:20:26.950"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:26.926" endtime="20201029 18:20:26.951"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:26.957" endtime="20201029 18:20:27.274"></status>
</kw>
<msg timestamp="20201029 18:20:27.278" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.436676736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.436677681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:26.956" endtime="20201029 18:20:27.278"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:27.287" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.436676736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.436677681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:27.279" endtime="20201029 18:20:27.288"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:27.288" endtime="20201029 18:20:27.290"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:26.953" endtime="20201029 18:20:27.290"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:26.951" endtime="20201029 18:20:27.291"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:27.295" level="INFO">${RESULT} = [{'diff': 9.450000000299497e-07}, {'diff': 9.170000003777545e-07}, {'diff': 9.450000000299497e-07}, {'diff': 9.439999999472093e-07}, {'diff': 9.450000000299497e-07}, {'diff': 9.439999999472093e-07}, {...</msg>
<status status="PASS" starttime="20201029 18:20:27.292" endtime="20201029 18:20:27.295"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:20:27.300" level="INFO">${OVERHEAD} = {'diff': [9.450000000299497e-07, 9.170000003777545e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.309999997597629e-07, 9.3099...</msg>
<status status="PASS" starttime="20201029 18:20:27.296" endtime="20201029 18:20:27.301"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:27.305" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:20:27.304" endtime="20201029 18:20:27.305"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:27.307" level="INFO">VALUE: [9.450000000299497e-07, 9.170000003777545e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.309999997597629e-07, 9.309999997597629e-07, 9.310000006479413e-07, 9.309999997597629e-07, 9.450000000299497e-07, 9.58000000217396e-07, 9.299999996770225e-07, 9.299999996770225e-07, 9.309999997597629e-07, 9.58000000217396e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.439999999472093e-07, 1.0139999995217863e-06, 9.170000003777545e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.439999999472093e-07, 1.0140000004099647e-06, 9.299999996770225e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.590000003001364e-07, 9.450000000299497e-07, 8.469999999149991e-07, 9.440000008353877e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.299999996770225e-07, 9.310000006479413e-07, 9.58000000217396e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.299999996770225e-07, 9.439999999472093e-07, 9.579999993292176e-07, 1.0280000006801515e-06, 9.439999999472093e-07, 9.439999999472093e-07, 9.160000002950142e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.450000000299497e-07, 9.450000000299497e-07, 9.300000005652009e-07, 9.300000005652009e-07, 9.58000000217396e-07, 9.309999997597629e-07, 9.590000003001364e-07, 9.309999997597629e-07, 9.439999999472093e-07, 9.719999995994044e-07, 9.590000003001364e-07, 9.309999997597629e-07, 9.300000005652009e-07]</msg>
<status status="PASS" starttime="20201029 18:20:27.306" endtime="20201029 18:20:27.308"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:27.301" endtime="20201029 18:20:27.308"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:26.925" endtime="20201029 18:20:27.309"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:26.924" endtime="20201029 18:20:27.309"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:27.317" endtime="20201029 18:20:27.329"></status>
</kw>
<msg timestamp="20201029 18:20:27.330" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:27.315" endtime="20201029 18:20:27.330"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:27.332" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:27.331" endtime="20201029 18:20:27.333"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:27.334" endtime="20201029 18:20:27.335"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:27.313" endtime="20201029 18:20:27.336"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:27.311" endtime="20201029 18:20:27.336"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:27.342" endtime="20201029 18:20:27.657"></status>
</kw>
<msg timestamp="20201029 18:20:27.661" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.812706222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.812707167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:27.341" endtime="20201029 18:20:27.661"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:27.670" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.812706222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.812707167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:27.662" endtime="20201029 18:20:27.671"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:27.671" endtime="20201029 18:20:27.673"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:27.338" endtime="20201029 18:20:27.674"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:27.337" endtime="20201029 18:20:27.674"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:27.679" level="INFO">${RESULT} = [{'diff': 9.450000000299497e-07}, {'diff': 9.450000000299497e-07}, {'diff': 9.450000000299497e-07}, {'diff': 9.300000005652009e-07}, {'diff': 9.300000005652009e-07}, {'diff': 9.58000000217396e-07}, {'...</msg>
<status status="PASS" starttime="20201029 18:20:27.675" endtime="20201029 18:20:27.679"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:20:27.684" level="INFO">${OVERHEAD} = {'diff': [9.450000000299497e-07, 9.450000000299497e-07, 9.450000000299497e-07, 9.300000005652009e-07, 9.300000005652009e-07, 9.58000000217396e-07, 9.309999997597629e-07, 9.590000003001364e-07, 9.30999...</msg>
<status status="PASS" starttime="20201029 18:20:27.680" endtime="20201029 18:20:27.684"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:27.688" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:20:27.687" endtime="20201029 18:20:27.688"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:27.691" level="INFO">VALUE: [9.450000000299497e-07, 9.450000000299497e-07, 9.450000000299497e-07, 9.300000005652009e-07, 9.300000005652009e-07, 9.58000000217396e-07, 9.309999997597629e-07, 9.590000003001364e-07, 9.309999997597629e-07, 9.439999999472093e-07, 9.719999995994044e-07, 9.590000003001364e-07, 9.309999997597629e-07, 9.300000005652009e-07, 8.749999995671942e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.300000005652009e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.309999997597629e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.299999996770225e-07, 9.299999996770225e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.299999996770225e-07, 9.309999997597629e-07, 9.300000005652009e-07, 9.439999999472093e-07, 1.0139999995217863e-06, 9.170000003777545e-07, 9.450000000299497e-07, 9.58000000217396e-07, 9.309999997597629e-07, 9.309999997597629e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.299999996770225e-07, 9.310000006479413e-07, 9.309999997597629e-07, 9.439999999472093e-07, 9.58000000217396e-07, 9.299999996770225e-07, 9.299999996770225e-07, 9.309999997597629e-07, 9.450000000299497e-07, 9.299999996770225e-07, 9.170000003777545e-07, 9.299999996770225e-07, 9.309999997597629e-07, 9.439999999472093e-07, 8.88999999837381e-07, 9.170000003777545e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.300000005652009e-07, 9.439999999472093e-07, 9.58000000217396e-07, 9.58000000217396e-07, 8.88999999837381e-07]</msg>
<status status="PASS" starttime="20201029 18:20:27.689" endtime="20201029 18:20:27.691"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:27.685" endtime="20201029 18:20:27.692"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:27.310" endtime="20201029 18:20:27.692"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:27.309" endtime="20201029 18:20:27.693"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:27.700" endtime="20201029 18:20:27.711"></status>
</kw>
<msg timestamp="20201029 18:20:27.712" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:27.699" endtime="20201029 18:20:27.712"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:27.714" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:27.713" endtime="20201029 18:20:27.715"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:27.715" endtime="20201029 18:20:27.717"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:27.696" endtime="20201029 18:20:27.717"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:27.695" endtime="20201029 18:20:27.718"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:27.725" endtime="20201029 18:20:28.032"></status>
</kw>
<msg timestamp="20201029 18:20:28.035" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.185976556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.185977486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:27.724" endtime="20201029 18:20:28.036"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:28.045" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.185976556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.185977486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:28.036" endtime="20201029 18:20:28.046"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:28.046" endtime="20201029 18:20:28.048"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:27.720" endtime="20201029 18:20:28.049"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:27.718" endtime="20201029 18:20:28.049"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:28.053" level="INFO">${RESULT} = [{'diff': 9.299999996770225e-07}, {'diff': 9.170000003777545e-07}, {'diff': 9.299999996770225e-07}, {'diff': 9.309999997597629e-07}, {'diff': 9.439999999472093e-07}, {'diff': 8.88999999837381e-07}, {'...</msg>
<status status="PASS" starttime="20201029 18:20:28.050" endtime="20201029 18:20:28.053"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:20:28.058" level="INFO">${OVERHEAD} = {'diff': [9.299999996770225e-07, 9.170000003777545e-07, 9.299999996770225e-07, 9.309999997597629e-07, 9.439999999472093e-07, 8.88999999837381e-07, 9.170000003777545e-07, 9.439999999472093e-07, 9.43999...</msg>
<status status="PASS" starttime="20201029 18:20:28.054" endtime="20201029 18:20:28.058"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:28.063" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:20:28.061" endtime="20201029 18:20:28.063"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:28.065" level="INFO">VALUE: [9.299999996770225e-07, 9.170000003777545e-07, 9.299999996770225e-07, 9.309999997597629e-07, 9.439999999472093e-07, 8.88999999837381e-07, 9.170000003777545e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.300000005652009e-07, 9.439999999472093e-07, 9.58000000217396e-07, 9.58000000217396e-07, 8.88999999837381e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.309999997597629e-07, 9.169999994895761e-07, 9.309999997597629e-07, 9.160000002950142e-07, 9.439999999472093e-07, 9.299999996770225e-07, 9.170000003777545e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.300000005652009e-07, 9.450000000299497e-07, 9.310000006479413e-07, 9.309999997597629e-07, 9.310000006479413e-07, 8.750000004553726e-07, 9.450000000299497e-07, 9.450000000299497e-07, 9.310000006479413e-07, 9.579999993292176e-07, 9.439999999472093e-07, 9.300000005652009e-07, 9.450000000299497e-07, 9.450000000299497e-07, 9.309999997597629e-07, 9.450000000299497e-07, 9.299999996770225e-07, 9.579999993292176e-07, 9.450000000299497e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.58000000217396e-07, 9.309999997597629e-07, 9.439999999472093e-07, 9.299999996770225e-07, 9.310000006479413e-07, 9.030000001075678e-07, 9.58000000217396e-07, 9.170000003777545e-07, 9.590000003001364e-07, 9.299999996770225e-07, 9.310000006479413e-07, 9.450000000299497e-07, 9.309999997597629e-07, 9.720000004875828e-07, 9.58000000217396e-07, 9.450000000299497e-07]</msg>
<status status="PASS" starttime="20201029 18:20:28.064" endtime="20201029 18:20:28.066"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:28.059" endtime="20201029 18:20:28.067"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:27.693" endtime="20201029 18:20:28.067"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:27.693" endtime="20201029 18:20:28.067"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:28.075" endtime="20201029 18:20:28.087"></status>
</kw>
<msg timestamp="20201029 18:20:28.088" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:28.074" endtime="20201029 18:20:28.088"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:28.090" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:28.089" endtime="20201029 18:20:28.091"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:28.092" endtime="20201029 18:20:28.093"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:28.071" endtime="20201029 18:20:28.094"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:28.069" endtime="20201029 18:20:28.094"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:28.100" endtime="20201029 18:20:28.421"></status>
</kw>
<msg timestamp="20201029 18:20:28.425" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.559431764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.559432708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:28.099" endtime="20201029 18:20:28.425"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:28.435" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.559431764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.559432708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:28.426" endtime="20201029 18:20:28.435"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:28.436" endtime="20201029 18:20:28.438"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:28.096" endtime="20201029 18:20:28.438"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:28.095" endtime="20201029 18:20:28.439"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:28.443" level="INFO">${RESULT} = [{'diff': 9.439999999472093e-07}, {'diff': 9.299999996770225e-07}, {'diff': 9.310000006479413e-07}, {'diff': 9.030000001075678e-07}, {'diff': 9.58000000217396e-07}, {'diff': 9.170000003777545e-07}, {'...</msg>
<status status="PASS" starttime="20201029 18:20:28.439" endtime="20201029 18:20:28.443"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:20:28.448" level="INFO">${OVERHEAD} = {'diff': [9.439999999472093e-07, 9.299999996770225e-07, 9.310000006479413e-07, 9.030000001075678e-07, 9.58000000217396e-07, 9.170000003777545e-07, 9.590000003001364e-07, 9.299999996770225e-07, 9.31000...</msg>
<status status="PASS" starttime="20201029 18:20:28.444" endtime="20201029 18:20:28.449"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:28.455" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:20:28.454" endtime="20201029 18:20:28.455"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:28.458" level="INFO">VALUE: [9.439999999472093e-07, 9.299999996770225e-07, 9.310000006479413e-07, 9.030000001075678e-07, 9.58000000217396e-07, 9.170000003777545e-07, 9.590000003001364e-07, 9.299999996770225e-07, 9.310000006479413e-07, 9.450000000299497e-07, 9.309999997597629e-07, 9.720000004875828e-07, 9.58000000217396e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.590000003001364e-07, 9.439999999472093e-07, 9.58000000217396e-07, 9.439999999472093e-07, 9.310000006479413e-07, 9.309999997597629e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.450000000299497e-07, 9.440000008353877e-07, 9.450000000299497e-07, 9.58000000217396e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.309999997597629e-07, 9.58000000217396e-07, 1.000000000139778e-06, 9.450000000299497e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.300000005652009e-07, 9.450000000299497e-07, 9.579999993292176e-07, 9.439999999472093e-07, 9.310000006479413e-07, 9.440000008353877e-07, 9.869999999523316e-07, 9.439999999472093e-07, 9.160000002950142e-07, 9.450000000299497e-07, 9.300000005652009e-07, 9.309999997597629e-07, 9.439999999472093e-07, 9.309999997597629e-07, 9.300000005652009e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.169999994895761e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.449999991417712e-07, 1.000000000139778e-06, 9.439999999472093e-07, 9.170000003777545e-07, 9.299999996770225e-07, 9.58999999411958e-07, 9.310000006479413e-07, 9.299999996770225e-07, 9.439999999472093e-07]</msg>
<status status="PASS" starttime="20201029 18:20:28.456" endtime="20201029 18:20:28.460"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:28.450" endtime="20201029 18:20:28.461"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:28.068" endtime="20201029 18:20:28.462"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:28.068" endtime="20201029 18:20:28.462"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:28.477" endtime="20201029 18:20:28.489"></status>
</kw>
<msg timestamp="20201029 18:20:28.490" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:28.473" endtime="20201029 18:20:28.490"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:28.493" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:28.491" endtime="20201029 18:20:28.493"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:28.494" endtime="20201029 18:20:28.495"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:28.469" endtime="20201029 18:20:28.496"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:28.465" endtime="20201029 18:20:28.496"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:28.506" endtime="20201029 18:20:28.835"></status>
</kw>
<msg timestamp="20201029 18:20:28.839" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.925606528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.925607472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:28.504" endtime="20201029 18:20:28.839"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:28.848" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.925606528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.925607472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:28.840" endtime="20201029 18:20:28.849"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:28.849" endtime="20201029 18:20:28.851"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:28.499" endtime="20201029 18:20:28.852"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:28.497" endtime="20201029 18:20:28.852"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:28.856" level="INFO">${RESULT} = [{'diff': 9.439999999472093e-07}, {'diff': 9.439999999472093e-07}, {'diff': 9.169999994895761e-07}, {'diff': 9.450000000299497e-07}, {'diff': 9.439999999472093e-07}, {'diff': 9.449999991417712e-07}, {...</msg>
<status status="PASS" starttime="20201029 18:20:28.853" endtime="20201029 18:20:28.856"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:20:28.861" level="INFO">${OVERHEAD} = {'diff': [9.439999999472093e-07, 9.439999999472093e-07, 9.169999994895761e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.449999991417712e-07, 1.000000000139778e-06, 9.439999999472093e-07, 9.1700...</msg>
<status status="PASS" starttime="20201029 18:20:28.857" endtime="20201029 18:20:28.861"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:28.865" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:20:28.864" endtime="20201029 18:20:28.865"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:28.867" level="INFO">VALUE: [9.439999999472093e-07, 9.439999999472093e-07, 9.169999994895761e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.449999991417712e-07, 1.000000000139778e-06, 9.439999999472093e-07, 9.170000003777545e-07, 9.299999996770225e-07, 9.58999999411958e-07, 9.310000006479413e-07, 9.299999996770225e-07, 9.439999999472093e-07, 9.449999991417712e-07, 9.450000000299497e-07, 9.440000008353877e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.170000003777545e-07, 9.310000006479413e-07, 9.160000002950142e-07, 9.439999999472093e-07, 9.309999997597629e-07, 9.439999999472093e-07, 9.310000006479413e-07, 9.719999995994044e-07, 9.58000000217396e-07, 9.309999997597629e-07, 9.450000000299497e-07, 9.030000001075678e-07, 9.58000000217396e-07, 9.859999998695912e-07, 9.300000005652009e-07, 9.439999999472093e-07, 9.58000000217396e-07, 9.450000000299497e-07, 9.309999997597629e-07, 9.439999999472093e-07, 9.300000005652009e-07, 9.590000003001364e-07, 9.439999999472093e-07, 9.299999996770225e-07, 9.160000002950142e-07, 9.310000006479413e-07, 8.88999999837381e-07, 1.000000000139778e-06, 9.450000000299497e-07, 9.310000006479413e-07, 9.170000003777545e-07, 9.170000003777545e-07, 9.169999994895761e-07, 9.58000000217396e-07, 9.299999996770225e-07, 9.439999999472093e-07, 9.590000003001364e-07, 9.450000000299497e-07, 9.450000000299497e-07, 9.300000005652009e-07, 9.170000003777545e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.58000000217396e-07, 9.58999999411958e-07]</msg>
<status status="PASS" starttime="20201029 18:20:28.866" endtime="20201029 18:20:28.868"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:28.862" endtime="20201029 18:20:28.869"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:28.463" endtime="20201029 18:20:28.869"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:28.463" endtime="20201029 18:20:28.869"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:28.878" endtime="20201029 18:20:28.890"></status>
</kw>
<msg timestamp="20201029 18:20:28.890" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:28.876" endtime="20201029 18:20:28.890"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:28.893" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:28.891" endtime="20201029 18:20:28.893"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:28.894" endtime="20201029 18:20:28.895"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:28.873" endtime="20201029 18:20:28.896"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:28.871" endtime="20201029 18:20:28.896"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:28.903" endtime="20201029 18:20:29.210"></status>
</kw>
<msg timestamp="20201029 18:20:29.213" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.316484319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.316485236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:28.901" endtime="20201029 18:20:29.214"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:29.223" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.316484319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.316485236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:29.215" endtime="20201029 18:20:29.224"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:29.224" endtime="20201029 18:20:29.226"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:28.898" endtime="20201029 18:20:29.226"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:28.897" endtime="20201029 18:20:29.227"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:29.231" level="INFO">${RESULT} = [{'diff': 9.170000003777545e-07}, {'diff': 9.169999994895761e-07}, {'diff': 9.58000000217396e-07}, {'diff': 9.299999996770225e-07}, {'diff': 9.439999999472093e-07}, {'diff': 9.590000003001364e-07}, {'...</msg>
<status status="PASS" starttime="20201029 18:20:29.228" endtime="20201029 18:20:29.231"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:20:29.236" level="INFO">${OVERHEAD} = {'diff': [9.170000003777545e-07, 9.169999994895761e-07, 9.58000000217396e-07, 9.299999996770225e-07, 9.439999999472093e-07, 9.590000003001364e-07, 9.450000000299497e-07, 9.450000000299497e-07, 9.30000...</msg>
<status status="PASS" starttime="20201029 18:20:29.232" endtime="20201029 18:20:29.237"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:29.240" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:20:29.239" endtime="20201029 18:20:29.241"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:29.243" level="INFO">VALUE: [9.170000003777545e-07, 9.169999994895761e-07, 9.58000000217396e-07, 9.299999996770225e-07, 9.439999999472093e-07, 9.590000003001364e-07, 9.450000000299497e-07, 9.450000000299497e-07, 9.300000005652009e-07, 9.170000003777545e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.58000000217396e-07, 9.58999999411958e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.300000005652009e-07, 9.159999994068357e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.299999996770225e-07, 9.299999996770225e-07, 9.309999997597629e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.309999997597629e-07, 9.310000006479413e-07, 9.439999999472093e-07, 9.159999994068357e-07, 9.439999999472093e-07, 9.309999997597629e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.170000003777545e-07, 9.170000003777545e-07, 9.439999999472093e-07, 9.58999999411958e-07, 9.170000003777545e-07, 9.300000005652009e-07, 9.299999996770225e-07, 9.590000003001364e-07, 9.450000000299497e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.450000000299497e-07, 9.299999996770225e-07, 9.590000003001364e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.169999994895761e-07, 9.439999999472093e-07, 9.58000000217396e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.58000000217396e-07, 9.299999996770225e-07, 9.309999997597629e-07, 9.450000000299497e-07, 9.020000000248274e-07, 9.170000003777545e-07, 9.450000000299497e-07, 9.159999994068357e-07, 9.439999999472093e-07]</msg>
<status status="PASS" starttime="20201029 18:20:29.242" endtime="20201029 18:20:29.244"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:29.237" endtime="20201029 18:20:29.244"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:28.870" endtime="20201029 18:20:29.245"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:28.869" endtime="20201029 18:20:29.245"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:29.253" endtime="20201029 18:20:29.264"></status>
</kw>
<msg timestamp="20201029 18:20:29.264" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:29.251" endtime="20201029 18:20:29.264"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:29.267" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:29.265" endtime="20201029 18:20:29.267"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:29.268" endtime="20201029 18:20:29.269"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:29.248" endtime="20201029 18:20:29.270"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:29.247" endtime="20201029 18:20:29.270"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:29.277" endtime="20201029 18:20:29.597"></status>
</kw>
<msg timestamp="20201029 18:20:29.601" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.708148694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.708149611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:29.275" endtime="20201029 18:20:29.601"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:29.611" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.708148694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.708149611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:29.602" endtime="20201029 18:20:29.611"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:29.612" endtime="20201029 18:20:29.613"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:29.273" endtime="20201029 18:20:29.614"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:29.271" endtime="20201029 18:20:29.614"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:29.618" level="INFO">${RESULT} = [{'diff': 9.169999994895761e-07}, {'diff': 9.439999999472093e-07}, {'diff': 9.58000000217396e-07}, {'diff': 9.439999999472093e-07}, {'diff': 9.439999999472093e-07}, {'diff': 9.58000000217396e-07}, {'d...</msg>
<status status="PASS" starttime="20201029 18:20:29.615" endtime="20201029 18:20:29.619"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:20:29.624" level="INFO">${OVERHEAD} = {'diff': [9.169999994895761e-07, 9.439999999472093e-07, 9.58000000217396e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.58000000217396e-07, 9.299999996770225e-07, 9.309999997597629e-07, 9.450000...</msg>
<status status="PASS" starttime="20201029 18:20:29.619" endtime="20201029 18:20:29.624"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:29.628" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:20:29.627" endtime="20201029 18:20:29.629"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:29.631" level="INFO">VALUE: [9.169999994895761e-07, 9.439999999472093e-07, 9.58000000217396e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.58000000217396e-07, 9.299999996770225e-07, 9.309999997597629e-07, 9.450000000299497e-07, 9.020000000248274e-07, 9.170000003777545e-07, 9.450000000299497e-07, 9.159999994068357e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.580000011055745e-07, 9.450000000299497e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.159999994068357e-07, 9.299999987888441e-07, 9.169999994895761e-07, 9.309999988715845e-07, 9.450000000299497e-07, 9.450000000299497e-07, 9.450000000299497e-07, 9.450000000299497e-07, 9.299999987888441e-07, 9.450000000299497e-07, 9.299999987888441e-07, 8.889999989492026e-07, 9.310000006479413e-07, 9.310000006479413e-07, 9.309999988715845e-07, 9.450000000299497e-07, 9.169999994895761e-07, 9.159999994068357e-07, 9.439999999472093e-07, 9.309999988715845e-07, 9.309999988715845e-07, 9.450000000299497e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.579999993292176e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.450000000299497e-07, 8.890000007255594e-07, 9.590000011883149e-07, 9.300000005652009e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.160000011831926e-07, 9.310000006479413e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.310000006479413e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.450000000299497e-07]</msg>
<status status="PASS" starttime="20201029 18:20:29.629" endtime="20201029 18:20:29.632"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:29.625" endtime="20201029 18:20:29.632"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:29.246" endtime="20201029 18:20:29.633"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:29.245" endtime="20201029 18:20:29.633"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:29.640" endtime="20201029 18:20:29.653"></status>
</kw>
<msg timestamp="20201029 18:20:29.653" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:29.639" endtime="20201029 18:20:29.654"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:29.656" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:29.654" endtime="20201029 18:20:29.656"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:29.657" endtime="20201029 18:20:29.658"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:29.636" endtime="20201029 18:20:29.659"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:29.635" endtime="20201029 18:20:29.659"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:29.666" endtime="20201029 18:20:29.980"></status>
</kw>
<msg timestamp="20201029 18:20:29.984" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.072636667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.072637556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:29.664" endtime="20201029 18:20:29.984"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:29.994" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.072636667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.072637556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:29.985" endtime="20201029 18:20:29.994"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:29.995" endtime="20201029 18:20:29.997"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:29.662" endtime="20201029 18:20:29.997"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:29.660" endtime="20201029 18:20:29.997"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:30.002" level="INFO">${RESULT} = [{'diff': 8.890000007255594e-07}, {'diff': 9.590000011883149e-07}, {'diff': 9.300000005652009e-07}, {'diff': 9.450000000299497e-07}, {'diff': 9.439999999472093e-07}, {'diff': 9.450000000299497e-07}, {...</msg>
<status status="PASS" starttime="20201029 18:20:29.998" endtime="20201029 18:20:30.002"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:20:30.006" level="INFO">${OVERHEAD} = {'diff': [8.890000007255594e-07, 9.590000011883149e-07, 9.300000005652009e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.160000011831926e-07, 9.310000006479413e-07, 9.4500...</msg>
<status status="PASS" starttime="20201029 18:20:30.003" endtime="20201029 18:20:30.007"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:30.010" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:20:30.009" endtime="20201029 18:20:30.011"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:30.013" level="INFO">VALUE: [8.890000007255594e-07, 9.590000011883149e-07, 9.300000005652009e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.160000011831926e-07, 9.310000006479413e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.310000006479413e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.720000004875828e-07, 9.999999992515995e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.310000006479413e-07, 9.299999987888441e-07, 9.580000011055745e-07, 9.450000000299497e-07, 9.300000005652009e-07, 9.310000006479413e-07, 9.439999999472093e-07, 9.440000017235661e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.169999994895761e-07, 9.159999994068357e-07, 9.439999999472093e-07, 9.859999998695912e-07, 9.310000006479413e-07, 9.310000006479413e-07, 9.450000000299497e-07, 9.310000006479413e-07, 9.300000005652009e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.300000005652009e-07, 9.439999999472093e-07, 9.309999988715845e-07, 9.310000006479413e-07, 8.60999998408829e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.020000000248274e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.579999993292176e-07, 9.17000001265933e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.299999987888441e-07, 9.439999999472093e-07, 9.300000005652009e-07, 9.439999999472093e-07, 9.859999998695912e-07, 9.579999993292176e-07, 9.579999993292176e-07, 9.450000000299497e-07, 9.450000000299497e-07, 9.450000000299497e-07]</msg>
<status status="PASS" starttime="20201029 18:20:30.011" endtime="20201029 18:20:30.014"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:30.007" endtime="20201029 18:20:30.014"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:29.633" endtime="20201029 18:20:30.015"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:29.633" endtime="20201029 18:20:30.015"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:30.025" endtime="20201029 18:20:30.038"></status>
</kw>
<msg timestamp="20201029 18:20:30.039" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:30.022" endtime="20201029 18:20:30.039"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:30.042" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:30.040" endtime="20201029 18:20:30.043"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:30.044" endtime="20201029 18:20:30.047"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:30.018" endtime="20201029 18:20:30.047"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:30.017" endtime="20201029 18:20:30.048"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:30.056" endtime="20201029 18:20:30.367"></status>
</kw>
<msg timestamp="20201029 18:20:30.371" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.451295042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.451296, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:20:30.054" endtime="20201029 18:20:30.371"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:30.381" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.451295042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.451296, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:20:30.372" endtime="20201029 18:20:30.381"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:30.382" endtime="20201029 18:20:30.384"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:30.052" endtime="20201029 18:20:30.384"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:30.049" endtime="20201029 18:20:30.385"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:30.389" level="INFO">${RESULT} = [{'diff': 9.579999993292176e-07}, {'diff': 9.17000001265933e-07}, {'diff': 9.450000000299497e-07}, {'diff': 9.439999999472093e-07}, {'diff': 9.299999987888441e-07}, {'diff': 9.439999999472093e-07}, {'...</msg>
<status status="PASS" starttime="20201029 18:20:30.385" endtime="20201029 18:20:30.389"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:20:30.394" level="INFO">${OVERHEAD} = {'diff': [9.579999993292176e-07, 9.17000001265933e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.299999987888441e-07, 9.439999999472093e-07, 9.300000005652009e-07, 9.439999999472093e-07, 9.85999...</msg>
<status status="PASS" starttime="20201029 18:20:30.390" endtime="20201029 18:20:30.394"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:30.398" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:20:30.397" endtime="20201029 18:20:30.399"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:30.401" level="INFO">VALUE: [9.579999993292176e-07, 9.17000001265933e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.299999987888441e-07, 9.439999999472093e-07, 9.300000005652009e-07, 9.439999999472093e-07, 9.859999998695912e-07, 9.579999993292176e-07, 9.579999993292176e-07, 9.450000000299497e-07, 9.450000000299497e-07, 9.450000000299497e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.310000006479413e-07, 9.449999982535928e-07, 9.300000005652009e-07, 9.580000011055745e-07, 9.159999994068357e-07, 9.169999994895761e-07, 9.439999999472093e-07, 9.300000005652009e-07, 9.299999987888441e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.309999988715845e-07, 9.300000005652009e-07, 9.439999999472093e-07, 9.030000001075678e-07, 9.859999998695912e-07, 9.450000000299497e-07, 9.299999987888441e-07, 9.169999994895761e-07, 9.300000005652009e-07, 9.579999993292176e-07, 9.309999988715845e-07, 9.579999993292176e-07, 9.58999999411958e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.450000000299497e-07, 9.309999988715845e-07, 9.299999987888441e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.439999999472093e-07, 8.889999989492026e-07, 9.310000006479413e-07, 9.300000005652009e-07, 9.169999994895761e-07, 9.310000006479413e-07, 9.169999994895761e-07, 9.450000000299497e-07, 9.439999999472093e-07, 8.749999995671942e-07, 9.030000001075678e-07, 9.300000005652009e-07, 9.450000000299497e-07, 9.309999988715845e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.439999999472093e-07]</msg>
<status status="PASS" starttime="20201029 18:20:30.399" endtime="20201029 18:20:30.401"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:30.395" endtime="20201029 18:20:30.402"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:30.016" endtime="20201029 18:20:30.402"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:30.015" endtime="20201029 18:20:30.403"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:30.410" endtime="20201029 18:20:30.423"></status>
</kw>
<msg timestamp="20201029 18:20:30.424" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:30.409" endtime="20201029 18:20:30.424"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:30.426" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:30.425" endtime="20201029 18:20:30.426"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:30.427" endtime="20201029 18:20:30.429"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:30.406" endtime="20201029 18:20:30.429"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:30.405" endtime="20201029 18:20:30.430"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:30.436" endtime="20201029 18:20:30.750"></status>
</kw>
<msg timestamp="20201029 18:20:30.753" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.825748681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.825749611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:30.435" endtime="20201029 18:20:30.754"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:30.763" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.825748681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.825749611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:30.755" endtime="20201029 18:20:30.763"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:30.764" endtime="20201029 18:20:30.766"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:30.432" endtime="20201029 18:20:30.766"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:30.430" endtime="20201029 18:20:30.767"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:30.771" level="INFO">${RESULT} = [{'diff': 9.300000005652009e-07}, {'diff': 9.169999994895761e-07}, {'diff': 9.310000006479413e-07}, {'diff': 9.169999994895761e-07}, {'diff': 9.450000000299497e-07}, {'diff': 9.439999999472093e-07}, {...</msg>
<status status="PASS" starttime="20201029 18:20:30.768" endtime="20201029 18:20:30.771"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:20:30.777" level="INFO">${OVERHEAD} = {'diff': [9.300000005652009e-07, 9.169999994895761e-07, 9.310000006479413e-07, 9.169999994895761e-07, 9.450000000299497e-07, 9.439999999472093e-07, 8.749999995671942e-07, 9.030000001075678e-07, 9.3000...</msg>
<status status="PASS" starttime="20201029 18:20:30.772" endtime="20201029 18:20:30.777"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:30.781" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:20:30.780" endtime="20201029 18:20:30.781"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:30.783" level="INFO">VALUE: [9.300000005652009e-07, 9.169999994895761e-07, 9.310000006479413e-07, 9.169999994895761e-07, 9.450000000299497e-07, 9.439999999472093e-07, 8.749999995671942e-07, 9.030000001075678e-07, 9.300000005652009e-07, 9.450000000299497e-07, 9.309999988715845e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.310000006479413e-07, 9.450000000299497e-07, 9.450000000299497e-07, 9.310000006479413e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.579999993292176e-07, 9.439999999472093e-07, 9.579999993292176e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.450000000299497e-07, 1.0140000004099647e-06, 9.300000005652009e-07, 9.17000001265933e-07, 9.299999987888441e-07, 9.439999999472093e-07, 9.999999992515995e-07, 9.310000006479413e-07, 9.579999993292176e-07, 9.299999987888441e-07, 9.450000000299497e-07, 9.450000000299497e-07, 9.159999994068357e-07, 9.300000005652009e-07, 9.58999999411958e-07, 9.310000006479413e-07, 9.579999993292176e-07, 9.450000000299497e-07, 9.299999987888441e-07, 9.299999987888441e-07, 9.300000005652009e-07, 9.299999987888441e-07, 9.439999999472093e-07, 9.58999999411958e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.310000006479413e-07, 9.310000006479413e-07, 9.17000001265933e-07, 9.309999988715845e-07, 9.309999988715845e-07, 9.580000011055745e-07, 1.0000000010279564e-06, 9.439999999472093e-07, 9.439999999472093e-07]</msg>
<status status="PASS" starttime="20201029 18:20:30.782" endtime="20201029 18:20:30.784"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:30.778" endtime="20201029 18:20:30.785"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:30.403" endtime="20201029 18:20:30.785"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:30.403" endtime="20201029 18:20:30.785"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:30.793" endtime="20201029 18:20:30.804"></status>
</kw>
<msg timestamp="20201029 18:20:30.805" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:30.792" endtime="20201029 18:20:30.805"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:30.807" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:30.806" endtime="20201029 18:20:30.807"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:30.808" endtime="20201029 18:20:30.810"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:30.789" endtime="20201029 18:20:30.810"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:30.787" endtime="20201029 18:20:30.810"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:30.818" endtime="20201029 18:20:31.126"></status>
</kw>
<msg timestamp="20201029 18:20:31.130" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 9.201528875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 9.201529819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:30.816" endtime="20201029 18:20:31.130"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:31.140" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 9.201528875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 9.201529819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:31.131" endtime="20201029 18:20:31.140"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:31.141" endtime="20201029 18:20:31.143"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:30.813" endtime="20201029 18:20:31.143"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:30.811" endtime="20201029 18:20:31.143"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:31.148" level="INFO">${RESULT} = [{'diff': 9.439999999472093e-07}, {'diff': 9.450000000299497e-07}, {'diff': 9.439999999472093e-07}, {'diff': 9.439999999472093e-07}, {'diff': 9.450000000299497e-07}, {'diff': 9.310000006479413e-07}, {...</msg>
<status status="PASS" starttime="20201029 18:20:31.144" endtime="20201029 18:20:31.148"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:20:31.152" level="INFO">${OVERHEAD} = {'diff': [9.439999999472093e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.310000006479413e-07, 9.310000006479413e-07, 9.17000001265933e-07, 9.30999...</msg>
<status status="PASS" starttime="20201029 18:20:31.149" endtime="20201029 18:20:31.152"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:31.156" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:20:31.155" endtime="20201029 18:20:31.157"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:31.159" level="INFO">VALUE: [9.439999999472093e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.310000006479413e-07, 9.310000006479413e-07, 9.17000001265933e-07, 9.309999988715845e-07, 9.309999988715845e-07, 9.580000011055745e-07, 1.0000000010279564e-06, 9.439999999472093e-07, 9.439999999472093e-07, 8.749999995671942e-07, 9.309999988715845e-07, 9.450000000299497e-07, 9.310000006479413e-07, 9.300000005652009e-07, 9.300000005652009e-07, 9.450000000299497e-07, 9.58999999411958e-07, 9.720000004875828e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.169999994895761e-07, 9.590000011883149e-07, 9.309999988715845e-07, 9.310000006479413e-07, 9.450000000299497e-07, 9.580000011055745e-07, 9.439999999472093e-07, 8.890000007255594e-07, 9.450000000299497e-07, 9.300000005652009e-07, 9.580000011055745e-07, 9.439999999472093e-07, 9.300000005652009e-07, 9.309999988715845e-07, 9.029999983312109e-07, 9.309999988715845e-07, 9.439999999472093e-07, 9.310000006479413e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.579999993292176e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.310000006479413e-07, 9.450000000299497e-07, 9.450000000299497e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.450000000299497e-07, 8.889999989492026e-07, 9.159999994068357e-07, 9.439999999472093e-07, 9.579999993292176e-07]</msg>
<status status="PASS" starttime="20201029 18:20:31.157" endtime="20201029 18:20:31.160"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:31.153" endtime="20201029 18:20:31.161"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:30.786" endtime="20201029 18:20:31.161"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:30.786" endtime="20201029 18:20:31.161"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:31.169" endtime="20201029 18:20:31.180"></status>
</kw>
<msg timestamp="20201029 18:20:31.181" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:31.168" endtime="20201029 18:20:31.181"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:31.183" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:31.182" endtime="20201029 18:20:31.184"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:31.184" endtime="20201029 18:20:31.186"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:31.165" endtime="20201029 18:20:31.187"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:31.163" endtime="20201029 18:20:31.187"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:31.193" endtime="20201029 18:20:31.514"></status>
</kw>
<msg timestamp="20201029 18:20:31.518" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 9.572339028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 9.572339972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:31.192" endtime="20201029 18:20:31.518"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:31.527" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 9.572339028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 9.572339972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:31.519" endtime="20201029 18:20:31.528"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:31.529" endtime="20201029 18:20:31.530"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:31.189" endtime="20201029 18:20:31.531"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:31.188" endtime="20201029 18:20:31.531"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:31.535" level="INFO">${RESULT} = [{'diff': 9.439999999472093e-07}, {'diff': 9.450000000299497e-07}, {'diff': 9.439999999472093e-07}, {'diff': 9.439999999472093e-07}, {'diff': 9.310000006479413e-07}, {'diff': 9.450000000299497e-07}, {...</msg>
<status status="PASS" starttime="20201029 18:20:31.532" endtime="20201029 18:20:31.536"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:20:31.541" level="INFO">${OVERHEAD} = {'diff': [9.439999999472093e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.310000006479413e-07, 9.450000000299497e-07, 9.450000000299497e-07, 9.450000000299497e-07, 9.4399...</msg>
<status status="PASS" starttime="20201029 18:20:31.536" endtime="20201029 18:20:31.541"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:31.545" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:20:31.544" endtime="20201029 18:20:31.545"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:31.548" level="INFO">VALUE: [9.439999999472093e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.310000006479413e-07, 9.450000000299497e-07, 9.450000000299497e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.450000000299497e-07, 8.889999989492026e-07, 9.159999994068357e-07, 9.439999999472093e-07, 9.579999993292176e-07, 9.169999994895761e-07, 9.439999999472093e-07, 9.439999999472093e-07, 8.749999995671942e-07, 9.439999999472093e-07, 9.030000001075678e-07, 8.610000001851859e-07, 9.450000000299497e-07, 9.020000000248274e-07, 9.17000001265933e-07, 9.310000006479413e-07, 9.580000011055745e-07, 1.027999999791973e-06, 9.439999999472093e-07, 9.439999999472093e-07, 9.58999999411958e-07, 9.300000005652009e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.310000006479413e-07, 9.450000000299497e-07, 9.450000000299497e-07, 9.590000011883149e-07, 9.450000000299497e-07, 9.300000005652009e-07, 9.310000006479413e-07, 9.020000000248274e-07, 9.58999999411958e-07, 9.439999999472093e-07, 9.17000001265933e-07, 9.580000011055745e-07, 9.58999999411958e-07, 9.169999994895761e-07, 9.310000006479413e-07, 9.310000006479413e-07, 9.450000000299497e-07, 9.299999987888441e-07, 9.450000000299497e-07, 9.590000011883149e-07, 9.159999994068357e-07, 9.439999999472093e-07, 9.579999993292176e-07, 9.439999999472093e-07, 9.300000005652009e-07, 9.030000001075678e-07, 9.450000000299497e-07, 9.579999993292176e-07, 9.579999993292176e-07, 9.590000011883149e-07, 9.310000006479413e-07]</msg>
<status status="PASS" starttime="20201029 18:20:31.546" endtime="20201029 18:20:31.549"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:31.542" endtime="20201029 18:20:31.549"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:31.162" endtime="20201029 18:20:31.550"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:31.162" endtime="20201029 18:20:31.550"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:31.559" endtime="20201029 18:20:31.570"></status>
</kw>
<msg timestamp="20201029 18:20:31.571" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:31.557" endtime="20201029 18:20:31.571"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:31.573" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:31.572" endtime="20201029 18:20:31.573"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:31.574" endtime="20201029 18:20:31.576"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:31.554" endtime="20201029 18:20:31.576"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:31.552" endtime="20201029 18:20:31.577"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:31.583" endtime="20201029 18:20:31.896"></status>
</kw>
<msg timestamp="20201029 18:20:31.900" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 9.938381653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 9.938382583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:31.582" endtime="20201029 18:20:31.900"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:31.912" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 9.938381653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 9.938382583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:31.901" endtime="20201029 18:20:31.912"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:31.913" endtime="20201029 18:20:31.916"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:31.579" endtime="20201029 18:20:31.916"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:31.577" endtime="20201029 18:20:31.917"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:31.923" level="INFO">${RESULT} = [{'diff': 9.299999987888441e-07}, {'diff': 9.450000000299497e-07}, {'diff': 9.590000011883149e-07}, {'diff': 9.159999994068357e-07}, {'diff': 9.439999999472093e-07}, {'diff': 9.579999993292176e-07}, {...</msg>
<status status="PASS" starttime="20201029 18:20:31.918" endtime="20201029 18:20:31.923"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:20:31.929" level="INFO">${OVERHEAD} = {'diff': [9.299999987888441e-07, 9.450000000299497e-07, 9.590000011883149e-07, 9.159999994068357e-07, 9.439999999472093e-07, 9.579999993292176e-07, 9.439999999472093e-07, 9.300000005652009e-07, 9.0300...</msg>
<status status="PASS" starttime="20201029 18:20:31.924" endtime="20201029 18:20:31.929"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:31.935" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:20:31.933" endtime="20201029 18:20:31.935"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:31.939" level="INFO">VALUE: [9.299999987888441e-07, 9.450000000299497e-07, 9.590000011883149e-07, 9.159999994068357e-07, 9.439999999472093e-07, 9.579999993292176e-07, 9.439999999472093e-07, 9.300000005652009e-07, 9.030000001075678e-07, 9.450000000299497e-07, 9.579999993292176e-07, 9.579999993292176e-07, 9.590000011883149e-07, 9.310000006479413e-07, 9.590000011883149e-07, 9.450000000299497e-07, 9.310000006479413e-07, 9.300000005652009e-07, 9.309999988715845e-07, 9.300000005652009e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.450000000299497e-07, 9.310000006479413e-07, 9.299999987888441e-07, 9.029999983312109e-07, 9.439999999472093e-07, 9.309999988715845e-07, 9.450000000299497e-07, 9.450000000299497e-07, 9.450000000299497e-07, 9.300000005652009e-07, 9.439999999472093e-07, 8.890000007255594e-07, 9.450000000299497e-07, 9.450000000299497e-07, 9.160000011831926e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.58999999411958e-07, 9.020000000248274e-07, 9.299999987888441e-07, 9.310000006479413e-07, 9.309999988715845e-07, 9.17000001265933e-07, 9.590000011883149e-07, 9.450000000299497e-07, 9.310000006479413e-07, 9.169999994895761e-07, 9.299999987888441e-07, 9.310000006479413e-07, 9.310000006479413e-07, 9.300000005652009e-07, 9.309999988715845e-07, 9.310000006479413e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.590000011883149e-07]</msg>
<status status="PASS" starttime="20201029 18:20:31.937" endtime="20201029 18:20:31.940"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:31.930" endtime="20201029 18:20:31.940"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:31.551" endtime="20201029 18:20:31.941"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:31.550" endtime="20201029 18:20:31.941"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:24.133" endtime="20201029 18:20:31.941"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 18:20:21.035" endtime="20201029 18:20:31.941" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:31.948" endtime="20201029 18:20:31.967"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:31.947" endtime="20201029 18:20:31.968"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:31.984" endtime="20201029 18:20:35.005"></status>
</kw>
<msg timestamp="20201029 18:20:35.006" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:31.982" endtime="20201029 18:20:35.007"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:35.012" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:35.009" endtime="20201029 18:20:35.012"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:20:35.018" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:20:35.014" endtime="20201029 18:20:35.018"></status>
</kw>
<status status="FAIL" starttime="20201029 18:20:31.980" endtime="20201029 18:20:35.019"></status>
</kw>
<status status="FAIL" starttime="20201029 18:20:31.977" endtime="20201029 18:20:35.021"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:31.976" endtime="20201029 18:20:35.021"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:20:35.029" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:20:35.027" endtime="20201029 18:20:35.029"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:35.023" endtime="20201029 18:20:35.030"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:31.975" endtime="20201029 18:20:35.030"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:31.974" endtime="20201029 18:20:35.031"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:35.032" endtime="20201029 18:20:35.035"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:31.970" endtime="20201029 18:20:35.036"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:31.969" endtime="20201029 18:20:35.037"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:31.945" endtime="20201029 18:20:35.038"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>02</arg>
<arg>set</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:35.055" endtime="20201029 18:20:35.079"></status>
</kw>
<msg timestamp="20201029 18:20:35.080" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:35.052" endtime="20201029 18:20:35.080"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:35.085" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:35.082" endtime="20201029 18:20:35.086"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:35.086" endtime="20201029 18:20:35.088"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:35.047" endtime="20201029 18:20:35.089"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:35.042" endtime="20201029 18:20:35.089"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:35.092" endtime="20201029 18:20:35.093"></status>
</kw>
<msg timestamp="20201029 18:20:35.094" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201029 18:20:35.090" endtime="20201029 18:20:35.094"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:35.098" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 18:20:35.097" endtime="20201029 18:20:35.098"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:35.101" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 18:20:35.099" endtime="20201029 18:20:35.101"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:35.094" endtime="20201029 18:20:35.102"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:35.105" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 18:20:35.104" endtime="20201029 18:20:35.106"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:35.107" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 18:20:35.107" endtime="20201029 18:20:35.108"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:35.102" endtime="20201029 18:20:35.108"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:35.115" endtime="20201029 18:20:35.415"></status>
</kw>
<msg timestamp="20201029 18:20:35.418" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.098747417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.098751486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:35.113" endtime="20201029 18:20:35.418"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:35.426" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.098747417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.098751486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:35.419" endtime="20201029 18:20:35.426"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:35.427" endtime="20201029 18:20:35.429"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:35.111" endtime="20201029 18:20:35.429"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:35.109" endtime="20201029 18:20:35.429"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:35.433" level="INFO">${RESULT} = [{'diff': 4.0690000000509485e-06}, {'diff': 4.999999999810711e-06}, {'diff': 4.9309999998747855e-06}, {'diff': 4.985999999984614e-06}, {'diff': 4.972000000158516e-06}, {'diff': 5.014000000080898e-06},...</msg>
<status status="PASS" starttime="20201029 18:20:35.430" endtime="20201029 18:20:35.434"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:20:35.438" level="INFO">${OVERHEAD} = {'diff': [4.0690000000509485e-06, 4.999999999810711e-06, 4.9309999998747855e-06, 4.985999999984614e-06, 4.972000000158516e-06, 5.014000000080898e-06, 4.985999999984614e-06, 4.999999999810711e-06, 4.99...</msg>
<status status="PASS" starttime="20201029 18:20:35.434" endtime="20201029 18:20:35.438"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:35.443" level="INFO">NAME: overhead-02-set-first-timer</msg>
<status status="PASS" starttime="20201029 18:20:35.442" endtime="20201029 18:20:35.443"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:35.445" level="INFO">VALUE: [4.0690000000509485e-06, 4.999999999810711e-06, 4.9309999998747855e-06, 4.985999999984614e-06, 4.972000000158516e-06, 5.014000000080898e-06, 4.985999999984614e-06, 4.999999999810711e-06, 4.999999999810711e-06, 4.985999999984614e-06, 4.971999999714427e-06, 4.9729999997971674e-06, 4.945000000144972e-06, 4.999999999810711e-06, 5.000000000254801e-06, 5.0420000001771825e-06, 4.985999999984614e-06, 4.971999999714427e-06, 5.014000000080898e-06, 4.972000000158516e-06, 5.014000000080898e-06, 4.985999999984614e-06, 4.972000000158516e-06, 5.014000000080898e-06, 4.985999999984614e-06, 4.985999999984614e-06, 4.985999999984614e-06, 5.05600000000328e-06, 4.985999999984614e-06, 4.9579999998883295e-06, 4.971999999714427e-06, 4.958000000332419e-06, 5.000000000254801e-06, 4.985999999984614e-06, 4.985999999984614e-06, 5.027999999906996e-06, 4.999999999810711e-06, 4.929999999792045e-06, 4.985999999984614e-06, 4.971999999714427e-06, 4.972000000158516e-06, 4.985999999984614e-06, 4.95899999997107e-06, 5.000000000254801e-06, 4.985999999984614e-06, 5.000000000254801e-06, 4.987000000067354e-06, 4.985999999984614e-06, 4.985999999984614e-06, 4.985999999984614e-06]</msg>
<status status="PASS" starttime="20201029 18:20:35.444" endtime="20201029 18:20:35.446"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:35.438" endtime="20201029 18:20:35.447"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:35.039" endtime="20201029 18:20:35.447"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 18:20:31.943" endtime="20201029 18:20:35.448" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Set Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:35.454" endtime="20201029 18:20:35.474"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:35.453" endtime="20201029 18:20:35.474"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:35.487" endtime="20201029 18:20:38.505"></status>
</kw>
<msg timestamp="20201029 18:20:38.505" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:35.486" endtime="20201029 18:20:38.506"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:38.508" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:38.507" endtime="20201029 18:20:38.508"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:20:38.511" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:20:38.509" endtime="20201029 18:20:38.511"></status>
</kw>
<status status="FAIL" starttime="20201029 18:20:35.483" endtime="20201029 18:20:38.512"></status>
</kw>
<status status="FAIL" starttime="20201029 18:20:35.481" endtime="20201029 18:20:38.513"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:35.479" endtime="20201029 18:20:38.513"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:20:38.516" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:20:38.516" endtime="20201029 18:20:38.517"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:38.514" endtime="20201029 18:20:38.517"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:35.479" endtime="20201029 18:20:38.517"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:35.478" endtime="20201029 18:20:38.517"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:38.518" endtime="20201029 18:20:38.520"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:35.477" endtime="20201029 18:20:38.520"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:35.475" endtime="20201029 18:20:38.521"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:35.452" endtime="20201029 18:20:38.522"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>03</arg>
<arg>set</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:38.536" endtime="20201029 18:20:42.573"></status>
</kw>
<msg timestamp="20201029 18:20:42.574" level="INFO">${RESULT} = {'cmd': 'overhead_timer set middle', 'msg': ['overhead_timer set middle\r\n', '{"cmd":"timer overhead: set middle timer","data":[{"timer count":"100"},{"sample count":"50"}/data/riotbuild/riotproject/...</msg>
<status status="PASS" starttime="20201029 18:20:38.532" endtime="20201029 18:20:42.574"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:42.579" level="INFO">${RESULT} = {'cmd': 'overhead_timer set middle', 'msg': ['overhead_timer set middle\r\n', '{"cmd":"timer overhead: set middle timer","data":[{"timer count":"100"},{"sample count":"50"}/data/riotbuild/riotproject/...</msg>
<status status="PASS" starttime="20201029 18:20:42.576" endtime="20201029 18:20:42.580"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:20:42.586" level="FAIL">'Timeout' does not contain 'Success'</msg>
<status status="FAIL" starttime="20201029 18:20:42.582" endtime="20201029 18:20:42.586"></status>
</kw>
<status status="FAIL" starttime="20201029 18:20:38.528" endtime="20201029 18:20:42.588"></status>
</kw>
<status status="FAIL" starttime="20201029 18:20:38.524" endtime="20201029 18:20:42.589"></status>
</kw>
<status status="FAIL" starttime="20201029 18:20:38.522" endtime="20201029 18:20:42.591"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="FAIL" starttime="20201029 18:20:35.449" endtime="20201029 18:20:42.592" critical="yes">'Timeout' does not contain 'Success'</status>
</test>
<test id="s1-s2-t5" name="Measure Overhead Set Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:42.607" endtime="20201029 18:20:42.628"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:42.604" endtime="20201029 18:20:42.630"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:42.657" endtime="20201029 18:20:49.671"></status>
</kw>
<msg timestamp="20201029 18:20:49.672" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 18:20:42.654" endtime="20201029 18:20:49.673"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:49.677" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 18:20:49.674" endtime="20201029 18:20:49.678"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:49.679" endtime="20201029 18:20:49.683"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:42.648" endtime="20201029 18:20:49.684"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:42.643" endtime="20201029 18:20:49.685"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:42.640" endtime="20201029 18:20:49.685"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:49.687" endtime="20201029 18:20:49.690"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:42.639" endtime="20201029 18:20:49.691"></status>
</kw>
<kw name="${i} = 1" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:49.711" endtime="20201029 18:20:53.721"></status>
</kw>
<msg timestamp="20201029 18:20:53.722" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 18:20:49.706" endtime="20201029 18:20:53.723"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:53.727" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 18:20:53.725" endtime="20201029 18:20:53.728"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:53.730" endtime="20201029 18:20:53.733"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:49.701" endtime="20201029 18:20:53.734"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:49.696" endtime="20201029 18:20:53.735"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:49.693" endtime="20201029 18:20:53.736"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:53.737" endtime="20201029 18:20:53.741"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:49.692" endtime="20201029 18:20:53.741"></status>
</kw>
<kw name="${i} = 2" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:53.761" endtime="20201029 18:20:57.770"></status>
</kw>
<msg timestamp="20201029 18:20:57.771" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 18:20:53.756" endtime="20201029 18:20:57.772"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:57.776" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 18:20:57.774" endtime="20201029 18:20:57.777"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:57.778" endtime="20201029 18:20:57.782"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:53.751" endtime="20201029 18:20:57.783"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:53.746" endtime="20201029 18:20:57.784"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:53.744" endtime="20201029 18:20:57.785"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:57.786" endtime="20201029 18:20:57.790"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:53.742" endtime="20201029 18:20:57.790"></status>
</kw>
<kw name="${i} = 3" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:57.809" endtime="20201029 18:21:01.818"></status>
</kw>
<msg timestamp="20201029 18:21:01.819" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 18:20:57.806" endtime="20201029 18:21:01.820"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:21:01.825" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 18:21:01.822" endtime="20201029 18:21:01.825"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:01.827" endtime="20201029 18:21:01.830"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:57.800" endtime="20201029 18:21:01.831"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:57.795" endtime="20201029 18:21:01.832"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:57.793" endtime="20201029 18:21:01.833"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:01.835" endtime="20201029 18:21:01.838"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:57.791" endtime="20201029 18:21:01.838"></status>
</kw>
<kw name="${i} = 4" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:01.857" endtime="20201029 18:21:05.867"></status>
</kw>
<msg timestamp="20201029 18:21:05.868" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 18:21:01.854" endtime="20201029 18:21:05.868"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:21:05.873" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 18:21:05.870" endtime="20201029 18:21:05.874"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:05.875" endtime="20201029 18:21:05.878"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:01.848" endtime="20201029 18:21:05.879"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:01.843" endtime="20201029 18:21:05.880"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:01.841" endtime="20201029 18:21:05.881"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:05.883" endtime="20201029 18:21:05.886"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:01.839" endtime="20201029 18:21:05.886"></status>
</kw>
<kw name="${i} = 5" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:05.909" endtime="20201029 18:21:09.918"></status>
</kw>
<msg timestamp="20201029 18:21:09.919" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 18:21:05.905" endtime="20201029 18:21:09.920"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:21:09.924" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 18:21:09.922" endtime="20201029 18:21:09.925"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:09.927" endtime="20201029 18:21:09.930"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:05.897" endtime="20201029 18:21:09.931"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:05.892" endtime="20201029 18:21:09.932"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:05.889" endtime="20201029 18:21:09.933"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:09.934" endtime="20201029 18:21:09.937"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:05.887" endtime="20201029 18:21:09.938"></status>
</kw>
<kw name="${i} = 6" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:09.957" endtime="20201029 18:21:13.966"></status>
</kw>
<msg timestamp="20201029 18:21:13.967" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 18:21:09.953" endtime="20201029 18:21:13.968"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:21:13.972" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 18:21:13.969" endtime="20201029 18:21:13.973"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:13.974" endtime="20201029 18:21:13.978"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:09.948" endtime="20201029 18:21:13.979"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:09.943" endtime="20201029 18:21:13.980"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:09.940" endtime="20201029 18:21:13.980"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:13.982" endtime="20201029 18:21:13.985"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:09.939" endtime="20201029 18:21:13.986"></status>
</kw>
<kw name="${i} = 7" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:14.005" endtime="20201029 18:21:18.014"></status>
</kw>
<msg timestamp="20201029 18:21:18.015" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 18:21:14.001" endtime="20201029 18:21:18.016"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:21:18.020" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 18:21:18.017" endtime="20201029 18:21:18.021"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:18.022" endtime="20201029 18:21:18.026"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:13.996" endtime="20201029 18:21:18.027"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:13.991" endtime="20201029 18:21:18.028"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:13.988" endtime="20201029 18:21:18.029"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:18.030" endtime="20201029 18:21:18.034"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:13.987" endtime="20201029 18:21:18.035"></status>
</kw>
<kw name="${i} = 8" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:18.054" endtime="20201029 18:21:22.063"></status>
</kw>
<msg timestamp="20201029 18:21:22.064" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 18:21:18.050" endtime="20201029 18:21:22.065"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:21:22.069" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 18:21:22.066" endtime="20201029 18:21:22.070"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:22.071" endtime="20201029 18:21:22.077"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:18.045" endtime="20201029 18:21:22.078"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:18.040" endtime="20201029 18:21:22.079"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:18.037" endtime="20201029 18:21:22.079"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:22.081" endtime="20201029 18:21:22.085"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:18.036" endtime="20201029 18:21:22.085"></status>
</kw>
<kw name="${i} = 9" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:22.104" endtime="20201029 18:21:26.114"></status>
</kw>
<msg timestamp="20201029 18:21:26.115" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 18:21:22.101" endtime="20201029 18:21:26.115"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:21:26.120" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 18:21:26.117" endtime="20201029 18:21:26.121"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:26.122" endtime="20201029 18:21:26.126"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:22.095" endtime="20201029 18:21:26.127"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:22.090" endtime="20201029 18:21:26.128"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:22.087" endtime="20201029 18:21:26.128"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:26.130" endtime="20201029 18:21:26.133"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:22.086" endtime="20201029 18:21:26.134"></status>
</kw>
<kw name="${i} = 10" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:26.153" endtime="20201029 18:21:30.162"></status>
</kw>
<msg timestamp="20201029 18:21:30.163" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 18:21:26.149" endtime="20201029 18:21:30.163"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:21:30.168" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 18:21:30.165" endtime="20201029 18:21:30.169"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:30.171" endtime="20201029 18:21:30.175"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:26.144" endtime="20201029 18:21:30.176"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:26.139" endtime="20201029 18:21:30.177"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:26.136" endtime="20201029 18:21:30.178"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:30.179" endtime="20201029 18:21:30.183"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:26.134" endtime="20201029 18:21:30.183"></status>
</kw>
<kw name="${i} = 11" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:30.202" endtime="20201029 18:21:34.212"></status>
</kw>
<msg timestamp="20201029 18:21:34.213" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 18:21:30.199" endtime="20201029 18:21:34.213"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:21:34.218" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 18:21:34.215" endtime="20201029 18:21:34.219"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:34.220" endtime="20201029 18:21:34.224"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:30.193" endtime="20201029 18:21:34.225"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:30.188" endtime="20201029 18:21:34.226"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:30.186" endtime="20201029 18:21:34.226"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:34.228" endtime="20201029 18:21:34.231"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:30.184" endtime="20201029 18:21:34.232"></status>
</kw>
<kw name="${i} = 12" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:34.252" endtime="20201029 18:21:38.262"></status>
</kw>
<msg timestamp="20201029 18:21:38.263" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 18:21:34.249" endtime="20201029 18:21:38.263"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:21:38.268" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 18:21:38.265" endtime="20201029 18:21:38.269"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:38.270" endtime="20201029 18:21:38.274"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:34.242" endtime="20201029 18:21:38.275"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:34.237" endtime="20201029 18:21:38.276"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:34.234" endtime="20201029 18:21:38.277"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:38.278" endtime="20201029 18:21:38.282"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:34.232" endtime="20201029 18:21:38.282"></status>
</kw>
<kw name="${i} = 13" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:38.301" endtime="20201029 18:21:42.310"></status>
</kw>
<msg timestamp="20201029 18:21:42.311" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 18:21:38.297" endtime="20201029 18:21:42.312"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:21:42.317" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 18:21:42.314" endtime="20201029 18:21:42.318"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:42.319" endtime="20201029 18:21:42.322"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:38.292" endtime="20201029 18:21:42.324"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:38.287" endtime="20201029 18:21:42.325"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:38.284" endtime="20201029 18:21:42.325"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:42.327" endtime="20201029 18:21:42.330"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:38.283" endtime="20201029 18:21:42.331"></status>
</kw>
<kw name="${i} = 14" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:42.349" endtime="20201029 18:21:46.359"></status>
</kw>
<msg timestamp="20201029 18:21:46.360" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 18:21:42.346" endtime="20201029 18:21:46.360"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:21:46.365" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 18:21:46.362" endtime="20201029 18:21:46.366"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:46.367" endtime="20201029 18:21:46.371"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:42.341" endtime="20201029 18:21:46.372"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:42.336" endtime="20201029 18:21:46.373"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:42.333" endtime="20201029 18:21:46.373"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:46.375" endtime="20201029 18:21:46.378"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:42.332" endtime="20201029 18:21:46.379"></status>
</kw>
<kw name="${i} = 15" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:46.398" endtime="20201029 18:21:50.407"></status>
</kw>
<msg timestamp="20201029 18:21:50.408" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 18:21:46.395" endtime="20201029 18:21:50.409"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:21:50.413" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 18:21:50.411" endtime="20201029 18:21:50.414"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:50.416" endtime="20201029 18:21:50.419"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:46.389" endtime="20201029 18:21:50.420"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:46.384" endtime="20201029 18:21:50.421"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:46.381" endtime="20201029 18:21:50.422"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:50.423" endtime="20201029 18:21:50.427"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:46.379" endtime="20201029 18:21:50.427"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:42.637" endtime="20201029 18:21:50.427"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<msg timestamp="20201029 18:21:50.433" level="FAIL">'Timeout' does not contain 'Success'</msg>
<status status="FAIL" starttime="20201029 18:21:50.429" endtime="20201029 18:21:50.433"></status>
</kw>
<status status="FAIL" starttime="20201029 18:20:42.635" endtime="20201029 18:21:50.435"></status>
</kw>
<status status="FAIL" starttime="20201029 18:20:42.631" endtime="20201029 18:21:50.436"></status>
</kw>
<status status="FAIL" starttime="20201029 18:20:42.601" endtime="20201029 18:21:50.436"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="FAIL" starttime="20201029 18:20:42.595" endtime="20201029 18:21:50.438" critical="yes">Setup failed:
'Timeout' does not contain 'Success'</status>
</test>
<test id="s1-s2-t6" name="Measure Overhead Remove First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:21:50.455" endtime="20201029 18:21:50.477"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:50.452" endtime="20201029 18:21:50.478"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:50.502" endtime="20201029 18:21:57.516"></status>
</kw>
<msg timestamp="20201029 18:21:57.517" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 18:21:50.500" endtime="20201029 18:21:57.517"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:21:57.522" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 18:21:57.519" endtime="20201029 18:21:57.522"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:57.524" endtime="20201029 18:21:57.527"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:50.496" endtime="20201029 18:21:57.528"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:50.491" endtime="20201029 18:21:57.529"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:50.489" endtime="20201029 18:21:57.530"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:57.532" endtime="20201029 18:21:57.535"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:50.487" endtime="20201029 18:21:57.535"></status>
</kw>
<kw name="${i} = 1" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:21:57.554" endtime="20201029 18:22:01.563"></status>
</kw>
<msg timestamp="20201029 18:22:01.564" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 18:21:57.551" endtime="20201029 18:22:01.565"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:22:01.570" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 18:22:01.567" endtime="20201029 18:22:01.570"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:22:01.572" endtime="20201029 18:22:01.575"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:57.545" endtime="20201029 18:22:01.577"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:57.540" endtime="20201029 18:22:01.578"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:57.538" endtime="20201029 18:22:01.578"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 18:22:01.580" endtime="20201029 18:22:01.583"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:57.536" endtime="20201029 18:22:01.583"></status>
</kw>
<kw name="${i} = 2" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:22:01.604" endtime="20201029 18:22:05.614"></status>
</kw>
<msg timestamp="20201029 18:22:05.615" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 18:22:01.601" endtime="20201029 18:22:05.616"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:22:05.620" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 18:22:05.617" endtime="20201029 18:22:05.621"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:22:05.623" endtime="20201029 18:22:05.626"></status>
</kw>
<status status="PASS" starttime="20201029 18:22:01.595" endtime="20201029 18:22:05.627"></status>
</kw>
<status status="PASS" starttime="20201029 18:22:01.588" endtime="20201029 18:22:05.628"></status>
</kw>
<status status="PASS" starttime="20201029 18:22:01.586" endtime="20201029 18:22:05.629"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 18:22:05.631" endtime="20201029 18:22:05.634"></status>
</kw>
<status status="PASS" starttime="20201029 18:22:01.584" endtime="20201029 18:22:05.634"></status>
</kw>
<kw name="${i} = 3" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:22:05.654" endtime="20201029 18:22:09.664"></status>
</kw>
<msg timestamp="20201029 18:22:09.665" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 18:22:05.650" endtime="20201029 18:22:09.666"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:22:09.670" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 18:22:09.667" endtime="20201029 18:22:09.671"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:22:09.672" endtime="20201029 18:22:09.676"></status>
</kw>
<status status="PASS" starttime="20201029 18:22:05.644" endtime="20201029 18:22:09.677"></status>
</kw>
<status status="PASS" starttime="20201029 18:22:05.639" endtime="20201029 18:22:09.678"></status>
</kw>
<status status="PASS" starttime="20201029 18:22:05.637" endtime="20201029 18:22:09.678"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 18:22:09.680" endtime="20201029 18:22:09.683"></status>
</kw>
<status status="PASS" starttime="20201029 18:22:05.635" endtime="20201029 18:22:09.684"></status>
</kw>
<kw name="${i} = 4" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:22:09.703" endtime="20201029 18:22:13.712"></status>
</kw>
<msg timestamp="20201029 18:22:13.713" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 18:22:09.699" endtime="20201029 18:22:13.714"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:22:13.718" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 18:22:13.716" endtime="20201029 18:22:13.719"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:22:13.720" endtime="20201029 18:22:13.724"></status>
</kw>
<status status="PASS" starttime="20201029 18:22:09.694" endtime="20201029 18:22:13.725"></status>
</kw>
<status status="PASS" starttime="20201029 18:22:09.689" endtime="20201029 18:22:13.726"></status>
</kw>
<status status="PASS" starttime="20201029 18:22:09.686" endtime="20201029 18:22:13.727"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 18:22:13.728" endtime="20201029 18:22:13.732"></status>
</kw>
<status status="PASS" starttime="20201029 18:22:09.685" endtime="20201029 18:22:13.732"></status>
</kw>
<kw name="${i} = 5" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:22:13.757" endtime="20201029 18:22:17.769"></status>
</kw>
<msg timestamp="20201029 18:22:17.770" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 18:22:13.754" endtime="20201029 18:22:17.770"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:22:17.775" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 18:22:17.772" endtime="20201029 18:22:17.776"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:22:17.777" endtime="20201029 18:22:17.781"></status>
</kw>
<status status="PASS" starttime="20201029 18:22:13.749" endtime="20201029 18:22:17.782"></status>
</kw>
<status status="PASS" starttime="20201029 18:22:13.737" endtime="20201029 18:22:17.783"></status>
</kw>
<status status="PASS" starttime="20201029 18:22:13.734" endtime="20201029 18:22:17.784"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 18:22:17.785" endtime="20201029 18:22:17.789"></status>
</kw>
<status status="PASS" starttime="20201029 18:22:13.733" endtime="20201029 18:22:17.789"></status>
</kw>
<kw name="${i} = 6" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:22:17.808" endtime="20201029 18:22:21.818"></status>
</kw>
<msg timestamp="20201029 18:22:21.819" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 18:22:17.805" endtime="20201029 18:22:21.819"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:22:21.824" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 18:22:21.821" endtime="20201029 18:22:21.824"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:22:21.826" endtime="20201029 18:22:21.829"></status>
</kw>
<status status="PASS" starttime="20201029 18:22:17.799" endtime="20201029 18:22:21.830"></status>
</kw>
<status status="PASS" starttime="20201029 18:22:17.794" endtime="20201029 18:22:21.831"></status>
</kw>
<status status="PASS" starttime="20201029 18:22:17.792" endtime="20201029 18:22:21.832"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 18:22:21.833" endtime="20201029 18:22:21.837"></status>
</kw>
<status status="PASS" starttime="20201029 18:22:17.790" endtime="20201029 18:22:21.837"></status>
</kw>
<kw name="${i} = 7" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:22:21.856" endtime="20201029 18:22:25.865"></status>
</kw>
<msg timestamp="20201029 18:22:25.866" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 18:22:21.852" endtime="20201029 18:22:25.867"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:22:25.872" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 18:22:25.868" endtime="20201029 18:22:25.872"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:22:25.874" endtime="20201029 18:22:25.877"></status>
</kw>
<status status="PASS" starttime="20201029 18:22:21.847" endtime="20201029 18:22:25.878"></status>
</kw>
<status status="PASS" starttime="20201029 18:22:21.842" endtime="20201029 18:22:25.879"></status>
</kw>
<status status="PASS" starttime="20201029 18:22:21.839" endtime="20201029 18:22:25.880"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 18:22:25.882" endtime="20201029 18:22:25.885"></status>
</kw>
<status status="PASS" starttime="20201029 18:22:21.838" endtime="20201029 18:22:25.890"></status>
</kw>
<kw name="${i} = 8" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:22:25.909" endtime="20201029 18:22:29.919"></status>
</kw>
<msg timestamp="20201029 18:22:29.920" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 18:22:25.906" endtime="20201029 18:22:29.920"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:22:29.925" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 18:22:29.922" endtime="20201029 18:22:29.925"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:22:29.927" endtime="20201029 18:22:29.930"></status>
</kw>
<status status="PASS" starttime="20201029 18:22:25.900" endtime="20201029 18:22:29.932"></status>
</kw>
<status status="PASS" starttime="20201029 18:22:25.895" endtime="20201029 18:22:29.932"></status>
</kw>
<status status="PASS" starttime="20201029 18:22:25.893" endtime="20201029 18:22:29.933"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 18:22:29.935" endtime="20201029 18:22:29.938"></status>
</kw>
<status status="PASS" starttime="20201029 18:22:25.891" endtime="20201029 18:22:29.938"></status>
</kw>
<kw name="${i} = 9" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:22:29.959" endtime="20201029 18:22:33.969"></status>
</kw>
<msg timestamp="20201029 18:22:33.970" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 18:22:29.956" endtime="20201029 18:22:33.970"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:22:33.975" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 18:22:33.972" endtime="20201029 18:22:33.976"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:22:33.977" endtime="20201029 18:22:33.980"></status>
</kw>
<status status="PASS" starttime="20201029 18:22:29.948" endtime="20201029 18:22:33.982"></status>
</kw>
<status status="PASS" starttime="20201029 18:22:29.943" endtime="20201029 18:22:33.983"></status>
</kw>
<status status="PASS" starttime="20201029 18:22:29.941" endtime="20201029 18:22:33.983"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 18:22:33.985" endtime="20201029 18:22:33.988"></status>
</kw>
<status status="PASS" starttime="20201029 18:22:29.939" endtime="20201029 18:22:33.989"></status>
</kw>
<kw name="${i} = 10" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:22:34.008" endtime="20201029 18:22:38.017"></status>
</kw>
<msg timestamp="20201029 18:22:38.018" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 18:22:34.004" endtime="20201029 18:22:38.018"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:22:38.023" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 18:22:38.020" endtime="20201029 18:22:38.024"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:22:38.025" endtime="20201029 18:22:38.029"></status>
</kw>
<status status="PASS" starttime="20201029 18:22:33.999" endtime="20201029 18:22:38.034"></status>
</kw>
<status status="PASS" starttime="20201029 18:22:33.994" endtime="20201029 18:22:38.035"></status>
</kw>
<status status="PASS" starttime="20201029 18:22:33.991" endtime="20201029 18:22:38.036"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 18:22:38.038" endtime="20201029 18:22:38.041"></status>
</kw>
<status status="PASS" starttime="20201029 18:22:33.989" endtime="20201029 18:22:38.041"></status>
</kw>
<kw name="${i} = 11" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:22:38.060" endtime="20201029 18:22:42.070"></status>
</kw>
<msg timestamp="20201029 18:22:42.071" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 18:22:38.057" endtime="20201029 18:22:42.071"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:22:42.076" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 18:22:42.073" endtime="20201029 18:22:42.077"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:22:42.078" endtime="20201029 18:22:42.081"></status>
</kw>
<status status="PASS" starttime="20201029 18:22:38.052" endtime="20201029 18:22:42.082"></status>
</kw>
<status status="PASS" starttime="20201029 18:22:38.047" endtime="20201029 18:22:42.083"></status>
</kw>
<status status="PASS" starttime="20201029 18:22:38.044" endtime="20201029 18:22:42.084"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 18:22:42.086" endtime="20201029 18:22:42.089"></status>
</kw>
<status status="PASS" starttime="20201029 18:22:38.042" endtime="20201029 18:22:42.089"></status>
</kw>
<kw name="${i} = 12" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:22:42.108" endtime="20201029 18:22:46.118"></status>
</kw>
<msg timestamp="20201029 18:22:46.119" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 18:22:42.105" endtime="20201029 18:22:46.119"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:22:46.124" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 18:22:46.121" endtime="20201029 18:22:46.125"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:22:46.126" endtime="20201029 18:22:46.129"></status>
</kw>
<status status="PASS" starttime="20201029 18:22:42.099" endtime="20201029 18:22:46.131"></status>
</kw>
<status status="PASS" starttime="20201029 18:22:42.094" endtime="20201029 18:22:46.132"></status>
</kw>
<status status="PASS" starttime="20201029 18:22:42.092" endtime="20201029 18:22:46.132"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 18:22:46.134" endtime="20201029 18:22:46.137"></status>
</kw>
<status status="PASS" starttime="20201029 18:22:42.090" endtime="20201029 18:22:46.137"></status>
</kw>
<kw name="${i} = 13" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:22:46.162" endtime="20201029 18:22:50.171"></status>
</kw>
<msg timestamp="20201029 18:22:50.172" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 18:22:46.159" endtime="20201029 18:22:50.172"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:22:50.184" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 18:22:50.174" endtime="20201029 18:22:50.185"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:22:50.187" endtime="20201029 18:22:50.190"></status>
</kw>
<status status="PASS" starttime="20201029 18:22:46.153" endtime="20201029 18:22:50.191"></status>
</kw>
<status status="PASS" starttime="20201029 18:22:46.143" endtime="20201029 18:22:50.192"></status>
</kw>
<status status="PASS" starttime="20201029 18:22:46.140" endtime="20201029 18:22:50.193"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 18:22:50.195" endtime="20201029 18:22:50.198"></status>
</kw>
<status status="PASS" starttime="20201029 18:22:46.138" endtime="20201029 18:22:50.198"></status>
</kw>
<kw name="${i} = 14" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:22:50.217" endtime="20201029 18:22:54.226"></status>
</kw>
<msg timestamp="20201029 18:22:54.227" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 18:22:50.214" endtime="20201029 18:22:54.228"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:22:54.232" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 18:22:54.230" endtime="20201029 18:22:54.233"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:22:54.235" endtime="20201029 18:22:54.238"></status>
</kw>
<status status="PASS" starttime="20201029 18:22:50.208" endtime="20201029 18:22:54.239"></status>
</kw>
<status status="PASS" starttime="20201029 18:22:50.203" endtime="20201029 18:22:54.240"></status>
</kw>
<status status="PASS" starttime="20201029 18:22:50.201" endtime="20201029 18:22:54.241"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 18:22:54.242" endtime="20201029 18:22:54.246"></status>
</kw>
<status status="PASS" starttime="20201029 18:22:50.199" endtime="20201029 18:22:54.246"></status>
</kw>
<kw name="${i} = 15" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:22:54.265" endtime="20201029 18:22:58.274"></status>
</kw>
<msg timestamp="20201029 18:22:58.275" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 18:22:54.262" endtime="20201029 18:22:58.275"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:22:58.280" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 18:22:58.277" endtime="20201029 18:22:58.281"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:22:58.282" endtime="20201029 18:22:58.286"></status>
</kw>
<status status="PASS" starttime="20201029 18:22:54.256" endtime="20201029 18:22:58.287"></status>
</kw>
<status status="PASS" starttime="20201029 18:22:54.251" endtime="20201029 18:22:58.288"></status>
</kw>
<status status="PASS" starttime="20201029 18:22:54.248" endtime="20201029 18:22:58.288"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 18:22:58.290" endtime="20201029 18:22:58.293"></status>
</kw>
<status status="PASS" starttime="20201029 18:22:54.247" endtime="20201029 18:22:58.294"></status>
</kw>
<status status="PASS" starttime="20201029 18:21:50.486" endtime="20201029 18:22:58.294"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<msg timestamp="20201029 18:22:58.299" level="FAIL">'Timeout' does not contain 'Success'</msg>
<status status="FAIL" starttime="20201029 18:22:58.296" endtime="20201029 18:22:58.300"></status>
</kw>
<status status="FAIL" starttime="20201029 18:21:50.483" endtime="20201029 18:22:58.301"></status>
</kw>
<status status="FAIL" starttime="20201029 18:21:50.479" endtime="20201029 18:22:58.303"></status>
</kw>
<status status="FAIL" starttime="20201029 18:21:50.449" endtime="20201029 18:22:58.303"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="FAIL" starttime="20201029 18:21:50.442" endtime="20201029 18:22:58.304" critical="yes">Setup failed:
'Timeout' does not contain 'Success'</status>
</test>
<test id="s1-s2-t7" name="Measure Overhead Remove Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:22:58.319" endtime="20201029 18:22:58.341"></status>
</kw>
<status status="PASS" starttime="20201029 18:22:58.316" endtime="20201029 18:22:58.342"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:22:58.357" endtime="20201029 18:23:05.370"></status>
</kw>
<msg timestamp="20201029 18:23:05.371" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 18:22:58.355" endtime="20201029 18:23:05.371"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:23:05.376" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 18:23:05.373" endtime="20201029 18:23:05.377"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:23:05.379" endtime="20201029 18:23:05.383"></status>
</kw>
<status status="PASS" starttime="20201029 18:22:58.353" endtime="20201029 18:23:05.384"></status>
</kw>
<status status="PASS" starttime="20201029 18:22:58.350" endtime="20201029 18:23:05.386"></status>
</kw>
<status status="PASS" starttime="20201029 18:22:58.349" endtime="20201029 18:23:05.386"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 18:23:05.388" endtime="20201029 18:23:05.393"></status>
</kw>
<status status="PASS" starttime="20201029 18:22:58.348" endtime="20201029 18:23:05.393"></status>
</kw>
<kw name="${i} = 1" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:23:05.416" endtime="20201029 18:23:09.425"></status>
</kw>
<msg timestamp="20201029 18:23:09.426" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 18:23:05.412" endtime="20201029 18:23:09.427"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:23:09.433" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 18:23:09.429" endtime="20201029 18:23:09.434"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:23:09.435" endtime="20201029 18:23:09.440"></status>
</kw>
<status status="PASS" starttime="20201029 18:23:05.405" endtime="20201029 18:23:09.441"></status>
</kw>
<status status="PASS" starttime="20201029 18:23:05.399" endtime="20201029 18:23:09.443"></status>
</kw>
<status status="PASS" starttime="20201029 18:23:05.396" endtime="20201029 18:23:09.443"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 18:23:09.445" endtime="20201029 18:23:09.449"></status>
</kw>
<status status="PASS" starttime="20201029 18:23:05.394" endtime="20201029 18:23:09.450"></status>
</kw>
<kw name="${i} = 2" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:23:09.469" endtime="20201029 18:23:13.479"></status>
</kw>
<msg timestamp="20201029 18:23:13.480" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 18:23:09.466" endtime="20201029 18:23:13.481"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:23:13.485" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 18:23:13.482" endtime="20201029 18:23:13.486"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:23:13.487" endtime="20201029 18:23:13.491"></status>
</kw>
<status status="PASS" starttime="20201029 18:23:09.460" endtime="20201029 18:23:13.492"></status>
</kw>
<status status="PASS" starttime="20201029 18:23:09.456" endtime="20201029 18:23:13.493"></status>
</kw>
<status status="PASS" starttime="20201029 18:23:09.453" endtime="20201029 18:23:13.493"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 18:23:13.495" endtime="20201029 18:23:13.498"></status>
</kw>
<status status="PASS" starttime="20201029 18:23:09.451" endtime="20201029 18:23:13.498"></status>
</kw>
<kw name="${i} = 3" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:23:13.519" endtime="20201029 18:23:17.528"></status>
</kw>
<msg timestamp="20201029 18:23:17.529" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 18:23:13.516" endtime="20201029 18:23:17.530"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:23:17.534" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 18:23:17.531" endtime="20201029 18:23:17.535"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:23:17.536" endtime="20201029 18:23:17.540"></status>
</kw>
<status status="PASS" starttime="20201029 18:23:13.510" endtime="20201029 18:23:17.541"></status>
</kw>
<status status="PASS" starttime="20201029 18:23:13.504" endtime="20201029 18:23:17.542"></status>
</kw>
<status status="PASS" starttime="20201029 18:23:13.501" endtime="20201029 18:23:17.542"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 18:23:17.544" endtime="20201029 18:23:17.547"></status>
</kw>
<status status="PASS" starttime="20201029 18:23:13.499" endtime="20201029 18:23:17.548"></status>
</kw>
<kw name="${i} = 4" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:23:17.567" endtime="20201029 18:23:21.577"></status>
</kw>
<msg timestamp="20201029 18:23:21.578" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 18:23:17.564" endtime="20201029 18:23:21.578"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:23:21.583" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 18:23:21.580" endtime="20201029 18:23:21.583"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:23:21.585" endtime="20201029 18:23:21.588"></status>
</kw>
<status status="PASS" starttime="20201029 18:23:17.558" endtime="20201029 18:23:21.589"></status>
</kw>
<status status="PASS" starttime="20201029 18:23:17.553" endtime="20201029 18:23:21.590"></status>
</kw>
<status status="PASS" starttime="20201029 18:23:17.550" endtime="20201029 18:23:21.591"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 18:23:21.593" endtime="20201029 18:23:21.596"></status>
</kw>
<status status="PASS" starttime="20201029 18:23:17.549" endtime="20201029 18:23:21.596"></status>
</kw>
<kw name="${i} = 5" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:23:21.617" endtime="20201029 18:23:25.627"></status>
</kw>
<msg timestamp="20201029 18:23:25.628" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 18:23:21.614" endtime="20201029 18:23:25.628"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:23:25.633" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 18:23:25.630" endtime="20201029 18:23:25.633"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:23:25.635" endtime="20201029 18:23:25.638"></status>
</kw>
<status status="PASS" starttime="20201029 18:23:21.606" endtime="20201029 18:23:25.639"></status>
</kw>
<status status="PASS" starttime="20201029 18:23:21.601" endtime="20201029 18:23:25.640"></status>
</kw>
<status status="PASS" starttime="20201029 18:23:21.599" endtime="20201029 18:23:25.641"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 18:23:25.643" endtime="20201029 18:23:25.646"></status>
</kw>
<status status="PASS" starttime="20201029 18:23:21.597" endtime="20201029 18:23:25.646"></status>
</kw>
<kw name="${i} = 6" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:23:25.665" endtime="20201029 18:23:29.674"></status>
</kw>
<msg timestamp="20201029 18:23:29.675" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 18:23:25.661" endtime="20201029 18:23:29.675"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:23:29.680" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 18:23:29.677" endtime="20201029 18:23:29.680"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:23:29.682" endtime="20201029 18:23:29.687"></status>
</kw>
<status status="PASS" starttime="20201029 18:23:25.656" endtime="20201029 18:23:29.688"></status>
</kw>
<status status="PASS" starttime="20201029 18:23:25.651" endtime="20201029 18:23:29.689"></status>
</kw>
<status status="PASS" starttime="20201029 18:23:25.648" endtime="20201029 18:23:29.690"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 18:23:29.692" endtime="20201029 18:23:29.695"></status>
</kw>
<status status="PASS" starttime="20201029 18:23:25.647" endtime="20201029 18:23:29.695"></status>
</kw>
<kw name="${i} = 7" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:23:29.714" endtime="20201029 18:23:33.723"></status>
</kw>
<msg timestamp="20201029 18:23:33.724" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 18:23:29.710" endtime="20201029 18:23:33.724"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:23:33.729" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 18:23:33.726" endtime="20201029 18:23:33.729"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:23:33.731" endtime="20201029 18:23:33.734"></status>
</kw>
<status status="PASS" starttime="20201029 18:23:29.705" endtime="20201029 18:23:33.735"></status>
</kw>
<status status="PASS" starttime="20201029 18:23:29.700" endtime="20201029 18:23:33.736"></status>
</kw>
<status status="PASS" starttime="20201029 18:23:29.698" endtime="20201029 18:23:33.737"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 18:23:33.739" endtime="20201029 18:23:33.742"></status>
</kw>
<status status="PASS" starttime="20201029 18:23:29.696" endtime="20201029 18:23:33.742"></status>
</kw>
<kw name="${i} = 8" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:23:33.761" endtime="20201029 18:23:37.771"></status>
</kw>
<msg timestamp="20201029 18:23:37.772" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 18:23:33.758" endtime="20201029 18:23:37.772"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:23:37.777" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 18:23:37.774" endtime="20201029 18:23:37.777"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:23:37.779" endtime="20201029 18:23:37.782"></status>
</kw>
<status status="PASS" starttime="20201029 18:23:33.753" endtime="20201029 18:23:37.783"></status>
</kw>
<status status="PASS" starttime="20201029 18:23:33.748" endtime="20201029 18:23:37.784"></status>
</kw>
<status status="PASS" starttime="20201029 18:23:33.745" endtime="20201029 18:23:37.785"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 18:23:37.787" endtime="20201029 18:23:37.790"></status>
</kw>
<status status="PASS" starttime="20201029 18:23:33.743" endtime="20201029 18:23:37.790"></status>
</kw>
<kw name="${i} = 9" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:23:37.808" endtime="20201029 18:23:41.818"></status>
</kw>
<msg timestamp="20201029 18:23:41.819" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 18:23:37.805" endtime="20201029 18:23:41.819"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:23:41.824" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 18:23:41.821" endtime="20201029 18:23:41.824"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:23:41.826" endtime="20201029 18:23:41.829"></status>
</kw>
<status status="PASS" starttime="20201029 18:23:37.800" endtime="20201029 18:23:41.830"></status>
</kw>
<status status="PASS" starttime="20201029 18:23:37.795" endtime="20201029 18:23:41.831"></status>
</kw>
<status status="PASS" starttime="20201029 18:23:37.793" endtime="20201029 18:23:41.832"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 18:23:41.833" endtime="20201029 18:23:41.837"></status>
</kw>
<status status="PASS" starttime="20201029 18:23:37.791" endtime="20201029 18:23:41.837"></status>
</kw>
<kw name="${i} = 10" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:23:41.858" endtime="20201029 18:23:45.867"></status>
</kw>
<msg timestamp="20201029 18:23:45.868" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 18:23:41.854" endtime="20201029 18:23:45.868"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:23:45.873" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 18:23:45.870" endtime="20201029 18:23:45.874"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:23:45.875" endtime="20201029 18:23:45.878"></status>
</kw>
<status status="PASS" starttime="20201029 18:23:41.847" endtime="20201029 18:23:45.879"></status>
</kw>
<status status="PASS" starttime="20201029 18:23:41.842" endtime="20201029 18:23:45.880"></status>
</kw>
<status status="PASS" starttime="20201029 18:23:41.839" endtime="20201029 18:23:45.882"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 18:23:45.883" endtime="20201029 18:23:45.887"></status>
</kw>
<status status="PASS" starttime="20201029 18:23:41.838" endtime="20201029 18:23:45.887"></status>
</kw>
<kw name="${i} = 11" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:23:45.905" endtime="20201029 18:23:49.915"></status>
</kw>
<msg timestamp="20201029 18:23:49.916" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 18:23:45.902" endtime="20201029 18:23:49.916"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:23:49.921" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 18:23:49.918" endtime="20201029 18:23:49.921"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:23:49.923" endtime="20201029 18:23:49.926"></status>
</kw>
<status status="PASS" starttime="20201029 18:23:45.897" endtime="20201029 18:23:49.927"></status>
</kw>
<status status="PASS" starttime="20201029 18:23:45.892" endtime="20201029 18:23:49.928"></status>
</kw>
<status status="PASS" starttime="20201029 18:23:45.889" endtime="20201029 18:23:49.929"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 18:23:49.930" endtime="20201029 18:23:49.934"></status>
</kw>
<status status="PASS" starttime="20201029 18:23:45.888" endtime="20201029 18:23:49.934"></status>
</kw>
<kw name="${i} = 12" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:23:49.952" endtime="20201029 18:23:53.962"></status>
</kw>
<msg timestamp="20201029 18:23:53.963" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 18:23:49.949" endtime="20201029 18:23:53.963"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:23:53.968" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 18:23:53.965" endtime="20201029 18:23:53.968"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:23:53.970" endtime="20201029 18:23:53.973"></status>
</kw>
<status status="PASS" starttime="20201029 18:23:49.944" endtime="20201029 18:23:53.974"></status>
</kw>
<status status="PASS" starttime="20201029 18:23:49.939" endtime="20201029 18:23:53.975"></status>
</kw>
<status status="PASS" starttime="20201029 18:23:49.936" endtime="20201029 18:23:53.976"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 18:23:53.977" endtime="20201029 18:23:53.980"></status>
</kw>
<status status="PASS" starttime="20201029 18:23:49.935" endtime="20201029 18:23:53.981"></status>
</kw>
<kw name="${i} = 13" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:23:53.999" endtime="20201029 18:23:58.009"></status>
</kw>
<msg timestamp="20201029 18:23:58.010" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 18:23:53.996" endtime="20201029 18:23:58.010"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:23:58.015" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 18:23:58.012" endtime="20201029 18:23:58.016"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:23:58.018" endtime="20201029 18:23:58.021"></status>
</kw>
<status status="PASS" starttime="20201029 18:23:53.991" endtime="20201029 18:23:58.022"></status>
</kw>
<status status="PASS" starttime="20201029 18:23:53.986" endtime="20201029 18:23:58.023"></status>
</kw>
<status status="PASS" starttime="20201029 18:23:53.983" endtime="20201029 18:23:58.024"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 18:23:58.025" endtime="20201029 18:23:58.029"></status>
</kw>
<status status="PASS" starttime="20201029 18:23:53.982" endtime="20201029 18:23:58.029"></status>
</kw>
<kw name="${i} = 14" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:23:58.050" endtime="20201029 18:24:02.059"></status>
</kw>
<msg timestamp="20201029 18:24:02.060" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 18:23:58.046" endtime="20201029 18:24:02.060"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:24:02.065" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 18:24:02.062" endtime="20201029 18:24:02.065"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:24:02.067" endtime="20201029 18:24:02.070"></status>
</kw>
<status status="PASS" starttime="20201029 18:23:58.041" endtime="20201029 18:24:02.071"></status>
</kw>
<status status="PASS" starttime="20201029 18:23:58.034" endtime="20201029 18:24:02.072"></status>
</kw>
<status status="PASS" starttime="20201029 18:23:58.031" endtime="20201029 18:24:02.073"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 18:24:02.075" endtime="20201029 18:24:02.078"></status>
</kw>
<status status="PASS" starttime="20201029 18:23:58.030" endtime="20201029 18:24:02.078"></status>
</kw>
<kw name="${i} = 15" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:24:02.097" endtime="20201029 18:24:06.106"></status>
</kw>
<msg timestamp="20201029 18:24:06.107" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 18:24:02.093" endtime="20201029 18:24:06.107"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:24:06.112" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 18:24:06.109" endtime="20201029 18:24:06.113"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:24:06.114" endtime="20201029 18:24:06.117"></status>
</kw>
<status status="PASS" starttime="20201029 18:24:02.088" endtime="20201029 18:24:06.118"></status>
</kw>
<status status="PASS" starttime="20201029 18:24:02.083" endtime="20201029 18:24:06.119"></status>
</kw>
<status status="PASS" starttime="20201029 18:24:02.081" endtime="20201029 18:24:06.120"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 18:24:06.122" endtime="20201029 18:24:06.125"></status>
</kw>
<status status="PASS" starttime="20201029 18:24:02.079" endtime="20201029 18:24:06.125"></status>
</kw>
<status status="PASS" starttime="20201029 18:22:58.348" endtime="20201029 18:24:06.126"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<msg timestamp="20201029 18:24:06.131" level="FAIL">'Timeout' does not contain 'Success'</msg>
<status status="FAIL" starttime="20201029 18:24:06.127" endtime="20201029 18:24:06.131"></status>
</kw>
<status status="FAIL" starttime="20201029 18:22:58.345" endtime="20201029 18:24:06.133"></status>
</kw>
<status status="FAIL" starttime="20201029 18:22:58.344" endtime="20201029 18:24:06.134"></status>
</kw>
<status status="FAIL" starttime="20201029 18:22:58.314" endtime="20201029 18:24:06.134"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="FAIL" starttime="20201029 18:22:58.308" endtime="20201029 18:24:06.136" critical="yes">Setup failed:
'Timeout' does not contain 'Success'</status>
</test>
<test id="s1-s2-t8" name="Measure Overhead Remove Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:24:06.150" endtime="20201029 18:24:06.172"></status>
</kw>
<status status="PASS" starttime="20201029 18:24:06.147" endtime="20201029 18:24:06.173"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:24:06.202" endtime="20201029 18:24:13.216"></status>
</kw>
<msg timestamp="20201029 18:24:13.217" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 18:24:06.198" endtime="20201029 18:24:13.217"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:24:13.222" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 18:24:13.219" endtime="20201029 18:24:13.222"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:24:13.224" endtime="20201029 18:24:13.227"></status>
</kw>
<status status="PASS" starttime="20201029 18:24:06.191" endtime="20201029 18:24:13.228"></status>
</kw>
<status status="PASS" starttime="20201029 18:24:06.186" endtime="20201029 18:24:13.229"></status>
</kw>
<status status="PASS" starttime="20201029 18:24:06.183" endtime="20201029 18:24:13.230"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 18:24:13.232" endtime="20201029 18:24:13.235"></status>
</kw>
<status status="PASS" starttime="20201029 18:24:06.182" endtime="20201029 18:24:13.235"></status>
</kw>
<kw name="${i} = 1" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:24:13.254" endtime="20201029 18:24:17.264"></status>
</kw>
<msg timestamp="20201029 18:24:17.265" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 18:24:13.251" endtime="20201029 18:24:17.265"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:24:17.270" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 18:24:17.267" endtime="20201029 18:24:17.270"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:24:17.272" endtime="20201029 18:24:17.275"></status>
</kw>
<status status="PASS" starttime="20201029 18:24:13.245" endtime="20201029 18:24:17.276"></status>
</kw>
<status status="PASS" starttime="20201029 18:24:13.240" endtime="20201029 18:24:17.277"></status>
</kw>
<status status="PASS" starttime="20201029 18:24:13.238" endtime="20201029 18:24:17.278"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 18:24:17.280" endtime="20201029 18:24:17.283"></status>
</kw>
<status status="PASS" starttime="20201029 18:24:13.236" endtime="20201029 18:24:17.283"></status>
</kw>
<kw name="${i} = 2" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:24:17.301" endtime="20201029 18:24:21.311"></status>
</kw>
<msg timestamp="20201029 18:24:21.312" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 18:24:17.298" endtime="20201029 18:24:21.312"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:24:21.318" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 18:24:21.315" endtime="20201029 18:24:21.319"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:24:21.321" endtime="20201029 18:24:21.324"></status>
</kw>
<status status="PASS" starttime="20201029 18:24:17.293" endtime="20201029 18:24:21.325"></status>
</kw>
<status status="PASS" starttime="20201029 18:24:17.288" endtime="20201029 18:24:21.326"></status>
</kw>
<status status="PASS" starttime="20201029 18:24:17.286" endtime="20201029 18:24:21.327"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 18:24:21.329" endtime="20201029 18:24:21.332"></status>
</kw>
<status status="PASS" starttime="20201029 18:24:17.284" endtime="20201029 18:24:21.333"></status>
</kw>
<kw name="${i} = 3" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:24:21.351" endtime="20201029 18:24:25.363"></status>
</kw>
<msg timestamp="20201029 18:24:25.364" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 18:24:21.348" endtime="20201029 18:24:25.364"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:24:25.368" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 18:24:25.366" endtime="20201029 18:24:25.369"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:24:25.371" endtime="20201029 18:24:25.374"></status>
</kw>
<status status="PASS" starttime="20201029 18:24:21.343" endtime="20201029 18:24:25.375"></status>
</kw>
<status status="PASS" starttime="20201029 18:24:21.338" endtime="20201029 18:24:25.376"></status>
</kw>
<status status="PASS" starttime="20201029 18:24:21.336" endtime="20201029 18:24:25.376"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 18:24:25.378" endtime="20201029 18:24:25.381"></status>
</kw>
<status status="PASS" starttime="20201029 18:24:21.334" endtime="20201029 18:24:25.382"></status>
</kw>
<kw name="${i} = 4" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:24:25.400" endtime="20201029 18:24:29.410"></status>
</kw>
<msg timestamp="20201029 18:24:29.411" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 18:24:25.397" endtime="20201029 18:24:29.412"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:24:29.417" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 18:24:29.414" endtime="20201029 18:24:29.418"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:24:29.419" endtime="20201029 18:24:29.423"></status>
</kw>
<status status="PASS" starttime="20201029 18:24:25.392" endtime="20201029 18:24:29.425"></status>
</kw>
<status status="PASS" starttime="20201029 18:24:25.387" endtime="20201029 18:24:29.426"></status>
</kw>
<status status="PASS" starttime="20201029 18:24:25.384" endtime="20201029 18:24:29.427"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 18:24:29.429" endtime="20201029 18:24:29.433"></status>
</kw>
<status status="PASS" starttime="20201029 18:24:25.383" endtime="20201029 18:24:29.433"></status>
</kw>
<kw name="${i} = 5" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:24:29.459" endtime="20201029 18:24:33.468"></status>
</kw>
<msg timestamp="20201029 18:24:33.469" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 18:24:29.450" endtime="20201029 18:24:33.470"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:24:33.474" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 18:24:33.472" endtime="20201029 18:24:33.476"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:24:33.479" endtime="20201029 18:24:33.485"></status>
</kw>
<status status="PASS" starttime="20201029 18:24:29.444" endtime="20201029 18:24:33.488"></status>
</kw>
<status status="PASS" starttime="20201029 18:24:29.439" endtime="20201029 18:24:33.489"></status>
</kw>
<status status="PASS" starttime="20201029 18:24:29.436" endtime="20201029 18:24:33.490"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 18:24:33.493" endtime="20201029 18:24:33.499"></status>
</kw>
<status status="PASS" starttime="20201029 18:24:29.434" endtime="20201029 18:24:33.499"></status>
</kw>
<kw name="${i} = 6" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:24:33.530" endtime="20201029 18:24:37.542"></status>
</kw>
<msg timestamp="20201029 18:24:37.542" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 18:24:33.525" endtime="20201029 18:24:37.543"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:24:37.547" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 18:24:37.545" endtime="20201029 18:24:37.548"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:24:37.549" endtime="20201029 18:24:37.553"></status>
</kw>
<status status="PASS" starttime="20201029 18:24:33.517" endtime="20201029 18:24:37.554"></status>
</kw>
<status status="PASS" starttime="20201029 18:24:33.508" endtime="20201029 18:24:37.555"></status>
</kw>
<status status="PASS" starttime="20201029 18:24:33.504" endtime="20201029 18:24:37.555"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 18:24:37.557" endtime="20201029 18:24:37.560"></status>
</kw>
<status status="PASS" starttime="20201029 18:24:33.501" endtime="20201029 18:24:37.561"></status>
</kw>
<kw name="${i} = 7" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:24:37.581" endtime="20201029 18:24:41.589"></status>
</kw>
<msg timestamp="20201029 18:24:41.589" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 18:24:37.578" endtime="20201029 18:24:41.590"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:24:41.594" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 18:24:41.592" endtime="20201029 18:24:41.595"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:24:41.597" endtime="20201029 18:24:41.600"></status>
</kw>
<status status="PASS" starttime="20201029 18:24:37.570" endtime="20201029 18:24:41.601"></status>
</kw>
<status status="PASS" starttime="20201029 18:24:37.566" endtime="20201029 18:24:41.602"></status>
</kw>
<status status="PASS" starttime="20201029 18:24:37.563" endtime="20201029 18:24:41.603"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 18:24:41.605" endtime="20201029 18:24:41.608"></status>
</kw>
<status status="PASS" starttime="20201029 18:24:37.561" endtime="20201029 18:24:41.609"></status>
</kw>
<kw name="${i} = 8" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:24:41.628" endtime="20201029 18:24:45.638"></status>
</kw>
<msg timestamp="20201029 18:24:45.638" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 18:24:41.625" endtime="20201029 18:24:45.639"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:24:45.643" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 18:24:45.641" endtime="20201029 18:24:45.644"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:24:45.646" endtime="20201029 18:24:45.649"></status>
</kw>
<status status="PASS" starttime="20201029 18:24:41.619" endtime="20201029 18:24:45.650"></status>
</kw>
<status status="PASS" starttime="20201029 18:24:41.615" endtime="20201029 18:24:45.651"></status>
</kw>
<status status="PASS" starttime="20201029 18:24:41.611" endtime="20201029 18:24:45.651"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 18:24:45.653" endtime="20201029 18:24:45.656"></status>
</kw>
<status status="PASS" starttime="20201029 18:24:41.610" endtime="20201029 18:24:45.657"></status>
</kw>
<kw name="${i} = 9" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:24:45.675" endtime="20201029 18:24:49.685"></status>
</kw>
<msg timestamp="20201029 18:24:49.685" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 18:24:45.672" endtime="20201029 18:24:49.686"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:24:49.690" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 18:24:49.688" endtime="20201029 18:24:49.691"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:24:49.693" endtime="20201029 18:24:49.696"></status>
</kw>
<status status="PASS" starttime="20201029 18:24:45.666" endtime="20201029 18:24:49.697"></status>
</kw>
<status status="PASS" starttime="20201029 18:24:45.662" endtime="20201029 18:24:49.698"></status>
</kw>
<status status="PASS" starttime="20201029 18:24:45.659" endtime="20201029 18:24:49.699"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 18:24:49.700" endtime="20201029 18:24:49.703"></status>
</kw>
<status status="PASS" starttime="20201029 18:24:45.657" endtime="20201029 18:24:49.704"></status>
</kw>
<kw name="${i} = 10" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:24:49.722" endtime="20201029 18:24:53.732"></status>
</kw>
<msg timestamp="20201029 18:24:53.733" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 18:24:49.719" endtime="20201029 18:24:53.733"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:24:53.737" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 18:24:53.735" endtime="20201029 18:24:53.738"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:24:53.740" endtime="20201029 18:24:53.743"></status>
</kw>
<status status="PASS" starttime="20201029 18:24:49.714" endtime="20201029 18:24:53.744"></status>
</kw>
<status status="PASS" starttime="20201029 18:24:49.709" endtime="20201029 18:24:53.745"></status>
</kw>
<status status="PASS" starttime="20201029 18:24:49.706" endtime="20201029 18:24:53.745"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 18:24:53.747" endtime="20201029 18:24:53.751"></status>
</kw>
<status status="PASS" starttime="20201029 18:24:49.705" endtime="20201029 18:24:53.752"></status>
</kw>
<kw name="${i} = 11" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:24:53.772" endtime="20201029 18:24:57.782"></status>
</kw>
<msg timestamp="20201029 18:24:57.783" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 18:24:53.769" endtime="20201029 18:24:57.783"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:24:57.787" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 18:24:57.785" endtime="20201029 18:24:57.788"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:24:57.790" endtime="20201029 18:24:57.793"></status>
</kw>
<status status="PASS" starttime="20201029 18:24:53.764" endtime="20201029 18:24:57.794"></status>
</kw>
<status status="PASS" starttime="20201029 18:24:53.756" endtime="20201029 18:24:57.795"></status>
</kw>
<status status="PASS" starttime="20201029 18:24:53.754" endtime="20201029 18:24:57.796"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 18:24:57.797" endtime="20201029 18:24:57.800"></status>
</kw>
<status status="PASS" starttime="20201029 18:24:53.752" endtime="20201029 18:24:57.801"></status>
</kw>
<kw name="${i} = 12" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:24:57.819" endtime="20201029 18:25:01.828"></status>
</kw>
<msg timestamp="20201029 18:25:01.829" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 18:24:57.816" endtime="20201029 18:25:01.829"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:25:01.831" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 18:25:01.830" endtime="20201029 18:25:01.831"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:25:01.832" endtime="20201029 18:25:01.834"></status>
</kw>
<status status="PASS" starttime="20201029 18:24:57.811" endtime="20201029 18:25:01.834"></status>
</kw>
<status status="PASS" starttime="20201029 18:24:57.806" endtime="20201029 18:25:01.835"></status>
</kw>
<status status="PASS" starttime="20201029 18:24:57.803" endtime="20201029 18:25:01.835"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 18:25:01.836" endtime="20201029 18:25:01.837"></status>
</kw>
<status status="PASS" starttime="20201029 18:24:57.802" endtime="20201029 18:25:01.837"></status>
</kw>
<kw name="${i} = 13" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:25:01.846" endtime="20201029 18:25:05.854"></status>
</kw>
<msg timestamp="20201029 18:25:05.855" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 18:25:01.845" endtime="20201029 18:25:05.855"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:25:05.860" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 18:25:05.857" endtime="20201029 18:25:05.861"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:25:05.863" endtime="20201029 18:25:05.867"></status>
</kw>
<status status="PASS" starttime="20201029 18:25:01.842" endtime="20201029 18:25:05.868"></status>
</kw>
<status status="PASS" starttime="20201029 18:25:01.840" endtime="20201029 18:25:05.869"></status>
</kw>
<status status="PASS" starttime="20201029 18:25:01.839" endtime="20201029 18:25:05.870"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 18:25:05.871" endtime="20201029 18:25:05.875"></status>
</kw>
<status status="PASS" starttime="20201029 18:25:01.838" endtime="20201029 18:25:05.875"></status>
</kw>
<kw name="${i} = 14" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:25:05.895" endtime="20201029 18:25:09.906"></status>
</kw>
<msg timestamp="20201029 18:25:09.907" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 18:25:05.891" endtime="20201029 18:25:09.907"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:25:09.912" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 18:25:09.909" endtime="20201029 18:25:09.912"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:25:09.914" endtime="20201029 18:25:09.917"></status>
</kw>
<status status="PASS" starttime="20201029 18:25:05.886" endtime="20201029 18:25:09.918"></status>
</kw>
<status status="PASS" starttime="20201029 18:25:05.880" endtime="20201029 18:25:09.919"></status>
</kw>
<status status="PASS" starttime="20201029 18:25:05.878" endtime="20201029 18:25:09.920"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 18:25:09.922" endtime="20201029 18:25:09.925"></status>
</kw>
<status status="PASS" starttime="20201029 18:25:05.876" endtime="20201029 18:25:09.925"></status>
</kw>
<kw name="${i} = 15" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:25:09.943" endtime="20201029 18:25:13.953"></status>
</kw>
<msg timestamp="20201029 18:25:13.954" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 18:25:09.940" endtime="20201029 18:25:13.954"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:25:13.959" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 18:25:13.956" endtime="20201029 18:25:13.959"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:25:13.961" endtime="20201029 18:25:13.964"></status>
</kw>
<status status="PASS" starttime="20201029 18:25:09.935" endtime="20201029 18:25:13.965"></status>
</kw>
<status status="PASS" starttime="20201029 18:25:09.930" endtime="20201029 18:25:13.966"></status>
</kw>
<status status="PASS" starttime="20201029 18:25:09.927" endtime="20201029 18:25:13.967"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 18:25:13.968" endtime="20201029 18:25:13.972"></status>
</kw>
<status status="PASS" starttime="20201029 18:25:09.926" endtime="20201029 18:25:13.972"></status>
</kw>
<status status="PASS" starttime="20201029 18:24:06.180" endtime="20201029 18:25:13.972"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<msg timestamp="20201029 18:25:13.977" level="FAIL">'Timeout' does not contain 'Success'</msg>
<status status="FAIL" starttime="20201029 18:25:13.974" endtime="20201029 18:25:13.978"></status>
</kw>
<status status="FAIL" starttime="20201029 18:24:06.178" endtime="20201029 18:25:13.979"></status>
</kw>
<status status="FAIL" starttime="20201029 18:24:06.174" endtime="20201029 18:25:13.981"></status>
</kw>
<status status="FAIL" starttime="20201029 18:24:06.145" endtime="20201029 18:25:13.981"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="FAIL" starttime="20201029 18:24:06.139" endtime="20201029 18:25:13.983" critical="yes">Setup failed:
'Timeout' does not contain 'Success'</status>
</test>
<test id="s1-s2-t9" name="Measure Add Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:25:13.997" endtime="20201029 18:25:14.019"></status>
</kw>
<status status="PASS" starttime="20201029 18:25:13.994" endtime="20201029 18:25:14.020"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:25:14.046" endtime="20201029 18:25:21.060"></status>
</kw>
<msg timestamp="20201029 18:25:21.061" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 18:25:14.043" endtime="20201029 18:25:21.061"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:25:21.066" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 18:25:21.063" endtime="20201029 18:25:21.066"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:25:21.068" endtime="20201029 18:25:21.071"></status>
</kw>
<status status="PASS" starttime="20201029 18:25:14.038" endtime="20201029 18:25:21.072"></status>
</kw>
<status status="PASS" starttime="20201029 18:25:14.033" endtime="20201029 18:25:21.073"></status>
</kw>
<status status="PASS" starttime="20201029 18:25:14.030" endtime="20201029 18:25:21.074"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 18:25:21.075" endtime="20201029 18:25:21.079"></status>
</kw>
<status status="PASS" starttime="20201029 18:25:14.028" endtime="20201029 18:25:21.079"></status>
</kw>
<kw name="${i} = 1" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:25:21.097" endtime="20201029 18:25:25.106"></status>
</kw>
<msg timestamp="20201029 18:25:25.107" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 18:25:21.094" endtime="20201029 18:25:25.107"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:25:25.109" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 18:25:25.108" endtime="20201029 18:25:25.109"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:25:25.110" endtime="20201029 18:25:25.112"></status>
</kw>
<status status="PASS" starttime="20201029 18:25:21.089" endtime="20201029 18:25:25.112"></status>
</kw>
<status status="PASS" starttime="20201029 18:25:21.084" endtime="20201029 18:25:25.113"></status>
</kw>
<status status="PASS" starttime="20201029 18:25:21.081" endtime="20201029 18:25:25.113"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 18:25:25.114" endtime="20201029 18:25:25.115"></status>
</kw>
<status status="PASS" starttime="20201029 18:25:21.080" endtime="20201029 18:25:25.115"></status>
</kw>
<kw name="${i} = 2" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:25:25.124" endtime="20201029 18:25:29.132"></status>
</kw>
<msg timestamp="20201029 18:25:29.133" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 18:25:25.123" endtime="20201029 18:25:29.133"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:25:29.139" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 18:25:29.135" endtime="20201029 18:25:29.139"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:25:29.141" endtime="20201029 18:25:29.144"></status>
</kw>
<status status="PASS" starttime="20201029 18:25:25.120" endtime="20201029 18:25:29.145"></status>
</kw>
<status status="PASS" starttime="20201029 18:25:25.118" endtime="20201029 18:25:29.146"></status>
</kw>
<status status="PASS" starttime="20201029 18:25:25.117" endtime="20201029 18:25:29.147"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 18:25:29.149" endtime="20201029 18:25:29.152"></status>
</kw>
<status status="PASS" starttime="20201029 18:25:25.116" endtime="20201029 18:25:29.152"></status>
</kw>
<kw name="${i} = 3" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:25:29.170" endtime="20201029 18:25:33.180"></status>
</kw>
<msg timestamp="20201029 18:25:33.181" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 18:25:29.167" endtime="20201029 18:25:33.181"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:25:33.186" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 18:25:33.183" endtime="20201029 18:25:33.186"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:25:33.188" endtime="20201029 18:25:33.191"></status>
</kw>
<status status="PASS" starttime="20201029 18:25:29.162" endtime="20201029 18:25:33.192"></status>
</kw>
<status status="PASS" starttime="20201029 18:25:29.157" endtime="20201029 18:25:33.193"></status>
</kw>
<status status="PASS" starttime="20201029 18:25:29.155" endtime="20201029 18:25:33.194"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 18:25:33.196" endtime="20201029 18:25:33.199"></status>
</kw>
<status status="PASS" starttime="20201029 18:25:29.153" endtime="20201029 18:25:33.199"></status>
</kw>
<kw name="${i} = 4" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:25:33.224" endtime="20201029 18:25:37.233"></status>
</kw>
<msg timestamp="20201029 18:25:37.234" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 18:25:33.220" endtime="20201029 18:25:37.234"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:25:37.239" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 18:25:37.236" endtime="20201029 18:25:37.239"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:25:37.241" endtime="20201029 18:25:37.244"></status>
</kw>
<status status="PASS" starttime="20201029 18:25:33.209" endtime="20201029 18:25:37.245"></status>
</kw>
<status status="PASS" starttime="20201029 18:25:33.204" endtime="20201029 18:25:37.246"></status>
</kw>
<status status="PASS" starttime="20201029 18:25:33.202" endtime="20201029 18:25:37.247"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 18:25:37.249" endtime="20201029 18:25:37.252"></status>
</kw>
<status status="PASS" starttime="20201029 18:25:33.200" endtime="20201029 18:25:37.252"></status>
</kw>
<kw name="${i} = 5" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:25:37.271" endtime="20201029 18:25:41.281"></status>
</kw>
<msg timestamp="20201029 18:25:41.282" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 18:25:37.267" endtime="20201029 18:25:41.282"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:25:41.290" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 18:25:41.287" endtime="20201029 18:25:41.291"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:25:41.293" endtime="20201029 18:25:41.296"></status>
</kw>
<status status="PASS" starttime="20201029 18:25:37.262" endtime="20201029 18:25:41.297"></status>
</kw>
<status status="PASS" starttime="20201029 18:25:37.257" endtime="20201029 18:25:41.298"></status>
</kw>
<status status="PASS" starttime="20201029 18:25:37.255" endtime="20201029 18:25:41.299"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 18:25:41.300" endtime="20201029 18:25:41.304"></status>
</kw>
<status status="PASS" starttime="20201029 18:25:37.253" endtime="20201029 18:25:41.304"></status>
</kw>
<kw name="${i} = 6" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:25:41.322" endtime="20201029 18:25:45.332"></status>
</kw>
<msg timestamp="20201029 18:25:45.333" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 18:25:41.319" endtime="20201029 18:25:45.333"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:25:45.338" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 18:25:45.335" endtime="20201029 18:25:45.338"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:25:45.340" endtime="20201029 18:25:45.343"></status>
</kw>
<status status="PASS" starttime="20201029 18:25:41.314" endtime="20201029 18:25:45.344"></status>
</kw>
<status status="PASS" starttime="20201029 18:25:41.309" endtime="20201029 18:25:45.345"></status>
</kw>
<status status="PASS" starttime="20201029 18:25:41.306" endtime="20201029 18:25:45.346"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 18:25:45.347" endtime="20201029 18:25:45.351"></status>
</kw>
<status status="PASS" starttime="20201029 18:25:41.305" endtime="20201029 18:25:45.351"></status>
</kw>
<kw name="${i} = 7" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:25:45.369" endtime="20201029 18:25:49.379"></status>
</kw>
<msg timestamp="20201029 18:25:49.380" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 18:25:45.366" endtime="20201029 18:25:49.380"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:25:49.385" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 18:25:49.382" endtime="20201029 18:25:49.385"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:25:49.387" endtime="20201029 18:25:49.390"></status>
</kw>
<status status="PASS" starttime="20201029 18:25:45.361" endtime="20201029 18:25:49.391"></status>
</kw>
<status status="PASS" starttime="20201029 18:25:45.356" endtime="20201029 18:25:49.392"></status>
</kw>
<status status="PASS" starttime="20201029 18:25:45.353" endtime="20201029 18:25:49.393"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 18:25:49.394" endtime="20201029 18:25:49.397"></status>
</kw>
<status status="PASS" starttime="20201029 18:25:45.352" endtime="20201029 18:25:49.398"></status>
</kw>
<kw name="${i} = 8" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:25:49.419" endtime="20201029 18:25:53.429"></status>
</kw>
<msg timestamp="20201029 18:25:53.430" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 18:25:49.416" endtime="20201029 18:25:53.430"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:25:53.435" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 18:25:53.432" endtime="20201029 18:25:53.435"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:25:53.437" endtime="20201029 18:25:53.440"></status>
</kw>
<status status="PASS" starttime="20201029 18:25:49.411" endtime="20201029 18:25:53.441"></status>
</kw>
<status status="PASS" starttime="20201029 18:25:49.403" endtime="20201029 18:25:53.442"></status>
</kw>
<status status="PASS" starttime="20201029 18:25:49.400" endtime="20201029 18:25:53.443"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 18:25:53.444" endtime="20201029 18:25:53.447"></status>
</kw>
<status status="PASS" starttime="20201029 18:25:49.399" endtime="20201029 18:25:53.448"></status>
</kw>
<kw name="${i} = 9" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:25:53.466" endtime="20201029 18:25:57.476"></status>
</kw>
<msg timestamp="20201029 18:25:57.477" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 18:25:53.463" endtime="20201029 18:25:57.477"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:25:57.482" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 18:25:57.479" endtime="20201029 18:25:57.482"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:25:57.484" endtime="20201029 18:25:57.487"></status>
</kw>
<status status="PASS" starttime="20201029 18:25:53.458" endtime="20201029 18:25:57.488"></status>
</kw>
<status status="PASS" starttime="20201029 18:25:53.453" endtime="20201029 18:25:57.489"></status>
</kw>
<status status="PASS" starttime="20201029 18:25:53.450" endtime="20201029 18:25:57.490"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 18:25:57.492" endtime="20201029 18:25:57.495"></status>
</kw>
<status status="PASS" starttime="20201029 18:25:53.449" endtime="20201029 18:25:57.496"></status>
</kw>
<kw name="${i} = 10" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:25:57.515" endtime="20201029 18:26:01.525"></status>
</kw>
<msg timestamp="20201029 18:26:01.526" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 18:25:57.512" endtime="20201029 18:26:01.526"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:26:01.530" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 18:26:01.528" endtime="20201029 18:26:01.531"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:01.533" endtime="20201029 18:26:01.536"></status>
</kw>
<status status="PASS" starttime="20201029 18:25:57.506" endtime="20201029 18:26:01.537"></status>
</kw>
<status status="PASS" starttime="20201029 18:25:57.501" endtime="20201029 18:26:01.538"></status>
</kw>
<status status="PASS" starttime="20201029 18:25:57.498" endtime="20201029 18:26:01.539"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:01.540" endtime="20201029 18:26:01.544"></status>
</kw>
<status status="PASS" starttime="20201029 18:25:57.496" endtime="20201029 18:26:01.545"></status>
</kw>
<kw name="${i} = 11" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:01.563" endtime="20201029 18:26:05.573"></status>
</kw>
<msg timestamp="20201029 18:26:05.574" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 18:26:01.560" endtime="20201029 18:26:05.574"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:26:05.579" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 18:26:05.576" endtime="20201029 18:26:05.579"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:05.581" endtime="20201029 18:26:05.586"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:01.555" endtime="20201029 18:26:05.587"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:01.550" endtime="20201029 18:26:05.588"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:01.547" endtime="20201029 18:26:05.589"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:05.590" endtime="20201029 18:26:05.594"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:01.546" endtime="20201029 18:26:05.594"></status>
</kw>
<kw name="${i} = 12" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:05.613" endtime="20201029 18:26:09.622"></status>
</kw>
<msg timestamp="20201029 18:26:09.623" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 18:26:05.609" endtime="20201029 18:26:09.623"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:26:09.628" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 18:26:09.625" endtime="20201029 18:26:09.628"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:09.630" endtime="20201029 18:26:09.633"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:05.604" endtime="20201029 18:26:09.634"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:05.599" endtime="20201029 18:26:09.635"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:05.596" endtime="20201029 18:26:09.636"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:09.638" endtime="20201029 18:26:09.641"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:05.595" endtime="20201029 18:26:09.641"></status>
</kw>
<kw name="${i} = 13" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:09.659" endtime="20201029 18:26:13.669"></status>
</kw>
<msg timestamp="20201029 18:26:13.670" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 18:26:09.656" endtime="20201029 18:26:13.670"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:26:13.675" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 18:26:13.672" endtime="20201029 18:26:13.675"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:13.677" endtime="20201029 18:26:13.681"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:09.651" endtime="20201029 18:26:13.682"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:09.646" endtime="20201029 18:26:13.683"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:09.644" endtime="20201029 18:26:13.684"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:13.685" endtime="20201029 18:26:13.688"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:09.642" endtime="20201029 18:26:13.689"></status>
</kw>
<kw name="${i} = 14" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:13.707" endtime="20201029 18:26:17.716"></status>
</kw>
<msg timestamp="20201029 18:26:17.718" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 18:26:13.704" endtime="20201029 18:26:17.718"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:26:17.724" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 18:26:17.720" endtime="20201029 18:26:17.724"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:17.726" endtime="20201029 18:26:17.730"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:13.699" endtime="20201029 18:26:17.732"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:13.694" endtime="20201029 18:26:17.733"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:13.691" endtime="20201029 18:26:17.734"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:17.735" endtime="20201029 18:26:17.739"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:13.690" endtime="20201029 18:26:17.739"></status>
</kw>
<kw name="${i} = 15" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:17.759" endtime="20201029 18:26:21.769"></status>
</kw>
<msg timestamp="20201029 18:26:21.770" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 18:26:17.756" endtime="20201029 18:26:21.770"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:26:21.775" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 18:26:21.772" endtime="20201029 18:26:21.776"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:21.777" endtime="20201029 18:26:21.780"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:17.749" endtime="20201029 18:26:21.782"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:17.744" endtime="20201029 18:26:21.783"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:17.741" endtime="20201029 18:26:21.783"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:21.785" endtime="20201029 18:26:21.788"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:17.740" endtime="20201029 18:26:21.788"></status>
</kw>
<status status="PASS" starttime="20201029 18:25:14.027" endtime="20201029 18:26:21.789"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<msg timestamp="20201029 18:26:21.794" level="FAIL">'Timeout' does not contain 'Success'</msg>
<status status="FAIL" starttime="20201029 18:26:21.790" endtime="20201029 18:26:21.794"></status>
</kw>
<status status="FAIL" starttime="20201029 18:25:14.025" endtime="20201029 18:26:21.796"></status>
</kw>
<status status="FAIL" starttime="20201029 18:25:14.021" endtime="20201029 18:26:21.797"></status>
</kw>
<status status="FAIL" starttime="20201029 18:25:13.991" endtime="20201029 18:26:21.798"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="FAIL" starttime="20201029 18:25:13.986" endtime="20201029 18:26:21.799" critical="yes">Setup failed:
'Timeout' does not contain 'Success'</status>
</test>
<status status="FAIL" starttime="20201029 18:20:02.649" endtime="20201029 18:26:21.821"></status>
</suite>
<suite id="s1-s3" name="Sleep Accuracy" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/02__sleep_accuracy.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 18:26:21.926" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 18:26:21.934" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 18:26:23.034" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 18:26:21.925" endtime="20201029 18:26:23.035"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 18:26:26.038" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20201029 18:26:23.036" endtime="20201029 18:26:26.039"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:21.923" endtime="20201029 18:26:26.040"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:26:26.045" endtime="20201029 18:26:26.303"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:26.042" endtime="20201029 18:26:26.303"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:26.316" endtime="20201029 18:26:29.336"></status>
</kw>
<msg timestamp="20201029 18:26:29.337" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:26:26.314" endtime="20201029 18:26:29.338"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:26:29.343" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:26:29.340" endtime="20201029 18:26:29.343"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:26:29.349" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:26:29.345" endtime="20201029 18:26:29.350"></status>
</kw>
<status status="FAIL" starttime="20201029 18:26:26.312" endtime="20201029 18:26:29.351"></status>
</kw>
<status status="FAIL" starttime="20201029 18:26:26.310" endtime="20201029 18:26:29.352"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:26.308" endtime="20201029 18:26:29.353"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:26:29.362" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:26:29.361" endtime="20201029 18:26:29.363"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:29.355" endtime="20201029 18:26:29.364"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:26.308" endtime="20201029 18:26:29.364"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:26.307" endtime="20201029 18:26:29.365"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:29.366" endtime="20201029 18:26:29.369"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:26.306" endtime="20201029 18:26:29.370"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:29.372" endtime="20201029 18:26:29.375"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:26.304" endtime="20201029 18:26:29.376"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:21.922" endtime="20201029 18:26:29.377"></status>
</kw>
<test id="s1-s3-t1" name="Measure TIMER_SET Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:26:29.388" endtime="20201029 18:26:29.410"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:29.385" endtime="20201029 18:26:29.411"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:29.438" endtime="20201029 18:26:32.462"></status>
</kw>
<msg timestamp="20201029 18:26:32.463" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:26:29.434" endtime="20201029 18:26:32.463"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:26:32.468" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:26:32.465" endtime="20201029 18:26:32.469"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:26:32.474" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:26:32.470" endtime="20201029 18:26:32.475"></status>
</kw>
<status status="FAIL" starttime="20201029 18:26:29.429" endtime="20201029 18:26:32.476"></status>
</kw>
<status status="FAIL" starttime="20201029 18:26:29.424" endtime="20201029 18:26:32.478"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:29.422" endtime="20201029 18:26:32.478"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:26:32.486" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:26:32.484" endtime="20201029 18:26:32.487"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:32.480" endtime="20201029 18:26:32.487"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:29.420" endtime="20201029 18:26:32.487"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:29.419" endtime="20201029 18:26:32.488"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:32.489" endtime="20201029 18:26:32.492"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:29.416" endtime="20201029 18:26:32.493"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:29.413" endtime="20201029 18:26:32.494"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:29.383" endtime="20201029 18:26:32.495"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:32.515" endtime="20201029 18:26:32.529"></status>
</kw>
<msg timestamp="20201029 18:26:32.530" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:26:32.513" endtime="20201029 18:26:32.530"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:26:32.532" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:26:32.531" endtime="20201029 18:26:32.533"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:32.533" endtime="20201029 18:26:32.535"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:32.506" endtime="20201029 18:26:32.536"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:32.501" endtime="20201029 18:26:32.536"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:32.542" endtime="20201029 18:26:32.840"></status>
</kw>
<msg timestamp="20201029 18:26:32.844" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.116321736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.116336056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:26:32.541" endtime="20201029 18:26:32.844"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:26:32.852" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.116321736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.116336056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:26:32.845" endtime="20201029 18:26:32.852"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:32.853" endtime="20201029 18:26:32.855"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:32.538" endtime="20201029 18:26:32.855"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:32.537" endtime="20201029 18:26:32.856"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:26:32.860" level="INFO">${RESULT} = [{'diff': 1.43200000000121e-05}, {'diff': 1.4527999999902619e-05}, {'diff': 1.4763999999889421e-05}, {'diff': 1.4763999999889421e-05}, {'diff': 1.4263999999819532e-05}, {'diff': 1.4611000000108731e-05...</msg>
<status status="PASS" starttime="20201029 18:26:32.857" endtime="20201029 18:26:32.860"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:26:32.864" level="INFO">${ACCURACY} = {'diff': [1.43200000000121e-05, 1.4527999999902619e-05, 1.4763999999889421e-05, 1.4763999999889421e-05, 1.4263999999819532e-05, 1.4611000000108731e-05, 1.4945000000210484e-05, 1.4638999999760927e-05, ...</msg>
<status status="PASS" starttime="20201029 18:26:32.861" endtime="20201029 18:26:32.864"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:26:32.869" level="INFO">NAME: accuracy-TIMER_SET-1-philip</msg>
<status status="PASS" starttime="20201029 18:26:32.868" endtime="20201029 18:26:32.870"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:26:32.872" level="INFO">VALUE: [1.43200000000121e-05, 1.4527999999902619e-05, 1.4763999999889421e-05, 1.4763999999889421e-05, 1.4263999999819532e-05, 1.4611000000108731e-05, 1.4945000000210484e-05, 1.4638999999760927e-05, 1.431899999992936e-05, 1.4708999999779593e-05, 1.5153000000101002e-05, 1.4708000000140942e-05, 1.4930999999940298e-05, 1.4611000000108731e-05, 1.4889000000017916e-05, 1.4778000000159608e-05, 1.4249999999993435e-05, 1.5041000000159954e-05, 1.4485999999980237e-05, 1.4945000000210484e-05, 1.4653000000031113e-05, 1.5070000000338979e-05, 1.4249999999993435e-05, 1.4834000000352177e-05, 1.5138000000192164e-05, 1.4889000000017916e-05, 1.422299999997989e-05, 1.472199999996704e-05, 1.447200000015414e-05, 1.4652999999587024e-05, 1.456899999974226e-05, 1.4832999999825347e-05, 1.5040999999715865e-05, 1.5193999999940644e-05, 1.506899999981215e-05, 1.4443999999613766e-05, 1.4902999999844013e-05, 1.5152000000018262e-05, 1.5082999999638247e-05, 1.4806000000255892e-05, 1.4458000000328042e-05, 1.4790999999902965e-05, 1.4208000000071053e-05, 1.4875000000191818e-05, 1.472199999996704e-05, 1.5083000000082336e-05, 1.5138999999830816e-05, 1.4860999999921631e-05, 1.4777999999715519e-05, 1.4541999999728716e-05]</msg>
<status status="PASS" starttime="20201029 18:26:32.870" endtime="20201029 18:26:32.872"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:32.865" endtime="20201029 18:26:32.873"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:26:32.876" endtime="20201029 18:26:32.896"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:32.875" endtime="20201029 18:26:32.896"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:32.874" endtime="20201029 18:26:32.897"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:32.498" endtime="20201029 18:26:32.897"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:32.497" endtime="20201029 18:26:32.897"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:32.906" endtime="20201029 18:26:32.920"></status>
</kw>
<msg timestamp="20201029 18:26:32.920" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:26:32.904" endtime="20201029 18:26:32.920"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:26:32.923" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:26:32.921" endtime="20201029 18:26:32.923"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:32.924" endtime="20201029 18:26:32.925"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:32.901" endtime="20201029 18:26:32.926"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:32.899" endtime="20201029 18:26:32.926"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:32.933" endtime="20201029 18:26:33.218"></status>
</kw>
<msg timestamp="20201029 18:26:33.221" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019361306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019376, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:26:32.931" endtime="20201029 18:26:33.221"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:26:33.239" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019361306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019376, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:26:33.223" endtime="20201029 18:26:33.240"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:33.242" endtime="20201029 18:26:33.245"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:32.929" endtime="20201029 18:26:33.246"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:32.927" endtime="20201029 18:26:33.247"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:26:33.256" level="INFO">${RESULT} = [{'diff': 1.4694000000002594e-05}, {'diff': 1.4666999999999458e-05}, {'diff': 1.5055999999999403e-05}, {'diff': 1.5166999999999958e-05}, {'diff': 1.434699999999789e-05}, {'diff': 1.459699999999814e-05...</msg>
<status status="PASS" starttime="20201029 18:26:33.249" endtime="20201029 18:26:33.256"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:26:33.266" level="INFO">${ACCURACY} = {'diff': [1.4694000000002594e-05, 1.4666999999999458e-05, 1.5055999999999403e-05, 1.5166999999999958e-05, 1.434699999999789e-05, 1.459699999999814e-05, 1.4333999999997793e-05, 1.4792000000003053e-05, ...</msg>
<status status="PASS" starttime="20201029 18:26:33.258" endtime="20201029 18:26:33.267"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:26:33.276" level="INFO">NAME: accuracy-TIMER_SET-2-philip</msg>
<status status="PASS" starttime="20201029 18:26:33.274" endtime="20201029 18:26:33.276"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:26:33.281" level="INFO">VALUE: [1.4694000000002594e-05, 1.4666999999999458e-05, 1.5055999999999403e-05, 1.5166999999999958e-05, 1.434699999999789e-05, 1.459699999999814e-05, 1.4333999999997793e-05, 1.4792000000003053e-05, 1.5083999999998543e-05, 1.5124999999997779e-05, 1.4680999999999028e-05, 1.4750000000000874e-05, 1.5180999999999528e-05, 1.4583999999998043e-05, 1.5041999999999833e-05, 1.4305999999998653e-05, 1.4666999999999458e-05, 1.4652999999999888e-05, 1.4999999999997654e-05, 1.4500000000000624e-05, 1.5153000000000388e-05, 1.4472999999997488e-05, 1.5000000000001124e-05, 1.5139000000000818e-05, 1.4263999999999943e-05, 1.4624999999997279e-05, 1.4500000000000624e-05, 1.4235999999997334e-05, 1.501300000000122e-05, 1.4707999999998694e-05, 1.5125000000001249e-05, 1.5152000000000915e-05, 1.4236000000000804e-05, 1.4222000000001234e-05, 1.430499999999918e-05, 1.4277999999999513e-05, 1.4889000000000568e-05, 1.4749999999997404e-05, 1.4750000000000874e-05, 1.4903000000000138e-05, 1.484699999999839e-05, 1.4903000000000138e-05, 1.5014000000000693e-05, 1.481899999999925e-05, 1.5014000000000693e-05, 1.4625000000000749e-05, 1.5014000000000693e-05, 1.4903000000000138e-05, 1.4834000000001762e-05, 1.4847000000001859e-05]</msg>
<status status="PASS" starttime="20201029 18:26:33.278" endtime="20201029 18:26:33.282"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:33.268" endtime="20201029 18:26:33.283"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:26:33.290" endtime="20201029 18:26:33.312"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:33.287" endtime="20201029 18:26:33.313"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:33.285" endtime="20201029 18:26:33.314"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:32.898" endtime="20201029 18:26:33.314"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:32.897" endtime="20201029 18:26:33.315"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:33.328" endtime="20201029 18:26:33.342"></status>
</kw>
<msg timestamp="20201029 18:26:33.342" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:26:33.326" endtime="20201029 18:26:33.343"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:26:33.345" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:26:33.343" endtime="20201029 18:26:33.345"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:33.346" endtime="20201029 18:26:33.347"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:33.324" endtime="20201029 18:26:33.348"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:33.320" endtime="20201029 18:26:33.348"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:33.355" endtime="20201029 18:26:33.642"></status>
</kw>
<msg timestamp="20201029 18:26:33.645" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026810722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026825333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:26:33.353" endtime="20201029 18:26:33.645"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:26:33.653" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026810722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026825333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:26:33.646" endtime="20201029 18:26:33.654"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:33.654" endtime="20201029 18:26:33.656"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:33.351" endtime="20201029 18:26:33.656"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:33.349" endtime="20201029 18:26:33.657"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:26:33.661" level="INFO">${RESULT} = [{'diff': 1.4611000000001179e-05}, {'diff': 1.4735999999997834e-05}, {'diff': 1.4722000000001734e-05}, {'diff': 1.4429999999999304e-05}, {'diff': 1.5139000000000818e-05}, {'diff': 1.431899999999875e-0...</msg>
<status status="PASS" starttime="20201029 18:26:33.658" endtime="20201029 18:26:33.661"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:26:33.665" level="INFO">${ACCURACY} = {'diff': [1.4611000000001179e-05, 1.4735999999997834e-05, 1.4722000000001734e-05, 1.4429999999999304e-05, 1.5139000000000818e-05, 1.431899999999875e-05, 1.4193999999998624e-05, 1.4486000000001054e-05,...</msg>
<status status="PASS" starttime="20201029 18:26:33.662" endtime="20201029 18:26:33.665"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:26:33.669" level="INFO">NAME: accuracy-TIMER_SET-3-philip</msg>
<status status="PASS" starttime="20201029 18:26:33.668" endtime="20201029 18:26:33.670"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:26:33.672" level="INFO">VALUE: [1.4611000000001179e-05, 1.4735999999997834e-05, 1.4722000000001734e-05, 1.4429999999999304e-05, 1.5139000000000818e-05, 1.431899999999875e-05, 1.4193999999998624e-05, 1.4486000000001054e-05, 1.4222000000001234e-05, 1.4625000000000749e-05, 1.4736000000001304e-05, 1.4778000000000013e-05, 1.5097000000002109e-05, 1.4611000000001179e-05, 1.4598000000001082e-05, 1.4375000000000498e-05, 1.4471999999998014e-05, 1.4806000000002623e-05, 1.4944999999998848e-05, 1.4709000000001637e-05, 1.4653000000003358e-05, 1.4833000000002289e-05, 1.4375000000000498e-05, 1.4569999999998473e-05, 1.5139000000000818e-05, 1.4875000000000999e-05, 1.4250000000000373e-05, 1.4930999999999278e-05, 1.4930999999999278e-05, 1.5124999999997779e-05, 1.4972000000001984e-05, 1.4848000000001332e-05, 1.4250000000000373e-05, 1.4223000000000707e-05, 1.4223000000000707e-05, 1.4167000000002428e-05, 1.5180999999999528e-05, 1.4694000000002594e-05, 1.461099999999771e-05, 1.4694999999998598e-05, 1.5097999999998113e-05, 1.508299999999907e-05, 1.4583000000002039e-05, 1.50689999999995e-05, 1.4472000000001484e-05, 1.451299999999725e-05, 1.4375000000000498e-05, 1.4971999999998514e-05, 1.4750000000000874e-05, 1.4778000000000013e-05]</msg>
<status status="PASS" starttime="20201029 18:26:33.670" endtime="20201029 18:26:33.672"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:33.666" endtime="20201029 18:26:33.673"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:26:33.676" endtime="20201029 18:26:33.696"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:33.675" endtime="20201029 18:26:33.696"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:33.674" endtime="20201029 18:26:33.696"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:33.316" endtime="20201029 18:26:33.697"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:33.315" endtime="20201029 18:26:33.697"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:33.706" endtime="20201029 18:26:33.722"></status>
</kw>
<msg timestamp="20201029 18:26:33.722" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:26:33.704" endtime="20201029 18:26:33.722"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:26:33.724" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:26:33.723" endtime="20201029 18:26:33.725"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:33.725" endtime="20201029 18:26:33.727"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:33.701" endtime="20201029 18:26:33.727"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:33.699" endtime="20201029 18:26:33.728"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:33.735" endtime="20201029 18:26:34.023"></status>
</kw>
<msg timestamp="20201029 18:26:34.026" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02039725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020412222, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:26:33.733" endtime="20201029 18:26:34.026"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:26:34.034" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02039725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020412222, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:26:34.027" endtime="20201029 18:26:34.034"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:34.035" endtime="20201029 18:26:34.037"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:33.730" endtime="20201029 18:26:34.037"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:33.729" endtime="20201029 18:26:34.038"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:26:34.042" level="INFO">${RESULT} = [{'diff': 1.4972000000001984e-05}, {'diff': 1.4375000000000498e-05}, {'diff': 1.4486000000001054e-05}, {'diff': 1.4651999999996945e-05}, {'diff': 1.430499999999918e-05}, {'diff': 1.427700000000004e-05...</msg>
<status status="PASS" starttime="20201029 18:26:34.038" endtime="20201029 18:26:34.042"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:26:34.046" level="INFO">${ACCURACY} = {'diff': [1.4972000000001984e-05, 1.4375000000000498e-05, 1.4486000000001054e-05, 1.4651999999996945e-05, 1.430499999999918e-05, 1.427700000000004e-05, 1.4916000000000235e-05, 1.4541000000003329e-05, ...</msg>
<status status="PASS" starttime="20201029 18:26:34.043" endtime="20201029 18:26:34.046"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:26:34.050" level="INFO">NAME: accuracy-TIMER_SET-4-philip</msg>
<status status="PASS" starttime="20201029 18:26:34.049" endtime="20201029 18:26:34.050"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:26:34.053" level="INFO">VALUE: [1.4972000000001984e-05, 1.4375000000000498e-05, 1.4486000000001054e-05, 1.4651999999996945e-05, 1.430499999999918e-05, 1.427700000000004e-05, 1.4916000000000235e-05, 1.4541000000003329e-05, 1.4652999999999888e-05, 1.455499999999943e-05, 1.433299999999832e-05, 1.4971999999998514e-05, 1.4527999999999763e-05, 1.5055999999999403e-05, 1.4833000000002289e-05, 1.4764000000000443e-05, 1.483299999999882e-05, 1.4527999999999763e-05, 1.4708000000002164e-05, 1.4985999999998084e-05, 1.4721999999998264e-05, 1.4861000000001429e-05, 1.4819999999998723e-05, 1.4930999999999278e-05, 1.4541999999999333e-05, 1.459699999999814e-05, 1.5055999999999403e-05, 1.4236000000000804e-05, 1.4833999999998293e-05, 1.5139000000000818e-05, 1.5166999999999958e-05, 1.4805999999999153e-05, 1.486099999999796e-05, 1.4236000000000804e-05, 1.4652999999999888e-05, 1.4681000000002498e-05, 1.4237000000000277e-05, 1.4930999999999278e-05, 1.4541999999999333e-05, 1.4792000000003053e-05, 1.4667000000002928e-05, 1.5180000000000055e-05, 1.4334000000001262e-05, 1.477699999999707e-05, 1.4611000000001179e-05, 1.5180000000000055e-05, 1.486099999999796e-05, 1.4374999999997029e-05, 1.4263999999999943e-05, 1.4152999999999388e-05]</msg>
<status status="PASS" starttime="20201029 18:26:34.051" endtime="20201029 18:26:34.055"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:34.047" endtime="20201029 18:26:34.056"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:26:34.059" endtime="20201029 18:26:34.078"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:34.058" endtime="20201029 18:26:34.079"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:34.056" endtime="20201029 18:26:34.079"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:33.698" endtime="20201029 18:26:34.080"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:33.697" endtime="20201029 18:26:34.080"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:34.088" endtime="20201029 18:26:34.103"></status>
</kw>
<msg timestamp="20201029 18:26:34.103" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:26:34.087" endtime="20201029 18:26:34.103"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:26:34.106" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:26:34.104" endtime="20201029 18:26:34.106"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:34.107" endtime="20201029 18:26:34.108"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:34.084" endtime="20201029 18:26:34.109"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:34.082" endtime="20201029 18:26:34.109"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:34.116" endtime="20201029 18:26:34.400"></status>
</kw>
<msg timestamp="20201029 18:26:34.403" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019203875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019218292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:26:34.114" endtime="20201029 18:26:34.403"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:26:34.411" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019203875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019218292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:26:34.404" endtime="20201029 18:26:34.411"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:34.412" endtime="20201029 18:26:34.414"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:34.112" endtime="20201029 18:26:34.414"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:34.110" endtime="20201029 18:26:34.415"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:26:34.419" level="INFO">${RESULT} = [{'diff': 1.4417000000002678e-05}, {'diff': 1.4389000000000068e-05}, {'diff': 1.4736000000001304e-05}, {'diff': 1.4889000000000568e-05}, {'diff': 1.4639000000000318e-05}, {'diff': 1.4848000000001332e-...</msg>
<status status="PASS" starttime="20201029 18:26:34.415" endtime="20201029 18:26:34.419"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:26:34.424" level="INFO">${ACCURACY} = {'diff': [1.4417000000002678e-05, 1.4389000000000068e-05, 1.4736000000001304e-05, 1.4889000000000568e-05, 1.4639000000000318e-05, 1.4848000000001332e-05, 1.4973000000001457e-05, 1.4723000000001207e-05...</msg>
<status status="PASS" starttime="20201029 18:26:34.420" endtime="20201029 18:26:34.424"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:26:34.428" level="INFO">NAME: accuracy-TIMER_SET-5-philip</msg>
<status status="PASS" starttime="20201029 18:26:34.427" endtime="20201029 18:26:34.428"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:26:34.430" level="INFO">VALUE: [1.4417000000002678e-05, 1.4389000000000068e-05, 1.4736000000001304e-05, 1.4889000000000568e-05, 1.4639000000000318e-05, 1.4848000000001332e-05, 1.4973000000001457e-05, 1.4723000000001207e-05, 1.426300000000047e-05, 1.4347000000001359e-05, 1.505499999999993e-05, 1.4541999999999333e-05, 1.4736000000001304e-05, 1.4500000000000624e-05, 1.5084000000002012e-05, 1.5083000000002539e-05, 1.4250000000000373e-05, 1.5138999999997349e-05, 1.4277999999999513e-05, 1.4263999999999943e-05, 1.4708000000002164e-05, 1.4764000000000443e-05, 1.454099999999986e-05, 1.5000000000001124e-05, 1.4374999999997029e-05, 1.5014000000000693e-05, 1.4389000000000068e-05, 1.4556000000002373e-05, 1.455499999999943e-05, 1.4305999999998653e-05, 1.4556000000002373e-05, 1.5083000000002539e-05, 1.4402999999999638e-05, 1.4431000000002248e-05, 1.5000000000001124e-05, 1.5097000000002109e-05, 1.4694999999998598e-05, 1.4250000000000373e-05, 1.5055999999999403e-05, 1.509699999999864e-05, 1.4792000000003053e-05, 1.4555999999998903e-05, 1.4805999999999153e-05, 1.5166999999999958e-05, 1.5139000000000818e-05, 1.5028000000000263e-05, 1.4945000000002318e-05, 1.5125000000001249e-05, 1.4402999999999638e-05, 1.5180999999999528e-05]</msg>
<status status="PASS" starttime="20201029 18:26:34.429" endtime="20201029 18:26:34.431"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:34.424" endtime="20201029 18:26:34.431"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:26:34.435" endtime="20201029 18:26:34.454"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:34.433" endtime="20201029 18:26:34.455"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:34.432" endtime="20201029 18:26:34.455"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:34.081" endtime="20201029 18:26:34.455"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:34.080" endtime="20201029 18:26:34.456"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:34.464" endtime="20201029 18:26:34.479"></status>
</kw>
<msg timestamp="20201029 18:26:34.480" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:26:34.463" endtime="20201029 18:26:34.480"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:26:34.483" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:26:34.481" endtime="20201029 18:26:34.483"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:34.484" endtime="20201029 18:26:34.485"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:34.460" endtime="20201029 18:26:34.486"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:34.458" endtime="20201029 18:26:34.486"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:34.493" endtime="20201029 18:26:34.778"></status>
</kw>
<msg timestamp="20201029 18:26:34.781" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019240153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0192545, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:26:34.491" endtime="20201029 18:26:34.781"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:26:34.789" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019240153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0192545, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:26:34.782" endtime="20201029 18:26:34.789"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:34.790" endtime="20201029 18:26:34.792"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:34.488" endtime="20201029 18:26:34.792"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:34.487" endtime="20201029 18:26:34.793"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:26:34.796" level="INFO">${RESULT} = [{'diff': 1.4347000000001359e-05}, {'diff': 1.4903000000000138e-05}, {'diff': 1.4333999999997793e-05}, {'diff': 1.5139000000000818e-05}, {'diff': 1.4957999999998944e-05}, {'diff': 1.4957999999998944e-...</msg>
<status status="PASS" starttime="20201029 18:26:34.793" endtime="20201029 18:26:34.797"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:26:34.801" level="INFO">${ACCURACY} = {'diff': [1.4347000000001359e-05, 1.4903000000000138e-05, 1.4333999999997793e-05, 1.5139000000000818e-05, 1.4957999999998944e-05, 1.4957999999998944e-05, 1.4695000000002068e-05, 1.5139000000000818e-05...</msg>
<status status="PASS" starttime="20201029 18:26:34.797" endtime="20201029 18:26:34.801"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:26:34.805" level="INFO">NAME: accuracy-TIMER_SET-6-philip</msg>
<status status="PASS" starttime="20201029 18:26:34.804" endtime="20201029 18:26:34.805"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:26:34.807" level="INFO">VALUE: [1.4347000000001359e-05, 1.4903000000000138e-05, 1.4333999999997793e-05, 1.5139000000000818e-05, 1.4957999999998944e-05, 1.4957999999998944e-05, 1.4695000000002068e-05, 1.5139000000000818e-05, 1.4750000000000874e-05, 1.4570000000001943e-05, 1.4861000000001429e-05, 1.5124999999997779e-05, 1.4584000000001512e-05, 1.4764000000000443e-05, 1.4750000000000874e-05, 1.5180999999999528e-05, 1.4791999999999583e-05, 1.4459000000001387e-05, 1.4972999999997988e-05, 1.4236000000000804e-05, 1.4250000000000373e-05, 1.5166999999999958e-05, 1.4943999999999374e-05, 1.4929999999999805e-05, 1.4693999999999124e-05, 1.477700000000054e-05, 1.4916000000000235e-05, 1.458299999999857e-05, 1.4528000000003233e-05, 1.4235999999997334e-05, 1.458299999999857e-05, 1.4750000000000874e-05, 1.4500000000000624e-05, 1.483299999999882e-05, 1.434699999999789e-05, 1.455499999999943e-05, 1.4805000000003149e-05, 1.484699999999839e-05, 1.4305999999998653e-05, 1.4208000000001664e-05, 1.4985999999998084e-05, 1.5193999999999624e-05, 1.5207999999999194e-05, 1.4541999999999333e-05, 1.5125000000001249e-05, 1.4971999999998514e-05, 1.4292000000002553e-05, 1.5166999999999958e-05, 1.4916999999999708e-05, 1.4486000000001054e-05]</msg>
<status status="PASS" starttime="20201029 18:26:34.806" endtime="20201029 18:26:34.808"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:34.801" endtime="20201029 18:26:34.808"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:26:34.812" endtime="20201029 18:26:34.831"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:34.810" endtime="20201029 18:26:34.832"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:34.809" endtime="20201029 18:26:34.832"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:34.456" endtime="20201029 18:26:34.832"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:34.456" endtime="20201029 18:26:34.833"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:34.841" endtime="20201029 18:26:34.857"></status>
</kw>
<msg timestamp="20201029 18:26:34.857" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:26:34.839" endtime="20201029 18:26:34.858"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:26:34.860" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:26:34.858" endtime="20201029 18:26:34.860"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:34.861" endtime="20201029 18:26:34.862"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:34.837" endtime="20201029 18:26:34.863"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:34.835" endtime="20201029 18:26:34.863"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:34.870" endtime="20201029 18:26:35.156"></status>
</kw>
<msg timestamp="20201029 18:26:35.159" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020587292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02060175, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:26:34.868" endtime="20201029 18:26:35.159"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:26:35.167" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020587292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02060175, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:26:35.160" endtime="20201029 18:26:35.167"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:35.168" endtime="20201029 18:26:35.170"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:34.866" endtime="20201029 18:26:35.170"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:34.864" endtime="20201029 18:26:35.171"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:26:35.175" level="INFO">${RESULT} = [{'diff': 1.4457999999998444e-05}, {'diff': 1.4541999999999333e-05}, {'diff': 1.4708000000002164e-05}, {'diff': 1.4250000000000373e-05}, {'diff': 1.4722000000001734e-05}, {'diff': 1.5166999999999958e-...</msg>
<status status="PASS" starttime="20201029 18:26:35.171" endtime="20201029 18:26:35.175"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:26:35.179" level="INFO">${ACCURACY} = {'diff': [1.4457999999998444e-05, 1.4541999999999333e-05, 1.4708000000002164e-05, 1.4250000000000373e-05, 1.4722000000001734e-05, 1.5166999999999958e-05, 1.461099999999771e-05, 1.4222000000001234e-05,...</msg>
<status status="PASS" starttime="20201029 18:26:35.175" endtime="20201029 18:26:35.179"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:26:35.183" level="INFO">NAME: accuracy-TIMER_SET-7-philip</msg>
<status status="PASS" starttime="20201029 18:26:35.182" endtime="20201029 18:26:35.183"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:26:35.186" level="INFO">VALUE: [1.4457999999998444e-05, 1.4541999999999333e-05, 1.4708000000002164e-05, 1.4250000000000373e-05, 1.4722000000001734e-05, 1.5166999999999958e-05, 1.461099999999771e-05, 1.4222000000001234e-05, 1.4709000000001637e-05, 1.4250000000000373e-05, 1.4250000000000373e-05, 1.4250000000000373e-05, 1.4639000000000318e-05, 1.5014000000000693e-05, 1.4472999999997488e-05, 1.5166999999999958e-05, 1.4985999999998084e-05, 1.4542000000002803e-05, 1.4486000000001054e-05, 1.4486000000001054e-05, 1.4721999999998264e-05, 1.4987000000001027e-05, 1.5125000000001249e-05, 1.5194999999999098e-05, 1.5151999999997445e-05, 1.4958000000002414e-05, 1.4916000000000235e-05, 1.4597000000001609e-05, 1.4347000000001359e-05, 1.4750000000000874e-05, 1.4624999999997279e-05, 1.4402999999999638e-05, 1.4527999999999763e-05, 1.4263999999999943e-05, 1.4361000000000929e-05, 1.4222000000001234e-05, 1.4929999999999805e-05, 1.4889000000000568e-05, 1.4735999999997834e-05, 1.4722000000001734e-05, 1.4429999999999304e-05, 1.4791999999999583e-05, 1.4625000000000749e-05, 1.4389000000000068e-05, 1.5166999999999958e-05, 1.4250000000000373e-05, 1.4486000000001054e-05, 1.4736000000001304e-05, 1.434699999999789e-05, 1.4471999999998014e-05]</msg>
<status status="PASS" starttime="20201029 18:26:35.184" endtime="20201029 18:26:35.187"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:35.179" endtime="20201029 18:26:35.187"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:26:35.191" endtime="20201029 18:26:35.210"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:35.189" endtime="20201029 18:26:35.211"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:35.188" endtime="20201029 18:26:35.211"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:34.833" endtime="20201029 18:26:35.211"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:34.833" endtime="20201029 18:26:35.212"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:35.220" endtime="20201029 18:26:35.235"></status>
</kw>
<msg timestamp="20201029 18:26:35.235" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:26:35.219" endtime="20201029 18:26:35.236"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:26:35.238" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:26:35.236" endtime="20201029 18:26:35.238"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:35.239" endtime="20201029 18:26:35.241"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:35.216" endtime="20201029 18:26:35.241"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:35.214" endtime="20201029 18:26:35.242"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:35.248" endtime="20201029 18:26:35.534"></status>
</kw>
<msg timestamp="20201029 18:26:35.537" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020615056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020629264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:26:35.246" endtime="20201029 18:26:35.537"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:26:35.545" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020615056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020629264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:26:35.538" endtime="20201029 18:26:35.545"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:35.546" endtime="20201029 18:26:35.547"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:35.244" endtime="20201029 18:26:35.548"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:35.242" endtime="20201029 18:26:35.548"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:26:35.552" level="INFO">${RESULT} = [{'diff': 1.4208000000001664e-05}, {'diff': 1.481899999999925e-05}, {'diff': 1.4639000000000318e-05}, {'diff': 1.4652999999999888e-05}, {'diff': 1.5000000000001124e-05}, {'diff': 1.4971999999998514e-0...</msg>
<status status="PASS" starttime="20201029 18:26:35.549" endtime="20201029 18:26:35.553"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:26:35.557" level="INFO">${ACCURACY} = {'diff': [1.4208000000001664e-05, 1.481899999999925e-05, 1.4639000000000318e-05, 1.4652999999999888e-05, 1.5000000000001124e-05, 1.4971999999998514e-05, 1.5097000000002109e-05, 1.5070000000002443e-05,...</msg>
<status status="PASS" starttime="20201029 18:26:35.553" endtime="20201029 18:26:35.558"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:26:35.562" level="INFO">NAME: accuracy-TIMER_SET-8-philip</msg>
<status status="PASS" starttime="20201029 18:26:35.561" endtime="20201029 18:26:35.562"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:26:35.564" level="INFO">VALUE: [1.4208000000001664e-05, 1.481899999999925e-05, 1.4639000000000318e-05, 1.4652999999999888e-05, 1.5000000000001124e-05, 1.4971999999998514e-05, 1.5097000000002109e-05, 1.5070000000002443e-05, 1.4681000000002498e-05, 1.4778000000000013e-05, 1.4584000000001512e-05, 1.4722000000001734e-05, 1.5139000000000818e-05, 1.4597999999997613e-05, 1.4680999999999028e-05, 1.5041999999999833e-05, 1.4888999999997099e-05, 1.4737000000000777e-05, 1.4402999999999638e-05, 1.4249999999996904e-05, 1.4778000000000013e-05, 1.4931000000002748e-05, 1.4208000000001664e-05, 1.4791999999999583e-05, 1.505499999999993e-05, 1.4679999999999555e-05, 1.454099999999986e-05, 1.5180000000000055e-05, 1.4221999999997764e-05, 1.4721999999998264e-05, 1.483299999999882e-05, 1.5152000000000915e-05, 1.4375000000000498e-05, 1.4679999999999555e-05, 1.486099999999796e-05, 1.5222000000002234e-05, 1.504100000000036e-05, 1.4819000000002719e-05, 1.4514000000000193e-05, 1.4833000000002289e-05, 1.4306000000002123e-05, 1.505499999999993e-05, 1.4722000000001734e-05, 1.4472000000001484e-05, 1.4389000000000068e-05, 1.4749999999997404e-05, 1.483299999999882e-05, 1.4957999999998944e-05, 1.5153000000000388e-05, 1.4805999999999153e-05]</msg>
<status status="PASS" starttime="20201029 18:26:35.563" endtime="20201029 18:26:35.565"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:35.558" endtime="20201029 18:26:35.565"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:26:35.575" endtime="20201029 18:26:35.595"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:35.574" endtime="20201029 18:26:35.595"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:35.566" endtime="20201029 18:26:35.596"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:35.213" endtime="20201029 18:26:35.596"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:35.212" endtime="20201029 18:26:35.596"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:35.606" endtime="20201029 18:26:35.622"></status>
</kw>
<msg timestamp="20201029 18:26:35.622" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:26:35.604" endtime="20201029 18:26:35.622"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:26:35.625" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:26:35.623" endtime="20201029 18:26:35.625"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:35.626" endtime="20201029 18:26:35.627"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:35.601" endtime="20201029 18:26:35.628"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:35.599" endtime="20201029 18:26:35.628"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:35.635" endtime="20201029 18:26:35.919"></status>
</kw>
<msg timestamp="20201029 18:26:35.922" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021062639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021077625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:26:35.633" endtime="20201029 18:26:35.923"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:26:35.931" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021062639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021077625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:26:35.924" endtime="20201029 18:26:35.931"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:35.932" endtime="20201029 18:26:35.933"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:35.630" endtime="20201029 18:26:35.934"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:35.629" endtime="20201029 18:26:35.934"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:26:35.938" level="INFO">${RESULT} = [{'diff': 1.4985999999998084e-05}, {'diff': 1.429099999999961e-05}, {'diff': 1.4514000000000193e-05}, {'diff': 1.430499999999918e-05}, {'diff': 1.4638999999996849e-05}, {'diff': 1.4194000000002094e-05...</msg>
<status status="PASS" starttime="20201029 18:26:35.935" endtime="20201029 18:26:35.938"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:26:35.942" level="INFO">${ACCURACY} = {'diff': [1.4985999999998084e-05, 1.429099999999961e-05, 1.4514000000000193e-05, 1.430499999999918e-05, 1.4638999999996849e-05, 1.4194000000002094e-05, 1.4707999999998694e-05, 1.50689999999995e-05, 1....</msg>
<status status="PASS" starttime="20201029 18:26:35.939" endtime="20201029 18:26:35.943"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:26:35.947" level="INFO">NAME: accuracy-TIMER_SET-9-philip</msg>
<status status="PASS" starttime="20201029 18:26:35.946" endtime="20201029 18:26:35.947"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:26:35.949" level="INFO">VALUE: [1.4985999999998084e-05, 1.429099999999961e-05, 1.4514000000000193e-05, 1.430499999999918e-05, 1.4638999999996849e-05, 1.4194000000002094e-05, 1.4707999999998694e-05, 1.50689999999995e-05, 1.4889000000000568e-05, 1.50689999999995e-05, 1.4903000000000138e-05, 1.4666999999999458e-05, 1.4486000000001054e-05, 1.4721999999998264e-05, 1.4514000000000193e-05, 1.4250000000000373e-05, 1.4541999999999333e-05, 1.4514000000000193e-05, 1.4347999999997363e-05, 1.4944999999998848e-05, 1.4694999999998598e-05, 1.486099999999796e-05, 1.4903000000000138e-05, 1.4848000000001332e-05, 1.505499999999993e-05, 1.4903000000000138e-05, 1.4361000000000929e-05, 1.4389000000000068e-05, 1.4263999999999943e-05, 1.5028000000000263e-05, 1.4930999999999278e-05, 1.4306000000002123e-05, 1.4472999999997488e-05, 1.5139000000000818e-05, 1.4750000000000874e-05, 1.4833000000002289e-05, 1.5028000000000263e-05, 1.5180999999999528e-05, 1.505499999999993e-05, 1.504100000000036e-05, 1.459699999999814e-05, 1.455499999999943e-05, 1.501300000000122e-05, 1.4971999999998514e-05, 1.4819000000002719e-05, 1.452700000000029e-05, 1.4236000000000804e-05, 1.4943999999999374e-05, 1.4415999999999735e-05, 1.4250000000000373e-05]</msg>
<status status="PASS" starttime="20201029 18:26:35.948" endtime="20201029 18:26:35.950"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:35.943" endtime="20201029 18:26:35.950"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:26:35.954" endtime="20201029 18:26:35.973"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:35.953" endtime="20201029 18:26:35.974"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:35.951" endtime="20201029 18:26:35.974"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:35.597" endtime="20201029 18:26:35.975"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:35.597" endtime="20201029 18:26:35.975"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:35.983" endtime="20201029 18:26:35.999"></status>
</kw>
<msg timestamp="20201029 18:26:36.000" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:26:35.982" endtime="20201029 18:26:36.000"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:26:36.002" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:26:36.001" endtime="20201029 18:26:36.003"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:36.003" endtime="20201029 18:26:36.005"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:35.979" endtime="20201029 18:26:36.005"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:35.977" endtime="20201029 18:26:36.006"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:36.012" endtime="20201029 18:26:36.297"></status>
</kw>
<msg timestamp="20201029 18:26:36.300" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020149236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020164181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:26:36.011" endtime="20201029 18:26:36.300"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:26:36.308" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020149236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020164181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:26:36.301" endtime="20201029 18:26:36.309"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:36.309" endtime="20201029 18:26:36.311"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:36.008" endtime="20201029 18:26:36.312"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:36.006" endtime="20201029 18:26:36.312"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:26:36.316" level="INFO">${RESULT} = [{'diff': 1.4944999999998848e-05}, {'diff': 1.4834000000001762e-05}, {'diff': 1.483299999999882e-05}, {'diff': 1.508299999999907e-05}, {'diff': 1.4791999999999583e-05}, {'diff': 1.4861000000001429e-05...</msg>
<status status="PASS" starttime="20201029 18:26:36.313" endtime="20201029 18:26:36.316"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:26:36.320" level="INFO">${ACCURACY} = {'diff': [1.4944999999998848e-05, 1.4834000000001762e-05, 1.483299999999882e-05, 1.508299999999907e-05, 1.4791999999999583e-05, 1.4861000000001429e-05, 1.4665999999999985e-05, 1.4236000000000804e-05, ...</msg>
<status status="PASS" starttime="20201029 18:26:36.317" endtime="20201029 18:26:36.320"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:26:36.326" level="INFO">NAME: accuracy-TIMER_SET-10-philip</msg>
<status status="PASS" starttime="20201029 18:26:36.325" endtime="20201029 18:26:36.327"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:26:36.330" level="INFO">VALUE: [1.4944999999998848e-05, 1.4834000000001762e-05, 1.483299999999882e-05, 1.508299999999907e-05, 1.4791999999999583e-05, 1.4861000000001429e-05, 1.4665999999999985e-05, 1.4236000000000804e-05, 1.4416000000003204e-05, 1.427700000000004e-05, 1.454099999999986e-05, 1.4930000000003274e-05, 1.4236000000000804e-05, 1.4958000000002414e-05, 1.4347000000001359e-05, 1.4389000000000068e-05, 1.5165999999997015e-05, 1.454099999999986e-05, 1.480499999999968e-05, 1.4458000000001914e-05, 1.4527999999999763e-05, 1.50689999999995e-05, 1.5069999999998973e-05, 1.4166999999998958e-05, 1.4958000000002414e-05, 1.4333000000001789e-05, 1.484699999999839e-05, 1.4514000000000193e-05, 1.4666999999999458e-05, 1.4208000000001664e-05, 1.4736000000001304e-05, 1.4889000000000568e-05, 1.4263999999999943e-05, 1.461099999999771e-05, 1.4763999999996974e-05, 1.4444999999998348e-05, 1.4166999999998958e-05, 1.5000000000001124e-05, 1.4250000000000373e-05, 1.4750000000000874e-05, 1.4305999999998653e-05, 1.4791999999999583e-05, 1.4291999999999083e-05, 1.4347000000001359e-05, 1.4722999999997738e-05, 1.505499999999993e-05, 1.5112000000001152e-05, 1.4847999999997863e-05, 1.4625000000000749e-05, 1.4291999999999083e-05]</msg>
<status status="PASS" starttime="20201029 18:26:36.328" endtime="20201029 18:26:36.332"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:36.321" endtime="20201029 18:26:36.333"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:26:36.339" endtime="20201029 18:26:36.359"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:36.336" endtime="20201029 18:26:36.359"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:36.334" endtime="20201029 18:26:36.360"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:35.976" endtime="20201029 18:26:36.360"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:35.975" endtime="20201029 18:26:36.360"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:36.369" endtime="20201029 18:26:36.384"></status>
</kw>
<msg timestamp="20201029 18:26:36.384" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:26:36.367" endtime="20201029 18:26:36.385"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:26:36.387" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:26:36.385" endtime="20201029 18:26:36.387"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:36.388" endtime="20201029 18:26:36.389"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:36.365" endtime="20201029 18:26:36.390"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:36.363" endtime="20201029 18:26:36.390"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:36.397" endtime="20201029 18:26:36.682"></status>
</kw>
<msg timestamp="20201029 18:26:36.685" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019883903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019899306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:26:36.395" endtime="20201029 18:26:36.685"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:26:36.693" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019883903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019899306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:26:36.686" endtime="20201029 18:26:36.694"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:36.694" endtime="20201029 18:26:36.696"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:36.393" endtime="20201029 18:26:36.696"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:36.391" endtime="20201029 18:26:36.697"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:26:36.701" level="INFO">${RESULT} = [{'diff': 1.540299999999717e-05}, {'diff': 1.615299999999792e-05}, {'diff': 1.5985999999999084e-05}, {'diff': 1.5679999999997085e-05}, {'diff': 1.5847999999998863e-05}, {'diff': 1.591700000000071e-05}...</msg>
<status status="PASS" starttime="20201029 18:26:36.698" endtime="20201029 18:26:36.701"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:26:36.706" level="INFO">${ACCURACY} = {'diff': [1.540299999999717e-05, 1.615299999999792e-05, 1.5985999999999084e-05, 1.5679999999997085e-05, 1.5847999999998863e-05, 1.591700000000071e-05, 1.613899999999835e-05, 1.6028000000001263e-05, 1....</msg>
<status status="PASS" starttime="20201029 18:26:36.702" endtime="20201029 18:26:36.706"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:26:36.710" level="INFO">NAME: accuracy-TIMER_SET-11-philip</msg>
<status status="PASS" starttime="20201029 18:26:36.709" endtime="20201029 18:26:36.710"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:26:36.713" level="INFO">VALUE: [1.540299999999717e-05, 1.615299999999792e-05, 1.5985999999999084e-05, 1.5679999999997085e-05, 1.5847999999998863e-05, 1.591700000000071e-05, 1.613899999999835e-05, 1.6028000000001263e-05, 1.6014000000001694e-05, 1.583300000000329e-05, 1.6208000000000194e-05, 1.5292000000000083e-05, 1.561100000000218e-05, 1.60690000000005e-05, 1.5209000000002137e-05, 1.5833999999999293e-05, 1.6193999999997155e-05, 1.5569999999999473e-05, 1.534700000000236e-05, 1.534700000000236e-05, 1.5707999999999694e-05, 1.5235999999998334e-05, 1.576300000000197e-05, 1.612499999999878e-05, 1.5973000000002457e-05, 1.5902000000001665e-05, 1.5999999999998654e-05, 1.5958999999999418e-05, 1.5542000000000333e-05, 1.5971999999999514e-05, 1.6000000000002124e-05, 1.5957999999999944e-05, 1.5292000000000083e-05, 1.5249999999997904e-05, 1.6180000000001055e-05, 1.5971999999999514e-05, 1.529100000000061e-05, 1.534699999999889e-05, 1.5694000000000125e-05, 1.5915999999997765e-05, 1.554100000000086e-05, 1.529100000000061e-05, 1.588900000000157e-05, 1.5207999999999194e-05, 1.5915999999997765e-05, 1.590300000000114e-05, 1.5708000000003164e-05, 1.5681000000000028e-05, 1.5916000000001235e-05, 1.566700000000046e-05]</msg>
<status status="PASS" starttime="20201029 18:26:36.711" endtime="20201029 18:26:36.713"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:36.707" endtime="20201029 18:26:36.714"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:26:36.717" endtime="20201029 18:26:36.737"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:36.716" endtime="20201029 18:26:36.737"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:36.715" endtime="20201029 18:26:36.738"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:36.361" endtime="20201029 18:26:36.738"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:36.360" endtime="20201029 18:26:36.738"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:36.747" endtime="20201029 18:26:36.761"></status>
</kw>
<msg timestamp="20201029 18:26:36.762" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:26:36.745" endtime="20201029 18:26:36.762"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:26:36.764" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:26:36.763" endtime="20201029 18:26:36.765"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:36.765" endtime="20201029 18:26:36.767"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:36.743" endtime="20201029 18:26:36.767"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:36.740" endtime="20201029 18:26:36.768"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:36.774" endtime="20201029 18:26:37.060"></status>
</kw>
<msg timestamp="20201029 18:26:37.064" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019298875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019316042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:26:36.773" endtime="20201029 18:26:37.064"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:26:37.072" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019298875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019316042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:26:37.065" endtime="20201029 18:26:37.072"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:37.073" endtime="20201029 18:26:37.074"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:36.770" endtime="20201029 18:26:37.075"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:36.768" endtime="20201029 18:26:37.075"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:26:37.079" level="INFO">${RESULT} = [{'diff': 1.716699999999849e-05}, {'diff': 1.6915999999998765e-05}, {'diff': 1.665299999999842e-05}, {'diff': 1.6597999999999613e-05}, {'diff': 1.6736000000003304e-05}, {'diff': 1.7179999999998585e-05...</msg>
<status status="PASS" starttime="20201029 18:26:37.076" endtime="20201029 18:26:37.079"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:26:37.083" level="INFO">${ACCURACY} = {'diff': [1.716699999999849e-05, 1.6915999999998765e-05, 1.665299999999842e-05, 1.6597999999999613e-05, 1.6736000000003304e-05, 1.7179999999998585e-05, 1.662499999999928e-05, 1.6499999999999154e-05, 1...</msg>
<status status="PASS" starttime="20201029 18:26:37.080" endtime="20201029 18:26:37.083"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:26:37.088" level="INFO">NAME: accuracy-TIMER_SET-12-philip</msg>
<status status="PASS" starttime="20201029 18:26:37.087" endtime="20201029 18:26:37.088"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:26:37.090" level="INFO">VALUE: [1.716699999999849e-05, 1.6915999999998765e-05, 1.665299999999842e-05, 1.6597999999999613e-05, 1.6736000000003304e-05, 1.7179999999998585e-05, 1.662499999999928e-05, 1.6499999999999154e-05, 1.630500000000118e-05, 1.6499999999999154e-05, 1.6445000000000348e-05, 1.630500000000118e-05, 1.629100000000161e-05, 1.6651999999998945e-05, 1.690299999999867e-05, 1.7236000000000334e-05, 1.6235999999999334e-05, 1.6735999999999834e-05, 1.6943999999997905e-05, 1.6972000000000514e-05, 1.679099999999864e-05, 1.679099999999864e-05, 1.6680000000001555e-05, 1.687499999999953e-05, 1.6235999999999334e-05, 1.637499999999903e-05, 1.708300000000107e-05, 1.6929999999998335e-05, 1.655500000000143e-05, 1.6541999999997864e-05, 1.659700000000014e-05, 1.6944000000001375e-05, 1.6305999999997184e-05, 1.690299999999867e-05, 1.6320000000000223e-05, 1.6694000000001125e-05, 1.686099999999996e-05, 1.6320000000000223e-05, 1.7084000000000543e-05, 1.704100000000236e-05, 1.658300000000057e-05, 1.6945000000000848e-05, 1.643100000000078e-05, 1.640299999999817e-05, 1.662499999999928e-05, 1.6749999999999404e-05, 1.715299999999892e-05, 1.6749999999999404e-05, 1.634699999999989e-05, 1.6847999999999863e-05]</msg>
<status status="PASS" starttime="20201029 18:26:37.089" endtime="20201029 18:26:37.091"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:37.084" endtime="20201029 18:26:37.091"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:26:37.095" endtime="20201029 18:26:37.114"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:37.093" endtime="20201029 18:26:37.115"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:37.092" endtime="20201029 18:26:37.115"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:36.739" endtime="20201029 18:26:37.115"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:36.738" endtime="20201029 18:26:37.116"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:37.124" endtime="20201029 18:26:37.139"></status>
</kw>
<msg timestamp="20201029 18:26:37.140" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:26:37.123" endtime="20201029 18:26:37.140"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:26:37.142" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:26:37.141" endtime="20201029 18:26:37.143"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:37.143" endtime="20201029 18:26:37.145"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:37.120" endtime="20201029 18:26:37.145"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:37.118" endtime="20201029 18:26:37.146"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:37.152" endtime="20201029 18:26:37.436"></status>
</kw>
<msg timestamp="20201029 18:26:37.439" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020831722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020849569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:26:37.151" endtime="20201029 18:26:37.439"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:26:37.447" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020831722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020849569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:26:37.440" endtime="20201029 18:26:37.448"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:37.449" endtime="20201029 18:26:37.450"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:37.148" endtime="20201029 18:26:37.451"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:37.146" endtime="20201029 18:26:37.451"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:26:37.455" level="INFO">${RESULT} = [{'diff': 1.784699999999792e-05}, {'diff': 1.7902000000000196e-05}, {'diff': 1.733300000000132e-05}, {'diff': 1.781900000000225e-05}, {'diff': 1.7415999999999265e-05}, {'diff': 1.78890000000001e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:26:37.452" endtime="20201029 18:26:37.455"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:26:37.459" level="INFO">${ACCURACY} = {'diff': [1.784699999999792e-05, 1.7902000000000196e-05, 1.733300000000132e-05, 1.781900000000225e-05, 1.7415999999999265e-05, 1.78890000000001e-05, 1.7972000000001515e-05, 1.7972000000001515e-05, 1.7...</msg>
<status status="PASS" starttime="20201029 18:26:37.456" endtime="20201029 18:26:37.459"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:26:37.464" level="INFO">NAME: accuracy-TIMER_SET-13-philip</msg>
<status status="PASS" starttime="20201029 18:26:37.463" endtime="20201029 18:26:37.464"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:26:37.469" level="INFO">VALUE: [1.784699999999792e-05, 1.7902000000000196e-05, 1.733300000000132e-05, 1.781900000000225e-05, 1.7415999999999265e-05, 1.78890000000001e-05, 1.7972000000001515e-05, 1.7972000000001515e-05, 1.7763999999999974e-05, 1.794499999999838e-05, 1.811099999999774e-05, 1.7749999999996935e-05, 1.734700000000089e-05, 1.8042000000002834e-05, 1.787500000000053e-05, 1.7429999999998835e-05, 1.75829999999981e-05, 1.790299999999967e-05, 1.7736000000000834e-05, 1.815299999999992e-05, 1.718100000000153e-05, 1.7471999999997545e-05, 1.8069999999998504e-05, 1.813900000000035e-05, 1.7555999999998434e-05, 1.7236000000000334e-05, 1.7249999999999904e-05, 1.7805999999998684e-05, 1.7584000000001043e-05, 1.762500000000028e-05, 1.765299999999942e-05, 1.78890000000001e-05, 1.766699999999899e-05, 1.743099999999831e-05, 1.787500000000053e-05, 1.7306000000001653e-05, 1.7584000000001043e-05, 1.798699999999709e-05, 1.7291999999998614e-05, 1.7500000000000154e-05, 1.7929999999999335e-05, 1.7972000000001515e-05, 1.7972000000001515e-05, 1.784699999999792e-05, 1.7763999999999974e-05, 1.7472000000001014e-05, 1.781900000000225e-05, 1.7708000000001695e-05, 1.787500000000053e-05, 1.78890000000001e-05]</msg>
<status status="PASS" starttime="20201029 18:26:37.465" endtime="20201029 18:26:37.470"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:37.460" endtime="20201029 18:26:37.470"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:26:37.474" endtime="20201029 18:26:37.493"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:37.473" endtime="20201029 18:26:37.494"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:37.471" endtime="20201029 18:26:37.494"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:37.116" endtime="20201029 18:26:37.495"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:37.116" endtime="20201029 18:26:37.495"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:37.503" endtime="20201029 18:26:37.519"></status>
</kw>
<msg timestamp="20201029 18:26:37.520" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:26:37.502" endtime="20201029 18:26:37.520"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:26:37.522" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:26:37.521" endtime="20201029 18:26:37.522"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:37.523" endtime="20201029 18:26:37.525"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:37.499" endtime="20201029 18:26:37.525"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:37.497" endtime="20201029 18:26:37.526"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:37.532" endtime="20201029 18:26:37.817"></status>
</kw>
<msg timestamp="20201029 18:26:37.820" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020006208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020024806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:26:37.530" endtime="20201029 18:26:37.820"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:26:37.828" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020006208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020024806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:26:37.821" endtime="20201029 18:26:37.828"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:37.829" endtime="20201029 18:26:37.831"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:37.528" endtime="20201029 18:26:37.831"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:37.526" endtime="20201029 18:26:37.832"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:26:37.836" level="INFO">${RESULT} = [{'diff': 1.8597999999998144e-05}, {'diff': 1.8499999999997685e-05}, {'diff': 1.8887999999998156e-05}, {'diff': 1.915300000000092e-05}, {'diff': 1.8429999999999835e-05}, {'diff': 1.8764000000000974e-0...</msg>
<status status="PASS" starttime="20201029 18:26:37.832" endtime="20201029 18:26:37.836"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:26:37.840" level="INFO">${ACCURACY} = {'diff': [1.8597999999998144e-05, 1.8499999999997685e-05, 1.8887999999998156e-05, 1.915300000000092e-05, 1.8429999999999835e-05, 1.8764000000000974e-05, 1.890300000000067e-05, 1.862500000000128e-05, 1...</msg>
<status status="PASS" starttime="20201029 18:26:37.837" endtime="20201029 18:26:37.841"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:26:37.845" level="INFO">NAME: accuracy-TIMER_SET-14-philip</msg>
<status status="PASS" starttime="20201029 18:26:37.844" endtime="20201029 18:26:37.845"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:26:37.847" level="INFO">VALUE: [1.8597999999998144e-05, 1.8499999999997685e-05, 1.8887999999998156e-05, 1.915300000000092e-05, 1.8429999999999835e-05, 1.8764000000000974e-05, 1.890300000000067e-05, 1.862500000000128e-05, 1.8735999999998365e-05, 1.833299999999885e-05, 1.837499999999756e-05, 1.8305999999999184e-05, 1.8264000000000474e-05, 1.891700000000024e-05, 1.8471999999998545e-05, 1.8528000000000294e-05, 1.8541999999999864e-05, 1.866699999999999e-05, 1.8707999999999225e-05, 1.861099999999824e-05, 1.913899999999788e-05, 1.9014000000001224e-05, 1.8805999999999684e-05, 1.8278000000000044e-05, 1.843099999999931e-05, 1.8957999999999475e-05, 1.8235999999997865e-05, 1.897299999999852e-05, 1.918100000000006e-05, 1.890300000000067e-05, 1.8957999999999475e-05, 1.8486000000001584e-05, 1.918100000000006e-05, 1.912499999999831e-05, 1.8971999999999045e-05, 1.897299999999852e-05, 1.8555999999999434e-05, 1.9112000000001683e-05, 1.8320000000002223e-05, 1.8750000000001404e-05, 1.901300000000175e-05, 1.829100000000014e-05, 1.859700000000214e-05, 1.887500000000153e-05, 1.887500000000153e-05, 1.858300000000257e-05, 1.833300000000232e-05, 1.8429999999999835e-05, 1.863899999999738e-05, 1.911099999999874e-05]</msg>
<status status="PASS" starttime="20201029 18:26:37.846" endtime="20201029 18:26:37.848"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:37.841" endtime="20201029 18:26:37.848"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:26:37.852" endtime="20201029 18:26:37.872"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:37.851" endtime="20201029 18:26:37.872"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:37.849" endtime="20201029 18:26:37.873"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:37.496" endtime="20201029 18:26:37.873"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:37.495" endtime="20201029 18:26:37.873"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:37.881" endtime="20201029 18:26:37.897"></status>
</kw>
<msg timestamp="20201029 18:26:37.898" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:26:37.880" endtime="20201029 18:26:37.898"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:26:37.901" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:26:37.899" endtime="20201029 18:26:37.902"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:37.903" endtime="20201029 18:26:37.905"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:37.877" endtime="20201029 18:26:37.906"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:37.875" endtime="20201029 18:26:37.907"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:37.915" endtime="20201029 18:26:38.203"></status>
</kw>
<msg timestamp="20201029 18:26:38.206" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019245069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019265056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:26:37.914" endtime="20201029 18:26:38.206"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:26:38.214" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019245069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019265056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:26:38.207" endtime="20201029 18:26:38.214"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:38.215" endtime="20201029 18:26:38.217"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:37.910" endtime="20201029 18:26:38.217"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:37.907" endtime="20201029 18:26:38.218"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:26:38.222" level="INFO">${RESULT} = [{'diff': 1.998699999999909e-05}, {'diff': 1.9402000000001696e-05}, {'diff': 1.9985999999999615e-05}, {'diff': 1.9806000000000684e-05}, {'diff': 1.9833999999999824e-05}, {'diff': 1.9721999999999795e-0...</msg>
<status status="PASS" starttime="20201029 18:26:38.218" endtime="20201029 18:26:38.222"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:26:38.226" level="INFO">${ACCURACY} = {'diff': [1.998699999999909e-05, 1.9402000000001696e-05, 1.9985999999999615e-05, 1.9806000000000684e-05, 1.9833999999999824e-05, 1.9721999999999795e-05, 1.9985999999999615e-05, 1.9415999999997796e-05,...</msg>
<status status="PASS" starttime="20201029 18:26:38.223" endtime="20201029 18:26:38.226"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:26:38.230" level="INFO">NAME: accuracy-TIMER_SET-15-philip</msg>
<status status="PASS" starttime="20201029 18:26:38.229" endtime="20201029 18:26:38.230"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:26:38.233" level="INFO">VALUE: [1.998699999999909e-05, 1.9402000000001696e-05, 1.9985999999999615e-05, 1.9806000000000684e-05, 1.9833999999999824e-05, 1.9721999999999795e-05, 1.9985999999999615e-05, 1.9415999999997796e-05, 1.9652000000001946e-05, 1.9666000000001516e-05, 1.9749999999998935e-05, 2.012499999999931e-05, 2.00830000000006e-05, 1.934699999999942e-05, 2.013899999999888e-05, 1.9679999999997616e-05, 1.9415999999997796e-05, 2.012499999999931e-05, 1.9736000000002835e-05, 1.9985999999999615e-05, 1.9929999999997866e-05, 1.983300000000035e-05, 2.0028000000001794e-05, 1.966700000000099e-05, 1.997299999999952e-05, 2.011099999999974e-05, 1.962499999999881e-05, 1.986099999999949e-05, 1.995899999999995e-05, 1.919499999999963e-05, 2.0028000000001794e-05, 1.977700000000207e-05, 1.9999999999999185e-05, 1.9721999999999795e-05, 2.0041999999997895e-05, 1.9249999999998435e-05, 2.015299999999845e-05, 1.997300000000299e-05, 1.994500000000038e-05, 1.9237000000001808e-05, 1.934699999999942e-05, 1.9987000000002558e-05, 1.9806000000000684e-05, 1.9444000000000405e-05, 1.956899999999706e-05, 2.005500000000146e-05, 1.9902000000002196e-05, 1.926299999999853e-05, 1.9499999999998685e-05, 1.9485999999999115e-05]</msg>
<status status="PASS" starttime="20201029 18:26:38.231" endtime="20201029 18:26:38.233"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:38.227" endtime="20201029 18:26:38.234"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:26:38.237" endtime="20201029 18:26:38.257"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:38.236" endtime="20201029 18:26:38.257"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:38.235" endtime="20201029 18:26:38.258"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:37.874" endtime="20201029 18:26:38.258"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:37.873" endtime="20201029 18:26:38.258"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:38.267" endtime="20201029 18:26:38.282"></status>
</kw>
<msg timestamp="20201029 18:26:38.282" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:26:38.265" endtime="20201029 18:26:38.282"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:26:38.284" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:26:38.283" endtime="20201029 18:26:38.285"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:38.285" endtime="20201029 18:26:38.287"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:38.263" endtime="20201029 18:26:38.288"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:38.260" endtime="20201029 18:26:38.288"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:38.294" endtime="20201029 18:26:38.579"></status>
</kw>
<msg timestamp="20201029 18:26:38.583" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020162583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020182833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:26:38.293" endtime="20201029 18:26:38.583"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:26:38.590" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020162583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020182833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:26:38.584" endtime="20201029 18:26:38.591"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:38.592" endtime="20201029 18:26:38.593"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:38.290" endtime="20201029 18:26:38.594"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:38.289" endtime="20201029 18:26:38.594"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:26:38.598" level="INFO">${RESULT} = [{'diff': 2.0249999999999435e-05}, {'diff': 2.113899999999988e-05}, {'diff': 2.034700000000042e-05}, {'diff': 2.0292000000001614e-05}, {'diff': 2.034700000000042e-05}, {'diff': 2.0680000000002086e-05}...</msg>
<status status="PASS" starttime="20201029 18:26:38.595" endtime="20201029 18:26:38.598"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:26:38.602" level="INFO">${ACCURACY} = {'diff': [2.0249999999999435e-05, 2.113899999999988e-05, 2.034700000000042e-05, 2.0292000000001614e-05, 2.034700000000042e-05, 2.0680000000002086e-05, 2.086100000000049e-05, 2.036099999999999e-05, 2.0...</msg>
<status status="PASS" starttime="20201029 18:26:38.599" endtime="20201029 18:26:38.602"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:26:38.607" level="INFO">NAME: accuracy-TIMER_SET-16-philip</msg>
<status status="PASS" starttime="20201029 18:26:38.606" endtime="20201029 18:26:38.607"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:26:38.609" level="INFO">VALUE: [2.0249999999999435e-05, 2.113899999999988e-05, 2.034700000000042e-05, 2.0292000000001614e-05, 2.034700000000042e-05, 2.0680000000002086e-05, 2.086100000000049e-05, 2.036099999999999e-05, 2.0986000000000615e-05, 2.0805999999998215e-05, 2.036099999999999e-05, 2.036099999999999e-05, 2.088899999999963e-05, 2.045900000000045e-05, 2.059700000000067e-05, 2.086100000000049e-05, 2.034700000000042e-05, 2.044500000000088e-05, 2.119500000000163e-05, 2.1098000000000644e-05, 2.097300000000052e-05, 2.063900000000285e-05, 2.0277999999998575e-05, 2.069500000000113e-05, 2.0361999999999464e-05, 2.0222000000000295e-05, 2.0847999999996925e-05, 2.1013999999999755e-05, 2.047300000000002e-05, 2.066699999999852e-05, 2.0249999999999435e-05, 2.1027999999999325e-05, 2.0958000000001475e-05, 2.029100000000214e-05, 2.0943999999998436e-05, 2.026299999999953e-05, 2.0472000000000545e-05, 2.0749999999999935e-05, 2.0694000000001656e-05, 2.0680000000002086e-05, 2.0930000000002336e-05, 2.108299999999813e-05, 2.0791999999998645e-05, 2.0665999999999046e-05, 2.091699999999877e-05, 2.0848000000000394e-05, 2.1013999999999755e-05, 2.086100000000049e-05, 2.113899999999988e-05, 2.069499999999766e-05]</msg>
<status status="PASS" starttime="20201029 18:26:38.608" endtime="20201029 18:26:38.611"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:38.603" endtime="20201029 18:26:38.611"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:26:38.615" endtime="20201029 18:26:38.634"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:38.613" endtime="20201029 18:26:38.635"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:38.612" endtime="20201029 18:26:38.635"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:38.259" endtime="20201029 18:26:38.635"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:38.258" endtime="20201029 18:26:38.635"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:38.644" endtime="20201029 18:26:38.659"></status>
</kw>
<msg timestamp="20201029 18:26:38.660" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:26:38.643" endtime="20201029 18:26:38.660"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:26:38.662" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:26:38.661" endtime="20201029 18:26:38.662"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:38.663" endtime="20201029 18:26:38.665"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:38.640" endtime="20201029 18:26:38.665"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:38.638" endtime="20201029 18:26:38.666"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:38.672" endtime="20201029 18:26:38.958"></status>
</kw>
<msg timestamp="20201029 18:26:38.961" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020418597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020440667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:26:38.670" endtime="20201029 18:26:38.962"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:26:38.969" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020418597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020440667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:26:38.963" endtime="20201029 18:26:38.970"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:38.971" endtime="20201029 18:26:38.972"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:38.668" endtime="20201029 18:26:38.973"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:38.666" endtime="20201029 18:26:38.973"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:26:38.977" level="INFO">${RESULT} = [{'diff': 2.2069999999999035e-05}, {'diff': 2.163899999999691e-05}, {'diff': 2.163900000000038e-05}, {'diff': 2.1555999999998965e-05}, {'diff': 2.1569999999998535e-05}, {'diff': 2.148700000000059e-05}...</msg>
<status status="PASS" starttime="20201029 18:26:38.974" endtime="20201029 18:26:38.977"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:26:38.982" level="INFO">${ACCURACY} = {'diff': [2.2069999999999035e-05, 2.163899999999691e-05, 2.163900000000038e-05, 2.1555999999998965e-05, 2.1569999999998535e-05, 2.148700000000059e-05, 2.1584000000001574e-05, 2.181899999999931e-05, 2....</msg>
<status status="PASS" starttime="20201029 18:26:38.978" endtime="20201029 18:26:38.982"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:26:38.987" level="INFO">NAME: accuracy-TIMER_SET-17-philip</msg>
<status status="PASS" starttime="20201029 18:26:38.986" endtime="20201029 18:26:38.987"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:26:38.989" level="INFO">VALUE: [2.2069999999999035e-05, 2.163899999999691e-05, 2.163900000000038e-05, 2.1555999999998965e-05, 2.1569999999998535e-05, 2.148700000000059e-05, 2.1584000000001574e-05, 2.181899999999931e-05, 2.2069999999999035e-05, 2.2028000000000325e-05, 2.1819999999998785e-05, 2.1250000000000435e-05, 2.193099999999934e-05, 2.184700000000192e-05, 2.1929999999999866e-05, 2.180499999999974e-05, 2.183299999999888e-05, 2.1722000000001795e-05, 2.1666000000000046e-05, 2.130499999999924e-05, 2.180499999999974e-05, 2.202700000000085e-05, 2.187500000000106e-05, 2.213900000000088e-05, 2.188900000000063e-05, 2.137499999999709e-05, 2.2180000000000116e-05, 2.1943999999999436e-05, 2.1943999999999436e-05, 2.1542000000002864e-05, 2.2000000000001185e-05, 2.2193999999999686e-05, 2.163899999999691e-05, 2.22090000000022e-05, 2.1207999999998256e-05, 2.1820000000002254e-05, 2.1556000000002434e-05, 2.1833999999998355e-05, 2.219499999999916e-05, 2.191699999999977e-05, 2.165299999999995e-05, 2.123700000000034e-05, 2.138900000000013e-05, 2.2055999999999465e-05, 2.1472000000001545e-05, 2.218099999999959e-05, 2.1862000000000964e-05, 2.181900000000278e-05, 2.159700000000167e-05, 2.1707999999998756e-05]</msg>
<status status="PASS" starttime="20201029 18:26:38.988" endtime="20201029 18:26:38.990"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:38.983" endtime="20201029 18:26:38.990"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:26:38.994" endtime="20201029 18:26:39.013"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:38.992" endtime="20201029 18:26:39.014"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:38.991" endtime="20201029 18:26:39.014"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:38.636" endtime="20201029 18:26:39.014"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:38.636" endtime="20201029 18:26:39.015"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:39.023" endtime="20201029 18:26:39.038"></status>
</kw>
<msg timestamp="20201029 18:26:39.039" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:26:39.022" endtime="20201029 18:26:39.039"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:26:39.041" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:26:39.040" endtime="20201029 18:26:39.042"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:39.042" endtime="20201029 18:26:39.044"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:39.019" endtime="20201029 18:26:39.044"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:39.017" endtime="20201029 18:26:39.045"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:39.051" endtime="20201029 18:26:39.339"></status>
</kw>
<msg timestamp="20201029 18:26:39.342" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019386028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019408361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:26:39.050" endtime="20201029 18:26:39.343"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:26:39.350" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019386028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019408361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:26:39.343" endtime="20201029 18:26:39.351"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:39.352" endtime="20201029 18:26:39.353"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:39.047" endtime="20201029 18:26:39.354"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:39.045" endtime="20201029 18:26:39.354"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:26:39.358" level="INFO">${RESULT} = [{'diff': 2.233299999999938e-05}, {'diff': 2.3027999999997856e-05}, {'diff': 2.236100000000199e-05}, {'diff': 2.2207999999999256e-05}, {'diff': 2.262499999999834e-05}, {'diff': 2.286099999999902e-05},...</msg>
<status status="PASS" starttime="20201029 18:26:39.355" endtime="20201029 18:26:39.358"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:26:39.362" level="INFO">${ACCURACY} = {'diff': [2.233299999999938e-05, 2.3027999999997856e-05, 2.236100000000199e-05, 2.2207999999999256e-05, 2.262499999999834e-05, 2.286099999999902e-05, 2.2528000000000825e-05, 2.238900000000113e-05, 2.2...</msg>
<status status="PASS" starttime="20201029 18:26:39.359" endtime="20201029 18:26:39.362"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:26:39.367" level="INFO">NAME: accuracy-TIMER_SET-18-philip</msg>
<status status="PASS" starttime="20201029 18:26:39.366" endtime="20201029 18:26:39.367"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:26:39.369" level="INFO">VALUE: [2.233299999999938e-05, 2.3027999999997856e-05, 2.236100000000199e-05, 2.2207999999999256e-05, 2.262499999999834e-05, 2.286099999999902e-05, 2.2528000000000825e-05, 2.238900000000113e-05, 2.263899999999791e-05, 2.266700000000052e-05, 2.294499999999991e-05, 2.2555999999999965e-05, 2.2499999999998216e-05, 2.2319999999999285e-05, 2.2499999999998216e-05, 2.3151999999998507e-05, 2.3070000000000035e-05, 2.2500000000001685e-05, 2.2276999999997632e-05, 2.238899999999766e-05, 2.266700000000052e-05, 2.254100000000092e-05, 2.305500000000099e-05, 2.259700000000267e-05, 2.2416000000000796e-05, 2.305500000000099e-05, 2.256900000000006e-05, 2.265300000000095e-05, 2.286099999999902e-05, 2.2721999999999326e-05, 2.2249999999997966e-05, 2.263899999999791e-05, 2.238899999999766e-05, 2.2292000000000145e-05, 2.261099999999877e-05, 2.2471999999999076e-05, 2.306900000000056e-05, 2.2777999999997606e-05, 2.263900000000138e-05, 2.236100000000199e-05, 2.2207999999999256e-05, 2.2292000000000145e-05, 2.2750000000001935e-05, 2.2762999999998562e-05, 2.2262999999998062e-05, 2.2221999999998826e-05, 2.3083999999999605e-05, 2.213900000000088e-05, 2.2790999999997702e-05, 2.244499999999941e-05]</msg>
<status status="PASS" starttime="20201029 18:26:39.368" endtime="20201029 18:26:39.370"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:39.363" endtime="20201029 18:26:39.370"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:26:39.374" endtime="20201029 18:26:39.393"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:39.372" endtime="20201029 18:26:39.394"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:39.371" endtime="20201029 18:26:39.394"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:39.016" endtime="20201029 18:26:39.394"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:39.015" endtime="20201029 18:26:39.395"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:39.403" endtime="20201029 18:26:39.419"></status>
</kw>
<msg timestamp="20201029 18:26:39.420" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:26:39.402" endtime="20201029 18:26:39.420"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:26:39.422" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:26:39.421" endtime="20201029 18:26:39.422"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:39.423" endtime="20201029 18:26:39.425"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:39.399" endtime="20201029 18:26:39.425"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:39.397" endtime="20201029 18:26:39.426"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:39.432" endtime="20201029 18:26:39.719"></status>
</kw>
<msg timestamp="20201029 18:26:39.722" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020267847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020291875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:26:39.430" endtime="20201029 18:26:39.723"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:26:39.730" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020267847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020291875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:26:39.723" endtime="20201029 18:26:39.731"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:39.732" endtime="20201029 18:26:39.733"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:39.428" endtime="20201029 18:26:39.734"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:39.426" endtime="20201029 18:26:39.734"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:26:39.738" level="INFO">${RESULT} = [{'diff': 2.4028000000002325e-05}, {'diff': 2.3749999999999466e-05}, {'diff': 2.3735999999999896e-05}, {'diff': 2.362499999999934e-05}, {'diff': 2.3278000000001575e-05}, {'diff': 2.35970000000002e-05}...</msg>
<status status="PASS" starttime="20201029 18:26:39.735" endtime="20201029 18:26:39.738"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:26:39.742" level="INFO">${ACCURACY} = {'diff': [2.4028000000002325e-05, 2.3749999999999466e-05, 2.3735999999999896e-05, 2.362499999999934e-05, 2.3278000000001575e-05, 2.35970000000002e-05, 2.369500000000066e-05, 2.3320000000000285e-05, 2....</msg>
<status status="PASS" starttime="20201029 18:26:39.739" endtime="20201029 18:26:39.742"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:26:39.746" level="INFO">NAME: accuracy-TIMER_SET-19-philip</msg>
<status status="PASS" starttime="20201029 18:26:39.745" endtime="20201029 18:26:39.747"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:26:39.749" level="INFO">VALUE: [2.4028000000002325e-05, 2.3749999999999466e-05, 2.3735999999999896e-05, 2.362499999999934e-05, 2.3278000000001575e-05, 2.35970000000002e-05, 2.369500000000066e-05, 2.3320000000000285e-05, 2.341700000000127e-05, 2.3263999999998536e-05, 2.3597999999999675e-05, 2.345899999999998e-05, 2.3598000000003144e-05, 2.3943999999997967e-05, 2.333300000000038e-05, 2.393100000000134e-05, 2.39169999999983e-05, 2.3943999999997967e-05, 2.3972000000000576e-05, 2.363899999999891e-05, 2.352700000000235e-05, 2.362499999999934e-05, 2.3304999999997772e-05, 2.362499999999934e-05, 2.35970000000002e-05, 2.4096999999997232e-05, 2.3499999999999216e-05, 2.3679999999998147e-05, 2.4194000000001686e-05, 2.34169999999978e-05, 2.4068999999998092e-05, 2.3306000000000715e-05, 2.383300000000088e-05, 2.3570000000000535e-05, 2.3332999999996912e-05, 2.337499999999909e-05, 2.418100000000159e-05, 2.415299999999898e-05, 2.368099999999762e-05, 2.39169999999983e-05, 2.4070000000001035e-05, 2.3305999999997246e-05, 2.415300000000245e-05, 2.3250000000002435e-05, 2.3333999999999855e-05, 2.3333999999999855e-05, 2.391700000000177e-05, 2.32229999999993e-05, 2.3499999999999216e-05, 2.3888000000003157e-05]</msg>
<status status="PASS" starttime="20201029 18:26:39.747" endtime="20201029 18:26:39.750"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:39.743" endtime="20201029 18:26:39.751"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:26:39.754" endtime="20201029 18:26:39.774"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:39.753" endtime="20201029 18:26:39.775"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:39.752" endtime="20201029 18:26:39.776"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:39.396" endtime="20201029 18:26:39.776"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:39.395" endtime="20201029 18:26:39.776"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:39.789" endtime="20201029 18:26:39.806"></status>
</kw>
<msg timestamp="20201029 18:26:39.806" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:26:39.787" endtime="20201029 18:26:39.806"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:26:39.808" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:26:39.807" endtime="20201029 18:26:39.809"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:39.809" endtime="20201029 18:26:39.811"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:39.783" endtime="20201029 18:26:39.812"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:39.780" endtime="20201029 18:26:39.812"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:39.818" endtime="20201029 18:26:40.104"></status>
</kw>
<msg timestamp="20201029 18:26:40.107" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025851958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025877139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:26:39.817" endtime="20201029 18:26:40.107"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:26:40.115" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025851958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025877139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:26:40.108" endtime="20201029 18:26:40.115"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:40.116" endtime="20201029 18:26:40.118"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:39.814" endtime="20201029 18:26:40.118"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:39.813" endtime="20201029 18:26:40.119"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:26:40.123" level="INFO">${RESULT} = [{'diff': 2.518099999999912e-05}, {'diff': 2.5014000000000286e-05}, {'diff': 2.5069999999998566e-05}, {'diff': 2.469499999999819e-05}, {'diff': 2.4542000000002395e-05}, {'diff': 2.4348000000000425e-05...</msg>
<status status="PASS" starttime="20201029 18:26:40.119" endtime="20201029 18:26:40.123"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:26:40.128" level="INFO">${ACCURACY} = {'diff': [2.518099999999912e-05, 2.5014000000000286e-05, 2.5069999999998566e-05, 2.469499999999819e-05, 2.4542000000002395e-05, 2.4348000000000425e-05, 2.49169999999993e-05, 2.481900000000231e-05, 2.4...</msg>
<status status="PASS" starttime="20201029 18:26:40.124" endtime="20201029 18:26:40.128"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:26:40.132" level="INFO">NAME: accuracy-TIMER_SET-20-philip</msg>
<status status="PASS" starttime="20201029 18:26:40.131" endtime="20201029 18:26:40.132"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:26:40.134" level="INFO">VALUE: [2.518099999999912e-05, 2.5014000000000286e-05, 2.5069999999998566e-05, 2.469499999999819e-05, 2.4542000000002395e-05, 2.4348000000000425e-05, 2.49169999999993e-05, 2.481900000000231e-05, 2.461100000000077e-05, 2.4263999999999536e-05, 2.4736000000000896e-05, 2.484700000000145e-05, 2.4263999999999536e-05, 2.4291999999998676e-05, 2.469500000000166e-05, 2.448700000000012e-05, 2.473700000000037e-05, 2.423699999999987e-05, 2.481900000000231e-05, 2.4471999999997607e-05, 2.5179999999999647e-05, 2.4694000000002186e-05, 2.437500000000009e-05, 2.4902000000000257e-05, 2.4332999999997912e-05, 2.4986000000001146e-05, 2.5014000000000286e-05, 2.463899999999991e-05, 2.4499999999996747e-05, 2.512500000000084e-05, 2.484700000000145e-05, 2.50970000000017e-05, 2.463899999999991e-05, 2.4943999999998967e-05, 2.5096999999998232e-05, 2.508300000000213e-05, 2.4291999999998676e-05, 2.5055999999998996e-05, 2.5069999999998566e-05, 2.488900000000016e-05, 2.4292000000002145e-05, 2.4278000000002575e-05, 2.4584000000001105e-05, 2.5110999999997802e-05, 2.5014000000000286e-05, 2.465299999999948e-05, 2.4971999999998107e-05, 2.437500000000009e-05, 2.4862000000000495e-05, 2.4429999999998897e-05]</msg>
<status status="PASS" starttime="20201029 18:26:40.133" endtime="20201029 18:26:40.135"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:40.128" endtime="20201029 18:26:40.136"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:26:40.139" endtime="20201029 18:26:40.159"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:40.138" endtime="20201029 18:26:40.159"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:40.137" endtime="20201029 18:26:40.160"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:39.778" endtime="20201029 18:26:40.160"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:39.777" endtime="20201029 18:26:40.160"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:40.168" endtime="20201029 18:26:40.185"></status>
</kw>
<msg timestamp="20201029 18:26:40.186" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:26:40.167" endtime="20201029 18:26:40.186"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:26:40.188" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:26:40.187" endtime="20201029 18:26:40.189"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:40.189" endtime="20201029 18:26:40.191"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:40.164" endtime="20201029 18:26:40.192"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:40.162" endtime="20201029 18:26:40.192"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:40.198" endtime="20201029 18:26:40.485"></status>
</kw>
<msg timestamp="20201029 18:26:40.488" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020233889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020259847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:26:40.197" endtime="20201029 18:26:40.488"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:26:40.496" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020233889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020259847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:26:40.489" endtime="20201029 18:26:40.496"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:40.497" endtime="20201029 18:26:40.499"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:40.194" endtime="20201029 18:26:40.499"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:40.193" endtime="20201029 18:26:40.500"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:26:40.504" level="INFO">${RESULT} = [{'diff': 2.5957999999999537e-05}, {'diff': 2.6055999999999996e-05}, {'diff': 2.5847999999998456e-05}, {'diff': 2.5834000000002355e-05}, {'diff': 2.5833999999998886e-05}, {'diff': 2.5361999999997525e-...</msg>
<status status="PASS" starttime="20201029 18:26:40.500" endtime="20201029 18:26:40.504"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:26:40.508" level="INFO">${ACCURACY} = {'diff': [2.5957999999999537e-05, 2.6055999999999996e-05, 2.5847999999998456e-05, 2.5834000000002355e-05, 2.5833999999998886e-05, 2.5361999999997525e-05, 2.613900000000141e-05, 2.5916000000000827e-05,...</msg>
<status status="PASS" starttime="20201029 18:26:40.505" endtime="20201029 18:26:40.508"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:26:40.512" level="INFO">NAME: accuracy-TIMER_SET-21-philip</msg>
<status status="PASS" starttime="20201029 18:26:40.511" endtime="20201029 18:26:40.512"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:26:40.514" level="INFO">VALUE: [2.5957999999999537e-05, 2.6055999999999996e-05, 2.5847999999998456e-05, 2.5834000000002355e-05, 2.5833999999998886e-05, 2.5361999999997525e-05, 2.613900000000141e-05, 2.5916000000000827e-05, 2.5776999999997663e-05, 2.5764000000001036e-05, 2.6124999999998372e-05, 2.5916000000000827e-05, 2.5304999999999772e-05, 2.5152000000000507e-05, 2.5235999999997927e-05, 2.5221999999998357e-05, 2.6180000000000647e-05, 2.5304999999999772e-05, 2.5514000000000786e-05, 2.5722000000002326e-05, 2.540300000000023e-05, 2.5306000000002715e-05, 2.5458000000002506e-05, 2.540300000000023e-05, 2.5458000000002506e-05, 2.613899999999794e-05, 2.5792000000000176e-05, 2.5583999999998636e-05, 2.5528000000000356e-05, 2.5916000000000827e-05, 2.568099999999962e-05, 2.615299999999751e-05, 2.593099999999987e-05, 2.6069999999999566e-05, 2.5443999999999467e-05, 2.5334000000001855e-05, 2.5680000000000147e-05, 2.5832999999999412e-05, 2.5888000000001687e-05, 2.6082999999999662e-05, 2.5778000000000606e-05, 2.5541000000000452e-05, 2.5278000000000106e-05, 2.5652000000001007e-05, 2.54169999999998e-05, 2.5736000000001896e-05, 2.586100000000202e-05, 2.563900000000091e-05, 2.6124999999998372e-05, 2.5805000000000272e-05]</msg>
<status status="PASS" starttime="20201029 18:26:40.513" endtime="20201029 18:26:40.515"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:40.508" endtime="20201029 18:26:40.516"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:26:40.519" endtime="20201029 18:26:40.539"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:40.518" endtime="20201029 18:26:40.539"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:40.517" endtime="20201029 18:26:40.540"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:40.161" endtime="20201029 18:26:40.540"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:40.160" endtime="20201029 18:26:40.540"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:40.549" endtime="20201029 18:26:40.567"></status>
</kw>
<msg timestamp="20201029 18:26:40.567" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:26:40.547" endtime="20201029 18:26:40.567"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:26:40.569" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:26:40.568" endtime="20201029 18:26:40.570"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:40.571" endtime="20201029 18:26:40.572"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:40.545" endtime="20201029 18:26:40.573"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:40.543" endtime="20201029 18:26:40.573"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:40.579" endtime="20201029 18:26:40.865"></status>
</kw>
<msg timestamp="20201029 18:26:40.868" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021165986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021192319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:26:40.578" endtime="20201029 18:26:40.868"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:26:40.876" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021165986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021192319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:26:40.869" endtime="20201029 18:26:40.876"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:40.877" endtime="20201029 18:26:40.879"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:40.575" endtime="20201029 18:26:40.879"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:40.574" endtime="20201029 18:26:40.880"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:26:40.884" level="INFO">${RESULT} = [{'diff': 2.6332999999999912e-05}, {'diff': 2.6541000000001452e-05}, {'diff': 2.7070000000000566e-05}, {'diff': 2.6332999999999912e-05}, {'diff': 2.6541000000001452e-05}, {'diff': 2.6846999999999982e-...</msg>
<status status="PASS" starttime="20201029 18:26:40.880" endtime="20201029 18:26:40.884"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:26:40.888" level="INFO">${ACCURACY} = {'diff': [2.6332999999999912e-05, 2.6541000000001452e-05, 2.7070000000000566e-05, 2.6332999999999912e-05, 2.6541000000001452e-05, 2.6846999999999982e-05, 2.6542000000000926e-05, 2.665300000000148e-05,...</msg>
<status status="PASS" starttime="20201029 18:26:40.885" endtime="20201029 18:26:40.888"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:26:40.892" level="INFO">NAME: accuracy-TIMER_SET-22-philip</msg>
<status status="PASS" starttime="20201029 18:26:40.891" endtime="20201029 18:26:40.892"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:26:40.897" level="INFO">VALUE: [2.6332999999999912e-05, 2.6541000000001452e-05, 2.7070000000000566e-05, 2.6332999999999912e-05, 2.6541000000001452e-05, 2.6846999999999982e-05, 2.6542000000000926e-05, 2.665300000000148e-05, 2.716699999999808e-05, 2.6332999999999912e-05, 2.6721999999999857e-05, 2.6708000000000287e-05, 2.6986000000003146e-05, 2.6985999999999677e-05, 2.712500000000284e-05, 2.6764000000002036e-05, 2.7041999999997957e-05, 2.6972000000000107e-05, 2.6471999999999607e-05, 2.6583999999999636e-05, 2.643100000000037e-05, 2.6888999999998692e-05, 2.6792000000001176e-05, 2.673700000000237e-05, 2.690300000000173e-05, 2.661100000000277e-05, 2.6598000000002675e-05, 2.687500000000259e-05, 2.6292000000000676e-05, 2.6985999999999677e-05, 2.6722000000003326e-05, 2.7180000000001647e-05, 2.6971999999996638e-05, 2.6944000000000967e-05, 2.638899999999819e-05, 2.6555000000001022e-05, 2.6944000000000967e-05, 2.6972000000000107e-05, 2.690299999999826e-05, 2.6721999999999857e-05, 2.7041999999997957e-05, 2.6735999999999427e-05, 2.6722000000003326e-05, 2.6263999999998067e-05, 2.6708000000000287e-05, 2.637500000000209e-05, 2.6249999999998497e-05, 2.690299999999826e-05, 2.694500000000044e-05, 2.637500000000209e-05]</msg>
<status status="PASS" starttime="20201029 18:26:40.893" endtime="20201029 18:26:40.902"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:40.888" endtime="20201029 18:26:40.903"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:26:40.906" endtime="20201029 18:26:40.926"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:40.905" endtime="20201029 18:26:40.926"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:40.904" endtime="20201029 18:26:40.927"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:40.541" endtime="20201029 18:26:40.927"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:40.540" endtime="20201029 18:26:40.927"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:40.936" endtime="20201029 18:26:40.952"></status>
</kw>
<msg timestamp="20201029 18:26:40.952" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:26:40.934" endtime="20201029 18:26:40.953"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:26:40.955" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:26:40.953" endtime="20201029 18:26:40.955"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:40.956" endtime="20201029 18:26:40.957"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:40.932" endtime="20201029 18:26:40.958"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:40.930" endtime="20201029 18:26:40.958"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:40.965" endtime="20201029 18:26:41.250"></status>
</kw>
<msg timestamp="20201029 18:26:41.254" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020020222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020048125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:26:40.963" endtime="20201029 18:26:41.254"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:26:41.262" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020020222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020048125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:26:41.255" endtime="20201029 18:26:41.262"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:41.263" endtime="20201029 18:26:41.264"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:40.961" endtime="20201029 18:26:41.265"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:40.959" endtime="20201029 18:26:41.265"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:26:41.269" level="INFO">${RESULT} = [{'diff': 2.7902999999999262e-05}, {'diff': 2.7679999999998678e-05}, {'diff': 2.7818999999998373e-05}, {'diff': 2.769500000000119e-05}, {'diff': 2.7986000000000677e-05}, {'diff': 2.7806000000001746e-0...</msg>
<status status="PASS" starttime="20201029 18:26:41.266" endtime="20201029 18:26:41.269"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:26:41.274" level="INFO">${ACCURACY} = {'diff': [2.7902999999999262e-05, 2.7679999999998678e-05, 2.7818999999998373e-05, 2.769500000000119e-05, 2.7986000000000677e-05, 2.7806000000001746e-05, 2.7556000000001496e-05, 2.8013999999999817e-05,...</msg>
<status status="PASS" starttime="20201029 18:26:41.270" endtime="20201029 18:26:41.274"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:26:41.279" level="INFO">NAME: accuracy-TIMER_SET-23-philip</msg>
<status status="PASS" starttime="20201029 18:26:41.278" endtime="20201029 18:26:41.279"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:26:41.281" level="INFO">VALUE: [2.7902999999999262e-05, 2.7679999999998678e-05, 2.7818999999998373e-05, 2.769500000000119e-05, 2.7986000000000677e-05, 2.7806000000001746e-05, 2.7556000000001496e-05, 2.8013999999999817e-05, 2.763900000000291e-05, 2.8138999999999942e-05, 2.7334000000000386e-05, 2.772300000000033e-05, 2.8000000000000247e-05, 2.7986000000000677e-05, 2.7598000000000206e-05, 2.7862000000000026e-05, 2.7347000000000482e-05, 2.818100000000212e-05, 2.7584000000000636e-05, 2.7736000000000427e-05, 2.7290999999998733e-05, 2.7722000000000857e-05, 2.7749999999999997e-05, 2.7235999999999927e-05, 2.7638999999999442e-05, 2.7665999999999108e-05, 2.7222000000000357e-05, 2.7264000000002536e-05, 2.8138999999999942e-05, 2.816700000000255e-05, 2.7541999999998457e-05, 2.8000000000000247e-05, 2.7306000000001246e-05, 2.765300000000248e-05, 2.7598000000000206e-05, 2.7805999999998277e-05, 2.8138999999999942e-05, 2.7207999999997318e-05, 2.7861000000000552e-05, 2.7874999999996652e-05, 2.7249999999999497e-05, 2.7888999999999692e-05, 2.768099999999815e-05, 2.7569000000001592e-05, 2.7277999999998637e-05, 2.7541999999998457e-05, 2.7235999999999927e-05, 2.7374999999999622e-05, 2.7790999999999233e-05, 2.7611000000000302e-05]</msg>
<status status="PASS" starttime="20201029 18:26:41.280" endtime="20201029 18:26:41.282"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:41.275" endtime="20201029 18:26:41.282"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:26:41.286" endtime="20201029 18:26:41.305"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:41.284" endtime="20201029 18:26:41.306"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:41.283" endtime="20201029 18:26:41.306"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:40.928" endtime="20201029 18:26:41.307"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:40.928" endtime="20201029 18:26:41.307"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:41.317" endtime="20201029 18:26:41.332"></status>
</kw>
<msg timestamp="20201029 18:26:41.333" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:26:41.315" endtime="20201029 18:26:41.333"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:26:41.335" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:26:41.334" endtime="20201029 18:26:41.336"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:41.336" endtime="20201029 18:26:41.338"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:41.312" endtime="20201029 18:26:41.339"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:41.309" endtime="20201029 18:26:41.339"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:41.346" endtime="20201029 18:26:41.632"></status>
</kw>
<msg timestamp="20201029 18:26:41.635" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021122292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021150542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:26:41.345" endtime="20201029 18:26:41.636"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:26:41.643" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021122292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021150542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:26:41.636" endtime="20201029 18:26:41.644"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:41.645" endtime="20201029 18:26:41.646"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:41.342" endtime="20201029 18:26:41.647"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:41.340" endtime="20201029 18:26:41.647"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:26:41.651" level="INFO">${RESULT} = [{'diff': 2.8250000000000497e-05}, {'diff': 2.8221999999997888e-05}, {'diff': 2.8332999999998443e-05}, {'diff': 2.898700000000115e-05}, {'diff': 2.8708000000002287e-05}, {'diff': 2.8805999999999277e-0...</msg>
<status status="PASS" starttime="20201029 18:26:41.648" endtime="20201029 18:26:41.651"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:26:41.655" level="INFO">${ACCURACY} = {'diff': [2.8250000000000497e-05, 2.8221999999997888e-05, 2.8332999999998443e-05, 2.898700000000115e-05, 2.8708000000002287e-05, 2.8805999999999277e-05, 2.8819999999998847e-05, 2.8221999999997888e-05,...</msg>
<status status="PASS" starttime="20201029 18:26:41.652" endtime="20201029 18:26:41.655"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:26:41.659" level="INFO">NAME: accuracy-TIMER_SET-24-philip</msg>
<status status="PASS" starttime="20201029 18:26:41.658" endtime="20201029 18:26:41.660"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:26:41.662" level="INFO">VALUE: [2.8250000000000497e-05, 2.8221999999997888e-05, 2.8332999999998443e-05, 2.898700000000115e-05, 2.8708000000002287e-05, 2.8805999999999277e-05, 2.8819999999998847e-05, 2.8221999999997888e-05, 2.8514000000000317e-05, 2.8332999999998443e-05, 2.841699999999933e-05, 2.8541999999999457e-05, 2.8985999999998208e-05, 2.8943999999999498e-05, 2.8805999999999277e-05, 2.8513000000000843e-05, 2.8875000000001122e-05, 2.8832999999998943e-05, 2.8527000000000413e-05, 2.8541999999999457e-05, 2.8458000000002037e-05, 2.8791000000000233e-05, 2.8804999999999803e-05, 2.8610999999997833e-05, 2.8389000000000192e-05, 2.9041999999999957e-05, 2.8805999999999277e-05, 2.8791999999999707e-05, 2.9041999999999957e-05, 2.8693999999999248e-05, 2.8653000000000012e-05, 2.8305999999998777e-05, 2.844500000000194e-05, 2.8791999999999707e-05, 2.9041999999999957e-05, 2.8693999999999248e-05, 2.8666999999999582e-05, 2.8833999999998416e-05, 2.8375000000000622e-05, 2.89309999999994e-05, 2.9166000000000608e-05, 2.872300000000133e-05, 2.9153000000000512e-05, 2.9055999999999527e-05, 2.8596999999998263e-05, 2.8471999999998138e-05, 2.8707999999998818e-05, 2.8527999999999887e-05, 2.8236000000000927e-05, 2.9097000000002232e-05]</msg>
<status status="PASS" starttime="20201029 18:26:41.660" endtime="20201029 18:26:41.663"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:41.656" endtime="20201029 18:26:41.663"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:26:41.667" endtime="20201029 18:26:41.686"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:41.665" endtime="20201029 18:26:41.687"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:41.664" endtime="20201029 18:26:41.687"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:41.308" endtime="20201029 18:26:41.688"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:41.307" endtime="20201029 18:26:41.688"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:41.697" endtime="20201029 18:26:41.714"></status>
</kw>
<msg timestamp="20201029 18:26:41.714" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:26:41.696" endtime="20201029 18:26:41.714"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:26:41.716" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:26:41.715" endtime="20201029 18:26:41.717"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:41.717" endtime="20201029 18:26:41.719"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:41.693" endtime="20201029 18:26:41.720"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:41.690" endtime="20201029 18:26:41.720"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:41.726" endtime="20201029 18:26:42.012"></status>
</kw>
<msg timestamp="20201029 18:26:42.015" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02173075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021760542, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:26:41.725" endtime="20201029 18:26:42.015"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:26:42.023" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02173075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021760542, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:26:42.016" endtime="20201029 18:26:42.023"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:42.024" endtime="20201029 18:26:42.026"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:41.722" endtime="20201029 18:26:42.026"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:41.721" endtime="20201029 18:26:42.027"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:26:42.031" level="INFO">${RESULT} = [{'diff': 2.9792000000000707e-05}, {'diff': 2.9971999999999638e-05}, {'diff': 2.9736000000002427e-05}, {'diff': 2.9527999999997417e-05}, {'diff': 2.9707999999999818e-05}, {'diff': 2.9971999999999638e-...</msg>
<status status="PASS" starttime="20201029 18:26:42.027" endtime="20201029 18:26:42.031"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:26:42.035" level="INFO">${ACCURACY} = {'diff': [2.9792000000000707e-05, 2.9971999999999638e-05, 2.9736000000002427e-05, 2.9527999999997417e-05, 2.9707999999999818e-05, 2.9971999999999638e-05, 3.0042000000000957e-05, 2.9249999999998028e-05...</msg>
<status status="PASS" starttime="20201029 18:26:42.032" endtime="20201029 18:26:42.035"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:26:42.039" level="INFO">NAME: accuracy-TIMER_SET-25-philip</msg>
<status status="PASS" starttime="20201029 18:26:42.038" endtime="20201029 18:26:42.039"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:26:42.042" level="INFO">VALUE: [2.9792000000000707e-05, 2.9971999999999638e-05, 2.9736000000002427e-05, 2.9527999999997417e-05, 2.9707999999999818e-05, 2.9971999999999638e-05, 3.0042000000000957e-05, 2.9249999999998028e-05, 3.0125000000002372e-05, 2.922299999999836e-05, 2.9819000000000373e-05, 2.9542000000000457e-05, 2.9819999999999847e-05, 2.9583999999999167e-05, 2.9610999999998833e-05, 2.940199999999782e-05, 2.9305999999999777e-05, 2.9472000000002607e-05, 2.9625000000001872e-05, 2.9348000000001956e-05, 2.9763999999998098e-05, 3.0027999999997917e-05, 2.9458000000003037e-05, 2.9749999999998528e-05, 2.9819999999999847e-05, 2.9832999999999943e-05, 2.9777000000001663e-05, 2.9305000000000303e-05, 2.9207999999999318e-05, 2.9971999999999638e-05, 2.9653000000001012e-05, 3.0013999999998348e-05, 2.9264000000001067e-05, 2.966599999999764e-05, 2.9999999999998778e-05, 2.9667000000000582e-05, 3.020899999999979e-05, 2.9846999999999513e-05, 2.9792000000000707e-05, 2.9806000000000277e-05, 3.0181000000000652e-05, 2.9778000000001137e-05, 2.9263999999997597e-05, 3.0083000000000193e-05, 2.9833999999999417e-05, 2.9305999999999777e-05, 2.9874999999998653e-05, 2.9902999999997792e-05, 2.9361000000002052e-05, 2.998699999999868e-05]</msg>
<status status="PASS" starttime="20201029 18:26:42.040" endtime="20201029 18:26:42.043"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:42.036" endtime="20201029 18:26:42.044"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:26:42.047" endtime="20201029 18:26:42.067"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:42.046" endtime="20201029 18:26:42.067"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:42.045" endtime="20201029 18:26:42.067"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:41.689" endtime="20201029 18:26:42.068"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:41.688" endtime="20201029 18:26:42.068"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:42.076" endtime="20201029 18:26:42.091"></status>
</kw>
<msg timestamp="20201029 18:26:42.092" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:26:42.075" endtime="20201029 18:26:42.092"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:26:42.094" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:26:42.093" endtime="20201029 18:26:42.094"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:42.095" endtime="20201029 18:26:42.097"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:42.072" endtime="20201029 18:26:42.097"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:42.070" endtime="20201029 18:26:42.098"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:42.104" endtime="20201029 18:26:42.390"></status>
</kw>
<msg timestamp="20201029 18:26:42.393" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019287111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019317375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:26:42.102" endtime="20201029 18:26:42.393"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:26:42.401" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019287111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019317375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:26:42.394" endtime="20201029 18:26:42.401"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:42.402" endtime="20201029 18:26:42.404"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:42.100" endtime="20201029 18:26:42.404"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:42.098" endtime="20201029 18:26:42.405"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:26:42.409" level="INFO">${RESULT} = [{'diff': 3.0264000000002067e-05}, {'diff': 3.0360999999999583e-05}, {'diff': 3.111100000000033e-05}, {'diff': 3.0430999999997432e-05}, {'diff': 3.065299999999854e-05}, {'diff': 3.0417000000001332e-05...</msg>
<status status="PASS" starttime="20201029 18:26:42.405" endtime="20201029 18:26:42.409"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:26:42.414" level="INFO">${ACCURACY} = {'diff': [3.0264000000002067e-05, 3.0360999999999583e-05, 3.111100000000033e-05, 3.0430999999997432e-05, 3.065299999999854e-05, 3.0417000000001332e-05, 3.082000000000085e-05, 3.070900000000029e-05, 3....</msg>
<status status="PASS" starttime="20201029 18:26:42.410" endtime="20201029 18:26:42.414"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:26:42.418" level="INFO">NAME: accuracy-TIMER_SET-26-philip</msg>
<status status="PASS" starttime="20201029 18:26:42.417" endtime="20201029 18:26:42.418"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:26:42.420" level="INFO">VALUE: [3.0264000000002067e-05, 3.0360999999999583e-05, 3.111100000000033e-05, 3.0430999999997432e-05, 3.065299999999854e-05, 3.0417000000001332e-05, 3.082000000000085e-05, 3.070900000000029e-05, 3.038799999999925e-05, 3.0499999999999278e-05, 3.115300000000251e-05, 3.074999999999953e-05, 3.1098000000000237e-05, 3.074999999999953e-05, 3.0319999999996877e-05, 3.093000000000193e-05, 3.0790999999998764e-05, 3.1040999999999014e-05, 3.0276999999998694e-05, 3.063899999999897e-05, 3.113899999999947e-05, 3.0305000000001303e-05, 3.098600000000021e-05, 3.0235999999999458e-05, 3.097200000000064e-05, 3.102799999999892e-05, 3.0472000000000138e-05, 3.0319000000000873e-05, 3.0306000000000777e-05, 3.056900000000112e-05, 3.10700000000011e-05, 3.118099999999818e-05, 3.118100000000165e-05, 3.0375000000002622e-05, 3.072200000000039e-05, 3.086100000000008e-05, 3.044500000000047e-05, 3.0402000000002288e-05, 3.0513999999998848e-05, 3.11249999999999e-05, 3.0249999999999028e-05, 3.063899999999897e-05, 3.0513999999998848e-05, 3.090199999999932e-05, 3.0512999999999374e-05, 3.058300000000069e-05, 3.0306000000000777e-05, 3.0263999999998598e-05, 3.041599999999839e-05, 3.058300000000069e-05]</msg>
<status status="PASS" starttime="20201029 18:26:42.419" endtime="20201029 18:26:42.421"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:42.414" endtime="20201029 18:26:42.422"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:26:42.425" endtime="20201029 18:26:42.445"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:42.424" endtime="20201029 18:26:42.445"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:42.423" endtime="20201029 18:26:42.446"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:42.069" endtime="20201029 18:26:42.446"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:42.068" endtime="20201029 18:26:42.446"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:42.455" endtime="20201029 18:26:42.471"></status>
</kw>
<msg timestamp="20201029 18:26:42.471" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:26:42.453" endtime="20201029 18:26:42.472"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:26:42.474" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:26:42.473" endtime="20201029 18:26:42.474"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:42.475" endtime="20201029 18:26:42.476"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:42.450" endtime="20201029 18:26:42.477"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:42.448" endtime="20201029 18:26:42.477"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:42.484" endtime="20201029 18:26:42.770"></status>
</kw>
<msg timestamp="20201029 18:26:42.773" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019910806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019942819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:26:42.482" endtime="20201029 18:26:42.774"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:26:42.781" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019910806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019942819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:26:42.775" endtime="20201029 18:26:42.782"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:42.783" endtime="20201029 18:26:42.784"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:42.480" endtime="20201029 18:26:42.785"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:42.478" endtime="20201029 18:26:42.785"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:26:42.789" level="INFO">${RESULT} = [{'diff': 3.2013000000000874e-05}, {'diff': 3.216600000000014e-05}, {'diff': 3.169400000000225e-05}, {'diff': 3.2068999999999154e-05}, {'diff': 3.197200000000164e-05}, {'diff': 3.204199999999949e-05},...</msg>
<status status="PASS" starttime="20201029 18:26:42.786" endtime="20201029 18:26:42.789"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:26:42.793" level="INFO">${ACCURACY} = {'diff': [3.2013000000000874e-05, 3.216600000000014e-05, 3.169400000000225e-05, 3.2068999999999154e-05, 3.197200000000164e-05, 3.204199999999949e-05, 3.2082999999998724e-05, 3.168099999999868e-05, 3.1...</msg>
<status status="PASS" starttime="20201029 18:26:42.790" endtime="20201029 18:26:42.793"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:26:42.797" level="INFO">NAME: accuracy-TIMER_SET-27-philip</msg>
<status status="PASS" starttime="20201029 18:26:42.796" endtime="20201029 18:26:42.798"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:26:42.800" level="INFO">VALUE: [3.2013000000000874e-05, 3.216600000000014e-05, 3.169400000000225e-05, 3.2068999999999154e-05, 3.197200000000164e-05, 3.204199999999949e-05, 3.2082999999998724e-05, 3.168099999999868e-05, 3.190299999999979e-05, 3.184700000000151e-05, 3.17640000000001e-05, 3.127799999999917e-05, 3.125000000000003e-05, 3.215300000000004e-05, 3.125000000000003e-05, 3.145900000000104e-05, 3.138899999999972e-05, 3.158300000000169e-05, 3.125000000000003e-05, 3.195900000000154e-05, 3.198600000000121e-05, 3.172299999999739e-05, 3.216699999999961e-05, 3.138800000000025e-05, 3.183400000000142e-05, 3.158400000000117e-05, 3.21250000000009e-05, 3.125000000000003e-05, 3.134700000000101e-05, 3.147199999999767e-05, 3.140199999999982e-05, 3.136100000000058e-05, 3.190299999999979e-05, 3.138899999999972e-05, 3.127799999999917e-05, 3.120799999999785e-05, 3.194399999999903e-05, 3.204199999999949e-05, 3.197200000000164e-05, 3.180599999999881e-05, 3.138899999999972e-05, 3.122200000000089e-05, 3.132000000000135e-05, 3.127799999999917e-05, 3.1846999999998044e-05, 3.2082999999998724e-05, 3.208400000000167e-05, 3.1348000000000487e-05, 3.187500000000065e-05, 3.183400000000142e-05]</msg>
<status status="PASS" starttime="20201029 18:26:42.799" endtime="20201029 18:26:42.801"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:42.794" endtime="20201029 18:26:42.801"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:26:42.805" endtime="20201029 18:26:42.824"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:42.803" endtime="20201029 18:26:42.825"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:42.802" endtime="20201029 18:26:42.825"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:42.447" endtime="20201029 18:26:42.825"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:42.446" endtime="20201029 18:26:42.826"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:42.834" endtime="20201029 18:26:42.852"></status>
</kw>
<msg timestamp="20201029 18:26:42.852" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:26:42.833" endtime="20201029 18:26:42.852"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:26:42.855" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:26:42.853" endtime="20201029 18:26:42.855"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:42.856" endtime="20201029 18:26:42.857"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:42.830" endtime="20201029 18:26:42.858"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:42.828" endtime="20201029 18:26:42.858"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:42.865" endtime="20201029 18:26:43.150"></status>
</kw>
<msg timestamp="20201029 18:26:43.153" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020862667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02089575, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:26:42.863" endtime="20201029 18:26:43.153"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:26:43.161" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020862667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02089575, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:26:43.154" endtime="20201029 18:26:43.161"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:43.162" endtime="20201029 18:26:43.164"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:42.860" endtime="20201029 18:26:43.164"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:42.859" endtime="20201029 18:26:43.165"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:26:43.168" level="INFO">${RESULT} = [{'diff': 3.3082999999999724e-05}, {'diff': 3.3082999999999724e-05}, {'diff': 3.242999999999996e-05}, {'diff': 3.265300000000054e-05}, {'diff': 3.2541000000000514e-05}, {'diff': 3.3082999999999724e-05...</msg>
<status status="PASS" starttime="20201029 18:26:43.165" endtime="20201029 18:26:43.169"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:26:43.172" level="INFO">${ACCURACY} = {'diff': [3.3082999999999724e-05, 3.3082999999999724e-05, 3.242999999999996e-05, 3.265300000000054e-05, 3.2541000000000514e-05, 3.3082999999999724e-05, 3.236100000000158e-05, 3.2596999999998794e-05, 3...</msg>
<status status="PASS" starttime="20201029 18:26:43.169" endtime="20201029 18:26:43.173"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:26:43.177" level="INFO">NAME: accuracy-TIMER_SET-28-philip</msg>
<status status="PASS" starttime="20201029 18:26:43.176" endtime="20201029 18:26:43.177"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:26:43.179" level="INFO">VALUE: [3.3082999999999724e-05, 3.3082999999999724e-05, 3.242999999999996e-05, 3.265300000000054e-05, 3.2541000000000514e-05, 3.3082999999999724e-05, 3.236100000000158e-05, 3.2596999999998794e-05, 3.2582999999999224e-05, 3.269499999999925e-05, 3.238900000000072e-05, 3.222199999999842e-05, 3.2818999999999904e-05, 3.240300000000029e-05, 3.219499999999875e-05, 3.2832999999999474e-05, 3.256999999999913e-05, 3.255599999999956e-05, 3.3138999999998e-05, 3.291700000000036e-05, 3.297300000000211e-05, 3.297299999999864e-05, 3.248600000000171e-05, 3.2526999999997475e-05, 3.247300000000161e-05, 3.288900000000122e-05, 3.275000000000153e-05, 3.316599999999767e-05, 3.2318999999999404e-05, 3.3055000000000584e-05, 3.297200000000264e-05, 3.268000000000021e-05, 3.241600000000039e-05, 3.237500000000115e-05, 3.299999999999831e-05, 3.286100000000208e-05, 3.29579999999996e-05, 3.316700000000061e-05, 3.255599999999956e-05, 3.243099999999943e-05, 3.319499999999975e-05, 3.269499999999925e-05, 3.243099999999943e-05, 3.300000000000178e-05, 3.259800000000174e-05, 3.288900000000122e-05, 3.3124999999998433e-05, 3.298700000000168e-05, 3.26250000000014e-05, 3.2612000000001307e-05]</msg>
<status status="PASS" starttime="20201029 18:26:43.178" endtime="20201029 18:26:43.181"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:43.173" endtime="20201029 18:26:43.181"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:26:43.185" endtime="20201029 18:26:43.204"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:43.184" endtime="20201029 18:26:43.205"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:43.182" endtime="20201029 18:26:43.205"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:42.826" endtime="20201029 18:26:43.206"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:42.826" endtime="20201029 18:26:43.206"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:43.214" endtime="20201029 18:26:43.230"></status>
</kw>
<msg timestamp="20201029 18:26:43.230" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:26:43.213" endtime="20201029 18:26:43.230"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:26:43.233" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:26:43.231" endtime="20201029 18:26:43.233"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:43.234" endtime="20201029 18:26:43.235"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:43.210" endtime="20201029 18:26:43.236"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:43.208" endtime="20201029 18:26:43.236"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:43.243" endtime="20201029 18:26:43.528"></status>
</kw>
<msg timestamp="20201029 18:26:43.531" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019294069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019327722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:26:43.241" endtime="20201029 18:26:43.531"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:26:43.539" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019294069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019327722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:26:43.532" endtime="20201029 18:26:43.539"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:43.540" endtime="20201029 18:26:43.541"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:43.238" endtime="20201029 18:26:43.542"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:43.237" endtime="20201029 18:26:43.542"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:26:43.546" level="INFO">${RESULT} = [{'diff': 3.365299999999807e-05}, {'diff': 3.322199999999942e-05}, {'diff': 3.3874999999999184e-05}, {'diff': 3.388900000000222e-05}, {'diff': 3.394400000000103e-05}, {'diff': 3.377800000000167e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:26:43.543" endtime="20201029 18:26:43.546"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:26:43.551" level="INFO">${ACCURACY} = {'diff': [3.365299999999807e-05, 3.322199999999942e-05, 3.3874999999999184e-05, 3.388900000000222e-05, 3.394400000000103e-05, 3.377800000000167e-05, 3.341700000000086e-05, 3.347199999999967e-05, 3.340...</msg>
<status status="PASS" starttime="20201029 18:26:43.547" endtime="20201029 18:26:43.551"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:26:43.556" level="INFO">NAME: accuracy-TIMER_SET-29-philip</msg>
<status status="PASS" starttime="20201029 18:26:43.555" endtime="20201029 18:26:43.556"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:26:43.558" level="INFO">VALUE: [3.365299999999807e-05, 3.322199999999942e-05, 3.3874999999999184e-05, 3.388900000000222e-05, 3.394400000000103e-05, 3.377800000000167e-05, 3.341700000000086e-05, 3.347199999999967e-05, 3.340299999999782e-05, 3.372199999999992e-05, 3.39580000000006e-05, 3.382000000000038e-05, 3.419500000000075e-05, 3.380600000000081e-05, 3.4152999999998573e-05, 3.374999999999906e-05, 3.347299999999914e-05, 3.357000000000013e-05, 3.325000000000203e-05, 3.377800000000167e-05, 3.3874999999999184e-05, 3.365299999999807e-05, 3.3512999999998905e-05, 3.3596999999999794e-05, 3.374999999999906e-05, 3.3874999999999184e-05, 3.4055000000001584e-05, 3.3624999999998934e-05, 3.4124999999999434e-05, 3.3874999999999184e-05, 3.336199999999859e-05, 3.372199999999992e-05, 3.380600000000081e-05, 3.387500000000265e-05, 3.39580000000006e-05, 3.397200000000017e-05, 3.419499999999728e-05, 3.369500000000025e-05, 3.365300000000154e-05, 3.323600000000246e-05, 3.397299999999964e-05, 3.331999999999988e-05, 3.415300000000204e-05, 3.3346999999999544e-05, 3.4110999999999864e-05, 3.370800000000035e-05, 3.3319000000000404e-05, 3.393000000000146e-05, 3.34580000000001e-05, 3.348599999999924e-05]</msg>
<status status="PASS" starttime="20201029 18:26:43.557" endtime="20201029 18:26:43.559"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:43.552" endtime="20201029 18:26:43.559"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:26:43.563" endtime="20201029 18:26:43.583"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:43.562" endtime="20201029 18:26:43.583"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:43.560" endtime="20201029 18:26:43.583"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:43.207" endtime="20201029 18:26:43.584"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:43.206" endtime="20201029 18:26:43.584"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:43.592" endtime="20201029 18:26:43.607"></status>
</kw>
<msg timestamp="20201029 18:26:43.608" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:26:43.591" endtime="20201029 18:26:43.608"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:26:43.610" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:26:43.609" endtime="20201029 18:26:43.611"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:43.611" endtime="20201029 18:26:43.613"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:43.588" endtime="20201029 18:26:43.613"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:43.586" endtime="20201029 18:26:43.614"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:43.620" endtime="20201029 18:26:43.907"></status>
</kw>
<msg timestamp="20201029 18:26:43.910" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019309847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019344236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:26:43.619" endtime="20201029 18:26:43.910"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:26:43.918" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019309847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019344236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:26:43.911" endtime="20201029 18:26:43.919"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:43.919" endtime="20201029 18:26:43.921"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:43.616" endtime="20201029 18:26:43.922"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:43.614" endtime="20201029 18:26:43.922"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:26:43.926" level="INFO">${RESULT} = [{'diff': 3.4388999999999253e-05}, {'diff': 3.4833000000001474e-05}, {'diff': 3.5068999999998685e-05}, {'diff': 3.452800000000242e-05}, {'diff': 3.47779999999992e-05}, {'diff': 3.507000000000163e-05},...</msg>
<status status="PASS" starttime="20201029 18:26:43.923" endtime="20201029 18:26:43.926"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:26:43.930" level="INFO">${ACCURACY} = {'diff': [3.4388999999999253e-05, 3.4833000000001474e-05, 3.5068999999998685e-05, 3.452800000000242e-05, 3.47779999999992e-05, 3.507000000000163e-05, 3.452799999999895e-05, 3.4611000000000364e-05, 3.5...</msg>
<status status="PASS" starttime="20201029 18:26:43.927" endtime="20201029 18:26:43.930"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:26:43.935" level="INFO">NAME: accuracy-TIMER_SET-30-philip</msg>
<status status="PASS" starttime="20201029 18:26:43.934" endtime="20201029 18:26:43.935"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:26:43.937" level="INFO">VALUE: [3.4388999999999253e-05, 3.4833000000001474e-05, 3.5068999999998685e-05, 3.452800000000242e-05, 3.47779999999992e-05, 3.507000000000163e-05, 3.452799999999895e-05, 3.4611000000000364e-05, 3.501399999999988e-05, 3.519499999999828e-05, 3.5124999999996964e-05, 3.500000000000031e-05, 3.45840000000007e-05, 3.4638999999999504e-05, 3.518000000000271e-05, 3.5139000000000004e-05, 3.484800000000052e-05, 3.449999999999981e-05, 3.4804999999998865e-05, 3.4555000000002084e-05, 3.4541000000002514e-05, 3.473600000000049e-05, 3.502799999999945e-05, 3.4318999999997934e-05, 3.4624999999999934e-05, 3.505600000000206e-05, 3.452799999999895e-05, 3.443100000000143e-05, 3.505599999999859e-05, 3.476399999999963e-05, 3.4638999999999504e-05, 3.477800000000267e-05, 3.427800000000217e-05, 3.430600000000131e-05, 3.493099999999846e-05, 3.498599999999727e-05, 3.448699999999971e-05, 3.424999999999956e-05, 3.434800000000002e-05, 3.4290999999998795e-05, 3.4512999999999905e-05, 3.4902999999999323e-05, 3.470800000000135e-05, 3.4554999999998615e-05, 3.490199999999985e-05, 3.4597000000000794e-05, 3.447200000000067e-05, 3.5124999999996964e-05, 3.4333000000000974e-05, 3.501399999999988e-05]</msg>
<status status="PASS" starttime="20201029 18:26:43.936" endtime="20201029 18:26:43.938"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:43.931" endtime="20201029 18:26:43.938"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:26:43.942" endtime="20201029 18:26:43.961"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:43.940" endtime="20201029 18:26:43.962"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:43.939" endtime="20201029 18:26:43.962"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:43.585" endtime="20201029 18:26:43.963"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:43.584" endtime="20201029 18:26:43.963"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:43.971" endtime="20201029 18:26:43.988"></status>
</kw>
<msg timestamp="20201029 18:26:43.988" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:26:43.970" endtime="20201029 18:26:43.988"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:26:43.991" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:26:43.989" endtime="20201029 18:26:43.991"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:43.992" endtime="20201029 18:26:43.993"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:43.967" endtime="20201029 18:26:43.994"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:43.965" endtime="20201029 18:26:43.994"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:44.000" endtime="20201029 18:26:44.286"></status>
</kw>
<msg timestamp="20201029 18:26:44.289" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020355139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020390417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:26:43.999" endtime="20201029 18:26:44.290"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:26:44.297" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020355139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020390417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:26:44.291" endtime="20201029 18:26:44.298"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:44.299" endtime="20201029 18:26:44.300"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:43.996" endtime="20201029 18:26:44.301"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:43.995" endtime="20201029 18:26:44.301"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:26:44.305" level="INFO">${RESULT} = [{'diff': 3.52779999999997e-05}, {'diff': 3.600000000000131e-05}, {'diff': 3.601400000000088e-05}, {'diff': 3.6167000000000143e-05}, {'diff': 3.5416999999999393e-05}, {'diff': 3.5375000000000684e-05},...</msg>
<status status="PASS" starttime="20201029 18:26:44.302" endtime="20201029 18:26:44.305"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:26:44.309" level="INFO">${ACCURACY} = {'diff': [3.52779999999997e-05, 3.600000000000131e-05, 3.601400000000088e-05, 3.6167000000000143e-05, 3.5416999999999393e-05, 3.5375000000000684e-05, 3.573600000000149e-05, 3.580599999999934e-05, 3.56...</msg>
<status status="PASS" starttime="20201029 18:26:44.306" endtime="20201029 18:26:44.309"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:26:44.313" level="INFO">NAME: accuracy-TIMER_SET-31-philip</msg>
<status status="PASS" starttime="20201029 18:26:44.312" endtime="20201029 18:26:44.314"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:26:44.319" level="INFO">VALUE: [3.52779999999997e-05, 3.600000000000131e-05, 3.601400000000088e-05, 3.6167000000000143e-05, 3.5416999999999393e-05, 3.5375000000000684e-05, 3.573600000000149e-05, 3.580599999999934e-05, 3.568099999999921e-05, 3.534800000000102e-05, 3.597300000000164e-05, 3.548599999999777e-05, 3.5639000000000504e-05, 3.5666999999999643e-05, 3.5582999999998755e-05, 3.579199999999977e-05, 3.6026999999997505e-05, 3.545799999999863e-05, 3.526400000000013e-05, 3.5554999999999615e-05, 3.5889000000000754e-05, 3.566600000000017e-05, 3.5305000000002834e-05, 3.59719999999987e-05, 3.554200000000299e-05, 3.573599999999802e-05, 3.5611000000001364e-05, 3.5611000000001364e-05, 3.569399999999931e-05, 3.605599999999959e-05, 3.570900000000182e-05, 3.556999999999866e-05, 3.569499999999878e-05, 3.5360999999997644e-05, 3.5916999999999893e-05, 3.594499999999903e-05, 3.5889000000000754e-05, 3.580599999999934e-05, 3.588799999999781e-05, 3.5568999999999185e-05, 3.532000000000188e-05, 3.6026999999997505e-05, 3.6139000000001004e-05, 3.569399999999931e-05, 3.6055000000000115e-05, 3.6055000000000115e-05, 3.598599999999827e-05, 3.5375000000000684e-05, 3.5903000000000324e-05, 3.5374999999997214e-05]</msg>
<status status="PASS" starttime="20201029 18:26:44.315" endtime="20201029 18:26:44.320"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:44.310" endtime="20201029 18:26:44.320"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:26:44.324" endtime="20201029 18:26:44.343"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:44.323" endtime="20201029 18:26:44.344"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:44.321" endtime="20201029 18:26:44.344"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:43.964" endtime="20201029 18:26:44.345"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:43.963" endtime="20201029 18:26:44.345"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:44.353" endtime="20201029 18:26:44.368"></status>
</kw>
<msg timestamp="20201029 18:26:44.369" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:26:44.352" endtime="20201029 18:26:44.369"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:26:44.371" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:26:44.370" endtime="20201029 18:26:44.372"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:44.372" endtime="20201029 18:26:44.374"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:44.349" endtime="20201029 18:26:44.374"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:44.347" endtime="20201029 18:26:44.375"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:44.381" endtime="20201029 18:26:44.666"></status>
</kw>
<msg timestamp="20201029 18:26:44.669" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019219944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019256972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:26:44.380" endtime="20201029 18:26:44.670"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:26:44.677" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019219944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019256972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:26:44.670" endtime="20201029 18:26:44.678"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:44.679" endtime="20201029 18:26:44.680"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:44.377" endtime="20201029 18:26:44.681"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:44.375" endtime="20201029 18:26:44.681"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:26:44.685" level="INFO">${RESULT} = [{'diff': 3.702800000000145e-05}, {'diff': 3.6653000000001074e-05}, {'diff': 3.6819000000000435e-05}, {'diff': 3.676399999999816e-05}, {'diff': 3.6402999999997354e-05}, {'diff': 3.6846999999999575e-05...</msg>
<status status="PASS" starttime="20201029 18:26:44.682" endtime="20201029 18:26:44.685"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:26:44.690" level="INFO">${ACCURACY} = {'diff': [3.702800000000145e-05, 3.6653000000001074e-05, 3.6819000000000435e-05, 3.676399999999816e-05, 3.6402999999997354e-05, 3.6846999999999575e-05, 3.7124999999998964e-05, 3.673599999999902e-05, 3...</msg>
<status status="PASS" starttime="20201029 18:26:44.686" endtime="20201029 18:26:44.690"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:26:44.694" level="INFO">NAME: accuracy-TIMER_SET-32-philip</msg>
<status status="PASS" starttime="20201029 18:26:44.693" endtime="20201029 18:26:44.695"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:26:44.697" level="INFO">VALUE: [3.702800000000145e-05, 3.6653000000001074e-05, 3.6819000000000435e-05, 3.676399999999816e-05, 3.6402999999997354e-05, 3.6846999999999575e-05, 3.7124999999998964e-05, 3.673599999999902e-05, 3.6361000000002114e-05, 3.652799999999748e-05, 3.7110999999999394e-05, 3.6667000000000644e-05, 3.6526999999998006e-05, 3.699999999999884e-05, 3.702800000000145e-05, 3.647300000000214e-05, 3.62780000000007e-05, 3.630599999999984e-05, 3.668000000000074e-05, 3.7110999999999394e-05, 3.6596999999999325e-05, 3.6776999999998256e-05, 3.6555000000000615e-05, 3.6374999999998214e-05, 3.6568999999996715e-05, 3.6332999999999505e-05, 3.69719999999997e-05, 3.669400000000031e-05, 3.648599999999877e-05, 3.7110999999999394e-05, 3.676399999999816e-05, 3.654200000000052e-05, 3.704200000000102e-05, 3.708399999999973e-05, 3.7166999999997674e-05, 3.6639000000001504e-05, 3.6667000000000644e-05, 3.6388999999997784e-05, 3.694400000000056e-05, 3.680600000000034e-05, 3.679200000000077e-05, 3.694400000000056e-05, 3.7195000000000283e-05, 3.6375000000001684e-05, 3.6819000000000435e-05, 3.688799999999881e-05, 3.66520000000016e-05, 3.69719999999997e-05, 3.640200000000135e-05, 3.623599999999852e-05]</msg>
<status status="PASS" starttime="20201029 18:26:44.696" endtime="20201029 18:26:44.698"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:44.691" endtime="20201029 18:26:44.698"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:26:44.702" endtime="20201029 18:26:44.721"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:44.700" endtime="20201029 18:26:44.722"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:44.699" endtime="20201029 18:26:44.722"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:44.346" endtime="20201029 18:26:44.722"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:44.345" endtime="20201029 18:26:44.723"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:44.732" endtime="20201029 18:26:44.749"></status>
</kw>
<msg timestamp="20201029 18:26:44.749" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:26:44.730" endtime="20201029 18:26:44.750"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:26:44.752" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:26:44.751" endtime="20201029 18:26:44.752"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:44.753" endtime="20201029 18:26:44.755"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:44.727" endtime="20201029 18:26:44.755"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:44.725" endtime="20201029 18:26:44.756"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:44.762" endtime="20201029 18:26:45.056"></status>
</kw>
<msg timestamp="20201029 18:26:45.060" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020719389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020756778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:26:44.760" endtime="20201029 18:26:45.060"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:26:45.069" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020719389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020756778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:26:45.061" endtime="20201029 18:26:45.070"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:45.071" endtime="20201029 18:26:45.072"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:44.758" endtime="20201029 18:26:45.073"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:44.756" endtime="20201029 18:26:45.073"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:26:45.077" level="INFO">${RESULT} = [{'diff': 3.7388999999998784e-05}, {'diff': 3.7681000000001214e-05}, {'diff': 3.7847000000000575e-05}, {'diff': 3.7416999999997924e-05}, {'diff': 3.801400000000288e-05}, {'diff': 3.726399999999866e-05...</msg>
<status status="PASS" starttime="20201029 18:26:45.074" endtime="20201029 18:26:45.077"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:26:45.081" level="INFO">${ACCURACY} = {'diff': [3.7388999999998784e-05, 3.7681000000001214e-05, 3.7847000000000575e-05, 3.7416999999997924e-05, 3.801400000000288e-05, 3.726399999999866e-05, 3.723699999999899e-05, 3.7319000000000935e-05, 3...</msg>
<status status="PASS" starttime="20201029 18:26:45.078" endtime="20201029 18:26:45.081"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:26:45.085" level="INFO">NAME: accuracy-TIMER_SET-33-philip</msg>
<status status="PASS" starttime="20201029 18:26:45.085" endtime="20201029 18:26:45.086"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:26:45.088" level="INFO">VALUE: [3.7388999999998784e-05, 3.7681000000001214e-05, 3.7847000000000575e-05, 3.7416999999997924e-05, 3.801400000000288e-05, 3.726399999999866e-05, 3.723699999999899e-05, 3.7319000000000935e-05, 3.783400000000048e-05, 3.7861000000000145e-05, 3.8124999999999964e-05, 3.793000000000199e-05, 3.8124999999999964e-05, 3.774999999999959e-05, 3.74720000000002e-05, 3.8124999999999964e-05, 3.8111000000000395e-05, 3.802799999999898e-05, 3.8068999999998215e-05, 3.7305000000001365e-05, 3.7860999999996675e-05, 3.7403000000001824e-05, 3.779200000000177e-05, 3.726399999999866e-05, 3.801399999999941e-05, 3.7944999999997564e-05, 3.770900000000035e-05, 3.723599999999952e-05, 3.7695000000000783e-05, 3.774999999999959e-05, 3.8054999999998645e-05, 3.765199999999913e-05, 3.7569000000001185e-05, 3.775000000000306e-05, 3.7790999999998826e-05, 3.788799999999981e-05, 3.8082999999997785e-05, 3.793000000000199e-05, 3.7291000000001795e-05, 3.770800000000088e-05, 3.720800000000038e-05, 3.7638999999999034e-05, 3.7902999999998854e-05, 3.7903000000002324e-05, 3.738800000000278e-05, 3.8124999999999964e-05, 3.773600000000002e-05, 3.7319000000000935e-05, 3.748599999999977e-05, 3.7902999999998854e-05]</msg>
<status status="PASS" starttime="20201029 18:26:45.087" endtime="20201029 18:26:45.089"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:45.082" endtime="20201029 18:26:45.089"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:26:45.093" endtime="20201029 18:26:45.112"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:45.091" endtime="20201029 18:26:45.113"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:45.090" endtime="20201029 18:26:45.113"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:44.723" endtime="20201029 18:26:45.113"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:44.723" endtime="20201029 18:26:45.114"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:45.122" endtime="20201029 18:26:45.139"></status>
</kw>
<msg timestamp="20201029 18:26:45.139" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:26:45.120" endtime="20201029 18:26:45.139"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:26:45.142" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:26:45.140" endtime="20201029 18:26:45.142"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:45.143" endtime="20201029 18:26:45.144"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:45.118" endtime="20201029 18:26:45.145"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:45.116" endtime="20201029 18:26:45.145"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:45.152" endtime="20201029 18:26:45.438"></status>
</kw>
<msg timestamp="20201029 18:26:45.441" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020303, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020342014, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:26:45.150" endtime="20201029 18:26:45.441"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:26:45.449" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020303, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020342014, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:26:45.442" endtime="20201029 18:26:45.449"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:45.450" endtime="20201029 18:26:45.452"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:45.148" endtime="20201029 18:26:45.452"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:45.146" endtime="20201029 18:26:45.453"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:26:45.457" level="INFO">${RESULT} = [{'diff': 3.901399999999694e-05}, {'diff': 3.831999999999794e-05}, {'diff': 3.850000000000034e-05}, {'diff': 3.9096999999998355e-05}, {'diff': 3.904199999999955e-05}, {'diff': 3.851399999999991e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:26:45.453" endtime="20201029 18:26:45.457"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:26:45.461" level="INFO">${ACCURACY} = {'diff': [3.901399999999694e-05, 3.831999999999794e-05, 3.850000000000034e-05, 3.9096999999998355e-05, 3.904199999999955e-05, 3.851399999999991e-05, 3.8652999999999604e-05, 3.8209000000000853e-05, 3.8...</msg>
<status status="PASS" starttime="20201029 18:26:45.458" endtime="20201029 18:26:45.461"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:26:45.465" level="INFO">NAME: accuracy-TIMER_SET-34-philip</msg>
<status status="PASS" starttime="20201029 18:26:45.464" endtime="20201029 18:26:45.465"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:26:45.467" level="INFO">VALUE: [3.901399999999694e-05, 3.831999999999794e-05, 3.850000000000034e-05, 3.9096999999998355e-05, 3.904199999999955e-05, 3.851399999999991e-05, 3.8652999999999604e-05, 3.8209000000000853e-05, 3.879200000000277e-05, 3.865200000000013e-05, 3.874999999999712e-05, 3.873599999999755e-05, 3.843000000000249e-05, 3.841599999999945e-05, 3.823600000000052e-05, 3.8875000000000715e-05, 3.8597000000001325e-05, 3.826399999999966e-05, 3.902799999999998e-05, 3.873600000000102e-05, 3.844400000000206e-05, 3.855600000000209e-05, 3.855599999999862e-05, 3.8694999999998314e-05, 3.872200000000145e-05, 3.854199999999905e-05, 3.8889000000000284e-05, 3.8875000000000715e-05, 3.8916999999999424e-05, 3.876400000000016e-05, 3.888799999999734e-05, 3.8554999999999146e-05, 3.9054999999999646e-05, 3.8346999999997605e-05, 3.8305000000002365e-05, 3.9041000000000076e-05, 3.895800000000213e-05, 3.898600000000127e-05, 3.8832999999998535e-05, 3.8388999999999784e-05, 3.8652999999999604e-05, 3.87919999999993e-05, 3.8639000000000034e-05, 3.8360999999997175e-05, 3.9180999999999244e-05, 3.875000000000059e-05, 3.830599999999837e-05, 3.851399999999991e-05, 3.82919999999988e-05, 3.9097000000001825e-05]</msg>
<status status="PASS" starttime="20201029 18:26:45.466" endtime="20201029 18:26:45.469"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:45.462" endtime="20201029 18:26:45.470"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:26:45.473" endtime="20201029 18:26:45.493"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:45.472" endtime="20201029 18:26:45.493"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:45.470" endtime="20201029 18:26:45.494"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:45.114" endtime="20201029 18:26:45.494"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:45.114" endtime="20201029 18:26:45.494"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:45.502" endtime="20201029 18:26:45.519"></status>
</kw>
<msg timestamp="20201029 18:26:45.519" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:26:45.501" endtime="20201029 18:26:45.520"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:26:45.522" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:26:45.520" endtime="20201029 18:26:45.522"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:45.523" endtime="20201029 18:26:45.525"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:45.498" endtime="20201029 18:26:45.525"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:45.496" endtime="20201029 18:26:45.526"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:45.532" endtime="20201029 18:26:45.819"></status>
</kw>
<msg timestamp="20201029 18:26:45.822" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019296014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019335583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:26:45.530" endtime="20201029 18:26:45.822"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:26:45.830" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019296014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019335583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:26:45.823" endtime="20201029 18:26:45.830"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:45.831" endtime="20201029 18:26:45.833"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:45.528" endtime="20201029 18:26:45.833"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:45.526" endtime="20201029 18:26:45.833"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:26:45.837" level="INFO">${RESULT} = [{'diff': 3.9568999999999716e-05}, {'diff': 3.9596999999998855e-05}, {'diff': 3.94859999999983e-05}, {'diff': 3.9403000000000354e-05}, {'diff': 3.927800000000023e-05}, {'diff': 3.920799999999891e-05},...</msg>
<status status="PASS" starttime="20201029 18:26:45.834" endtime="20201029 18:26:45.838"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:26:45.842" level="INFO">${ACCURACY} = {'diff': [3.9568999999999716e-05, 3.9596999999998855e-05, 3.94859999999983e-05, 3.9403000000000354e-05, 3.927800000000023e-05, 3.920799999999891e-05, 3.9610999999998425e-05, 3.972199999999898e-05, 3.9...</msg>
<status status="PASS" starttime="20201029 18:26:45.838" endtime="20201029 18:26:45.843"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:26:45.847" level="INFO">NAME: accuracy-TIMER_SET-35-philip</msg>
<status status="PASS" starttime="20201029 18:26:45.846" endtime="20201029 18:26:45.847"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:26:45.849" level="INFO">VALUE: [3.9568999999999716e-05, 3.9596999999998855e-05, 3.94859999999983e-05, 3.9403000000000354e-05, 3.927800000000023e-05, 3.920799999999891e-05, 3.9610999999998425e-05, 3.972199999999898e-05, 3.9653000000000604e-05, 3.9318999999999465e-05, 3.958400000000223e-05, 3.954200000000005e-05, 3.9472999999998204e-05, 3.9458999999998634e-05, 3.9360999999998175e-05, 4.0152999999997635e-05, 3.9930999999999994e-05, 3.968000000000027e-05, 3.9262999999997716e-05, 3.9569000000003185e-05, 3.9375000000001215e-05, 3.9639000000001035e-05, 4.0139000000001535e-05, 3.9875000000001715e-05, 3.9861000000002145e-05, 3.9902999999997385e-05, 3.944399999999959e-05, 4.001399999999794e-05, 3.9818999999999966e-05, 3.930599999999937e-05, 4.004200000000055e-05, 3.994400000000009e-05, 3.956999999999919e-05, 3.9874999999998245e-05, 3.943000000000002e-05, 3.981999999999944e-05, 3.941600000000045e-05, 4.0125000000001965e-05, 3.9388999999997315e-05, 3.988800000000181e-05, 3.933400000000198e-05, 3.9430999999999494e-05, 4.018000000000077e-05, 4.0027000000001506e-05, 4.0096999999999355e-05, 4.0026999999998036e-05, 4.0027000000001506e-05, 3.9917000000000424e-05, 4.025000000000209e-05, 3.9304999999999896e-05]</msg>
<status status="PASS" starttime="20201029 18:26:45.848" endtime="20201029 18:26:45.850"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:45.843" endtime="20201029 18:26:45.850"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:26:45.854" endtime="20201029 18:26:45.874"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:45.853" endtime="20201029 18:26:45.874"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:45.852" endtime="20201029 18:26:45.874"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:45.495" endtime="20201029 18:26:45.875"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:45.494" endtime="20201029 18:26:45.875"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:45.883" endtime="20201029 18:26:45.900"></status>
</kw>
<msg timestamp="20201029 18:26:45.901" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:26:45.882" endtime="20201029 18:26:45.901"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:26:45.903" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:26:45.902" endtime="20201029 18:26:45.904"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:45.904" endtime="20201029 18:26:45.906"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:45.879" endtime="20201029 18:26:45.906"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:45.877" endtime="20201029 18:26:45.907"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:45.913" endtime="20201029 18:26:46.201"></status>
</kw>
<msg timestamp="20201029 18:26:46.204" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020333333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020373667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:26:45.912" endtime="20201029 18:26:46.204"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:26:46.212" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020333333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020373667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:26:46.205" endtime="20201029 18:26:46.212"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:46.213" endtime="20201029 18:26:46.214"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:45.909" endtime="20201029 18:26:46.215"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:45.907" endtime="20201029 18:26:46.215"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:26:46.219" level="INFO">${RESULT} = [{'diff': 4.033400000000298e-05}, {'diff': 4.084800000000305e-05}, {'diff': 4.107000000000069e-05}, {'diff': 4.097200000000023e-05}, {'diff': 4.119400000000134e-05}, {'diff': 4.066599999999823e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:26:46.216" endtime="20201029 18:26:46.219"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:26:46.223" level="INFO">${ACCURACY} = {'diff': [4.033400000000298e-05, 4.084800000000305e-05, 4.107000000000069e-05, 4.097200000000023e-05, 4.119400000000134e-05, 4.066599999999823e-05, 4.09859999999998e-05, 4.023599999999905e-05, 4.03469...</msg>
<status status="PASS" starttime="20201029 18:26:46.220" endtime="20201029 18:26:46.224"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:26:46.228" level="INFO">NAME: accuracy-TIMER_SET-36-philip</msg>
<status status="PASS" starttime="20201029 18:26:46.227" endtime="20201029 18:26:46.228"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:26:46.230" level="INFO">VALUE: [4.033400000000298e-05, 4.084800000000305e-05, 4.107000000000069e-05, 4.097200000000023e-05, 4.119400000000134e-05, 4.066599999999823e-05, 4.09859999999998e-05, 4.023599999999905e-05, 4.0346999999999605e-05, 4.026400000000166e-05, 4.049999999999887e-05, 4.052799999999801e-05, 4.0417000000000924e-05, 4.0569000000000716e-05, 4.095799999999719e-05, 4.1069000000001216e-05, 4.0610999999999425e-05, 4.077799999999826e-05, 4.126399999999919e-05, 4.030600000000037e-05, 4.0262999999998716e-05, 4.1167000000001674e-05, 4.055600000000062e-05, 4.0430999999997025e-05, 4.030600000000037e-05, 4.065199999999866e-05, 4.101400000000241e-05, 4.088800000000281e-05, 4.04859999999993e-05, 4.070800000000041e-05, 4.109799999999983e-05, 4.0360999999999175e-05, 4.0624999999998995e-05, 4.0305000000000896e-05, 4.0583000000000286e-05, 4.102799999999851e-05, 4.1153000000002105e-05, 4.0583000000000286e-05, 4.0596999999999855e-05, 4.0708999999999884e-05, 4.1083000000000786e-05, 4.0972999999999704e-05, 4.1181000000001244e-05, 4.070800000000041e-05, 4.0639000000002035e-05, 4.083400000000001e-05, 4.105600000000112e-05, 4.0695000000000314e-05, 4.0624999999998995e-05, 4.11799999999983e-05]</msg>
<status status="PASS" starttime="20201029 18:26:46.229" endtime="20201029 18:26:46.235"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:46.224" endtime="20201029 18:26:46.236"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:26:46.239" endtime="20201029 18:26:46.259"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:46.238" endtime="20201029 18:26:46.259"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:46.237" endtime="20201029 18:26:46.259"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:45.876" endtime="20201029 18:26:46.260"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:45.875" endtime="20201029 18:26:46.260"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:46.268" endtime="20201029 18:26:46.285"></status>
</kw>
<msg timestamp="20201029 18:26:46.285" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:26:46.267" endtime="20201029 18:26:46.286"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:26:46.288" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:26:46.286" endtime="20201029 18:26:46.288"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:46.289" endtime="20201029 18:26:46.290"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:46.264" endtime="20201029 18:26:46.291"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:46.262" endtime="20201029 18:26:46.291"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:46.298" endtime="20201029 18:26:46.583"></status>
</kw>
<msg timestamp="20201029 18:26:46.586" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020228236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020270222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:26:46.296" endtime="20201029 18:26:46.586"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:26:46.594" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020228236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020270222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:26:46.587" endtime="20201029 18:26:46.595"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:46.595" endtime="20201029 18:26:46.597"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:46.294" endtime="20201029 18:26:46.597"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:46.292" endtime="20201029 18:26:46.598"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:26:46.602" level="INFO">${RESULT} = [{'diff': 4.19860000000008e-05}, {'diff': 4.172200000000098e-05}, {'diff': 4.1583000000001286e-05}, {'diff': 4.204200000000255e-05}, {'diff': 4.154200000000205e-05}, {'diff': 4.1402999999998885e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:26:46.599" endtime="20201029 18:26:46.602"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:26:46.606" level="INFO">${ACCURACY} = {'diff': [4.19860000000008e-05, 4.172200000000098e-05, 4.1583000000001286e-05, 4.204200000000255e-05, 4.154200000000205e-05, 4.1402999999998885e-05, 4.200000000000037e-05, 4.13059999999979e-05, 4.1695...</msg>
<status status="PASS" starttime="20201029 18:26:46.603" endtime="20201029 18:26:46.606"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:26:46.610" level="INFO">NAME: accuracy-TIMER_SET-37-philip</msg>
<status status="PASS" starttime="20201029 18:26:46.609" endtime="20201029 18:26:46.611"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:26:46.613" level="INFO">VALUE: [4.19860000000008e-05, 4.172200000000098e-05, 4.1583000000001286e-05, 4.204200000000255e-05, 4.154200000000205e-05, 4.1402999999998885e-05, 4.200000000000037e-05, 4.13059999999979e-05, 4.1695000000001314e-05, 4.1875000000000245e-05, 4.1388999999999315e-05, 4.1388999999999315e-05, 4.1944999999998095e-05, 4.176300000000022e-05, 4.148599999999683e-05, 4.143000000000202e-05, 4.1875000000000245e-05, 4.142999999999855e-05, 4.1582999999997816e-05, 4.194400000000209e-05, 4.123600000000005e-05, 4.1403000000002355e-05, 4.177799999999926e-05, 4.2139000000000065e-05, 4.204200000000255e-05, 4.124999999999962e-05, 4.16119999999999e-05, 4.147199999999726e-05, 4.151399999999944e-05, 4.2152999999999635e-05, 4.19860000000008e-05, 4.127800000000223e-05, 4.1666999999998705e-05, 4.2111000000000925e-05, 4.1916999999998955e-05, 4.1318999999997996e-05, 4.1638999999999565e-05, 4.1347000000000605e-05, 4.1832999999998066e-05, 4.1776999999999787e-05, 4.175000000000012e-05, 4.169399999999837e-05, 4.166599999999923e-05, 4.190199999999991e-05, 4.176399999999969e-05, 4.2166999999999205e-05, 4.176399999999969e-05, 4.151399999999944e-05, 4.172200000000098e-05, 4.1610999999996956e-05]</msg>
<status status="PASS" starttime="20201029 18:26:46.611" endtime="20201029 18:26:46.614"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:46.607" endtime="20201029 18:26:46.615"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:26:46.618" endtime="20201029 18:26:46.638"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:46.617" endtime="20201029 18:26:46.638"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:46.616" endtime="20201029 18:26:46.639"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:46.261" endtime="20201029 18:26:46.639"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:46.260" endtime="20201029 18:26:46.639"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:46.648" endtime="20201029 18:26:46.663"></status>
</kw>
<msg timestamp="20201029 18:26:46.663" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:26:46.646" endtime="20201029 18:26:46.663"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:26:46.666" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:26:46.664" endtime="20201029 18:26:46.666"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:46.667" endtime="20201029 18:26:46.668"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:46.644" endtime="20201029 18:26:46.669"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:46.642" endtime="20201029 18:26:46.669"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:46.676" endtime="20201029 18:26:46.963"></status>
</kw>
<msg timestamp="20201029 18:26:46.966" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019330611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019373042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:26:46.674" endtime="20201029 18:26:46.966"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:26:46.974" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019330611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019373042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:26:46.967" endtime="20201029 18:26:46.974"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:46.975" endtime="20201029 18:26:46.977"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:46.671" endtime="20201029 18:26:46.977"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:46.670" endtime="20201029 18:26:46.978"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:26:46.982" level="INFO">${RESULT} = [{'diff': 4.2430999999999025e-05}, {'diff': 4.284799999999811e-05}, {'diff': 4.2986999999997805e-05}, {'diff': 4.31800000000003e-05}, {'diff': 4.225000000000062e-05}, {'diff': 4.2889000000000815e-05},...</msg>
<status status="PASS" starttime="20201029 18:26:46.978" endtime="20201029 18:26:46.982"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:26:46.986" level="INFO">${ACCURACY} = {'diff': [4.2430999999999025e-05, 4.284799999999811e-05, 4.2986999999997805e-05, 4.31800000000003e-05, 4.225000000000062e-05, 4.2889000000000815e-05, 4.291600000000048e-05, 4.225000000000062e-05, 4.27...</msg>
<status status="PASS" starttime="20201029 18:26:46.983" endtime="20201029 18:26:46.987"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:26:46.991" level="INFO">NAME: accuracy-TIMER_SET-38-philip</msg>
<status status="PASS" starttime="20201029 18:26:46.990" endtime="20201029 18:26:46.991"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:26:46.993" level="INFO">VALUE: [4.2430999999999025e-05, 4.284799999999811e-05, 4.2986999999997805e-05, 4.31800000000003e-05, 4.225000000000062e-05, 4.2889000000000815e-05, 4.291600000000048e-05, 4.225000000000062e-05, 4.275000000000112e-05, 4.2625000000000995e-05, 4.277800000000026e-05, 4.252800000000001e-05, 4.302800000000051e-05, 4.2903000000000385e-05, 4.295800000000266e-05, 4.245800000000216e-05, 4.252800000000001e-05, 4.2846999999998636e-05, 4.306999999999922e-05, 4.223600000000105e-05, 4.306999999999922e-05, 4.2222999999997485e-05, 4.305599999999965e-05, 4.22920000000028e-05, 4.2833000000002536e-05, 4.2653000000000135e-05, 4.277700000000079e-05, 4.2333000000002036e-05, 4.248599999999783e-05, 4.240200000000041e-05, 4.2818999999999496e-05, 4.302800000000051e-05, 4.2902999999996916e-05, 4.2417000000002925e-05, 4.242999999999955e-05, 4.3083000000002786e-05, 4.2459000000001634e-05, 4.3110999999998456e-05, 4.28059999999994e-05, 4.2639000000000565e-05, 4.2375000000000745e-05, 4.307000000000269e-05, 4.2223000000000954e-05, 4.2916999999999955e-05, 4.2361000000001175e-05, 4.3167000000000205e-05, 4.2347000000001606e-05, 4.2374999999997276e-05, 4.2402999999999885e-05, 4.2541000000000107e-05]</msg>
<status status="PASS" starttime="20201029 18:26:46.992" endtime="20201029 18:26:46.994"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:46.987" endtime="20201029 18:26:46.995"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:26:46.998" endtime="20201029 18:26:47.018"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:46.997" endtime="20201029 18:26:47.018"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:46.996" endtime="20201029 18:26:47.019"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:46.640" endtime="20201029 18:26:47.019"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:46.639" endtime="20201029 18:26:47.019"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:47.028" endtime="20201029 18:26:47.043"></status>
</kw>
<msg timestamp="20201029 18:26:47.043" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:26:47.026" endtime="20201029 18:26:47.044"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:26:47.046" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:26:47.044" endtime="20201029 18:26:47.046"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:47.047" endtime="20201029 18:26:47.048"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:47.023" endtime="20201029 18:26:47.049"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:47.021" endtime="20201029 18:26:47.049"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:47.056" endtime="20201029 18:26:47.344"></status>
</kw>
<msg timestamp="20201029 18:26:47.347" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019482208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0195255, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:26:47.054" endtime="20201029 18:26:47.348"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:26:47.355" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019482208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0195255, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:26:47.348" endtime="20201029 18:26:47.356"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:47.357" endtime="20201029 18:26:47.358"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:47.052" endtime="20201029 18:26:47.359"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:47.050" endtime="20201029 18:26:47.359"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:26:47.363" level="INFO">${RESULT} = [{'diff': 4.329200000000033e-05}, {'diff': 4.3582999999999816e-05}, {'diff': 4.370799999999994e-05}, {'diff': 4.3638999999998096e-05}, {'diff': 4.3860999999999206e-05}, {'diff': 4.3958999999999665e-05...</msg>
<status status="PASS" starttime="20201029 18:26:47.360" endtime="20201029 18:26:47.363"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:26:47.367" level="INFO">${ACCURACY} = {'diff': [4.329200000000033e-05, 4.3582999999999816e-05, 4.370799999999994e-05, 4.3638999999998096e-05, 4.3860999999999206e-05, 4.3958999999999665e-05, 4.355600000000015e-05, 4.386199999999868e-05, 4....</msg>
<status status="PASS" starttime="20201029 18:26:47.364" endtime="20201029 18:26:47.367"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:26:47.371" level="INFO">NAME: accuracy-TIMER_SET-39-philip</msg>
<status status="PASS" starttime="20201029 18:26:47.370" endtime="20201029 18:26:47.372"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:26:47.374" level="INFO">VALUE: [4.329200000000033e-05, 4.3582999999999816e-05, 4.370799999999994e-05, 4.3638999999998096e-05, 4.3860999999999206e-05, 4.3958999999999665e-05, 4.355600000000015e-05, 4.386199999999868e-05, 4.4195000000000345e-05, 4.4125000000002496e-05, 4.334799999999861e-05, 4.373599999999908e-05, 4.35129999999985e-05, 4.3805000000000927e-05, 4.3596999999999386e-05, 4.33059999999999e-05, 4.3347000000002606e-05, 4.4139000000002065e-05, 4.351400000000144e-05, 4.41939999999974e-05, 4.3846999999999636e-05, 4.400000000000237e-05, 4.373599999999908e-05, 4.3931000000000525e-05, 4.3805000000000927e-05, 4.3332999999999566e-05, 4.381999999999997e-05, 4.356999999999972e-05, 4.333399999999904e-05, 4.4167000000001205e-05, 4.3874999999998776e-05, 4.400000000000237e-05, 4.3318999999999996e-05, 4.41800000000013e-05, 4.322200000000248e-05, 4.324999999999815e-05, 4.3403000000000885e-05, 4.380499999999746e-05, 4.3305000000000426e-05, 4.3833000000000066e-05, 4.404199999999761e-05, 4.4153000000001635e-05, 4.3875000000002246e-05, 4.4083000000000316e-05, 4.3624999999998526e-05, 4.323599999999858e-05, 4.3458999999999165e-05, 4.4180999999997306e-05, 4.3222999999998485e-05, 4.334799999999861e-05]</msg>
<status status="PASS" starttime="20201029 18:26:47.372" endtime="20201029 18:26:47.375"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:47.368" endtime="20201029 18:26:47.375"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:26:47.379" endtime="20201029 18:26:47.398"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:47.377" endtime="20201029 18:26:47.399"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:47.376" endtime="20201029 18:26:47.399"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:47.020" endtime="20201029 18:26:47.399"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:47.019" endtime="20201029 18:26:47.399"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:47.408" endtime="20201029 18:26:47.424"></status>
</kw>
<msg timestamp="20201029 18:26:47.424" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:26:47.406" endtime="20201029 18:26:47.425"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:26:47.427" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:26:47.425" endtime="20201029 18:26:47.427"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:47.428" endtime="20201029 18:26:47.430"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:47.404" endtime="20201029 18:26:47.430"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:47.402" endtime="20201029 18:26:47.430"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:47.437" endtime="20201029 18:26:47.723"></status>
</kw>
<msg timestamp="20201029 18:26:47.726" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020309125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02035375, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:26:47.435" endtime="20201029 18:26:47.726"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:26:47.734" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020309125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02035375, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:26:47.727" endtime="20201029 18:26:47.735"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:47.735" endtime="20201029 18:26:47.737"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:47.433" endtime="20201029 18:26:47.738"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:47.431" endtime="20201029 18:26:47.738"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:26:47.742" level="INFO">${RESULT} = [{'diff': 4.4624999999999526e-05}, {'diff': 4.517999999999883e-05}, {'diff': 4.4388999999998846e-05}, {'diff': 4.4388999999998846e-05}, {'diff': 4.4403000000001885e-05}, {'diff': 4.445800000000069e-05...</msg>
<status status="PASS" starttime="20201029 18:26:47.739" endtime="20201029 18:26:47.742"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:26:47.746" level="INFO">${ACCURACY} = {'diff': [4.4624999999999526e-05, 4.517999999999883e-05, 4.4388999999998846e-05, 4.4388999999998846e-05, 4.4403000000001885e-05, 4.445800000000069e-05, 4.4931000000001525e-05, 4.482000000000097e-05, 4...</msg>
<status status="PASS" starttime="20201029 18:26:47.743" endtime="20201029 18:26:47.746"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:26:47.750" level="INFO">NAME: accuracy-TIMER_SET-40-philip</msg>
<status status="PASS" starttime="20201029 18:26:47.749" endtime="20201029 18:26:47.751"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:26:47.756" level="INFO">VALUE: [4.4624999999999526e-05, 4.517999999999883e-05, 4.4388999999998846e-05, 4.4388999999998846e-05, 4.4403000000001885e-05, 4.445800000000069e-05, 4.4931000000001525e-05, 4.482000000000097e-05, 4.4695000000000845e-05, 4.507000000000122e-05, 4.4374999999999276e-05, 4.49999999999999e-05, 4.4695000000000845e-05, 4.511199999999993e-05, 4.44999999999994e-05, 4.497200000000076e-05, 4.4388999999998846e-05, 4.4833000000001066e-05, 4.443000000000155e-05, 4.476399999999922e-05, 4.4624999999999526e-05, 4.454199999999811e-05, 4.4916999999998486e-05, 4.470800000000094e-05, 4.4347000000000136e-05, 4.477800000000226e-05, 4.477799999999879e-05, 4.49999999999999e-05, 4.497200000000076e-05, 4.4388999999998846e-05, 4.484800000000011e-05, 4.5153000000002635e-05, 4.461199999999943e-05, 4.455499999999821e-05, 4.4667000000001705e-05, 4.476299999999975e-05, 4.466600000000223e-05, 4.501400000000294e-05, 4.497200000000076e-05, 4.422200000000001e-05, 4.5111000000000456e-05, 4.4569000000001247e-05, 4.4638999999999096e-05, 4.451399999999897e-05, 4.4639000000002566e-05, 4.498600000000033e-05, 4.49999999999999e-05, 4.422200000000001e-05, 4.4402999999998416e-05, 4.426400000000219e-05]</msg>
<status status="PASS" starttime="20201029 18:26:47.752" endtime="20201029 18:26:47.757"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:47.747" endtime="20201029 18:26:47.757"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:26:47.761" endtime="20201029 18:26:47.781"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:47.759" endtime="20201029 18:26:47.781"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:47.758" endtime="20201029 18:26:47.782"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:47.400" endtime="20201029 18:26:47.782"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:47.400" endtime="20201029 18:26:47.782"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:47.791" endtime="20201029 18:26:47.809"></status>
</kw>
<msg timestamp="20201029 18:26:47.809" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:26:47.790" endtime="20201029 18:26:47.809"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:26:47.812" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:26:47.810" endtime="20201029 18:26:47.812"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:47.813" endtime="20201029 18:26:47.814"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:47.787" endtime="20201029 18:26:47.815"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:47.785" endtime="20201029 18:26:47.815"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:47.821" endtime="20201029 18:26:48.109"></status>
</kw>
<msg timestamp="20201029 18:26:48.112" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020231028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020276347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:26:47.820" endtime="20201029 18:26:48.112"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:26:48.120" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020231028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020276347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:26:48.113" endtime="20201029 18:26:48.120"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:48.121" endtime="20201029 18:26:48.123"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:47.817" endtime="20201029 18:26:48.123"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:47.816" endtime="20201029 18:26:48.124"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:26:48.128" level="INFO">${RESULT} = [{'diff': 4.531899999999853e-05}, {'diff': 4.6083000000002317e-05}, {'diff': 4.561099999999749e-05}, {'diff': 4.609699999999842e-05}, {'diff': 4.558299999999835e-05}, {'diff': 4.595799999999872e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:26:48.125" endtime="20201029 18:26:48.128"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:26:48.133" level="INFO">${ACCURACY} = {'diff': [4.531899999999853e-05, 4.6083000000002317e-05, 4.561099999999749e-05, 4.609699999999842e-05, 4.558299999999835e-05, 4.595799999999872e-05, 4.530499999999896e-05, 4.5875000000000776e-05, 4.57...</msg>
<status status="PASS" starttime="20201029 18:26:48.129" endtime="20201029 18:26:48.133"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:26:48.137" level="INFO">NAME: accuracy-TIMER_SET-41-philip</msg>
<status status="PASS" starttime="20201029 18:26:48.136" endtime="20201029 18:26:48.137"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:26:48.139" level="INFO">VALUE: [4.531899999999853e-05, 4.6083000000002317e-05, 4.561099999999749e-05, 4.609699999999842e-05, 4.558299999999835e-05, 4.595799999999872e-05, 4.530499999999896e-05, 4.5875000000000776e-05, 4.575000000000065e-05, 4.5680999999998806e-05, 4.5319999999998e-05, 4.584799999999764e-05, 4.530599999999843e-05, 4.5639000000000096e-05, 4.5889000000000346e-05, 4.608399999999832e-05, 4.5737000000000555e-05, 4.586200000000068e-05, 4.5639000000000096e-05, 4.540199999999994e-05, 4.608299999999885e-05, 4.591600000000001e-05, 4.542999999999908e-05, 4.576400000000022e-05, 4.613899999999713e-05, 4.547199999999779e-05, 4.594399999999915e-05, 4.601400000000047e-05, 4.570799999999847e-05, 4.5167000000002205e-05, 4.5361000000000706e-05, 4.522200000000101e-05, 4.586099999999774e-05, 4.598600000000133e-05, 4.580599999999893e-05, 4.5319999999998e-05, 4.611200000000093e-05, 4.583400000000154e-05, 4.577700000000032e-05, 4.5361000000000706e-05, 4.579099999999989e-05, 4.567999999999933e-05, 4.534699999999767e-05, 4.6181000000002775e-05, 4.616600000000026e-05, 4.606899999999928e-05, 4.6153000000000166e-05, 4.597200000000176e-05, 4.576400000000022e-05, 4.522200000000101e-05]</msg>
<status status="PASS" starttime="20201029 18:26:48.138" endtime="20201029 18:26:48.140"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:48.134" endtime="20201029 18:26:48.141"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:26:48.144" endtime="20201029 18:26:48.164"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:48.143" endtime="20201029 18:26:48.164"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:48.142" endtime="20201029 18:26:48.165"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:47.783" endtime="20201029 18:26:48.165"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:47.782" endtime="20201029 18:26:48.165"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:48.174" endtime="20201029 18:26:48.190"></status>
</kw>
<msg timestamp="20201029 18:26:48.191" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:26:48.172" endtime="20201029 18:26:48.191"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:26:48.193" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:26:48.192" endtime="20201029 18:26:48.194"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:48.194" endtime="20201029 18:26:48.196"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:48.169" endtime="20201029 18:26:48.196"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:48.167" endtime="20201029 18:26:48.197"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:48.203" endtime="20201029 18:26:48.489"></status>
</kw>
<msg timestamp="20201029 18:26:48.493" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019307542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019353861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:26:48.202" endtime="20201029 18:26:48.493"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:26:48.501" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019307542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019353861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:26:48.494" endtime="20201029 18:26:48.501"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:48.502" endtime="20201029 18:26:48.503"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:48.199" endtime="20201029 18:26:48.504"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:48.197" endtime="20201029 18:26:48.504"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:26:48.508" level="INFO">${RESULT} = [{'diff': 4.631899999999953e-05}, {'diff': 4.622200000000201e-05}, {'diff': 4.624999999999768e-05}, {'diff': 4.626400000000072e-05}, {'diff': 4.65000000000014e-05}, {'diff': 4.708299999999985e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:26:48.505" endtime="20201029 18:26:48.508"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:26:48.512" level="INFO">${ACCURACY} = {'diff': [4.631899999999953e-05, 4.622200000000201e-05, 4.624999999999768e-05, 4.626400000000072e-05, 4.65000000000014e-05, 4.708299999999985e-05, 4.6861000000002206e-05, 4.645799999999922e-05, 4.6694...</msg>
<status status="PASS" starttime="20201029 18:26:48.509" endtime="20201029 18:26:48.512"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:26:48.517" level="INFO">NAME: accuracy-TIMER_SET-42-philip</msg>
<status status="PASS" starttime="20201029 18:26:48.516" endtime="20201029 18:26:48.517"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:26:48.519" level="INFO">VALUE: [4.631899999999953e-05, 4.622200000000201e-05, 4.624999999999768e-05, 4.626400000000072e-05, 4.65000000000014e-05, 4.708299999999985e-05, 4.6861000000002206e-05, 4.645799999999922e-05, 4.6694999999999376e-05, 4.654200000000011e-05, 4.686199999999821e-05, 4.690299999999745e-05, 4.6931000000000056e-05, 4.6653000000000666e-05, 4.7181000000000306e-05, 4.672199999999904e-05, 4.6959000000002665e-05, 4.699999999999843e-05, 4.718000000000083e-05, 4.654200000000011e-05, 4.6389000000000846e-05, 4.623600000000158e-05, 4.659699999999892e-05, 4.634699999999867e-05, 4.63329999999991e-05, 4.6430999999999556e-05, 4.716699999999727e-05, 4.659699999999892e-05, 4.7181000000000306e-05, 4.6375000000001276e-05, 4.697199999999929e-05, 4.658400000000229e-05, 4.670799999999947e-05, 4.666600000000076e-05, 4.686099999999874e-05, 4.631899999999953e-05, 4.6403000000000416e-05, 4.680500000000046e-05, 4.666600000000076e-05, 4.6333000000002567e-05, 4.6903000000000916e-05, 4.695799999999972e-05, 4.709699999999942e-05, 4.6667000000000236e-05, 4.659699999999892e-05, 4.7153000000001166e-05, 4.637499999999781e-05, 4.6416999999999986e-05, 4.68199999999995e-05, 4.633399999999857e-05]</msg>
<status status="PASS" starttime="20201029 18:26:48.518" endtime="20201029 18:26:48.520"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:48.513" endtime="20201029 18:26:48.520"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:26:48.524" endtime="20201029 18:26:48.543"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:48.522" endtime="20201029 18:26:48.544"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:48.521" endtime="20201029 18:26:48.544"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:48.166" endtime="20201029 18:26:48.544"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:48.165" endtime="20201029 18:26:48.545"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:48.553" endtime="20201029 18:26:48.570"></status>
</kw>
<msg timestamp="20201029 18:26:48.571" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:26:48.552" endtime="20201029 18:26:48.571"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:26:48.573" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:26:48.572" endtime="20201029 18:26:48.573"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:48.574" endtime="20201029 18:26:48.576"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:48.549" endtime="20201029 18:26:48.576"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:48.547" endtime="20201029 18:26:48.577"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:48.585" endtime="20201029 18:26:48.871"></status>
</kw>
<msg timestamp="20201029 18:26:48.874" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020376347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020423597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:26:48.583" endtime="20201029 18:26:48.874"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:26:48.882" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020376347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020423597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:26:48.875" endtime="20201029 18:26:48.883"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:48.884" endtime="20201029 18:26:48.885"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:48.580" endtime="20201029 18:26:48.886"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:48.577" endtime="20201029 18:26:48.886"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:26:48.890" level="INFO">${RESULT} = [{'diff': 4.725000000000215e-05}, {'diff': 4.801400000000247e-05}, {'diff': 4.7417000000000986e-05}, {'diff': 4.755600000000068e-05}, {'diff': 4.809700000000042e-05}, {'diff': 4.779200000000136e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:26:48.887" endtime="20201029 18:26:48.890"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:26:48.894" level="INFO">${ACCURACY} = {'diff': [4.725000000000215e-05, 4.801400000000247e-05, 4.7417000000000986e-05, 4.755600000000068e-05, 4.809700000000042e-05, 4.779200000000136e-05, 4.824999999999968e-05, 4.780500000000146e-05, 4.797...</msg>
<status status="PASS" starttime="20201029 18:26:48.891" endtime="20201029 18:26:48.894"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:26:48.898" level="INFO">NAME: accuracy-TIMER_SET-43-philip</msg>
<status status="PASS" starttime="20201029 18:26:48.897" endtime="20201029 18:26:48.899"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:26:48.901" level="INFO">VALUE: [4.725000000000215e-05, 4.801400000000247e-05, 4.7417000000000986e-05, 4.755600000000068e-05, 4.809700000000042e-05, 4.779200000000136e-05, 4.824999999999968e-05, 4.780500000000146e-05, 4.797200000000029e-05, 4.811199999999946e-05, 4.759800000000286e-05, 4.808400000000032e-05, 4.726400000000172e-05, 4.779100000000189e-05, 4.7959000000000196e-05, 4.801400000000247e-05, 4.747199999999979e-05, 4.759699999999992e-05, 4.799999999999943e-05, 4.81529999999987e-05, 4.780499999999799e-05, 4.797200000000029e-05, 4.740299999999795e-05, 4.776399999999875e-05, 4.78879999999994e-05, 4.804199999999814e-05, 4.78879999999994e-05, 4.774999999999918e-05, 4.7931000000001056e-05, 4.776399999999875e-05, 4.7667000000001236e-05, 4.761200000000243e-05, 4.813899999999913e-05, 4.759699999999992e-05, 4.795800000000072e-05, 4.786099999999974e-05, 4.730500000000096e-05, 4.7707999999997e-05, 4.816600000000226e-05, 4.75139999999985e-05, 4.751400000000197e-05, 4.813899999999913e-05, 4.7667000000001236e-05, 4.804199999999814e-05, 4.755600000000068e-05, 4.748599999999936e-05, 4.729100000000139e-05, 4.729200000000086e-05, 4.8139000000002596e-05, 4.762499999999906e-05]</msg>
<status status="PASS" starttime="20201029 18:26:48.899" endtime="20201029 18:26:48.902"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:48.895" endtime="20201029 18:26:48.903"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:26:48.907" endtime="20201029 18:26:48.926"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:48.905" endtime="20201029 18:26:48.926"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:48.904" endtime="20201029 18:26:48.927"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:48.546" endtime="20201029 18:26:48.927"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:48.545" endtime="20201029 18:26:48.927"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:48.936" endtime="20201029 18:26:48.952"></status>
</kw>
<msg timestamp="20201029 18:26:48.953" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:26:48.934" endtime="20201029 18:26:48.953"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:26:48.955" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:26:48.954" endtime="20201029 18:26:48.956"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:48.956" endtime="20201029 18:26:48.958"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:48.932" endtime="20201029 18:26:48.958"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:48.930" endtime="20201029 18:26:48.959"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:48.965" endtime="20201029 18:26:49.250"></status>
</kw>
<msg timestamp="20201029 18:26:49.253" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019386097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019435111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:26:48.964" endtime="20201029 18:26:49.254"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:26:49.261" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019386097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019435111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:26:49.254" endtime="20201029 18:26:49.262"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:49.262" endtime="20201029 18:26:49.264"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:48.961" endtime="20201029 18:26:49.265"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:48.959" endtime="20201029 18:26:49.265"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:26:49.269" level="INFO">${RESULT} = [{'diff': 4.9014e-05}, {'diff': 4.8431000000001556e-05}, {'diff': 4.861100000000049e-05}, {'diff': 4.8903000000002916e-05}, {'diff': 4.920800000000197e-05}, {'diff': 4.86529999999992e-05}, {'diff': 4....</msg>
<status status="PASS" starttime="20201029 18:26:49.266" endtime="20201029 18:26:49.269"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:26:49.274" level="INFO">${ACCURACY} = {'diff': [4.9014e-05, 4.8431000000001556e-05, 4.861100000000049e-05, 4.8903000000002916e-05, 4.920800000000197e-05, 4.86529999999992e-05, 4.856900000000178e-05, 4.848600000000036e-05, 4.88190000000020...</msg>
<status status="PASS" starttime="20201029 18:26:49.270" endtime="20201029 18:26:49.274"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:26:49.278" level="INFO">NAME: accuracy-TIMER_SET-44-philip</msg>
<status status="PASS" starttime="20201029 18:26:49.277" endtime="20201029 18:26:49.279"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:26:49.281" level="INFO">VALUE: [4.9014e-05, 4.8431000000001556e-05, 4.861100000000049e-05, 4.8903000000002916e-05, 4.920800000000197e-05, 4.86529999999992e-05, 4.856900000000178e-05, 4.848600000000036e-05, 4.881900000000203e-05, 4.883299999999813e-05, 4.837499999999981e-05, 4.879199999999889e-05, 4.824999999999968e-05, 4.900000000000043e-05, 4.861100000000049e-05, 4.847199999999732e-05, 4.872200000000104e-05, 4.9014e-05, 4.8403000000002416e-05, 4.877799999999932e-05, 4.888899999999988e-05, 4.887500000000031e-05, 4.893099999999859e-05, 4.861199999999996e-05, 4.884700000000117e-05, 4.8889000000003346e-05, 4.909700000000142e-05, 4.861100000000049e-05, 4.876399999999975e-05, 4.875000000000018e-05, 4.855600000000168e-05, 4.872200000000104e-05, 4.875000000000018e-05, 4.847200000000079e-05, 4.908300000000185e-05, 4.884700000000117e-05, 4.88200000000015e-05, 4.8639000000003096e-05, 4.843000000000208e-05, 4.8320000000001e-05, 4.8695000000001376e-05, 4.848600000000036e-05, 4.827700000000282e-05, 4.824999999999968e-05, 4.8931000000002056e-05, 4.877699999999985e-05, 4.859700000000092e-05, 4.825000000000315e-05, 4.888899999999988e-05, 4.88330000000016e-05]</msg>
<status status="PASS" starttime="20201029 18:26:49.279" endtime="20201029 18:26:49.281"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:49.275" endtime="20201029 18:26:49.282"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:26:49.286" endtime="20201029 18:26:49.305"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:49.284" endtime="20201029 18:26:49.306"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:49.283" endtime="20201029 18:26:49.306"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:48.928" endtime="20201029 18:26:49.306"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:48.928" endtime="20201029 18:26:49.306"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:49.315" endtime="20201029 18:26:49.331"></status>
</kw>
<msg timestamp="20201029 18:26:49.332" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:26:49.313" endtime="20201029 18:26:49.332"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:26:49.334" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:26:49.333" endtime="20201029 18:26:49.334"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:49.335" endtime="20201029 18:26:49.337"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:49.311" endtime="20201029 18:26:49.337"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:49.309" endtime="20201029 18:26:49.338"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:49.344" endtime="20201029 18:26:49.630"></status>
</kw>
<msg timestamp="20201029 18:26:49.633" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019367847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019417264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:26:49.343" endtime="20201029 18:26:49.633"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:26:49.641" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019367847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019417264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:26:49.634" endtime="20201029 18:26:49.641"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:49.642" endtime="20201029 18:26:49.643"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:49.340" endtime="20201029 18:26:49.644"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:49.338" endtime="20201029 18:26:49.644"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:26:49.648" level="INFO">${RESULT} = [{'diff': 4.941699999999952e-05}, {'diff': 4.980599999999946e-05}, {'diff': 4.961100000000149e-05}, {'diff': 4.993099999999959e-05}, {'diff': 4.974999999999771e-05}, {'diff': 4.930599999999896e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:26:49.645" endtime="20201029 18:26:49.648"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:26:49.652" level="INFO">${ACCURACY} = {'diff': [4.941699999999952e-05, 4.980599999999946e-05, 4.961100000000149e-05, 4.993099999999959e-05, 4.974999999999771e-05, 4.930599999999896e-05, 4.9707999999999e-05, 5.005500000000024e-05, 4.987499...</msg>
<status status="PASS" starttime="20201029 18:26:49.649" endtime="20201029 18:26:49.653"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:26:49.657" level="INFO">NAME: accuracy-TIMER_SET-45-philip</msg>
<status status="PASS" starttime="20201029 18:26:49.656" endtime="20201029 18:26:49.657"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:26:49.659" level="INFO">VALUE: [4.941699999999952e-05, 4.980599999999946e-05, 4.961100000000149e-05, 4.993099999999959e-05, 4.974999999999771e-05, 4.930599999999896e-05, 4.9707999999999e-05, 5.005500000000024e-05, 4.987499999999784e-05, 4.962500000000106e-05, 4.980499999999999e-05, 4.955500000000321e-05, 4.968099999999934e-05, 4.952800000000007e-05, 4.963899999999716e-05, 4.988900000000088e-05, 4.92079999999985e-05, 4.9638000000001153e-05, 5.01530000000007e-05, 4.973600000000161e-05, 4.959800000000139e-05, 5.013899999999766e-05, 4.98339999999986e-05, 4.9473000000001266e-05, 5.005599999999971e-05, 4.95140000000005e-05, 4.95140000000005e-05, 4.98469999999987e-05, 5.004200000000014e-05, 4.952699999999713e-05, 4.938900000000038e-05, 4.926400000000025e-05, 5.012499999999809e-05, 4.988900000000088e-05, 4.959700000000192e-05, 4.991700000000002e-05, 4.930599999999896e-05, 5.005599999999971e-05, 4.941699999999952e-05, 4.984800000000164e-05, 4.931899999999906e-05, 4.9987000000001336e-05, 4.927799999999982e-05, 5.008299999999938e-05, 4.940299999999995e-05, 4.923600000000111e-05, 4.943000000000308e-05, 4.987499999999784e-05, 4.968099999999934e-05, 4.9707999999999e-05]</msg>
<status status="PASS" starttime="20201029 18:26:49.658" endtime="20201029 18:26:49.660"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:49.653" endtime="20201029 18:26:49.660"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:26:49.664" endtime="20201029 18:26:49.684"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:49.663" endtime="20201029 18:26:49.684"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:49.661" endtime="20201029 18:26:49.684"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:49.307" endtime="20201029 18:26:49.685"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:49.307" endtime="20201029 18:26:49.685"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:49.693" endtime="20201029 18:26:49.710"></status>
</kw>
<msg timestamp="20201029 18:26:49.710" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:26:49.692" endtime="20201029 18:26:49.710"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:26:49.713" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:26:49.711" endtime="20201029 18:26:49.713"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:49.714" endtime="20201029 18:26:49.715"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:49.689" endtime="20201029 18:26:49.716"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:49.687" endtime="20201029 18:26:49.716"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:49.722" endtime="20201029 18:26:50.008"></status>
</kw>
<msg timestamp="20201029 18:26:50.011" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020230292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020281097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:26:49.721" endtime="20201029 18:26:50.011"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:26:50.019" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020230292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020281097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:26:50.012" endtime="20201029 18:26:50.019"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:50.020" endtime="20201029 18:26:50.022"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:49.718" endtime="20201029 18:26:50.022"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:49.717" endtime="20201029 18:26:50.023"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:26:50.026" level="INFO">${RESULT} = [{'diff': 5.080500000000099e-05}, {'diff': 5.1165999999998324e-05}, {'diff': 5.054100000000117e-05}, {'diff': 5.06530000000012e-05}, {'diff': 5.058299999999988e-05}, {'diff': 5.08469999999997e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:26:50.023" endtime="20201029 18:26:50.027"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:26:50.030" level="INFO">${ACCURACY} = {'diff': [5.080500000000099e-05, 5.1165999999998324e-05, 5.054100000000117e-05, 5.06530000000012e-05, 5.058299999999988e-05, 5.08469999999997e-05, 5.02079999999995e-05, 5.076400000000175e-05, 5.055600...</msg>
<status status="PASS" starttime="20201029 18:26:50.027" endtime="20201029 18:26:50.031"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:26:50.035" level="INFO">NAME: accuracy-TIMER_SET-46-philip</msg>
<status status="PASS" starttime="20201029 18:26:50.034" endtime="20201029 18:26:50.035"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:26:50.037" level="INFO">VALUE: [5.080500000000099e-05, 5.1165999999998324e-05, 5.054100000000117e-05, 5.06530000000012e-05, 5.058299999999988e-05, 5.08469999999997e-05, 5.02079999999995e-05, 5.076400000000175e-05, 5.055600000000021e-05, 5.086099999999927e-05, 5.045899999999923e-05, 5.061099999999902e-05, 5.100000000000243e-05, 5.107000000000028e-05, 5.080600000000046e-05, 5.043000000000061e-05, 5.111099999999952e-05, 5.030500000000049e-05, 5.079100000000142e-05, 5.118000000000136e-05, 5.100000000000243e-05, 5.055500000000074e-05, 5.109699999999995e-05, 5.072200000000304e-05, 5.088900000000188e-05, 5.080600000000046e-05, 5.05140000000015e-05, 5.082000000000003e-05, 5.030599999999996e-05, 5.119500000000041e-05, 5.061099999999902e-05, 5.094500000000016e-05, 5.105500000000124e-05, 5.099999999999896e-05, 5.102800000000157e-05, 5.088899999999841e-05, 5.106900000000081e-05, 5.074999999999871e-05, 5.08469999999997e-05, 5.026399999999778e-05, 5.079100000000142e-05, 5.0943999999997214e-05, 5.10279999999981e-05, 5.123599999999964e-05, 5.116700000000127e-05, 5.069499999999991e-05, 5.048599999999889e-05, 5.073599999999914e-05, 5.115299999999823e-05, 5.101399999999853e-05]</msg>
<status status="PASS" starttime="20201029 18:26:50.036" endtime="20201029 18:26:50.039"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:50.031" endtime="20201029 18:26:50.039"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:26:50.043" endtime="20201029 18:26:50.062"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:50.042" endtime="20201029 18:26:50.063"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:50.040" endtime="20201029 18:26:50.063"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:49.686" endtime="20201029 18:26:50.064"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:49.685" endtime="20201029 18:26:50.064"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:50.072" endtime="20201029 18:26:50.089"></status>
</kw>
<msg timestamp="20201029 18:26:50.090" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:26:50.071" endtime="20201029 18:26:50.090"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:26:50.092" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:26:50.091" endtime="20201029 18:26:50.092"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:50.093" endtime="20201029 18:26:50.095"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:50.068" endtime="20201029 18:26:50.095"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:50.066" endtime="20201029 18:26:50.096"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:50.102" endtime="20201029 18:26:50.387"></status>
</kw>
<msg timestamp="20201029 18:26:50.390" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019284167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019335917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:26:50.100" endtime="20201029 18:26:50.390"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:26:50.398" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019284167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019335917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:26:50.391" endtime="20201029 18:26:50.398"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:50.399" endtime="20201029 18:26:50.400"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:50.098" endtime="20201029 18:26:50.401"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:50.096" endtime="20201029 18:26:50.401"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:26:50.405" level="INFO">${RESULT} = [{'diff': 5.174999999999971e-05}, {'diff': 5.148599999999989e-05}, {'diff': 5.126400000000225e-05}, {'diff': 5.131900000000106e-05}, {'diff': 5.1402000000002473e-05}, {'diff': 5.130499999999802e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:26:50.402" endtime="20201029 18:26:50.405"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:26:50.410" level="INFO">${ACCURACY} = {'diff': [5.174999999999971e-05, 5.148599999999989e-05, 5.126400000000225e-05, 5.131900000000106e-05, 5.1402000000002473e-05, 5.130499999999802e-05, 5.199999999999996e-05, 5.174999999999971e-05, 5.174...</msg>
<status status="PASS" starttime="20201029 18:26:50.406" endtime="20201029 18:26:50.410"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:26:50.414" level="INFO">NAME: accuracy-TIMER_SET-47-philip</msg>
<status status="PASS" starttime="20201029 18:26:50.413" endtime="20201029 18:26:50.415"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:26:50.417" level="INFO">VALUE: [5.174999999999971e-05, 5.148599999999989e-05, 5.126400000000225e-05, 5.131900000000106e-05, 5.1402000000002473e-05, 5.130499999999802e-05, 5.199999999999996e-05, 5.174999999999971e-05, 5.174999999999971e-05, 5.190299999999898e-05, 5.123599999999964e-05, 5.159699999999698e-05, 5.216700000000227e-05, 5.1471999999996854e-05, 5.122200000000007e-05, 5.13340000000001e-05, 5.215299999999923e-05, 5.122299999999955e-05, 5.222200000000107e-05, 5.21669999999988e-05, 5.1416000000002043e-05, 5.165299999999873e-05, 5.1415999999998574e-05, 5.13470000000002e-05, 5.149999999999946e-05, 5.127799999999835e-05, 5.130500000000149e-05, 5.165299999999873e-05, 5.12080000000005e-05, 5.130500000000149e-05, 5.219400000000193e-05, 5.176399999999928e-05, 5.18340000000006e-05, 5.199999999999996e-05, 5.199999999999996e-05, 5.15279999999986e-05, 5.173699999999962e-05, 5.194499999999769e-05, 5.145800000000075e-05, 5.169400000000143e-05, 5.190300000000245e-05, 5.155499999999827e-05, 5.138899999999891e-05, 5.206899999999834e-05, 5.149999999999946e-05, 5.1416000000002043e-05, 5.149999999999946e-05, 5.21530000000027e-05, 5.1693999999997964e-05, 5.13470000000002e-05]</msg>
<status status="PASS" starttime="20201029 18:26:50.416" endtime="20201029 18:26:50.418"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:50.411" endtime="20201029 18:26:50.418"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:26:50.422" endtime="20201029 18:26:50.441"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:50.420" endtime="20201029 18:26:50.442"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:50.419" endtime="20201029 18:26:50.442"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:50.065" endtime="20201029 18:26:50.442"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:50.064" endtime="20201029 18:26:50.443"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:50.451" endtime="20201029 18:26:50.468"></status>
</kw>
<msg timestamp="20201029 18:26:50.468" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:26:50.449" endtime="20201029 18:26:50.468"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:26:50.471" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:26:50.469" endtime="20201029 18:26:50.471"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:50.472" endtime="20201029 18:26:50.473"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:50.447" endtime="20201029 18:26:50.474"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:50.445" endtime="20201029 18:26:50.474"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:50.480" endtime="20201029 18:26:50.767"></status>
</kw>
<msg timestamp="20201029 18:26:50.770" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020073542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020126653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:26:50.479" endtime="20201029 18:26:50.771"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:26:50.778" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020073542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020126653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:26:50.772" endtime="20201029 18:26:50.779"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:50.780" endtime="20201029 18:26:50.781"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:50.476" endtime="20201029 18:26:50.782"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:50.475" endtime="20201029 18:26:50.782"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:26:50.786" level="INFO">${RESULT} = [{'diff': 5.311100000000152e-05}, {'diff': 5.236100000000077e-05}, {'diff': 5.23470000000012e-05}, {'diff': 5.244500000000166e-05}, {'diff': 5.233399999999763e-05}, {'diff': 5.230499999999902e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:26:50.783" endtime="20201029 18:26:50.786"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:26:50.790" level="INFO">${ACCURACY} = {'diff': [5.311100000000152e-05, 5.236100000000077e-05, 5.23470000000012e-05, 5.244500000000166e-05, 5.233399999999763e-05, 5.230499999999902e-05, 5.26530000000032e-05, 5.281900000000256e-05, 5.269400...</msg>
<status status="PASS" starttime="20201029 18:26:50.787" endtime="20201029 18:26:50.790"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:26:50.794" level="INFO">NAME: accuracy-TIMER_SET-48-philip</msg>
<status status="PASS" starttime="20201029 18:26:50.793" endtime="20201029 18:26:50.795"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:26:50.797" level="INFO">VALUE: [5.311100000000152e-05, 5.236100000000077e-05, 5.23470000000012e-05, 5.244500000000166e-05, 5.233399999999763e-05, 5.230499999999902e-05, 5.26530000000032e-05, 5.281900000000256e-05, 5.269400000000243e-05, 5.240299999999948e-05, 5.2665999999999824e-05, 5.315300000000023e-05, 5.23470000000012e-05, 5.2971999999998354e-05, 5.31669999999998e-05, 5.255599999999874e-05, 5.25279999999996e-05, 5.2708000000002e-05, 5.269500000000191e-05, 5.309799999999795e-05, 5.243099999999862e-05, 5.279199999999942e-05, 5.30280000000001e-05, 5.226300000000031e-05, 5.308399999999838e-05, 5.301299999999759e-05, 5.2887999999997465e-05, 5.2929999999999644e-05, 5.2735999999997674e-05, 5.308299999999891e-05, 5.263900000000016e-05, 5.255600000000221e-05, 5.2221999999997604e-05, 5.2457999999998284e-05, 5.227800000000282e-05, 5.241700000000252e-05, 5.258300000000188e-05, 5.231999999999806e-05, 5.318099999999937e-05, 5.231999999999806e-05, 5.293100000000259e-05, 5.305600000000271e-05, 5.247200000000132e-05, 5.2971999999998354e-05, 5.300000000000096e-05, 5.2763999999996813e-05, 5.231899999999859e-05, 5.297200000000182e-05, 5.256899999999884e-05, 5.226399999999978e-05]</msg>
<status status="PASS" starttime="20201029 18:26:50.796" endtime="20201029 18:26:50.798"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:50.791" endtime="20201029 18:26:50.798"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:26:50.802" endtime="20201029 18:26:50.821"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:50.800" endtime="20201029 18:26:50.822"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:50.799" endtime="20201029 18:26:50.822"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:50.443" endtime="20201029 18:26:50.823"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:50.443" endtime="20201029 18:26:50.823"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:50.832" endtime="20201029 18:26:50.849"></status>
</kw>
<msg timestamp="20201029 18:26:50.849" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:26:50.831" endtime="20201029 18:26:50.849"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:26:50.852" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:26:50.850" endtime="20201029 18:26:50.852"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:50.853" endtime="20201029 18:26:50.854"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:50.828" endtime="20201029 18:26:50.855"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:50.825" endtime="20201029 18:26:50.855"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:50.862" endtime="20201029 18:26:51.148"></status>
</kw>
<msg timestamp="20201029 18:26:51.151" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021423333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021477097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:26:50.860" endtime="20201029 18:26:51.151"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:26:51.159" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021423333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021477097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:26:51.152" endtime="20201029 18:26:51.160"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:51.160" endtime="20201029 18:26:51.162"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:50.858" endtime="20201029 18:26:51.163"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:50.856" endtime="20201029 18:26:51.163"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:26:51.167" level="INFO">${RESULT} = [{'diff': 5.376400000000128e-05}, {'diff': 5.400000000000196e-05}, {'diff': 5.323600000000164e-05}, {'diff': 5.348600000000189e-05}, {'diff': 5.387500000000184e-05}, {'diff': 5.341700000000005e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:26:51.164" endtime="20201029 18:26:51.167"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:26:51.171" level="INFO">${ACCURACY} = {'diff': [5.376400000000128e-05, 5.400000000000196e-05, 5.323600000000164e-05, 5.348600000000189e-05, 5.387500000000184e-05, 5.341700000000005e-05, 5.411100000000252e-05, 5.361099999999855e-05, 5.3596...</msg>
<status status="PASS" starttime="20201029 18:26:51.168" endtime="20201029 18:26:51.171"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:26:51.175" level="INFO">NAME: accuracy-TIMER_SET-49-philip</msg>
<status status="PASS" starttime="20201029 18:26:51.174" endtime="20201029 18:26:51.176"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:26:51.181" level="INFO">VALUE: [5.376400000000128e-05, 5.400000000000196e-05, 5.323600000000164e-05, 5.348600000000189e-05, 5.387500000000184e-05, 5.341700000000005e-05, 5.411100000000252e-05, 5.361099999999855e-05, 5.359699999999898e-05, 5.319500000000241e-05, 5.408399999999938e-05, 5.350000000000146e-05, 5.376299999999834e-05, 5.35410000000007e-05, 5.3929999999997175e-05, 5.361099999999855e-05, 5.406900000000034e-05, 5.3707999999999534e-05, 5.3430000000000144e-05, 5.3235999999998174e-05, 5.356899999999984e-05, 5.359699999999898e-05, 5.390299999999751e-05, 5.393100000000012e-05, 5.393100000000012e-05, 5.375000000000171e-05, 5.386199999999827e-05, 5.3235999999998174e-05, 5.327800000000035e-05, 5.412500000000209e-05, 5.368099999999987e-05, 5.355500000000027e-05, 5.330500000000002e-05, 5.3415999999997105e-05, 5.393100000000012e-05, 5.3485999999998424e-05, 5.358299999999941e-05, 5.388899999999794e-05, 5.3471999999998854e-05, 5.384699999999923e-05, 5.365299999999726e-05, 5.3499999999997994e-05, 5.320899999999851e-05, 5.370900000000248e-05, 5.418100000000037e-05, 5.400000000000196e-05, 5.404200000000067e-05, 5.400000000000196e-05, 5.3680000000000394e-05, 5.384699999999923e-05]</msg>
<status status="PASS" starttime="20201029 18:26:51.176" endtime="20201029 18:26:51.182"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:51.172" endtime="20201029 18:26:51.182"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:26:51.186" endtime="20201029 18:26:51.205"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:51.185" endtime="20201029 18:26:51.206"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:51.183" endtime="20201029 18:26:51.206"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:50.824" endtime="20201029 18:26:51.207"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:50.823" endtime="20201029 18:26:51.207"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:51.215" endtime="20201029 18:26:51.232"></status>
</kw>
<msg timestamp="20201029 18:26:51.232" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:26:51.214" endtime="20201029 18:26:51.233"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:26:51.235" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:26:51.233" endtime="20201029 18:26:51.235"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:51.236" endtime="20201029 18:26:51.238"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:51.211" endtime="20201029 18:26:51.238"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:51.209" endtime="20201029 18:26:51.238"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:51.245" endtime="20201029 18:26:51.531"></status>
</kw>
<msg timestamp="20201029 18:26:51.534" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019286736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019341042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:26:51.243" endtime="20201029 18:26:51.535"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:26:51.542" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019286736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019341042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:26:51.535" endtime="20201029 18:26:51.543"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:51.544" endtime="20201029 18:26:51.545"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:51.241" endtime="20201029 18:26:51.546"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:51.239" endtime="20201029 18:26:51.546"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:26:51.550" level="INFO">${RESULT} = [{'diff': 5.430600000000049e-05}, {'diff': 5.490299999999851e-05}, {'diff': 5.4235999999999174e-05}, {'diff': 5.483400000000013e-05}, {'diff': 5.465299999999826e-05}, {'diff': 5.4763999999998814e-05},...</msg>
<status status="PASS" starttime="20201029 18:26:51.547" endtime="20201029 18:26:51.550"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:26:51.555" level="INFO">${ACCURACY} = {'diff': [5.430600000000049e-05, 5.490299999999851e-05, 5.4235999999999174e-05, 5.483400000000013e-05, 5.465299999999826e-05, 5.4763999999998814e-05, 5.509700000000048e-05, 5.484700000000023e-05, 5.45...</msg>
<status status="PASS" starttime="20201029 18:26:51.551" endtime="20201029 18:26:51.555"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:26:51.559" level="INFO">NAME: accuracy-TIMER_SET-50-philip</msg>
<status status="PASS" starttime="20201029 18:26:51.558" endtime="20201029 18:26:51.560"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:26:51.562" level="INFO">VALUE: [5.430600000000049e-05, 5.490299999999851e-05, 5.4235999999999174e-05, 5.483400000000013e-05, 5.465299999999826e-05, 5.4763999999998814e-05, 5.509700000000048e-05, 5.484700000000023e-05, 5.45410000000017e-05, 5.504099999999873e-05, 5.461099999999955e-05, 5.484700000000023e-05, 5.483400000000013e-05, 5.5041999999998203e-05, 5.440299999999801e-05, 5.459699999999998e-05, 5.495900000000026e-05, 5.516699999999833e-05, 5.432000000000006e-05, 5.422299999999908e-05, 5.418100000000037e-05, 5.430500000000102e-05, 5.506999999999734e-05, 5.4471999999999854e-05, 5.454099999999823e-05, 5.45549999999978e-05, 5.450000000000246e-05, 5.4694000000000964e-05, 5.509700000000048e-05, 5.513899999999919e-05, 5.4221999999999604e-05, 5.463899999999869e-05, 5.46809999999974e-05, 5.4999999999999494e-05, 5.4235999999999174e-05, 5.427800000000135e-05, 5.430600000000049e-05, 5.4485999999999424e-05, 5.500000000000296e-05, 5.430500000000102e-05, 5.4444000000000714e-05, 5.5208000000001034e-05, 5.4263999999998314e-05, 5.4263999999998314e-05, 5.441700000000105e-05, 5.4930000000001644e-05, 5.4958000000000784e-05, 5.465299999999826e-05, 5.4999999999999494e-05, 5.51809999999979e-05]</msg>
<status status="PASS" starttime="20201029 18:26:51.560" endtime="20201029 18:26:51.563"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:51.556" endtime="20201029 18:26:51.563"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:26:51.567" endtime="20201029 18:26:51.586"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:51.565" endtime="20201029 18:26:51.587"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:51.564" endtime="20201029 18:26:51.588"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:51.208" endtime="20201029 18:26:51.588"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:51.207" endtime="20201029 18:26:51.588"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:51.597" endtime="20201029 18:26:51.613"></status>
</kw>
<msg timestamp="20201029 18:26:51.614" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:26:51.595" endtime="20201029 18:26:51.614"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:26:51.616" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:26:51.615" endtime="20201029 18:26:51.617"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:51.617" endtime="20201029 18:26:51.619"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:51.593" endtime="20201029 18:26:51.619"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:51.590" endtime="20201029 18:26:51.620"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:51.626" endtime="20201029 18:26:51.913"></status>
</kw>
<msg timestamp="20201029 18:26:51.916" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020384806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020440653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:26:51.625" endtime="20201029 18:26:51.917"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:26:51.924" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020384806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020440653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:26:51.917" endtime="20201029 18:26:51.925"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:51.926" endtime="20201029 18:26:51.927"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:51.622" endtime="20201029 18:26:51.928"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:51.620" endtime="20201029 18:26:51.928"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:26:51.932" level="INFO">${RESULT} = [{'diff': 5.584700000000123e-05}, {'diff': 5.5805999999998523e-05}, {'diff': 5.608399999999791e-05}, {'diff': 5.5986000000000924e-05}, {'diff': 5.6193999999998995e-05}, {'diff': 5.6027999999999634e-05...</msg>
<status status="PASS" starttime="20201029 18:26:51.929" endtime="20201029 18:26:51.932"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:26:51.936" level="INFO">${ACCURACY} = {'diff': [5.584700000000123e-05, 5.5805999999998523e-05, 5.608399999999791e-05, 5.5986000000000924e-05, 5.6193999999998995e-05, 5.6027999999999634e-05, 5.5957999999998315e-05, 5.5277999999998884e-05, ...</msg>
<status status="PASS" starttime="20201029 18:26:51.933" endtime="20201029 18:26:51.936"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:26:51.941" level="INFO">NAME: accuracy-TIMER_SET-51-philip</msg>
<status status="PASS" starttime="20201029 18:26:51.940" endtime="20201029 18:26:51.941"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:26:51.943" level="INFO">VALUE: [5.584700000000123e-05, 5.5805999999998523e-05, 5.608399999999791e-05, 5.5986000000000924e-05, 5.6193999999998995e-05, 5.6027999999999634e-05, 5.5957999999998315e-05, 5.5277999999998884e-05, 5.53610000000003e-05, 5.540299999999901e-05, 5.53610000000003e-05, 5.591700000000255e-05, 5.6027999999999634e-05, 5.584699999999776e-05, 5.583299999999819e-05, 5.608299999999844e-05, 5.565299999999926e-05, 5.565300000000273e-05, 5.566699999999883e-05, 5.538899999999944e-05, 5.5236000000000174e-05, 5.531899999999812e-05, 5.5888000000000465e-05, 5.5750000000000244e-05, 5.543100000000162e-05, 5.538899999999944e-05, 5.5708000000001534e-05, 5.583299999999819e-05, 5.583299999999819e-05, 5.613900000000019e-05, 5.5263999999999314e-05, 5.570899999999754e-05, 5.5736000000000674e-05, 5.565299999999926e-05, 5.540300000000248e-05, 5.520900000000051e-05, 5.561100000000055e-05, 5.573700000000015e-05, 5.5638000000000215e-05, 5.5513999999999564e-05, 5.531899999999812e-05, 5.5263999999999314e-05, 5.583299999999819e-05, 5.534699999999726e-05, 5.5763999999999814e-05, 5.5499999999999994e-05, 5.541700000000205e-05, 5.538899999999944e-05, 5.5222000000000604e-05, 5.565299999999926e-05]</msg>
<status status="PASS" starttime="20201029 18:26:51.942" endtime="20201029 18:26:51.944"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:51.937" endtime="20201029 18:26:51.945"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:26:51.951" endtime="20201029 18:26:51.971"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:51.947" endtime="20201029 18:26:51.972"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:51.946" endtime="20201029 18:26:51.973"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:51.589" endtime="20201029 18:26:51.973"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:51.588" endtime="20201029 18:26:51.974"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:51.983" endtime="20201029 18:26:52.000"></status>
</kw>
<msg timestamp="20201029 18:26:52.001" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:26:51.981" endtime="20201029 18:26:52.001"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:26:52.003" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:26:52.002" endtime="20201029 18:26:52.004"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:52.004" endtime="20201029 18:26:52.006"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:51.979" endtime="20201029 18:26:52.006"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:51.977" endtime="20201029 18:26:52.007"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:52.013" endtime="20201029 18:26:52.299"></status>
</kw>
<msg timestamp="20201029 18:26:52.302" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022452861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022509583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:26:52.012" endtime="20201029 18:26:52.302"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:26:52.310" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022452861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022509583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:26:52.303" endtime="20201029 18:26:52.310"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:52.311" endtime="20201029 18:26:52.313"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:52.009" endtime="20201029 18:26:52.313"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:52.007" endtime="20201029 18:26:52.314"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:26:52.317" level="INFO">${RESULT} = [{'diff': 5.6721999999998635e-05}, {'diff': 5.6679999999999925e-05}, {'diff': 5.6652000000000785e-05}, {'diff': 5.7042000000000204e-05}, {'diff': 5.7027999999997164e-05}, {'diff': 5.6778000000000384e-...</msg>
<status status="PASS" starttime="20201029 18:26:52.314" endtime="20201029 18:26:52.318"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:26:52.322" level="INFO">${ACCURACY} = {'diff': [5.6721999999998635e-05, 5.6679999999999925e-05, 5.6652000000000785e-05, 5.7042000000000204e-05, 5.7027999999997164e-05, 5.6778000000000384e-05, 5.666699999999983e-05, 5.63480000000012e-05, 5...</msg>
<status status="PASS" starttime="20201029 18:26:52.318" endtime="20201029 18:26:52.322"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:26:52.326" level="INFO">NAME: accuracy-TIMER_SET-52-philip</msg>
<status status="PASS" starttime="20201029 18:26:52.325" endtime="20201029 18:26:52.326"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:26:52.328" level="INFO">VALUE: [5.6721999999998635e-05, 5.6679999999999925e-05, 5.6652000000000785e-05, 5.7042000000000204e-05, 5.7027999999997164e-05, 5.6778000000000384e-05, 5.666699999999983e-05, 5.63480000000012e-05, 5.7042000000000204e-05, 5.6569999999998843e-05, 5.638900000000044e-05, 5.68610000000018e-05, 5.647300000000133e-05, 5.6555999999999274e-05, 5.7055999999999774e-05, 5.713899999999772e-05, 5.629099999999998e-05, 5.654100000000023e-05, 5.6972000000002354e-05, 5.665300000000026e-05, 5.661100000000155e-05, 5.658300000000241e-05, 5.630499999999955e-05, 5.691700000000008e-05, 5.661100000000155e-05, 5.659700000000198e-05, 5.6805999999999524e-05, 5.693099999999965e-05, 5.645899999999829e-05, 5.7151999999997816e-05, 5.637500000000087e-05, 5.686099999999833e-05, 5.627700000000041e-05, 5.6471999999998385e-05, 5.6930000000000175e-05, 5.6277999999999884e-05, 5.652700000000066e-05, 5.6750000000001244e-05, 5.633300000000216e-05, 5.6264000000000314e-05, 5.6971999999998885e-05, 5.630499999999955e-05, 5.7000000000001494e-05, 5.6472000000001854e-05, 5.669500000000244e-05, 5.669499999999897e-05, 5.6277999999999884e-05, 5.6541999999999704e-05, 5.6277999999999884e-05, 5.6916000000000605e-05]</msg>
<status status="PASS" starttime="20201029 18:26:52.327" endtime="20201029 18:26:52.330"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:52.322" endtime="20201029 18:26:52.330"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:26:52.334" endtime="20201029 18:26:52.353"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:52.333" endtime="20201029 18:26:52.354"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:52.331" endtime="20201029 18:26:52.354"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:51.975" endtime="20201029 18:26:52.355"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:51.974" endtime="20201029 18:26:52.355"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:52.363" endtime="20201029 18:26:52.380"></status>
</kw>
<msg timestamp="20201029 18:26:52.381" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:26:52.362" endtime="20201029 18:26:52.381"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:26:52.383" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:26:52.382" endtime="20201029 18:26:52.384"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:52.384" endtime="20201029 18:26:52.386"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:52.359" endtime="20201029 18:26:52.386"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:52.357" endtime="20201029 18:26:52.387"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:52.393" endtime="20201029 18:26:52.696"></status>
</kw>
<msg timestamp="20201029 18:26:52.699" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019259403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019316806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:26:52.392" endtime="20201029 18:26:52.699"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:26:52.707" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019259403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019316806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:26:52.700" endtime="20201029 18:26:52.707"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:52.708" endtime="20201029 18:26:52.710"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:52.389" endtime="20201029 18:26:52.710"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:52.387" endtime="20201029 18:26:52.711"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:26:52.715" level="INFO">${RESULT} = [{'diff': 5.740299999999754e-05}, {'diff': 5.783300000000019e-05}, {'diff': 5.781900000000062e-05}, {'diff': 5.8027999999998164e-05}, {'diff': 5.7222000000002604e-05}, {'diff': 5.765300000000126e-05},...</msg>
<status status="PASS" starttime="20201029 18:26:52.711" endtime="20201029 18:26:52.715"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:26:52.719" level="INFO">${ACCURACY} = {'diff': [5.740299999999754e-05, 5.783300000000019e-05, 5.781900000000062e-05, 5.8027999999998164e-05, 5.7222000000002604e-05, 5.765300000000126e-05, 5.813900000000219e-05, 5.7957999999996845e-05, 5.7...</msg>
<status status="PASS" starttime="20201029 18:26:52.716" endtime="20201029 18:26:52.720"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:26:52.724" level="INFO">NAME: accuracy-TIMER_SET-53-philip</msg>
<status status="PASS" starttime="20201029 18:26:52.723" endtime="20201029 18:26:52.724"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:26:52.726" level="INFO">VALUE: [5.740299999999754e-05, 5.783300000000019e-05, 5.781900000000062e-05, 5.8027999999998164e-05, 5.7222000000002604e-05, 5.765300000000126e-05, 5.813900000000219e-05, 5.7957999999996845e-05, 5.738899999999797e-05, 5.81810000000009e-05, 5.813899999999872e-05, 5.736099999999883e-05, 5.7971999999999885e-05, 5.818099999999743e-05, 5.790300000000151e-05, 5.7401999999998066e-05, 5.7944000000000745e-05, 5.7735999999999205e-05, 5.8180000000001425e-05, 5.812500000000262e-05, 5.7514000000001564e-05, 5.73749999999984e-05, 5.738899999999797e-05, 5.73610000000023e-05, 5.783299999999672e-05, 5.737500000000187e-05, 5.806900000000087e-05, 5.8083999999999913e-05, 5.795899999999979e-05, 5.7985999999999455e-05, 5.732000000000306e-05, 5.731900000000012e-05, 5.781900000000062e-05, 5.7944000000000745e-05, 5.7499999999998525e-05, 5.7999999999999025e-05, 5.7722000000003104e-05, 5.758299999999994e-05, 5.783300000000019e-05, 5.765300000000126e-05, 5.793100000000065e-05, 5.808299999999697e-05, 5.7721999999999635e-05, 5.819500000000047e-05, 5.8194999999997e-05, 5.7306000000000024e-05, 5.8000000000002494e-05, 5.8028000000001634e-05, 5.8222000000000135e-05, 5.7750000000002244e-05]</msg>
<status status="PASS" starttime="20201029 18:26:52.725" endtime="20201029 18:26:52.727"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:52.720" endtime="20201029 18:26:52.728"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:26:52.731" endtime="20201029 18:26:52.751"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:52.730" endtime="20201029 18:26:52.751"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:52.729" endtime="20201029 18:26:52.752"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:52.356" endtime="20201029 18:26:52.752"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:52.355" endtime="20201029 18:26:52.752"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:52.760" endtime="20201029 18:26:52.778"></status>
</kw>
<msg timestamp="20201029 18:26:52.778" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:26:52.759" endtime="20201029 18:26:52.779"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:26:52.781" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:26:52.779" endtime="20201029 18:26:52.781"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:52.782" endtime="20201029 18:26:52.784"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:52.756" endtime="20201029 18:26:52.784"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:52.754" endtime="20201029 18:26:52.785"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:52.791" endtime="20201029 18:26:53.077"></status>
</kw>
<msg timestamp="20201029 18:26:53.080" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020261222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020319944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:26:52.789" endtime="20201029 18:26:53.081"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:26:53.089" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020261222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020319944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:26:53.082" endtime="20201029 18:26:53.089"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:53.090" endtime="20201029 18:26:53.091"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:52.787" endtime="20201029 18:26:53.092"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:52.785" endtime="20201029 18:26:53.092"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:26:53.096" level="INFO">${RESULT} = [{'diff': 5.8722000000000635e-05}, {'diff': 5.8887999999999996e-05}, {'diff': 5.8694000000001495e-05}, {'diff': 5.9013999999999595e-05}, {'diff': 5.8208000000000565e-05}, {'diff': 5.831900000000112e-0...</msg>
<status status="PASS" starttime="20201029 18:26:53.093" endtime="20201029 18:26:53.096"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:26:53.100" level="INFO">${ACCURACY} = {'diff': [5.8722000000000635e-05, 5.8887999999999996e-05, 5.8694000000001495e-05, 5.9013999999999595e-05, 5.8208000000000565e-05, 5.831900000000112e-05, 5.894500000000122e-05, 5.8763999999999345e-05, ...</msg>
<status status="PASS" starttime="20201029 18:26:53.097" endtime="20201029 18:26:53.100"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:26:53.105" level="INFO">NAME: accuracy-TIMER_SET-54-philip</msg>
<status status="PASS" starttime="20201029 18:26:53.104" endtime="20201029 18:26:53.105"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:26:53.107" level="INFO">VALUE: [5.8722000000000635e-05, 5.8887999999999996e-05, 5.8694000000001495e-05, 5.9013999999999595e-05, 5.8208000000000565e-05, 5.831900000000112e-05, 5.894500000000122e-05, 5.8763999999999345e-05, 5.8805999999998054e-05, 5.884699999999729e-05, 5.91810000000019e-05, 5.916700000000233e-05, 5.8791999999998484e-05, 5.8278000000001884e-05, 5.8848000000000233e-05, 5.8320000000000594e-05, 5.8805999999998054e-05, 5.834700000000026e-05, 5.9250000000000275e-05, 5.838899999999897e-05, 5.9027999999999164e-05, 5.8222000000000135e-05, 5.8485999999999955e-05, 5.8972000000000885e-05, 5.8542000000001704e-05, 5.8319999999997124e-05, 5.8222000000000135e-05, 5.8555999999997804e-05, 5.859700000000051e-05, 5.8957999999997845e-05, 5.893099999999818e-05, 5.8291999999997984e-05, 5.85689999999979e-05, 5.88749999999999e-05, 5.836099999999983e-05, 5.85689999999979e-05, 5.8722000000000635e-05, 5.890300000000251e-05, 5.88749999999999e-05, 5.861100000000008e-05, 5.893099999999818e-05, 5.913900000000319e-05, 5.866700000000183e-05, 5.9014000000003064e-05, 5.8222000000000135e-05, 5.888899999999947e-05, 5.911100000000058e-05, 5.9041999999998734e-05, 5.9138000000000246e-05, 5.8499999999999525e-05]</msg>
<status status="PASS" starttime="20201029 18:26:53.106" endtime="20201029 18:26:53.108"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:53.101" endtime="20201029 18:26:53.108"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:26:53.112" endtime="20201029 18:26:53.132"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:53.111" endtime="20201029 18:26:53.132"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:53.109" endtime="20201029 18:26:53.132"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:52.753" endtime="20201029 18:26:53.133"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:52.752" endtime="20201029 18:26:53.133"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:53.141" endtime="20201029 18:26:53.159"></status>
</kw>
<msg timestamp="20201029 18:26:53.159" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:26:53.140" endtime="20201029 18:26:53.159"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:26:53.162" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:26:53.160" endtime="20201029 18:26:53.162"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:53.163" endtime="20201029 18:26:53.164"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:53.137" endtime="20201029 18:26:53.165"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:53.135" endtime="20201029 18:26:53.165"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:53.172" endtime="20201029 18:26:53.457"></status>
</kw>
<msg timestamp="20201029 18:26:53.460" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020351833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020411347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:26:53.170" endtime="20201029 18:26:53.461"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:26:53.468" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020351833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020411347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:26:53.462" endtime="20201029 18:26:53.469"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:53.470" endtime="20201029 18:26:53.471"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:53.168" endtime="20201029 18:26:53.472"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:53.166" endtime="20201029 18:26:53.472"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:26:53.476" level="INFO">${RESULT} = [{'diff': 5.9514000000000095e-05}, {'diff': 5.9721999999998165e-05}, {'diff': 5.986100000000133e-05}, {'diff': 5.9485999999997485e-05}, {'diff': 5.9805999999999054e-05}, {'diff': 5.9819999999998624e-0...</msg>
<status status="PASS" starttime="20201029 18:26:53.473" endtime="20201029 18:26:53.476"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:26:53.480" level="INFO">${ACCURACY} = {'diff': [5.9514000000000095e-05, 5.9721999999998165e-05, 5.986100000000133e-05, 5.9485999999997485e-05, 5.9805999999999054e-05, 5.9819999999998624e-05, 6.0014000000000595e-05, 5.936100000000083e-05, ...</msg>
<status status="PASS" starttime="20201029 18:26:53.477" endtime="20201029 18:26:53.480"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:26:53.485" level="INFO">NAME: accuracy-TIMER_SET-55-philip</msg>
<status status="PASS" starttime="20201029 18:26:53.484" endtime="20201029 18:26:53.485"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:26:53.487" level="INFO">VALUE: [5.9514000000000095e-05, 5.9721999999998165e-05, 5.986100000000133e-05, 5.9485999999997485e-05, 5.9805999999999054e-05, 5.9819999999998624e-05, 6.0014000000000595e-05, 5.936100000000083e-05, 5.9347999999997264e-05, 5.943100000000215e-05, 5.952700000000019e-05, 5.9848000000001234e-05, 5.9707999999998596e-05, 5.936100000000083e-05, 5.9764000000000345e-05, 5.930499999999908e-05, 5.986099999999786e-05, 5.988900000000047e-05, 5.9986000000001455e-05, 6.0056000000002774e-05, 5.968099999999893e-05, 5.940300000000301e-05, 5.940299999999954e-05, 5.9250000000000275e-05, 5.9862000000000803e-05, 5.9665999999999886e-05, 6.0055999999999304e-05, 6.0207999999999096e-05, 5.980499999999958e-05, 5.958300000000194e-05, 5.988900000000047e-05, 5.965299999999979e-05, 5.959699999999804e-05, 5.936100000000083e-05, 5.9819999999998624e-05, 6.008299999999897e-05, 6.0069999999998874e-05, 5.991699999999961e-05, 5.9986000000001455e-05, 5.9777999999999915e-05, 5.997300000000136e-05, 5.965299999999979e-05, 6.0069999999998874e-05, 5.9806000000002524e-05, 5.9929999999999706e-05, 5.929099999999951e-05, 6.004100000000026e-05, 6.009700000000201e-05, 5.9458000000001815e-05, 5.934699999999779e-05]</msg>
<status status="PASS" starttime="20201029 18:26:53.486" endtime="20201029 18:26:53.489"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:53.481" endtime="20201029 18:26:53.489"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:26:53.493" endtime="20201029 18:26:53.512"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:53.491" endtime="20201029 18:26:53.513"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:53.490" endtime="20201029 18:26:53.513"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:53.134" endtime="20201029 18:26:53.513"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:53.133" endtime="20201029 18:26:53.513"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:53.522" endtime="20201029 18:26:53.540"></status>
</kw>
<msg timestamp="20201029 18:26:53.540" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:26:53.520" endtime="20201029 18:26:53.540"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:26:53.542" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:26:53.541" endtime="20201029 18:26:53.543"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:53.543" endtime="20201029 18:26:53.545"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:53.518" endtime="20201029 18:26:53.546"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:53.516" endtime="20201029 18:26:53.546"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:53.552" endtime="20201029 18:26:53.838"></status>
</kw>
<msg timestamp="20201029 18:26:53.841" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020106847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020167417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:26:53.551" endtime="20201029 18:26:53.842"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:26:53.849" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020106847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020167417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:26:53.843" endtime="20201029 18:26:53.850"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:53.851" endtime="20201029 18:26:53.852"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:53.548" endtime="20201029 18:26:53.853"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:53.547" endtime="20201029 18:26:53.853"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:26:53.857" level="INFO">${RESULT} = [{'diff': 6.0569999999999374e-05}, {'diff': 6.0250000000001275e-05}, {'diff': 6.0736000000002205e-05}, {'diff': 6.065299999999732e-05}, {'diff': 6.108299999999997e-05}, {'diff': 6.0971999999999416e-05...</msg>
<status status="PASS" starttime="20201029 18:26:53.854" endtime="20201029 18:26:53.857"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:26:53.862" level="INFO">${ACCURACY} = {'diff': [6.0569999999999374e-05, 6.0250000000001275e-05, 6.0736000000002205e-05, 6.065299999999732e-05, 6.108299999999997e-05, 6.0971999999999416e-05, 6.0347999999998264e-05, 6.0542000000000235e-05, ...</msg>
<status status="PASS" starttime="20201029 18:26:53.858" endtime="20201029 18:26:53.863"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:26:53.867" level="INFO">NAME: accuracy-TIMER_SET-56-philip</msg>
<status status="PASS" starttime="20201029 18:26:53.866" endtime="20201029 18:26:53.868"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:26:53.870" level="INFO">VALUE: [6.0569999999999374e-05, 6.0250000000001275e-05, 6.0736000000002205e-05, 6.065299999999732e-05, 6.108299999999997e-05, 6.0971999999999416e-05, 6.0347999999998264e-05, 6.0542000000000235e-05, 6.038900000000097e-05, 6.036099999999836e-05, 6.112500000000215e-05, 6.059699999999904e-05, 6.0402000000001066e-05, 6.112500000000215e-05, 6.033299999999922e-05, 6.059699999999904e-05, 6.0764000000001345e-05, 6.1000000000002025e-05, 6.0735999999998735e-05, 6.109699999999954e-05, 6.113900000000172e-05, 6.113899999999825e-05, 6.065300000000079e-05, 6.1000000000002025e-05, 6.0792000000000485e-05, 6.119399999999706e-05, 6.047299999999839e-05, 6.0985999999998985e-05, 6.0250000000001275e-05, 6.081900000000015e-05, 6.079100000000101e-05, 6.0236000000001705e-05, 6.061100000000208e-05, 6.113900000000172e-05, 6.0305999999999554e-05, 6.066700000000036e-05, 6.0569999999999374e-05, 6.0236000000001705e-05, 6.108399999999944e-05, 6.041700000000011e-05, 6.063900000000122e-05, 6.022300000000161e-05, 6.029100000000051e-05, 6.109699999999954e-05, 6.031899999999965e-05, 6.0250000000001275e-05, 6.037499999999793e-05, 6.055500000000033e-05, 6.063900000000122e-05, 6.0888999999998e-05]</msg>
<status status="PASS" starttime="20201029 18:26:53.868" endtime="20201029 18:26:53.871"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:53.863" endtime="20201029 18:26:53.871"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:26:53.875" endtime="20201029 18:26:53.895"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:53.874" endtime="20201029 18:26:53.895"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:53.873" endtime="20201029 18:26:53.896"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:53.514" endtime="20201029 18:26:53.896"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:53.514" endtime="20201029 18:26:53.896"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:53.905" endtime="20201029 18:26:53.924"></status>
</kw>
<msg timestamp="20201029 18:26:53.925" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:26:53.903" endtime="20201029 18:26:53.925"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:26:53.930" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:26:53.927" endtime="20201029 18:26:53.930"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:53.932" endtime="20201029 18:26:53.935"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:53.901" endtime="20201029 18:26:53.936"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:53.899" endtime="20201029 18:26:53.937"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:53.951" endtime="20201029 18:26:54.245"></status>
</kw>
<msg timestamp="20201029 18:26:54.248" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019536125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01959775, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:26:53.948" endtime="20201029 18:26:54.248"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:26:54.256" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019536125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01959775, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:26:54.249" endtime="20201029 18:26:54.256"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:54.257" endtime="20201029 18:26:54.258"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:53.942" endtime="20201029 18:26:54.259"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:53.939" endtime="20201029 18:26:54.259"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:26:54.263" level="INFO">${RESULT} = [{'diff': 6.162499999999918e-05}, {'diff': 6.161099999999961e-05}, {'diff': 6.130600000000055e-05}, {'diff': 6.141699999999764e-05}, {'diff': 6.140300000000154e-05}, {'diff': 6.166700000000136e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:26:54.260" endtime="20201029 18:26:54.264"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:26:54.267" level="INFO">${ACCURACY} = {'diff': [6.162499999999918e-05, 6.161099999999961e-05, 6.130600000000055e-05, 6.141699999999764e-05, 6.140300000000154e-05, 6.166700000000136e-05, 6.155599999999734e-05, 6.159700000000004e-05, 6.1597...</msg>
<status status="PASS" starttime="20201029 18:26:54.264" endtime="20201029 18:26:54.268"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:26:54.272" level="INFO">NAME: accuracy-TIMER_SET-57-philip</msg>
<status status="PASS" starttime="20201029 18:26:54.271" endtime="20201029 18:26:54.272"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:26:54.274" level="INFO">VALUE: [6.162499999999918e-05, 6.161099999999961e-05, 6.130600000000055e-05, 6.141699999999764e-05, 6.140300000000154e-05, 6.166700000000136e-05, 6.155599999999734e-05, 6.159700000000004e-05, 6.159799999999951e-05, 6.208400000000044e-05, 6.151300000000262e-05, 6.191599999999867e-05, 6.166600000000189e-05, 6.13889999999985e-05, 6.209700000000054e-05, 6.181899999999768e-05, 6.212499999999968e-05, 6.20560000000013e-05, 6.140299999999807e-05, 6.218100000000143e-05, 6.170900000000007e-05, 6.179199999999802e-05, 6.197300000000336e-05, 6.20140000000026e-05, 6.14019999999986e-05, 6.177699999999897e-05, 6.19439999999978e-05, 6.126400000000184e-05, 6.144500000000025e-05, 6.141700000000111e-05, 6.159700000000004e-05, 6.201399999999913e-05, 6.173599999999974e-05, 6.15690000000009e-05, 6.212499999999968e-05, 6.144500000000025e-05, 6.197299999999989e-05, 6.134699999999979e-05, 6.12499999999988e-05, 6.187499999999943e-05, 6.177699999999897e-05, 6.215199999999935e-05, 6.142999999999774e-05, 6.159700000000004e-05, 6.14019999999986e-05, 6.190299999999857e-05, 6.211100000000011e-05, 6.216699999999839e-05, 6.180600000000105e-05, 6.172200000000017e-05]</msg>
<status status="PASS" starttime="20201029 18:26:54.273" endtime="20201029 18:26:54.275"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:54.268" endtime="20201029 18:26:54.275"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:26:54.279" endtime="20201029 18:26:54.298"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:54.277" endtime="20201029 18:26:54.299"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:54.276" endtime="20201029 18:26:54.299"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:53.897" endtime="20201029 18:26:54.300"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:53.896" endtime="20201029 18:26:54.300"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:54.308" endtime="20201029 18:26:54.327"></status>
</kw>
<msg timestamp="20201029 18:26:54.327" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:26:54.307" endtime="20201029 18:26:54.327"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:26:54.330" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:26:54.328" endtime="20201029 18:26:54.330"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:54.331" endtime="20201029 18:26:54.333"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:54.304" endtime="20201029 18:26:54.333"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:54.302" endtime="20201029 18:26:54.334"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:54.340" endtime="20201029 18:26:54.626"></status>
</kw>
<msg timestamp="20201029 18:26:54.629" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021382333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021444569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:26:54.339" endtime="20201029 18:26:54.629"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:26:54.637" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021382333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021444569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:26:54.630" endtime="20201029 18:26:54.637"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:54.638" endtime="20201029 18:26:54.640"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:54.336" endtime="20201029 18:26:54.640"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:54.334" endtime="20201029 18:26:54.640"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:26:54.645" level="INFO">${RESULT} = [{'diff': 6.223600000000024e-05}, {'diff': 6.244499999999778e-05}, {'diff': 6.309699999999807e-05}, {'diff': 6.22080000000011e-05}, {'diff': 6.266599999999942e-05}, {'diff': 6.312500000000068e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:26:54.641" endtime="20201029 18:26:54.645"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:26:54.649" level="INFO">${ACCURACY} = {'diff': [6.223600000000024e-05, 6.244499999999778e-05, 6.309699999999807e-05, 6.22080000000011e-05, 6.266599999999942e-05, 6.312500000000068e-05, 6.27500000000003e-05, 6.226399999999938e-05, 6.301400...</msg>
<status status="PASS" starttime="20201029 18:26:54.645" endtime="20201029 18:26:54.649"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:26:54.653" level="INFO">NAME: accuracy-TIMER_SET-58-philip</msg>
<status status="PASS" starttime="20201029 18:26:54.652" endtime="20201029 18:26:54.653"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:26:54.658" level="INFO">VALUE: [6.223600000000024e-05, 6.244499999999778e-05, 6.309699999999807e-05, 6.22080000000011e-05, 6.266599999999942e-05, 6.312500000000068e-05, 6.27500000000003e-05, 6.226399999999938e-05, 6.301400000000013e-05, 6.300000000000056e-05, 6.297200000000142e-05, 6.26950000000015e-05, 6.257000000000137e-05, 6.265299999999932e-05, 6.23479999999968e-05, 6.241699999999864e-05, 6.247300000000039e-05, 6.319399999999906e-05, 6.242999999999874e-05, 6.301400000000013e-05, 6.276399999999988e-05, 6.248600000000049e-05, 6.298600000000099e-05, 6.274999999999684e-05, 6.230600000000155e-05, 6.23340000000007e-05, 6.293099999999871e-05, 6.226399999999938e-05, 6.22499999999998e-05, 6.261099999999714e-05, 6.30699999999984e-05, 6.27500000000003e-05, 6.266600000000289e-05, 6.234700000000079e-05, 6.248600000000049e-05, 6.30690000000024e-05, 6.315299999999982e-05, 6.240299999999907e-05, 6.261100000000061e-05, 6.315299999999982e-05, 6.25560000000018e-05, 6.251300000000015e-05, 6.265299999999932e-05, 6.30560000000023e-05, 6.244400000000178e-05, 6.25279999999992e-05, 6.306899999999893e-05, 6.223699999999971e-05, 6.267999999999899e-05, 6.24300000000022e-05]</msg>
<status status="PASS" starttime="20201029 18:26:54.654" endtime="20201029 18:26:54.660"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:54.649" endtime="20201029 18:26:54.660"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:26:54.664" endtime="20201029 18:26:54.683"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:54.662" endtime="20201029 18:26:54.684"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:54.661" endtime="20201029 18:26:54.684"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:54.301" endtime="20201029 18:26:54.684"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:54.300" endtime="20201029 18:26:54.684"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:54.693" endtime="20201029 18:26:54.711"></status>
</kw>
<msg timestamp="20201029 18:26:54.711" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:26:54.692" endtime="20201029 18:26:54.712"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:26:54.714" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:26:54.712" endtime="20201029 18:26:54.714"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:54.715" endtime="20201029 18:26:54.716"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:54.689" endtime="20201029 18:26:54.717"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:54.687" endtime="20201029 18:26:54.717"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:54.724" endtime="20201029 18:26:55.008"></status>
</kw>
<msg timestamp="20201029 18:26:55.011" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020377889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020441667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:26:54.722" endtime="20201029 18:26:55.011"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:26:55.019" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020377889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020441667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:26:55.012" endtime="20201029 18:26:55.020"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:55.020" endtime="20201029 18:26:55.022"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:54.720" endtime="20201029 18:26:55.023"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:54.718" endtime="20201029 18:26:55.023"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:26:55.027" level="INFO">${RESULT} = [{'diff': 6.377800000000045e-05}, {'diff': 6.419499999999953e-05}, {'diff': 6.333399999999823e-05}, {'diff': 6.401299999999818e-05}, {'diff': 6.416600000000092e-05}, {'diff': 6.341600000000017e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:26:55.024" endtime="20201029 18:26:55.027"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:26:55.032" level="INFO">${ACCURACY} = {'diff': [6.377800000000045e-05, 6.419499999999953e-05, 6.333399999999823e-05, 6.401299999999818e-05, 6.416600000000092e-05, 6.341600000000017e-05, 6.340300000000007e-05, 6.406899999999993e-05, 6.3403...</msg>
<status status="PASS" starttime="20201029 18:26:55.028" endtime="20201029 18:26:55.032"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:26:55.036" level="INFO">NAME: accuracy-TIMER_SET-59-philip</msg>
<status status="PASS" starttime="20201029 18:26:55.035" endtime="20201029 18:26:55.036"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:26:55.039" level="INFO">VALUE: [6.377800000000045e-05, 6.419499999999953e-05, 6.333399999999823e-05, 6.401299999999818e-05, 6.416600000000092e-05, 6.341600000000017e-05, 6.340300000000007e-05, 6.406899999999993e-05, 6.340300000000007e-05, 6.404200000000027e-05, 6.399999999999809e-05, 6.326400000000038e-05, 6.377800000000045e-05, 6.369499999999903e-05, 6.359800000000151e-05, 6.394499999999928e-05, 6.341699999999964e-05, 6.413799999999831e-05, 6.337500000000093e-05, 6.331899999999918e-05, 6.333299999999875e-05, 6.354100000000029e-05, 6.418000000000049e-05, 6.32219999999982e-05, 6.384700000000229e-05, 6.32500000000008e-05, 6.379200000000002e-05, 6.329199999999952e-05, 6.405599999999984e-05, 6.40699999999994e-05, 6.329100000000004e-05, 6.333399999999823e-05, 6.37639999999974e-05, 6.330499999999961e-05, 6.344400000000278e-05, 6.341600000000017e-05, 6.411099999999864e-05, 6.345799999999888e-05, 6.413900000000125e-05, 6.413900000000125e-05, 6.326400000000038e-05, 6.334699999999832e-05, 6.35699999999989e-05, 6.380599999999959e-05, 6.348600000000149e-05, 6.37089999999986e-05, 6.344499999999878e-05, 6.342999999999974e-05, 6.384700000000229e-05, 6.416599999999745e-05]</msg>
<status status="PASS" starttime="20201029 18:26:55.037" endtime="20201029 18:26:55.039"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:55.033" endtime="20201029 18:26:55.040"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:26:55.044" endtime="20201029 18:26:55.063"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:55.042" endtime="20201029 18:26:55.064"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:55.041" endtime="20201029 18:26:55.064"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:54.685" endtime="20201029 18:26:55.064"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:54.685" endtime="20201029 18:26:55.064"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:55.073" endtime="20201029 18:26:55.091"></status>
</kw>
<msg timestamp="20201029 18:26:55.091" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:26:55.071" endtime="20201029 18:26:55.092"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:26:55.094" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:26:55.092" endtime="20201029 18:26:55.094"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:55.095" endtime="20201029 18:26:55.096"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:55.069" endtime="20201029 18:26:55.097"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:55.067" endtime="20201029 18:26:55.097"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:55.104" endtime="20201029 18:26:55.390"></status>
</kw>
<msg timestamp="20201029 18:26:55.393" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019314486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019379083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:26:55.102" endtime="20201029 18:26:55.394"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:26:55.401" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019314486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019379083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:26:55.394" endtime="20201029 18:26:55.402"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:55.403" endtime="20201029 18:26:55.404"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:55.100" endtime="20201029 18:26:55.405"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:55.098" endtime="20201029 18:26:55.405"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:26:55.409" level="INFO">${RESULT} = [{'diff': 6.459699999999957e-05}, {'diff': 6.461099999999914e-05}, {'diff': 6.488899999999853e-05}, {'diff': 6.440300000000107e-05}, {'diff': 6.513900000000225e-05}, {'diff': 6.474999999999884e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:26:55.406" endtime="20201029 18:26:55.409"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:26:55.413" level="INFO">${ACCURACY} = {'diff': [6.459699999999957e-05, 6.461099999999914e-05, 6.488899999999853e-05, 6.440300000000107e-05, 6.513900000000225e-05, 6.474999999999884e-05, 6.505499999999789e-05, 6.431900000000018e-05, 6.4332...</msg>
<status status="PASS" starttime="20201029 18:26:55.410" endtime="20201029 18:26:55.413"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:26:55.417" level="INFO">NAME: accuracy-TIMER_SET-60-philip</msg>
<status status="PASS" starttime="20201029 18:26:55.416" endtime="20201029 18:26:55.418"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:26:55.420" level="INFO">VALUE: [6.459699999999957e-05, 6.461099999999914e-05, 6.488899999999853e-05, 6.440300000000107e-05, 6.513900000000225e-05, 6.474999999999884e-05, 6.505499999999789e-05, 6.431900000000018e-05, 6.433299999999975e-05, 6.4889000000002e-05, 6.441700000000064e-05, 6.433299999999975e-05, 6.455600000000034e-05, 6.479200000000102e-05, 6.423600000000224e-05, 6.445799999999988e-05, 6.431999999999966e-05, 6.513900000000225e-05, 6.468000000000099e-05, 6.463900000000175e-05, 6.49159999999982e-05, 6.479200000000102e-05, 6.493000000000124e-05, 6.497199999999995e-05, 6.515199999999888e-05, 6.497199999999995e-05, 6.465300000000132e-05, 6.506900000000093e-05, 6.443100000000021e-05, 6.445799999999988e-05, 6.469500000000003e-05, 6.513899999999878e-05, 6.459800000000251e-05, 6.473599999999927e-05, 6.422300000000214e-05, 6.484699999999982e-05, 6.422300000000214e-05, 6.436099999999889e-05, 6.463899999999828e-05, 6.477700000000197e-05, 6.461099999999914e-05, 6.461099999999914e-05, 6.481900000000068e-05, 6.474999999999884e-05, 6.433299999999975e-05, 6.484699999999982e-05, 6.501400000000213e-05, 6.490199999999863e-05, 6.494500000000028e-05, 6.494500000000028e-05]</msg>
<status status="PASS" starttime="20201029 18:26:55.418" endtime="20201029 18:26:55.421"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:55.414" endtime="20201029 18:26:55.421"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:26:55.425" endtime="20201029 18:26:55.444"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:55.423" endtime="20201029 18:26:55.445"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:55.422" endtime="20201029 18:26:55.445"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:55.065" endtime="20201029 18:26:55.445"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:55.065" endtime="20201029 18:26:55.445"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:55.454" endtime="20201029 18:26:55.473"></status>
</kw>
<msg timestamp="20201029 18:26:55.473" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:26:55.452" endtime="20201029 18:26:55.474"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:26:55.476" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:26:55.474" endtime="20201029 18:26:55.476"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:55.477" endtime="20201029 18:26:55.478"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:55.450" endtime="20201029 18:26:55.479"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:55.448" endtime="20201029 18:26:55.479"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:55.486" endtime="20201029 18:26:55.772"></status>
</kw>
<msg timestamp="20201029 18:26:55.775" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021092236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021157583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:26:55.484" endtime="20201029 18:26:55.775"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:26:55.783" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021092236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021157583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:26:55.776" endtime="20201029 18:26:55.783"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:55.784" endtime="20201029 18:26:55.786"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:55.482" endtime="20201029 18:26:55.786"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:55.480" endtime="20201029 18:26:55.787"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:26:55.791" level="INFO">${RESULT} = [{'diff': 6.534700000000032e-05}, {'diff': 6.59440000000018e-05}, {'diff': 6.568000000000199e-05}, {'diff': 6.548600000000002e-05}, {'diff': 6.584699999999735e-05}, {'diff': 6.612500000000021e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:26:55.787" endtime="20201029 18:26:55.791"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:26:55.795" level="INFO">${ACCURACY} = {'diff': [6.534700000000032e-05, 6.59440000000018e-05, 6.568000000000199e-05, 6.548600000000002e-05, 6.584699999999735e-05, 6.612500000000021e-05, 6.577799999999898e-05, 6.591699999999867e-05, 6.55560...</msg>
<status status="PASS" starttime="20201029 18:26:55.792" endtime="20201029 18:26:55.795"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:26:55.799" level="INFO">NAME: accuracy-TIMER_SET-61-philip</msg>
<status status="PASS" starttime="20201029 18:26:55.798" endtime="20201029 18:26:55.799"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:26:55.801" level="INFO">VALUE: [6.534700000000032e-05, 6.59440000000018e-05, 6.568000000000199e-05, 6.548600000000002e-05, 6.584699999999735e-05, 6.612500000000021e-05, 6.577799999999898e-05, 6.591699999999867e-05, 6.555600000000134e-05, 6.548600000000002e-05, 6.53479999999998e-05, 6.524999999999934e-05, 6.561100000000014e-05, 6.605499999999889e-05, 6.556899999999796e-05, 6.562500000000318e-05, 6.592999999999877e-05, 6.567999999999852e-05, 6.566699999999842e-05, 6.617999999999902e-05, 6.59029999999991e-05, 6.572199999999723e-05, 6.555600000000134e-05, 6.60700000000014e-05, 6.547299999999992e-05, 6.55700000000009e-05, 6.559800000000005e-05, 6.595800000000138e-05, 6.604099999999932e-05, 6.55969999999971e-05, 6.547200000000045e-05, 6.598600000000052e-05, 6.580499999999864e-05, 6.604200000000227e-05, 6.52639999999989e-05, 6.533400000000023e-05, 6.609700000000107e-05, 6.598600000000052e-05, 6.612500000000021e-05, 6.523699999999924e-05, 6.559800000000005e-05, 6.59159999999992e-05, 6.608299999999803e-05, 6.534700000000032e-05, 6.590199999999963e-05, 6.565199999999938e-05, 6.527800000000195e-05, 6.531900000000118e-05, 6.530500000000161e-05, 6.552799999999873e-05]</msg>
<status status="PASS" starttime="20201029 18:26:55.800" endtime="20201029 18:26:55.803"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:55.795" endtime="20201029 18:26:55.804"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:26:55.807" endtime="20201029 18:26:55.827"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:55.806" endtime="20201029 18:26:55.827"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:55.805" endtime="20201029 18:26:55.827"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:55.446" endtime="20201029 18:26:55.828"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:55.446" endtime="20201029 18:26:55.828"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:55.836" endtime="20201029 18:26:55.854"></status>
</kw>
<msg timestamp="20201029 18:26:55.855" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:26:55.835" endtime="20201029 18:26:55.855"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:26:55.857" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:26:55.856" endtime="20201029 18:26:55.857"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:55.858" endtime="20201029 18:26:55.860"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:55.832" endtime="20201029 18:26:55.860"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:55.830" endtime="20201029 18:26:55.861"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:55.867" endtime="20201029 18:26:56.153"></status>
</kw>
<msg timestamp="20201029 18:26:56.156" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020266972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020333569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:26:55.866" endtime="20201029 18:26:56.156"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:26:56.164" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020266972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020333569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:26:56.157" endtime="20201029 18:26:56.164"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:56.165" endtime="20201029 18:26:56.166"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:55.863" endtime="20201029 18:26:56.167"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:55.861" endtime="20201029 18:26:56.167"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:26:56.171" level="INFO">${RESULT} = [{'diff': 6.65969999999981e-05}, {'diff': 6.686100000000139e-05}, {'diff': 6.666599999999995e-05}, {'diff': 6.713899999999731e-05}, {'diff': 6.688900000000053e-05}, {'diff': 6.658299999999853e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:26:56.168" endtime="20201029 18:26:56.171"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:26:56.176" level="INFO">${ACCURACY} = {'diff': [6.65969999999981e-05, 6.686100000000139e-05, 6.666599999999995e-05, 6.713899999999731e-05, 6.688900000000053e-05, 6.658299999999853e-05, 6.674999999999737e-05, 6.69030000000001e-05, 6.658300...</msg>
<status status="PASS" starttime="20201029 18:26:56.172" endtime="20201029 18:26:56.176"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:26:56.181" level="INFO">NAME: accuracy-TIMER_SET-62-philip</msg>
<status status="PASS" starttime="20201029 18:26:56.180" endtime="20201029 18:26:56.181"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:26:56.183" level="INFO">VALUE: [6.65969999999981e-05, 6.686100000000139e-05, 6.666599999999995e-05, 6.713899999999731e-05, 6.688900000000053e-05, 6.658299999999853e-05, 6.674999999999737e-05, 6.69030000000001e-05, 6.6583000000002e-05, 6.669399999999909e-05, 6.622199999999773e-05, 6.638900000000003e-05, 6.719400000000306e-05, 6.691699999999967e-05, 6.702699999999728e-05, 6.683299999999878e-05, 6.691699999999967e-05, 6.699999999999762e-05, 6.673600000000127e-05, 6.634699999999785e-05, 6.718099999999949e-05, 6.715300000000035e-05, 6.679200000000302e-05, 6.659700000000157e-05, 6.663900000000028e-05, 6.673700000000074e-05, 6.702800000000023e-05, 6.648700000000049e-05, 6.623600000000077e-05, 6.681899999999921e-05, 6.716600000000045e-05, 6.700000000000109e-05, 6.684799999999783e-05, 6.693099999999924e-05, 6.638900000000003e-05, 6.650000000000059e-05, 6.641699999999917e-05, 6.715300000000035e-05, 6.684799999999783e-05, 6.661100000000114e-05, 6.655599999999887e-05, 6.655599999999887e-05, 6.656999999999844e-05, 6.654099999999982e-05, 6.655499999999939e-05, 6.698599999999805e-05, 6.645900000000135e-05, 6.633300000000175e-05, 6.62639999999999e-05, 6.712499999999774e-05]</msg>
<status status="PASS" starttime="20201029 18:26:56.182" endtime="20201029 18:26:56.184"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:56.177" endtime="20201029 18:26:56.184"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:26:56.188" endtime="20201029 18:26:56.207"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:56.186" endtime="20201029 18:26:56.208"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:56.185" endtime="20201029 18:26:56.208"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:55.829" endtime="20201029 18:26:56.208"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:55.828" endtime="20201029 18:26:56.209"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:56.217" endtime="20201029 18:26:56.235"></status>
</kw>
<msg timestamp="20201029 18:26:56.236" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:26:56.216" endtime="20201029 18:26:56.236"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:26:56.238" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:26:56.237" endtime="20201029 18:26:56.238"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:56.239" endtime="20201029 18:26:56.241"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:56.213" endtime="20201029 18:26:56.242"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:56.211" endtime="20201029 18:26:56.242"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:56.248" endtime="20201029 18:26:56.535"></status>
</kw>
<msg timestamp="20201029 18:26:56.538" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020315708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020383444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:26:56.247" endtime="20201029 18:26:56.538"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:26:56.547" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020315708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020383444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:26:56.539" endtime="20201029 18:26:56.547"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:56.548" endtime="20201029 18:26:56.549"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:56.244" endtime="20201029 18:26:56.550"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:56.243" endtime="20201029 18:26:56.550"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:26:56.554" level="INFO">${RESULT} = [{'diff': 6.773600000000227e-05}, {'diff': 6.808300000000003e-05}, {'diff': 6.748600000000202e-05}, {'diff': 6.756899999999996e-05}, {'diff': 6.800000000000209e-05}, {'diff': 6.755500000000039e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:26:56.551" endtime="20201029 18:26:56.554"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:26:56.558" level="INFO">${ACCURACY} = {'diff': [6.773600000000227e-05, 6.808300000000003e-05, 6.748600000000202e-05, 6.756899999999996e-05, 6.800000000000209e-05, 6.755500000000039e-05, 6.790299999999763e-05, 6.759700000000257e-05, 6.8014...</msg>
<status status="PASS" starttime="20201029 18:26:56.555" endtime="20201029 18:26:56.558"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:26:56.563" level="INFO">NAME: accuracy-TIMER_SET-63-philip</msg>
<status status="PASS" starttime="20201029 18:26:56.562" endtime="20201029 18:26:56.563"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:26:56.565" level="INFO">VALUE: [6.773600000000227e-05, 6.808300000000003e-05, 6.748600000000202e-05, 6.756899999999996e-05, 6.800000000000209e-05, 6.755500000000039e-05, 6.790299999999763e-05, 6.759700000000257e-05, 6.801400000000166e-05, 6.772199999999923e-05, 6.766700000000042e-05, 6.77359999999988e-05, 6.748600000000202e-05, 6.720899999999863e-05, 6.737499999999799e-05, 6.758299999999953e-05, 6.805500000000089e-05, 6.802700000000175e-05, 6.715300000000035e-05, 6.720800000000263e-05, 6.793000000000077e-05, 6.795799999999991e-05, 6.723600000000177e-05, 6.798600000000252e-05, 6.7277000000001e-05, 6.765300000000085e-05, 6.777800000000098e-05, 6.723700000000124e-05, 6.775000000000184e-05, 6.799999999999862e-05, 6.751399999999769e-05, 6.813899999999831e-05, 6.777800000000098e-05, 6.802800000000123e-05, 6.752800000000073e-05, 6.729200000000005e-05, 6.794499999999981e-05, 6.727800000000048e-05, 6.723600000000177e-05, 6.819400000000059e-05, 6.770799999999966e-05, 6.801400000000166e-05, 6.769400000000009e-05, 6.797299999999895e-05, 6.813799999999884e-05, 6.795799999999991e-05, 6.801400000000166e-05, 6.733299999999928e-05, 6.736100000000189e-05, 6.765299999999738e-05]</msg>
<status status="PASS" starttime="20201029 18:26:56.564" endtime="20201029 18:26:56.570"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:56.559" endtime="20201029 18:26:56.570"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:26:56.574" endtime="20201029 18:26:56.594"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:56.573" endtime="20201029 18:26:56.595"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:56.571" endtime="20201029 18:26:56.595"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:56.209" endtime="20201029 18:26:56.595"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:56.209" endtime="20201029 18:26:56.595"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:56.606" endtime="20201029 18:26:56.625"></status>
</kw>
<msg timestamp="20201029 18:26:56.626" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:26:56.605" endtime="20201029 18:26:56.626"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:26:56.628" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:26:56.627" endtime="20201029 18:26:56.628"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:56.629" endtime="20201029 18:26:56.631"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:56.601" endtime="20201029 18:26:56.631"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:56.598" endtime="20201029 18:26:56.632"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:56.639" endtime="20201029 18:26:56.941"></status>
</kw>
<msg timestamp="20201029 18:26:56.949" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02380125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023870319, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:26:56.638" endtime="20201029 18:26:56.949"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:26:56.958" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02380125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023870319, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:26:56.950" endtime="20201029 18:26:56.958"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:56.959" endtime="20201029 18:26:56.960"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:56.634" endtime="20201029 18:26:56.961"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:56.632" endtime="20201029 18:26:56.962"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:26:56.965" level="INFO">${RESULT} = [{'diff': 6.906900000000146e-05}, {'diff': 6.870799999999719e-05}, {'diff': 6.876399999999894e-05}, {'diff': 6.822199999999973e-05}, {'diff': 6.865300000000185e-05}, {'diff': 6.85420000000013e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:26:56.962" endtime="20201029 18:26:56.966"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:26:56.969" level="INFO">${ACCURACY} = {'diff': [6.906900000000146e-05, 6.870799999999719e-05, 6.876399999999894e-05, 6.822199999999973e-05, 6.865300000000185e-05, 6.85420000000013e-05, 6.915299999999888e-05, 6.844500000000031e-05, 6.89309...</msg>
<status status="PASS" starttime="20201029 18:26:56.966" endtime="20201029 18:26:56.970"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:26:56.974" level="INFO">NAME: accuracy-TIMER_SET-64-philip</msg>
<status status="PASS" starttime="20201029 18:26:56.973" endtime="20201029 18:26:56.974"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:26:56.977" level="INFO">VALUE: [6.906900000000146e-05, 6.870799999999719e-05, 6.876399999999894e-05, 6.822199999999973e-05, 6.865300000000185e-05, 6.85420000000013e-05, 6.915299999999888e-05, 6.844500000000031e-05, 6.893099999999777e-05, 6.848599999999955e-05, 6.861099999999967e-05, 6.869499999999709e-05, 6.915300000000235e-05, 6.824999999999887e-05, 6.90420000000018e-05, 6.840199999999866e-05, 6.874999999999937e-05, 6.905499999999842e-05, 6.830600000000062e-05, 6.908299999999756e-05, 6.90970000000006e-05, 6.912499999999974e-05, 6.829199999999758e-05, 6.840299999999813e-05, 6.830600000000062e-05, 6.857000000000044e-05, 6.884700000000035e-05, 6.870799999999719e-05, 6.87229999999997e-05, 6.858300000000053e-05, 6.862500000000271e-05, 6.831900000000071e-05, 6.891599999999873e-05, 6.847199999999998e-05, 6.856900000000096e-05, 6.913899999999931e-05, 6.845800000000041e-05, 6.882000000000069e-05, 6.89169999999982e-05, 6.868100000000099e-05, 6.912499999999974e-05, 6.84030000000016e-05, 6.90840000000005e-05, 6.865199999999891e-05, 6.831900000000071e-05, 6.874999999999937e-05, 6.868000000000152e-05, 6.894399999999787e-05, 6.898600000000005e-05, 6.836100000000289e-05]</msg>
<status status="PASS" starttime="20201029 18:26:56.975" endtime="20201029 18:26:56.978"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:56.970" endtime="20201029 18:26:56.979"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:26:56.982" endtime="20201029 18:26:57.002"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:56.981" endtime="20201029 18:26:57.003"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:56.980" endtime="20201029 18:26:57.003"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:56.596" endtime="20201029 18:26:57.003"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:56.596" endtime="20201029 18:26:57.003"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:57.012" endtime="20201029 18:26:57.029"></status>
</kw>
<msg timestamp="20201029 18:26:57.030" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:26:57.010" endtime="20201029 18:26:57.030"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:26:57.032" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:26:57.031" endtime="20201029 18:26:57.033"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:57.033" endtime="20201029 18:26:57.035"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:57.008" endtime="20201029 18:26:57.037"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:57.006" endtime="20201029 18:26:57.037"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:57.044" endtime="20201029 18:26:57.330"></status>
</kw>
<msg timestamp="20201029 18:26:57.333" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020158986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020228903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:26:57.042" endtime="20201029 18:26:57.333"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:26:57.341" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020158986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020228903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:26:57.334" endtime="20201029 18:26:57.341"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:57.342" endtime="20201029 18:26:57.344"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:57.039" endtime="20201029 18:26:57.344"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:57.038" endtime="20201029 18:26:57.344"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:26:57.348" level="INFO">${RESULT} = [{'diff': 6.99169999999992e-05}, {'diff': 6.936100000000042e-05}, {'diff': 7.004199999999933e-05}, {'diff': 6.990299999999963e-05}, {'diff': 6.956899999999849e-05}, {'diff': 7.020800000000216e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:26:57.345" endtime="20201029 18:26:57.349"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:26:57.353" level="INFO">${ACCURACY} = {'diff': [6.99169999999992e-05, 6.936100000000042e-05, 7.004199999999933e-05, 6.990299999999963e-05, 6.956899999999849e-05, 7.020800000000216e-05, 7.018099999999902e-05, 6.993099999999877e-05, 6.93329...</msg>
<status status="PASS" starttime="20201029 18:26:57.349" endtime="20201029 18:26:57.354"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:26:57.358" level="INFO">NAME: accuracy-TIMER_SET-65-philip</msg>
<status status="PASS" starttime="20201029 18:26:57.357" endtime="20201029 18:26:57.358"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:26:57.360" level="INFO">VALUE: [6.99169999999992e-05, 6.936100000000042e-05, 7.004199999999933e-05, 6.990299999999963e-05, 6.956899999999849e-05, 7.020800000000216e-05, 7.018099999999902e-05, 6.993099999999877e-05, 6.933299999999781e-05, 7.002799999999976e-05, 6.943000000000227e-05, 6.97909999999996e-05, 7.00970000000016e-05, 6.997200000000148e-05, 6.944399999999837e-05, 6.988900000000006e-05, 7.000000000000062e-05, 6.963899999999981e-05, 7.019400000000259e-05, 6.929199999999858e-05, 7.019499999999859e-05, 6.979199999999908e-05, 6.980599999999865e-05, 7.020900000000163e-05, 6.92360000000003e-05, 6.995799999999844e-05, 6.948600000000055e-05, 7.015200000000041e-05, 6.99299999999993e-05, 6.972200000000123e-05, 6.940299999999913e-05, 6.963900000000328e-05, 6.988900000000006e-05, 6.970900000000113e-05, 6.976399999999994e-05, 7.020899999999816e-05, 6.963899999999981e-05, 7.019400000000259e-05, 6.943099999999827e-05, 6.947200000000098e-05, 6.924999999999987e-05, 6.956900000000196e-05, 6.930500000000214e-05, 7.00970000000016e-05, 6.980600000000212e-05, 6.955600000000187e-05, 7.008300000000203e-05, 6.937499999999999e-05, 6.965299999999938e-05, 7.01109999999977e-05]</msg>
<status status="PASS" starttime="20201029 18:26:57.359" endtime="20201029 18:26:57.361"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:57.354" endtime="20201029 18:26:57.361"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:26:57.365" endtime="20201029 18:26:57.384"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:57.364" endtime="20201029 18:26:57.385"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:57.362" endtime="20201029 18:26:57.385"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:57.004" endtime="20201029 18:26:57.386"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:57.004" endtime="20201029 18:26:57.386"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:57.394" endtime="20201029 18:26:57.411"></status>
</kw>
<msg timestamp="20201029 18:26:57.411" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:26:57.393" endtime="20201029 18:26:57.411"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:26:57.414" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:26:57.412" endtime="20201029 18:26:57.414"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:57.415" endtime="20201029 18:26:57.416"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:57.390" endtime="20201029 18:26:57.417"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:57.388" endtime="20201029 18:26:57.417"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:57.423" endtime="20201029 18:26:57.723"></status>
</kw>
<msg timestamp="20201029 18:26:57.730" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019524014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019594694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:26:57.422" endtime="20201029 18:26:57.730"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:26:57.748" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019524014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019594694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:26:57.732" endtime="20201029 18:26:57.749"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:57.750" endtime="20201029 18:26:57.754"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:57.419" endtime="20201029 18:26:57.755"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:57.418" endtime="20201029 18:26:57.756"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:26:57.763" level="INFO">${RESULT} = [{'diff': 7.068000000000005e-05}, {'diff': 7.066699999999995e-05}, {'diff': 7.086100000000192e-05}, {'diff': 7.088900000000106e-05}, {'diff': 7.051399999999722e-05}, {'diff': 7.081899999999974e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:26:57.757" endtime="20201029 18:26:57.764"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:26:57.768" level="INFO">${ACCURACY} = {'diff': [7.068000000000005e-05, 7.066699999999995e-05, 7.086100000000192e-05, 7.088900000000106e-05, 7.051399999999722e-05, 7.081899999999974e-05, 7.070799999999919e-05, 7.115299999999741e-05, 7.0764...</msg>
<status status="PASS" starttime="20201029 18:26:57.764" endtime="20201029 18:26:57.768"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:26:57.772" level="INFO">NAME: accuracy-TIMER_SET-66-philip</msg>
<status status="PASS" starttime="20201029 18:26:57.771" endtime="20201029 18:26:57.772"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:26:57.774" level="INFO">VALUE: [7.068000000000005e-05, 7.066699999999995e-05, 7.086100000000192e-05, 7.088900000000106e-05, 7.051399999999722e-05, 7.081899999999974e-05, 7.070799999999919e-05, 7.115299999999741e-05, 7.076400000000094e-05, 7.090300000000063e-05, 7.048599999999808e-05, 7.047200000000198e-05, 7.097199999999901e-05, 7.034799999999786e-05, 7.104099999999738e-05, 7.102800000000076e-05, 7.026400000000044e-05, 7.088899999999759e-05, 7.075000000000137e-05, 7.068000000000005e-05, 7.087500000000149e-05, 7.052800000000026e-05, 7.113900000000131e-05, 7.026399999999697e-05, 7.034699999999838e-05, 7.113900000000131e-05, 7.030599999999915e-05, 7.026400000000044e-05, 7.104200000000033e-05, 7.070899999999866e-05, 7.11109999999987e-05, 7.100000000000162e-05, 7.030499999999967e-05, 7.112499999999827e-05, 7.072200000000223e-05, 7.116700000000045e-05, 7.07360000000018e-05, 7.034700000000185e-05, 7.079200000000008e-05, 7.02499999999974e-05, 7.026400000000044e-05, 7.058299999999906e-05, 7.08049999999967e-05, 7.092999999999683e-05, 7.098600000000205e-05, 7.073599999999833e-05, 7.105500000000042e-05, 7.083299999999931e-05, 7.07499999999979e-05, 7.065300000000038e-05]</msg>
<status status="PASS" starttime="20201029 18:26:57.773" endtime="20201029 18:26:57.775"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:57.768" endtime="20201029 18:26:57.776"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:26:57.779" endtime="20201029 18:26:57.799"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:57.778" endtime="20201029 18:26:57.799"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:57.777" endtime="20201029 18:26:57.799"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:57.387" endtime="20201029 18:26:57.800"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:57.386" endtime="20201029 18:26:57.800"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:57.808" endtime="20201029 18:26:57.828"></status>
</kw>
<msg timestamp="20201029 18:26:57.828" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:26:57.807" endtime="20201029 18:26:57.828"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:26:57.830" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:26:57.829" endtime="20201029 18:26:57.831"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:57.832" endtime="20201029 18:26:57.833"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:57.804" endtime="20201029 18:26:57.834"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:57.802" endtime="20201029 18:26:57.834"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:57.840" endtime="20201029 18:26:58.126"></status>
</kw>
<msg timestamp="20201029 18:26:58.129" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020324222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020395528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:26:57.839" endtime="20201029 18:26:58.129"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:26:58.137" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020324222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020395528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:26:58.130" endtime="20201029 18:26:58.138"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:58.138" endtime="20201029 18:26:58.140"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:57.836" endtime="20201029 18:26:58.140"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:57.835" endtime="20201029 18:26:58.141"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:26:58.145" level="INFO">${RESULT} = [{'diff': 7.130600000000015e-05}, {'diff': 7.179200000000108e-05}, {'diff': 7.165300000000138e-05}, {'diff': 7.198599999999958e-05}, {'diff': 7.163900000000181e-05}, {'diff': 7.2069000000001e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 18:26:58.142" endtime="20201029 18:26:58.145"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:26:58.149" level="INFO">${ACCURACY} = {'diff': [7.130600000000015e-05, 7.179200000000108e-05, 7.165300000000138e-05, 7.198599999999958e-05, 7.163900000000181e-05, 7.2069000000001e-05, 7.134699999999938e-05, 7.176400000000194e-05, 7.199999...</msg>
<status status="PASS" starttime="20201029 18:26:58.146" endtime="20201029 18:26:58.149"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:26:58.153" level="INFO">NAME: accuracy-TIMER_SET-67-philip</msg>
<status status="PASS" starttime="20201029 18:26:58.152" endtime="20201029 18:26:58.154"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:26:58.159" level="INFO">VALUE: [7.130600000000015e-05, 7.179200000000108e-05, 7.165300000000138e-05, 7.198599999999958e-05, 7.163900000000181e-05, 7.2069000000001e-05, 7.134699999999938e-05, 7.176400000000194e-05, 7.199999999999915e-05, 7.152800000000126e-05, 7.133299999999981e-05, 7.145799999999994e-05, 7.137499999999852e-05, 7.215299999999841e-05, 7.213900000000231e-05, 7.190199999999869e-05, 7.125000000000187e-05, 7.218100000000102e-05, 7.172299999999923e-05, 7.123599999999883e-05, 7.18049999999977e-05, 7.176400000000194e-05, 7.152800000000126e-05, 7.173599999999933e-05, 7.194400000000087e-05, 7.208300000000056e-05, 7.184699999999988e-05, 7.130600000000015e-05, 7.131999999999972e-05, 7.147300000000245e-05, 7.173599999999933e-05, 7.205500000000142e-05, 7.123599999999883e-05, 7.1762999999999e-05, 7.179200000000108e-05, 7.191599999999826e-05, 7.180500000000117e-05, 7.2069000000001e-05, 7.116699999999698e-05, 7.21109999999997e-05, 7.183300000000031e-05, 7.15690000000005e-05, 7.137500000000199e-05, 7.215199999999894e-05, 7.163899999999834e-05, 7.168100000000052e-05, 7.219400000000112e-05, 7.155500000000092e-05, 7.158300000000006e-05, 7.154100000000135e-05]</msg>
<status status="PASS" starttime="20201029 18:26:58.154" endtime="20201029 18:26:58.160"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:58.150" endtime="20201029 18:26:58.160"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:26:58.164" endtime="20201029 18:26:58.183"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:58.162" endtime="20201029 18:26:58.184"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:58.161" endtime="20201029 18:26:58.184"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:57.801" endtime="20201029 18:26:58.184"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:57.800" endtime="20201029 18:26:58.185"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:58.193" endtime="20201029 18:26:58.210"></status>
</kw>
<msg timestamp="20201029 18:26:58.210" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:26:58.192" endtime="20201029 18:26:58.210"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:26:58.213" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:26:58.211" endtime="20201029 18:26:58.213"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:58.214" endtime="20201029 18:26:58.215"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:58.189" endtime="20201029 18:26:58.216"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:58.187" endtime="20201029 18:26:58.216"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:58.223" endtime="20201029 18:26:58.508"></status>
</kw>
<msg timestamp="20201029 18:26:58.511" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0192765, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019349611, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:26:58.221" endtime="20201029 18:26:58.511"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:26:58.519" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0192765, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019349611, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:26:58.512" endtime="20201029 18:26:58.519"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:58.520" endtime="20201029 18:26:58.522"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:58.218" endtime="20201029 18:26:58.522"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:58.217" endtime="20201029 18:26:58.523"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:26:58.527" level="INFO">${RESULT} = [{'diff': 7.31110000000007e-05}, {'diff': 7.308300000000156e-05}, {'diff': 7.311099999999723e-05}, {'diff': 7.250000000000312e-05}, {'diff': 7.27499999999999e-05}, {'diff': 7.222200000000026e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 18:26:58.524" endtime="20201029 18:26:58.527"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:26:58.532" level="INFO">${ACCURACY} = {'diff': [7.31110000000007e-05, 7.308300000000156e-05, 7.311099999999723e-05, 7.250000000000312e-05, 7.27499999999999e-05, 7.222200000000026e-05, 7.263899999999934e-05, 7.219500000000059e-05, 7.224999...</msg>
<status status="PASS" starttime="20201029 18:26:58.528" endtime="20201029 18:26:58.532"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:26:58.536" level="INFO">NAME: accuracy-TIMER_SET-68-philip</msg>
<status status="PASS" starttime="20201029 18:26:58.535" endtime="20201029 18:26:58.536"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:26:58.538" level="INFO">VALUE: [7.31110000000007e-05, 7.308300000000156e-05, 7.311099999999723e-05, 7.250000000000312e-05, 7.27499999999999e-05, 7.222200000000026e-05, 7.263899999999934e-05, 7.219500000000059e-05, 7.22499999999994e-05, 7.287500000000002e-05, 7.295800000000144e-05, 7.270800000000119e-05, 7.27499999999999e-05, 7.248600000000008e-05, 7.223599999999983e-05, 7.304200000000233e-05, 7.300000000000015e-05, 7.223599999999983e-05, 7.305499999999895e-05, 7.279200000000208e-05, 7.259800000000011e-05, 7.27499999999999e-05, 7.234799999999986e-05, 7.22499999999994e-05, 7.254100000000235e-05, 7.298600000000058e-05, 7.255500000000192e-05, 7.304199999999886e-05, 7.295800000000144e-05, 7.305599999999843e-05, 7.252799999999879e-05, 7.286100000000045e-05, 7.272200000000076e-05, 7.234799999999986e-05, 7.255500000000192e-05, 7.294400000000187e-05, 7.280500000000217e-05, 7.281900000000174e-05, 7.3069000000002e-05, 7.25829999999976e-05, 7.288900000000306e-05, 7.223599999999983e-05, 7.234699999999691e-05, 7.27499999999999e-05, 7.287500000000002e-05, 7.279199999999861e-05, 7.273700000000327e-05, 7.304099999999938e-05, 7.262499999999977e-05, 7.298600000000058e-05]</msg>
<status status="PASS" starttime="20201029 18:26:58.537" endtime="20201029 18:26:58.539"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:58.533" endtime="20201029 18:26:58.540"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:26:58.543" endtime="20201029 18:26:58.563"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:58.542" endtime="20201029 18:26:58.563"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:58.541" endtime="20201029 18:26:58.564"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:58.185" endtime="20201029 18:26:58.564"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:58.185" endtime="20201029 18:26:58.564"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:58.573" endtime="20201029 18:26:58.590"></status>
</kw>
<msg timestamp="20201029 18:26:58.591" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:26:58.571" endtime="20201029 18:26:58.591"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:26:58.593" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:26:58.592" endtime="20201029 18:26:58.594"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:58.594" endtime="20201029 18:26:58.596"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:58.569" endtime="20201029 18:26:58.597"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:58.567" endtime="20201029 18:26:58.597"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:58.603" endtime="20201029 18:26:58.889"></status>
</kw>
<msg timestamp="20201029 18:26:58.893" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020139403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020213028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:26:58.602" endtime="20201029 18:26:58.893"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:26:58.901" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020139403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020213028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:26:58.894" endtime="20201029 18:26:58.901"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:58.902" endtime="20201029 18:26:58.904"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:58.599" endtime="20201029 18:26:58.904"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:58.598" endtime="20201029 18:26:58.904"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:26:58.908" level="INFO">${RESULT} = [{'diff': 7.362500000000077e-05}, {'diff': 7.37500000000009e-05}, {'diff': 7.341600000000323e-05}, {'diff': 7.41249999999978e-05}, {'diff': 7.416600000000051e-05}, {'diff': 7.390300000000016e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 18:26:58.905" endtime="20201029 18:26:58.909"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:26:58.912" level="INFO">${ACCURACY} = {'diff': [7.362500000000077e-05, 7.37500000000009e-05, 7.341600000000323e-05, 7.41249999999978e-05, 7.416600000000051e-05, 7.390300000000016e-05, 7.393100000000277e-05, 7.404199999999986e-05, 7.375000...</msg>
<status status="PASS" starttime="20201029 18:26:58.909" endtime="20201029 18:26:58.913"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:26:58.917" level="INFO">NAME: accuracy-TIMER_SET-69-philip</msg>
<status status="PASS" starttime="20201029 18:26:58.916" endtime="20201029 18:26:58.917"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:26:58.919" level="INFO">VALUE: [7.362500000000077e-05, 7.37500000000009e-05, 7.341600000000323e-05, 7.41249999999978e-05, 7.416600000000051e-05, 7.390300000000016e-05, 7.393100000000277e-05, 7.404199999999986e-05, 7.37500000000009e-05, 7.351400000000022e-05, 7.349999999999718e-05, 7.395799999999897e-05, 7.412500000000127e-05, 7.372299999999776e-05, 7.394500000000234e-05, 7.359700000000163e-05, 7.329099999999963e-05, 7.41249999999978e-05, 7.374999999999743e-05, 7.362500000000077e-05, 7.405599999999943e-05, 7.413900000000084e-05, 7.344500000000184e-05, 7.333400000000129e-05, 7.373600000000133e-05, 7.369499999999862e-05, 7.384699999999841e-05, 7.395799999999897e-05, 7.41249999999978e-05, 7.319400000000212e-05, 7.409700000000213e-05, 7.394400000000287e-05, 7.397199999999854e-05, 7.365299999999991e-05, 7.333300000000181e-05, 7.359800000000111e-05, 7.4069999999999e-05, 7.4069999999999e-05, 7.329199999999911e-05, 7.402800000000029e-05, 7.354099999999988e-05, 7.373600000000133e-05, 7.392999999999983e-05, 7.329199999999911e-05, 7.336099999999748e-05, 7.381899999999927e-05, 7.386100000000145e-05, 7.382000000000222e-05, 7.387500000000102e-05, 7.400000000000115e-05]</msg>
<status status="PASS" starttime="20201029 18:26:58.918" endtime="20201029 18:26:58.920"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:58.913" endtime="20201029 18:26:58.920"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:26:58.924" endtime="20201029 18:26:58.944"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:58.923" endtime="20201029 18:26:58.944"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:58.921" endtime="20201029 18:26:58.944"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:58.565" endtime="20201029 18:26:58.945"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:58.565" endtime="20201029 18:26:58.945"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:58.954" endtime="20201029 18:26:58.974"></status>
</kw>
<msg timestamp="20201029 18:26:58.974" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:26:58.952" endtime="20201029 18:26:58.974"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:26:58.977" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:26:58.975" endtime="20201029 18:26:58.977"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:58.978" endtime="20201029 18:26:58.979"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:58.949" endtime="20201029 18:26:58.980"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:58.947" endtime="20201029 18:26:58.980"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:58.986" endtime="20201029 18:26:59.271"></status>
</kw>
<msg timestamp="20201029 18:26:59.274" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021114833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021189486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:26:58.985" endtime="20201029 18:26:59.274"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:26:59.282" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021114833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021189486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:26:59.275" endtime="20201029 18:26:59.282"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:59.283" endtime="20201029 18:26:59.285"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:58.982" endtime="20201029 18:26:59.285"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:58.981" endtime="20201029 18:26:59.286"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:26:59.289" level="INFO">${RESULT} = [{'diff': 7.465300000000091e-05}, {'diff': 7.441600000000076e-05}, {'diff': 7.479200000000061e-05}, {'diff': 7.45699999999995e-05}, {'diff': 7.433299999999934e-05}, {'diff': 7.426400000000097e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:26:59.286" endtime="20201029 18:26:59.290"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:26:59.294" level="INFO">${ACCURACY} = {'diff': [7.465300000000091e-05, 7.441600000000076e-05, 7.479200000000061e-05, 7.45699999999995e-05, 7.433299999999934e-05, 7.426400000000097e-05, 7.438900000000109e-05, 7.444500000000284e-05, 7.46659...</msg>
<status status="PASS" starttime="20201029 18:26:59.290" endtime="20201029 18:26:59.294"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:26:59.298" level="INFO">NAME: accuracy-TIMER_SET-70-philip</msg>
<status status="PASS" starttime="20201029 18:26:59.297" endtime="20201029 18:26:59.298"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:26:59.300" level="INFO">VALUE: [7.465300000000091e-05, 7.441600000000076e-05, 7.479200000000061e-05, 7.45699999999995e-05, 7.433299999999934e-05, 7.426400000000097e-05, 7.438900000000109e-05, 7.444500000000284e-05, 7.466599999999754e-05, 7.473599999999886e-05, 7.49310000000003e-05, 7.468000000000058e-05, 7.486099999999898e-05, 7.469400000000015e-05, 7.43050000000002e-05, 7.502800000000129e-05, 7.495799999999997e-05, 7.423599999999836e-05, 7.450000000000165e-05, 7.437499999999805e-05, 7.461200000000168e-05, 7.480600000000018e-05, 7.498699999999858e-05, 7.431999999999925e-05, 7.488899999999812e-05, 7.431899999999977e-05, 7.480499999999723e-05, 7.513899999999837e-05, 7.516700000000098e-05, 7.427800000000054e-05, 7.422199999999879e-05, 7.462500000000177e-05, 7.436100000000195e-05, 7.482000000000322e-05, 7.481999999999975e-05, 7.508400000000304e-05, 7.481999999999975e-05, 7.44439999999999e-05, 7.46110000000022e-05, 7.506900000000052e-05, 7.481900000000027e-05, 7.448600000000208e-05, 7.481900000000027e-05, 7.51110000000027e-05, 7.502800000000129e-05, 7.429200000000011e-05, 7.455599999999993e-05, 7.516700000000098e-05, 7.449999999999818e-05, 7.466699999999701e-05]</msg>
<status status="PASS" starttime="20201029 18:26:59.299" endtime="20201029 18:26:59.302"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:59.294" endtime="20201029 18:26:59.303"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:26:59.306" endtime="20201029 18:26:59.326"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:59.305" endtime="20201029 18:26:59.326"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:59.304" endtime="20201029 18:26:59.327"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:58.946" endtime="20201029 18:26:59.327"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:58.945" endtime="20201029 18:26:59.327"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:59.335" endtime="20201029 18:26:59.355"></status>
</kw>
<msg timestamp="20201029 18:26:59.355" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:26:59.334" endtime="20201029 18:26:59.356"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:26:59.358" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:26:59.356" endtime="20201029 18:26:59.358"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:59.359" endtime="20201029 18:26:59.360"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:59.331" endtime="20201029 18:26:59.361"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:59.329" endtime="20201029 18:26:59.361"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:59.368" endtime="20201029 18:26:59.653"></status>
</kw>
<msg timestamp="20201029 18:26:59.656" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020150014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020225625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:26:59.366" endtime="20201029 18:26:59.656"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:26:59.664" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020150014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020225625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:26:59.657" endtime="20201029 18:26:59.665"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:59.665" endtime="20201029 18:26:59.667"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:59.364" endtime="20201029 18:26:59.668"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:59.362" endtime="20201029 18:26:59.668"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:26:59.672" level="INFO">${RESULT} = [{'diff': 7.561099999999973e-05}, {'diff': 7.613900000000284e-05}, {'diff': 7.609700000000066e-05}, {'diff': 7.552800000000179e-05}, {'diff': 7.609800000000014e-05}, {'diff': 7.527799999999807e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:26:59.669" endtime="20201029 18:26:59.672"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:26:59.677" level="INFO">${ACCURACY} = {'diff': [7.561099999999973e-05, 7.613900000000284e-05, 7.609700000000066e-05, 7.552800000000179e-05, 7.609800000000014e-05, 7.527799999999807e-05, 7.59029999999987e-05, 7.541700000000123e-05, 7.56249...</msg>
<status status="PASS" starttime="20201029 18:26:59.673" endtime="20201029 18:26:59.677"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:26:59.681" level="INFO">NAME: accuracy-TIMER_SET-71-philip</msg>
<status status="PASS" starttime="20201029 18:26:59.680" endtime="20201029 18:26:59.682"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:26:59.684" level="INFO">VALUE: [7.561099999999973e-05, 7.613900000000284e-05, 7.609700000000066e-05, 7.552800000000179e-05, 7.609800000000014e-05, 7.527799999999807e-05, 7.59029999999987e-05, 7.541700000000123e-05, 7.56249999999993e-05, 7.547200000000004e-05, 7.59440000000014e-05, 7.572200000000029e-05, 7.559700000000016e-05, 7.522199999999979e-05, 7.55830000000006e-05, 7.555500000000145e-05, 7.620900000000069e-05, 7.569500000000062e-05, 7.619500000000112e-05, 7.532000000000025e-05, 7.55700000000005e-05, 7.619399999999818e-05, 7.595800000000097e-05, 7.52500000000024e-05, 7.609700000000066e-05, 7.561099999999973e-05, 7.59029999999987e-05, 7.566700000000148e-05, 7.552799999999832e-05, 7.541700000000123e-05, 7.530600000000068e-05, 7.573599999999986e-05, 7.540200000000219e-05, 7.566600000000201e-05, 7.566600000000201e-05, 7.543000000000133e-05, 7.59029999999987e-05, 7.527799999999807e-05, 7.591699999999826e-05, 7.61249999999998e-05, 7.602799999999882e-05, 7.55830000000006e-05, 7.522199999999979e-05, 7.532000000000025e-05, 7.59029999999987e-05, 7.54029999999982e-05, 7.597300000000001e-05, 7.587500000000302e-05, 7.598600000000011e-05, 7.537499999999905e-05]</msg>
<status status="PASS" starttime="20201029 18:26:59.682" endtime="20201029 18:26:59.684"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:59.678" endtime="20201029 18:26:59.685"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:26:59.689" endtime="20201029 18:26:59.708"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:59.687" endtime="20201029 18:26:59.709"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:59.686" endtime="20201029 18:26:59.709"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:59.328" endtime="20201029 18:26:59.709"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:59.327" endtime="20201029 18:26:59.709"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:59.718" endtime="20201029 18:26:59.736"></status>
</kw>
<msg timestamp="20201029 18:26:59.737" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:26:59.716" endtime="20201029 18:26:59.737"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:26:59.739" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:26:59.738" endtime="20201029 18:26:59.739"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:59.740" endtime="20201029 18:26:59.742"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:59.714" endtime="20201029 18:26:59.742"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:59.712" endtime="20201029 18:26:59.743"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:26:59.749" endtime="20201029 18:27:00.036"></status>
</kw>
<msg timestamp="20201029 18:27:00.039" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019361361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019438264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:26:59.748" endtime="20201029 18:27:00.039"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:00.047" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019361361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019438264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:00.040" endtime="20201029 18:27:00.047"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:00.048" endtime="20201029 18:27:00.050"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:59.745" endtime="20201029 18:27:00.050"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:59.743" endtime="20201029 18:27:00.051"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:27:00.055" level="INFO">${RESULT} = [{'diff': 7.69029999999997e-05}, {'diff': 7.634700000000091e-05}, {'diff': 7.623600000000036e-05}, {'diff': 7.651399999999975e-05}, {'diff': 7.630599999999821e-05}, {'diff': 7.705599999999896e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:27:00.052" endtime="20201029 18:27:00.055"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:27:00.059" level="INFO">${ACCURACY} = {'diff': [7.69029999999997e-05, 7.634700000000091e-05, 7.623600000000036e-05, 7.651399999999975e-05, 7.630599999999821e-05, 7.705599999999896e-05, 7.701400000000025e-05, 7.666599999999954e-05, 7.63189...</msg>
<status status="PASS" starttime="20201029 18:27:00.056" endtime="20201029 18:27:00.059"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:27:00.063" level="INFO">NAME: accuracy-TIMER_SET-72-philip</msg>
<status status="PASS" starttime="20201029 18:27:00.062" endtime="20201029 18:27:00.063"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:27:00.065" level="INFO">VALUE: [7.69029999999997e-05, 7.634700000000091e-05, 7.623600000000036e-05, 7.651399999999975e-05, 7.630599999999821e-05, 7.705599999999896e-05, 7.701400000000025e-05, 7.666599999999954e-05, 7.63189999999983e-05, 7.697200000000154e-05, 7.70830000000021e-05, 7.662499999999683e-05, 7.62639999999995e-05, 7.682000000000175e-05, 7.651399999999975e-05, 7.631900000000177e-05, 7.698600000000111e-05, 7.658400000000107e-05, 7.697299999999754e-05, 7.630600000000168e-05, 7.697300000000101e-05, 7.652799999999932e-05, 7.702799999999982e-05, 7.695800000000197e-05, 7.665299999999944e-05, 7.708299999999862e-05, 7.650000000000018e-05, 7.624999999999993e-05, 7.719499999999865e-05, 7.683300000000184e-05, 7.719499999999865e-05, 7.718099999999908e-05, 7.637500000000005e-05, 7.669499999999815e-05, 7.697200000000154e-05, 7.666599999999954e-05, 7.681900000000227e-05, 7.666699999999901e-05, 7.70969999999982e-05, 7.688900000000012e-05, 7.680600000000218e-05, 7.70830000000021e-05, 7.701400000000025e-05, 7.668099999999858e-05, 7.713900000000037e-05, 7.643099999999833e-05, 7.651300000000028e-05, 7.641600000000276e-05, 7.69579999999985e-05, 7.655500000000245e-05]</msg>
<status status="PASS" starttime="20201029 18:27:00.064" endtime="20201029 18:27:00.066"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:00.059" endtime="20201029 18:27:00.067"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:27:00.070" endtime="20201029 18:27:00.090"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:00.069" endtime="20201029 18:27:00.090"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:00.068" endtime="20201029 18:27:00.091"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:59.710" endtime="20201029 18:27:00.091"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:59.710" endtime="20201029 18:27:00.091"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:00.100" endtime="20201029 18:27:00.119"></status>
</kw>
<msg timestamp="20201029 18:27:00.119" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:00.098" endtime="20201029 18:27:00.119"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:00.122" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:00.120" endtime="20201029 18:27:00.122"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:00.123" endtime="20201029 18:27:00.124"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:00.096" endtime="20201029 18:27:00.125"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:00.093" endtime="20201029 18:27:00.125"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:00.132" endtime="20201029 18:27:00.417"></status>
</kw>
<msg timestamp="20201029 18:27:00.420" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021383819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021461403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:00.130" endtime="20201029 18:27:00.420"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:00.428" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021383819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021461403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:00.421" endtime="20201029 18:27:00.428"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:00.429" endtime="20201029 18:27:00.431"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:00.128" endtime="20201029 18:27:00.431"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:00.126" endtime="20201029 18:27:00.432"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:27:00.435" level="INFO">${RESULT} = [{'diff': 7.758400000000207e-05}, {'diff': 7.8151999999998e-05}, {'diff': 7.723600000000136e-05}, {'diff': 7.772200000000229e-05}, {'diff': 7.798599999999864e-05}, {'diff': 7.797199999999907e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 18:27:00.432" endtime="20201029 18:27:00.436"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:27:00.440" level="INFO">${ACCURACY} = {'diff': [7.758400000000207e-05, 7.8151999999998e-05, 7.723600000000136e-05, 7.772200000000229e-05, 7.798599999999864e-05, 7.797199999999907e-05, 7.784699999999894e-05, 7.741600000000029e-05, 7.811099...</msg>
<status status="PASS" starttime="20201029 18:27:00.436" endtime="20201029 18:27:00.440"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:27:00.444" level="INFO">NAME: accuracy-TIMER_SET-73-philip</msg>
<status status="PASS" starttime="20201029 18:27:00.443" endtime="20201029 18:27:00.444"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:27:00.446" level="INFO">VALUE: [7.758400000000207e-05, 7.8151999999998e-05, 7.723600000000136e-05, 7.772200000000229e-05, 7.798599999999864e-05, 7.797199999999907e-05, 7.784699999999894e-05, 7.741600000000029e-05, 7.811099999999876e-05, 7.761099999999826e-05, 7.766700000000001e-05, 7.780599999999971e-05, 7.726399999999703e-05, 7.758400000000207e-05, 7.773600000000186e-05, 7.816700000000051e-05, 7.802799999999735e-05, 7.790199999999775e-05, 7.820800000000322e-05, 7.72640000000005e-05, 7.754100000000042e-05, 7.731900000000277e-05, 7.751400000000075e-05, 7.737500000000105e-05, 7.78189999999998e-05, 7.772200000000229e-05, 7.754199999999989e-05, 7.7764000000001e-05, 7.79030000000007e-05, 7.74449999999989e-05, 7.734799999999792e-05, 7.747200000000204e-05, 7.797200000000254e-05, 7.772199999999882e-05, 7.816700000000051e-05, 7.816700000000051e-05, 7.74030000000002e-05, 7.79030000000007e-05, 7.780599999999971e-05, 7.795900000000244e-05, 7.755499999999999e-05, 7.770900000000219e-05, 7.729199999999964e-05, 7.730499999999974e-05, 7.722199999999832e-05, 7.802700000000135e-05, 7.802799999999735e-05, 7.791600000000079e-05, 7.729199999999964e-05, 7.73189999999993e-05]</msg>
<status status="PASS" starttime="20201029 18:27:00.445" endtime="20201029 18:27:00.448"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:00.440" endtime="20201029 18:27:00.448"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:27:00.452" endtime="20201029 18:27:00.472"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:00.451" endtime="20201029 18:27:00.472"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:00.450" endtime="20201029 18:27:00.473"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:00.092" endtime="20201029 18:27:00.473"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:00.091" endtime="20201029 18:27:00.473"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:00.481" endtime="20201029 18:27:00.500"></status>
</kw>
<msg timestamp="20201029 18:27:00.500" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:00.480" endtime="20201029 18:27:00.500"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:00.503" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:00.501" endtime="20201029 18:27:00.503"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:00.504" endtime="20201029 18:27:00.505"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:00.477" endtime="20201029 18:27:00.506"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:00.475" endtime="20201029 18:27:00.506"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:00.513" endtime="20201029 18:27:00.800"></status>
</kw>
<msg timestamp="20201029 18:27:00.803" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020317028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020396083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:00.511" endtime="20201029 18:27:00.803"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:00.811" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020317028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020396083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:00.804" endtime="20201029 18:27:00.811"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:00.812" endtime="20201029 18:27:00.814"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:00.508" endtime="20201029 18:27:00.814"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:00.507" endtime="20201029 18:27:00.815"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:27:00.818" level="INFO">${RESULT} = [{'diff': 7.905499999999802e-05}, {'diff': 7.86250000000023e-05}, {'diff': 7.88190000000008e-05}, {'diff': 7.855500000000099e-05}, {'diff': 7.847199999999957e-05}, {'diff': 7.917999999999814e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 18:27:00.815" endtime="20201029 18:27:00.819"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:27:00.823" level="INFO">${ACCURACY} = {'diff': [7.905499999999802e-05, 7.86250000000023e-05, 7.88190000000008e-05, 7.855500000000099e-05, 7.847199999999957e-05, 7.917999999999814e-05, 7.877800000000157e-05, 7.91389999999989e-05, 7.8903000...</msg>
<status status="PASS" starttime="20201029 18:27:00.819" endtime="20201029 18:27:00.824"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:27:00.828" level="INFO">NAME: accuracy-TIMER_SET-74-philip</msg>
<status status="PASS" starttime="20201029 18:27:00.827" endtime="20201029 18:27:00.828"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:27:00.830" level="INFO">VALUE: [7.905499999999802e-05, 7.86250000000023e-05, 7.88190000000008e-05, 7.855500000000099e-05, 7.847199999999957e-05, 7.917999999999814e-05, 7.877800000000157e-05, 7.91389999999989e-05, 7.89030000000017e-05, 7.829199999999717e-05, 7.905500000000149e-05, 7.89580000000005e-05, 7.877800000000157e-05, 7.898599999999964e-05, 7.899999999999921e-05, 7.829199999999717e-05, 7.836099999999901e-05, 7.843100000000033e-05, 7.899999999999921e-05, 7.858300000000012e-05, 7.887499999999908e-05, 7.836099999999901e-05, 7.868100000000058e-05, 7.854200000000089e-05, 7.868000000000111e-05, 7.83190000000003e-05, 7.874999999999896e-05, 7.899999999999921e-05, 7.823599999999889e-05, 7.863900000000187e-05, 7.895799999999703e-05, 7.897200000000007e-05, 7.872199999999982e-05, 7.915299999999847e-05, 7.89030000000017e-05, 7.830600000000021e-05, 7.833399999999935e-05, 7.830600000000021e-05, 7.861100000000273e-05, 7.87779999999981e-05, 7.856900000000056e-05, 7.873599999999939e-05, 7.895899999999997e-05, 7.891700000000126e-05, 7.843100000000033e-05, 7.826399999999803e-05, 7.907000000000053e-05, 7.834699999999944e-05, 7.851399999999828e-05, 7.887499999999908e-05]</msg>
<status status="PASS" starttime="20201029 18:27:00.829" endtime="20201029 18:27:00.831"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:00.824" endtime="20201029 18:27:00.831"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:27:00.835" endtime="20201029 18:27:00.854"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:00.834" endtime="20201029 18:27:00.855"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:00.832" endtime="20201029 18:27:00.855"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:00.474" endtime="20201029 18:27:00.856"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:00.473" endtime="20201029 18:27:00.856"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:00.864" endtime="20201029 18:27:00.883"></status>
</kw>
<msg timestamp="20201029 18:27:00.883" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:00.863" endtime="20201029 18:27:00.883"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:00.886" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:00.884" endtime="20201029 18:27:00.886"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:00.887" endtime="20201029 18:27:00.888"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:00.860" endtime="20201029 18:27:00.889"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:00.858" endtime="20201029 18:27:00.889"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:00.896" endtime="20201029 18:27:01.183"></status>
</kw>
<msg timestamp="20201029 18:27:01.186" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019416806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019496403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:00.894" endtime="20201029 18:27:01.186"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:01.194" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019416806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019496403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:01.187" endtime="20201029 18:27:01.194"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:01.195" endtime="20201029 18:27:01.197"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:00.892" endtime="20201029 18:27:01.197"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:00.890" endtime="20201029 18:27:01.198"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:27:01.202" level="INFO">${RESULT} = [{'diff': 7.959699999999723e-05}, {'diff': 7.936100000000001e-05}, {'diff': 7.938899999999915e-05}, {'diff': 7.933400000000035e-05}, {'diff': 7.984800000000042e-05}, {'diff': 8.00970000000012e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:27:01.198" endtime="20201029 18:27:01.202"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:27:01.206" level="INFO">${ACCURACY} = {'diff': [7.959699999999723e-05, 7.936100000000001e-05, 7.938899999999915e-05, 7.933400000000035e-05, 7.984800000000042e-05, 8.00970000000012e-05, 8.019400000000218e-05, 7.918099999999761e-05, 7.92920...</msg>
<status status="PASS" starttime="20201029 18:27:01.203" endtime="20201029 18:27:01.206"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:27:01.210" level="INFO">NAME: accuracy-TIMER_SET-75-philip</msg>
<status status="PASS" starttime="20201029 18:27:01.209" endtime="20201029 18:27:01.210"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:27:01.213" level="INFO">VALUE: [7.959699999999723e-05, 7.936100000000001e-05, 7.938899999999915e-05, 7.933400000000035e-05, 7.984800000000042e-05, 8.00970000000012e-05, 8.019400000000218e-05, 7.918099999999761e-05, 7.929200000000164e-05, 8.011100000000076e-05, 7.969500000000115e-05, 8.001399999999978e-05, 7.981999999999781e-05, 8.004200000000239e-05, 7.97230000000003e-05, 7.99450000000014e-05, 7.965299999999897e-05, 7.994400000000193e-05, 7.930499999999827e-05, 7.949999999999971e-05, 7.973600000000039e-05, 7.979199999999867e-05, 7.922200000000032e-05, 7.974999999999996e-05, 7.925000000000293e-05, 7.966700000000201e-05, 7.937499999999958e-05, 7.965300000000244e-05, 8.004100000000292e-05, 7.924999999999946e-05, 7.974999999999996e-05, 7.988899999999965e-05, 7.93190000000013e-05, 7.992999999999889e-05, 7.952799999999885e-05, 7.940299999999872e-05, 8.000000000000021e-05, 7.943100000000133e-05, 7.931899999999784e-05, 7.983400000000085e-05, 8.004199999999892e-05, 8.012500000000033e-05, 7.937499999999958e-05, 7.994399999999846e-05, 8.006899999999859e-05, 7.93190000000013e-05, 7.9764000000003e-05, 7.968100000000158e-05, 8.001399999999978e-05, 7.962499999999983e-05]</msg>
<status status="PASS" starttime="20201029 18:27:01.211" endtime="20201029 18:27:01.213"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:01.207" endtime="20201029 18:27:01.214"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:27:01.217" endtime="20201029 18:27:01.237"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:01.216" endtime="20201029 18:27:01.238"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:01.215" endtime="20201029 18:27:01.238"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:00.857" endtime="20201029 18:27:01.238"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:00.856" endtime="20201029 18:27:01.238"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:01.247" endtime="20201029 18:27:01.265"></status>
</kw>
<msg timestamp="20201029 18:27:01.266" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:01.245" endtime="20201029 18:27:01.266"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:01.268" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:01.267" endtime="20201029 18:27:01.269"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:01.269" endtime="20201029 18:27:01.271"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:01.243" endtime="20201029 18:27:01.272"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:01.241" endtime="20201029 18:27:01.272"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:01.278" endtime="20201029 18:27:01.565"></status>
</kw>
<msg timestamp="20201029 18:27:01.568" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021020069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021100639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:01.277" endtime="20201029 18:27:01.568"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:01.576" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021020069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021100639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:01.569" endtime="20201029 18:27:01.577"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:01.578" endtime="20201029 18:27:01.579"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:01.274" endtime="20201029 18:27:01.580"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:01.273" endtime="20201029 18:27:01.580"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:27:01.584" level="INFO">${RESULT} = [{'diff': 8.057000000000203e-05}, {'diff': 8.034699999999798e-05}, {'diff': 8.026400000000003e-05}, {'diff': 8.10840000000021e-05}, {'diff': 8.111200000000124e-05}, {'diff': 8.08329999999989e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 18:27:01.581" endtime="20201029 18:27:01.585"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:27:01.588" level="INFO">${ACCURACY} = {'diff': [8.057000000000203e-05, 8.034699999999798e-05, 8.026400000000003e-05, 8.10840000000021e-05, 8.111200000000124e-05, 8.08329999999989e-05, 8.066600000000007e-05, 8.095799999999903e-05, 8.102800...</msg>
<status status="PASS" starttime="20201029 18:27:01.585" endtime="20201029 18:27:01.589"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:27:01.593" level="INFO">NAME: accuracy-TIMER_SET-76-philip</msg>
<status status="PASS" starttime="20201029 18:27:01.592" endtime="20201029 18:27:01.593"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:27:01.598" level="INFO">VALUE: [8.057000000000203e-05, 8.034699999999798e-05, 8.026400000000003e-05, 8.10840000000021e-05, 8.111200000000124e-05, 8.08329999999989e-05, 8.066600000000007e-05, 8.095799999999903e-05, 8.102800000000035e-05, 8.088900000000065e-05, 8.040299999999972e-05, 8.055599999999899e-05, 8.113899999999744e-05, 8.088900000000065e-05, 8.051400000000028e-05, 8.083400000000185e-05, 8.105599999999949e-05, 8.031899999999884e-05, 8.069399999999921e-05, 8.084700000000195e-05, 8.11390000000009e-05, 8.045799999999853e-05, 8.04450000000019e-05, 8.068099999999911e-05, 8.094499999999893e-05, 8.029200000000264e-05, 8.073599999999792e-05, 8.086199999999752e-05, 8.030499999999927e-05, 8.084699999999848e-05, 8.072199999999835e-05, 8.023599999999742e-05, 8.073599999999792e-05, 8.09169999999998e-05, 8.036100000000101e-05, 8.116700000000004e-05, 8.107000000000253e-05, 8.106999999999906e-05, 8.072199999999835e-05, 8.11390000000009e-05, 8.063800000000093e-05, 8.054099999999995e-05, 8.037500000000058e-05, 8.091600000000032e-05, 8.06109999999978e-05, 8.111100000000177e-05, 8.073600000000139e-05, 8.116700000000004e-05, 8.100000000000121e-05, 8.102800000000035e-05]</msg>
<status status="PASS" starttime="20201029 18:27:01.594" endtime="20201029 18:27:01.605"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:01.589" endtime="20201029 18:27:01.606"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:27:01.610" endtime="20201029 18:27:01.629"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:01.608" endtime="20201029 18:27:01.630"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:01.607" endtime="20201029 18:27:01.630"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:01.239" endtime="20201029 18:27:01.630"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:01.239" endtime="20201029 18:27:01.631"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:01.640" endtime="20201029 18:27:01.659"></status>
</kw>
<msg timestamp="20201029 18:27:01.659" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:01.639" endtime="20201029 18:27:01.660"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:01.662" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:01.660" endtime="20201029 18:27:01.662"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:01.663" endtime="20201029 18:27:01.665"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:01.635" endtime="20201029 18:27:01.665"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:01.633" endtime="20201029 18:27:01.666"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:01.672" endtime="20201029 18:27:01.958"></status>
</kw>
<msg timestamp="20201029 18:27:01.961" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021556194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021637875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:01.670" endtime="20201029 18:27:01.961"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:01.969" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021556194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021637875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:01.962" endtime="20201029 18:27:01.970"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:01.970" endtime="20201029 18:27:01.972"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:01.668" endtime="20201029 18:27:01.973"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:01.666" endtime="20201029 18:27:01.973"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:27:01.977" level="INFO">${RESULT} = [{'diff': 8.168100000000011e-05}, {'diff': 8.16109999999988e-05}, {'diff': 8.144499999999943e-05}, {'diff': 8.143099999999986e-05}, {'diff': 8.19170000000008e-05}, {'diff': 8.176399999999806e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 18:27:01.974" endtime="20201029 18:27:01.977"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:27:01.982" level="INFO">${ACCURACY} = {'diff': [8.168100000000011e-05, 8.16109999999988e-05, 8.144499999999943e-05, 8.143099999999986e-05, 8.19170000000008e-05, 8.176399999999806e-05, 8.141600000000082e-05, 8.222199999999985e-05, 8.188799...</msg>
<status status="PASS" starttime="20201029 18:27:01.978" endtime="20201029 18:27:01.982"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:27:01.986" level="INFO">NAME: accuracy-TIMER_SET-77-philip</msg>
<status status="PASS" starttime="20201029 18:27:01.985" endtime="20201029 18:27:01.987"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:27:01.989" level="INFO">VALUE: [8.168100000000011e-05, 8.16109999999988e-05, 8.144499999999943e-05, 8.143099999999986e-05, 8.19170000000008e-05, 8.176399999999806e-05, 8.141600000000082e-05, 8.222199999999985e-05, 8.188799999999871e-05, 8.17910000000012e-05, 8.133399999999888e-05, 8.215300000000147e-05, 8.138899999999769e-05, 8.195800000000003e-05, 8.176400000000153e-05, 8.172199999999935e-05, 8.181999999999981e-05, 8.216699999999758e-05, 8.21390000000019e-05, 8.16109999999988e-05, 8.175000000000196e-05, 8.125000000000146e-05, 8.208300000000016e-05, 8.13329999999994e-05, 8.168000000000064e-05, 8.131899999999984e-05, 8.132000000000278e-05, 8.131999999999931e-05, 8.21390000000019e-05, 8.213899999999844e-05, 8.206900000000059e-05, 8.213899999999844e-05, 8.154100000000095e-05, 8.124999999999799e-05, 8.152800000000085e-05, 8.198599999999917e-05, 8.184699999999948e-05, 8.166699999999708e-05, 8.174999999999849e-05, 8.13329999999994e-05, 8.123600000000189e-05, 8.144499999999943e-05, 8.138900000000115e-05, 8.211199999999877e-05, 8.174999999999849e-05, 8.174999999999849e-05, 8.2152999999998e-05, 8.143000000000039e-05, 8.155500000000052e-05, 8.198599999999917e-05]</msg>
<status status="PASS" starttime="20201029 18:27:01.988" endtime="20201029 18:27:01.990"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:01.983" endtime="20201029 18:27:01.990"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:27:01.994" endtime="20201029 18:27:02.015"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:01.992" endtime="20201029 18:27:02.017"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:01.991" endtime="20201029 18:27:02.017"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:01.632" endtime="20201029 18:27:02.018"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:01.631" endtime="20201029 18:27:02.018"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:02.038" endtime="20201029 18:27:02.059"></status>
</kw>
<msg timestamp="20201029 18:27:02.060" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:02.033" endtime="20201029 18:27:02.061"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:02.066" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:02.063" endtime="20201029 18:27:02.066"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:02.068" endtime="20201029 18:27:02.071"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:02.028" endtime="20201029 18:27:02.072"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:02.023" endtime="20201029 18:27:02.073"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:02.087" endtime="20201029 18:27:02.376"></status>
</kw>
<msg timestamp="20201029 18:27:02.379" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035131847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0352145, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:27:02.084" endtime="20201029 18:27:02.379"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:02.387" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035131847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0352145, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:27:02.380" endtime="20201029 18:27:02.387"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:02.388" endtime="20201029 18:27:02.390"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:02.078" endtime="20201029 18:27:02.390"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:02.074" endtime="20201029 18:27:02.390"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:27:02.394" level="INFO">${RESULT} = [{'diff': 8.265300000000197e-05}, {'diff': 8.280599999999777e-05}, {'diff': 8.258299999999719e-05}, {'diff': 8.294400000000146e-05}, {'diff': 8.236100000000302e-05}, {'diff': 8.315300000000247e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:27:02.391" endtime="20201029 18:27:02.395"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:27:02.399" level="INFO">${ACCURACY} = {'diff': [8.265300000000197e-05, 8.280599999999777e-05, 8.258299999999719e-05, 8.294400000000146e-05, 8.236100000000302e-05, 8.315300000000247e-05, 8.255599999999752e-05, 8.26390000000024e-05, 8.27629...</msg>
<status status="PASS" starttime="20201029 18:27:02.395" endtime="20201029 18:27:02.399"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:27:02.403" level="INFO">NAME: accuracy-TIMER_SET-78-philip</msg>
<status status="PASS" starttime="20201029 18:27:02.402" endtime="20201029 18:27:02.403"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:27:02.406" level="INFO">VALUE: [8.265300000000197e-05, 8.280599999999777e-05, 8.258299999999719e-05, 8.294400000000146e-05, 8.236100000000302e-05, 8.315300000000247e-05, 8.255599999999752e-05, 8.26390000000024e-05, 8.276299999999959e-05, 8.252800000000532e-05, 8.227800000000507e-05, 8.301399999999931e-05, 8.220800000000028e-05, 8.227799999999813e-05, 8.256899999999762e-05, 8.230599999999727e-05, 8.25840000000036e-05, 8.222199999999985e-05, 8.257000000000403e-05, 8.288899999999572e-05, 8.280599999999777e-05, 8.263899999999547e-05, 8.29720000000006e-05, 8.31249999999964e-05, 8.23049999999978e-05, 8.273599999999992e-05, 8.272200000000035e-05, 8.255499999999805e-05, 8.274999999999949e-05, 8.238799999999574e-05, 8.26390000000024e-05, 8.316700000000204e-05, 8.247299999999957e-05, 8.256899999999762e-05, 8.23190000000043e-05, 8.3152000000003e-05, 8.274999999999949e-05, 8.225000000000593e-05, 8.26390000000024e-05, 8.26390000000024e-05, 8.224999999999899e-05, 8.294500000000093e-05, 8.288900000000265e-05, 8.316600000000257e-05, 8.263899999999547e-05, 8.299999999999974e-05, 8.23469999999965e-05, 8.248599999999967e-05, 8.256900000000456e-05, 8.306900000000506e-05]</msg>
<status status="PASS" starttime="20201029 18:27:02.404" endtime="20201029 18:27:02.406"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:02.399" endtime="20201029 18:27:02.407"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:27:02.411" endtime="20201029 18:27:02.430"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:02.409" endtime="20201029 18:27:02.431"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:02.408" endtime="20201029 18:27:02.431"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:02.020" endtime="20201029 18:27:02.431"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:02.019" endtime="20201029 18:27:02.431"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:02.441" endtime="20201029 18:27:02.461"></status>
</kw>
<msg timestamp="20201029 18:27:02.461" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:02.439" endtime="20201029 18:27:02.462"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:02.464" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:02.462" endtime="20201029 18:27:02.464"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:02.465" endtime="20201029 18:27:02.466"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:02.437" endtime="20201029 18:27:02.467"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:02.434" endtime="20201029 18:27:02.467"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:02.474" endtime="20201029 18:27:02.759"></status>
</kw>
<msg timestamp="20201029 18:27:02.762" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021517444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021601417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:02.472" endtime="20201029 18:27:02.762"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:02.770" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021517444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021601417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:02.763" endtime="20201029 18:27:02.771"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:02.771" endtime="20201029 18:27:02.773"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:02.470" endtime="20201029 18:27:02.774"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:02.468" endtime="20201029 18:27:02.774"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:27:02.778" level="INFO">${RESULT} = [{'diff': 8.397300000000107e-05}, {'diff': 8.331899999999837e-05}, {'diff': 8.407000000000206e-05}, {'diff': 8.419499999999872e-05}, {'diff': 8.397199999999813e-05}, {'diff': 8.397300000000107e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:27:02.775" endtime="20201029 18:27:02.778"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:27:02.782" level="INFO">${ACCURACY} = {'diff': [8.397300000000107e-05, 8.331899999999837e-05, 8.407000000000206e-05, 8.419499999999872e-05, 8.397199999999813e-05, 8.397300000000107e-05, 8.375000000000049e-05, 8.386100000000105e-05, 8.3902...</msg>
<status status="PASS" starttime="20201029 18:27:02.779" endtime="20201029 18:27:02.782"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:27:02.786" level="INFO">NAME: accuracy-TIMER_SET-79-philip</msg>
<status status="PASS" starttime="20201029 18:27:02.785" endtime="20201029 18:27:02.787"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:27:02.789" level="INFO">VALUE: [8.397300000000107e-05, 8.331899999999837e-05, 8.407000000000206e-05, 8.419499999999872e-05, 8.397199999999813e-05, 8.397300000000107e-05, 8.375000000000049e-05, 8.386100000000105e-05, 8.390200000000028e-05, 8.36659999999996e-05, 8.355499999999905e-05, 8.34170000000023e-05, 8.322199999999738e-05, 8.355599999999852e-05, 8.41110000000013e-05, 8.36659999999996e-05, 8.39590000000015e-05, 8.400000000000074e-05, 8.398600000000117e-05, 8.345800000000153e-05, 8.419399999999924e-05, 8.397199999999813e-05, 8.408300000000216e-05, 8.373600000000092e-05, 8.366699999999908e-05, 8.390200000000028e-05, 8.332000000000131e-05, 8.348600000000067e-05, 8.32919999999987e-05, 8.334800000000045e-05, 8.373599999999745e-05, 8.336100000000055e-05, 8.379099999999973e-05, 8.391599999999985e-05, 8.404199999999945e-05, 8.375000000000049e-05, 8.408299999999869e-05, 8.382000000000181e-05, 8.377799999999963e-05, 8.372300000000082e-05, 8.416700000000304e-05, 8.401299999999737e-05, 8.354199999999895e-05, 8.391699999999933e-05, 8.367999999999917e-05, 8.36110000000008e-05, 8.326399999999956e-05, 8.336100000000055e-05, 8.36110000000008e-05, 8.384700000000148e-05]</msg>
<status status="PASS" starttime="20201029 18:27:02.787" endtime="20201029 18:27:02.790"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:02.783" endtime="20201029 18:27:02.791"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:27:02.794" endtime="20201029 18:27:02.816"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:02.793" endtime="20201029 18:27:02.817"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:02.792" endtime="20201029 18:27:02.817"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:02.432" endtime="20201029 18:27:02.818"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:02.432" endtime="20201029 18:27:02.818"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:02.836" endtime="20201029 18:27:02.859"></status>
</kw>
<msg timestamp="20201029 18:27:02.860" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:02.833" endtime="20201029 18:27:02.860"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:02.865" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:02.862" endtime="20201029 18:27:02.865"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:02.867" endtime="20201029 18:27:02.870"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:02.828" endtime="20201029 18:27:02.871"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:02.823" endtime="20201029 18:27:02.872"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:02.886" endtime="20201029 18:27:03.176"></status>
</kw>
<msg timestamp="20201029 18:27:03.179" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0334235, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033508472, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:27:02.882" endtime="20201029 18:27:03.179"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:03.187" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0334235, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033508472, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:27:03.180" endtime="20201029 18:27:03.187"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:03.188" endtime="20201029 18:27:03.189"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:02.877" endtime="20201029 18:27:03.190"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:02.873" endtime="20201029 18:27:03.190"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:27:03.194" level="INFO">${RESULT} = [{'diff': 8.497199999999566e-05}, {'diff': 8.468000000000364e-05}, {'diff': 8.473600000000192e-05}, {'diff': 8.455500000000005e-05}, {'diff': 8.483299999999944e-05}, {'diff': 8.422200000000185e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:27:03.191" endtime="20201029 18:27:03.195"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:27:03.199" level="INFO">${ACCURACY} = {'diff': [8.497199999999566e-05, 8.468000000000364e-05, 8.473600000000192e-05, 8.455500000000005e-05, 8.483299999999944e-05, 8.422200000000185e-05, 8.43469999999985e-05, 8.520799999999634e-05, 8.50839...</msg>
<status status="PASS" starttime="20201029 18:27:03.195" endtime="20201029 18:27:03.200"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:27:03.204" level="INFO">NAME: accuracy-TIMER_SET-80-philip</msg>
<status status="PASS" starttime="20201029 18:27:03.203" endtime="20201029 18:27:03.204"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:27:03.206" level="INFO">VALUE: [8.497199999999566e-05, 8.468000000000364e-05, 8.473600000000192e-05, 8.455500000000005e-05, 8.483299999999944e-05, 8.422200000000185e-05, 8.43469999999985e-05, 8.520799999999634e-05, 8.508399999999916e-05, 8.451400000000081e-05, 8.46249999999979e-05, 8.46249999999979e-05, 8.481899999999987e-05, 8.476400000000106e-05, 8.482000000000628e-05, 8.519399999999677e-05, 8.476400000000106e-05, 8.4846999999999e-05, 8.466700000000354e-05, 8.47370000000014e-05, 8.458399999999866e-05, 8.508399999999916e-05, 8.441699999999636e-05, 8.454100000000048e-05, 8.466599999999713e-05, 8.490299999999729e-05, 8.490300000000423e-05, 8.493100000000336e-05, 8.506999999999959e-05, 8.455599999999952e-05, 8.461100000000527e-05, 8.515299999999754e-05, 8.513899999999797e-05, 8.434700000000545e-05, 8.497199999999566e-05, 8.443000000000339e-05, 8.479100000000073e-05, 8.51390000000049e-05, 8.475000000000149e-05, 8.508299999999969e-05, 8.440299999999679e-05, 8.465300000000398e-05, 8.468099999999618e-05, 8.488900000000466e-05, 8.494500000000293e-05, 8.505500000000055e-05, 8.504099999999404e-05, 8.498600000000217e-05, 8.422199999999491e-05, 8.511099999999883e-05]</msg>
<status status="PASS" starttime="20201029 18:27:03.205" endtime="20201029 18:27:03.207"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:03.200" endtime="20201029 18:27:03.207"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:27:03.211" endtime="20201029 18:27:03.231"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:03.210" endtime="20201029 18:27:03.231"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:03.208" endtime="20201029 18:27:03.231"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:02.820" endtime="20201029 18:27:03.232"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:02.819" endtime="20201029 18:27:03.232"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:03.240" endtime="20201029 18:27:03.259"></status>
</kw>
<msg timestamp="20201029 18:27:03.259" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:03.239" endtime="20201029 18:27:03.260"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:03.262" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:03.260" endtime="20201029 18:27:03.262"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:03.263" endtime="20201029 18:27:03.265"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:03.236" endtime="20201029 18:27:03.265"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:03.234" endtime="20201029 18:27:03.266"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:03.272" endtime="20201029 18:27:03.558"></status>
</kw>
<msg timestamp="20201029 18:27:03.561" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019457458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019542722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:03.270" endtime="20201029 18:27:03.561"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:03.569" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019457458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019542722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:03.562" endtime="20201029 18:27:03.570"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:03.570" endtime="20201029 18:27:03.572"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:03.268" endtime="20201029 18:27:03.573"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:03.266" endtime="20201029 18:27:03.573"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:27:03.577" level="INFO">${RESULT} = [{'diff': 8.526399999999809e-05}, {'diff': 8.551399999999834e-05}, {'diff': 8.586099999999958e-05}, {'diff': 8.561099999999933e-05}, {'diff': 8.531900000000037e-05}, {'diff': 8.56249999999989e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:27:03.574" endtime="20201029 18:27:03.577"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:27:03.581" level="INFO">${ACCURACY} = {'diff': [8.526399999999809e-05, 8.551399999999834e-05, 8.586099999999958e-05, 8.561099999999933e-05, 8.531900000000037e-05, 8.56249999999989e-05, 8.533399999999941e-05, 8.547199999999963e-05, 8.58610...</msg>
<status status="PASS" starttime="20201029 18:27:03.578" endtime="20201029 18:27:03.581"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:27:03.585" level="INFO">NAME: accuracy-TIMER_SET-81-philip</msg>
<status status="PASS" starttime="20201029 18:27:03.584" endtime="20201029 18:27:03.586"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:27:03.588" level="INFO">VALUE: [8.526399999999809e-05, 8.551399999999834e-05, 8.586099999999958e-05, 8.561099999999933e-05, 8.531900000000037e-05, 8.56249999999989e-05, 8.533399999999941e-05, 8.547199999999963e-05, 8.586100000000305e-05, 8.595900000000004e-05, 8.604199999999798e-05, 8.576400000000206e-05, 8.540299999999779e-05, 8.569500000000022e-05, 8.541599999999788e-05, 8.531900000000037e-05, 8.586099999999958e-05, 8.568100000000065e-05, 8.613899999999897e-05, 8.545800000000006e-05, 8.605599999999755e-05, 8.597200000000013e-05, 8.551399999999834e-05, 8.56119999999988e-05, 8.615299999999854e-05, 8.530499999999733e-05, 8.53050000000008e-05, 8.570800000000031e-05, 8.520799999999981e-05, 8.540300000000126e-05, 8.558300000000019e-05, 8.618099999999768e-05, 8.551400000000181e-05, 8.602800000000188e-05, 8.555600000000052e-05, 8.557000000000009e-05, 8.605600000000102e-05, 8.538900000000169e-05, 8.605500000000155e-05, 8.602699999999894e-05, 8.601399999999884e-05, 8.545899999999954e-05, 8.580600000000077e-05, 8.561099999999933e-05, 8.587500000000262e-05, 8.522199999999938e-05, 8.605500000000155e-05, 8.538900000000169e-05, 8.533299999999994e-05, 8.595800000000056e-05]</msg>
<status status="PASS" starttime="20201029 18:27:03.586" endtime="20201029 18:27:03.588"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:03.582" endtime="20201029 18:27:03.589"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:27:03.593" endtime="20201029 18:27:03.612"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:03.591" endtime="20201029 18:27:03.613"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:03.590" endtime="20201029 18:27:03.613"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:03.233" endtime="20201029 18:27:03.613"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:03.232" endtime="20201029 18:27:03.613"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:03.622" endtime="20201029 18:27:03.641"></status>
</kw>
<msg timestamp="20201029 18:27:03.642" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:03.620" endtime="20201029 18:27:03.642"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:03.644" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:03.643" endtime="20201029 18:27:03.644"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:03.645" endtime="20201029 18:27:03.647"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:03.618" endtime="20201029 18:27:03.647"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:03.616" endtime="20201029 18:27:03.648"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:03.654" endtime="20201029 18:27:03.939"></status>
</kw>
<msg timestamp="20201029 18:27:03.942" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021099389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021185861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:03.652" endtime="20201029 18:27:03.942"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:03.950" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021099389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021185861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:03.943" endtime="20201029 18:27:03.950"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:03.951" endtime="20201029 18:27:03.953"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:03.650" endtime="20201029 18:27:03.953"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:03.648" endtime="20201029 18:27:03.954"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:27:03.958" level="INFO">${RESULT} = [{'diff': 8.647200000000063e-05}, {'diff': 8.64860000000002e-05}, {'diff': 8.663899999999947e-05}, {'diff': 8.718099999999868e-05}, {'diff': 8.69730000000006e-05}, {'diff': 8.680600000000177e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 18:27:03.954" endtime="20201029 18:27:03.958"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:27:03.962" level="INFO">${ACCURACY} = {'diff': [8.647200000000063e-05, 8.64860000000002e-05, 8.663899999999947e-05, 8.718099999999868e-05, 8.69730000000006e-05, 8.680600000000177e-05, 8.66249999999999e-05, 8.676399999999959e-05, 8.7013999...</msg>
<status status="PASS" starttime="20201029 18:27:03.959" endtime="20201029 18:27:03.962"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:27:03.966" level="INFO">NAME: accuracy-TIMER_SET-82-philip</msg>
<status status="PASS" starttime="20201029 18:27:03.965" endtime="20201029 18:27:03.967"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:27:03.969" level="INFO">VALUE: [8.647200000000063e-05, 8.64860000000002e-05, 8.663899999999947e-05, 8.718099999999868e-05, 8.69730000000006e-05, 8.680600000000177e-05, 8.66249999999999e-05, 8.676399999999959e-05, 8.701399999999984e-05, 8.636100000000008e-05, 8.640299999999879e-05, 8.675000000000002e-05, 8.690299999999929e-05, 8.66669999999986e-05, 8.69860000000007e-05, 8.711100000000083e-05, 8.695900000000104e-05, 8.637499999999965e-05, 8.71250000000004e-05, 8.665199999999956e-05, 8.693000000000242e-05, 8.623599999999995e-05, 8.663900000000294e-05, 8.66119999999998e-05, 8.668100000000165e-05, 8.694500000000147e-05, 8.633400000000041e-05, 8.687500000000015e-05, 8.670900000000079e-05, 8.704199999999898e-05, 8.694399999999852e-05, 8.641700000000183e-05, 8.68050000000023e-05, 8.661100000000033e-05, 8.694399999999852e-05, 8.632000000000084e-05, 8.654199999999848e-05, 8.663900000000294e-05, 8.66249999999999e-05, 8.676399999999959e-05, 8.727799999999966e-05, 8.701300000000037e-05, 8.638899999999922e-05, 8.623599999999995e-05, 8.677799999999916e-05, 8.677799999999916e-05, 8.624999999999952e-05, 8.686100000000058e-05, 8.712499999999693e-05, 8.620900000000029e-05]</msg>
<status status="PASS" starttime="20201029 18:27:03.967" endtime="20201029 18:27:03.970"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:03.963" endtime="20201029 18:27:03.971"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:27:03.974" endtime="20201029 18:27:03.994"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:03.973" endtime="20201029 18:27:03.994"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:03.972" endtime="20201029 18:27:03.995"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:03.614" endtime="20201029 18:27:03.995"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:03.614" endtime="20201029 18:27:03.995"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:04.004" endtime="20201029 18:27:04.022"></status>
</kw>
<msg timestamp="20201029 18:27:04.023" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:04.002" endtime="20201029 18:27:04.023"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:04.025" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:04.024" endtime="20201029 18:27:04.026"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:04.026" endtime="20201029 18:27:04.028"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:03.999" endtime="20201029 18:27:04.029"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:03.997" endtime="20201029 18:27:04.029"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:04.036" endtime="20201029 18:27:04.322"></status>
</kw>
<msg timestamp="20201029 18:27:04.325" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020166611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020254306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:04.035" endtime="20201029 18:27:04.325"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:04.333" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020166611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020254306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:04.326" endtime="20201029 18:27:04.333"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:04.334" endtime="20201029 18:27:04.336"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:04.032" endtime="20201029 18:27:04.336"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:04.030" endtime="20201029 18:27:04.337"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:27:04.340" level="INFO">${RESULT} = [{'diff': 8.769499999999875e-05}, {'diff': 8.731900000000237e-05}, {'diff': 8.801400000000084e-05}, {'diff': 8.723600000000095e-05}, {'diff': 8.783400000000191e-05}, {'diff': 8.770899999999832e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:27:04.337" endtime="20201029 18:27:04.341"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:27:04.345" level="INFO">${ACCURACY} = {'diff': [8.769499999999875e-05, 8.731900000000237e-05, 8.801400000000084e-05, 8.723600000000095e-05, 8.783400000000191e-05, 8.770899999999832e-05, 8.793099999999943e-05, 8.725000000000052e-05, 8.7333...</msg>
<status status="PASS" starttime="20201029 18:27:04.341" endtime="20201029 18:27:04.346"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:27:04.350" level="INFO">NAME: accuracy-TIMER_SET-83-philip</msg>
<status status="PASS" starttime="20201029 18:27:04.349" endtime="20201029 18:27:04.350"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:27:04.352" level="INFO">VALUE: [8.769499999999875e-05, 8.731900000000237e-05, 8.801400000000084e-05, 8.723600000000095e-05, 8.783400000000191e-05, 8.770899999999832e-05, 8.793099999999943e-05, 8.725000000000052e-05, 8.733300000000194e-05, 8.773600000000145e-05, 8.808299999999922e-05, 8.784699999999854e-05, 8.769399999999927e-05, 8.73470000000015e-05, 8.787500000000115e-05, 8.787499999999768e-05, 8.722300000000086e-05, 8.784700000000201e-05, 8.783399999999844e-05, 8.79860000000017e-05, 8.76250000000009e-05, 8.741599999999988e-05, 8.756899999999915e-05, 8.754200000000295e-05, 8.777800000000016e-05, 8.81389999999975e-05, 8.773600000000145e-05, 8.736099999999761e-05, 8.773600000000145e-05, 8.738799999999727e-05, 8.740299999999979e-05, 8.73189999999989e-05, 8.819399999999977e-05, 8.76250000000009e-05, 8.73189999999989e-05, 8.800000000000127e-05, 8.729199999999923e-05, 8.74860000000012e-05, 8.722200000000138e-05, 8.755599999999905e-05, 8.81250000000014e-05, 8.806999999999912e-05, 8.76519999999971e-05, 8.815300000000054e-05, 8.78189999999994e-05, 8.734699999999804e-05, 8.73470000000015e-05, 8.790300000000029e-05, 8.768099999999918e-05, 8.745800000000206e-05]</msg>
<status status="PASS" starttime="20201029 18:27:04.351" endtime="20201029 18:27:04.353"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:04.346" endtime="20201029 18:27:04.354"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:27:04.357" endtime="20201029 18:27:04.377"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:04.356" endtime="20201029 18:27:04.377"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:04.354" endtime="20201029 18:27:04.377"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:03.996" endtime="20201029 18:27:04.378"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:03.995" endtime="20201029 18:27:04.378"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:04.386" endtime="20201029 18:27:04.405"></status>
</kw>
<msg timestamp="20201029 18:27:04.406" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:04.385" endtime="20201029 18:27:04.406"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:04.408" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:04.407" endtime="20201029 18:27:04.408"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:04.409" endtime="20201029 18:27:04.411"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:04.382" endtime="20201029 18:27:04.411"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:04.380" endtime="20201029 18:27:04.412"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:04.418" endtime="20201029 18:27:04.706"></status>
</kw>
<msg timestamp="20201029 18:27:04.709" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019346875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019435097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:04.417" endtime="20201029 18:27:04.709"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:04.717" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019346875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019435097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:04.710" endtime="20201029 18:27:04.717"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:04.718" endtime="20201029 18:27:04.720"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:04.414" endtime="20201029 18:27:04.720"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:04.412" endtime="20201029 18:27:04.721"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:27:04.725" level="INFO">${RESULT} = [{'diff': 8.822199999999891e-05}, {'diff': 8.895800000000009e-05}, {'diff': 8.875000000000202e-05}, {'diff': 8.856999999999962e-05}, {'diff': 8.822199999999891e-05}, {'diff': 8.925000000000252e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:27:04.721" endtime="20201029 18:27:04.725"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:27:04.729" level="INFO">${ACCURACY} = {'diff': [8.822199999999891e-05, 8.895800000000009e-05, 8.875000000000202e-05, 8.856999999999962e-05, 8.822199999999891e-05, 8.925000000000252e-05, 8.868100000000018e-05, 8.881999999999987e-05, 8.8612...</msg>
<status status="PASS" starttime="20201029 18:27:04.726" endtime="20201029 18:27:04.729"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:27:04.733" level="INFO">NAME: accuracy-TIMER_SET-84-philip</msg>
<status status="PASS" starttime="20201029 18:27:04.732" endtime="20201029 18:27:04.733"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:27:04.735" level="INFO">VALUE: [8.822199999999891e-05, 8.895800000000009e-05, 8.875000000000202e-05, 8.856999999999962e-05, 8.822199999999891e-05, 8.925000000000252e-05, 8.868100000000018e-05, 8.881999999999987e-05, 8.86120000000018e-05, 8.847200000000263e-05, 8.904100000000151e-05, 8.833300000000294e-05, 8.873600000000245e-05, 8.834699999999904e-05, 8.900000000000227e-05, 8.858299999999972e-05, 8.89999999999988e-05, 8.884799999999901e-05, 8.827800000000066e-05, 8.88190000000004e-05, 8.866600000000113e-05, 8.895799999999662e-05, 8.89999999999988e-05, 8.905500000000108e-05, 8.845799999999959e-05, 8.908300000000022e-05, 8.884800000000248e-05, 8.902800000000141e-05, 8.84860000000022e-05, 8.848599999999873e-05, 8.909799999999926e-05, 8.84999999999983e-05, 8.855500000000058e-05, 8.884699999999954e-05, 8.906900000000065e-05, 8.822199999999891e-05, 8.890300000000129e-05, 8.837500000000165e-05, 8.913900000000197e-05, 8.887500000000215e-05, 8.905600000000055e-05, 8.83059999999998e-05, 8.84999999999983e-05, 8.91519999999986e-05, 8.91800000000012e-05, 8.876399999999812e-05, 8.869400000000027e-05, 8.912499999999893e-05, 8.823599999999848e-05, 8.906899999999718e-05]</msg>
<status status="PASS" starttime="20201029 18:27:04.734" endtime="20201029 18:27:04.736"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:04.729" endtime="20201029 18:27:04.737"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:27:04.740" endtime="20201029 18:27:04.760"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:04.739" endtime="20201029 18:27:04.760"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:04.738" endtime="20201029 18:27:04.761"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:04.379" endtime="20201029 18:27:04.761"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:04.378" endtime="20201029 18:27:04.761"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:04.770" endtime="20201029 18:27:04.790"></status>
</kw>
<msg timestamp="20201029 18:27:04.791" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:04.768" endtime="20201029 18:27:04.791"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:04.793" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:04.792" endtime="20201029 18:27:04.793"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:04.794" endtime="20201029 18:27:04.796"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:04.766" endtime="20201029 18:27:04.796"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:04.764" endtime="20201029 18:27:04.797"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:04.803" endtime="20201029 18:27:05.088"></status>
</kw>
<msg timestamp="20201029 18:27:05.091" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020863736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020953375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:04.802" endtime="20201029 18:27:05.091"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:05.099" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020863736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020953375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:05.092" endtime="20201029 18:27:05.099"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:05.100" endtime="20201029 18:27:05.102"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:04.799" endtime="20201029 18:27:05.102"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:04.797" endtime="20201029 18:27:05.103"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:27:05.107" level="INFO">${RESULT} = [{'diff': 8.9638999999999e-05}, {'diff': 9.008299999999775e-05}, {'diff': 8.988899999999925e-05}, {'diff': 8.951399999999887e-05}, {'diff': 8.986100000000011e-05}, {'diff': 8.927700000000219e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 18:27:05.103" endtime="20201029 18:27:05.107"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:27:05.111" level="INFO">${ACCURACY} = {'diff': [8.9638999999999e-05, 9.008299999999775e-05, 8.988899999999925e-05, 8.951399999999887e-05, 8.986100000000011e-05, 8.927700000000219e-05, 8.920799999999687e-05, 8.974999999999955e-05, 8.998600...</msg>
<status status="PASS" starttime="20201029 18:27:05.108" endtime="20201029 18:27:05.111"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:27:05.115" level="INFO">NAME: accuracy-TIMER_SET-85-philip</msg>
<status status="PASS" starttime="20201029 18:27:05.114" endtime="20201029 18:27:05.115"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:27:05.120" level="INFO">VALUE: [8.9638999999999e-05, 9.008299999999775e-05, 8.988899999999925e-05, 8.951399999999887e-05, 8.986100000000011e-05, 8.927700000000219e-05, 8.920799999999687e-05, 8.974999999999955e-05, 8.998600000000023e-05, 8.943000000000145e-05, 9.012499999999993e-05, 9.018100000000168e-05, 8.98199999999974e-05, 8.99999999999998e-05, 8.976399999999912e-05, 8.993099999999796e-05, 9.01389999999995e-05, 8.970800000000084e-05, 8.984700000000054e-05, 8.997199999999719e-05, 8.983300000000097e-05, 8.943099999999746e-05, 9.015299999999907e-05, 8.952799999999844e-05, 8.923599999999948e-05, 9.016699999999864e-05, 9.001400000000284e-05, 8.98060000000013e-05, 8.926299999999915e-05, 8.956899999999768e-05, 8.997200000000066e-05, 8.959700000000029e-05, 8.987499999999968e-05, 9.01939999999983e-05, 9.01519999999996e-05, 9.011100000000036e-05, 8.961099999999986e-05, 8.99589999999971e-05, 8.99869999999997e-05, 9.001400000000284e-05, 8.997200000000066e-05, 9.01389999999995e-05, 8.987499999999968e-05, 8.979199999999826e-05, 8.938899999999875e-05, 9.001400000000284e-05, 8.930599999999733e-05, 8.973699999999946e-05, 8.922300000000286e-05, 9.019400000000177e-05]</msg>
<status status="PASS" starttime="20201029 18:27:05.116" endtime="20201029 18:27:05.122"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:05.112" endtime="20201029 18:27:05.122"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:27:05.126" endtime="20201029 18:27:05.145"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:05.124" endtime="20201029 18:27:05.146"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:05.123" endtime="20201029 18:27:05.146"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:04.762" endtime="20201029 18:27:05.146"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:04.761" endtime="20201029 18:27:05.146"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:05.155" endtime="20201029 18:27:05.173"></status>
</kw>
<msg timestamp="20201029 18:27:05.173" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:05.153" endtime="20201029 18:27:05.174"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:05.176" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:05.174" endtime="20201029 18:27:05.176"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:05.177" endtime="20201029 18:27:05.178"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:05.151" endtime="20201029 18:27:05.179"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:05.149" endtime="20201029 18:27:05.179"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:05.186" endtime="20201029 18:27:05.471"></status>
</kw>
<msg timestamp="20201029 18:27:05.474" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019836736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019927639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:05.184" endtime="20201029 18:27:05.474"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:05.482" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019836736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019927639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:05.475" endtime="20201029 18:27:05.483"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:05.483" endtime="20201029 18:27:05.485"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:05.182" endtime="20201029 18:27:05.485"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:05.180" endtime="20201029 18:27:05.486"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:27:05.490" level="INFO">${RESULT} = [{'diff': 9.090299999999982e-05}, {'diff': 9.104199999999951e-05}, {'diff': 9.105600000000255e-05}, {'diff': 9.065300000000304e-05}, {'diff': 9.093099999999896e-05}, {'diff': 9.10000000000008e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:27:05.487" endtime="20201029 18:27:05.490"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:27:05.495" level="INFO">${ACCURACY} = {'diff': [9.090299999999982e-05, 9.104199999999951e-05, 9.105600000000255e-05, 9.065300000000304e-05, 9.093099999999896e-05, 9.10000000000008e-05, 9.076400000000012e-05, 9.040299999999932e-05, 9.03059...</msg>
<status status="PASS" starttime="20201029 18:27:05.491" endtime="20201029 18:27:05.495"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:27:05.499" level="INFO">NAME: accuracy-TIMER_SET-86-philip</msg>
<status status="PASS" starttime="20201029 18:27:05.498" endtime="20201029 18:27:05.499"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:27:05.501" level="INFO">VALUE: [9.090299999999982e-05, 9.104199999999951e-05, 9.105600000000255e-05, 9.065300000000304e-05, 9.093099999999896e-05, 9.10000000000008e-05, 9.076400000000012e-05, 9.040299999999932e-05, 9.030599999999833e-05, 9.097199999999819e-05, 9.091699999999939e-05, 9.023600000000048e-05, 9.093100000000243e-05, 9.038899999999975e-05, 9.079199999999926e-05, 9.113800000000102e-05, 9.030499999999886e-05, 9.092999999999948e-05, 9.080500000000283e-05, 9.044399999999855e-05, 9.067999999999923e-05, 9.113899999999703e-05, 9.116699999999964e-05, 9.115300000000007e-05, 9.11390000000005e-05, 9.034800000000051e-05, 9.083400000000144e-05, 9.061100000000086e-05, 9.102799999999994e-05, 9.095800000000209e-05, 9.044399999999855e-05, 9.066699999999914e-05, 9.057000000000162e-05, 9.058300000000172e-05, 9.090299999999982e-05, 9.088900000000025e-05, 9.098600000000123e-05, 9.08329999999985e-05, 9.06939999999988e-05, 9.06800000000027e-05, 9.092999999999948e-05, 9.061099999999739e-05, 9.029200000000223e-05, 9.093099999999896e-05, 9.026399999999962e-05, 9.118099999999921e-05, 9.022200000000091e-05, 9.076300000000065e-05, 9.06939999999988e-05, 9.040199999999984e-05]</msg>
<status status="PASS" starttime="20201029 18:27:05.500" endtime="20201029 18:27:05.502"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:05.495" endtime="20201029 18:27:05.503"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:27:05.506" endtime="20201029 18:27:05.526"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:05.505" endtime="20201029 18:27:05.526"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:05.504" endtime="20201029 18:27:05.527"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:05.147" endtime="20201029 18:27:05.527"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:05.147" endtime="20201029 18:27:05.527"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:05.535" endtime="20201029 18:27:05.554"></status>
</kw>
<msg timestamp="20201029 18:27:05.554" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:05.534" endtime="20201029 18:27:05.554"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:05.557" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:05.555" endtime="20201029 18:27:05.557"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:05.558" endtime="20201029 18:27:05.559"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:05.531" endtime="20201029 18:27:05.560"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:05.529" endtime="20201029 18:27:05.560"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:05.567" endtime="20201029 18:27:05.854"></status>
</kw>
<msg timestamp="20201029 18:27:05.857" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019864278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019956319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:05.565" endtime="20201029 18:27:05.857"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:05.865" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019864278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019956319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:05.858" endtime="20201029 18:27:05.865"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:05.866" endtime="20201029 18:27:05.867"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:05.563" endtime="20201029 18:27:05.868"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:05.561" endtime="20201029 18:27:05.868"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:27:05.872" level="INFO">${RESULT} = [{'diff': 9.204100000000104e-05}, {'diff': 9.151400000000087e-05}, {'diff': 9.212500000000193e-05}, {'diff': 9.159700000000229e-05}, {'diff': 9.188900000000125e-05}, {'diff': 9.190300000000082e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:27:05.869" endtime="20201029 18:27:05.873"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:27:05.876" level="INFO">${ACCURACY} = {'diff': [9.204100000000104e-05, 9.151400000000087e-05, 9.212500000000193e-05, 9.159700000000229e-05, 9.188900000000125e-05, 9.190300000000082e-05, 9.162499999999796e-05, 9.176400000000112e-05, 9.1305...</msg>
<status status="PASS" starttime="20201029 18:27:05.873" endtime="20201029 18:27:05.877"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:27:05.881" level="INFO">NAME: accuracy-TIMER_SET-87-philip</msg>
<status status="PASS" starttime="20201029 18:27:05.880" endtime="20201029 18:27:05.881"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:27:05.883" level="INFO">VALUE: [9.204100000000104e-05, 9.151400000000087e-05, 9.212500000000193e-05, 9.159700000000229e-05, 9.188900000000125e-05, 9.190300000000082e-05, 9.162499999999796e-05, 9.176400000000112e-05, 9.130599999999933e-05, 9.14719999999987e-05, 9.206900000000018e-05, 9.184699999999907e-05, 9.141600000000041e-05, 9.209699999999932e-05, 9.184699999999907e-05, 9.205500000000061e-05, 9.134699999999857e-05, 9.151400000000087e-05, 9.141699999999989e-05, 9.174999999999808e-05, 9.204200000000051e-05, 9.120899999999835e-05, 9.220799999999987e-05, 9.152700000000097e-05, 9.194400000000005e-05, 9.131899999999943e-05, 9.168000000000023e-05, 9.176400000000112e-05, 9.21390000000015e-05, 9.191600000000091e-05, 9.1639000000001e-05, 9.216699999999717e-05, 9.155599999999958e-05, 9.198600000000223e-05, 9.173600000000198e-05, 9.177800000000069e-05, 9.137499999999771e-05, 9.213899999999803e-05, 9.218100000000021e-05, 9.198600000000223e-05, 9.222199999999944e-05, 9.134700000000204e-05, 9.174999999999808e-05, 9.129199999999976e-05, 9.172199999999894e-05, 9.20000000000018e-05, 9.21390000000015e-05, 9.179099999999732e-05, 9.141699999999989e-05, 9.148600000000173e-05]</msg>
<status status="PASS" starttime="20201029 18:27:05.882" endtime="20201029 18:27:05.884"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:05.877" endtime="20201029 18:27:05.885"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:27:05.888" endtime="20201029 18:27:05.907"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:05.887" endtime="20201029 18:27:05.908"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:05.885" endtime="20201029 18:27:05.908"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:05.528" endtime="20201029 18:27:05.909"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:05.527" endtime="20201029 18:27:05.909"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:05.917" endtime="20201029 18:27:05.937"></status>
</kw>
<msg timestamp="20201029 18:27:05.938" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:05.916" endtime="20201029 18:27:05.938"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:05.940" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:05.939" endtime="20201029 18:27:05.940"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:05.941" endtime="20201029 18:27:05.943"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:05.913" endtime="20201029 18:27:05.943"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:05.911" endtime="20201029 18:27:05.944"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:05.950" endtime="20201029 18:27:06.236"></status>
</kw>
<msg timestamp="20201029 18:27:06.239" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020264458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020356722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:05.948" endtime="20201029 18:27:06.239"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:06.247" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020264458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020356722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:06.240" endtime="20201029 18:27:06.247"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:06.248" endtime="20201029 18:27:06.250"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:05.946" endtime="20201029 18:27:06.250"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:05.944" endtime="20201029 18:27:06.251"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:27:06.255" level="INFO">${RESULT} = [{'diff': 9.226400000000162e-05}, {'diff': 9.309700000000032e-05}, {'diff': 9.224999999999858e-05}, {'diff': 9.248599999999926e-05}, {'diff': 9.263899999999853e-05}, {'diff': 9.220899999999935e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:27:06.251" endtime="20201029 18:27:06.255"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:27:06.259" level="INFO">${ACCURACY} = {'diff': [9.226400000000162e-05, 9.309700000000032e-05, 9.224999999999858e-05, 9.248599999999926e-05, 9.263899999999853e-05, 9.220899999999935e-05, 9.243100000000046e-05, 9.32079999999974e-05, 9.31249...</msg>
<status status="PASS" starttime="20201029 18:27:06.255" endtime="20201029 18:27:06.259"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:27:06.263" level="INFO">NAME: accuracy-TIMER_SET-88-philip</msg>
<status status="PASS" starttime="20201029 18:27:06.262" endtime="20201029 18:27:06.263"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:27:06.265" level="INFO">VALUE: [9.226400000000162e-05, 9.309700000000032e-05, 9.224999999999858e-05, 9.248599999999926e-05, 9.263899999999853e-05, 9.220899999999935e-05, 9.243100000000046e-05, 9.32079999999974e-05, 9.312499999999946e-05, 9.301299999999943e-05, 9.29720000000002e-05, 9.290299999999835e-05, 9.230600000000033e-05, 9.323600000000001e-05, 9.224999999999858e-05, 9.269500000000028e-05, 9.223599999999901e-05, 9.283399999999997e-05, 9.262499999999896e-05, 9.23879999999988e-05, 9.274999999999908e-05, 9.302799999999847e-05, 9.220799999999987e-05, 9.283299999999703e-05, 9.269500000000028e-05, 9.318100000000121e-05, 9.220899999999935e-05, 9.23199999999999e-05, 9.274999999999908e-05, 9.225000000000205e-05, 9.225000000000205e-05, 9.238899999999828e-05, 9.320800000000087e-05, 9.302799999999847e-05, 9.280500000000136e-05, 9.25139999999984e-05, 9.31529999999986e-05, 9.266699999999767e-05, 9.254099999999807e-05, 9.24870000000022e-05, 9.262499999999896e-05, 9.258300000000025e-05, 9.315199999999912e-05, 9.252800000000144e-05, 9.259699999999982e-05, 9.284700000000007e-05, 9.320800000000087e-05, 9.23199999999999e-05, 9.219499999999978e-05, 9.237500000000218e-05]</msg>
<status status="PASS" starttime="20201029 18:27:06.264" endtime="20201029 18:27:06.267"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:06.259" endtime="20201029 18:27:06.268"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:27:06.271" endtime="20201029 18:27:06.291"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:06.270" endtime="20201029 18:27:06.291"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:06.268" endtime="20201029 18:27:06.292"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:05.910" endtime="20201029 18:27:06.292"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:05.909" endtime="20201029 18:27:06.292"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:06.300" endtime="20201029 18:27:06.319"></status>
</kw>
<msg timestamp="20201029 18:27:06.319" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:06.299" endtime="20201029 18:27:06.319"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:06.321" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:06.320" endtime="20201029 18:27:06.322"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:06.323" endtime="20201029 18:27:06.324"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:06.296" endtime="20201029 18:27:06.325"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:06.294" endtime="20201029 18:27:06.325"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:06.331" endtime="20201029 18:27:06.618"></status>
</kw>
<msg timestamp="20201029 18:27:06.621" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019381889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019475889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:06.330" endtime="20201029 18:27:06.621"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:06.629" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019381889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019475889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:06.622" endtime="20201029 18:27:06.629"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:06.630" endtime="20201029 18:27:06.632"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:06.327" endtime="20201029 18:27:06.632"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:06.326" endtime="20201029 18:27:06.633"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:27:06.637" level="INFO">${RESULT} = [{'diff': 9.400000000000033e-05}, {'diff': 9.394500000000153e-05}, {'diff': 9.376300000000018e-05}, {'diff': 9.412500000000046e-05}, {'diff': 9.40139999999999e-05}, {'diff': 9.408400000000122e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:27:06.633" endtime="20201029 18:27:06.637"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:27:06.642" level="INFO">${ACCURACY} = {'diff': [9.400000000000033e-05, 9.394500000000153e-05, 9.376300000000018e-05, 9.412500000000046e-05, 9.40139999999999e-05, 9.408400000000122e-05, 9.376399999999965e-05, 9.415200000000012e-05, 9.41390...</msg>
<status status="PASS" starttime="20201029 18:27:06.638" endtime="20201029 18:27:06.642"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:27:06.646" level="INFO">NAME: accuracy-TIMER_SET-89-philip</msg>
<status status="PASS" starttime="20201029 18:27:06.645" endtime="20201029 18:27:06.646"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:27:06.648" level="INFO">VALUE: [9.400000000000033e-05, 9.394500000000153e-05, 9.376300000000018e-05, 9.412500000000046e-05, 9.40139999999999e-05, 9.408400000000122e-05, 9.376399999999965e-05, 9.415200000000012e-05, 9.413900000000003e-05, 9.334700000000057e-05, 9.366700000000214e-05, 9.329200000000176e-05, 9.408300000000175e-05, 9.341699999999842e-05, 9.405599999999861e-05, 9.338900000000275e-05, 9.411200000000036e-05, 9.345800000000112e-05, 9.381900000000193e-05, 9.327699999999925e-05, 9.387500000000021e-05, 9.340299999999885e-05, 9.334700000000057e-05, 9.330599999999786e-05, 9.416699999999917e-05, 9.41529999999996e-05, 9.380600000000183e-05, 9.380600000000183e-05, 9.345800000000112e-05, 9.340300000000232e-05, 9.390299999999935e-05, 9.320800000000087e-05, 9.405599999999861e-05, 9.366700000000214e-05, 9.405600000000208e-05, 9.3639000000003e-05, 9.362499999999996e-05, 9.348699999999974e-05, 9.340199999999937e-05, 9.323600000000001e-05, 9.412500000000046e-05, 9.411100000000089e-05, 9.420900000000135e-05, 9.402799999999947e-05, 9.358300000000125e-05, 9.327800000000219e-05, 9.372199999999747e-05, 9.405599999999861e-05, 9.404099999999957e-05, 9.333299999999753e-05]</msg>
<status status="PASS" starttime="20201029 18:27:06.647" endtime="20201029 18:27:06.649"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:06.643" endtime="20201029 18:27:06.650"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:27:06.653" endtime="20201029 18:27:06.673"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:06.652" endtime="20201029 18:27:06.673"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:06.651" endtime="20201029 18:27:06.674"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:06.293" endtime="20201029 18:27:06.674"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:06.292" endtime="20201029 18:27:06.674"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:06.683" endtime="20201029 18:27:06.702"></status>
</kw>
<msg timestamp="20201029 18:27:06.702" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:06.681" endtime="20201029 18:27:06.702"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:06.704" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:06.703" endtime="20201029 18:27:06.705"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:06.705" endtime="20201029 18:27:06.707"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:06.679" endtime="20201029 18:27:06.708"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:06.677" endtime="20201029 18:27:06.708"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:06.714" endtime="20201029 18:27:07.002"></status>
</kw>
<msg timestamp="20201029 18:27:07.005" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0195895, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019683972, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:27:06.713" endtime="20201029 18:27:07.005"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:07.013" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0195895, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019683972, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:27:07.006" endtime="20201029 18:27:07.013"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:07.014" endtime="20201029 18:27:07.016"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:06.710" endtime="20201029 18:27:07.016"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:06.709" endtime="20201029 18:27:07.017"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:27:07.020" level="INFO">${RESULT} = [{'diff': 9.44720000000017e-05}, {'diff': 9.450000000000083e-05}, {'diff': 9.488900000000078e-05}, {'diff': 9.426400000000015e-05}, {'diff': 9.488900000000078e-05}, {'diff': 9.499999999999786e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:27:07.017" endtime="20201029 18:27:07.021"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:27:07.025" level="INFO">${ACCURACY} = {'diff': [9.44720000000017e-05, 9.450000000000083e-05, 9.488900000000078e-05, 9.426400000000015e-05, 9.488900000000078e-05, 9.499999999999786e-05, 9.498700000000124e-05, 9.484799999999807e-05, 9.42499...</msg>
<status status="PASS" starttime="20201029 18:27:07.021" endtime="20201029 18:27:07.025"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:27:07.029" level="INFO">NAME: accuracy-TIMER_SET-90-philip</msg>
<status status="PASS" starttime="20201029 18:27:07.028" endtime="20201029 18:27:07.029"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:27:07.031" level="INFO">VALUE: [9.44720000000017e-05, 9.450000000000083e-05, 9.488900000000078e-05, 9.426400000000015e-05, 9.488900000000078e-05, 9.499999999999786e-05, 9.498700000000124e-05, 9.484799999999807e-05, 9.424999999999711e-05, 9.472200000000194e-05, 9.452799999999997e-05, 9.505500000000014e-05, 9.499999999999786e-05, 9.458299999999878e-05, 9.490300000000035e-05, 9.500000000000133e-05, 9.511100000000189e-05, 9.484799999999807e-05, 9.513899999999756e-05, 9.422200000000144e-05, 9.45140000000004e-05, 9.515299999999713e-05, 9.508299999999928e-05, 9.519399999999983e-05, 9.500000000000133e-05, 9.48339999999985e-05, 9.519499999999931e-05, 9.481999999999893e-05, 9.483400000000197e-05, 9.454100000000007e-05, 9.506899999999971e-05, 9.483299999999903e-05, 9.519499999999931e-05, 9.468099999999924e-05, 9.423600000000101e-05, 9.422200000000144e-05, 9.436099999999767e-05, 9.458299999999878e-05, 9.502800000000047e-05, 9.506899999999971e-05, 9.509699999999885e-05, 9.48330000000025e-05, 9.511099999999842e-05, 9.479199999999979e-05, 9.469399999999933e-05, 9.473599999999804e-05, 9.494500000000253e-05, 9.450000000000083e-05, 9.438900000000028e-05, 9.423600000000101e-05]</msg>
<status status="PASS" starttime="20201029 18:27:07.030" endtime="20201029 18:27:07.032"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:07.025" endtime="20201029 18:27:07.033"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:27:07.036" endtime="20201029 18:27:07.056"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:07.035" endtime="20201029 18:27:07.056"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:07.034" endtime="20201029 18:27:07.057"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:06.675" endtime="20201029 18:27:07.057"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:06.675" endtime="20201029 18:27:07.057"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:07.066" endtime="20201029 18:27:07.086"></status>
</kw>
<msg timestamp="20201029 18:27:07.086" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:07.064" endtime="20201029 18:27:07.086"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:07.089" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:07.087" endtime="20201029 18:27:07.089"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:07.090" endtime="20201029 18:27:07.091"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:07.062" endtime="20201029 18:27:07.092"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:07.059" endtime="20201029 18:27:07.092"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:07.099" endtime="20201029 18:27:07.385"></status>
</kw>
<msg timestamp="20201029 18:27:07.388" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020493, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020588806, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:27:07.097" endtime="20201029 18:27:07.388"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:07.396" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020493, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020588806, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:27:07.389" endtime="20201029 18:27:07.396"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:07.397" endtime="20201029 18:27:07.399"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:07.095" endtime="20201029 18:27:07.399"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:07.093" endtime="20201029 18:27:07.399"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:27:07.403" level="INFO">${RESULT} = [{'diff': 9.580600000000036e-05}, {'diff': 9.576400000000165e-05}, {'diff': 9.526399999999768e-05}, {'diff': 9.545799999999965e-05}, {'diff': 9.533299999999953e-05}, {'diff': 9.537499999999824e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:27:07.400" endtime="20201029 18:27:07.404"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:27:07.407" level="INFO">${ACCURACY} = {'diff': [9.580600000000036e-05, 9.576400000000165e-05, 9.526399999999768e-05, 9.545799999999965e-05, 9.533299999999953e-05, 9.537499999999824e-05, 9.573599999999904e-05, 9.597199999999972e-05, 9.6070...</msg>
<status status="PASS" starttime="20201029 18:27:07.404" endtime="20201029 18:27:07.408"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:27:07.412" level="INFO">NAME: accuracy-TIMER_SET-91-philip</msg>
<status status="PASS" starttime="20201029 18:27:07.411" endtime="20201029 18:27:07.412"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:27:07.414" level="INFO">VALUE: [9.580600000000036e-05, 9.576400000000165e-05, 9.526399999999768e-05, 9.545799999999965e-05, 9.533299999999953e-05, 9.537499999999824e-05, 9.573599999999904e-05, 9.597199999999972e-05, 9.607000000000018e-05, 9.613899999999856e-05, 9.565299999999763e-05, 9.611099999999942e-05, 9.527800000000072e-05, 9.583300000000003e-05, 9.544400000000008e-05, 9.588899999999831e-05, 9.599999999999886e-05, 9.604199999999757e-05, 9.538899999999781e-05, 9.608300000000028e-05, 9.541700000000042e-05, 9.597199999999972e-05, 9.599999999999886e-05, 9.584799999999907e-05, 9.548600000000226e-05, 9.587499999999874e-05, 9.601399999999843e-05, 9.6027999999998e-05, 9.573599999999904e-05, 9.602800000000147e-05, 9.559700000000282e-05, 9.61669999999977e-05, 9.534799999999857e-05, 9.612500000000246e-05, 9.568000000000076e-05, 9.555500000000064e-05, 9.61660000000017e-05, 9.561100000000239e-05, 9.595800000000015e-05, 9.57079999999999e-05, 9.577800000000122e-05, 9.609699999999985e-05, 9.574999999999861e-05, 9.541699999999695e-05, 9.569400000000033e-05, 9.581899999999699e-05, 9.527800000000072e-05, 9.569400000000033e-05, 9.531899999999996e-05, 9.569499999999981e-05]</msg>
<status status="PASS" starttime="20201029 18:27:07.413" endtime="20201029 18:27:07.416"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:07.408" endtime="20201029 18:27:07.416"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:27:07.420" endtime="20201029 18:27:07.439"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:07.419" endtime="20201029 18:27:07.440"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:07.417" endtime="20201029 18:27:07.440"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:07.058" endtime="20201029 18:27:07.441"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:07.057" endtime="20201029 18:27:07.441"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:07.449" endtime="20201029 18:27:07.467"></status>
</kw>
<msg timestamp="20201029 18:27:07.468" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:07.448" endtime="20201029 18:27:07.468"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:07.470" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:07.469" endtime="20201029 18:27:07.471"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:07.471" endtime="20201029 18:27:07.473"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:07.445" endtime="20201029 18:27:07.474"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:07.443" endtime="20201029 18:27:07.474"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:07.480" endtime="20201029 18:27:07.765"></status>
</kw>
<msg timestamp="20201029 18:27:07.768" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019239431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019336625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:07.479" endtime="20201029 18:27:07.768"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:07.776" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019239431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019336625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:07.769" endtime="20201029 18:27:07.777"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:07.777" endtime="20201029 18:27:07.779"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:07.476" endtime="20201029 18:27:07.779"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:07.475" endtime="20201029 18:27:07.780"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:27:07.784" level="INFO">${RESULT} = [{'diff': 9.719399999999837e-05}, {'diff': 9.723700000000002e-05}, {'diff': 9.658400000000025e-05}, {'diff': 9.643100000000099e-05}, {'diff': 9.718099999999827e-05}, {'diff': 9.672200000000047e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:27:07.781" endtime="20201029 18:27:07.784"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:27:07.789" level="INFO">${ACCURACY} = {'diff': [9.719399999999837e-05, 9.723700000000002e-05, 9.658400000000025e-05, 9.643100000000099e-05, 9.718099999999827e-05, 9.672200000000047e-05, 9.641599999999848e-05, 9.638900000000228e-05, 9.6708...</msg>
<status status="PASS" starttime="20201029 18:27:07.785" endtime="20201029 18:27:07.789"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:27:07.793" level="INFO">NAME: accuracy-TIMER_SET-92-philip</msg>
<status status="PASS" starttime="20201029 18:27:07.792" endtime="20201029 18:27:07.793"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:27:07.796" level="INFO">VALUE: [9.719399999999837e-05, 9.723700000000002e-05, 9.658400000000025e-05, 9.643100000000099e-05, 9.718099999999827e-05, 9.672200000000047e-05, 9.641599999999848e-05, 9.638900000000228e-05, 9.67080000000009e-05, 9.626400000000215e-05, 9.64859999999998e-05, 9.713899999999956e-05, 9.7027999999999e-05, 9.641699999999795e-05, 9.656899999999774e-05, 9.712499999999999e-05, 9.655500000000164e-05, 9.72219999999975e-05, 9.631899999999749e-05, 9.69860000000003e-05, 9.641700000000142e-05, 9.709700000000085e-05, 9.649999999999936e-05, 9.679199999999832e-05, 9.687499999999974e-05, 9.676399999999918e-05, 9.69860000000003e-05, 9.716599999999923e-05, 9.674999999999961e-05, 9.709699999999738e-05, 9.713899999999956e-05, 9.705599999999814e-05, 9.666700000000167e-05, 9.627800000000172e-05, 9.658300000000078e-05, 9.691700000000192e-05, 9.641600000000194e-05, 9.636099999999967e-05, 9.669400000000133e-05, 9.633300000000053e-05, 9.681899999999799e-05, 9.674999999999961e-05, 9.693000000000201e-05, 9.654200000000154e-05, 9.688899999999931e-05, 9.659799999999982e-05, 9.67080000000009e-05, 9.711100000000042e-05, 9.683300000000103e-05, 9.647200000000022e-05]</msg>
<status status="PASS" starttime="20201029 18:27:07.794" endtime="20201029 18:27:07.796"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:07.790" endtime="20201029 18:27:07.797"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:27:07.800" endtime="20201029 18:27:07.820"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:07.799" endtime="20201029 18:27:07.821"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:07.798" endtime="20201029 18:27:07.821"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:07.442" endtime="20201029 18:27:07.821"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:07.441" endtime="20201029 18:27:07.821"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:07.830" endtime="20201029 18:27:07.848"></status>
</kw>
<msg timestamp="20201029 18:27:07.849" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:07.828" endtime="20201029 18:27:07.849"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:07.851" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:07.850" endtime="20201029 18:27:07.852"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:07.852" endtime="20201029 18:27:07.854"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:07.826" endtime="20201029 18:27:07.855"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:07.824" endtime="20201029 18:27:07.855"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:07.861" endtime="20201029 18:27:08.148"></status>
</kw>
<msg timestamp="20201029 18:27:08.152" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019342347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019439764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:07.860" endtime="20201029 18:27:08.152"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:08.160" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019342347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019439764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:08.153" endtime="20201029 18:27:08.160"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:08.161" endtime="20201029 18:27:08.162"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:07.857" endtime="20201029 18:27:08.163"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:07.856" endtime="20201029 18:27:08.163"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:27:08.167" level="INFO">${RESULT} = [{'diff': 9.741699999999895e-05}, {'diff': 9.812500000000099e-05}, {'diff': 9.769499999999834e-05}, {'diff': 9.797200000000172e-05}, {'diff': 9.791699999999945e-05}, {'diff': 9.795799999999869e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:27:08.164" endtime="20201029 18:27:08.167"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:27:08.171" level="INFO">${ACCURACY} = {'diff': [9.741699999999895e-05, 9.812500000000099e-05, 9.769499999999834e-05, 9.797200000000172e-05, 9.791699999999945e-05, 9.795799999999869e-05, 9.744399999999862e-05, 9.797199999999825e-05, 9.8056...</msg>
<status status="PASS" starttime="20201029 18:27:08.168" endtime="20201029 18:27:08.172"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:27:08.176" level="INFO">NAME: accuracy-TIMER_SET-93-philip</msg>
<status status="PASS" starttime="20201029 18:27:08.175" endtime="20201029 18:27:08.176"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:27:08.178" level="INFO">VALUE: [9.741699999999895e-05, 9.812500000000099e-05, 9.769499999999834e-05, 9.797200000000172e-05, 9.791699999999945e-05, 9.795799999999869e-05, 9.744399999999862e-05, 9.797199999999825e-05, 9.805600000000261e-05, 9.806899999999924e-05, 9.793100000000249e-05, 9.732000000000143e-05, 9.788900000000031e-05, 9.80410000000001e-05, 9.794499999999859e-05, 9.755500000000264e-05, 9.751399999999993e-05, 9.79999999999974e-05, 9.812500000000099e-05, 9.775000000000061e-05, 9.795799999999869e-05, 9.772200000000147e-05, 9.779199999999932e-05, 9.719500000000131e-05, 9.823600000000154e-05, 9.783299999999856e-05, 9.79020000000004e-05, 9.788900000000031e-05, 9.794500000000206e-05, 9.773600000000104e-05, 9.740299999999938e-05, 9.812499999999752e-05, 9.8028e-05, 9.768099999999877e-05, 9.792999999999955e-05, 9.773600000000104e-05, 9.780499999999942e-05, 9.763900000000006e-05, 9.773600000000104e-05, 9.809699999999838e-05, 9.768100000000224e-05, 9.738899999999981e-05, 9.744499999999809e-05, 9.808400000000175e-05, 9.809700000000185e-05, 9.726399999999968e-05, 9.801400000000043e-05, 9.725000000000011e-05, 9.792999999999955e-05, 9.737500000000024e-05]</msg>
<status status="PASS" starttime="20201029 18:27:08.177" endtime="20201029 18:27:08.179"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:08.172" endtime="20201029 18:27:08.179"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:27:08.183" endtime="20201029 18:27:08.202"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:08.182" endtime="20201029 18:27:08.203"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:08.180" endtime="20201029 18:27:08.203"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:07.822" endtime="20201029 18:27:08.204"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:07.822" endtime="20201029 18:27:08.204"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:08.212" endtime="20201029 18:27:08.232"></status>
</kw>
<msg timestamp="20201029 18:27:08.233" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:08.211" endtime="20201029 18:27:08.233"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:08.235" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:08.234" endtime="20201029 18:27:08.235"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:08.236" endtime="20201029 18:27:08.238"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:08.208" endtime="20201029 18:27:08.238"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:08.206" endtime="20201029 18:27:08.239"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:08.245" endtime="20201029 18:27:08.531"></status>
</kw>
<msg timestamp="20201029 18:27:08.535" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020231306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020329944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:08.244" endtime="20201029 18:27:08.535"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:08.543" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020231306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020329944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:08.536" endtime="20201029 18:27:08.543"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:08.544" endtime="20201029 18:27:08.545"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:08.241" endtime="20201029 18:27:08.546"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:08.239" endtime="20201029 18:27:08.546"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:27:08.550" level="INFO">${RESULT} = [{'diff': 9.863799999999812e-05}, {'diff': 9.880499999999695e-05}, {'diff': 9.85410000000006e-05}, {'diff': 9.861099999999845e-05}, {'diff': 9.897200000000272e-05}, {'diff': 9.888900000000131e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:27:08.547" endtime="20201029 18:27:08.550"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:27:08.554" level="INFO">${ACCURACY} = {'diff': [9.863799999999812e-05, 9.880499999999695e-05, 9.85410000000006e-05, 9.861099999999845e-05, 9.897200000000272e-05, 9.888900000000131e-05, 9.823600000000154e-05, 9.897200000000272e-05, 9.91949...</msg>
<status status="PASS" starttime="20201029 18:27:08.551" endtime="20201029 18:27:08.554"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:27:08.559" level="INFO">NAME: accuracy-TIMER_SET-94-philip</msg>
<status status="PASS" starttime="20201029 18:27:08.558" endtime="20201029 18:27:08.559"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:27:08.564" level="INFO">VALUE: [9.863799999999812e-05, 9.880499999999695e-05, 9.85410000000006e-05, 9.861099999999845e-05, 9.897200000000272e-05, 9.888900000000131e-05, 9.823600000000154e-05, 9.897200000000272e-05, 9.919499999999984e-05, 9.843099999999952e-05, 9.827700000000078e-05, 9.91800000000008e-05, 9.89159999999975e-05, 9.898700000000177e-05, 9.856899999999974e-05, 9.854200000000007e-05, 9.893100000000002e-05, 9.922299999999898e-05, 9.882000000000293e-05, 9.88059999999999e-05, 9.856999999999921e-05, 9.870799999999944e-05, 9.912499999999852e-05, 9.858299999999931e-05, 9.883299999999956e-05, 9.856899999999974e-05, 9.830600000000286e-05, 9.908399999999928e-05, 9.895900000000263e-05, 9.83479999999981e-05, 9.913900000000156e-05, 9.881999999999946e-05, 9.830499999999992e-05, 9.862500000000149e-05, 9.855500000000017e-05, 9.881999999999946e-05, 9.912500000000199e-05, 9.879200000000032e-05, 9.84999999999979e-05, 9.841699999999995e-05, 9.915299999999766e-05, 9.836200000000114e-05, 9.926400000000168e-05, 9.919400000000037e-05, 9.823599999999807e-05, 9.844399999999962e-05, 9.887500000000174e-05, 9.859700000000235e-05, 9.83609999999982e-05, 9.918100000000027e-05]</msg>
<status status="PASS" starttime="20201029 18:27:08.560" endtime="20201029 18:27:08.565"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:08.555" endtime="20201029 18:27:08.566"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:27:08.569" endtime="20201029 18:27:08.589"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:08.568" endtime="20201029 18:27:08.589"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:08.567" endtime="20201029 18:27:08.590"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:08.205" endtime="20201029 18:27:08.590"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:08.204" endtime="20201029 18:27:08.590"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:08.598" endtime="20201029 18:27:08.617"></status>
</kw>
<msg timestamp="20201029 18:27:08.617" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:08.597" endtime="20201029 18:27:08.617"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:08.620" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:08.618" endtime="20201029 18:27:08.620"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:08.621" endtime="20201029 18:27:08.622"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:08.594" endtime="20201029 18:27:08.623"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:08.592" endtime="20201029 18:27:08.623"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:08.629" endtime="20201029 18:27:08.916"></status>
</kw>
<msg timestamp="20201029 18:27:08.919" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019311069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019410667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:08.628" endtime="20201029 18:27:08.919"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:08.927" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019311069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019410667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:08.920" endtime="20201029 18:27:08.927"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:08.928" endtime="20201029 18:27:08.930"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:08.625" endtime="20201029 18:27:08.930"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:08.624" endtime="20201029 18:27:08.931"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:27:08.935" level="INFO">${RESULT} = [{'diff': 9.959799999999935e-05}, {'diff': 9.969400000000087e-05}, {'diff': 9.98609999999997e-05}, {'diff': 9.943100000000052e-05}, {'diff': 9.951399999999846e-05}, {'diff': 9.98609999999997e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 18:27:08.931" endtime="20201029 18:27:08.935"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:27:08.940" level="INFO">${ACCURACY} = {'diff': [9.959799999999935e-05, 9.969400000000087e-05, 9.98609999999997e-05, 9.943100000000052e-05, 9.951399999999846e-05, 9.98609999999997e-05, 9.969500000000034e-05, 0.00010002799999999853, 9.97359...</msg>
<status status="PASS" starttime="20201029 18:27:08.936" endtime="20201029 18:27:08.940"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:27:08.944" level="INFO">NAME: accuracy-TIMER_SET-95-philip</msg>
<status status="PASS" starttime="20201029 18:27:08.943" endtime="20201029 18:27:08.944"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:27:08.947" level="INFO">VALUE: [9.959799999999935e-05, 9.969400000000087e-05, 9.98609999999997e-05, 9.943100000000052e-05, 9.951399999999846e-05, 9.98609999999997e-05, 9.969500000000034e-05, 0.00010002799999999853, 9.973599999999957e-05, 9.983400000000003e-05, 9.925000000000211e-05, 9.926400000000168e-05, 0.00010018100000000127, 9.993000000000155e-05, 9.994400000000112e-05, 9.929200000000082e-05, 9.98609999999997e-05, 9.965300000000163e-05, 9.924999999999864e-05, 9.957000000000021e-05, 9.948599999999932e-05, 0.00010011199999999942, 9.967999999999783e-05, 9.995800000000069e-05, 9.987499999999927e-05, 9.931900000000049e-05, 9.927800000000125e-05, 9.938899999999834e-05, 9.988899999999884e-05, 9.986100000000317e-05, 9.972300000000295e-05, 0.00010008300000000081, 9.95419999999976e-05, 9.979099999999838e-05, 0.00010000000000000286, 9.929199999999735e-05, 9.9722e-05, 9.990299999999841e-05, 9.923599999999907e-05, 0.00010015299999999866, 9.957000000000021e-05, 9.98060000000009e-05, 9.959699999999988e-05, 9.930500000000092e-05, 9.979200000000132e-05, 9.924999999999864e-05, 9.947199999999976e-05, 9.933300000000006e-05, 9.927799999999778e-05, 9.955599999999717e-05]</msg>
<status status="PASS" starttime="20201029 18:27:08.945" endtime="20201029 18:27:08.947"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:08.940" endtime="20201029 18:27:08.948"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:27:08.952" endtime="20201029 18:27:08.971"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:08.950" endtime="20201029 18:27:08.972"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:08.949" endtime="20201029 18:27:08.972"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:08.591" endtime="20201029 18:27:08.972"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:08.590" endtime="20201029 18:27:08.972"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:08.981" endtime="20201029 18:27:09.001"></status>
</kw>
<msg timestamp="20201029 18:27:09.001" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:08.979" endtime="20201029 18:27:09.001"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:09.004" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:09.002" endtime="20201029 18:27:09.004"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:09.005" endtime="20201029 18:27:09.006"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:08.977" endtime="20201029 18:27:09.007"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:08.975" endtime="20201029 18:27:09.007"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:09.014" endtime="20201029 18:27:09.309"></status>
</kw>
<msg timestamp="20201029 18:27:09.316" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019798069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019898458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:09.012" endtime="20201029 18:27:09.316"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:09.333" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019798069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019898458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:09.318" endtime="20201029 18:27:09.334"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:09.336" endtime="20201029 18:27:09.339"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:09.010" endtime="20201029 18:27:09.340"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:09.008" endtime="20201029 18:27:09.341"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:27:09.349" level="INFO">${RESULT} = [{'diff': 0.00010038899999999934}, {'diff': 0.00010037499999999977}, {'diff': 0.00010051399999999946}, {'diff': 0.00010101399999999996}, {'diff': 0.00010101399999999996}, {'diff': 0.000100611000000000...</msg>
<status status="PASS" starttime="20201029 18:27:09.343" endtime="20201029 18:27:09.349"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:27:09.358" level="INFO">${ACCURACY} = {'diff': [0.00010038899999999934, 0.00010037499999999977, 0.00010051399999999946, 0.00010101399999999996, 0.00010101399999999996, 0.00010061100000000045, 0.00010055600000000164, 0.00010033400000000053...</msg>
<status status="PASS" starttime="20201029 18:27:09.351" endtime="20201029 18:27:09.358"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:27:09.367" level="INFO">NAME: accuracy-TIMER_SET-96-philip</msg>
<status status="PASS" starttime="20201029 18:27:09.364" endtime="20201029 18:27:09.367"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:27:09.372" level="INFO">VALUE: [0.00010038899999999934, 0.00010037499999999977, 0.00010051399999999946, 0.00010101399999999996, 0.00010101399999999996, 0.00010061100000000045, 0.00010055600000000164, 0.00010033400000000053, 0.00010066599999999926, 0.00010037499999999977, 0.00010088800000000037, 0.00010112500000000052, 0.00010084700000000113, 0.00010041699999999848, 0.00010090299999999941, 0.00010066699999999873, 0.00010094400000000212, 0.00010113900000000009, 0.00010057000000000121, 0.00010101300000000049, 0.000100415999999999, 0.00010070799999999797, 0.00010084700000000113, 0.00010047200000000076, 0.00010043100000000152, 0.00010066699999999873, 0.00010033400000000053, 0.00010101399999999996, 0.00010033300000000106, 0.00010026299999999974, 0.00010083300000000156, 0.00010055500000000217, 0.00010052799999999903, 0.00010083300000000156, 0.00010063899999999959, 0.00010051400000000293, 0.00010098599999999736, 0.00010106999999999824, 0.00010090299999999941, 0.00010065199999999969, 0.00010097200000000126, 0.00010104099999999963, 0.00010111100000000095, 0.00010058300000000131, 0.00010054200000000207, 0.0001004999999999999, 0.00010034700000000063, 0.00010079200000000232, 0.00010061100000000045, 0.00010045800000000119]</msg>
<status status="PASS" starttime="20201029 18:27:09.369" endtime="20201029 18:27:09.373"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:09.359" endtime="20201029 18:27:09.374"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:27:09.377" endtime="20201029 18:27:09.397"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:09.376" endtime="20201029 18:27:09.397"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:09.375" endtime="20201029 18:27:09.398"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:08.973" endtime="20201029 18:27:09.398"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:08.973" endtime="20201029 18:27:09.398"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:09.407" endtime="20201029 18:27:09.427"></status>
</kw>
<msg timestamp="20201029 18:27:09.428" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:09.405" endtime="20201029 18:27:09.428"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:09.430" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:09.429" endtime="20201029 18:27:09.430"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:09.431" endtime="20201029 18:27:09.433"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:09.403" endtime="20201029 18:27:09.433"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:09.400" endtime="20201029 18:27:09.434"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:09.440" endtime="20201029 18:27:09.726"></status>
</kw>
<msg timestamp="20201029 18:27:09.729" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020721542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020822917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:09.439" endtime="20201029 18:27:09.730"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:09.737" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020721542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020822917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:09.730" endtime="20201029 18:27:09.738"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:09.738" endtime="20201029 18:27:09.740"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:09.436" endtime="20201029 18:27:09.740"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:09.434" endtime="20201029 18:27:09.741"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:27:09.745" level="INFO">${RESULT} = [{'diff': 0.00010137500000000077}, {'diff': 0.00010152800000000003}, {'diff': 0.00010179099999999691}, {'diff': 0.0001022359999999986}, {'diff': 0.00010138900000000034}, {'diff': 0.0001021390000000010...</msg>
<status status="PASS" starttime="20201029 18:27:09.742" endtime="20201029 18:27:09.745"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:27:09.749" level="INFO">${ACCURACY} = {'diff': [0.00010137500000000077, 0.00010152800000000003, 0.00010179099999999691, 0.0001022359999999986, 0.00010138900000000034, 0.00010213900000000109, 0.00010126400000000021, 0.00010201400000000097,...</msg>
<status status="PASS" starttime="20201029 18:27:09.746" endtime="20201029 18:27:09.749"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:27:09.753" level="INFO">NAME: accuracy-TIMER_SET-97-philip</msg>
<status status="PASS" starttime="20201029 18:27:09.752" endtime="20201029 18:27:09.753"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:27:09.755" level="INFO">VALUE: [0.00010137500000000077, 0.00010152800000000003, 0.00010179099999999691, 0.0001022359999999986, 0.00010138900000000034, 0.00010213900000000109, 0.00010126400000000021, 0.00010201400000000097, 0.00010220799999999947, 0.00010220799999999947, 0.00010208399999999881, 0.00010193000000000008, 0.00010154100000000013, 0.00010202799999999707, 0.000101722000000002, 0.00010125000000000065, 0.00010151400000000046, 0.0001020420000000001, 0.00010127799999999978, 0.00010172300000000148, 0.00010156999999999874, 0.00010186200000000117, 0.0001018749999999978, 0.00010133299999999859, 0.00010211100000000195, 0.00010133299999999859, 0.00010194399999999965, 0.00010216700000000023, 0.00010147300000000123, 0.0001013610000000012, 0.00010130599999999892, 0.00010195899999999869, 0.00010133299999999859, 0.00010130499999999945, 0.00010140299999999991, 0.00010138900000000034, 0.00010165299999999669, 0.00010147199999999829, 0.00010174999999999768, 0.00010166600000000026, 0.00010145900000000166, 0.00010183400000000203, 0.00010142999999999958, 0.00010156900000000274, 0.00010175000000000115, 0.00010134700000000163, 0.00010134700000000163, 0.00010213899999999762, 0.00010138899999999687, 0.00010165300000000016]</msg>
<status status="PASS" starttime="20201029 18:27:09.754" endtime="20201029 18:27:09.757"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:09.749" endtime="20201029 18:27:09.758"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:27:09.761" endtime="20201029 18:27:09.781"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:09.760" endtime="20201029 18:27:09.781"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:09.759" endtime="20201029 18:27:09.782"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:09.399" endtime="20201029 18:27:09.782"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:09.398" endtime="20201029 18:27:09.782"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:09.790" endtime="20201029 18:27:09.809"></status>
</kw>
<msg timestamp="20201029 18:27:09.809" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:09.789" endtime="20201029 18:27:09.809"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:09.812" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:09.810" endtime="20201029 18:27:09.812"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:09.813" endtime="20201029 18:27:09.814"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:09.786" endtime="20201029 18:27:09.815"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:09.784" endtime="20201029 18:27:09.815"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:09.822" endtime="20201029 18:27:10.107"></status>
</kw>
<msg timestamp="20201029 18:27:10.110" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019368361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019470972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:09.820" endtime="20201029 18:27:10.110"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:10.118" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019368361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019470972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:10.111" endtime="20201029 18:27:10.119"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:10.120" endtime="20201029 18:27:10.122"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:09.818" endtime="20201029 18:27:10.122"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:09.816" endtime="20201029 18:27:10.123"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:27:10.127" level="INFO">${RESULT} = [{'diff': 0.00010261099999999898}, {'diff': 0.0001030420000000011}, {'diff': 0.00010290300000000141}, {'diff': 0.00010265300000000116}, {'diff': 0.00010320800000000047}, {'diff': 0.0001027499999999986...</msg>
<status status="PASS" starttime="20201029 18:27:10.123" endtime="20201029 18:27:10.127"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:27:10.132" level="INFO">${ACCURACY} = {'diff': [0.00010261099999999898, 0.0001030420000000011, 0.00010290300000000141, 0.00010265300000000116, 0.00010320800000000047, 0.00010274999999999868, 0.00010247300000000223, 0.00010238900000000134,...</msg>
<status status="PASS" starttime="20201029 18:27:10.128" endtime="20201029 18:27:10.132"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:27:10.136" level="INFO">NAME: accuracy-TIMER_SET-98-philip</msg>
<status status="PASS" starttime="20201029 18:27:10.135" endtime="20201029 18:27:10.136"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:27:10.138" level="INFO">VALUE: [0.00010261099999999898, 0.0001030420000000011, 0.00010290300000000141, 0.00010265300000000116, 0.00010320800000000047, 0.00010274999999999868, 0.00010247300000000223, 0.00010238900000000134, 0.00010270799999999997, 0.00010291700000000098, 0.0001022220000000025, 0.0001025420000000006, 0.00010222199999999904, 0.00010294500000000012, 0.00010272300000000248, 0.00010299999999999893, 0.0001029160000000015, 0.0001029870000000023, 0.00010274999999999868, 0.0001025550000000007, 0.00010286099999999923, 0.00010261099999999898, 0.0001031810000000008, 0.00010315300000000166, 0.00010261099999999898, 0.00010243000000000058, 0.00010240200000000144, 0.00010236099999999873, 0.00010262500000000202, 0.00010311099999999948, 0.00010272199999999954, 0.00010229199999999689, 0.0001026940000000004, 0.00010229200000000035, 0.00010240299999999744, 0.00010312499999999905, 0.00010279100000000138, 0.00010248599999999886, 0.00010297199999999979, 0.00010281899999999705, 0.00010308300000000034, 0.00010274999999999868, 0.00010273600000000258, 0.00010295899999999969, 0.00010294500000000012, 0.00010224999999999818, 0.0001028480000000026, 0.00010298599999999936, 0.00010223600000000208, 0.00010254100000000113]</msg>
<status status="PASS" starttime="20201029 18:27:10.137" endtime="20201029 18:27:10.139"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:10.133" endtime="20201029 18:27:10.140"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:27:10.143" endtime="20201029 18:27:10.163"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:10.142" endtime="20201029 18:27:10.163"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:10.141" endtime="20201029 18:27:10.164"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:09.783" endtime="20201029 18:27:10.164"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:09.782" endtime="20201029 18:27:10.164"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:10.173" endtime="20201029 18:27:10.193"></status>
</kw>
<msg timestamp="20201029 18:27:10.193" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:10.171" endtime="20201029 18:27:10.193"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:10.196" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:10.194" endtime="20201029 18:27:10.196"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:10.197" endtime="20201029 18:27:10.198"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:10.169" endtime="20201029 18:27:10.199"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:10.167" endtime="20201029 18:27:10.199"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:10.206" endtime="20201029 18:27:10.491"></status>
</kw>
<msg timestamp="20201029 18:27:10.494" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019944639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020048264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:10.204" endtime="20201029 18:27:10.494"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:10.502" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019944639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020048264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:10.495" endtime="20201029 18:27:10.502"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:10.503" endtime="20201029 18:27:10.505"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:10.201" endtime="20201029 18:27:10.505"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:10.200" endtime="20201029 18:27:10.506"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:27:10.510" level="INFO">${RESULT} = [{'diff': 0.00010362499999999955}, {'diff': 0.00010349999999999943}, {'diff': 0.00010327799999999832}, {'diff': 0.0001038879999999999}, {'diff': 0.00010416599999999929}, {'diff': 0.0001038329999999976...</msg>
<status status="PASS" starttime="20201029 18:27:10.506" endtime="20201029 18:27:10.510"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:27:10.514" level="INFO">${ACCURACY} = {'diff': [0.00010362499999999955, 0.00010349999999999943, 0.00010327799999999832, 0.0001038879999999999, 0.00010416599999999929, 0.00010383299999999762, 0.00010349999999999943, 0.00010347200000000029,...</msg>
<status status="PASS" starttime="20201029 18:27:10.510" endtime="20201029 18:27:10.514"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:27:10.518" level="INFO">NAME: accuracy-TIMER_SET-99-philip</msg>
<status status="PASS" starttime="20201029 18:27:10.517" endtime="20201029 18:27:10.518"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:27:10.520" level="INFO">VALUE: [0.00010362499999999955, 0.00010349999999999943, 0.00010327799999999832, 0.0001038879999999999, 0.00010416599999999929, 0.00010383299999999762, 0.00010349999999999943, 0.00010347200000000029, 0.00010372200000000054, 0.00010383299999999762, 0.00010344500000000062, 0.00010347200000000029, 0.00010416700000000223, 0.00010409800000000038, 0.00010420800000000147, 0.00010343099999999758, 0.00010390300000000241, 0.00010324999999999918, 0.00010341700000000148, 0.00010327799999999832, 0.00010361099999999998, 0.00010397200000000079, 0.00010401400000000297, 0.00010324999999999918, 0.00010365199999999922, 0.00010390199999999947, 0.00010356900000000127, 0.00010399999999999993, 0.00010377799999999882, 0.00010419500000000137, 0.00010343100000000105, 0.00010366700000000173, 0.0001040420000000021, 0.00010393000000000208, 0.0001032359999999996, 0.00010363900000000259, 0.00010340300000000191, 0.00010324999999999918, 0.00010393099999999808, 0.00010352800000000204, 0.0001035420000000016, 0.0001033749999999993, 0.00010330599999999746, 0.00010322200000000004, 0.00010416599999999929, 0.00010415299999999919, 0.00010374999999999968, 0.0001040559999999982, 0.00010372200000000054, 0.00010413899999999962]</msg>
<status status="PASS" starttime="20201029 18:27:10.519" endtime="20201029 18:27:10.521"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:10.514" endtime="20201029 18:27:10.522"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:27:10.525" endtime="20201029 18:27:10.545"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:10.524" endtime="20201029 18:27:10.545"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:10.523" endtime="20201029 18:27:10.546"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:10.165" endtime="20201029 18:27:10.546"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:10.164" endtime="20201029 18:27:10.546"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:10.555" endtime="20201029 18:27:10.575"></status>
</kw>
<msg timestamp="20201029 18:27:10.576" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:10.553" endtime="20201029 18:27:10.576"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:10.578" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:10.577" endtime="20201029 18:27:10.579"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:10.579" endtime="20201029 18:27:10.581"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:10.550" endtime="20201029 18:27:10.582"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:10.548" endtime="20201029 18:27:10.582"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:10.588" endtime="20201029 18:27:10.873"></status>
</kw>
<msg timestamp="20201029 18:27:10.876" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020393042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020497597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:10.587" endtime="20201029 18:27:10.876"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:10.884" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020393042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020497597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:10.877" endtime="20201029 18:27:10.884"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:10.885" endtime="20201029 18:27:10.887"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:10.584" endtime="20201029 18:27:10.887"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:10.583" endtime="20201029 18:27:10.888"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:27:10.892" level="INFO">${RESULT} = [{'diff': 0.00010455499999999923}, {'diff': 0.00010463900000000012}, {'diff': 0.00010433300000000159}, {'diff': 0.00010454199999999914}, {'diff': 0.00010473599999999764}, {'diff': 0.000104999999999997...</msg>
<status status="PASS" starttime="20201029 18:27:10.889" endtime="20201029 18:27:10.892"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:27:10.896" level="INFO">${ACCURACY} = {'diff': [0.00010455499999999923, 0.00010463900000000012, 0.00010433300000000159, 0.00010454199999999914, 0.00010473599999999764, 0.00010499999999999746, 0.00010477799999999982, 0.00010495799999999875...</msg>
<status status="PASS" starttime="20201029 18:27:10.893" endtime="20201029 18:27:10.896"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:27:10.900" level="INFO">NAME: accuracy-TIMER_SET-100-philip</msg>
<status status="PASS" starttime="20201029 18:27:10.899" endtime="20201029 18:27:10.900"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:27:10.902" level="INFO">VALUE: [0.00010455499999999923, 0.00010463900000000012, 0.00010433300000000159, 0.00010454199999999914, 0.00010473599999999764, 0.00010499999999999746, 0.00010477799999999982, 0.00010495799999999875, 0.00010477700000000034, 0.00010508300000000234, 0.00010443099999999858, 0.00010440299999999944, 0.00010430600000000192, 0.00010461100000000098, 0.0001042360000000006, 0.00010449999999999696, 0.00010444400000000215, 0.00010519399999999943, 0.00010509699999999844, 0.00010472200000000154, 0.00010480599999999896, 0.00010511099999999801, 0.00010515300000000019, 0.00010457000000000174, 0.00010494399999999918, 0.0001051949999999989, 0.0001043750000000003, 0.0001042360000000006, 0.0001043750000000003, 0.00010475000000000068, 0.00010509699999999844, 0.00010422200000000104, 0.00010441699999999901, 0.00010525000000000118, 0.0001050140000000005, 0.00010466699999999926, 0.00010433299999999812, 0.0001050689999999993, 0.0001045689999999988, 0.00010441700000000248, 0.0001050559999999992, 0.00010454199999999914, 0.00010508399999999835, 0.0001043620000000002, 0.00010473700000000058, 0.00010431900000000202, 0.00010425000000000018, 0.0001045550000000027, 0.00010445799999999825, 0.00010416699999999876]</msg>
<status status="PASS" starttime="20201029 18:27:10.901" endtime="20201029 18:27:10.904"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:10.896" endtime="20201029 18:27:10.905"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:27:10.908" endtime="20201029 18:27:10.928"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:10.907" endtime="20201029 18:27:10.928"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:10.906" endtime="20201029 18:27:10.928"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:10.547" endtime="20201029 18:27:10.929"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:10.546" endtime="20201029 18:27:10.929"></status>
</kw>
<status status="PASS" starttime="20201029 18:26:32.496" endtime="20201029 18:27:10.929"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
</tags>
<status status="PASS" starttime="20201029 18:26:29.377" endtime="20201029 18:27:10.930" critical="yes"></status>
</test>
<test id="s1-s3-t2" name="Measure TIMER_SLEEP Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:27:10.936" endtime="20201029 18:27:10.956"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:10.935" endtime="20201029 18:27:10.956"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:10.969" endtime="20201029 18:27:13.990"></status>
</kw>
<msg timestamp="20201029 18:27:13.991" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:10.967" endtime="20201029 18:27:13.992"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:13.996" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:13.993" endtime="20201029 18:27:13.997"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:27:14.002" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:27:13.998" endtime="20201029 18:27:14.003"></status>
</kw>
<status status="FAIL" starttime="20201029 18:27:10.965" endtime="20201029 18:27:14.004"></status>
</kw>
<status status="FAIL" starttime="20201029 18:27:10.963" endtime="20201029 18:27:14.006"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:10.961" endtime="20201029 18:27:14.006"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:27:14.014" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:27:14.012" endtime="20201029 18:27:14.015"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:14.008" endtime="20201029 18:27:14.015"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:10.961" endtime="20201029 18:27:14.015"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:10.960" endtime="20201029 18:27:14.016"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:14.017" endtime="20201029 18:27:14.020"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:10.959" endtime="20201029 18:27:14.021"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:10.957" endtime="20201029 18:27:14.022"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:10.934" endtime="20201029 18:27:14.023"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:14.045" endtime="20201029 18:27:14.063"></status>
</kw>
<msg timestamp="20201029 18:27:14.064" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:14.042" endtime="20201029 18:27:14.064"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:14.069" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:14.066" endtime="20201029 18:27:14.070"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:14.072" endtime="20201029 18:27:14.075"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:14.034" endtime="20201029 18:27:14.076"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:14.030" endtime="20201029 18:27:14.077"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:14.091" endtime="20201029 18:27:14.393"></status>
</kw>
<msg timestamp="20201029 18:27:14.396" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.100373458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.100395681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:14.087" endtime="20201029 18:27:14.396"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:14.404" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.100373458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.100395681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:14.397" endtime="20201029 18:27:14.404"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:14.405" endtime="20201029 18:27:14.406"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:14.082" endtime="20201029 18:27:14.407"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:14.079" endtime="20201029 18:27:14.407"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:27:14.411" level="INFO">${RESULT} = [{'diff': 2.2223000000209936e-05}, {'diff': 2.2111000000268888e-05}, {'diff': 2.215299999974718e-05}, {'diff': 2.2416999999830267e-05}, {'diff': 2.2777999999945564e-05}, {'diff': 2.2264000000049577e-0...</msg>
<status status="PASS" starttime="20201029 18:27:14.408" endtime="20201029 18:27:14.411"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:27:14.415" level="INFO">${ACCURACY} = {'diff': [2.2223000000209936e-05, 2.2111000000268888e-05, 2.215299999974718e-05, 2.2416999999830267e-05, 2.2777999999945564e-05, 2.2264000000049577e-05, 2.2680000000274703e-05, 2.240300000000417e-05, ...</msg>
<status status="PASS" starttime="20201029 18:27:14.412" endtime="20201029 18:27:14.416"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:27:14.421" level="INFO">NAME: accuracy-TIMER_SLEEP-1-philip</msg>
<status status="PASS" starttime="20201029 18:27:14.419" endtime="20201029 18:27:14.421"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:27:14.423" level="INFO">VALUE: [2.2223000000209936e-05, 2.2111000000268888e-05, 2.215299999974718e-05, 2.2416999999830267e-05, 2.2777999999945564e-05, 2.2264000000049577e-05, 2.2680000000274703e-05, 2.240300000000417e-05, 2.2874999999977774e-05, 2.2235999999953293e-05, 2.225000000022348e-05, 2.2389000000178072e-05, 2.2555000000146208e-05, 2.220799999985701e-05, 2.2332999999985503e-05, 2.2471999999940095e-05, 2.3055000000216097e-05, 2.220799999985701e-05, 2.2818999999785206e-05, 2.2528000000132664e-05, 2.2985999999836082e-05, 2.2764000000119466e-05, 2.2667000000087256e-05, 2.280600000004185e-05, 2.290300000007406e-05, 2.3056000000298837e-05, 2.23609999996377e-05, 2.269499999973945e-05, 2.2722000000197085e-05, 2.284699999988149e-05, 2.215299999974718e-05, 2.2638999999990972e-05, 2.2291999999701773e-05, 2.2125000000094985e-05, 2.2334000000068244e-05, 2.294499999999644e-05, 2.2264000000049577e-05, 2.2180999999843465e-05, 2.2610999999894688e-05, 2.294499999999644e-05, 2.2083999999811255e-05, 2.2638999999990972e-05, 2.2861999999790328e-05, 2.3055999999854748e-05, 2.2638999999990972e-05, 2.3069000000042195e-05, 2.240199999992143e-05, 2.215200000010853e-05, 2.2819000000229295e-05, 2.2666000000004516e-05]</msg>
<status status="PASS" starttime="20201029 18:27:14.422" endtime="20201029 18:27:14.423"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:14.416" endtime="20201029 18:27:14.424"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:27:14.428" endtime="20201029 18:27:14.447"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:14.426" endtime="20201029 18:27:14.448"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:14.425" endtime="20201029 18:27:14.448"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:14.027" endtime="20201029 18:27:14.448"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:14.025" endtime="20201029 18:27:14.448"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:14.457" endtime="20201029 18:27:14.473"></status>
</kw>
<msg timestamp="20201029 18:27:14.474" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:14.455" endtime="20201029 18:27:14.474"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:14.476" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:14.475" endtime="20201029 18:27:14.477"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:14.477" endtime="20201029 18:27:14.479"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:14.453" endtime="20201029 18:27:14.480"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:14.451" endtime="20201029 18:27:14.480"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:14.486" endtime="20201029 18:27:14.772"></status>
</kw>
<msg timestamp="20201029 18:27:14.775" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020328986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020351292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:14.485" endtime="20201029 18:27:14.775"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:14.783" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020328986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020351292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:14.776" endtime="20201029 18:27:14.783"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:14.784" endtime="20201029 18:27:14.786"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:14.482" endtime="20201029 18:27:14.786"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:14.481" endtime="20201029 18:27:14.787"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:27:14.790" level="INFO">${RESULT} = [{'diff': 2.2305999999999715e-05}, {'diff': 2.240299999999723e-05}, {'diff': 2.2069999999999035e-05}, {'diff': 2.213900000000088e-05}, {'diff': 2.2250000000001435e-05}, {'diff': 2.218099999999959e-05}...</msg>
<status status="PASS" starttime="20201029 18:27:14.787" endtime="20201029 18:27:14.791"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:27:14.796" level="INFO">${ACCURACY} = {'diff': [2.2305999999999715e-05, 2.240299999999723e-05, 2.2069999999999035e-05, 2.213900000000088e-05, 2.2250000000001435e-05, 2.218099999999959e-05, 2.3056000000000465e-05, 2.218099999999959e-05, 2....</msg>
<status status="PASS" starttime="20201029 18:27:14.791" endtime="20201029 18:27:14.796"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:27:14.800" level="INFO">NAME: accuracy-TIMER_SLEEP-2-philip</msg>
<status status="PASS" starttime="20201029 18:27:14.799" endtime="20201029 18:27:14.800"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:27:14.803" level="INFO">VALUE: [2.2305999999999715e-05, 2.240299999999723e-05, 2.2069999999999035e-05, 2.213900000000088e-05, 2.2250000000001435e-05, 2.218099999999959e-05, 2.3056000000000465e-05, 2.218099999999959e-05, 2.2528000000000825e-05, 2.216700000000002e-05, 2.215300000000045e-05, 2.2193999999999686e-05, 2.2902000000001727e-05, 2.305500000000099e-05, 2.2999999999998716e-05, 2.294499999999991e-05, 2.262500000000181e-05, 2.2000000000001185e-05, 2.24030000000007e-05, 2.2764000000001505e-05, 2.308300000000013e-05, 2.2555999999999965e-05, 2.283299999999988e-05, 2.3042000000000895e-05, 2.288900000000163e-05, 2.2250000000001435e-05, 2.218099999999959e-05, 2.218099999999959e-05, 2.2193999999999686e-05, 2.211100000000174e-05, 2.223699999999787e-05, 2.234699999999895e-05, 2.231899999999981e-05, 2.2457999999999506e-05, 2.3000000000002185e-05, 2.234700000000242e-05, 2.244499999999941e-05, 2.291700000000077e-05, 2.294499999999991e-05, 2.2790999999997702e-05, 2.2457999999999506e-05, 2.2277999999997106e-05, 2.295900000000295e-05, 2.229100000000067e-05, 2.265300000000095e-05, 2.297300000000252e-05, 2.2098000000001644e-05, 2.265300000000095e-05, 2.236099999999852e-05, 2.270899999999923e-05]</msg>
<status status="PASS" starttime="20201029 18:27:14.801" endtime="20201029 18:27:14.803"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:14.796" endtime="20201029 18:27:14.804"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:27:14.807" endtime="20201029 18:27:14.827"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:14.806" endtime="20201029 18:27:14.827"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:14.804" endtime="20201029 18:27:14.827"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:14.449" endtime="20201029 18:27:14.828"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:14.449" endtime="20201029 18:27:14.828"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:14.837" endtime="20201029 18:27:14.852"></status>
</kw>
<msg timestamp="20201029 18:27:14.852" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:14.835" endtime="20201029 18:27:14.852"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:14.854" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:14.853" endtime="20201029 18:27:14.855"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:14.855" endtime="20201029 18:27:14.857"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:14.833" endtime="20201029 18:27:14.858"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:14.830" endtime="20201029 18:27:14.858"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:14.864" endtime="20201029 18:27:15.152"></status>
</kw>
<msg timestamp="20201029 18:27:15.155" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020139208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020162056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:14.863" endtime="20201029 18:27:15.155"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:15.163" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020139208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020162056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:15.156" endtime="20201029 18:27:15.163"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:15.164" endtime="20201029 18:27:15.166"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:14.860" endtime="20201029 18:27:15.166"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:14.859" endtime="20201029 18:27:15.167"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:27:15.171" level="INFO">${RESULT} = [{'diff': 2.2848000000002394e-05}, {'diff': 2.306900000000056e-05}, {'diff': 2.3000000000002185e-05}, {'diff': 2.255500000000049e-05}, {'diff': 2.261100000000224e-05}, {'diff': 2.2680000000000616e-05}...</msg>
<status status="PASS" starttime="20201029 18:27:15.167" endtime="20201029 18:27:15.171"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:27:15.175" level="INFO">${ACCURACY} = {'diff': [2.2848000000002394e-05, 2.306900000000056e-05, 2.3000000000002185e-05, 2.255500000000049e-05, 2.261100000000224e-05, 2.2680000000000616e-05, 2.2665999999997577e-05, 2.255500000000049e-05, 2....</msg>
<status status="PASS" starttime="20201029 18:27:15.172" endtime="20201029 18:27:15.175"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:27:15.179" level="INFO">NAME: accuracy-TIMER_SLEEP-3-philip</msg>
<status status="PASS" starttime="20201029 18:27:15.178" endtime="20201029 18:27:15.180"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:27:15.182" level="INFO">VALUE: [2.2848000000002394e-05, 2.306900000000056e-05, 2.3000000000002185e-05, 2.255500000000049e-05, 2.261100000000224e-05, 2.2680000000000616e-05, 2.2665999999997577e-05, 2.255500000000049e-05, 2.306900000000056e-05, 2.261099999999877e-05, 2.304100000000142e-05, 2.211100000000174e-05, 2.262500000000181e-05, 2.237500000000156e-05, 2.25969999999992e-05, 2.2985999999999146e-05, 2.2457999999999506e-05, 2.256900000000006e-05, 2.233300000000285e-05, 2.258299999999963e-05, 2.261100000000224e-05, 2.208299999999913e-05, 2.3000000000002185e-05, 2.268100000000009e-05, 2.265300000000095e-05, 2.2292000000000145e-05, 2.2750000000001935e-05, 2.2249999999997966e-05, 2.2235999999998396e-05, 2.3014000000001755e-05, 2.3027999999997856e-05, 2.266700000000052e-05, 2.2457999999999506e-05, 2.262500000000181e-05, 2.2750000000001935e-05, 2.262499999999834e-05, 2.2348000000001894e-05, 2.266700000000052e-05, 2.238900000000113e-05, 2.2277999999997106e-05, 2.2513999999997786e-05, 2.2430000000000366e-05, 2.283299999999988e-05, 2.288899999999816e-05, 2.2694000000000186e-05, 2.24030000000007e-05, 2.2778000000001075e-05, 2.304100000000142e-05, 2.205499999999999e-05, 2.3054999999997522e-05]</msg>
<status status="PASS" starttime="20201029 18:27:15.180" endtime="20201029 18:27:15.182"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:15.176" endtime="20201029 18:27:15.183"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:27:15.186" endtime="20201029 18:27:15.205"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:15.185" endtime="20201029 18:27:15.206"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:15.183" endtime="20201029 18:27:15.207"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:14.829" endtime="20201029 18:27:15.207"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:14.828" endtime="20201029 18:27:15.207"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:15.217" endtime="20201029 18:27:15.232"></status>
</kw>
<msg timestamp="20201029 18:27:15.232" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:15.214" endtime="20201029 18:27:15.232"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:15.235" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:15.233" endtime="20201029 18:27:15.235"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:15.236" endtime="20201029 18:27:15.238"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:15.212" endtime="20201029 18:27:15.238"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:15.210" endtime="20201029 18:27:15.239"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:15.245" endtime="20201029 18:27:15.530"></status>
</kw>
<msg timestamp="20201029 18:27:15.533" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02073575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020758, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201029 18:27:15.244" endtime="20201029 18:27:15.533"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:15.541" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02073575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020758, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201029 18:27:15.534" endtime="20201029 18:27:15.541"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:15.542" endtime="20201029 18:27:15.544"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:15.241" endtime="20201029 18:27:15.544"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:15.239" endtime="20201029 18:27:15.544"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:27:15.548" level="INFO">${RESULT} = [{'diff': 2.2249999999997966e-05}, {'diff': 2.268100000000009e-05}, {'diff': 2.208299999999913e-05}, {'diff': 2.2555999999999965e-05}, {'diff': 2.230500000000024e-05}, {'diff': 2.305500000000099e-05},...</msg>
<status status="PASS" starttime="20201029 18:27:15.545" endtime="20201029 18:27:15.548"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:27:15.552" level="INFO">${ACCURACY} = {'diff': [2.2249999999997966e-05, 2.268100000000009e-05, 2.208299999999913e-05, 2.2555999999999965e-05, 2.230500000000024e-05, 2.305500000000099e-05, 2.2333999999998855e-05, 2.268100000000009e-05, 2.2...</msg>
<status status="PASS" starttime="20201029 18:27:15.549" endtime="20201029 18:27:15.553"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:27:15.557" level="INFO">NAME: accuracy-TIMER_SLEEP-4-philip</msg>
<status status="PASS" starttime="20201029 18:27:15.556" endtime="20201029 18:27:15.557"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:27:15.560" level="INFO">VALUE: [2.2249999999997966e-05, 2.268100000000009e-05, 2.208299999999913e-05, 2.2555999999999965e-05, 2.230500000000024e-05, 2.305500000000099e-05, 2.2333999999998855e-05, 2.268100000000009e-05, 2.216700000000002e-05, 2.220899999999873e-05, 2.2887999999998687e-05, 2.269499999999966e-05, 2.2555999999999965e-05, 2.2264000000001005e-05, 2.215299999999698e-05, 2.244499999999941e-05, 2.269499999999966e-05, 2.2583999999999105e-05, 2.245899999999898e-05, 2.2250000000001435e-05, 2.2929999999997397e-05, 2.2707999999999756e-05, 2.2944000000000436e-05, 2.2512999999998312e-05, 2.2276999999997632e-05, 2.2999999999998716e-05, 2.2971999999999576e-05, 2.279100000000117e-05, 2.2749999999998466e-05, 2.2416000000000796e-05, 2.29030000000012e-05, 2.286099999999902e-05, 2.2193999999999686e-05, 2.2249999999997966e-05, 2.3013999999998286e-05, 2.306900000000056e-05, 2.3027999999997856e-05, 2.3013999999998286e-05, 2.237499999999809e-05, 2.2305999999999715e-05, 2.238899999999766e-05, 2.213899999999741e-05, 2.270899999999923e-05, 2.284699999999945e-05, 2.2555999999999965e-05, 2.2958000000000006e-05, 2.2749999999998466e-05, 2.245899999999898e-05, 2.213900000000088e-05, 2.2250000000001435e-05]</msg>
<status status="PASS" starttime="20201029 18:27:15.558" endtime="20201029 18:27:15.561"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:15.553" endtime="20201029 18:27:15.561"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:27:15.565" endtime="20201029 18:27:15.584"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:15.563" endtime="20201029 18:27:15.585"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:15.562" endtime="20201029 18:27:15.585"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:15.208" endtime="20201029 18:27:15.585"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:15.207" endtime="20201029 18:27:15.586"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:15.594" endtime="20201029 18:27:15.609"></status>
</kw>
<msg timestamp="20201029 18:27:15.609" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:15.593" endtime="20201029 18:27:15.610"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:15.612" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:15.610" endtime="20201029 18:27:15.612"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:15.613" endtime="20201029 18:27:15.615"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:15.590" endtime="20201029 18:27:15.615"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:15.588" endtime="20201029 18:27:15.616"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:15.622" endtime="20201029 18:27:15.909"></status>
</kw>
<msg timestamp="20201029 18:27:15.912" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019443861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019466931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:15.620" endtime="20201029 18:27:15.912"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:15.920" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019443861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019466931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:15.913" endtime="20201029 18:27:15.920"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:15.921" endtime="20201029 18:27:15.923"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:15.618" endtime="20201029 18:27:15.923"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:15.616" endtime="20201029 18:27:15.924"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:27:15.928" level="INFO">${RESULT} = [{'diff': 2.3070000000000035e-05}, {'diff': 2.2598000000002144e-05}, {'diff': 2.2778000000001075e-05}, {'diff': 2.2471999999999076e-05}, {'diff': 2.261100000000224e-05}, {'diff': 2.2292000000000145e-0...</msg>
<status status="PASS" starttime="20201029 18:27:15.924" endtime="20201029 18:27:15.928"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:27:15.933" level="INFO">${ACCURACY} = {'diff': [2.3070000000000035e-05, 2.2598000000002144e-05, 2.2778000000001075e-05, 2.2471999999999076e-05, 2.261100000000224e-05, 2.2292000000000145e-05, 2.2512999999998312e-05, 2.273699999999837e-05, ...</msg>
<status status="PASS" starttime="20201029 18:27:15.929" endtime="20201029 18:27:15.933"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:27:15.937" level="INFO">NAME: accuracy-TIMER_SLEEP-5-philip</msg>
<status status="PASS" starttime="20201029 18:27:15.936" endtime="20201029 18:27:15.937"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:27:15.940" level="INFO">VALUE: [2.3070000000000035e-05, 2.2598000000002144e-05, 2.2778000000001075e-05, 2.2471999999999076e-05, 2.261100000000224e-05, 2.2292000000000145e-05, 2.2512999999998312e-05, 2.273699999999837e-05, 2.2929999999997397e-05, 2.286099999999902e-05, 2.2221999999998826e-05, 2.252700000000135e-05, 2.2499999999998216e-05, 2.252700000000135e-05, 2.237500000000156e-05, 2.2235999999998396e-05, 2.2235999999998396e-05, 2.2249999999997966e-05, 2.284699999999945e-05, 2.263900000000138e-05, 2.279100000000117e-05, 2.263900000000138e-05, 2.2694000000000186e-05, 2.266700000000052e-05, 2.263900000000138e-05, 2.2806000000000215e-05, 2.2958000000000006e-05, 2.209700000000217e-05, 2.306900000000056e-05, 2.2319999999999285e-05, 2.2569999999999535e-05, 2.284699999999945e-05, 2.2819999999999785e-05, 2.209700000000217e-05, 2.2721999999999326e-05, 2.236099999999852e-05, 2.262499999999834e-05, 2.2083999999998605e-05, 2.3042000000000895e-05, 2.290299999999773e-05, 2.2457999999999506e-05, 2.2083999999998605e-05, 2.2985999999999146e-05, 2.240299999999723e-05, 2.293100000000034e-05, 2.265299999999748e-05, 2.265300000000095e-05, 2.240299999999723e-05, 2.2680000000000616e-05, 2.2762999999998562e-05]</msg>
<status status="PASS" starttime="20201029 18:27:15.938" endtime="20201029 18:27:15.940"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:15.934" endtime="20201029 18:27:15.941"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:27:15.944" endtime="20201029 18:27:15.964"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:15.943" endtime="20201029 18:27:15.965"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:15.942" endtime="20201029 18:27:15.965"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:15.586" endtime="20201029 18:27:15.965"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:15.586" endtime="20201029 18:27:15.965"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:15.974" endtime="20201029 18:27:15.990"></status>
</kw>
<msg timestamp="20201029 18:27:15.990" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:15.972" endtime="20201029 18:27:15.990"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:15.993" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:15.991" endtime="20201029 18:27:15.993"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:15.994" endtime="20201029 18:27:15.995"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:15.970" endtime="20201029 18:27:15.996"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:15.968" endtime="20201029 18:27:15.996"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:16.003" endtime="20201029 18:27:16.288"></status>
</kw>
<msg timestamp="20201029 18:27:16.291" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020148944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020171139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:16.001" endtime="20201029 18:27:16.291"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:16.299" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020148944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020171139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:16.292" endtime="20201029 18:27:16.300"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:16.300" endtime="20201029 18:27:16.302"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:15.998" endtime="20201029 18:27:16.303"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:15.997" endtime="20201029 18:27:16.303"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:27:16.307" level="INFO">${RESULT} = [{'diff': 2.219500000000263e-05}, {'diff': 2.2235999999998396e-05}, {'diff': 2.20969999999987e-05}, {'diff': 2.240299999999723e-05}, {'diff': 2.2249999999997966e-05}, {'diff': 2.2292000000000145e-05},...</msg>
<status status="PASS" starttime="20201029 18:27:16.304" endtime="20201029 18:27:16.307"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:27:16.311" level="INFO">${ACCURACY} = {'diff': [2.219500000000263e-05, 2.2235999999998396e-05, 2.20969999999987e-05, 2.240299999999723e-05, 2.2249999999997966e-05, 2.2292000000000145e-05, 2.2292000000000145e-05, 2.2985999999999146e-05, 2....</msg>
<status status="PASS" starttime="20201029 18:27:16.308" endtime="20201029 18:27:16.311"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:27:16.315" level="INFO">NAME: accuracy-TIMER_SLEEP-6-philip</msg>
<status status="PASS" starttime="20201029 18:27:16.314" endtime="20201029 18:27:16.316"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:27:16.318" level="INFO">VALUE: [2.219500000000263e-05, 2.2235999999998396e-05, 2.20969999999987e-05, 2.240299999999723e-05, 2.2249999999997966e-05, 2.2292000000000145e-05, 2.2292000000000145e-05, 2.2985999999999146e-05, 2.245900000000245e-05, 2.2999999999998716e-05, 2.2792000000000645e-05, 2.2347999999998425e-05, 2.24030000000007e-05, 2.2763999999998036e-05, 2.2180000000000116e-05, 2.2278000000000575e-05, 2.3014000000001755e-05, 2.295899999999948e-05, 2.2985999999999146e-05, 2.2429999999996897e-05, 2.280500000000074e-05, 2.212500000000131e-05, 2.213900000000088e-05, 2.24030000000007e-05, 2.288899999999816e-05, 2.255500000000049e-05, 2.218099999999959e-05, 2.2944000000000436e-05, 2.2930000000000866e-05, 2.2944000000000436e-05, 2.2971999999999576e-05, 2.2958000000000006e-05, 2.2292000000000145e-05, 2.2236000000001865e-05, 2.263900000000138e-05, 2.215300000000045e-05, 2.236100000000199e-05, 2.266700000000052e-05, 2.2264000000001005e-05, 2.20969999999987e-05, 2.211100000000174e-05, 2.211099999999827e-05, 2.269499999999966e-05, 2.29030000000012e-05, 2.2985999999999146e-05, 2.2250000000001435e-05, 2.2722000000002796e-05, 2.2222000000002295e-05, 2.2735999999998896e-05, 2.2112000000001214e-05]</msg>
<status status="PASS" starttime="20201029 18:27:16.316" endtime="20201029 18:27:16.319"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:16.312" endtime="20201029 18:27:16.319"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:27:16.323" endtime="20201029 18:27:16.342"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:16.321" endtime="20201029 18:27:16.343"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:16.320" endtime="20201029 18:27:16.343"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:15.966" endtime="20201029 18:27:16.343"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:15.966" endtime="20201029 18:27:16.343"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:16.352" endtime="20201029 18:27:16.367"></status>
</kw>
<msg timestamp="20201029 18:27:16.368" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:16.350" endtime="20201029 18:27:16.368"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:16.370" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:16.369" endtime="20201029 18:27:16.371"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:16.371" endtime="20201029 18:27:16.373"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:16.348" endtime="20201029 18:27:16.374"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:16.346" endtime="20201029 18:27:16.374"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:16.380" endtime="20201029 18:27:16.667"></status>
</kw>
<msg timestamp="20201029 18:27:16.670" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020372708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020395431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:16.379" endtime="20201029 18:27:16.670"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:16.678" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020372708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020395431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:16.671" endtime="20201029 18:27:16.678"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:16.679" endtime="20201029 18:27:16.681"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:16.376" endtime="20201029 18:27:16.681"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:16.375" endtime="20201029 18:27:16.682"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:27:16.686" level="INFO">${RESULT} = [{'diff': 2.27229999999988e-05}, {'diff': 2.3026999999998382e-05}, {'diff': 2.294499999999991e-05}, {'diff': 2.262500000000181e-05}, {'diff': 2.2305999999999715e-05}, {'diff': 2.223700000000134e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:27:16.682" endtime="20201029 18:27:16.686"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:27:16.690" level="INFO">${ACCURACY} = {'diff': [2.27229999999988e-05, 2.3026999999998382e-05, 2.294499999999991e-05, 2.262500000000181e-05, 2.2305999999999715e-05, 2.223700000000134e-05, 2.256900000000006e-05, 2.2348000000001894e-05, 2.23...</msg>
<status status="PASS" starttime="20201029 18:27:16.687" endtime="20201029 18:27:16.690"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:27:16.694" level="INFO">NAME: accuracy-TIMER_SLEEP-7-philip</msg>
<status status="PASS" starttime="20201029 18:27:16.693" endtime="20201029 18:27:16.694"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:27:16.696" level="INFO">VALUE: [2.27229999999988e-05, 2.3026999999998382e-05, 2.294499999999991e-05, 2.262500000000181e-05, 2.2305999999999715e-05, 2.223700000000134e-05, 2.256900000000006e-05, 2.2348000000001894e-05, 2.2305999999999715e-05, 2.2320000000002754e-05, 2.2333999999998855e-05, 2.2679999999997147e-05, 2.213900000000088e-05, 2.2721999999999326e-05, 2.236099999999852e-05, 2.208299999999913e-05, 2.2999999999998716e-05, 2.238899999999766e-05, 2.3026999999998382e-05, 2.281900000000031e-05, 2.2528000000000825e-05, 2.284699999999945e-05, 2.230500000000024e-05, 2.234699999999895e-05, 2.2735999999998896e-05, 2.258299999999963e-05, 2.2749999999998466e-05, 2.2749999999998466e-05, 2.25969999999992e-05, 2.2250000000001435e-05, 2.234699999999895e-05, 2.2999999999998716e-05, 2.2555999999999965e-05, 2.2777999999997606e-05, 2.2250000000001435e-05, 2.2569999999999535e-05, 2.236100000000199e-05, 2.262499999999834e-05, 2.2334000000002324e-05, 2.2986000000002615e-05, 2.2749999999998466e-05, 2.213900000000088e-05, 2.2776999999998132e-05, 2.2264000000001005e-05, 2.3042000000000895e-05, 2.2847999999998925e-05, 2.2457999999999506e-05, 2.2971999999999576e-05, 2.2514000000001255e-05, 2.262500000000181e-05]</msg>
<status status="PASS" starttime="20201029 18:27:16.695" endtime="20201029 18:27:16.698"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:16.690" endtime="20201029 18:27:16.699"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:27:16.702" endtime="20201029 18:27:16.722"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:16.701" endtime="20201029 18:27:16.722"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:16.700" endtime="20201029 18:27:16.723"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:16.344" endtime="20201029 18:27:16.723"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:16.344" endtime="20201029 18:27:16.723"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:16.732" endtime="20201029 18:27:16.748"></status>
</kw>
<msg timestamp="20201029 18:27:16.748" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:16.730" endtime="20201029 18:27:16.748"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:16.751" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:16.749" endtime="20201029 18:27:16.751"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:16.752" endtime="20201029 18:27:16.753"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:16.727" endtime="20201029 18:27:16.754"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:16.725" endtime="20201029 18:27:16.754"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:16.761" endtime="20201029 18:27:17.046"></status>
</kw>
<msg timestamp="20201029 18:27:17.049" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020548472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020570681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:16.759" endtime="20201029 18:27:17.050"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:17.057" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020548472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020570681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:17.050" endtime="20201029 18:27:17.058"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:17.059" endtime="20201029 18:27:17.060"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:16.757" endtime="20201029 18:27:17.061"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:16.755" endtime="20201029 18:27:17.061"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:27:17.065" level="INFO">${RESULT} = [{'diff': 2.220899999999873e-05}, {'diff': 2.2666000000001046e-05}, {'diff': 2.2778000000001075e-05}, {'diff': 2.25969999999992e-05}, {'diff': 2.283299999999988e-05}, {'diff': 2.2735999999998896e-05},...</msg>
<status status="PASS" starttime="20201029 18:27:17.062" endtime="20201029 18:27:17.065"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:27:17.070" level="INFO">${ACCURACY} = {'diff': [2.220899999999873e-05, 2.2666000000001046e-05, 2.2778000000001075e-05, 2.25969999999992e-05, 2.283299999999988e-05, 2.2735999999998896e-05, 2.2958000000000006e-05, 2.2512999999998312e-05, 2....</msg>
<status status="PASS" starttime="20201029 18:27:17.066" endtime="20201029 18:27:17.070"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:27:17.075" level="INFO">NAME: accuracy-TIMER_SLEEP-8-philip</msg>
<status status="PASS" starttime="20201029 18:27:17.074" endtime="20201029 18:27:17.075"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:27:17.077" level="INFO">VALUE: [2.220899999999873e-05, 2.2666000000001046e-05, 2.2778000000001075e-05, 2.25969999999992e-05, 2.283299999999988e-05, 2.2735999999998896e-05, 2.2958000000000006e-05, 2.2512999999998312e-05, 2.263900000000138e-05, 2.2514000000001255e-05, 2.252700000000135e-05, 2.2402000000001226e-05, 2.2207999999999256e-05, 2.283299999999988e-05, 2.2680000000000616e-05, 2.2221999999998826e-05, 2.212500000000131e-05, 2.261099999999877e-05, 2.215300000000045e-05, 2.305500000000099e-05, 2.2514000000001255e-05, 2.29169999999973e-05, 2.233300000000285e-05, 2.234699999999895e-05, 2.2944000000000436e-05, 2.2264000000001005e-05, 2.25969999999992e-05, 2.2500000000001685e-05, 2.2902000000001727e-05, 2.3054999999997522e-05, 2.268100000000009e-05, 2.297299999999905e-05, 2.2250000000001435e-05, 2.215300000000045e-05, 2.3000000000002185e-05, 2.24030000000007e-05, 2.3027999999997856e-05, 2.312499999999884e-05, 2.3000000000002185e-05, 2.308300000000013e-05, 2.295899999999948e-05, 2.22090000000022e-05, 2.2915999999997827e-05, 2.2721999999999326e-05, 2.2666000000001046e-05, 2.2166000000000546e-05, 2.262499999999834e-05, 2.2262999999998062e-05, 2.2457999999999506e-05, 2.2985999999999146e-05]</msg>
<status status="PASS" starttime="20201029 18:27:17.076" endtime="20201029 18:27:17.078"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:17.071" endtime="20201029 18:27:17.078"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:27:17.082" endtime="20201029 18:27:17.101"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:17.080" endtime="20201029 18:27:17.102"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:17.079" endtime="20201029 18:27:17.102"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:16.724" endtime="20201029 18:27:17.103"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:16.723" endtime="20201029 18:27:17.103"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:17.111" endtime="20201029 18:27:17.128"></status>
</kw>
<msg timestamp="20201029 18:27:17.129" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:17.110" endtime="20201029 18:27:17.129"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:17.131" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:17.130" endtime="20201029 18:27:17.132"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:17.132" endtime="20201029 18:27:17.134"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:17.107" endtime="20201029 18:27:17.134"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:17.105" endtime="20201029 18:27:17.135"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:17.141" endtime="20201029 18:27:17.429"></status>
</kw>
<msg timestamp="20201029 18:27:17.432" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020395667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020418069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:17.140" endtime="20201029 18:27:17.432"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:17.440" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020395667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020418069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:17.433" endtime="20201029 18:27:17.440"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:17.441" endtime="20201029 18:27:17.443"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:17.137" endtime="20201029 18:27:17.443"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:17.135" endtime="20201029 18:27:17.444"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:27:17.448" level="INFO">${RESULT} = [{'diff': 2.2402000000001226e-05}, {'diff': 2.3056000000000465e-05}, {'diff': 2.206899999999956e-05}, {'diff': 2.287499999999859e-05}, {'diff': 2.2264000000001005e-05}, {'diff': 2.2555999999999965e-05...</msg>
<status status="PASS" starttime="20201029 18:27:17.445" endtime="20201029 18:27:17.448"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:27:17.452" level="INFO">${ACCURACY} = {'diff': [2.2402000000001226e-05, 2.3056000000000465e-05, 2.206899999999956e-05, 2.287499999999859e-05, 2.2264000000001005e-05, 2.2555999999999965e-05, 2.2458000000002976e-05, 2.2958000000000006e-05, ...</msg>
<status status="PASS" starttime="20201029 18:27:17.449" endtime="20201029 18:27:17.452"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:27:17.456" level="INFO">NAME: accuracy-TIMER_SLEEP-9-philip</msg>
<status status="PASS" starttime="20201029 18:27:17.455" endtime="20201029 18:27:17.457"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:27:17.459" level="INFO">VALUE: [2.2402000000001226e-05, 2.3056000000000465e-05, 2.206899999999956e-05, 2.287499999999859e-05, 2.2264000000001005e-05, 2.2555999999999965e-05, 2.2458000000002976e-05, 2.2958000000000006e-05, 2.2944000000000436e-05, 2.2485999999998646e-05, 2.306900000000056e-05, 2.2972000000003046e-05, 2.2457999999999506e-05, 2.2999999999998716e-05, 2.284699999999945e-05, 2.2292000000000145e-05, 2.29169999999973e-05, 2.20969999999987e-05, 2.2457999999999506e-05, 2.291700000000077e-05, 2.25969999999992e-05, 2.2999999999998716e-05, 2.288899999999816e-05, 2.265300000000095e-05, 2.2277999999997106e-05, 2.291700000000077e-05, 2.218099999999959e-05, 2.240299999999723e-05, 2.2443999999999936e-05, 2.2806000000000215e-05, 2.2264000000001005e-05, 2.2999999999998716e-05, 2.2528000000000825e-05, 2.2583999999999105e-05, 2.294499999999991e-05, 2.2098000000001644e-05, 2.2707999999999756e-05, 2.2333999999998855e-05, 2.2152000000000976e-05, 2.2166000000000546e-05, 2.268100000000009e-05, 2.2749999999998466e-05, 2.237500000000156e-05, 2.236100000000199e-05, 2.212500000000131e-05, 2.2208000000002726e-05, 2.2986000000002615e-05, 2.230500000000024e-05, 2.241700000000027e-05, 2.2944000000000436e-05]</msg>
<status status="PASS" starttime="20201029 18:27:17.457" endtime="20201029 18:27:17.459"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:17.453" endtime="20201029 18:27:17.460"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:27:17.464" endtime="20201029 18:27:17.483"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:17.462" endtime="20201029 18:27:17.484"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:17.461" endtime="20201029 18:27:17.484"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:17.104" endtime="20201029 18:27:17.484"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:17.103" endtime="20201029 18:27:17.484"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:17.493" endtime="20201029 18:27:17.509"></status>
</kw>
<msg timestamp="20201029 18:27:17.510" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:17.491" endtime="20201029 18:27:17.510"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:17.512" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:17.511" endtime="20201029 18:27:17.513"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:17.513" endtime="20201029 18:27:17.515"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:17.489" endtime="20201029 18:27:17.515"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:17.487" endtime="20201029 18:27:17.516"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:17.522" endtime="20201029 18:27:17.808"></status>
</kw>
<msg timestamp="20201029 18:27:17.811" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020417597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020440111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:17.521" endtime="20201029 18:27:17.812"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:17.819" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020417597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020440111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:17.813" endtime="20201029 18:27:17.820"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:17.821" endtime="20201029 18:27:17.822"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:17.518" endtime="20201029 18:27:17.823"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:17.516" endtime="20201029 18:27:17.823"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:27:17.827" level="INFO">${RESULT} = [{'diff': 2.2514000000001255e-05}, {'diff': 2.2278000000000575e-05}, {'diff': 2.212500000000131e-05}, {'diff': 2.2458000000002976e-05}, {'diff': 2.3056000000000465e-05}, {'diff': 2.2443999999999936e-0...</msg>
<status status="PASS" starttime="20201029 18:27:17.824" endtime="20201029 18:27:17.827"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:27:17.831" level="INFO">${ACCURACY} = {'diff': [2.2514000000001255e-05, 2.2278000000000575e-05, 2.212500000000131e-05, 2.2458000000002976e-05, 2.3056000000000465e-05, 2.2443999999999936e-05, 2.3041999999997426e-05, 2.3042000000000895e-05,...</msg>
<status status="PASS" starttime="20201029 18:27:17.828" endtime="20201029 18:27:17.831"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:27:17.836" level="INFO">NAME: accuracy-TIMER_SLEEP-10-philip</msg>
<status status="PASS" starttime="20201029 18:27:17.835" endtime="20201029 18:27:17.836"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:27:17.838" level="INFO">VALUE: [2.2514000000001255e-05, 2.2278000000000575e-05, 2.212500000000131e-05, 2.2458000000002976e-05, 2.3056000000000465e-05, 2.2443999999999936e-05, 2.3041999999997426e-05, 2.3042000000000895e-05, 2.2999999999998716e-05, 2.284700000000292e-05, 2.2971999999999576e-05, 2.2207999999999256e-05, 2.234699999999895e-05, 2.20969999999987e-05, 2.252700000000135e-05, 2.236100000000199e-05, 2.297299999999905e-05, 2.269499999999966e-05, 2.2083999999998605e-05, 2.2778000000001075e-05, 2.2028000000000325e-05, 2.2485999999998646e-05, 2.280500000000074e-05, 2.2236000000001865e-05, 2.283299999999988e-05, 2.229100000000067e-05, 2.2637999999998437e-05, 2.2749999999998466e-05, 2.2236000000001865e-05, 2.280500000000074e-05, 2.237500000000156e-05, 2.2222000000002295e-05, 2.306900000000056e-05, 2.2999999999998716e-05, 2.212500000000131e-05, 2.280500000000074e-05, 2.2180000000000116e-05, 2.2457999999999506e-05, 2.211100000000174e-05, 2.256900000000006e-05, 2.20969999999987e-05, 2.2806000000000215e-05, 2.233299999999938e-05, 2.238899999999766e-05, 2.2971999999999576e-05, 2.2514000000001255e-05, 2.2735999999998896e-05, 2.2292000000000145e-05, 2.3000000000002185e-05, 2.2528000000000825e-05]</msg>
<status status="PASS" starttime="20201029 18:27:17.837" endtime="20201029 18:27:17.846"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:17.832" endtime="20201029 18:27:17.846"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:27:17.850" endtime="20201029 18:27:17.869"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:17.849" endtime="20201029 18:27:17.870"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:17.847" endtime="20201029 18:27:17.870"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:17.485" endtime="20201029 18:27:17.871"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:17.485" endtime="20201029 18:27:17.871"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:17.879" endtime="20201029 18:27:17.894"></status>
</kw>
<msg timestamp="20201029 18:27:17.895" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:17.878" endtime="20201029 18:27:17.895"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:17.897" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:17.896" endtime="20201029 18:27:17.897"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:17.898" endtime="20201029 18:27:17.900"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:17.875" endtime="20201029 18:27:17.900"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:17.873" endtime="20201029 18:27:17.900"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:17.907" endtime="20201029 18:27:18.194"></status>
</kw>
<msg timestamp="20201029 18:27:18.197" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019406153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01943, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201029 18:27:17.905" endtime="20201029 18:27:18.197"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:18.205" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019406153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01943, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201029 18:27:18.198" endtime="20201029 18:27:18.205"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:18.206" endtime="20201029 18:27:18.208"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:17.903" endtime="20201029 18:27:18.208"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:17.901" endtime="20201029 18:27:18.209"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:27:18.212" level="INFO">${RESULT} = [{'diff': 2.384700000000045e-05}, {'diff': 2.388899999999916e-05}, {'diff': 2.3582999999997162e-05}, {'diff': 2.316700000000102e-05}, {'diff': 2.394499999999744e-05}, {'diff': 2.393099999999787e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:27:18.209" endtime="20201029 18:27:18.213"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:27:18.217" level="INFO">${ACCURACY} = {'diff': [2.384700000000045e-05, 2.388899999999916e-05, 2.3582999999997162e-05, 2.316700000000102e-05, 2.394499999999744e-05, 2.393099999999787e-05, 2.3679999999998147e-05, 2.3083999999999605e-05, 2.3...</msg>
<status status="PASS" starttime="20201029 18:27:18.213" endtime="20201029 18:27:18.218"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:27:18.222" level="INFO">NAME: accuracy-TIMER_SLEEP-11-philip</msg>
<status status="PASS" starttime="20201029 18:27:18.221" endtime="20201029 18:27:18.222"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:27:18.224" level="INFO">VALUE: [2.384700000000045e-05, 2.388899999999916e-05, 2.3582999999997162e-05, 2.316700000000102e-05, 2.394499999999744e-05, 2.393099999999787e-05, 2.3679999999998147e-05, 2.3083999999999605e-05, 2.35970000000002e-05, 2.3292000000001145e-05, 2.393099999999787e-05, 2.388899999999916e-05, 2.316699999999755e-05, 2.365299999999848e-05, 2.316700000000102e-05, 2.3151999999998507e-05, 2.3820000000000785e-05, 2.312499999999884e-05, 2.3221999999999826e-05, 2.413899999999941e-05, 2.3485999999999646e-05, 2.4054999999998522e-05, 2.3083999999999605e-05, 2.3763999999999036e-05, 2.3901999999999257e-05, 2.406900000000156e-05, 2.3278000000001575e-05, 2.4026999999999382e-05, 2.3679999999998147e-05, 2.3444000000000936e-05, 2.362499999999934e-05, 2.4068999999998092e-05, 2.3333999999999855e-05, 2.3763999999999036e-05, 2.338899999999866e-05, 2.3693999999997717e-05, 2.3485999999999646e-05, 2.3514000000002255e-05, 2.356900000000106e-05, 2.312499999999884e-05, 2.361099999999977e-05, 2.338900000000213e-05, 2.393099999999787e-05, 2.333300000000038e-05, 2.3278000000001575e-05, 2.318099999999712e-05, 2.318100000000059e-05, 2.390299999999873e-05, 2.3749999999999466e-05, 2.388899999999916e-05]</msg>
<status status="PASS" starttime="20201029 18:27:18.223" endtime="20201029 18:27:18.225"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:18.218" endtime="20201029 18:27:18.226"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:27:18.229" endtime="20201029 18:27:18.249"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:18.228" endtime="20201029 18:27:18.249"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:18.227" endtime="20201029 18:27:18.249"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:17.872" endtime="20201029 18:27:18.250"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:17.871" endtime="20201029 18:27:18.250"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:18.258" endtime="20201029 18:27:18.274"></status>
</kw>
<msg timestamp="20201029 18:27:18.275" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:18.257" endtime="20201029 18:27:18.275"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:18.278" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:18.276" endtime="20201029 18:27:18.278"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:18.279" endtime="20201029 18:27:18.280"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:18.254" endtime="20201029 18:27:18.281"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:18.252" endtime="20201029 18:27:18.282"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:18.288" endtime="20201029 18:27:18.577"></status>
</kw>
<msg timestamp="20201029 18:27:18.580" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019878889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019903347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:18.287" endtime="20201029 18:27:18.580"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:18.588" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019878889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019903347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:18.581" endtime="20201029 18:27:18.589"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:18.589" endtime="20201029 18:27:18.591"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:18.284" endtime="20201029 18:27:18.592"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:18.282" endtime="20201029 18:27:18.592"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:27:18.596" level="INFO">${RESULT} = [{'diff': 2.4457999999998037e-05}, {'diff': 2.4222000000000826e-05}, {'diff': 2.4208000000001256e-05}, {'diff': 2.488900000000016e-05}, {'diff': 2.4513999999999786e-05}, {'diff': 2.4208000000001256e-0...</msg>
<status status="PASS" starttime="20201029 18:27:18.593" endtime="20201029 18:27:18.596"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:27:18.600" level="INFO">${ACCURACY} = {'diff': [2.4457999999998037e-05, 2.4222000000000826e-05, 2.4208000000001256e-05, 2.488900000000016e-05, 2.4513999999999786e-05, 2.4208000000001256e-05, 2.4832999999998412e-05, 2.5056000000002465e-05,...</msg>
<status status="PASS" starttime="20201029 18:27:18.597" endtime="20201029 18:27:18.600"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:27:18.604" level="INFO">NAME: accuracy-TIMER_SLEEP-12-philip</msg>
<status status="PASS" starttime="20201029 18:27:18.603" endtime="20201029 18:27:18.605"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:27:18.607" level="INFO">VALUE: [2.4457999999998037e-05, 2.4222000000000826e-05, 2.4208000000001256e-05, 2.488900000000016e-05, 2.4513999999999786e-05, 2.4208000000001256e-05, 2.4832999999998412e-05, 2.5056000000002465e-05, 2.4236000000000396e-05, 2.4236000000000396e-05, 2.4236000000000396e-05, 2.4999999999997247e-05, 2.4972000000001576e-05, 2.468099999999862e-05, 2.445900000000098e-05, 2.4806000000002215e-05, 2.461100000000077e-05, 2.486100000000102e-05, 2.4291999999998676e-05, 2.5040999999999952e-05, 2.470900000000123e-05, 2.416700000000202e-05, 2.4305999999998246e-05, 2.493099999999887e-05, 2.466699999999905e-05, 2.4320000000001285e-05, 2.4526999999999882e-05, 2.4763000000000562e-05, 2.4304999999998772e-05, 2.4999999999997247e-05, 2.4832999999998412e-05, 2.4513999999999786e-05, 2.461100000000077e-05, 2.4832999999998412e-05, 2.4972000000001576e-05, 2.508300000000213e-05, 2.5000000000000716e-05, 2.4846999999997982e-05, 2.487500000000059e-05, 2.4818999999998842e-05, 2.415299999999898e-05, 2.4236000000000396e-05, 2.4458000000001506e-05, 2.4791999999999176e-05, 2.463899999999991e-05, 2.406900000000156e-05, 2.4346999999997482e-05, 2.4584000000001105e-05, 2.5014000000000286e-05, 2.4708000000001756e-05]</msg>
<status status="PASS" starttime="20201029 18:27:18.605" endtime="20201029 18:27:18.607"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:18.601" endtime="20201029 18:27:18.608"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:27:18.612" endtime="20201029 18:27:18.631"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:18.610" endtime="20201029 18:27:18.632"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:18.609" endtime="20201029 18:27:18.632"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:18.251" endtime="20201029 18:27:18.632"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:18.250" endtime="20201029 18:27:18.632"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:18.643" endtime="20201029 18:27:18.659"></status>
</kw>
<msg timestamp="20201029 18:27:18.660" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:18.641" endtime="20201029 18:27:18.660"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:18.662" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:18.661" endtime="20201029 18:27:18.662"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:18.663" endtime="20201029 18:27:18.665"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:18.638" endtime="20201029 18:27:18.665"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:18.635" endtime="20201029 18:27:18.666"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:18.672" endtime="20201029 18:27:18.959"></status>
</kw>
<msg timestamp="20201029 18:27:18.962" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022415792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022441667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:18.670" endtime="20201029 18:27:18.963"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:18.972" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022415792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022441667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:18.964" endtime="20201029 18:27:18.973"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:18.974" endtime="20201029 18:27:18.976"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:18.668" endtime="20201029 18:27:18.977"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:18.666" endtime="20201029 18:27:18.978"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:27:18.982" level="INFO">${RESULT} = [{'diff': 2.5874999999998122e-05}, {'diff': 2.5624999999997872e-05}, {'diff': 2.5610999999998302e-05}, {'diff': 2.566700000000005e-05}, {'diff': 2.565300000000048e-05}, {'diff': 2.5347999999997956e-05...</msg>
<status status="PASS" starttime="20201029 18:27:18.979" endtime="20201029 18:27:18.982"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:27:18.986" level="INFO">${ACCURACY} = {'diff': [2.5874999999998122e-05, 2.5624999999997872e-05, 2.5610999999998302e-05, 2.566700000000005e-05, 2.565300000000048e-05, 2.5347999999997956e-05, 2.5334000000001855e-05, 2.6040999999997483e-05, ...</msg>
<status status="PASS" starttime="20201029 18:27:18.983" endtime="20201029 18:27:18.987"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:27:18.991" level="INFO">NAME: accuracy-TIMER_SLEEP-13-philip</msg>
<status status="PASS" starttime="20201029 18:27:18.990" endtime="20201029 18:27:18.991"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:27:18.993" level="INFO">VALUE: [2.5874999999998122e-05, 2.5624999999997872e-05, 2.5610999999998302e-05, 2.566700000000005e-05, 2.565300000000048e-05, 2.5347999999997956e-05, 2.5334000000001855e-05, 2.6040999999997483e-05, 2.5985999999998677e-05, 2.5250000000000966e-05, 2.5555000000000022e-05, 2.5250000000000966e-05, 2.5943999999999967e-05, 2.5514000000000786e-05, 2.55970000000022e-05, 2.584700000000245e-05, 2.5278000000000106e-05, 2.562500000000134e-05, 2.6055999999999996e-05, 2.5610999999998302e-05, 2.5735999999998427e-05, 2.6069999999999566e-05, 2.6069000000000092e-05, 2.5582999999999162e-05, 2.5207999999998787e-05, 2.5528000000000356e-05, 2.6055999999999996e-05, 2.538900000000066e-05, 2.518100000000259e-05, 2.5999999999998247e-05, 2.540300000000023e-05, 2.5874999999998122e-05, 2.5721999999998857e-05, 2.597299999999858e-05, 2.570899999999876e-05, 2.565300000000048e-05, 2.59170000000003e-05, 2.5056000000002465e-05, 2.5514000000000786e-05, 2.5999999999998247e-05, 2.534700000000195e-05, 2.565299999999701e-05, 2.6000000000001716e-05, 2.5707999999999287e-05, 2.513900000000041e-05, 2.5735999999998427e-05, 2.5457999999999037e-05, 2.6014000000001286e-05, 2.5346999999998482e-05, 2.538900000000066e-05]</msg>
<status status="PASS" starttime="20201029 18:27:18.992" endtime="20201029 18:27:18.995"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:18.987" endtime="20201029 18:27:18.995"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:27:18.999" endtime="20201029 18:27:19.018"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:18.997" endtime="20201029 18:27:19.019"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:18.996" endtime="20201029 18:27:19.019"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:18.633" endtime="20201029 18:27:19.020"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:18.633" endtime="20201029 18:27:19.020"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:19.028" endtime="20201029 18:27:19.045"></status>
</kw>
<msg timestamp="20201029 18:27:19.046" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:19.027" endtime="20201029 18:27:19.046"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:19.048" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:19.047" endtime="20201029 18:27:19.049"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:19.049" endtime="20201029 18:27:19.051"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:19.024" endtime="20201029 18:27:19.051"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:19.022" endtime="20201029 18:27:19.052"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:19.058" endtime="20201029 18:27:19.344"></status>
</kw>
<msg timestamp="20201029 18:27:19.347" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020602528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020628806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:19.057" endtime="20201029 18:27:19.347"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:19.355" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020602528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020628806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:19.348" endtime="20201029 18:27:19.355"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:19.356" endtime="20201029 18:27:19.358"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:19.054" endtime="20201029 18:27:19.358"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:19.052" endtime="20201029 18:27:19.359"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:27:19.362" level="INFO">${RESULT} = [{'diff': 2.6278000000001106e-05}, {'diff': 2.6333999999999386e-05}, {'diff': 2.6820000000000316e-05}, {'diff': 2.69170000000013e-05}, {'diff': 2.6860999999999552e-05}, {'diff': 2.6833999999999886e-05...</msg>
<status status="PASS" starttime="20201029 18:27:19.359" endtime="20201029 18:27:19.363"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:27:19.367" level="INFO">${ACCURACY} = {'diff': [2.6278000000001106e-05, 2.6333999999999386e-05, 2.6820000000000316e-05, 2.69170000000013e-05, 2.6860999999999552e-05, 2.6833999999999886e-05, 2.6319000000000342e-05, 2.6292000000000676e-05, ...</msg>
<status status="PASS" starttime="20201029 18:27:19.363" endtime="20201029 18:27:19.368"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:27:19.372" level="INFO">NAME: accuracy-TIMER_SLEEP-14-philip</msg>
<status status="PASS" starttime="20201029 18:27:19.371" endtime="20201029 18:27:19.372"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:27:19.374" level="INFO">VALUE: [2.6278000000001106e-05, 2.6333999999999386e-05, 2.6820000000000316e-05, 2.69170000000013e-05, 2.6860999999999552e-05, 2.6833999999999886e-05, 2.6319000000000342e-05, 2.6292000000000676e-05, 2.6708000000000287e-05, 2.6471999999999607e-05, 2.613900000000141e-05, 2.7041000000001952e-05, 2.6360999999999052e-05, 2.6513000000002312e-05, 2.7041000000001952e-05, 2.60970000000027e-05, 2.6999999999999247e-05, 2.6207999999999787e-05, 2.6777999999998137e-05, 2.6292000000000676e-05, 2.7054999999998053e-05, 2.7000000000002716e-05, 2.688900000000216e-05, 2.6833000000000412e-05, 2.6804999999997803e-05, 2.6930000000001397e-05, 2.6096999999999232e-05, 2.6458000000000037e-05, 2.6458000000000037e-05, 2.69170000000013e-05, 2.6486000000002646e-05, 2.7056000000000996e-05, 2.616700000000055e-05, 2.6042000000000426e-05, 2.6570000000000066e-05, 2.638899999999819e-05, 2.6735999999999427e-05, 2.7070000000000566e-05, 2.6528000000001356e-05, 2.6499999999998747e-05, 2.6833999999999886e-05, 2.67369999999989e-05, 2.6999999999999247e-05, 2.623700000000187e-05, 2.6444000000000467e-05, 2.7026999999998913e-05, 2.6012999999998343e-05, 2.6929999999997928e-05, 2.6680000000001147e-05, 2.6999999999999247e-05]</msg>
<status status="PASS" starttime="20201029 18:27:19.373" endtime="20201029 18:27:19.375"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:19.368" endtime="20201029 18:27:19.376"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:27:19.379" endtime="20201029 18:27:19.399"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:19.378" endtime="20201029 18:27:19.399"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:19.377" endtime="20201029 18:27:19.399"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:19.021" endtime="20201029 18:27:19.400"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:19.020" endtime="20201029 18:27:19.400"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:19.408" endtime="20201029 18:27:19.424"></status>
</kw>
<msg timestamp="20201029 18:27:19.424" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:19.407" endtime="20201029 18:27:19.424"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:19.426" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:19.425" endtime="20201029 18:27:19.427"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:19.427" endtime="20201029 18:27:19.429"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:19.404" endtime="20201029 18:27:19.430"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:19.402" endtime="20201029 18:27:19.430"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:19.437" endtime="20201029 18:27:19.724"></status>
</kw>
<msg timestamp="20201029 18:27:19.727" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019507528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019534917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:19.435" endtime="20201029 18:27:19.728"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:19.735" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019507528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019534917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:19.728" endtime="20201029 18:27:19.736"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:19.737" endtime="20201029 18:27:19.738"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:19.432" endtime="20201029 18:27:19.739"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:19.431" endtime="20201029 18:27:19.739"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:27:19.743" level="INFO">${RESULT} = [{'diff': 2.7388999999999192e-05}, {'diff': 2.7985999999997208e-05}, {'diff': 2.722299999999983e-05}, {'diff': 2.7846999999997513e-05}, {'diff': 2.7847000000000982e-05}, {'diff': 2.7361000000000052e-0...</msg>
<status status="PASS" starttime="20201029 18:27:19.740" endtime="20201029 18:27:19.743"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:27:19.747" level="INFO">${ACCURACY} = {'diff': [2.7388999999999192e-05, 2.7985999999997208e-05, 2.722299999999983e-05, 2.7846999999997513e-05, 2.7847000000000982e-05, 2.7361000000000052e-05, 2.7180000000001647e-05, 2.7361000000000052e-05,...</msg>
<status status="PASS" starttime="20201029 18:27:19.744" endtime="20201029 18:27:19.747"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:27:19.752" level="INFO">NAME: accuracy-TIMER_SLEEP-15-philip</msg>
<status status="PASS" starttime="20201029 18:27:19.751" endtime="20201029 18:27:19.752"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:27:19.754" level="INFO">VALUE: [2.7388999999999192e-05, 2.7985999999997208e-05, 2.722299999999983e-05, 2.7846999999997513e-05, 2.7847000000000982e-05, 2.7361000000000052e-05, 2.7180000000001647e-05, 2.7361000000000052e-05, 2.7805000000002272e-05, 2.7804999999998803e-05, 2.7930000000002397e-05, 2.7332999999997443e-05, 2.7791000000002702e-05, 2.7235999999999927e-05, 2.7556000000001496e-05, 2.7679999999998678e-05, 2.741699999999833e-05, 2.7194000000001217e-05, 2.7568999999998123e-05, 2.762500000000334e-05, 2.7554999999998553e-05, 2.766699999999858e-05, 2.7986000000000677e-05, 2.7347000000000482e-05, 2.8098000000000706e-05, 2.791699999999883e-05, 2.7347000000000482e-05, 2.718099999999765e-05, 2.7110999999999802e-05, 2.7986000000000677e-05, 2.79309999999984e-05, 2.7513999999999317e-05, 2.7749999999999997e-05, 2.7499999999999747e-05, 2.7277999999998637e-05, 2.718100000000112e-05, 2.798700000000015e-05, 2.7958000000001537e-05, 2.720899999999679e-05, 2.7862000000000026e-05, 2.7790999999999233e-05, 2.7749999999999997e-05, 2.7554999999998553e-05, 2.7165999999998608e-05, 2.7320000000000816e-05, 2.765300000000248e-05, 2.7818999999998373e-05, 2.7819000000001842e-05, 2.7528000000002356e-05, 2.7249999999999497e-05]</msg>
<status status="PASS" starttime="20201029 18:27:19.753" endtime="20201029 18:27:19.755"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:19.748" endtime="20201029 18:27:19.755"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:27:19.759" endtime="20201029 18:27:19.778"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:19.757" endtime="20201029 18:27:19.779"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:19.756" endtime="20201029 18:27:19.779"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:19.401" endtime="20201029 18:27:19.779"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:19.400" endtime="20201029 18:27:19.780"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:19.788" endtime="20201029 18:27:19.804"></status>
</kw>
<msg timestamp="20201029 18:27:19.805" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:19.787" endtime="20201029 18:27:19.805"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:19.807" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:19.806" endtime="20201029 18:27:19.807"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:19.808" endtime="20201029 18:27:19.810"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:19.784" endtime="20201029 18:27:19.810"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:19.782" endtime="20201029 18:27:19.811"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:19.817" endtime="20201029 18:27:20.101"></status>
</kw>
<msg timestamp="20201029 18:27:20.104" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020578403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020607083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:19.816" endtime="20201029 18:27:20.104"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:20.112" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020578403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020607083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:20.105" endtime="20201029 18:27:20.112"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:20.113" endtime="20201029 18:27:20.115"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:19.813" endtime="20201029 18:27:20.115"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:19.811" endtime="20201029 18:27:20.116"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:27:20.120" level="INFO">${RESULT} = [{'diff': 2.8680000000003147e-05}, {'diff': 2.8347000000001482e-05}, {'diff': 2.8402999999999762e-05}, {'diff': 2.8540999999999983e-05}, {'diff': 2.8360999999997583e-05}, {'diff': 2.8778000000000137e-...</msg>
<status status="PASS" starttime="20201029 18:27:20.116" endtime="20201029 18:27:20.120"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:27:20.124" level="INFO">${ACCURACY} = {'diff': [2.8680000000003147e-05, 2.8347000000001482e-05, 2.8402999999999762e-05, 2.8540999999999983e-05, 2.8360999999997583e-05, 2.8778000000000137e-05, 2.8054999999999053e-05, 2.8875000000001122e-05...</msg>
<status status="PASS" starttime="20201029 18:27:20.121" endtime="20201029 18:27:20.124"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:27:20.128" level="INFO">NAME: accuracy-TIMER_SLEEP-16-philip</msg>
<status status="PASS" starttime="20201029 18:27:20.127" endtime="20201029 18:27:20.128"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:27:20.130" level="INFO">VALUE: [2.8680000000003147e-05, 2.8347000000001482e-05, 2.8402999999999762e-05, 2.8540999999999983e-05, 2.8360999999997583e-05, 2.8778000000000137e-05, 2.8054999999999053e-05, 2.8875000000001122e-05, 2.8971999999998638e-05, 2.8582999999998693e-05, 2.816699999999908e-05, 2.8457999999998568e-05, 2.8111000000000802e-05, 2.8875000000001122e-05, 2.8347000000001482e-05, 2.816699999999908e-05, 2.8972000000002107e-05, 2.8569999999998597e-05, 2.868100000000262e-05, 2.818100000000212e-05, 2.8042000000002426e-05, 2.9014000000000817e-05, 2.8584000000001636e-05, 2.8347000000001482e-05, 2.8957999999999068e-05, 2.8264000000000067e-05, 2.895900000000201e-05, 2.820900000000126e-05, 2.8986000000001677e-05, 2.8124999999996902e-05, 2.9028000000000387e-05, 2.8874999999997653e-05, 2.8999999999997778e-05, 2.9040999999997014e-05, 2.8832999999998943e-05, 2.8749999999997528e-05, 2.8707999999998818e-05, 2.8721999999998388e-05, 2.8679999999999678e-05, 2.8804999999999803e-05, 2.8472000000001607e-05, 2.8929999999999928e-05, 2.8694000000002717e-05, 2.8874999999997653e-05, 2.8653000000000012e-05, 2.9068999999999623e-05, 2.8083000000001662e-05, 2.8221999999997888e-05, 2.8903000000000262e-05, 2.8597000000001732e-05]</msg>
<status status="PASS" starttime="20201029 18:27:20.129" endtime="20201029 18:27:20.132"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:20.125" endtime="20201029 18:27:20.133"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:27:20.136" endtime="20201029 18:27:20.156"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:20.135" endtime="20201029 18:27:20.156"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:20.134" endtime="20201029 18:27:20.157"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:19.781" endtime="20201029 18:27:20.157"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:19.780" endtime="20201029 18:27:20.157"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:20.166" endtime="20201029 18:27:20.181"></status>
</kw>
<msg timestamp="20201029 18:27:20.182" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:20.164" endtime="20201029 18:27:20.182"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:20.184" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:20.183" endtime="20201029 18:27:20.184"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:20.185" endtime="20201029 18:27:20.187"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:20.162" endtime="20201029 18:27:20.187"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:20.160" endtime="20201029 18:27:20.188"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:20.194" endtime="20201029 18:27:20.480"></status>
</kw>
<msg timestamp="20201029 18:27:20.483" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019530264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019559736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:20.193" endtime="20201029 18:27:20.483"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:20.491" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019530264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019559736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:20.484" endtime="20201029 18:27:20.492"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:20.493" endtime="20201029 18:27:20.494"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:20.190" endtime="20201029 18:27:20.495"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:20.188" endtime="20201029 18:27:20.495"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:27:20.499" level="INFO">${RESULT} = [{'diff': 2.9472000000002607e-05}, {'diff': 2.9625000000001872e-05}, {'diff': 2.9681000000000152e-05}, {'diff': 2.9139000000000942e-05}, {'diff': 2.9221999999998888e-05}, {'diff': 2.9235999999998458e-...</msg>
<status status="PASS" starttime="20201029 18:27:20.496" endtime="20201029 18:27:20.499"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:27:20.504" level="INFO">${ACCURACY} = {'diff': [2.9472000000002607e-05, 2.9625000000001872e-05, 2.9681000000000152e-05, 2.9139000000000942e-05, 2.9221999999998888e-05, 2.9235999999998458e-05, 2.9930999999996932e-05, 2.969499999999972e-05,...</msg>
<status status="PASS" starttime="20201029 18:27:20.500" endtime="20201029 18:27:20.504"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:27:20.509" level="INFO">NAME: accuracy-TIMER_SLEEP-17-philip</msg>
<status status="PASS" starttime="20201029 18:27:20.508" endtime="20201029 18:27:20.509"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:27:20.511" level="INFO">VALUE: [2.9472000000002607e-05, 2.9625000000001872e-05, 2.9681000000000152e-05, 2.9139000000000942e-05, 2.9221999999998888e-05, 2.9235999999998458e-05, 2.9930999999996932e-05, 2.969499999999972e-05, 2.9360999999998583e-05, 2.945899999999904e-05, 2.9625000000001872e-05, 2.9180000000000178e-05, 2.9083999999998666e-05, 3.0014000000001817e-05, 2.9292000000000207e-05, 2.9999999999998778e-05, 2.9875000000002122e-05, 2.9903000000001262e-05, 2.9403000000000762e-05, 2.9292000000000207e-05, 2.9082999999999193e-05, 2.9305000000000303e-05, 2.963800000000197e-05, 2.9250000000001497e-05, 3.0069000000000623e-05, 2.9139000000000942e-05, 2.9389000000001192e-05, 2.9485999999998708e-05, 2.9569000000000123e-05, 2.9221999999998888e-05, 2.9389000000001192e-05, 2.9111000000001802e-05, 2.9403000000000762e-05, 2.9555000000000553e-05, 2.9707999999999818e-05, 2.9582999999999693e-05, 2.9875000000002122e-05, 3.0042000000000957e-05, 2.9610999999998833e-05, 2.9667000000000582e-05, 2.9346999999999013e-05, 2.9902999999997792e-05, 3.0056000000000527e-05, 2.9084000000002136e-05, 2.9138000000001468e-05, 2.9098000000001706e-05, 2.9917000000000832e-05, 2.9764000000001567e-05, 3.0083000000000193e-05, 2.9652000000001538e-05]</msg>
<status status="PASS" starttime="20201029 18:27:20.510" endtime="20201029 18:27:20.512"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:20.505" endtime="20201029 18:27:20.512"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:27:20.516" endtime="20201029 18:27:20.535"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:20.515" endtime="20201029 18:27:20.536"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:20.513" endtime="20201029 18:27:20.536"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:20.158" endtime="20201029 18:27:20.537"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:20.158" endtime="20201029 18:27:20.537"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:20.546" endtime="20201029 18:27:20.561"></status>
</kw>
<msg timestamp="20201029 18:27:20.562" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:20.544" endtime="20201029 18:27:20.562"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:20.564" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:20.563" endtime="20201029 18:27:20.565"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:20.565" endtime="20201029 18:27:20.567"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:20.541" endtime="20201029 18:27:20.567"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:20.539" endtime="20201029 18:27:20.568"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:20.574" endtime="20201029 18:27:20.860"></status>
</kw>
<msg timestamp="20201029 18:27:20.864" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019768333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019798444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:20.573" endtime="20201029 18:27:20.864"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:20.872" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019768333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019798444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:20.865" endtime="20201029 18:27:20.872"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:20.873" endtime="20201029 18:27:20.874"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:20.570" endtime="20201029 18:27:20.875"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:20.568" endtime="20201029 18:27:20.875"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:27:20.879" level="INFO">${RESULT} = [{'diff': 3.0110999999999333e-05}, {'diff': 3.073599999999996e-05}, {'diff': 3.068000000000168e-05}, {'diff': 3.092999999999846e-05}, {'diff': 3.0292000000001207e-05}, {'diff': 3.087500000000312e-05},...</msg>
<status status="PASS" starttime="20201029 18:27:20.876" endtime="20201029 18:27:20.879"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:27:20.883" level="INFO">${ACCURACY} = {'diff': [3.0110999999999333e-05, 3.073599999999996e-05, 3.068000000000168e-05, 3.092999999999846e-05, 3.0292000000001207e-05, 3.087500000000312e-05, 3.0096999999999763e-05, 3.0582999999997224e-05, 3....</msg>
<status status="PASS" starttime="20201029 18:27:20.880" endtime="20201029 18:27:20.884"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:27:20.888" level="INFO">NAME: accuracy-TIMER_SLEEP-18-philip</msg>
<status status="PASS" starttime="20201029 18:27:20.887" endtime="20201029 18:27:20.888"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:27:20.890" level="INFO">VALUE: [3.0110999999999333e-05, 3.073599999999996e-05, 3.068000000000168e-05, 3.092999999999846e-05, 3.0292000000001207e-05, 3.087500000000312e-05, 3.0096999999999763e-05, 3.0582999999997224e-05, 3.066600000000211e-05, 3.052800000000189e-05, 3.086100000000008e-05, 3.088899999999922e-05, 3.0374999999999153e-05, 3.09440000000015e-05, 3.079200000000171e-05, 3.104199999999849e-05, 3.0139000000001942e-05, 3.066699999999811e-05, 3.104200000000196e-05, 3.0235999999999458e-05, 3.083400000000042e-05, 3.091699999999836e-05, 3.068100000000115e-05, 3.0277999999998167e-05, 3.061099999999983e-05, 3.09310000000014e-05, 3.083300000000094e-05, 3.0499999999999278e-05, 3.098699999999968e-05, 3.0374999999999153e-05, 3.054200000000146e-05, 3.067999999999821e-05, 3.068000000000168e-05, 3.016599999999814e-05, 3.088900000000269e-05, 3.091599999999889e-05, 3.0166000000001608e-05, 3.0375000000002622e-05, 3.0083000000000193e-05, 3.06249999999994e-05, 3.0804999999998334e-05, 3.0278000000001637e-05, 3.061099999999983e-05, 3.073599999999996e-05, 3.070799999999735e-05, 3.083400000000042e-05, 3.072200000000039e-05, 3.074999999999953e-05, 3.05700000000006e-05, 3.0221999999999888e-05]</msg>
<status status="PASS" starttime="20201029 18:27:20.889" endtime="20201029 18:27:20.891"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:20.884" endtime="20201029 18:27:20.892"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:27:20.895" endtime="20201029 18:27:20.915"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:20.894" endtime="20201029 18:27:20.915"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:20.893" endtime="20201029 18:27:20.916"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:20.538" endtime="20201029 18:27:20.916"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:20.537" endtime="20201029 18:27:20.916"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:20.924" endtime="20201029 18:27:20.942"></status>
</kw>
<msg timestamp="20201029 18:27:20.943" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:20.923" endtime="20201029 18:27:20.943"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:20.945" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:20.944" endtime="20201029 18:27:20.946"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:20.946" endtime="20201029 18:27:20.948"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:20.920" endtime="20201029 18:27:20.948"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:20.918" endtime="20201029 18:27:20.949"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:20.955" endtime="20201029 18:27:21.242"></status>
</kw>
<msg timestamp="20201029 18:27:21.245" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021445319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021477431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:20.954" endtime="20201029 18:27:21.245"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:21.253" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021445319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021477431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:21.246" endtime="20201029 18:27:21.253"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:21.254" endtime="20201029 18:27:21.255"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:20.951" endtime="20201029 18:27:21.256"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:20.949" endtime="20201029 18:27:21.256"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:27:21.260" level="INFO">${RESULT} = [{'diff': 3.2112000000000807e-05}, {'diff': 3.188900000000022e-05}, {'diff': 3.111100000000033e-05}, {'diff': 3.186100000000108e-05}, {'diff': 3.151399999999985e-05}, {'diff': 3.158400000000117e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:27:21.257" endtime="20201029 18:27:21.260"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:27:21.264" level="INFO">${ACCURACY} = {'diff': [3.2112000000000807e-05, 3.188900000000022e-05, 3.111100000000033e-05, 3.186100000000108e-05, 3.151399999999985e-05, 3.158400000000117e-05, 3.133400000000092e-05, 3.173600000000096e-05, 3.183...</msg>
<status status="PASS" starttime="20201029 18:27:21.261" endtime="20201029 18:27:21.265"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:27:21.269" level="INFO">NAME: accuracy-TIMER_SLEEP-19-philip</msg>
<status status="PASS" starttime="20201029 18:27:21.268" endtime="20201029 18:27:21.269"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:27:21.271" level="INFO">VALUE: [3.2112000000000807e-05, 3.188900000000022e-05, 3.111100000000033e-05, 3.186100000000108e-05, 3.151399999999985e-05, 3.158400000000117e-05, 3.133400000000092e-05, 3.173600000000096e-05, 3.183400000000142e-05, 3.1098000000000237e-05, 3.169500000000172e-05, 3.155599999999856e-05, 3.120900000000079e-05, 3.191599999999989e-05, 3.1526999999999944e-05, 3.198599999999774e-05, 3.166599999999964e-05, 3.152799999999942e-05, 3.138899999999972e-05, 3.187499999999718e-05, 3.1332999999997974e-05, 3.151399999999985e-05, 3.151399999999985e-05, 3.192999999999946e-05, 3.109700000000076e-05, 3.148600000000071e-05, 3.115300000000251e-05, 3.122199999999742e-05, 3.140300000000276e-05, 3.163899999999997e-05, 3.131999999999788e-05, 3.11249999999999e-05, 3.151399999999985e-05, 3.14579999999981e-05, 3.170900000000129e-05, 3.1860999999997613e-05, 3.113899999999947e-05, 3.152799999999942e-05, 3.204200000000296e-05, 3.191699999999936e-05, 3.111100000000033e-05, 3.116699999999861e-05, 3.169500000000172e-05, 3.1362000000000056e-05, 3.2041000000000014e-05, 3.190200000000032e-05, 3.194399999999903e-05, 3.166600000000311e-05, 3.108300000000119e-05, 3.181900000000237e-05]</msg>
<status status="PASS" starttime="20201029 18:27:21.270" endtime="20201029 18:27:21.273"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:21.265" endtime="20201029 18:27:21.273"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:27:21.277" endtime="20201029 18:27:21.296"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:21.275" endtime="20201029 18:27:21.297"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:21.274" endtime="20201029 18:27:21.297"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:20.917" endtime="20201029 18:27:21.297"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:20.916" endtime="20201029 18:27:21.298"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:21.307" endtime="20201029 18:27:21.324"></status>
</kw>
<msg timestamp="20201029 18:27:21.324" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:21.305" endtime="20201029 18:27:21.324"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:21.327" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:21.325" endtime="20201029 18:27:21.328"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:21.329" endtime="20201029 18:27:21.331"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:21.302" endtime="20201029 18:27:21.332"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:21.300" endtime="20201029 18:27:21.333"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:21.344" endtime="20201029 18:27:21.632"></status>
</kw>
<msg timestamp="20201029 18:27:21.635" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020610444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020642806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:21.341" endtime="20201029 18:27:21.636"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:21.645" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020610444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020642806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:21.636" endtime="20201029 18:27:21.646"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:21.647" endtime="20201029 18:27:21.648"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:21.336" endtime="20201029 18:27:21.649"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:21.334" endtime="20201029 18:27:21.649"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:27:21.653" level="INFO">${RESULT} = [{'diff': 3.2362000000001057e-05}, {'diff': 3.216699999999961e-05}, {'diff': 3.275000000000153e-05}, {'diff': 3.21250000000009e-05}, {'diff': 3.217999999999971e-05}, {'diff': 3.2318999999999404e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:27:21.650" endtime="20201029 18:27:21.654"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:27:21.658" level="INFO">${ACCURACY} = {'diff': [3.2362000000001057e-05, 3.216699999999961e-05, 3.275000000000153e-05, 3.21250000000009e-05, 3.217999999999971e-05, 3.2318999999999404e-05, 3.2276999999997225e-05, 3.222199999999842e-05, 3.25...</msg>
<status status="PASS" starttime="20201029 18:27:21.654" endtime="20201029 18:27:21.658"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:27:21.663" level="INFO">NAME: accuracy-TIMER_SLEEP-20-philip</msg>
<status status="PASS" starttime="20201029 18:27:21.662" endtime="20201029 18:27:21.663"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:27:21.665" level="INFO">VALUE: [3.2362000000001057e-05, 3.216699999999961e-05, 3.275000000000153e-05, 3.21250000000009e-05, 3.217999999999971e-05, 3.2318999999999404e-05, 3.2276999999997225e-05, 3.222199999999842e-05, 3.259700000000226e-05, 3.281999999999938e-05, 3.273600000000196e-05, 3.274999999999806e-05, 3.22640000000006e-05, 3.27640000000011e-05, 3.276399999999763e-05, 3.229199999999974e-05, 3.273599999999849e-05, 3.219500000000222e-05, 3.227800000000017e-05, 3.293099999999993e-05, 3.27640000000011e-05, 3.280599999999981e-05, 3.237500000000115e-05, 3.276399999999763e-05, 3.270899999999882e-05, 3.22640000000006e-05, 3.208400000000167e-05, 3.218100000000265e-05, 3.2112000000000807e-05, 3.294400000000003e-05, 3.255599999999956e-05, 3.2612000000001307e-05, 3.286199999999809e-05, 3.2304999999999834e-05, 3.297199999999917e-05, 3.294400000000003e-05, 3.3041000000001014e-05, 3.224999999999756e-05, 3.2568999999999654e-05, 3.238899999999725e-05, 3.229199999999974e-05, 3.245800000000257e-05, 3.222200000000189e-05, 3.269399999999978e-05, 3.225000000000103e-05, 3.220799999999885e-05, 3.288899999999775e-05, 3.243099999999943e-05, 3.255599999999956e-05, 3.305600000000006e-05]</msg>
<status status="PASS" starttime="20201029 18:27:21.664" endtime="20201029 18:27:21.666"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:21.659" endtime="20201029 18:27:21.666"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:27:21.670" endtime="20201029 18:27:21.689"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:21.669" endtime="20201029 18:27:21.690"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:21.667" endtime="20201029 18:27:21.690"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:21.298" endtime="20201029 18:27:21.691"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:21.298" endtime="20201029 18:27:21.691"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:21.699" endtime="20201029 18:27:21.716"></status>
</kw>
<msg timestamp="20201029 18:27:21.716" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:21.698" endtime="20201029 18:27:21.717"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:21.719" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:21.717" endtime="20201029 18:27:21.719"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:21.720" endtime="20201029 18:27:21.721"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:21.695" endtime="20201029 18:27:21.722"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:21.693" endtime="20201029 18:27:21.722"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:21.729" endtime="20201029 18:27:22.017"></status>
</kw>
<msg timestamp="20201029 18:27:22.020" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019684667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019717889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:21.727" endtime="20201029 18:27:22.020"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:22.028" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019684667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019717889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:22.021" endtime="20201029 18:27:22.029"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:22.029" endtime="20201029 18:27:22.031"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:21.725" endtime="20201029 18:27:22.032"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:21.723" endtime="20201029 18:27:22.032"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:27:22.036" level="INFO">${RESULT} = [{'diff': 3.322199999999942e-05}, {'diff': 3.3596999999999794e-05}, {'diff': 3.377800000000167e-05}, {'diff': 3.399999999999931e-05}, {'diff': 3.359800000000274e-05}, {'diff': 3.318100000000018e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:27:22.033" endtime="20201029 18:27:22.036"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:27:22.040" level="INFO">${ACCURACY} = {'diff': [3.322199999999942e-05, 3.3596999999999794e-05, 3.377800000000167e-05, 3.399999999999931e-05, 3.359800000000274e-05, 3.318100000000018e-05, 3.398599999999974e-05, 3.372199999999992e-05, 3.402...</msg>
<status status="PASS" starttime="20201029 18:27:22.037" endtime="20201029 18:27:22.040"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:27:22.044" level="INFO">NAME: accuracy-TIMER_SLEEP-21-philip</msg>
<status status="PASS" starttime="20201029 18:27:22.043" endtime="20201029 18:27:22.045"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:27:22.047" level="INFO">VALUE: [3.322199999999942e-05, 3.3596999999999794e-05, 3.377800000000167e-05, 3.399999999999931e-05, 3.359800000000274e-05, 3.318100000000018e-05, 3.398599999999974e-05, 3.372199999999992e-05, 3.402800000000192e-05, 3.3305000000000834e-05, 3.3096999999999294e-05, 3.3388999999998253e-05, 3.3124999999998433e-05, 3.340200000000182e-05, 3.319400000000028e-05, 3.39580000000006e-05, 3.313900000000147e-05, 3.3874999999999184e-05, 3.3082999999999724e-05, 3.377800000000167e-05, 3.3610999999999364e-05, 3.401399999999888e-05, 3.361100000000283e-05, 3.341700000000086e-05, 3.3847000000000044e-05, 3.390300000000179e-05, 3.322199999999942e-05, 3.383399999999995e-05, 3.398700000000268e-05, 3.3638999999998503e-05, 3.363900000000197e-05, 3.402799999999845e-05, 3.399999999999931e-05, 3.319499999999975e-05, 3.3638999999998503e-05, 3.322299999999889e-05, 3.3527000000001944e-05, 3.400000000000278e-05, 3.368099999999721e-05, 3.393000000000146e-05, 3.341600000000139e-05, 3.386100000000308e-05, 3.3776999999998725e-05, 3.337500000000215e-05, 3.4041000000002014e-05, 3.363900000000197e-05, 3.320799999999985e-05, 3.340299999999782e-05, 3.402800000000192e-05, 3.372199999999992e-05]</msg>
<status status="PASS" starttime="20201029 18:27:22.045" endtime="20201029 18:27:22.048"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:22.041" endtime="20201029 18:27:22.048"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:27:22.052" endtime="20201029 18:27:22.071"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:22.050" endtime="20201029 18:27:22.072"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:22.049" endtime="20201029 18:27:22.072"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:21.692" endtime="20201029 18:27:22.072"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:21.691" endtime="20201029 18:27:22.072"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:22.081" endtime="20201029 18:27:22.097"></status>
</kw>
<msg timestamp="20201029 18:27:22.098" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:22.079" endtime="20201029 18:27:22.098"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:22.100" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:22.099" endtime="20201029 18:27:22.101"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:22.101" endtime="20201029 18:27:22.103"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:22.077" endtime="20201029 18:27:22.103"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:22.075" endtime="20201029 18:27:22.104"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:22.110" endtime="20201029 18:27:22.394"></status>
</kw>
<msg timestamp="20201029 18:27:22.398" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020311875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020346389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:22.109" endtime="20201029 18:27:22.398"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:22.406" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020311875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020346389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:22.399" endtime="20201029 18:27:22.406"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:22.407" endtime="20201029 18:27:22.408"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:22.106" endtime="20201029 18:27:22.409"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:22.104" endtime="20201029 18:27:22.409"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:27:22.413" level="INFO">${RESULT} = [{'diff': 3.451399999999938e-05}, {'diff': 3.424999999999956e-05}, {'diff': 3.4652999999999073e-05}, {'diff': 3.482000000000138e-05}, {'diff': 3.491700000000236e-05}, {'diff': 3.470900000000082e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:27:22.410" endtime="20201029 18:27:22.413"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:27:22.417" level="INFO">${ACCURACY} = {'diff': [3.451399999999938e-05, 3.424999999999956e-05, 3.4652999999999073e-05, 3.482000000000138e-05, 3.491700000000236e-05, 3.470900000000082e-05, 3.491699999999889e-05, 3.409799999999977e-05, 3.476...</msg>
<status status="PASS" starttime="20201029 18:27:22.414" endtime="20201029 18:27:22.418"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:27:22.422" level="INFO">NAME: accuracy-TIMER_SLEEP-22-philip</msg>
<status status="PASS" starttime="20201029 18:27:22.421" endtime="20201029 18:27:22.422"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:27:22.425" level="INFO">VALUE: [3.451399999999938e-05, 3.424999999999956e-05, 3.4652999999999073e-05, 3.482000000000138e-05, 3.491700000000236e-05, 3.470900000000082e-05, 3.491699999999889e-05, 3.409799999999977e-05, 3.476399999999963e-05, 3.4888999999999754e-05, 3.432000000000088e-05, 3.423699999999946e-05, 3.4138999999999003e-05, 3.44580000000011e-05, 3.475000000000006e-05, 3.4846999999997574e-05, 3.476399999999963e-05, 3.4860999999997144e-05, 3.454199999999852e-05, 3.4818999999998435e-05, 3.466599999999917e-05, 3.4611000000000364e-05, 3.466700000000211e-05, 3.4388999999999253e-05, 3.420799999999738e-05, 3.505599999999859e-05, 3.500000000000031e-05, 3.483400000000095e-05, 3.4361000000000114e-05, 3.427800000000217e-05, 3.444400000000153e-05, 3.497200000000117e-05, 3.5068999999998685e-05, 3.445900000000057e-05, 3.420900000000032e-05, 3.482000000000138e-05, 3.40840000000002e-05, 3.466599999999917e-05, 3.4110999999999864e-05, 3.468099999999821e-05, 3.493000000000246e-05, 3.4554999999998615e-05, 3.469399999999831e-05, 3.4402999999998823e-05, 3.4638999999999504e-05, 3.4333000000000974e-05, 3.425000000000303e-05, 3.4624999999999934e-05, 3.4819000000001904e-05, 3.4318999999997934e-05]</msg>
<status status="PASS" starttime="20201029 18:27:22.423" endtime="20201029 18:27:22.427"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:22.418" endtime="20201029 18:27:22.428"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:27:22.433" endtime="20201029 18:27:22.453"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:22.431" endtime="20201029 18:27:22.454"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:22.429" endtime="20201029 18:27:22.454"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:22.073" endtime="20201029 18:27:22.454"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:22.073" endtime="20201029 18:27:22.454"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:22.463" endtime="20201029 18:27:22.478"></status>
</kw>
<msg timestamp="20201029 18:27:22.479" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:22.461" endtime="20201029 18:27:22.479"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:22.481" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:22.480" endtime="20201029 18:27:22.482"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:22.482" endtime="20201029 18:27:22.484"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:22.459" endtime="20201029 18:27:22.484"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:22.457" endtime="20201029 18:27:22.485"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:22.491" endtime="20201029 18:27:22.777"></status>
</kw>
<msg timestamp="20201029 18:27:22.780" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019846847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019882875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:22.490" endtime="20201029 18:27:22.780"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:22.788" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019846847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019882875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:22.781" endtime="20201029 18:27:22.788"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:22.789" endtime="20201029 18:27:22.791"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:22.487" endtime="20201029 18:27:22.791"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:22.485" endtime="20201029 18:27:22.792"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:27:22.796" level="INFO">${RESULT} = [{'diff': 3.602800000000045e-05}, {'diff': 3.593099999999946e-05}, {'diff': 3.5846999999998574e-05}, {'diff': 3.579199999999977e-05}, {'diff': 3.5889000000000754e-05}, {'diff': 3.526399999999666e-05},...</msg>
<status status="PASS" starttime="20201029 18:27:22.793" endtime="20201029 18:27:22.796"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:27:22.801" level="INFO">${ACCURACY} = {'diff': [3.602800000000045e-05, 3.593099999999946e-05, 3.5846999999998574e-05, 3.579199999999977e-05, 3.5889000000000754e-05, 3.526399999999666e-05, 3.530599999999884e-05, 3.595799999999913e-05, 3.52...</msg>
<status status="PASS" starttime="20201029 18:27:22.797" endtime="20201029 18:27:22.801"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:27:22.805" level="INFO">NAME: accuracy-TIMER_SLEEP-23-philip</msg>
<status status="PASS" starttime="20201029 18:27:22.804" endtime="20201029 18:27:22.806"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:27:22.808" level="INFO">VALUE: [3.602800000000045e-05, 3.593099999999946e-05, 3.5846999999998574e-05, 3.579199999999977e-05, 3.5889000000000754e-05, 3.526399999999666e-05, 3.530599999999884e-05, 3.595799999999913e-05, 3.520899999999785e-05, 3.504200000000249e-05, 3.5653000000000074e-05, 3.555600000000256e-05, 3.5832999999999005e-05, 3.573700000000096e-05, 3.5639000000000504e-05, 3.5263000000000655e-05, 3.5263000000000655e-05, 3.550000000000081e-05, 3.5346999999998074e-05, 3.5346999999998074e-05, 3.56520000000006e-05, 3.5903000000000324e-05, 3.572199999999845e-05, 3.5111000000000864e-05, 3.570799999999888e-05, 3.5818999999999435e-05, 3.520799999999838e-05, 3.5347000000001544e-05, 3.5346999999998074e-05, 3.5624999999997464e-05, 3.557000000000213e-05, 3.595900000000207e-05, 3.5124999999996964e-05, 3.598600000000174e-05, 3.595900000000207e-05, 3.569499999999878e-05, 3.519499999999828e-05, 3.573600000000149e-05, 3.519499999999828e-05, 3.575000000000106e-05, 3.522300000000089e-05, 3.520799999999838e-05, 3.5847000000002044e-05, 3.5889000000000754e-05, 3.5318999999998935e-05, 3.517999999999924e-05, 3.544399999999906e-05, 3.5096999999997824e-05, 3.570799999999888e-05, 3.5152999999999573e-05]</msg>
<status status="PASS" starttime="20201029 18:27:22.806" endtime="20201029 18:27:22.808"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:22.802" endtime="20201029 18:27:22.809"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:27:22.813" endtime="20201029 18:27:22.832"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:22.811" endtime="20201029 18:27:22.833"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:22.810" endtime="20201029 18:27:22.833"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:22.455" endtime="20201029 18:27:22.833"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:22.455" endtime="20201029 18:27:22.833"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:22.842" endtime="20201029 18:27:22.859"></status>
</kw>
<msg timestamp="20201029 18:27:22.859" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:22.840" endtime="20201029 18:27:22.859"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:22.862" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:22.860" endtime="20201029 18:27:22.862"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:22.863" endtime="20201029 18:27:22.864"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:22.838" endtime="20201029 18:27:22.865"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:22.836" endtime="20201029 18:27:22.865"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:22.872" endtime="20201029 18:27:23.157"></status>
</kw>
<msg timestamp="20201029 18:27:23.160" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020192736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020229694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:22.870" endtime="20201029 18:27:23.161"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:23.168" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020192736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020229694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:23.162" endtime="20201029 18:27:23.169"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:23.170" endtime="20201029 18:27:23.171"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:22.867" endtime="20201029 18:27:23.172"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:22.866" endtime="20201029 18:27:23.172"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:27:23.176" level="INFO">${RESULT} = [{'diff': 3.695800000000013e-05}, {'diff': 3.694400000000056e-05}, {'diff': 3.6625000000001934e-05}, {'diff': 3.622199999999895e-05}, {'diff': 3.677799999999773e-05}, {'diff': 3.6903000000001324e-05},...</msg>
<status status="PASS" starttime="20201029 18:27:23.173" endtime="20201029 18:27:23.176"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:27:23.180" level="INFO">${ACCURACY} = {'diff': [3.695800000000013e-05, 3.694400000000056e-05, 3.6625000000001934e-05, 3.622199999999895e-05, 3.677799999999773e-05, 3.6903000000001324e-05, 3.6346999999999074e-05, 3.6403000000000824e-05, 3....</msg>
<status status="PASS" starttime="20201029 18:27:23.177" endtime="20201029 18:27:23.180"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:27:23.185" level="INFO">NAME: accuracy-TIMER_SLEEP-24-philip</msg>
<status status="PASS" starttime="20201029 18:27:23.184" endtime="20201029 18:27:23.185"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:27:23.187" level="INFO">VALUE: [3.695800000000013e-05, 3.694400000000056e-05, 3.6625000000001934e-05, 3.622199999999895e-05, 3.677799999999773e-05, 3.6903000000001324e-05, 3.6346999999999074e-05, 3.6403000000000824e-05, 3.672199999999945e-05, 3.697300000000264e-05, 3.673599999999902e-05, 3.6332999999999505e-05, 3.622300000000189e-05, 3.6180999999999713e-05, 3.6639000000001504e-05, 3.622200000000242e-05, 3.6096999999998824e-05, 3.673599999999902e-05, 3.656999999999966e-05, 3.6681000000000213e-05, 3.694500000000003e-05, 3.623600000000199e-05, 3.6874999999998714e-05, 3.6653000000001074e-05, 3.6403000000000824e-05, 3.631999999999941e-05, 3.6777000000001725e-05, 3.649999999999834e-05, 3.6874999999998714e-05, 3.6375000000001684e-05, 3.6360999999998644e-05, 3.693000000000099e-05, 3.670799999999988e-05, 3.6790999999997825e-05, 3.6804999999997395e-05, 3.623600000000199e-05, 3.6833000000000005e-05, 3.6374999999998214e-05, 3.6611000000002364e-05, 3.6625000000001934e-05, 3.624999999999809e-05, 3.676400000000163e-05, 3.705600000000059e-05, 3.6597000000002794e-05, 3.708399999999973e-05, 3.623599999999852e-05, 3.6846999999999575e-05, 3.619499999999928e-05, 3.6667000000000644e-05, 3.6903000000001324e-05]</msg>
<status status="PASS" starttime="20201029 18:27:23.186" endtime="20201029 18:27:23.192"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:23.181" endtime="20201029 18:27:23.193"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:27:23.196" endtime="20201029 18:27:23.216"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:23.195" endtime="20201029 18:27:23.216"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:23.194" endtime="20201029 18:27:23.217"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:22.834" endtime="20201029 18:27:23.217"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:22.834" endtime="20201029 18:27:23.217"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:23.226" endtime="20201029 18:27:23.243"></status>
</kw>
<msg timestamp="20201029 18:27:23.244" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:23.224" endtime="20201029 18:27:23.244"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:23.246" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:23.245" endtime="20201029 18:27:23.246"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:23.247" endtime="20201029 18:27:23.249"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:23.222" endtime="20201029 18:27:23.249"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:23.219" endtime="20201029 18:27:23.250"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:23.256" endtime="20201029 18:27:23.541"></status>
</kw>
<msg timestamp="20201029 18:27:23.544" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020909306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020947097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:23.255" endtime="20201029 18:27:23.544"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:23.552" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020909306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020947097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:23.545" endtime="20201029 18:27:23.552"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:23.553" endtime="20201029 18:27:23.555"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:23.252" endtime="20201029 18:27:23.555"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:23.250" endtime="20201029 18:27:23.556"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:27:23.559" level="INFO">${RESULT} = [{'diff': 3.7791000000002295e-05}, {'diff': 3.7610999999999895e-05}, {'diff': 3.7124999999998964e-05}, {'diff': 3.7582999999997285e-05}, {'diff': 3.752799999999848e-05}, {'diff': 3.7430999999997494e-0...</msg>
<status status="PASS" starttime="20201029 18:27:23.556" endtime="20201029 18:27:23.560"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:27:23.564" level="INFO">${ACCURACY} = {'diff': [3.7791000000002295e-05, 3.7610999999999895e-05, 3.7124999999998964e-05, 3.7582999999997285e-05, 3.752799999999848e-05, 3.7430999999997494e-05, 3.7875000000003184e-05, 3.749999999999934e-05, ...</msg>
<status status="PASS" starttime="20201029 18:27:23.560" endtime="20201029 18:27:23.564"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:27:23.568" level="INFO">NAME: accuracy-TIMER_SLEEP-25-philip</msg>
<status status="PASS" starttime="20201029 18:27:23.567" endtime="20201029 18:27:23.568"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:27:23.570" level="INFO">VALUE: [3.7791000000002295e-05, 3.7610999999999895e-05, 3.7124999999998964e-05, 3.7582999999997285e-05, 3.752799999999848e-05, 3.7430999999997494e-05, 3.7875000000003184e-05, 3.749999999999934e-05, 3.77919999999983e-05, 3.723599999999952e-05, 3.751400000000238e-05, 3.7610999999999895e-05, 3.7597000000000325e-05, 3.7347000000000075e-05, 3.758400000000023e-05, 3.71520000000021e-05, 3.729200000000127e-05, 3.7417000000001394e-05, 3.726399999999866e-05, 3.7431000000000964e-05, 3.7874999999999714e-05, 3.723599999999952e-05, 3.801399999999941e-05, 3.7512999999999436e-05, 3.7902999999998854e-05, 3.7138999999998534e-05, 3.7319000000000935e-05, 3.774999999999959e-05, 3.74720000000002e-05, 3.8054999999998645e-05, 3.745800000000063e-05, 3.7110999999999394e-05, 3.802799999999898e-05, 3.7096999999999825e-05, 3.7568999999997715e-05, 3.7833000000001005e-05, 3.806999999999769e-05, 3.7874999999999714e-05, 3.7638999999999034e-05, 3.749999999999934e-05, 3.7153000000001574e-05, 3.7360999999999644e-05, 3.750000000000281e-05, 3.799999999999984e-05, 3.720899999999985e-05, 3.7417000000001394e-05, 3.7360999999999644e-05, 3.8040999999999076e-05, 3.8054999999998645e-05, 3.722199999999995e-05]</msg>
<status status="PASS" starttime="20201029 18:27:23.569" endtime="20201029 18:27:23.572"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:23.564" endtime="20201029 18:27:23.573"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:27:23.576" endtime="20201029 18:27:23.596"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:23.575" endtime="20201029 18:27:23.596"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:23.574" endtime="20201029 18:27:23.596"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:23.218" endtime="20201029 18:27:23.597"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:23.217" endtime="20201029 18:27:23.597"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:23.605" endtime="20201029 18:27:23.621"></status>
</kw>
<msg timestamp="20201029 18:27:23.621" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:23.604" endtime="20201029 18:27:23.622"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:23.624" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:23.622" endtime="20201029 18:27:23.624"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:23.625" endtime="20201029 18:27:23.626"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:23.601" endtime="20201029 18:27:23.627"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:23.599" endtime="20201029 18:27:23.627"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:23.634" endtime="20201029 18:27:23.920"></status>
</kw>
<msg timestamp="20201029 18:27:23.923" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019474278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019513042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:23.632" endtime="20201029 18:27:23.924"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:23.932" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019474278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019513042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:23.925" endtime="20201029 18:27:23.932"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:23.933" endtime="20201029 18:27:23.934"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:23.630" endtime="20201029 18:27:23.935"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:23.628" endtime="20201029 18:27:23.935"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:27:23.939" level="INFO">${RESULT} = [{'diff': 3.876400000000016e-05}, {'diff': 3.8861000000001145e-05}, {'diff': 3.8861000000001145e-05}, {'diff': 3.8875000000000715e-05}, {'diff': 3.9041000000000076e-05}, {'diff': 3.8276999999999756e-0...</msg>
<status status="PASS" starttime="20201029 18:27:23.936" endtime="20201029 18:27:23.939"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:27:23.944" level="INFO">${ACCURACY} = {'diff': [3.876400000000016e-05, 3.8861000000001145e-05, 3.8861000000001145e-05, 3.8875000000000715e-05, 3.9041000000000076e-05, 3.8276999999999756e-05, 3.817999999999877e-05, 3.817999999999877e-05, 3...</msg>
<status status="PASS" starttime="20201029 18:27:23.940" endtime="20201029 18:27:23.944"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:27:23.949" level="INFO">NAME: accuracy-TIMER_SLEEP-26-philip</msg>
<status status="PASS" starttime="20201029 18:27:23.948" endtime="20201029 18:27:23.949"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:27:23.951" level="INFO">VALUE: [3.876400000000016e-05, 3.8861000000001145e-05, 3.8861000000001145e-05, 3.8875000000000715e-05, 3.9041000000000076e-05, 3.8276999999999756e-05, 3.817999999999877e-05, 3.817999999999877e-05, 3.815199999999963e-05, 3.8375000000000214e-05, 3.822199999999748e-05, 3.830599999999837e-05, 3.911200000000087e-05, 3.848600000000077e-05, 3.8361000000000645e-05, 3.87919999999993e-05, 3.850000000000034e-05, 3.89859999999978e-05, 3.8111000000000395e-05, 3.8347000000001075e-05, 3.820800000000138e-05, 3.8431000000001964e-05, 3.880599999999887e-05, 3.8262999999996716e-05, 3.8695000000001784e-05, 3.897199999999823e-05, 3.808400000000073e-05, 3.898700000000074e-05, 3.8652999999999604e-05, 3.841599999999945e-05, 3.838799999999684e-05, 3.8026999999999506e-05, 3.870800000000188e-05, 3.8568999999998715e-05, 3.8388999999999784e-05, 3.8790999999999826e-05, 3.8625000000000465e-05, 3.8416999999998924e-05, 3.892999999999952e-05, 3.8402999999999354e-05, 3.87919999999993e-05, 3.8875000000000715e-05, 3.8832999999998535e-05, 3.8694999999998314e-05, 3.823600000000052e-05, 3.8875000000000715e-05, 3.892999999999952e-05, 3.868000000000274e-05, 3.8625000000000465e-05, 3.897300000000117e-05]</msg>
<status status="PASS" starttime="20201029 18:27:23.950" endtime="20201029 18:27:23.952"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:23.945" endtime="20201029 18:27:23.953"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:27:23.956" endtime="20201029 18:27:23.975"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:23.955" endtime="20201029 18:27:23.976"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:23.953" endtime="20201029 18:27:23.976"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:23.598" endtime="20201029 18:27:23.977"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:23.597" endtime="20201029 18:27:23.977"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:23.985" endtime="20201029 18:27:24.002"></status>
</kw>
<msg timestamp="20201029 18:27:24.002" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:23.984" endtime="20201029 18:27:24.003"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:24.005" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:24.003" endtime="20201029 18:27:24.005"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:24.006" endtime="20201029 18:27:24.007"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:23.981" endtime="20201029 18:27:24.008"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:23.979" endtime="20201029 18:27:24.008"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:24.015" endtime="20201029 18:27:24.301"></status>
</kw>
<msg timestamp="20201029 18:27:24.304" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020171778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020211014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:24.013" endtime="20201029 18:27:24.304"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:24.312" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020171778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020211014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:24.305" endtime="20201029 18:27:24.312"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:24.313" endtime="20201029 18:27:24.315"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:24.011" endtime="20201029 18:27:24.315"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:24.009" endtime="20201029 18:27:24.316"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:27:24.320" level="INFO">${RESULT} = [{'diff': 3.923599999999805e-05}, {'diff': 3.981999999999944e-05}, {'diff': 3.9930999999999994e-05}, {'diff': 3.980599999999987e-05}, {'diff': 3.9917000000000424e-05}, {'diff': 3.926399999999719e-05},...</msg>
<status status="PASS" starttime="20201029 18:27:24.316" endtime="20201029 18:27:24.320"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:27:24.324" level="INFO">${ACCURACY} = {'diff': [3.923599999999805e-05, 3.981999999999944e-05, 3.9930999999999994e-05, 3.980599999999987e-05, 3.9917000000000424e-05, 3.926399999999719e-05, 3.9153000000000104e-05, 3.9624999999997995e-05, 3....</msg>
<status status="PASS" starttime="20201029 18:27:24.320" endtime="20201029 18:27:24.324"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:27:24.328" level="INFO">NAME: accuracy-TIMER_SLEEP-27-philip</msg>
<status status="PASS" starttime="20201029 18:27:24.327" endtime="20201029 18:27:24.328"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:27:24.330" level="INFO">VALUE: [3.923599999999805e-05, 3.981999999999944e-05, 3.9930999999999994e-05, 3.980599999999987e-05, 3.9917000000000424e-05, 3.926399999999719e-05, 3.9153000000000104e-05, 3.9624999999997995e-05, 3.9930999999999994e-05, 3.972199999999898e-05, 3.915200000000063e-05, 3.9652999999997135e-05, 3.993000000000052e-05, 3.969399999999984e-05, 3.9639000000001035e-05, 3.968000000000027e-05, 3.96660000000007e-05, 3.9166999999999674e-05, 3.9680999999999744e-05, 3.9944999999999564e-05, 3.998600000000227e-05, 3.9832999999999535e-05, 3.9875000000001715e-05, 3.9917000000000424e-05, 3.9763000000001686e-05, 3.9209000000001853e-05, 3.973600000000202e-05, 3.9403000000000354e-05, 3.9903000000000854e-05, 3.9125000000000965e-05, 3.943000000000002e-05, 3.991600000000095e-05, 3.9389000000000784e-05, 3.9875000000001715e-05, 4.002799999999751e-05, 3.968000000000027e-05, 3.9568999999999716e-05, 3.9860999999998675e-05, 3.9346999999998605e-05, 3.9416999999999924e-05, 3.9332999999999035e-05, 4.004200000000055e-05, 3.997199999999923e-05, 3.9125000000000965e-05, 3.9333000000002505e-05, 3.972199999999898e-05, 3.980599999999987e-05, 3.9639000000001035e-05, 3.977799999999726e-05, 3.9917000000000424e-05]</msg>
<status status="PASS" starttime="20201029 18:27:24.329" endtime="20201029 18:27:24.331"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:24.325" endtime="20201029 18:27:24.332"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:27:24.335" endtime="20201029 18:27:24.355"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:24.334" endtime="20201029 18:27:24.356"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:24.333" endtime="20201029 18:27:24.356"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:23.978" endtime="20201029 18:27:24.356"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:23.977" endtime="20201029 18:27:24.356"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:24.366" endtime="20201029 18:27:24.383"></status>
</kw>
<msg timestamp="20201029 18:27:24.384" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:24.364" endtime="20201029 18:27:24.384"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:24.386" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:24.385" endtime="20201029 18:27:24.386"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:24.387" endtime="20201029 18:27:24.389"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:24.361" endtime="20201029 18:27:24.389"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:24.359" endtime="20201029 18:27:24.390"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:24.396" endtime="20201029 18:27:24.682"></status>
</kw>
<msg timestamp="20201029 18:27:24.685" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022404153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022444972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:24.394" endtime="20201029 18:27:24.685"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:24.693" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022404153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022444972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:24.686" endtime="20201029 18:27:24.693"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:24.694" endtime="20201029 18:27:24.696"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:24.392" endtime="20201029 18:27:24.696"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:24.390" endtime="20201029 18:27:24.697"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:27:24.701" level="INFO">${RESULT} = [{'diff': 4.0819000000000966e-05}, {'diff': 4.022199999999948e-05}, {'diff': 4.0167000000000674e-05}, {'diff': 4.023599999999905e-05}, {'diff': 4.073599999999955e-05}, {'diff': 4.104200000000155e-05},...</msg>
<status status="PASS" starttime="20201029 18:27:24.697" endtime="20201029 18:27:24.701"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:27:24.705" level="INFO">${ACCURACY} = {'diff': [4.0819000000000966e-05, 4.022199999999948e-05, 4.0167000000000674e-05, 4.023599999999905e-05, 4.073599999999955e-05, 4.104200000000155e-05, 4.0167000000000674e-05, 4.0319000000000466e-05, 4....</msg>
<status status="PASS" starttime="20201029 18:27:24.702" endtime="20201029 18:27:24.705"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:27:24.709" level="INFO">NAME: accuracy-TIMER_SLEEP-28-philip</msg>
<status status="PASS" starttime="20201029 18:27:24.708" endtime="20201029 18:27:24.709"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:27:24.712" level="INFO">VALUE: [4.0819000000000966e-05, 4.022199999999948e-05, 4.0167000000000674e-05, 4.023599999999905e-05, 4.073599999999955e-05, 4.104200000000155e-05, 4.0167000000000674e-05, 4.0319000000000466e-05, 4.073599999999955e-05, 4.031999999999994e-05, 4.0402999999997885e-05, 4.100000000000284e-05, 4.058399999999976e-05, 4.036199999999865e-05, 4.030600000000037e-05, 4.0930999999997525e-05, 4.0695000000000314e-05, 4.0986999999999274e-05, 4.040200000000188e-05, 4.1040999999998606e-05, 4.0569000000000716e-05, 4.0777000000002256e-05, 4.09859999999998e-05, 4.0347000000003075e-05, 4.0930999999997525e-05, 4.0916999999997955e-05, 4.0722999999999454e-05, 4.0819000000000966e-05, 4.045800000000016e-05, 4.0139000000001535e-05, 4.0666999999997705e-05, 4.0152999999997635e-05, 4.0874999999999245e-05, 4.0110999999998925e-05, 4.077800000000173e-05, 4.0403000000001354e-05, 4.0695000000000314e-05, 4.0916999999997955e-05, 4.0194999999999814e-05, 4.034799999999908e-05, 4.051400000000191e-05, 4.0737000000002493e-05, 4.1040999999998606e-05, 4.052800000000148e-05, 4.090199999999891e-05, 4.097200000000023e-05, 4.0611000000002895e-05, 4.026400000000166e-05, 4.0333000000000035e-05, 4.099999999999937e-05]</msg>
<status status="PASS" starttime="20201029 18:27:24.710" endtime="20201029 18:27:24.713"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:24.706" endtime="20201029 18:27:24.714"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:27:24.717" endtime="20201029 18:27:24.737"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:24.716" endtime="20201029 18:27:24.737"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:24.715" endtime="20201029 18:27:24.738"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:24.357" endtime="20201029 18:27:24.738"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:24.357" endtime="20201029 18:27:24.738"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:24.747" endtime="20201029 18:27:24.764"></status>
</kw>
<msg timestamp="20201029 18:27:24.764" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:24.745" endtime="20201029 18:27:24.764"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:24.767" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:24.765" endtime="20201029 18:27:24.767"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:24.768" endtime="20201029 18:27:24.769"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:24.743" endtime="20201029 18:27:24.770"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:24.740" endtime="20201029 18:27:24.770"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:24.777" endtime="20201029 18:27:25.062"></status>
</kw>
<msg timestamp="20201029 18:27:25.065" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020527792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020569139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:24.775" endtime="20201029 18:27:25.065"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:25.073" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020527792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020569139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:25.066" endtime="20201029 18:27:25.073"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:25.074" endtime="20201029 18:27:25.075"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:24.773" endtime="20201029 18:27:25.076"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:24.771" endtime="20201029 18:27:25.076"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:27:25.080" level="INFO">${RESULT} = [{'diff': 4.1347000000000605e-05}, {'diff': 4.1723000000000454e-05}, {'diff': 4.158400000000076e-05}, {'diff': 4.1124999999999495e-05}, {'diff': 4.202800000000298e-05}, {'diff': 4.1681000000001744e-05...</msg>
<status status="PASS" starttime="20201029 18:27:25.077" endtime="20201029 18:27:25.081"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:27:25.085" level="INFO">${ACCURACY} = {'diff': [4.1347000000000605e-05, 4.1723000000000454e-05, 4.158400000000076e-05, 4.1124999999999495e-05, 4.202800000000298e-05, 4.1681000000001744e-05, 4.183400000000101e-05, 4.200000000000037e-05, 4....</msg>
<status status="PASS" starttime="20201029 18:27:25.081" endtime="20201029 18:27:25.086"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:27:25.090" level="INFO">NAME: accuracy-TIMER_SLEEP-29-philip</msg>
<status status="PASS" starttime="20201029 18:27:25.089" endtime="20201029 18:27:25.090"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:27:25.092" level="INFO">VALUE: [4.1347000000000605e-05, 4.1723000000000454e-05, 4.158400000000076e-05, 4.1124999999999495e-05, 4.202800000000298e-05, 4.1681000000001744e-05, 4.183400000000101e-05, 4.200000000000037e-05, 4.1403000000002355e-05, 4.191599999999948e-05, 4.119400000000134e-05, 4.1804999999998926e-05, 4.11799999999983e-05, 4.1124999999999495e-05, 4.1110999999999925e-05, 4.206999999999822e-05, 4.1804999999998926e-05, 4.200000000000037e-05, 4.1319000000001466e-05, 4.1181000000001244e-05, 4.1361000000000175e-05, 4.172199999999751e-05, 4.1195000000000814e-05, 4.201399999999994e-05, 4.18059999999984e-05, 4.19860000000008e-05, 4.1110999999999925e-05, 4.1944999999998095e-05, 4.1681000000001744e-05, 4.2012999999997e-05, 4.1652999999999135e-05, 4.119400000000134e-05, 4.141600000000245e-05, 4.200000000000037e-05, 4.201399999999994e-05, 4.123600000000005e-05, 4.1069000000001216e-05, 4.200000000000037e-05, 4.179199999999883e-05, 4.118000000000177e-05, 4.151399999999944e-05, 4.169400000000184e-05, 4.1875000000000245e-05, 4.176399999999969e-05, 4.204200000000255e-05, 4.1597000000000856e-05, 4.1681000000001744e-05, 4.200000000000037e-05, 4.1097000000000355e-05, 4.1222999999999954e-05]</msg>
<status status="PASS" starttime="20201029 18:27:25.091" endtime="20201029 18:27:25.093"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:25.086" endtime="20201029 18:27:25.094"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:27:25.097" endtime="20201029 18:27:25.117"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:25.096" endtime="20201029 18:27:25.117"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:25.094" endtime="20201029 18:27:25.117"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:24.739" endtime="20201029 18:27:25.118"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:24.738" endtime="20201029 18:27:25.118"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:25.126" endtime="20201029 18:27:25.142"></status>
</kw>
<msg timestamp="20201029 18:27:25.142" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:25.125" endtime="20201029 18:27:25.142"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:25.145" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:25.143" endtime="20201029 18:27:25.145"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:25.146" endtime="20201029 18:27:25.147"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:25.122" endtime="20201029 18:27:25.148"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:25.120" endtime="20201029 18:27:25.148"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:25.155" endtime="20201029 18:27:25.445"></status>
</kw>
<msg timestamp="20201029 18:27:25.448" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019475264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019517861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:25.153" endtime="20201029 18:27:25.448"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:25.456" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019475264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019517861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:25.449" endtime="20201029 18:27:25.456"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:25.457" endtime="20201029 18:27:25.459"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:25.151" endtime="20201029 18:27:25.459"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:25.149" endtime="20201029 18:27:25.460"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:27:25.464" level="INFO">${RESULT} = [{'diff': 4.2597000000001856e-05}, {'diff': 4.2653000000000135e-05}, {'diff': 4.2737000000001024e-05}, {'diff': 4.2625000000000995e-05}, {'diff': 4.298599999999833e-05}, {'diff': 4.2832999999999066e-0...</msg>
<status status="PASS" starttime="20201029 18:27:25.460" endtime="20201029 18:27:25.464"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:27:25.468" level="INFO">${ACCURACY} = {'diff': [4.2597000000001856e-05, 4.2653000000000135e-05, 4.2737000000001024e-05, 4.2625000000000995e-05, 4.298599999999833e-05, 4.2832999999999066e-05, 4.275000000000112e-05, 4.2290999999999856e-05, ...</msg>
<status status="PASS" starttime="20201029 18:27:25.465" endtime="20201029 18:27:25.468"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:27:25.472" level="INFO">NAME: accuracy-TIMER_SLEEP-30-philip</msg>
<status status="PASS" starttime="20201029 18:27:25.471" endtime="20201029 18:27:25.472"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:27:25.474" level="INFO">VALUE: [4.2597000000001856e-05, 4.2653000000000135e-05, 4.2737000000001024e-05, 4.2625000000000995e-05, 4.298599999999833e-05, 4.2832999999999066e-05, 4.275000000000112e-05, 4.2290999999999856e-05, 4.2832999999999066e-05, 4.274999999999765e-05, 4.2318999999998996e-05, 4.26799999999998e-05, 4.2166999999999205e-05, 4.2846999999998636e-05, 4.2568999999999246e-05, 4.2332999999998566e-05, 4.2347000000001606e-05, 4.2402999999999885e-05, 4.227800000000323e-05, 4.2625000000000995e-05, 4.273599999999808e-05, 4.258400000000176e-05, 4.2402999999999885e-05, 4.2277000000000287e-05, 4.2181000000002244e-05, 4.279199999999983e-05, 4.300000000000137e-05, 4.2791000000000357e-05, 4.220799999999844e-05, 4.252800000000001e-05, 4.2861000000001676e-05, 4.273600000000155e-05, 4.276399999999722e-05, 4.276400000000069e-05, 4.277800000000026e-05, 4.298599999999833e-05, 4.222200000000148e-05, 4.2111000000000925e-05, 4.279199999999983e-05, 4.3096999999998886e-05, 4.275000000000112e-05, 4.276400000000069e-05, 4.226400000000019e-05, 4.2653000000000135e-05, 4.304200000000008e-05, 4.286199999999768e-05, 4.301400000000094e-05, 4.286200000000115e-05, 4.2804999999999926e-05, 4.2125000000000495e-05]</msg>
<status status="PASS" starttime="20201029 18:27:25.473" endtime="20201029 18:27:25.475"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:25.468" endtime="20201029 18:27:25.476"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:27:25.479" endtime="20201029 18:27:25.499"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:25.478" endtime="20201029 18:27:25.499"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:25.477" endtime="20201029 18:27:25.500"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:25.119" endtime="20201029 18:27:25.500"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:25.118" endtime="20201029 18:27:25.500"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:25.508" endtime="20201029 18:27:25.526"></status>
</kw>
<msg timestamp="20201029 18:27:25.526" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:25.507" endtime="20201029 18:27:25.526"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:25.529" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:25.527" endtime="20201029 18:27:25.529"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:25.530" endtime="20201029 18:27:25.531"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:25.504" endtime="20201029 18:27:25.532"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:25.502" endtime="20201029 18:27:25.532"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:25.539" endtime="20201029 18:27:25.822"></status>
</kw>
<msg timestamp="20201029 18:27:25.825" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020909847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020953764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:25.537" endtime="20201029 18:27:25.826"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:25.834" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020909847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020953764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:25.827" endtime="20201029 18:27:25.834"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:25.835" endtime="20201029 18:27:25.836"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:25.535" endtime="20201029 18:27:25.837"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:25.533" endtime="20201029 18:27:25.837"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:27:25.841" level="INFO">${RESULT} = [{'diff': 4.3917000000000955e-05}, {'diff': 4.3874999999998776e-05}, {'diff': 4.3945000000000095e-05}, {'diff': 4.401400000000194e-05}, {'diff': 4.3874999999998776e-05}, {'diff': 4.3860999999999206e-0...</msg>
<status status="PASS" starttime="20201029 18:27:25.838" endtime="20201029 18:27:25.841"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:27:25.845" level="INFO">${ACCURACY} = {'diff': [4.3917000000000955e-05, 4.3874999999998776e-05, 4.3945000000000095e-05, 4.401400000000194e-05, 4.3874999999998776e-05, 4.3860999999999206e-05, 4.3458999999999165e-05, 4.3374999999998276e-05,...</msg>
<status status="PASS" starttime="20201029 18:27:25.842" endtime="20201029 18:27:25.845"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:27:25.850" level="INFO">NAME: accuracy-TIMER_SLEEP-31-philip</msg>
<status status="PASS" starttime="20201029 18:27:25.849" endtime="20201029 18:27:25.850"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:27:25.852" level="INFO">VALUE: [4.3917000000000955e-05, 4.3874999999998776e-05, 4.3945000000000095e-05, 4.401400000000194e-05, 4.3874999999998776e-05, 4.3860999999999206e-05, 4.3458999999999165e-05, 4.3374999999998276e-05, 4.3723000000002454e-05, 4.3209000000002384e-05, 4.370799999999994e-05, 4.3346999999999136e-05, 4.315200000000116e-05, 4.4083000000000316e-05, 4.3541000000001107e-05, 4.397199999999976e-05, 4.398599999999933e-05, 4.375000000000212e-05, 4.3624999999998526e-05, 4.379199999999736e-05, 4.398599999999933e-05, 4.3152999999997166e-05, 4.404200000000108e-05, 4.348599999999883e-05, 4.3153000000000635e-05, 4.357000000000319e-05, 4.3596999999999386e-05, 4.326400000000119e-05, 4.3153000000000635e-05, 4.3653000000001135e-05, 4.3153000000000635e-05, 4.3931000000000525e-05, 4.380499999999746e-05, 4.3889000000001815e-05, 4.365200000000166e-05, 4.319399999999987e-05, 4.391600000000148e-05, 4.3846999999999636e-05, 4.3889000000001815e-05, 4.374999999999865e-05, 4.3332999999999566e-05, 4.3305000000000426e-05, 4.377799999999779e-05, 4.3931000000000525e-05, 4.3861000000002676e-05, 4.3167000000000205e-05, 4.323600000000205e-05, 4.3360999999998706e-05, 4.3709000000002884e-05, 4.331999999999947e-05]</msg>
<status status="PASS" starttime="20201029 18:27:25.851" endtime="20201029 18:27:25.854"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:25.846" endtime="20201029 18:27:25.854"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:27:25.858" endtime="20201029 18:27:25.877"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:25.856" endtime="20201029 18:27:25.878"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:25.855" endtime="20201029 18:27:25.878"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:25.501" endtime="20201029 18:27:25.878"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:25.500" endtime="20201029 18:27:25.879"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:25.887" endtime="20201029 18:27:25.903"></status>
</kw>
<msg timestamp="20201029 18:27:25.903" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:25.886" endtime="20201029 18:27:25.904"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:25.906" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:25.904" endtime="20201029 18:27:25.906"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:25.907" endtime="20201029 18:27:25.908"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:25.883" endtime="20201029 18:27:25.909"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:25.881" endtime="20201029 18:27:25.909"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:25.916" endtime="20201029 18:27:26.201"></status>
</kw>
<msg timestamp="20201029 18:27:26.204" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019497375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019542236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:25.914" endtime="20201029 18:27:26.205"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:26.212" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019497375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019542236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:26.205" endtime="20201029 18:27:26.213"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:26.213" endtime="20201029 18:27:26.215"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:25.912" endtime="20201029 18:27:26.216"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:25.910" endtime="20201029 18:27:26.216"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:27:26.220" level="INFO">${RESULT} = [{'diff': 4.4861000000000206e-05}, {'diff': 4.4110999999999456e-05}, {'diff': 4.402800000000151e-05}, {'diff': 4.4110999999999456e-05}, {'diff': 4.4181000000000775e-05}, {'diff': 4.455600000000115e-05...</msg>
<status status="PASS" starttime="20201029 18:27:26.217" endtime="20201029 18:27:26.220"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:27:26.225" level="INFO">${ACCURACY} = {'diff': [4.4861000000000206e-05, 4.4110999999999456e-05, 4.402800000000151e-05, 4.4110999999999456e-05, 4.4181000000000775e-05, 4.455600000000115e-05, 4.504199999999861e-05, 4.425000000000262e-05, 4....</msg>
<status status="PASS" starttime="20201029 18:27:26.221" endtime="20201029 18:27:26.225"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:27:26.229" level="INFO">NAME: accuracy-TIMER_SLEEP-32-philip</msg>
<status status="PASS" starttime="20201029 18:27:26.228" endtime="20201029 18:27:26.230"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:27:26.232" level="INFO">VALUE: [4.4861000000000206e-05, 4.4110999999999456e-05, 4.402800000000151e-05, 4.4110999999999456e-05, 4.4181000000000775e-05, 4.455600000000115e-05, 4.504199999999861e-05, 4.425000000000262e-05, 4.4681000000001275e-05, 4.458400000000029e-05, 4.4709000000000415e-05, 4.426400000000219e-05, 4.4902999999998916e-05, 4.4861000000000206e-05, 4.4402999999998416e-05, 4.494400000000162e-05, 4.424999999999915e-05, 4.423599999999958e-05, 4.4819000000001497e-05, 4.470800000000094e-05, 4.419400000000087e-05, 4.426399999999872e-05, 4.43060000000009e-05, 4.4917000000001955e-05, 4.4138999999998596e-05, 4.458400000000029e-05, 4.474999999999965e-05, 4.420800000000044e-05, 4.423599999999958e-05, 4.422200000000001e-05, 4.4139000000002065e-05, 4.4459000000000165e-05, 4.473600000000008e-05, 4.451399999999897e-05, 4.409799999999936e-05, 4.4610999999999956e-05, 4.433400000000004e-05, 4.427700000000229e-05, 4.4374999999999276e-05, 4.497200000000076e-05, 4.4583000000000816e-05, 4.498600000000033e-05, 4.429200000000133e-05, 4.451399999999897e-05, 4.443000000000155e-05, 4.494399999999815e-05, 4.502800000000251e-05, 4.493000000000205e-05, 4.479199999999836e-05, 4.4583000000000816e-05]</msg>
<status status="PASS" starttime="20201029 18:27:26.230" endtime="20201029 18:27:26.233"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:26.226" endtime="20201029 18:27:26.233"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:27:26.237" endtime="20201029 18:27:26.256"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:26.235" endtime="20201029 18:27:26.257"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:26.234" endtime="20201029 18:27:26.257"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:25.879" endtime="20201029 18:27:26.257"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:25.879" endtime="20201029 18:27:26.257"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:26.266" endtime="20201029 18:27:26.283"></status>
</kw>
<msg timestamp="20201029 18:27:26.284" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:26.265" endtime="20201029 18:27:26.284"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:26.286" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:26.285" endtime="20201029 18:27:26.286"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:26.287" endtime="20201029 18:27:26.289"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:26.262" endtime="20201029 18:27:26.289"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:26.260" endtime="20201029 18:27:26.290"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:26.296" endtime="20201029 18:27:26.584"></status>
</kw>
<msg timestamp="20201029 18:27:26.587" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020278903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020324319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:26.295" endtime="20201029 18:27:26.587"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:26.595" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020278903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020324319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:26.588" endtime="20201029 18:27:26.595"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:26.596" endtime="20201029 18:27:26.597"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:26.292" endtime="20201029 18:27:26.598"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:26.290" endtime="20201029 18:27:26.598"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:27:26.602" level="INFO">${RESULT} = [{'diff': 4.541599999999951e-05}, {'diff': 4.526399999999972e-05}, {'diff': 4.570799999999847e-05}, {'diff': 4.540199999999994e-05}, {'diff': 4.587499999999731e-05}, {'diff': 4.6083000000002317e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:27:26.599" endtime="20201029 18:27:26.603"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:27:26.606" level="INFO">${ACCURACY} = {'diff': [4.541599999999951e-05, 4.526399999999972e-05, 4.570799999999847e-05, 4.540199999999994e-05, 4.587499999999731e-05, 4.6083000000002317e-05, 4.5861000000001206e-05, 4.541599999999951e-05, 4.52...</msg>
<status status="PASS" starttime="20201029 18:27:26.603" endtime="20201029 18:27:26.607"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:27:26.611" level="INFO">NAME: accuracy-TIMER_SLEEP-33-philip</msg>
<status status="PASS" starttime="20201029 18:27:26.610" endtime="20201029 18:27:26.611"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:27:26.613" level="INFO">VALUE: [4.541599999999951e-05, 4.526399999999972e-05, 4.570799999999847e-05, 4.540199999999994e-05, 4.587499999999731e-05, 4.6083000000002317e-05, 4.5861000000001206e-05, 4.541599999999951e-05, 4.520799999999797e-05, 4.551399999999997e-05, 4.5152999999999166e-05, 4.592999999999958e-05, 4.5375000000000276e-05, 4.555599999999868e-05, 4.570800000000194e-05, 4.5930999999999056e-05, 4.5375000000000276e-05, 4.527799999999929e-05, 4.544400000000212e-05, 4.5694999999998376e-05, 4.5611000000000956e-05, 4.5611000000000956e-05, 4.5417000000002455e-05, 4.523600000000058e-05, 4.522200000000101e-05, 4.577700000000032e-05, 4.605499999999971e-05, 4.576400000000022e-05, 4.541599999999951e-05, 4.577799999999979e-05, 4.523600000000058e-05, 4.5652999999999666e-05, 4.5402999999999416e-05, 4.5402999999999416e-05, 4.527800000000276e-05, 4.53329999999981e-05, 4.5930999999999056e-05, 4.5444999999998126e-05, 4.523600000000058e-05, 4.5319999999998e-05, 4.508400000000079e-05, 4.559800000000086e-05, 4.532000000000147e-05, 4.5375000000000276e-05, 4.5125000000000026e-05, 4.5723000000000985e-05, 4.5597000000001386e-05, 4.598599999999786e-05, 4.555499999999921e-05, 4.530499999999896e-05]</msg>
<status status="PASS" starttime="20201029 18:27:26.612" endtime="20201029 18:27:26.614"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:26.607" endtime="20201029 18:27:26.615"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:27:26.618" endtime="20201029 18:27:26.638"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:26.617" endtime="20201029 18:27:26.638"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:26.616" endtime="20201029 18:27:26.638"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:26.258" endtime="20201029 18:27:26.639"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:26.258" endtime="20201029 18:27:26.639"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:26.647" endtime="20201029 18:27:26.665"></status>
</kw>
<msg timestamp="20201029 18:27:26.666" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:26.646" endtime="20201029 18:27:26.666"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:26.668" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:26.667" endtime="20201029 18:27:26.668"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:26.669" endtime="20201029 18:27:26.671"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:26.643" endtime="20201029 18:27:26.671"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:26.641" endtime="20201029 18:27:26.672"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:26.678" endtime="20201029 18:27:26.981"></status>
</kw>
<msg timestamp="20201029 18:27:26.984" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021233889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021280431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:26.676" endtime="20201029 18:27:26.984"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:26.992" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021233889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021280431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:26.985" endtime="20201029 18:27:26.993"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:26.993" endtime="20201029 18:27:26.995"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:26.674" endtime="20201029 18:27:26.995"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:26.672" endtime="20201029 18:27:26.996"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:27:27.000" level="INFO">${RESULT} = [{'diff': 4.654200000000011e-05}, {'diff': 4.648599999999836e-05}, {'diff': 4.6361000000001706e-05}, {'diff': 4.66939999999999e-05}, {'diff': 4.6639000000001096e-05}, {'diff': 4.6847000000002637e-05},...</msg>
<status status="PASS" starttime="20201029 18:27:26.997" endtime="20201029 18:27:27.000"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:27:27.004" level="INFO">${ACCURACY} = {'diff': [4.654200000000011e-05, 4.648599999999836e-05, 4.6361000000001706e-05, 4.66939999999999e-05, 4.6639000000001096e-05, 4.6847000000002637e-05, 4.61939999999994e-05, 4.637499999999781e-05, 4.612...</msg>
<status status="PASS" starttime="20201029 18:27:27.001" endtime="20201029 18:27:27.004"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:27:27.008" level="INFO">NAME: accuracy-TIMER_SLEEP-34-philip</msg>
<status status="PASS" starttime="20201029 18:27:27.007" endtime="20201029 18:27:27.009"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:27:27.011" level="INFO">VALUE: [4.654200000000011e-05, 4.648599999999836e-05, 4.6361000000001706e-05, 4.66939999999999e-05, 4.6639000000001096e-05, 4.6847000000002637e-05, 4.61939999999994e-05, 4.637499999999781e-05, 4.6125000000001026e-05, 4.627800000000029e-05, 4.663899999999763e-05, 4.626399999999725e-05, 4.6680999999999806e-05, 4.637499999999781e-05, 4.658400000000229e-05, 4.656999999999925e-05, 4.633400000000204e-05, 4.6875000000001776e-05, 4.680599999999993e-05, 4.6222999999998016e-05, 4.625000000000115e-05, 4.687499999999831e-05, 4.679100000000089e-05, 4.6430999999999556e-05, 4.620800000000244e-05, 4.6125000000001026e-05, 4.654099999999717e-05, 4.68329999999996e-05, 4.659699999999892e-05, 4.663899999999763e-05, 4.6097000000001886e-05, 4.6097000000001886e-05, 4.6347000000002136e-05, 4.6416999999999986e-05, 4.623599999999811e-05, 4.622200000000201e-05, 4.6223000000001485e-05, 4.6625000000001526e-05, 4.699999999999843e-05, 4.630499999999996e-05, 4.6737000000001555e-05, 4.6472999999998266e-05, 4.634699999999867e-05, 4.6389000000000846e-05, 4.629099999999692e-05, 4.686099999999874e-05, 4.6653000000000666e-05, 4.626400000000072e-05, 4.629100000000039e-05, 4.6139000000000596e-05]</msg>
<status status="PASS" starttime="20201029 18:27:27.009" endtime="20201029 18:27:27.012"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:27.005" endtime="20201029 18:27:27.013"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:27:27.017" endtime="20201029 18:27:27.036"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:27.015" endtime="20201029 18:27:27.036"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:27.014" endtime="20201029 18:27:27.037"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:26.640" endtime="20201029 18:27:27.037"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:26.639" endtime="20201029 18:27:27.037"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:27.046" endtime="20201029 18:27:27.062"></status>
</kw>
<msg timestamp="20201029 18:27:27.063" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:27.044" endtime="20201029 18:27:27.063"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:27.065" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:27.064" endtime="20201029 18:27:27.066"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:27.066" endtime="20201029 18:27:27.068"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:27.042" endtime="20201029 18:27:27.068"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:27.040" endtime="20201029 18:27:27.069"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:27.075" endtime="20201029 18:27:27.362"></status>
</kw>
<msg timestamp="20201029 18:27:27.365" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020226222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020273778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:27.074" endtime="20201029 18:27:27.365"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:27.372" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020226222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020273778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:27.366" endtime="20201029 18:27:27.373"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:27.374" endtime="20201029 18:27:27.375"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:27.071" endtime="20201029 18:27:27.376"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:27.069" endtime="20201029 18:27:27.376"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:27:27.380" level="INFO">${RESULT} = [{'diff': 4.755600000000068e-05}, {'diff': 4.776399999999875e-05}, {'diff': 4.738899999999838e-05}, {'diff': 4.797200000000029e-05}, {'diff': 4.752799999999807e-05}, {'diff': 4.7987000000002805e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:27:27.377" endtime="20201029 18:27:27.380"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:27:27.385" level="INFO">${ACCURACY} = {'diff': [4.755600000000068e-05, 4.776399999999875e-05, 4.738899999999838e-05, 4.797200000000029e-05, 4.752799999999807e-05, 4.7987000000002805e-05, 4.7403000000001416e-05, 4.7667000000001236e-05, 4.7...</msg>
<status status="PASS" starttime="20201029 18:27:27.381" endtime="20201029 18:27:27.385"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:27:27.389" level="INFO">NAME: accuracy-TIMER_SLEEP-35-philip</msg>
<status status="PASS" starttime="20201029 18:27:27.388" endtime="20201029 18:27:27.390"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:27:27.392" level="INFO">VALUE: [4.755600000000068e-05, 4.776399999999875e-05, 4.738899999999838e-05, 4.797200000000029e-05, 4.752799999999807e-05, 4.7987000000002805e-05, 4.7403000000001416e-05, 4.7667000000001236e-05, 4.794399999999768e-05, 4.7611000000002957e-05, 4.709699999999942e-05, 4.744400000000065e-05, 4.725000000000215e-05, 4.720799999999997e-05, 4.777800000000179e-05, 4.71529999999977e-05, 4.791599999999854e-05, 4.745800000000022e-05, 4.743000000000108e-05, 4.777799999999832e-05, 4.769399999999743e-05, 4.724999999999868e-05, 4.7917000000001486e-05, 4.73330000000001e-05, 4.723600000000258e-05, 4.780600000000093e-05, 4.787499999999931e-05, 4.7139000000001596e-05, 4.7639000000002096e-05, 4.7181000000000306e-05, 4.71940000000004e-05, 4.798599999999986e-05, 4.727699999999835e-05, 4.749999999999893e-05, 4.731900000000053e-05, 4.780499999999799e-05, 4.75139999999985e-05, 4.781900000000103e-05, 4.711099999999899e-05, 4.726399999999825e-05, 4.802799999999857e-05, 4.7445000000000126e-05, 4.7167000000000736e-05, 4.7139000000001596e-05, 4.711099999999899e-05, 4.776399999999875e-05, 4.708399999999932e-05, 4.737499999999881e-05, 4.805600000000118e-05, 4.774999999999918e-05]</msg>
<status status="PASS" starttime="20201029 18:27:27.391" endtime="20201029 18:27:27.393"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:27.386" endtime="20201029 18:27:27.393"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:27:27.397" endtime="20201029 18:27:27.417"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:27.396" endtime="20201029 18:27:27.417"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:27.394" endtime="20201029 18:27:27.418"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:27.038" endtime="20201029 18:27:27.418"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:27.038" endtime="20201029 18:27:27.418"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:27.427" endtime="20201029 18:27:27.443"></status>
</kw>
<msg timestamp="20201029 18:27:27.443" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:27.425" endtime="20201029 18:27:27.443"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:27.446" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:27.444" endtime="20201029 18:27:27.446"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:27.447" endtime="20201029 18:27:27.448"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:27.423" endtime="20201029 18:27:27.449"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:27.421" endtime="20201029 18:27:27.449"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:27.456" endtime="20201029 18:27:27.742"></status>
</kw>
<msg timestamp="20201029 18:27:27.745" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019674208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019722611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:27.454" endtime="20201029 18:27:27.745"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:27.753" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019674208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019722611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:27.746" endtime="20201029 18:27:27.754"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:27.754" endtime="20201029 18:27:27.756"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:27.452" endtime="20201029 18:27:27.756"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:27.450" endtime="20201029 18:27:27.757"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:27:27.761" level="INFO">${RESULT} = [{'diff': 4.8403000000002416e-05}, {'diff': 4.897200000000129e-05}, {'diff': 4.898600000000086e-05}, {'diff': 4.844399999999818e-05}, {'diff': 4.862500000000006e-05}, {'diff': 4.812499999999956e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:27:27.758" endtime="20201029 18:27:27.761"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:27:27.765" level="INFO">${ACCURACY} = {'diff': [4.8403000000002416e-05, 4.897200000000129e-05, 4.898600000000086e-05, 4.844399999999818e-05, 4.862500000000006e-05, 4.812499999999956e-05, 4.876399999999975e-05, 4.891699999999902e-05, 4.870...</msg>
<status status="PASS" starttime="20201029 18:27:27.762" endtime="20201029 18:27:27.765"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:27:27.769" level="INFO">NAME: accuracy-TIMER_SLEEP-36-philip</msg>
<status status="PASS" starttime="20201029 18:27:27.768" endtime="20201029 18:27:27.769"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:27:27.772" level="INFO">VALUE: [4.8403000000002416e-05, 4.897200000000129e-05, 4.898600000000086e-05, 4.844399999999818e-05, 4.862500000000006e-05, 4.812499999999956e-05, 4.876399999999975e-05, 4.891699999999902e-05, 4.8709000000000946e-05, 4.8903000000002916e-05, 4.861199999999996e-05, 4.81529999999987e-05, 4.906899999999881e-05, 4.81529999999987e-05, 4.8639000000003096e-05, 4.883299999999813e-05, 4.858300000000135e-05, 4.812499999999956e-05, 4.873600000000061e-05, 4.876399999999975e-05, 4.906900000000228e-05, 4.845800000000122e-05, 4.862500000000006e-05, 4.812499999999956e-05, 4.887500000000031e-05, 4.831900000000153e-05, 4.869499999999791e-05, 4.829199999999839e-05, 4.8931000000002056e-05, 4.873600000000061e-05, 4.880599999999846e-05, 4.826400000000272e-05, 4.8987000000000336e-05, 4.9014e-05, 4.824999999999968e-05, 4.81529999999987e-05, 4.806900000000128e-05, 4.880499999999899e-05, 4.823600000000011e-05, 4.808299999999738e-05, 4.818000000000183e-05, 4.8653000000002666e-05, 4.881900000000203e-05, 4.8417000000001986e-05, 4.88469999999977e-05, 4.8681000000001806e-05, 4.870800000000147e-05, 4.847199999999732e-05, 4.829199999999839e-05, 4.834700000000067e-05]</msg>
<status status="PASS" starttime="20201029 18:27:27.770" endtime="20201029 18:27:27.772"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:27.766" endtime="20201029 18:27:27.773"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:27:27.777" endtime="20201029 18:27:27.796"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:27.775" endtime="20201029 18:27:27.797"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:27.774" endtime="20201029 18:27:27.797"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:27.419" endtime="20201029 18:27:27.797"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:27.419" endtime="20201029 18:27:27.797"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:27.806" endtime="20201029 18:27:27.824"></status>
</kw>
<msg timestamp="20201029 18:27:27.824" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:27.804" endtime="20201029 18:27:27.824"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:27.827" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:27.825" endtime="20201029 18:27:27.827"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:27.828" endtime="20201029 18:27:27.829"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:27.802" endtime="20201029 18:27:27.830"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:27.800" endtime="20201029 18:27:27.830"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:27.837" endtime="20201029 18:27:28.122"></status>
</kw>
<msg timestamp="20201029 18:27:28.125" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021231681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021281028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:27.835" endtime="20201029 18:27:28.125"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:28.133" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021231681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021281028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:28.126" endtime="20201029 18:27:28.133"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:28.134" endtime="20201029 18:27:28.136"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:27.833" endtime="20201029 18:27:28.136"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:27.831" endtime="20201029 18:27:28.136"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:27:28.140" level="INFO">${RESULT} = [{'diff': 4.934700000000167e-05}, {'diff': 4.934700000000167e-05}, {'diff': 4.940299999999995e-05}, {'diff': 4.95270000000006e-05}, {'diff': 4.952800000000007e-05}, {'diff': 4.96530000000002e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 18:27:28.137" endtime="20201029 18:27:28.141"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:27:28.144" level="INFO">${ACCURACY} = {'diff': [4.934700000000167e-05, 4.934700000000167e-05, 4.940299999999995e-05, 4.95270000000006e-05, 4.952800000000007e-05, 4.96530000000002e-05, 4.969399999999943e-05, 4.972200000000204e-05, 5.005500...</msg>
<status status="PASS" starttime="20201029 18:27:28.141" endtime="20201029 18:27:28.145"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:27:28.149" level="INFO">NAME: accuracy-TIMER_SLEEP-37-philip</msg>
<status status="PASS" starttime="20201029 18:27:28.148" endtime="20201029 18:27:28.149"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:27:28.151" level="INFO">VALUE: [4.934700000000167e-05, 4.934700000000167e-05, 4.940299999999995e-05, 4.95270000000006e-05, 4.952800000000007e-05, 4.96530000000002e-05, 4.969399999999943e-05, 4.972200000000204e-05, 5.005500000000024e-05, 4.994399999999968e-05, 4.956899999999931e-05, 4.925000000000068e-05, 5.004100000000067e-05, 4.922200000000154e-05, 4.9723000000001516e-05, 4.908300000000185e-05, 5.011099999999852e-05, 4.933299999999863e-05, 4.922200000000154e-05, 4.919499999999841e-05, 5.005599999999971e-05, 5.004200000000014e-05, 4.934700000000167e-05, 4.933400000000157e-05, 4.991700000000002e-05, 4.9181000000002306e-05, 4.9472999999997797e-05, 4.990300000000045e-05, 4.942999999999961e-05, 4.912500000000056e-05, 4.956899999999931e-05, 4.956899999999931e-05, 4.973599999999814e-05, 4.990300000000045e-05, 4.917999999999936e-05, 4.917999999999936e-05, 4.986099999999827e-05, 4.959700000000192e-05, 4.933299999999863e-05, 4.952800000000007e-05, 4.975000000000118e-05, 4.959799999999792e-05, 4.96530000000002e-05, 4.987499999999784e-05, 4.943099999999909e-05, 4.913900000000013e-05, 4.937500000000081e-05, 4.9237000000000586e-05, 4.998600000000186e-05, 4.925000000000068e-05]</msg>
<status status="PASS" starttime="20201029 18:27:28.150" endtime="20201029 18:27:28.153"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:28.145" endtime="20201029 18:27:28.153"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:27:28.157" endtime="20201029 18:27:28.176"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:28.156" endtime="20201029 18:27:28.177"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:28.154" endtime="20201029 18:27:28.177"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:27.798" endtime="20201029 18:27:28.178"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:27.798" endtime="20201029 18:27:28.178"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:28.186" endtime="20201029 18:27:28.204"></status>
</kw>
<msg timestamp="20201029 18:27:28.204" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:28.185" endtime="20201029 18:27:28.204"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:28.207" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:28.205" endtime="20201029 18:27:28.207"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:28.208" endtime="20201029 18:27:28.209"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:28.182" endtime="20201029 18:27:28.210"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:28.180" endtime="20201029 18:27:28.210"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:28.216" endtime="20201029 18:27:28.502"></status>
</kw>
<msg timestamp="20201029 18:27:28.505" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019501264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019551403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:28.215" endtime="20201029 18:27:28.505"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:28.513" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019501264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019551403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:28.506" endtime="20201029 18:27:28.513"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:28.514" endtime="20201029 18:27:28.516"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:28.212" endtime="20201029 18:27:28.516"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:28.211" endtime="20201029 18:27:28.516"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:27:28.520" level="INFO">${RESULT} = [{'diff': 5.013899999999766e-05}, {'diff': 5.023599999999864e-05}, {'diff': 5.036200000000171e-05}, {'diff': 5.0223000000002016e-05}, {'diff': 5.0236999999998116e-05}, {'diff': 5.079200000000089e-05},...</msg>
<status status="PASS" starttime="20201029 18:27:28.517" endtime="20201029 18:27:28.521"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:27:28.525" level="INFO">${ACCURACY} = {'diff': [5.013899999999766e-05, 5.023599999999864e-05, 5.036200000000171e-05, 5.0223000000002016e-05, 5.0236999999998116e-05, 5.079200000000089e-05, 5.026300000000178e-05, 5.049999999999846e-05, 5.05...</msg>
<status status="PASS" starttime="20201029 18:27:28.521" endtime="20201029 18:27:28.526"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:27:28.530" level="INFO">NAME: accuracy-TIMER_SLEEP-38-philip</msg>
<status status="PASS" starttime="20201029 18:27:28.529" endtime="20201029 18:27:28.530"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:27:28.532" level="INFO">VALUE: [5.013899999999766e-05, 5.023599999999864e-05, 5.036200000000171e-05, 5.0223000000002016e-05, 5.0236999999998116e-05, 5.079200000000089e-05, 5.026300000000178e-05, 5.049999999999846e-05, 5.051399999999803e-05, 5.0402000000001473e-05, 5.069400000000043e-05, 5.090300000000145e-05, 5.016700000000027e-05, 5.011099999999852e-05, 5.052800000000107e-05, 5.075000000000218e-05, 5.076400000000175e-05, 5.054200000000064e-05, 5.048599999999889e-05, 5.077800000000132e-05, 5.077799999999785e-05, 5.1014000000002e-05, 5.025000000000168e-05, 5.080599999999699e-05, 5.104199999999767e-05, 5.102699999999863e-05, 5.076299999999881e-05, 5.086100000000274e-05, 5.009700000000242e-05, 5.0402000000001473e-05, 5.033299999999963e-05, 5.036099999999877e-05, 5.056900000000031e-05, 5.026400000000125e-05, 5.027800000000082e-05, 5.077800000000132e-05, 5.026400000000125e-05, 5.097199999999982e-05, 5.012500000000156e-05, 5.03339999999991e-05, 5.02079999999995e-05, 5.068100000000034e-05, 5.058399999999935e-05, 5.034800000000214e-05, 5.094400000000068e-05, 5.031900000000006e-05, 5.076299999999881e-05, 5.026400000000125e-05, 5.0651999999998254e-05, 5.097199999999982e-05]</msg>
<status status="PASS" starttime="20201029 18:27:28.531" endtime="20201029 18:27:28.538"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:28.526" endtime="20201029 18:27:28.539"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:27:28.542" endtime="20201029 18:27:28.562"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:28.541" endtime="20201029 18:27:28.562"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:28.539" endtime="20201029 18:27:28.563"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:28.179" endtime="20201029 18:27:28.563"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:28.178" endtime="20201029 18:27:28.563"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:28.572" endtime="20201029 18:27:28.589"></status>
</kw>
<msg timestamp="20201029 18:27:28.589" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:28.570" endtime="20201029 18:27:28.589"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:28.592" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:28.590" endtime="20201029 18:27:28.592"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:28.593" endtime="20201029 18:27:28.594"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:28.568" endtime="20201029 18:27:28.595"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:28.565" endtime="20201029 18:27:28.595"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:28.602" endtime="20201029 18:27:28.890"></status>
</kw>
<msg timestamp="20201029 18:27:28.893" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020020889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020072931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:28.600" endtime="20201029 18:27:28.893"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:28.901" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020020889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020072931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:28.894" endtime="20201029 18:27:28.901"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:28.902" endtime="20201029 18:27:28.903"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:28.598" endtime="20201029 18:27:28.904"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:28.596" endtime="20201029 18:27:28.904"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:27:28.908" level="INFO">${RESULT} = [{'diff': 5.204199999999867e-05}, {'diff': 5.109799999999942e-05}, {'diff': 5.126400000000225e-05}, {'diff': 5.120899999999998e-05}, {'diff': 5.198600000000039e-05}, {'diff': 5.123599999999964e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:27:28.905" endtime="20201029 18:27:28.908"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:27:28.912" level="INFO">${ACCURACY} = {'diff': [5.204199999999867e-05, 5.109799999999942e-05, 5.126400000000225e-05, 5.120899999999998e-05, 5.198600000000039e-05, 5.123599999999964e-05, 5.181900000000156e-05, 5.145800000000075e-05, 5.1151...</msg>
<status status="PASS" starttime="20201029 18:27:28.909" endtime="20201029 18:27:28.913"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:27:28.917" level="INFO">NAME: accuracy-TIMER_SLEEP-39-philip</msg>
<status status="PASS" starttime="20201029 18:27:28.916" endtime="20201029 18:27:28.917"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:27:28.919" level="INFO">VALUE: [5.204199999999867e-05, 5.109799999999942e-05, 5.126400000000225e-05, 5.120899999999998e-05, 5.198600000000039e-05, 5.123599999999964e-05, 5.181900000000156e-05, 5.145800000000075e-05, 5.1151999999998754e-05, 5.1943999999998214e-05, 5.126400000000225e-05, 5.195800000000125e-05, 5.191699999999855e-05, 5.205499999999877e-05, 5.143100000000109e-05, 5.129200000000139e-05, 5.137499999999934e-05, 5.145800000000075e-05, 5.161100000000002e-05, 5.194500000000116e-05, 5.177800000000232e-05, 5.18609999999968e-05, 5.143100000000109e-05, 5.111099999999952e-05, 5.188899999999941e-05, 5.199999999999996e-05, 5.168000000000186e-05, 5.138899999999891e-05, 5.145800000000075e-05, 5.1915999999999074e-05, 5.136099999999977e-05, 5.173600000000014e-05, 5.168000000000186e-05, 5.180599999999799e-05, 5.176399999999928e-05, 5.199999999999996e-05, 5.188900000000288e-05, 5.180600000000146e-05, 5.118100000000084e-05, 5.1665999999998824e-05, 5.124999999999921e-05, 5.188900000000288e-05, 5.197200000000082e-05, 5.209700000000095e-05, 5.1402000000002473e-05, 5.194400000000168e-05, 5.148599999999989e-05, 5.130499999999802e-05, 5.177800000000232e-05, 5.151399999999903e-05]</msg>
<status status="PASS" starttime="20201029 18:27:28.918" endtime="20201029 18:27:28.920"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:28.913" endtime="20201029 18:27:28.920"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:27:28.924" endtime="20201029 18:27:28.944"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:28.923" endtime="20201029 18:27:28.944"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:28.921" endtime="20201029 18:27:28.944"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:28.564" endtime="20201029 18:27:28.945"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:28.563" endtime="20201029 18:27:28.945"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:28.953" endtime="20201029 18:27:28.971"></status>
</kw>
<msg timestamp="20201029 18:27:28.971" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:28.952" endtime="20201029 18:27:28.971"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:28.974" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:28.972" endtime="20201029 18:27:28.974"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:28.975" endtime="20201029 18:27:28.976"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:28.949" endtime="20201029 18:27:28.977"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:28.947" endtime="20201029 18:27:28.977"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:28.983" endtime="20201029 18:27:29.269"></status>
</kw>
<msg timestamp="20201029 18:27:29.272" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02078825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020840611, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:27:28.982" endtime="20201029 18:27:29.273"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:29.280" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02078825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020840611, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:27:29.273" endtime="20201029 18:27:29.281"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:29.281" endtime="20201029 18:27:29.283"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:28.979" endtime="20201029 18:27:29.284"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:28.978" endtime="20201029 18:27:29.284"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:27:29.288" level="INFO">${RESULT} = [{'diff': 5.23609999999973e-05}, {'diff': 5.294500000000216e-05}, {'diff': 5.283299999999866e-05}, {'diff': 5.25279999999996e-05}, {'diff': 5.250000000000046e-05}, {'diff': 5.244499999999819e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 18:27:29.285" endtime="20201029 18:27:29.288"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:27:29.292" level="INFO">${ACCURACY} = {'diff': [5.23609999999973e-05, 5.294500000000216e-05, 5.283299999999866e-05, 5.25279999999996e-05, 5.250000000000046e-05, 5.244499999999819e-05, 5.209700000000095e-05, 5.2708000000002e-05, 5.21529999...</msg>
<status status="PASS" starttime="20201029 18:27:29.289" endtime="20201029 18:27:29.292"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:27:29.296" level="INFO">NAME: accuracy-TIMER_SLEEP-40-philip</msg>
<status status="PASS" starttime="20201029 18:27:29.295" endtime="20201029 18:27:29.297"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:27:29.299" level="INFO">VALUE: [5.23609999999973e-05, 5.294500000000216e-05, 5.283299999999866e-05, 5.25279999999996e-05, 5.250000000000046e-05, 5.244499999999819e-05, 5.209700000000095e-05, 5.2708000000002e-05, 5.215299999999923e-05, 5.223600000000064e-05, 5.2985999999997924e-05, 5.241699999999905e-05, 5.2707999999998534e-05, 5.301300000000106e-05, 5.25409999999997e-05, 5.2679999999999394e-05, 5.225000000000021e-05, 5.247200000000132e-05, 5.229099999999945e-05, 5.281899999999909e-05, 5.213899999999966e-05, 5.291699999999955e-05, 5.293099999999912e-05, 5.241700000000252e-05, 5.215299999999923e-05, 5.294500000000216e-05, 5.270899999999801e-05, 5.297200000000182e-05, 5.23340000000011e-05, 5.2151999999999754e-05, 5.225000000000021e-05, 5.248600000000089e-05, 5.294499999999869e-05, 5.2693999999998964e-05, 5.225000000000021e-05, 5.263900000000016e-05, 5.22080000000015e-05, 5.30280000000001e-05, 5.286100000000127e-05, 5.233299999999816e-05, 5.218099999999837e-05, 5.259699999999798e-05, 5.261100000000102e-05, 5.211100000000052e-05, 5.261100000000102e-05, 5.291699999999955e-05, 5.233399999999763e-05, 5.272200000000157e-05, 5.230599999999849e-05, 5.212500000000009e-05]</msg>
<status status="PASS" starttime="20201029 18:27:29.297" endtime="20201029 18:27:29.300"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:29.293" endtime="20201029 18:27:29.301"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:27:29.304" endtime="20201029 18:27:29.324"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:29.303" endtime="20201029 18:27:29.324"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:29.302" endtime="20201029 18:27:29.325"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:28.946" endtime="20201029 18:27:29.325"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:28.945" endtime="20201029 18:27:29.325"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:29.334" endtime="20201029 18:27:29.351"></status>
</kw>
<msg timestamp="20201029 18:27:29.351" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:29.332" endtime="20201029 18:27:29.352"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:29.354" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:29.353" endtime="20201029 18:27:29.354"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:29.355" endtime="20201029 18:27:29.357"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:29.330" endtime="20201029 18:27:29.357"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:29.328" endtime="20201029 18:27:29.357"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:29.364" endtime="20201029 18:27:29.651"></status>
</kw>
<msg timestamp="20201029 18:27:29.655" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020030583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020084208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:29.362" endtime="20201029 18:27:29.655"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:29.663" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020030583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020084208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:29.656" endtime="20201029 18:27:29.663"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:29.664" endtime="20201029 18:27:29.666"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:29.360" endtime="20201029 18:27:29.666"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:29.358" endtime="20201029 18:27:29.667"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:27:29.670" level="INFO">${RESULT} = [{'diff': 5.362499999999812e-05}, {'diff': 5.3999999999998494e-05}, {'diff': 5.3971999999999354e-05}, {'diff': 5.358299999999941e-05}, {'diff': 5.327800000000035e-05}, {'diff': 5.343100000000309e-05},...</msg>
<status status="PASS" starttime="20201029 18:27:29.667" endtime="20201029 18:27:29.671"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:27:29.676" level="INFO">${ACCURACY} = {'diff': [5.362499999999812e-05, 5.3999999999998494e-05, 5.3971999999999354e-05, 5.358299999999941e-05, 5.327800000000035e-05, 5.343100000000309e-05, 5.369499999999944e-05, 5.401400000000153e-05, 5.35...</msg>
<status status="PASS" starttime="20201029 18:27:29.672" endtime="20201029 18:27:29.676"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:27:29.680" level="INFO">NAME: accuracy-TIMER_SLEEP-41-philip</msg>
<status status="PASS" starttime="20201029 18:27:29.679" endtime="20201029 18:27:29.680"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:27:29.682" level="INFO">VALUE: [5.362499999999812e-05, 5.3999999999998494e-05, 5.3971999999999354e-05, 5.358299999999941e-05, 5.327800000000035e-05, 5.343100000000309e-05, 5.369499999999944e-05, 5.401400000000153e-05, 5.35280000000006e-05, 5.393100000000012e-05, 5.388900000000141e-05, 5.338900000000091e-05, 5.408299999999991e-05, 5.3957999999999784e-05, 5.406900000000034e-05, 5.336200000000124e-05, 5.404099999999773e-05, 5.345800000000275e-05, 5.3777999999997383e-05, 5.319400000000293e-05, 5.337499999999787e-05, 5.350000000000146e-05, 5.359699999999898e-05, 5.358299999999941e-05, 5.330599999999949e-05, 5.363899999999769e-05, 5.327800000000035e-05, 5.369499999999944e-05, 5.387500000000184e-05, 5.372299999999858e-05, 5.320899999999851e-05, 5.397299999999883e-05, 5.394499999999969e-05, 5.381900000000009e-05, 5.347200000000232e-05, 5.3735999999998674e-05, 5.376400000000128e-05, 5.33609999999983e-05, 5.351400000000103e-05, 5.373600000000214e-05, 5.33609999999983e-05, 5.363899999999769e-05, 5.327800000000035e-05, 5.326400000000078e-05, 5.3221999999998604e-05, 5.312500000000109e-05, 5.337500000000134e-05, 5.377800000000085e-05, 5.373600000000214e-05, 5.3735999999998674e-05]</msg>
<status status="PASS" starttime="20201029 18:27:29.681" endtime="20201029 18:27:29.683"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:29.676" endtime="20201029 18:27:29.684"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:27:29.687" endtime="20201029 18:27:29.707"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:29.686" endtime="20201029 18:27:29.707"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:29.685" endtime="20201029 18:27:29.708"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:29.326" endtime="20201029 18:27:29.708"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:29.325" endtime="20201029 18:27:29.708"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:29.717" endtime="20201029 18:27:29.732"></status>
</kw>
<msg timestamp="20201029 18:27:29.733" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:29.715" endtime="20201029 18:27:29.733"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:29.735" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:29.734" endtime="20201029 18:27:29.736"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:29.736" endtime="20201029 18:27:29.738"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:29.713" endtime="20201029 18:27:29.739"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:29.710" endtime="20201029 18:27:29.739"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:29.745" endtime="20201029 18:27:30.032"></status>
</kw>
<msg timestamp="20201029 18:27:30.035" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019551097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019605972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:29.744" endtime="20201029 18:27:30.035"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:30.043" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019551097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019605972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:30.036" endtime="20201029 18:27:30.043"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:30.044" endtime="20201029 18:27:30.046"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:29.741" endtime="20201029 18:27:30.046"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:29.740" endtime="20201029 18:27:30.047"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:27:30.051" level="INFO">${RESULT} = [{'diff': 5.487499999999937e-05}, {'diff': 5.434699999999973e-05}, {'diff': 5.451400000000203e-05}, {'diff': 5.4985999999999924e-05}, {'diff': 5.483300000000066e-05}, {'diff': 5.4277999999997883e-05},...</msg>
<status status="PASS" starttime="20201029 18:27:30.047" endtime="20201029 18:27:30.051"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:27:30.055" level="INFO">${ACCURACY} = {'diff': [5.487499999999937e-05, 5.434699999999973e-05, 5.451400000000203e-05, 5.4985999999999924e-05, 5.483300000000066e-05, 5.4277999999997883e-05, 5.469500000000044e-05, 5.494500000000069e-05, 5.49...</msg>
<status status="PASS" starttime="20201029 18:27:30.052" endtime="20201029 18:27:30.055"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:27:30.059" level="INFO">NAME: accuracy-TIMER_SLEEP-42-philip</msg>
<status status="PASS" starttime="20201029 18:27:30.058" endtime="20201029 18:27:30.059"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:27:30.062" level="INFO">VALUE: [5.487499999999937e-05, 5.434699999999973e-05, 5.451400000000203e-05, 5.4985999999999924e-05, 5.483300000000066e-05, 5.4277999999997883e-05, 5.469500000000044e-05, 5.494500000000069e-05, 5.4999999999999494e-05, 5.450000000000246e-05, 5.50410000000022e-05, 5.4680000000001394e-05, 5.4291999999997453e-05, 5.48479999999997e-05, 5.4165999999997855e-05, 5.4749999999999244e-05, 5.4958000000000784e-05, 5.4458000000000284e-05, 5.4749999999999244e-05, 5.411099999999905e-05, 5.4930000000001644e-05, 5.4235999999999174e-05, 5.491699999999808e-05, 5.418100000000037e-05, 5.480600000000099e-05, 5.469500000000044e-05, 5.483400000000013e-05, 5.444500000000019e-05, 5.430600000000049e-05, 5.4763999999998814e-05, 5.457000000000031e-05, 5.508300000000091e-05, 5.462499999999912e-05, 5.4180000000000894e-05, 5.4680000000001394e-05, 5.506899999999787e-05, 5.487499999999937e-05, 5.4943999999997745e-05, 5.440299999999801e-05, 5.412500000000209e-05, 5.451400000000203e-05, 5.4444000000000714e-05, 5.4985999999999924e-05, 5.4235999999999174e-05, 5.415299999999776e-05, 5.48609999999998e-05, 5.445899999999976e-05, 5.412500000000209e-05, 5.475000000000271e-05, 5.420899999999951e-05]</msg>
<status status="PASS" starttime="20201029 18:27:30.060" endtime="20201029 18:27:30.062"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:30.055" endtime="20201029 18:27:30.063"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:27:30.066" endtime="20201029 18:27:30.086"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:30.065" endtime="20201029 18:27:30.086"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:30.064" endtime="20201029 18:27:30.087"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:29.709" endtime="20201029 18:27:30.087"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:29.708" endtime="20201029 18:27:30.087"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:30.096" endtime="20201029 18:27:30.113"></status>
</kw>
<msg timestamp="20201029 18:27:30.114" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:30.094" endtime="20201029 18:27:30.114"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:30.116" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:30.115" endtime="20201029 18:27:30.116"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:30.117" endtime="20201029 18:27:30.119"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:30.092" endtime="20201029 18:27:30.119"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:30.089" endtime="20201029 18:27:30.120"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:30.126" endtime="20201029 18:27:30.412"></status>
</kw>
<msg timestamp="20201029 18:27:30.415" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020821931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020877444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:30.125" endtime="20201029 18:27:30.415"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:30.423" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020821931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020877444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:30.416" endtime="20201029 18:27:30.423"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:30.424" endtime="20201029 18:27:30.425"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:30.122" endtime="20201029 18:27:30.426"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:30.120" endtime="20201029 18:27:30.426"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:27:30.430" level="INFO">${RESULT} = [{'diff': 5.551300000000009e-05}, {'diff': 5.531900000000159e-05}, {'diff': 5.60549999999993e-05}, {'diff': 5.5208000000001034e-05}, {'diff': 5.558299999999794e-05}, {'diff': 5.516699999999833e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:27:30.427" endtime="20201029 18:27:30.430"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:27:30.434" level="INFO">${ACCURACY} = {'diff': [5.551300000000009e-05, 5.531900000000159e-05, 5.60549999999993e-05, 5.5208000000001034e-05, 5.558299999999794e-05, 5.516699999999833e-05, 5.540299999999901e-05, 5.5499999999999994e-05, 5.563...</msg>
<status status="PASS" starttime="20201029 18:27:30.431" endtime="20201029 18:27:30.435"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:27:30.439" level="INFO">NAME: accuracy-TIMER_SLEEP-43-philip</msg>
<status status="PASS" starttime="20201029 18:27:30.438" endtime="20201029 18:27:30.439"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:27:30.442" level="INFO">VALUE: [5.551300000000009e-05, 5.531900000000159e-05, 5.60549999999993e-05, 5.5208000000001034e-05, 5.558299999999794e-05, 5.516699999999833e-05, 5.540299999999901e-05, 5.5499999999999994e-05, 5.563899999999969e-05, 5.583400000000113e-05, 5.5401999999999535e-05, 5.51670000000018e-05, 5.5429999999998675e-05, 5.6014000000000064e-05, 5.5750000000000244e-05, 5.515299999999876e-05, 5.5165999999998855e-05, 5.593099999999865e-05, 5.5193999999997995e-05, 5.584699999999776e-05, 5.6000000000000494e-05, 5.562500000000012e-05, 5.5750000000000244e-05, 5.561099999999708e-05, 5.586200000000027e-05, 5.6027999999999634e-05, 5.509700000000048e-05, 5.5291999999998453e-05, 5.516699999999833e-05, 5.527800000000235e-05, 5.5763999999999814e-05, 5.587500000000037e-05, 5.6041999999999204e-05, 5.5513999999999564e-05, 5.5707999999998065e-05, 5.522300000000008e-05, 5.511100000000005e-05, 5.5472000000000854e-05, 5.5193999999997995e-05, 5.605500000000277e-05, 5.58749999999969e-05, 5.5986000000000924e-05, 5.533299999999769e-05, 5.519500000000094e-05, 5.583299999999819e-05, 5.604200000000267e-05, 5.5472000000000854e-05, 5.530600000000149e-05, 5.587500000000037e-05, 5.508400000000038e-05]</msg>
<status status="PASS" starttime="20201029 18:27:30.440" endtime="20201029 18:27:30.443"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:30.435" endtime="20201029 18:27:30.444"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:27:30.448" endtime="20201029 18:27:30.468"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:30.446" endtime="20201029 18:27:30.468"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:30.445" endtime="20201029 18:27:30.469"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:30.088" endtime="20201029 18:27:30.469"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:30.087" endtime="20201029 18:27:30.469"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:30.478" endtime="20201029 18:27:30.494"></status>
</kw>
<msg timestamp="20201029 18:27:30.495" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:30.476" endtime="20201029 18:27:30.495"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:30.497" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:30.496" endtime="20201029 18:27:30.498"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:30.498" endtime="20201029 18:27:30.500"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:30.474" endtime="20201029 18:27:30.500"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:30.471" endtime="20201029 18:27:30.501"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:30.507" endtime="20201029 18:27:30.792"></status>
</kw>
<msg timestamp="20201029 18:27:30.795" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020134542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020191361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:30.506" endtime="20201029 18:27:30.796"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:30.803" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020134542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020191361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:30.797" endtime="20201029 18:27:30.804"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:30.805" endtime="20201029 18:27:30.806"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:30.503" endtime="20201029 18:27:30.807"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:30.501" endtime="20201029 18:27:30.807"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:27:30.811" level="INFO">${RESULT} = [{'diff': 5.681900000000309e-05}, {'diff': 5.615299999999976e-05}, {'diff': 5.6528000000000134e-05}, {'diff': 5.691700000000008e-05}, {'diff': 5.7014000000001064e-05}, {'diff': 5.670899999999854e-05},...</msg>
<status status="PASS" starttime="20201029 18:27:30.808" endtime="20201029 18:27:30.811"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:27:30.816" level="INFO">${ACCURACY} = {'diff': [5.681900000000309e-05, 5.615299999999976e-05, 5.6528000000000134e-05, 5.691700000000008e-05, 5.7014000000001064e-05, 5.670899999999854e-05, 5.619499999999847e-05, 5.6305999999999023e-05, 5.6...</msg>
<status status="PASS" starttime="20201029 18:27:30.812" endtime="20201029 18:27:30.816"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:27:30.820" level="INFO">NAME: accuracy-TIMER_SLEEP-44-philip</msg>
<status status="PASS" starttime="20201029 18:27:30.819" endtime="20201029 18:27:30.821"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:27:30.823" level="INFO">VALUE: [5.681900000000309e-05, 5.615299999999976e-05, 5.6528000000000134e-05, 5.691700000000008e-05, 5.7014000000001064e-05, 5.670899999999854e-05, 5.619499999999847e-05, 5.6305999999999023e-05, 5.638900000000044e-05, 5.6291999999999454e-05, 5.6264000000000314e-05, 5.651300000000109e-05, 5.640300000000001e-05, 5.6499999999997524e-05, 5.6221999999998135e-05, 5.6513999999997094e-05, 5.680500000000005e-05, 5.70550000000003e-05, 5.616699999999933e-05, 5.6486000000001424e-05, 5.6999999999998024e-05, 5.7055999999999774e-05, 5.634700000000173e-05, 5.609700000000148e-05, 5.607000000000181e-05, 5.661099999999808e-05, 5.63610000000013e-05, 5.662500000000112e-05, 5.676300000000134e-05, 5.6943999999999745e-05, 5.6750000000001244e-05, 5.634699999999826e-05, 5.659700000000198e-05, 5.679100000000048e-05, 5.68610000000018e-05, 5.6693999999999495e-05, 5.6291999999999454e-05, 5.6471999999998385e-05, 5.641699999999958e-05, 5.611100000000105e-05, 5.6486000000001424e-05, 5.7028000000000634e-05, 5.6736000000001674e-05, 5.611099999999758e-05, 5.6235999999997704e-05, 5.611099999999758e-05, 5.6402000000000535e-05, 5.6471999999998385e-05, 5.705499999999683e-05, 5.686099999999833e-05]</msg>
<status status="PASS" starttime="20201029 18:27:30.822" endtime="20201029 18:27:30.824"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:30.817" endtime="20201029 18:27:30.824"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:27:30.828" endtime="20201029 18:27:30.847"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:30.826" endtime="20201029 18:27:30.848"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:30.825" endtime="20201029 18:27:30.848"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:30.470" endtime="20201029 18:27:30.848"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:30.469" endtime="20201029 18:27:30.848"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:30.857" endtime="20201029 18:27:30.874"></status>
</kw>
<msg timestamp="20201029 18:27:30.875" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:30.856" endtime="20201029 18:27:30.875"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:30.877" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:30.876" endtime="20201029 18:27:30.878"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:30.878" endtime="20201029 18:27:30.880"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:30.853" endtime="20201029 18:27:30.880"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:30.851" endtime="20201029 18:27:30.881"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:30.887" endtime="20201029 18:27:31.174"></status>
</kw>
<msg timestamp="20201029 18:27:31.177" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019612597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019670458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:30.886" endtime="20201029 18:27:31.177"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:31.185" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019612597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019670458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:31.178" endtime="20201029 18:27:31.185"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:31.186" endtime="20201029 18:27:31.187"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:30.883" endtime="20201029 18:27:31.188"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:30.881" endtime="20201029 18:27:31.188"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:27:31.192" level="INFO">${RESULT} = [{'diff': 5.786099999999933e-05}, {'diff': 5.731900000000012e-05}, {'diff': 5.704100000000073e-05}, {'diff': 5.738900000000144e-05}, {'diff': 5.7292000000000454e-05}, {'diff': 5.781900000000062e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:27:31.189" endtime="20201029 18:27:31.193"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:27:31.196" level="INFO">${ACCURACY} = {'diff': [5.786099999999933e-05, 5.731900000000012e-05, 5.704100000000073e-05, 5.738900000000144e-05, 5.7292000000000454e-05, 5.781900000000062e-05, 5.76810000000004e-05, 5.7457999999999815e-05, 5.786...</msg>
<status status="PASS" starttime="20201029 18:27:31.193" endtime="20201029 18:27:31.197"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:27:31.201" level="INFO">NAME: accuracy-TIMER_SLEEP-45-philip</msg>
<status status="PASS" starttime="20201029 18:27:31.200" endtime="20201029 18:27:31.201"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:27:31.203" level="INFO">VALUE: [5.786099999999933e-05, 5.731900000000012e-05, 5.704100000000073e-05, 5.738900000000144e-05, 5.7292000000000454e-05, 5.781900000000062e-05, 5.76810000000004e-05, 5.7457999999999815e-05, 5.786099999999933e-05, 5.7958000000000315e-05, 5.7971999999999885e-05, 5.747299999999886e-05, 5.7292000000000454e-05, 5.740300000000101e-05, 5.784799999999923e-05, 5.712500000000162e-05, 5.801299999999912e-05, 5.733299999999969e-05, 5.7278000000000884e-05, 5.759699999999951e-05, 5.7165999999997386e-05, 5.7471999999999385e-05, 5.7444000000000245e-05, 5.7457999999999815e-05, 5.7513999999998094e-05, 5.8083999999999913e-05, 5.787500000000237e-05, 5.738899999999797e-05, 5.770899999999954e-05, 5.78749999999989e-05, 5.793099999999718e-05, 5.7764000000001814e-05, 5.754100000000123e-05, 5.726299999999837e-05, 5.754100000000123e-05, 5.712499999999815e-05, 5.7652000000001785e-05, 5.7193999999999995e-05, 5.759699999999951e-05, 5.8013999999998594e-05, 5.795899999999979e-05, 5.7735999999999205e-05, 5.8013999999998594e-05, 5.719499999999947e-05, 5.745899999999929e-05, 5.745900000000276e-05, 5.765300000000126e-05, 5.7250000000001744e-05, 5.7499999999998525e-05, 5.744499999999972e-05]</msg>
<status status="PASS" starttime="20201029 18:27:31.202" endtime="20201029 18:27:31.204"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:31.197" endtime="20201029 18:27:31.205"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:27:31.208" endtime="20201029 18:27:31.228"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:31.207" endtime="20201029 18:27:31.228"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:31.205" endtime="20201029 18:27:31.228"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:30.849" endtime="20201029 18:27:31.229"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:30.849" endtime="20201029 18:27:31.229"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:31.237" endtime="20201029 18:27:31.256"></status>
</kw>
<msg timestamp="20201029 18:27:31.256" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:31.236" endtime="20201029 18:27:31.257"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:31.259" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:31.257" endtime="20201029 18:27:31.259"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:31.260" endtime="20201029 18:27:31.262"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:31.233" endtime="20201029 18:27:31.262"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:31.231" endtime="20201029 18:27:31.262"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:31.269" endtime="20201029 18:27:31.554"></status>
</kw>
<msg timestamp="20201029 18:27:31.557" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021110236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021169222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:31.267" endtime="20201029 18:27:31.557"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:31.565" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021110236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021169222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:31.558" endtime="20201029 18:27:31.565"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:31.566" endtime="20201029 18:27:31.568"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:31.265" endtime="20201029 18:27:31.568"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:31.263" endtime="20201029 18:27:31.569"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:27:31.572" level="INFO">${RESULT} = [{'diff': 5.8986000000000455e-05}, {'diff': 5.893100000000165e-05}, {'diff': 5.809700000000001e-05}, {'diff': 5.8180000000001425e-05}, {'diff': 5.831899999999765e-05}, {'diff': 5.8777999999998914e-05}...</msg>
<status status="PASS" starttime="20201029 18:27:31.569" endtime="20201029 18:27:31.573"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:27:31.577" level="INFO">${ACCURACY} = {'diff': [5.8986000000000455e-05, 5.893100000000165e-05, 5.809700000000001e-05, 5.8180000000001425e-05, 5.831899999999765e-05, 5.8777999999998914e-05, 5.884699999999729e-05, 5.8458000000000815e-05, 5....</msg>
<status status="PASS" starttime="20201029 18:27:31.573" endtime="20201029 18:27:31.577"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:27:31.581" level="INFO">NAME: accuracy-TIMER_SLEEP-46-philip</msg>
<status status="PASS" starttime="20201029 18:27:31.580" endtime="20201029 18:27:31.581"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:27:31.583" level="INFO">VALUE: [5.8986000000000455e-05, 5.893100000000165e-05, 5.809700000000001e-05, 5.8180000000001425e-05, 5.831899999999765e-05, 5.8777999999998914e-05, 5.884699999999729e-05, 5.8458000000000815e-05, 5.8972000000000885e-05, 5.886100000000033e-05, 5.8277999999998414e-05, 5.8305999999997554e-05, 5.8097999999999483e-05, 5.8958000000001315e-05, 5.8402000000002535e-05, 5.8848000000000233e-05, 5.8166000000001855e-05, 5.8485999999999955e-05, 5.809700000000001e-05, 5.809700000000001e-05, 5.8444000000001245e-05, 5.843100000000115e-05, 5.809700000000001e-05, 5.8513999999999095e-05, 5.8514000000002564e-05, 5.9000000000000025e-05, 5.893100000000165e-05, 5.862499999999965e-05, 5.9041999999998734e-05, 5.893100000000165e-05, 5.847299999999986e-05, 5.884700000000076e-05, 5.8929999999998706e-05, 5.852700000000266e-05, 5.83749999999994e-05, 5.8513999999999095e-05, 5.8222000000000135e-05, 5.886100000000033e-05, 5.9041999999998734e-05, 5.840300000000201e-05, 5.8694000000001495e-05, 5.8805999999998054e-05, 5.895900000000079e-05, 5.836099999999983e-05, 5.81810000000009e-05, 5.834700000000026e-05, 5.872300000000011e-05, 5.8097999999999483e-05, 5.8305999999997554e-05, 5.820900000000004e-05]</msg>
<status status="PASS" starttime="20201029 18:27:31.582" endtime="20201029 18:27:31.585"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:31.577" endtime="20201029 18:27:31.586"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:27:31.589" endtime="20201029 18:27:31.609"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:31.588" endtime="20201029 18:27:31.609"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:31.587" endtime="20201029 18:27:31.609"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:31.230" endtime="20201029 18:27:31.610"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:31.229" endtime="20201029 18:27:31.610"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:31.618" endtime="20201029 18:27:31.636"></status>
</kw>
<msg timestamp="20201029 18:27:31.637" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:31.617" endtime="20201029 18:27:31.637"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:31.639" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:31.638" endtime="20201029 18:27:31.639"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:31.640" endtime="20201029 18:27:31.642"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:31.614" endtime="20201029 18:27:31.642"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:31.612" endtime="20201029 18:27:31.643"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:31.649" endtime="20201029 18:27:31.934"></status>
</kw>
<msg timestamp="20201029 18:27:31.937" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019464333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019523875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:31.647" endtime="20201029 18:27:31.937"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:31.945" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019464333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019523875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:31.938" endtime="20201029 18:27:31.946"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:31.946" endtime="20201029 18:27:31.948"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:31.645" endtime="20201029 18:27:31.948"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:31.643" endtime="20201029 18:27:31.949"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:27:31.953" level="INFO">${RESULT} = [{'diff': 5.9541999999999234e-05}, {'diff': 5.966699999999936e-05}, {'diff': 5.9236000000000705e-05}, {'diff': 5.9708000000002065e-05}, {'diff': 5.961100000000108e-05}, {'diff': 5.965299999999979e-05}...</msg>
<status status="PASS" starttime="20201029 18:27:31.950" endtime="20201029 18:27:31.953"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:27:31.958" level="INFO">${ACCURACY} = {'diff': [5.9541999999999234e-05, 5.966699999999936e-05, 5.9236000000000705e-05, 5.9708000000002065e-05, 5.961100000000108e-05, 5.965299999999979e-05, 5.9569999999998374e-05, 5.9429999999999206e-05, 5...</msg>
<status status="PASS" starttime="20201029 18:27:31.954" endtime="20201029 18:27:31.958"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:27:31.962" level="INFO">NAME: accuracy-TIMER_SLEEP-47-philip</msg>
<status status="PASS" starttime="20201029 18:27:31.961" endtime="20201029 18:27:31.963"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:27:31.965" level="INFO">VALUE: [5.9541999999999234e-05, 5.966699999999936e-05, 5.9236000000000705e-05, 5.9708000000002065e-05, 5.961100000000108e-05, 5.965299999999979e-05, 5.9569999999998374e-05, 5.9429999999999206e-05, 5.980499999999958e-05, 5.9263999999999845e-05, 5.9637999999997277e-05, 5.983299999999872e-05, 5.981899999999915e-05, 6.005499999999983e-05, 5.959699999999804e-05, 5.9735999999997735e-05, 5.981899999999915e-05, 5.938899999999997e-05, 5.9277999999999414e-05, 5.991699999999961e-05, 5.9764000000000345e-05, 5.963900000000022e-05, 5.984699999999829e-05, 5.940299999999954e-05, 5.9541999999999234e-05, 5.966699999999936e-05, 5.9165999999999386e-05, 5.9263999999999845e-05, 5.9236000000000705e-05, 5.9694000000002495e-05, 5.9777999999999915e-05, 5.983299999999872e-05, 5.9222000000001135e-05, 5.916699999999886e-05, 5.986100000000133e-05, 5.918099999999843e-05, 5.988900000000047e-05, 5.9500000000000525e-05, 5.980500000000305e-05, 6.0000000000001025e-05, 5.937499999999693e-05, 5.915299999999929e-05, 5.962500000000065e-05, 5.987499999999743e-05, 5.9916000000000136e-05, 5.9472000000001385e-05, 5.9222000000001135e-05, 5.9472000000001385e-05, 5.9235999999997235e-05, 5.934700000000126e-05]</msg>
<status status="PASS" starttime="20201029 18:27:31.963" endtime="20201029 18:27:31.965"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:31.959" endtime="20201029 18:27:31.966"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:27:31.970" endtime="20201029 18:27:31.989"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:31.968" endtime="20201029 18:27:31.989"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:31.967" endtime="20201029 18:27:31.990"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:31.611" endtime="20201029 18:27:31.990"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:31.610" endtime="20201029 18:27:31.990"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:31.999" endtime="20201029 18:27:32.015"></status>
</kw>
<msg timestamp="20201029 18:27:32.015" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:31.997" endtime="20201029 18:27:32.016"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:32.018" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:32.016" endtime="20201029 18:27:32.018"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:32.019" endtime="20201029 18:27:32.020"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:31.995" endtime="20201029 18:27:32.021"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:31.993" endtime="20201029 18:27:32.021"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:32.028" endtime="20201029 18:27:32.316"></status>
</kw>
<msg timestamp="20201029 18:27:32.319" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019525319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019586139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:32.026" endtime="20201029 18:27:32.319"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:32.327" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019525319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019586139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:32.320" endtime="20201029 18:27:32.327"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:32.328" endtime="20201029 18:27:32.330"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:32.024" endtime="20201029 18:27:32.330"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:32.022" endtime="20201029 18:27:32.331"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:27:32.335" level="INFO">${RESULT} = [{'diff': 6.0819999999999624e-05}, {'diff': 6.0749999999998305e-05}, {'diff': 6.0792000000000485e-05}, {'diff': 6.0777999999997445e-05}, {'diff': 6.0249999999997805e-05}, {'diff': 6.020899999999857e-0...</msg>
<status status="PASS" starttime="20201029 18:27:32.331" endtime="20201029 18:27:32.335"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:27:32.339" level="INFO">${ACCURACY} = {'diff': [6.0819999999999624e-05, 6.0749999999998305e-05, 6.0792000000000485e-05, 6.0777999999997445e-05, 6.0249999999997805e-05, 6.020899999999857e-05, 6.06949999999995e-05, 6.068099999999993e-05, 6....</msg>
<status status="PASS" starttime="20201029 18:27:32.336" endtime="20201029 18:27:32.339"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:27:32.343" level="INFO">NAME: accuracy-TIMER_SLEEP-48-philip</msg>
<status status="PASS" starttime="20201029 18:27:32.342" endtime="20201029 18:27:32.343"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:27:32.345" level="INFO">VALUE: [6.0819999999999624e-05, 6.0749999999998305e-05, 6.0792000000000485e-05, 6.0777999999997445e-05, 6.0249999999997805e-05, 6.020899999999857e-05, 6.06949999999995e-05, 6.068099999999993e-05, 6.079100000000101e-05, 6.0457999999999346e-05, 6.084699999999929e-05, 6.0763999999997875e-05, 6.062499999999818e-05, 6.0194000000002995e-05, 6.0236000000001705e-05, 6.084699999999929e-05, 6.1027999999997695e-05, 6.084699999999929e-05, 6.0985999999998985e-05, 6.045900000000229e-05, 6.06949999999995e-05, 6.0291999999999984e-05, 6.055500000000033e-05, 6.054100000000076e-05, 6.0416000000000636e-05, 6.0915999999997666e-05, 6.086099999999886e-05, 6.080500000000058e-05, 6.05689999999999e-05, 6.0749999999998305e-05, 6.0999999999998555e-05, 6.0763999999997875e-05, 6.063899999999775e-05, 6.009699999999854e-05, 6.0194999999999e-05, 6.036099999999836e-05, 6.020899999999857e-05, 6.102700000000169e-05, 6.016699999999986e-05, 6.098700000000193e-05, 6.0930000000000706e-05, 6.0416000000000636e-05, 6.0388000000001496e-05, 6.0207999999999096e-05, 6.105499999999736e-05, 6.084699999999929e-05, 6.0764000000001345e-05, 6.036099999999836e-05, 6.0264000000000845e-05, 6.059700000000251e-05]</msg>
<status status="PASS" starttime="20201029 18:27:32.344" endtime="20201029 18:27:32.346"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:32.339" endtime="20201029 18:27:32.347"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:27:32.350" endtime="20201029 18:27:32.370"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:32.349" endtime="20201029 18:27:32.370"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:32.348" endtime="20201029 18:27:32.371"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:31.991" endtime="20201029 18:27:32.371"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:31.991" endtime="20201029 18:27:32.371"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:32.380" endtime="20201029 18:27:32.398"></status>
</kw>
<msg timestamp="20201029 18:27:32.399" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:32.378" endtime="20201029 18:27:32.399"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:32.401" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:32.400" endtime="20201029 18:27:32.401"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:32.402" endtime="20201029 18:27:32.404"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:32.376" endtime="20201029 18:27:32.404"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:32.373" endtime="20201029 18:27:32.405"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:32.411" endtime="20201029 18:27:32.696"></status>
</kw>
<msg timestamp="20201029 18:27:32.699" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020441931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02050325, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:27:32.409" endtime="20201029 18:27:32.700"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:32.707" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020441931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02050325, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:27:32.700" endtime="20201029 18:27:32.708"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:32.708" endtime="20201029 18:27:32.710"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:32.407" endtime="20201029 18:27:32.711"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:32.405" endtime="20201029 18:27:32.711"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:27:32.715" level="INFO">${RESULT} = [{'diff': 6.131900000000065e-05}, {'diff': 6.181899999999768e-05}, {'diff': 6.208300000000097e-05}, {'diff': 6.197199999999695e-05}, {'diff': 6.180500000000158e-05}, {'diff': 6.140300000000154e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:27:32.712" endtime="20201029 18:27:32.715"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:27:32.719" level="INFO">${ACCURACY} = {'diff': [6.131900000000065e-05, 6.181899999999768e-05, 6.208300000000097e-05, 6.197199999999695e-05, 6.180500000000158e-05, 6.140300000000154e-05, 6.20140000000026e-05, 6.148599999999949e-05, 6.12909...</msg>
<status status="PASS" starttime="20201029 18:27:32.716" endtime="20201029 18:27:32.719"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:27:32.723" level="INFO">NAME: accuracy-TIMER_SLEEP-49-philip</msg>
<status status="PASS" starttime="20201029 18:27:32.722" endtime="20201029 18:27:32.724"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:27:32.726" level="INFO">VALUE: [6.131900000000065e-05, 6.181899999999768e-05, 6.208300000000097e-05, 6.197199999999695e-05, 6.180500000000158e-05, 6.140300000000154e-05, 6.20140000000026e-05, 6.148599999999949e-05, 6.129099999999804e-05, 6.129200000000098e-05, 6.184700000000029e-05, 6.120899999999957e-05, 6.129200000000098e-05, 6.191700000000161e-05, 6.191700000000161e-05, 6.151299999999915e-05, 6.156899999999743e-05, 6.205499999999836e-05, 6.179099999999854e-05, 6.191599999999867e-05, 6.162499999999918e-05, 6.169399999999756e-05, 6.1888999999999e-05, 6.193100000000118e-05, 6.173599999999974e-05, 6.108399999999944e-05, 6.205500000000183e-05, 6.169499999999703e-05, 6.123599999999924e-05, 6.112499999999868e-05, 6.115300000000129e-05, 6.195800000000085e-05, 6.197200000000042e-05, 6.130499999999761e-05, 6.133300000000022e-05, 6.194400000000128e-05, 6.172200000000017e-05, 6.144500000000025e-05, 6.193100000000118e-05, 6.1888999999999e-05, 6.180600000000105e-05, 6.116700000000086e-05, 6.177799999999845e-05, 6.180600000000105e-05, 6.111099999999911e-05, 6.13339999999997e-05, 6.137499999999893e-05, 6.152699999999872e-05, 6.138799999999903e-05, 6.163799999999928e-05]</msg>
<status status="PASS" starttime="20201029 18:27:32.724" endtime="20201029 18:27:32.727"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:32.720" endtime="20201029 18:27:32.728"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:27:32.732" endtime="20201029 18:27:32.751"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:32.730" endtime="20201029 18:27:32.752"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:32.729" endtime="20201029 18:27:32.752"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:32.372" endtime="20201029 18:27:32.752"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:32.371" endtime="20201029 18:27:32.752"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:32.761" endtime="20201029 18:27:32.779"></status>
</kw>
<msg timestamp="20201029 18:27:32.779" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:32.759" endtime="20201029 18:27:32.780"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:32.782" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:32.780" endtime="20201029 18:27:32.782"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:32.783" endtime="20201029 18:27:32.784"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:32.757" endtime="20201029 18:27:32.785"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:32.755" endtime="20201029 18:27:32.785"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:32.792" endtime="20201029 18:27:33.078"></status>
</kw>
<msg timestamp="20201029 18:27:33.081" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019551458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019613806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:32.790" endtime="20201029 18:27:33.081"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:33.089" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019551458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019613806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:33.082" endtime="20201029 18:27:33.089"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:33.090" endtime="20201029 18:27:33.091"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:32.788" endtime="20201029 18:27:33.092"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:32.786" endtime="20201029 18:27:33.092"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:27:33.096" level="INFO">${RESULT} = [{'diff': 6.234800000000026e-05}, {'diff': 6.245800000000135e-05}, {'diff': 6.287500000000043e-05}, {'diff': 6.304099999999979e-05}, {'diff': 6.300000000000056e-05}, {'diff': 6.262500000000018e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:27:33.093" endtime="20201029 18:27:33.096"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:27:33.101" level="INFO">${ACCURACY} = {'diff': [6.234800000000026e-05, 6.245800000000135e-05, 6.287500000000043e-05, 6.304099999999979e-05, 6.300000000000056e-05, 6.262500000000018e-05, 6.233300000000122e-05, 6.301400000000013e-05, 6.2458...</msg>
<status status="PASS" starttime="20201029 18:27:33.097" endtime="20201029 18:27:33.101"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:27:33.105" level="INFO">NAME: accuracy-TIMER_SLEEP-50-philip</msg>
<status status="PASS" starttime="20201029 18:27:33.104" endtime="20201029 18:27:33.106"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:27:33.108" level="INFO">VALUE: [6.234800000000026e-05, 6.245800000000135e-05, 6.287500000000043e-05, 6.304099999999979e-05, 6.300000000000056e-05, 6.262500000000018e-05, 6.233300000000122e-05, 6.301400000000013e-05, 6.245800000000135e-05, 6.262500000000018e-05, 6.223600000000024e-05, 6.30279999999997e-05, 6.286100000000086e-05, 6.30699999999984e-05, 6.297299999999742e-05, 6.247300000000039e-05, 6.268100000000193e-05, 6.233399999999722e-05, 6.234700000000079e-05, 6.25690000000019e-05, 6.294400000000228e-05, 6.2889e-05, 6.307000000000187e-05, 6.2889e-05, 6.269399999999856e-05, 6.301400000000013e-05, 6.257000000000137e-05, 6.245800000000135e-05, 6.25279999999992e-05, 6.25279999999992e-05, 6.226400000000284e-05, 6.227800000000241e-05, 6.281900000000215e-05, 6.29439999999988e-05, 6.233300000000122e-05, 6.233300000000122e-05, 6.234700000000079e-05, 6.215199999999935e-05, 6.237499999999993e-05, 6.290300000000304e-05, 6.216699999999839e-05, 6.229200000000198e-05, 6.266699999999889e-05, 6.233299999999775e-05, 6.227800000000241e-05, 6.299999999999709e-05, 6.287500000000043e-05, 6.251399999999963e-05, 6.245900000000082e-05, 6.267999999999899e-05]</msg>
<status status="PASS" starttime="20201029 18:27:33.107" endtime="20201029 18:27:33.109"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:33.102" endtime="20201029 18:27:33.109"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:27:33.113" endtime="20201029 18:27:33.132"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:33.111" endtime="20201029 18:27:33.133"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:33.110" endtime="20201029 18:27:33.133"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:32.753" endtime="20201029 18:27:33.133"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:32.753" endtime="20201029 18:27:33.134"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:33.142" endtime="20201029 18:27:33.160"></status>
</kw>
<msg timestamp="20201029 18:27:33.160" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:33.140" endtime="20201029 18:27:33.161"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:33.163" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:33.162" endtime="20201029 18:27:33.163"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:33.164" endtime="20201029 18:27:33.166"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:33.138" endtime="20201029 18:27:33.166"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:33.136" endtime="20201029 18:27:33.167"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:33.173" endtime="20201029 18:27:33.460"></status>
</kw>
<msg timestamp="20201029 18:27:33.463" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019478681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0195425, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:27:33.171" endtime="20201029 18:27:33.463"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:33.471" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019478681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0195425, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:27:33.464" endtime="20201029 18:27:33.472"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:33.472" endtime="20201029 18:27:33.474"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:33.169" endtime="20201029 18:27:33.475"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:33.167" endtime="20201029 18:27:33.475"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:27:33.479" level="INFO">${RESULT} = [{'diff': 6.381899999999968e-05}, {'diff': 6.369399999999956e-05}, {'diff': 6.361200000000108e-05}, {'diff': 6.359699999999857e-05}, {'diff': 6.336100000000136e-05}, {'diff': 6.341699999999964e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:27:33.476" endtime="20201029 18:27:33.479"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:27:33.483" level="INFO">${ACCURACY} = {'diff': [6.381899999999968e-05, 6.369399999999956e-05, 6.361200000000108e-05, 6.359699999999857e-05, 6.336100000000136e-05, 6.341699999999964e-05, 6.397200000000242e-05, 6.336199999999736e-05, 6.3083...</msg>
<status status="PASS" starttime="20201029 18:27:33.480" endtime="20201029 18:27:33.484"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:27:33.488" level="INFO">NAME: accuracy-TIMER_SLEEP-51-philip</msg>
<status status="PASS" starttime="20201029 18:27:33.487" endtime="20201029 18:27:33.489"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:27:33.491" level="INFO">VALUE: [6.381899999999968e-05, 6.369399999999956e-05, 6.361200000000108e-05, 6.359699999999857e-05, 6.336100000000136e-05, 6.341699999999964e-05, 6.397200000000242e-05, 6.336199999999736e-05, 6.308399999999798e-05, 6.384800000000176e-05, 6.317999999999949e-05, 6.356899999999943e-05, 6.384700000000229e-05, 6.373599999999827e-05, 6.330499999999961e-05, 6.373599999999827e-05, 6.331899999999918e-05, 6.379200000000002e-05, 6.324999999999734e-05, 6.376400000000088e-05, 6.33890000000005e-05, 6.340300000000007e-05, 6.373599999999827e-05, 6.366699999999989e-05, 6.329199999999952e-05, 6.380599999999959e-05, 6.334699999999832e-05, 6.404100000000079e-05, 6.308300000000197e-05, 6.356899999999943e-05, 6.367999999999999e-05, 6.362499999999771e-05, 6.383299999999925e-05, 6.384700000000229e-05, 6.35699999999989e-05, 6.32500000000008e-05, 6.384800000000176e-05, 6.394499999999928e-05, 6.35699999999989e-05, 6.384700000000229e-05, 6.369399999999956e-05, 6.395900000000232e-05, 6.380500000000011e-05, 6.384700000000229e-05, 6.311100000000111e-05, 6.311099999999764e-05, 6.404200000000027e-05, 6.345799999999888e-05, 6.365300000000032e-05, 6.37639999999974e-05]</msg>
<status status="PASS" starttime="20201029 18:27:33.489" endtime="20201029 18:27:33.492"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:33.484" endtime="20201029 18:27:33.493"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:27:33.496" endtime="20201029 18:27:33.516"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:33.495" endtime="20201029 18:27:33.516"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:33.493" endtime="20201029 18:27:33.516"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:33.134" endtime="20201029 18:27:33.517"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:33.134" endtime="20201029 18:27:33.517"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:33.526" endtime="20201029 18:27:33.543"></status>
</kw>
<msg timestamp="20201029 18:27:33.543" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:33.524" endtime="20201029 18:27:33.543"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:33.545" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:33.544" endtime="20201029 18:27:33.546"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:33.546" endtime="20201029 18:27:33.548"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:33.521" endtime="20201029 18:27:33.549"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:33.519" endtime="20201029 18:27:33.549"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:33.555" endtime="20201029 18:27:33.841"></status>
</kw>
<msg timestamp="20201029 18:27:33.844" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020570097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020634708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:33.554" endtime="20201029 18:27:33.845"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:33.852" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020570097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020634708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:33.845" endtime="20201029 18:27:33.853"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:33.854" endtime="20201029 18:27:33.855"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:33.551" endtime="20201029 18:27:33.856"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:33.550" endtime="20201029 18:27:33.856"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:27:33.860" level="INFO">${RESULT} = [{'diff': 6.461100000000261e-05}, {'diff': 6.502799999999823e-05}, {'diff': 6.470800000000013e-05}, {'diff': 6.463899999999828e-05}, {'diff': 6.454100000000129e-05}, {'diff': 6.477800000000145e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:27:33.857" endtime="20201029 18:27:33.860"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:27:33.864" level="INFO">${ACCURACY} = {'diff': [6.461100000000261e-05, 6.502799999999823e-05, 6.470800000000013e-05, 6.463899999999828e-05, 6.454100000000129e-05, 6.477800000000145e-05, 6.481900000000068e-05, 6.492999999999777e-05, 6.4152...</msg>
<status status="PASS" starttime="20201029 18:27:33.861" endtime="20201029 18:27:33.864"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:27:33.868" level="INFO">NAME: accuracy-TIMER_SLEEP-52-philip</msg>
<status status="PASS" starttime="20201029 18:27:33.867" endtime="20201029 18:27:33.869"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:27:33.871" level="INFO">VALUE: [6.461100000000261e-05, 6.502799999999823e-05, 6.470800000000013e-05, 6.463899999999828e-05, 6.454100000000129e-05, 6.477800000000145e-05, 6.481900000000068e-05, 6.492999999999777e-05, 6.415299999999735e-05, 6.481899999999721e-05, 6.497199999999995e-05, 6.447199999999945e-05, 6.480600000000059e-05, 6.429099999999757e-05, 6.505600000000084e-05, 6.458399999999948e-05, 6.482000000000016e-05, 6.466599999999795e-05, 6.436200000000183e-05, 6.411099999999864e-05, 6.477700000000197e-05, 6.488899999999853e-05, 6.505499999999789e-05, 6.463900000000175e-05, 6.440300000000107e-05, 6.484699999999982e-05, 6.477800000000145e-05, 6.494500000000028e-05, 6.461099999999914e-05, 6.42639999999979e-05, 6.418099999999996e-05, 6.427800000000095e-05, 6.458399999999948e-05, 6.44440000000003e-05, 6.433299999999975e-05, 6.436099999999889e-05, 6.45280000000012e-05, 6.429099999999757e-05, 6.447199999999945e-05, 6.429100000000104e-05, 6.44029999999976e-05, 6.463900000000175e-05, 6.427799999999748e-05, 6.477800000000145e-05, 6.498599999999952e-05, 6.482000000000016e-05, 6.473599999999927e-05, 6.436099999999889e-05, 6.415300000000082e-05, 6.501300000000265e-05]</msg>
<status status="PASS" starttime="20201029 18:27:33.870" endtime="20201029 18:27:33.873"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:33.865" endtime="20201029 18:27:33.873"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:27:33.877" endtime="20201029 18:27:33.896"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:33.875" endtime="20201029 18:27:33.897"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:33.874" endtime="20201029 18:27:33.897"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:33.518" endtime="20201029 18:27:33.897"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:33.517" endtime="20201029 18:27:33.897"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:33.906" endtime="20201029 18:27:33.923"></status>
</kw>
<msg timestamp="20201029 18:27:33.923" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:33.904" endtime="20201029 18:27:33.924"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:33.926" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:33.925" endtime="20201029 18:27:33.926"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:33.927" endtime="20201029 18:27:33.928"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:33.902" endtime="20201029 18:27:33.929"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:33.900" endtime="20201029 18:27:33.929"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:33.936" endtime="20201029 18:27:34.220"></status>
</kw>
<msg timestamp="20201029 18:27:34.223" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019969472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02003525, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:27:33.934" endtime="20201029 18:27:34.223"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:34.231" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019969472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02003525, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:27:34.224" endtime="20201029 18:27:34.231"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:34.232" endtime="20201029 18:27:34.234"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:33.932" endtime="20201029 18:27:34.234"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:33.930" endtime="20201029 18:27:34.235"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:27:34.239" level="INFO">${RESULT} = [{'diff': 6.577800000000245e-05}, {'diff': 6.515300000000182e-05}, {'diff': 6.587499999999996e-05}, {'diff': 6.511099999999964e-05}, {'diff': 6.55700000000009e-05}, {'diff': 6.598600000000052e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:27:34.235" endtime="20201029 18:27:34.239"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:27:34.244" level="INFO">${ACCURACY} = {'diff': [6.577800000000245e-05, 6.515300000000182e-05, 6.587499999999996e-05, 6.511099999999964e-05, 6.55700000000009e-05, 6.598600000000052e-05, 6.57090000000006e-05, 6.593000000000224e-05, 6.558300...</msg>
<status status="PASS" starttime="20201029 18:27:34.239" endtime="20201029 18:27:34.244"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:27:34.248" level="INFO">NAME: accuracy-TIMER_SLEEP-53-philip</msg>
<status status="PASS" starttime="20201029 18:27:34.247" endtime="20201029 18:27:34.248"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:27:34.250" level="INFO">VALUE: [6.577800000000245e-05, 6.515300000000182e-05, 6.587499999999996e-05, 6.511099999999964e-05, 6.55700000000009e-05, 6.598600000000052e-05, 6.57090000000006e-05, 6.593000000000224e-05, 6.5583000000001e-05, 6.505500000000136e-05, 6.556900000000143e-05, 6.523599999999977e-05, 6.57639999999994e-05, 6.573600000000027e-05, 6.541700000000164e-05, 6.602799999999923e-05, 6.519400000000106e-05, 6.52500000000028e-05, 6.586100000000039e-05, 6.608400000000098e-05, 6.600000000000009e-05, 6.52500000000028e-05, 6.562499999999971e-05, 6.579199999999855e-05, 6.558400000000048e-05, 6.524999999999934e-05, 6.565200000000285e-05, 6.602699999999975e-05, 6.563899999999928e-05, 6.602799999999923e-05, 6.563899999999928e-05, 6.511099999999964e-05, 6.544399999999784e-05, 6.512499999999921e-05, 6.50700000000004e-05, 6.529199999999805e-05, 6.60419999999988e-05, 6.533400000000023e-05, 6.587499999999996e-05, 6.600000000000009e-05, 6.590199999999963e-05, 6.540199999999913e-05, 6.565199999999938e-05, 6.59159999999992e-05, 6.511099999999964e-05, 6.562499999999971e-05, 6.552799999999873e-05, 6.511100000000311e-05, 6.605600000000184e-05, 6.597200000000095e-05]</msg>
<status status="PASS" starttime="20201029 18:27:34.249" endtime="20201029 18:27:34.251"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:34.244" endtime="20201029 18:27:34.252"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:27:34.255" endtime="20201029 18:27:34.275"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:34.254" endtime="20201029 18:27:34.275"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:34.253" endtime="20201029 18:27:34.276"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:33.898" endtime="20201029 18:27:34.276"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:33.898" endtime="20201029 18:27:34.276"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:34.285" endtime="20201029 18:27:34.303"></status>
</kw>
<msg timestamp="20201029 18:27:34.303" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:34.283" endtime="20201029 18:27:34.303"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:34.305" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:34.304" endtime="20201029 18:27:34.306"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:34.307" endtime="20201029 18:27:34.308"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:34.280" endtime="20201029 18:27:34.309"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:34.278" endtime="20201029 18:27:34.309"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:34.315" endtime="20201029 18:27:34.602"></status>
</kw>
<msg timestamp="20201029 18:27:34.605" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019522903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019589417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:34.314" endtime="20201029 18:27:34.605"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:34.613" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019522903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019589417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:34.606" endtime="20201029 18:27:34.614"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:34.614" endtime="20201029 18:27:34.616"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:34.311" endtime="20201029 18:27:34.616"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:34.310" endtime="20201029 18:27:34.617"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:27:34.621" level="INFO">${RESULT} = [{'diff': 6.651400000000016e-05}, {'diff': 6.668099999999899e-05}, {'diff': 6.638800000000056e-05}, {'diff': 6.686099999999792e-05}, {'diff': 6.638800000000056e-05}, {'diff': 6.699999999999762e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:27:34.618" endtime="20201029 18:27:34.621"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:27:34.625" level="INFO">${ACCURACY} = {'diff': [6.651400000000016e-05, 6.668099999999899e-05, 6.638800000000056e-05, 6.686099999999792e-05, 6.638800000000056e-05, 6.699999999999762e-05, 6.611100000000064e-05, 6.661099999999767e-05, 6.6999...</msg>
<status status="PASS" starttime="20201029 18:27:34.622" endtime="20201029 18:27:34.625"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:27:34.629" level="INFO">NAME: accuracy-TIMER_SLEEP-54-philip</msg>
<status status="PASS" starttime="20201029 18:27:34.628" endtime="20201029 18:27:34.630"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:27:34.632" level="INFO">VALUE: [6.651400000000016e-05, 6.668099999999899e-05, 6.638800000000056e-05, 6.686099999999792e-05, 6.638800000000056e-05, 6.699999999999762e-05, 6.611100000000064e-05, 6.661099999999767e-05, 6.699999999999762e-05, 6.69030000000001e-05, 6.683299999999878e-05, 6.70419999999998e-05, 6.681999999999869e-05, 6.647200000000145e-05, 6.620899999999763e-05, 6.613899999999978e-05, 6.677799999999998e-05, 6.645800000000188e-05, 6.672300000000117e-05, 6.680499999999964e-05, 6.695799999999891e-05, 6.662499999999724e-05, 6.662500000000071e-05, 6.667999999999952e-05, 6.705599999999937e-05, 6.631899999999871e-05, 6.697199999999848e-05, 6.613899999999978e-05, 6.645800000000188e-05, 6.62220000000012e-05, 6.636100000000089e-05, 6.679199999999955e-05, 6.705599999999937e-05, 6.636100000000089e-05, 6.634700000000132e-05, 6.629099999999957e-05, 6.702800000000023e-05, 6.636099999999742e-05, 6.638900000000003e-05, 6.699999999999762e-05, 6.681899999999921e-05, 6.669499999999856e-05, 6.708400000000198e-05, 6.616699999999892e-05, 6.65419999999993e-05, 6.615299999999935e-05, 6.62639999999999e-05, 6.644499999999831e-05, 6.669500000000203e-05, 6.697199999999848e-05]</msg>
<status status="PASS" starttime="20201029 18:27:34.630" endtime="20201029 18:27:34.633"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:34.626" endtime="20201029 18:27:34.633"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:27:34.637" endtime="20201029 18:27:34.656"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:34.635" endtime="20201029 18:27:34.657"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:34.634" endtime="20201029 18:27:34.657"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:34.277" endtime="20201029 18:27:34.657"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:34.276" endtime="20201029 18:27:34.657"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:34.666" endtime="20201029 18:27:34.685"></status>
</kw>
<msg timestamp="20201029 18:27:34.685" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:34.664" endtime="20201029 18:27:34.685"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:34.687" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:34.686" endtime="20201029 18:27:34.688"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:34.689" endtime="20201029 18:27:34.690"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:34.662" endtime="20201029 18:27:34.691"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:34.660" endtime="20201029 18:27:34.691"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:34.697" endtime="20201029 18:27:34.982"></status>
</kw>
<msg timestamp="20201029 18:27:34.985" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021184042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02125175, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:27:34.696" endtime="20201029 18:27:34.985"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:34.993" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021184042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02125175, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:27:34.986" endtime="20201029 18:27:34.994"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:34.994" endtime="20201029 18:27:34.996"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:34.693" endtime="20201029 18:27:34.996"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:34.692" endtime="20201029 18:27:34.997"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:27:35.001" level="INFO">${RESULT} = [{'diff': 6.770799999999966e-05}, {'diff': 6.786099999999892e-05}, {'diff': 6.731999999999919e-05}, {'diff': 6.795899999999938e-05}, {'diff': 6.77090000000026e-05}, {'diff': 6.736099999999842e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:27:34.998" endtime="20201029 18:27:35.001"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:27:35.005" level="INFO">${ACCURACY} = {'diff': [6.770799999999966e-05, 6.786099999999892e-05, 6.731999999999919e-05, 6.795899999999938e-05, 6.77090000000026e-05, 6.736099999999842e-05, 6.761100000000214e-05, 6.749999999999812e-05, 6.71250...</msg>
<status status="PASS" starttime="20201029 18:27:35.002" endtime="20201029 18:27:35.005"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:27:35.009" level="INFO">NAME: accuracy-TIMER_SLEEP-55-philip</msg>
<status status="PASS" starttime="20201029 18:27:35.008" endtime="20201029 18:27:35.010"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:27:35.012" level="INFO">VALUE: [6.770799999999966e-05, 6.786099999999892e-05, 6.731999999999919e-05, 6.795899999999938e-05, 6.77090000000026e-05, 6.736099999999842e-05, 6.761100000000214e-05, 6.749999999999812e-05, 6.712500000000121e-05, 6.711099999999817e-05, 6.805499999999742e-05, 6.787500000000196e-05, 6.709700000000207e-05, 6.798599999999905e-05, 6.711099999999817e-05, 6.729200000000005e-05, 6.787499999999849e-05, 6.730599999999962e-05, 6.79169999999972e-05, 6.768099999999999e-05, 6.775000000000184e-05, 6.790199999999816e-05, 6.74169999999967e-05, 6.788900000000153e-05, 6.77359999999988e-05, 6.762499999999824e-05, 6.769400000000009e-05, 6.777799999999751e-05, 6.77359999999988e-05, 6.765300000000085e-05, 6.741700000000017e-05, 6.808300000000003e-05, 6.780600000000012e-05, 6.80420000000008e-05, 6.784799999999883e-05, 6.776399999999794e-05, 6.744399999999984e-05, 6.774999999999837e-05, 6.79160000000012e-05, 6.781900000000021e-05, 6.763899999999781e-05, 6.709700000000207e-05, 6.716600000000045e-05, 6.79030000000011e-05, 6.802799999999776e-05, 6.724999999999787e-05, 6.708299999999903e-05, 6.794499999999981e-05, 6.768099999999999e-05, 6.718099999999949e-05]</msg>
<status status="PASS" starttime="20201029 18:27:35.010" endtime="20201029 18:27:35.013"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:35.006" endtime="20201029 18:27:35.014"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:27:35.018" endtime="20201029 18:27:35.037"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:35.016" endtime="20201029 18:27:35.037"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:35.015" endtime="20201029 18:27:35.038"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:34.658" endtime="20201029 18:27:35.038"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:34.658" endtime="20201029 18:27:35.038"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:35.047" endtime="20201029 18:27:35.065"></status>
</kw>
<msg timestamp="20201029 18:27:35.065" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:35.045" endtime="20201029 18:27:35.066"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:35.068" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:35.066" endtime="20201029 18:27:35.068"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:35.069" endtime="20201029 18:27:35.070"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:35.043" endtime="20201029 18:27:35.071"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:35.041" endtime="20201029 18:27:35.071"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:35.078" endtime="20201029 18:27:35.363"></status>
</kw>
<msg timestamp="20201029 18:27:35.366" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019533514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019601819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:35.076" endtime="20201029 18:27:35.366"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:35.374" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019533514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019601819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:35.367" endtime="20201029 18:27:35.374"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:35.375" endtime="20201029 18:27:35.376"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:35.074" endtime="20201029 18:27:35.377"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:35.072" endtime="20201029 18:27:35.377"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:27:35.381" level="INFO">${RESULT} = [{'diff': 6.830500000000114e-05}, {'diff': 6.861100000000314e-05}, {'diff': 6.845800000000041e-05}, {'diff': 6.856900000000096e-05}, {'diff': 6.905500000000189e-05}, {'diff': 6.82359999999993e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:27:35.378" endtime="20201029 18:27:35.382"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:27:35.386" level="INFO">${ACCURACY} = {'diff': [6.830500000000114e-05, 6.861100000000314e-05, 6.845800000000041e-05, 6.856900000000096e-05, 6.905500000000189e-05, 6.82359999999993e-05, 6.868000000000152e-05, 6.844399999999737e-05, 6.90140...</msg>
<status status="PASS" starttime="20201029 18:27:35.382" endtime="20201029 18:27:35.386"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:27:35.391" level="INFO">NAME: accuracy-TIMER_SLEEP-56-philip</msg>
<status status="PASS" starttime="20201029 18:27:35.390" endtime="20201029 18:27:35.391"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:27:35.393" level="INFO">VALUE: [6.830500000000114e-05, 6.861100000000314e-05, 6.845800000000041e-05, 6.856900000000096e-05, 6.905500000000189e-05, 6.82359999999993e-05, 6.868000000000152e-05, 6.844399999999737e-05, 6.901400000000266e-05, 6.897199999999701e-05, 6.847299999999945e-05, 6.830600000000062e-05, 6.863899999999881e-05, 6.833300000000028e-05, 6.862499999999924e-05, 6.883300000000078e-05, 6.852699999999878e-05, 6.905499999999842e-05, 6.870800000000066e-05, 6.899999999999962e-05, 6.811099999999917e-05, 6.908300000000103e-05, 6.851400000000216e-05, 6.837499999999899e-05, 6.890299999999863e-05, 6.869400000000109e-05, 6.856999999999697e-05, 6.862500000000271e-05, 6.888899999999906e-05, 6.851399999999869e-05, 6.852699999999878e-05, 6.811100000000264e-05, 6.887499999999949e-05, 6.895799999999744e-05, 6.901399999999919e-05, 6.830600000000062e-05, 6.824999999999887e-05, 6.893100000000124e-05, 6.851400000000216e-05, 6.829200000000105e-05, 6.873699999999927e-05, 6.862500000000271e-05, 6.819500000000006e-05, 6.874999999999937e-05, 6.873699999999927e-05, 6.85970000000001e-05, 6.874999999999937e-05, 6.868000000000152e-05, 6.894400000000134e-05, 6.877799999999851e-05]</msg>
<status status="PASS" starttime="20201029 18:27:35.392" endtime="20201029 18:27:35.394"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:35.387" endtime="20201029 18:27:35.394"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:27:35.398" endtime="20201029 18:27:35.417"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:35.397" endtime="20201029 18:27:35.418"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:35.395" endtime="20201029 18:27:35.418"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:35.039" endtime="20201029 18:27:35.419"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:35.039" endtime="20201029 18:27:35.419"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:35.427" endtime="20201029 18:27:35.446"></status>
</kw>
<msg timestamp="20201029 18:27:35.446" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:35.426" endtime="20201029 18:27:35.446"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:35.449" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:35.447" endtime="20201029 18:27:35.449"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:35.450" endtime="20201029 18:27:35.451"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:35.423" endtime="20201029 18:27:35.452"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:35.421" endtime="20201029 18:27:35.452"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:35.458" endtime="20201029 18:27:35.748"></status>
</kw>
<msg timestamp="20201029 18:27:35.751" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019456569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019526389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:35.457" endtime="20201029 18:27:35.751"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:35.759" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019456569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019526389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:35.752" endtime="20201029 18:27:35.759"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:35.760" endtime="20201029 18:27:35.762"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:35.454" endtime="20201029 18:27:35.763"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:35.453" endtime="20201029 18:27:35.763"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:27:35.768" level="INFO">${RESULT} = [{'diff': 6.982000000000169e-05}, {'diff': 6.969499999999809e-05}, {'diff': 7.004199999999933e-05}, {'diff': 6.99299999999993e-05}, {'diff': 6.926299999999996e-05}, {'diff': 6.986100000000092e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:27:35.764" endtime="20201029 18:27:35.768"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:27:35.775" level="INFO">${ACCURACY} = {'diff': [6.982000000000169e-05, 6.969499999999809e-05, 7.004199999999933e-05, 6.99299999999993e-05, 6.926299999999996e-05, 6.986100000000092e-05, 6.940299999999913e-05, 6.922200000000073e-05, 6.99860...</msg>
<status status="PASS" starttime="20201029 18:27:35.769" endtime="20201029 18:27:35.775"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:27:35.781" level="INFO">NAME: accuracy-TIMER_SLEEP-57-philip</msg>
<status status="PASS" starttime="20201029 18:27:35.779" endtime="20201029 18:27:35.782"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:27:35.786" level="INFO">VALUE: [6.982000000000169e-05, 6.969499999999809e-05, 7.004199999999933e-05, 6.99299999999993e-05, 6.926299999999996e-05, 6.986100000000092e-05, 6.940299999999913e-05, 6.922200000000073e-05, 6.998600000000105e-05, 6.94160000000027e-05, 6.95970000000011e-05, 6.956899999999849e-05, 6.913899999999931e-05, 6.952799999999926e-05, 6.968100000000199e-05, 6.966700000000242e-05, 6.934800000000033e-05, 6.963899999999981e-05, 6.920899999999716e-05, 6.952799999999926e-05, 6.945800000000141e-05, 6.919399999999812e-05, 7.000000000000062e-05, 6.97360000000008e-05, 6.92640000000029e-05, 7.005499999999942e-05, 6.95559999999984e-05, 6.980600000000212e-05, 7.002799999999976e-05, 6.915299999999888e-05, 6.952799999999926e-05, 6.937499999999999e-05, 6.909800000000008e-05, 6.927699999999953e-05, 6.909800000000008e-05, 6.995799999999844e-05, 7.000000000000062e-05, 6.96109999999972e-05, 6.934700000000085e-05, 6.998600000000105e-05, 6.956899999999849e-05, 6.95970000000011e-05, 6.916700000000192e-05, 6.983300000000178e-05, 6.936100000000042e-05, 6.998599999999758e-05, 6.937499999999999e-05, 7.004199999999933e-05, 6.962500000000024e-05, 6.913799999999984e-05]</msg>
<status status="PASS" starttime="20201029 18:27:35.783" endtime="20201029 18:27:35.787"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:35.776" endtime="20201029 18:27:35.788"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:27:35.794" endtime="20201029 18:27:35.814"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:35.792" endtime="20201029 18:27:35.815"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:35.790" endtime="20201029 18:27:35.815"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:35.420" endtime="20201029 18:27:35.816"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:35.419" endtime="20201029 18:27:35.816"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:35.825" endtime="20201029 18:27:35.844"></status>
</kw>
<msg timestamp="20201029 18:27:35.844" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:35.823" endtime="20201029 18:27:35.844"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:35.847" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:35.845" endtime="20201029 18:27:35.847"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:35.848" endtime="20201029 18:27:35.849"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:35.820" endtime="20201029 18:27:35.850"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:35.818" endtime="20201029 18:27:35.850"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:35.857" endtime="20201029 18:27:36.149"></status>
</kw>
<msg timestamp="20201029 18:27:36.157" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021160194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021230792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:35.855" endtime="20201029 18:27:36.157"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:36.176" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021160194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021230792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:36.159" endtime="20201029 18:27:36.177"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:36.178" endtime="20201029 18:27:36.182"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:35.853" endtime="20201029 18:27:36.183"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:35.851" endtime="20201029 18:27:36.184"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:27:36.193" level="INFO">${RESULT} = [{'diff': 7.05979999999981e-05}, {'diff': 7.008299999999856e-05}, {'diff': 7.025000000000087e-05}, {'diff': 7.090200000000116e-05}, {'diff': 7.050000000000112e-05}, {'diff': 7.079200000000008e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:27:36.186" endtime="20201029 18:27:36.193"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:27:36.202" level="INFO">${ACCURACY} = {'diff': [7.05979999999981e-05, 7.008299999999856e-05, 7.025000000000087e-05, 7.090200000000116e-05, 7.050000000000112e-05, 7.079200000000008e-05, 7.093099999999977e-05, 7.106999999999947e-05, 7.10550...</msg>
<status status="PASS" starttime="20201029 18:27:36.195" endtime="20201029 18:27:36.203"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:27:36.212" level="INFO">NAME: accuracy-TIMER_SLEEP-58-philip</msg>
<status status="PASS" starttime="20201029 18:27:36.210" endtime="20201029 18:27:36.213"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:27:36.217" level="INFO">VALUE: [7.05979999999981e-05, 7.008299999999856e-05, 7.025000000000087e-05, 7.090200000000116e-05, 7.050000000000112e-05, 7.079200000000008e-05, 7.093099999999977e-05, 7.106999999999947e-05, 7.105500000000042e-05, 7.073599999999833e-05, 7.080599999999965e-05, 7.066599999999701e-05, 7.065300000000038e-05, 7.108299999999956e-05, 7.047200000000198e-05, 7.094499999999934e-05, 7.019499999999859e-05, 7.069500000000256e-05, 7.036100000000142e-05, 7.033299999999881e-05, 7.083399999999879e-05, 7.049999999999765e-05, 7.093099999999977e-05, 7.054100000000035e-05, 7.065300000000038e-05, 7.030499999999967e-05, 7.088900000000106e-05, 7.087500000000149e-05, 7.026400000000044e-05, 7.030600000000262e-05, 7.050000000000112e-05, 7.011100000000117e-05, 7.043099999999927e-05, 7.036100000000142e-05, 7.07360000000018e-05, 7.029199999999958e-05, 7.094400000000334e-05, 7.068000000000005e-05, 7.087500000000149e-05, 7.079200000000008e-05, 7.058300000000253e-05, 7.088899999999759e-05, 7.104200000000033e-05, 7.027800000000001e-05, 7.033400000000176e-05, 7.033300000000228e-05, 7.062500000000124e-05, 7.036100000000142e-05, 7.026400000000044e-05, 7.091600000000073e-05]</msg>
<status status="PASS" starttime="20201029 18:27:36.214" endtime="20201029 18:27:36.221"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:36.204" endtime="20201029 18:27:36.222"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:27:36.226" endtime="20201029 18:27:36.246"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:36.224" endtime="20201029 18:27:36.246"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:36.223" endtime="20201029 18:27:36.246"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:35.817" endtime="20201029 18:27:36.247"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:35.816" endtime="20201029 18:27:36.247"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:36.256" endtime="20201029 18:27:36.273"></status>
</kw>
<msg timestamp="20201029 18:27:36.274" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:36.254" endtime="20201029 18:27:36.274"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:36.276" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:36.275" endtime="20201029 18:27:36.277"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:36.277" endtime="20201029 18:27:36.279"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:36.252" endtime="20201029 18:27:36.280"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:36.249" endtime="20201029 18:27:36.280"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:36.287" endtime="20201029 18:27:36.572"></status>
</kw>
<msg timestamp="20201029 18:27:36.575" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020067903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020139083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:36.285" endtime="20201029 18:27:36.576"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:36.584" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020067903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020139083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:36.577" endtime="20201029 18:27:36.584"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:36.585" endtime="20201029 18:27:36.587"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:36.283" endtime="20201029 18:27:36.587"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:36.281" endtime="20201029 18:27:36.588"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:27:36.592" level="INFO">${RESULT} = [{'diff': 7.117999999999708e-05}, {'diff': 7.130500000000067e-05}, {'diff': 7.119400000000012e-05}, {'diff': 7.175000000000237e-05}, {'diff': 7.201399999999872e-05}, {'diff': 7.126399999999797e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:27:36.588" endtime="20201029 18:27:36.592"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:27:36.597" level="INFO">${ACCURACY} = {'diff': [7.117999999999708e-05, 7.130500000000067e-05, 7.119400000000012e-05, 7.175000000000237e-05, 7.201399999999872e-05, 7.126399999999797e-05, 7.122199999999926e-05, 7.179200000000108e-05, 7.1457...</msg>
<status status="PASS" starttime="20201029 18:27:36.593" endtime="20201029 18:27:36.597"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:27:36.602" level="INFO">NAME: accuracy-TIMER_SLEEP-59-philip</msg>
<status status="PASS" starttime="20201029 18:27:36.600" endtime="20201029 18:27:36.602"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:27:36.604" level="INFO">VALUE: [7.117999999999708e-05, 7.130500000000067e-05, 7.119400000000012e-05, 7.175000000000237e-05, 7.201399999999872e-05, 7.126399999999797e-05, 7.122199999999926e-05, 7.179200000000108e-05, 7.145799999999994e-05, 7.151399999999822e-05, 7.152800000000126e-05, 7.134699999999938e-05, 7.187499999999902e-05, 7.161199999999868e-05, 7.204199999999786e-05, 7.133299999999981e-05, 7.16109999999992e-05, 7.154100000000135e-05, 7.169400000000062e-05, 7.108299999999956e-05, 7.194400000000087e-05, 7.113900000000131e-05, 7.131999999999972e-05, 7.151300000000221e-05, 7.12360000000023e-05, 7.158399999999954e-05, 7.112500000000174e-05, 7.16109999999992e-05, 7.115300000000088e-05, 7.122199999999926e-05, 7.141600000000123e-05, 7.177699999999856e-05, 7.130500000000067e-05, 7.170799999999672e-05, 7.120899999999916e-05, 7.201400000000219e-05, 7.188899999999859e-05, 7.17360000000028e-05, 7.148599999999908e-05, 7.145899999999941e-05, 7.126400000000144e-05, 7.20560000000009e-05, 7.172199999999976e-05, 7.111199999999818e-05, 7.172199999999976e-05, 7.133299999999981e-05, 7.197200000000001e-05, 7.172199999999976e-05, 7.138900000000156e-05, 7.15690000000005e-05]</msg>
<status status="PASS" starttime="20201029 18:27:36.603" endtime="20201029 18:27:36.605"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:36.598" endtime="20201029 18:27:36.605"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:27:36.609" endtime="20201029 18:27:36.629"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:36.608" endtime="20201029 18:27:36.629"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:36.606" endtime="20201029 18:27:36.630"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:36.248" endtime="20201029 18:27:36.630"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:36.247" endtime="20201029 18:27:36.630"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:36.639" endtime="20201029 18:27:36.657"></status>
</kw>
<msg timestamp="20201029 18:27:36.657" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:36.637" endtime="20201029 18:27:36.657"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:36.660" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:36.658" endtime="20201029 18:27:36.660"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:36.661" endtime="20201029 18:27:36.662"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:36.635" endtime="20201029 18:27:36.663"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:36.633" endtime="20201029 18:27:36.663"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:36.673" endtime="20201029 18:27:36.968"></status>
</kw>
<msg timestamp="20201029 18:27:36.975" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020155611, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:27:36.670" endtime="20201029 18:27:36.975"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:36.993" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020155611, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:27:36.977" endtime="20201029 18:27:36.993"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:36.995" endtime="20201029 18:27:36.998"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:36.666" endtime="20201029 18:27:36.999"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:36.664" endtime="20201029 18:27:37.000"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:27:37.009" level="INFO">${RESULT} = [{'diff': 7.26110000000002e-05}, {'diff': 7.266699999999848e-05}, {'diff': 7.288899999999959e-05}, {'diff': 7.263899999999934e-05}, {'diff': 7.251399999999922e-05}, {'diff': 7.263899999999934e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:27:37.002" endtime="20201029 18:27:37.009"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:27:37.018" level="INFO">${ACCURACY} = {'diff': [7.26110000000002e-05, 7.266699999999848e-05, 7.288899999999959e-05, 7.263899999999934e-05, 7.251399999999922e-05, 7.263899999999934e-05, 7.223599999999983e-05, 7.258400000000054e-05, 7.26529...</msg>
<status status="PASS" starttime="20201029 18:27:37.011" endtime="20201029 18:27:37.018"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:27:37.027" level="INFO">NAME: accuracy-TIMER_SLEEP-60-philip</msg>
<status status="PASS" starttime="20201029 18:27:37.025" endtime="20201029 18:27:37.027"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:27:37.032" level="INFO">VALUE: [7.26110000000002e-05, 7.266699999999848e-05, 7.288899999999959e-05, 7.263899999999934e-05, 7.251399999999922e-05, 7.263899999999934e-05, 7.223599999999983e-05, 7.258400000000054e-05, 7.265299999999891e-05, 7.291599999999926e-05, 7.269399999999815e-05, 7.25829999999976e-05, 7.302799999999929e-05, 7.29300000000023e-05, 7.254200000000183e-05, 7.290299999999916e-05, 7.276400000000294e-05, 7.240299999999866e-05, 7.233300000000081e-05, 7.280599999999818e-05, 7.229200000000158e-05, 7.230599999999768e-05, 7.287500000000002e-05, 7.269400000000162e-05, 7.245800000000094e-05, 7.295800000000144e-05, 7.306899999999852e-05, 7.293100000000177e-05, 7.286100000000045e-05, 7.231900000000124e-05, 7.265299999999891e-05, 7.227799999999854e-05, 7.290299999999916e-05, 7.219400000000112e-05, 7.297200000000101e-05, 7.304199999999886e-05, 7.29300000000023e-05, 7.27369999999998e-05, 7.270800000000119e-05, 7.23049999999982e-05, 7.236099999999995e-05, 7.273600000000033e-05, 7.279200000000208e-05, 7.234700000000038e-05, 7.287500000000002e-05, 7.280599999999818e-05, 7.302800000000276e-05, 7.298600000000058e-05, 7.227699999999906e-05, 7.298600000000058e-05]</msg>
<status status="PASS" starttime="20201029 18:27:37.029" endtime="20201029 18:27:37.033"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:37.019" endtime="20201029 18:27:37.034"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:27:37.037" endtime="20201029 18:27:37.057"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:37.036" endtime="20201029 18:27:37.057"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:37.035" endtime="20201029 18:27:37.058"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:36.631" endtime="20201029 18:27:37.058"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:36.630" endtime="20201029 18:27:37.058"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:37.067" endtime="20201029 18:27:37.085"></status>
</kw>
<msg timestamp="20201029 18:27:37.086" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:37.065" endtime="20201029 18:27:37.086"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:37.088" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:37.087" endtime="20201029 18:27:37.089"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:37.089" endtime="20201029 18:27:37.091"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:37.062" endtime="20201029 18:27:37.091"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:37.060" endtime="20201029 18:27:37.092"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:37.098" endtime="20201029 18:27:37.384"></status>
</kw>
<msg timestamp="20201029 18:27:37.387" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020486903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020560792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:37.097" endtime="20201029 18:27:37.387"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:37.395" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020486903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020560792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:37.388" endtime="20201029 18:27:37.395"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:37.396" endtime="20201029 18:27:37.398"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:37.094" endtime="20201029 18:27:37.398"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:37.092" endtime="20201029 18:27:37.399"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:27:37.403" level="INFO">${RESULT} = [{'diff': 7.388900000000059e-05}, {'diff': 7.355500000000292e-05}, {'diff': 7.331999999999825e-05}, {'diff': 7.327800000000301e-05}, {'diff': 7.302699999999981e-05}, {'diff': 7.362500000000077e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:27:37.399" endtime="20201029 18:27:37.403"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:27:37.407" level="INFO">${ACCURACY} = {'diff': [7.388900000000059e-05, 7.355500000000292e-05, 7.331999999999825e-05, 7.327800000000301e-05, 7.302699999999981e-05, 7.362500000000077e-05, 7.388899999999712e-05, 7.400000000000115e-05, 7.4054...</msg>
<status status="PASS" starttime="20201029 18:27:37.404" endtime="20201029 18:27:37.407"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:27:37.411" level="INFO">NAME: accuracy-TIMER_SLEEP-61-philip</msg>
<status status="PASS" starttime="20201029 18:27:37.410" endtime="20201029 18:27:37.411"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:27:37.414" level="INFO">VALUE: [7.388900000000059e-05, 7.355500000000292e-05, 7.331999999999825e-05, 7.327800000000301e-05, 7.302699999999981e-05, 7.362500000000077e-05, 7.388899999999712e-05, 7.400000000000115e-05, 7.405499999999995e-05, 7.313899999999984e-05, 7.351400000000022e-05, 7.380599999999918e-05, 7.334699999999791e-05, 7.312500000000027e-05, 7.37500000000009e-05, 7.334799999999739e-05, 7.392999999999983e-05, 7.409699999999866e-05, 7.338800000000062e-05, 7.392999999999983e-05, 7.369400000000262e-05, 7.319400000000212e-05, 7.36249999999973e-05, 7.361099999999773e-05, 7.338900000000009e-05, 7.365200000000044e-05, 7.400000000000115e-05, 7.4069999999999e-05, 7.320900000000116e-05, 7.383400000000179e-05, 7.381900000000274e-05, 7.404199999999986e-05, 7.359700000000163e-05, 7.397199999999854e-05, 7.326399999999997e-05, 7.362500000000077e-05, 7.401399999999725e-05, 7.369399999999915e-05, 7.312500000000027e-05, 7.323599999999736e-05, 7.398600000000158e-05, 7.383400000000179e-05, 7.341699999999923e-05, 7.336100000000095e-05, 7.381899999999927e-05, 7.33049999999992e-05, 7.377800000000004e-05, 7.388900000000059e-05, 7.377700000000056e-05, 7.370799999999872e-05]</msg>
<status status="PASS" starttime="20201029 18:27:37.412" endtime="20201029 18:27:37.415"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:37.407" endtime="20201029 18:27:37.416"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:27:37.419" endtime="20201029 18:27:37.439"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:37.418" endtime="20201029 18:27:37.439"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:37.417" endtime="20201029 18:27:37.440"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:37.059" endtime="20201029 18:27:37.440"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:37.058" endtime="20201029 18:27:37.440"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:37.448" endtime="20201029 18:27:37.466"></status>
</kw>
<msg timestamp="20201029 18:27:37.467" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:37.447" endtime="20201029 18:27:37.467"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:37.469" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:37.468" endtime="20201029 18:27:37.470"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:37.470" endtime="20201029 18:27:37.472"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:37.444" endtime="20201029 18:27:37.473"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:37.442" endtime="20201029 18:27:37.473"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:37.479" endtime="20201029 18:27:37.765"></status>
</kw>
<msg timestamp="20201029 18:27:37.768" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019437778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019512014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:37.478" endtime="20201029 18:27:37.768"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:37.776" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019437778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019512014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:37.769" endtime="20201029 18:27:37.776"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:37.777" endtime="20201029 18:27:37.779"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:37.475" endtime="20201029 18:27:37.779"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:37.474" endtime="20201029 18:27:37.780"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:27:37.784" level="INFO">${RESULT} = [{'diff': 7.423600000000183e-05}, {'diff': 7.418099999999955e-05}, {'diff': 7.448599999999861e-05}, {'diff': 7.412500000000127e-05}, {'diff': 7.487499999999855e-05}, {'diff': 7.407000000000247e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:27:37.780" endtime="20201029 18:27:37.784"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:27:37.788" level="INFO">${ACCURACY} = {'diff': [7.423600000000183e-05, 7.418099999999955e-05, 7.448599999999861e-05, 7.412500000000127e-05, 7.487499999999855e-05, 7.407000000000247e-05, 7.462500000000177e-05, 7.461099999999873e-05, 7.4125...</msg>
<status status="PASS" starttime="20201029 18:27:37.785" endtime="20201029 18:27:37.789"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:27:37.793" level="INFO">NAME: accuracy-TIMER_SLEEP-62-philip</msg>
<status status="PASS" starttime="20201029 18:27:37.792" endtime="20201029 18:27:37.793"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:27:37.795" level="INFO">VALUE: [7.423600000000183e-05, 7.418099999999955e-05, 7.448599999999861e-05, 7.412500000000127e-05, 7.487499999999855e-05, 7.407000000000247e-05, 7.462500000000177e-05, 7.461099999999873e-05, 7.412500000000127e-05, 7.479100000000113e-05, 7.45699999999995e-05, 7.415300000000041e-05, 7.463900000000134e-05, 7.437499999999805e-05, 7.447200000000251e-05, 7.477799999999757e-05, 7.477800000000104e-05, 7.500000000000215e-05, 7.500000000000215e-05, 7.477800000000104e-05, 7.42500000000014e-05, 7.455500000000045e-05, 7.488899999999812e-05, 7.481900000000027e-05, 7.497199999999954e-05, 7.469499999999962e-05, 7.441700000000023e-05, 7.479200000000061e-05, 7.480600000000018e-05, 7.494499999999987e-05, 7.505600000000043e-05, 7.412500000000127e-05, 7.420900000000216e-05, 7.432000000000272e-05, 7.480600000000018e-05, 7.488799999999865e-05, 7.47769999999981e-05, 7.483299999999984e-05, 7.499999999999868e-05, 7.470799999999972e-05, 7.434699999999891e-05, 7.491700000000073e-05, 7.416699999999998e-05, 7.441700000000023e-05, 7.501400000000172e-05, 7.427800000000054e-05, 7.477799999999757e-05, 7.49310000000003e-05, 7.507e-05, 7.479100000000113e-05]</msg>
<status status="PASS" starttime="20201029 18:27:37.794" endtime="20201029 18:27:37.796"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:37.789" endtime="20201029 18:27:37.797"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:27:37.800" endtime="20201029 18:27:37.820"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:37.799" endtime="20201029 18:27:37.820"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:37.798" endtime="20201029 18:27:37.821"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:37.441" endtime="20201029 18:27:37.821"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:37.440" endtime="20201029 18:27:37.821"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:37.829" endtime="20201029 18:27:37.847"></status>
</kw>
<msg timestamp="20201029 18:27:37.848" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:37.828" endtime="20201029 18:27:37.848"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:37.850" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:37.849" endtime="20201029 18:27:37.851"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:37.851" endtime="20201029 18:27:37.853"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:37.825" endtime="20201029 18:27:37.854"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:37.823" endtime="20201029 18:27:37.854"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:37.860" endtime="20201029 18:27:38.147"></status>
</kw>
<msg timestamp="20201029 18:27:38.150" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019456042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01953175, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:27:37.859" endtime="20201029 18:27:38.150"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:38.158" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019456042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01953175, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:27:38.151" endtime="20201029 18:27:38.158"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:38.159" endtime="20201029 18:27:38.160"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:37.856" endtime="20201029 18:27:38.161"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:37.855" endtime="20201029 18:27:38.161"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:27:38.165" level="INFO">${RESULT} = [{'diff': 7.570800000000072e-05}, {'diff': 7.5763999999999e-05}, {'diff': 7.5763999999999e-05}, {'diff': 7.541700000000123e-05}, {'diff': 7.536099999999948e-05}, {'diff': 7.513900000000184e-05}, {'dif...</msg>
<status status="PASS" starttime="20201029 18:27:38.162" endtime="20201029 18:27:38.166"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:27:38.169" level="INFO">${ACCURACY} = {'diff': [7.570800000000072e-05, 7.5763999999999e-05, 7.5763999999999e-05, 7.541700000000123e-05, 7.536099999999948e-05, 7.513900000000184e-05, 7.533399999999982e-05, 7.537499999999905e-05, 7.57629999...</msg>
<status status="PASS" starttime="20201029 18:27:38.166" endtime="20201029 18:27:38.170"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:27:38.174" level="INFO">NAME: accuracy-TIMER_SLEEP-63-philip</msg>
<status status="PASS" starttime="20201029 18:27:38.173" endtime="20201029 18:27:38.174"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:27:38.176" level="INFO">VALUE: [7.570800000000072e-05, 7.5763999999999e-05, 7.5763999999999e-05, 7.541700000000123e-05, 7.536099999999948e-05, 7.513900000000184e-05, 7.533399999999982e-05, 7.537499999999905e-05, 7.576299999999953e-05, 7.580499999999823e-05, 7.541600000000176e-05, 7.52639999999985e-05, 7.563899999999887e-05, 7.506900000000052e-05, 7.522199999999979e-05, 7.57500000000029e-05, 7.572200000000029e-05, 7.542999999999786e-05, 7.569499999999715e-05, 7.55700000000005e-05, 7.534800000000286e-05, 7.583299999999737e-05, 7.593000000000183e-05, 7.579099999999866e-05, 7.573599999999986e-05, 7.593000000000183e-05, 7.581900000000127e-05, 7.5763999999999e-05, 7.583300000000084e-05, 7.50830000000001e-05, 7.520800000000022e-05, 7.511099999999923e-05, 7.523600000000283e-05, 7.59310000000013e-05, 7.583300000000084e-05, 7.591700000000173e-05, 7.561099999999973e-05, 7.513900000000184e-05, 7.548599999999961e-05, 7.55830000000006e-05, 7.559700000000016e-05, 7.59029999999987e-05, 7.511099999999923e-05, 7.543000000000133e-05, 7.563900000000234e-05, 7.51110000000027e-05, 7.563900000000234e-05, 7.534799999999939e-05, 7.540300000000166e-05, 7.547200000000004e-05]</msg>
<status status="PASS" starttime="20201029 18:27:38.175" endtime="20201029 18:27:38.177"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:38.170" endtime="20201029 18:27:38.178"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:27:38.181" endtime="20201029 18:27:38.201"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:38.180" endtime="20201029 18:27:38.201"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:38.179" endtime="20201029 18:27:38.202"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:37.822" endtime="20201029 18:27:38.202"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:37.821" endtime="20201029 18:27:38.202"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:38.211" endtime="20201029 18:27:38.229"></status>
</kw>
<msg timestamp="20201029 18:27:38.230" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:38.209" endtime="20201029 18:27:38.230"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:38.232" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:38.231" endtime="20201029 18:27:38.232"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:38.233" endtime="20201029 18:27:38.235"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:38.206" endtime="20201029 18:27:38.235"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:38.204" endtime="20201029 18:27:38.236"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:38.242" endtime="20201029 18:27:38.528"></status>
</kw>
<msg timestamp="20201029 18:27:38.531" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020450597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020527222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:38.240" endtime="20201029 18:27:38.532"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:38.539" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020450597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020527222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:38.532" endtime="20201029 18:27:38.540"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:38.540" endtime="20201029 18:27:38.542"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:38.238" endtime="20201029 18:27:38.543"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:38.236" endtime="20201029 18:27:38.543"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:27:38.547" level="INFO">${RESULT} = [{'diff': 7.66250000000003e-05}, {'diff': 7.694399999999893e-05}, {'diff': 7.615300000000241e-05}, {'diff': 7.705599999999896e-05}, {'diff': 7.611100000000023e-05}, {'diff': 7.704200000000286e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:27:38.544" endtime="20201029 18:27:38.547"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:27:38.551" level="INFO">${ACCURACY} = {'diff': [7.66250000000003e-05, 7.694399999999893e-05, 7.615300000000241e-05, 7.705599999999896e-05, 7.611100000000023e-05, 7.704200000000286e-05, 7.651399999999975e-05, 7.702799999999982e-05, 7.62499...</msg>
<status status="PASS" starttime="20201029 18:27:38.548" endtime="20201029 18:27:38.551"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:27:38.556" level="INFO">NAME: accuracy-TIMER_SLEEP-64-philip</msg>
<status status="PASS" starttime="20201029 18:27:38.555" endtime="20201029 18:27:38.556"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:27:38.559" level="INFO">VALUE: [7.66250000000003e-05, 7.694399999999893e-05, 7.615300000000241e-05, 7.705599999999896e-05, 7.611100000000023e-05, 7.704200000000286e-05, 7.651399999999975e-05, 7.702799999999982e-05, 7.624999999999993e-05, 7.677799999999957e-05, 7.624999999999993e-05, 7.675000000000043e-05, 7.633299999999787e-05, 7.694399999999893e-05, 7.684699999999794e-05, 7.701400000000025e-05, 7.666699999999901e-05, 7.609700000000066e-05, 7.634699999999744e-05, 7.627799999999907e-05, 7.670900000000119e-05, 7.669400000000215e-05, 7.618099999999808e-05, 7.684800000000089e-05, 7.68189999999988e-05, 7.654199999999889e-05, 7.698600000000111e-05, 7.663899999999987e-05, 7.663899999999987e-05, 7.619400000000165e-05, 7.61249999999998e-05, 7.69029999999997e-05, 7.688900000000012e-05, 7.705599999999896e-05, 7.652799999999932e-05, 7.667999999999911e-05, 7.675000000000043e-05, 7.683300000000184e-05, 7.683300000000184e-05, 7.669399999999868e-05, 7.618099999999808e-05, 7.656899999999855e-05, 7.705499999999949e-05, 7.670799999999825e-05, 7.615299999999894e-05, 7.675000000000043e-05, 7.698600000000111e-05, 7.608400000000057e-05, 7.633399999999735e-05, 7.622200000000079e-05]</msg>
<status status="PASS" starttime="20201029 18:27:38.557" endtime="20201029 18:27:38.560"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:38.552" endtime="20201029 18:27:38.561"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:27:38.565" endtime="20201029 18:27:38.585"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:38.564" endtime="20201029 18:27:38.585"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:38.562" endtime="20201029 18:27:38.585"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:38.203" endtime="20201029 18:27:38.586"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:38.202" endtime="20201029 18:27:38.586"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:38.594" endtime="20201029 18:27:38.613"></status>
</kw>
<msg timestamp="20201029 18:27:38.613" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:38.593" endtime="20201029 18:27:38.613"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:38.616" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:38.614" endtime="20201029 18:27:38.616"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:38.617" endtime="20201029 18:27:38.618"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:38.590" endtime="20201029 18:27:38.619"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:38.588" endtime="20201029 18:27:38.619"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:38.626" endtime="20201029 18:27:38.911"></status>
</kw>
<msg timestamp="20201029 18:27:38.914" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019551708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019628986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:38.624" endtime="20201029 18:27:38.914"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:38.921" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019551708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019628986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:38.915" endtime="20201029 18:27:38.922"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:38.923" endtime="20201029 18:27:38.924"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:38.622" endtime="20201029 18:27:38.925"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:38.620" endtime="20201029 18:27:38.925"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:27:38.929" level="INFO">${RESULT} = [{'diff': 7.727800000000007e-05}, {'diff': 7.770799999999925e-05}, {'diff': 7.736099999999801e-05}, {'diff': 7.772200000000229e-05}, {'diff': 7.784700000000241e-05}, {'diff': 7.772199999999882e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:27:38.926" endtime="20201029 18:27:38.929"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:27:38.934" level="INFO">${ACCURACY} = {'diff': [7.727800000000007e-05, 7.770799999999925e-05, 7.736099999999801e-05, 7.772200000000229e-05, 7.784700000000241e-05, 7.772199999999882e-05, 7.71389999999969e-05, 7.773599999999839e-05, 7.79030...</msg>
<status status="PASS" starttime="20201029 18:27:38.930" endtime="20201029 18:27:38.934"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:27:38.938" level="INFO">NAME: accuracy-TIMER_SLEEP-65-philip</msg>
<status status="PASS" starttime="20201029 18:27:38.937" endtime="20201029 18:27:38.939"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:27:38.941" level="INFO">VALUE: [7.727800000000007e-05, 7.770799999999925e-05, 7.736099999999801e-05, 7.772200000000229e-05, 7.784700000000241e-05, 7.772199999999882e-05, 7.71389999999969e-05, 7.773599999999839e-05, 7.79030000000007e-05, 7.741599999999682e-05, 7.788799999999818e-05, 7.793000000000036e-05, 7.768099999999958e-05, 7.758299999999912e-05, 7.733300000000234e-05, 7.797200000000254e-05, 7.787500000000155e-05, 7.723600000000136e-05, 7.752799999999685e-05, 7.722199999999832e-05, 7.773599999999839e-05, 7.713900000000037e-05, 7.75839999999986e-05, 7.787500000000155e-05, 7.737500000000105e-05, 7.77909999999972e-05, 7.713900000000037e-05, 7.779200000000014e-05, 7.722200000000179e-05, 7.736099999999801e-05, 7.776399999999753e-05, 7.718099999999908e-05, 7.743099999999933e-05, 7.783400000000232e-05, 7.798600000000211e-05, 7.715299999999994e-05, 7.795899999999897e-05, 7.772200000000229e-05, 7.794399999999993e-05, 7.754100000000042e-05, 7.791600000000079e-05, 7.79579999999995e-05, 7.711099999999776e-05, 7.791700000000026e-05, 7.779200000000014e-05, 7.797200000000254e-05, 7.804100000000092e-05, 7.780599999999971e-05, 7.800000000000168e-05, 7.798700000000158e-05]</msg>
<status status="PASS" starttime="20201029 18:27:38.940" endtime="20201029 18:27:38.948"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:38.935" endtime="20201029 18:27:38.948"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:27:38.952" endtime="20201029 18:27:38.972"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:38.951" endtime="20201029 18:27:38.972"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:38.949" endtime="20201029 18:27:38.972"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:38.587" endtime="20201029 18:27:38.973"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:38.586" endtime="20201029 18:27:38.973"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:38.981" endtime="20201029 18:27:38.999"></status>
</kw>
<msg timestamp="20201029 18:27:38.999" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:38.980" endtime="20201029 18:27:39.000"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:39.002" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:39.000" endtime="20201029 18:27:39.002"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:39.003" endtime="20201029 18:27:39.005"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:38.977" endtime="20201029 18:27:39.005"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:38.975" endtime="20201029 18:27:39.005"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:39.012" endtime="20201029 18:27:39.301"></status>
</kw>
<msg timestamp="20201029 18:27:39.304" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020256083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020334528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:39.010" endtime="20201029 18:27:39.305"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:39.312" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020256083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020334528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:39.305" endtime="20201029 18:27:39.313"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:39.314" endtime="20201029 18:27:39.315"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:39.008" endtime="20201029 18:27:39.316"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:39.006" endtime="20201029 18:27:39.316"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:27:39.320" level="INFO">${RESULT} = [{'diff': 7.84449999999999e-05}, {'diff': 7.879199999999767e-05}, {'diff': 7.891700000000126e-05}, {'diff': 7.908300000000063e-05}, {'diff': 7.904199999999792e-05}, {'diff': 7.869400000000068e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:27:39.317" endtime="20201029 18:27:39.320"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:27:39.324" level="INFO">${ACCURACY} = {'diff': [7.84449999999999e-05, 7.879199999999767e-05, 7.891700000000126e-05, 7.908300000000063e-05, 7.904199999999792e-05, 7.869400000000068e-05, 7.852699999999838e-05, 7.883300000000037e-05, 7.8458e...</msg>
<status status="PASS" starttime="20201029 18:27:39.321" endtime="20201029 18:27:39.324"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:27:39.328" level="INFO">NAME: accuracy-TIMER_SLEEP-66-philip</msg>
<status status="PASS" starttime="20201029 18:27:39.327" endtime="20201029 18:27:39.329"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:27:39.331" level="INFO">VALUE: [7.84449999999999e-05, 7.879199999999767e-05, 7.891700000000126e-05, 7.908300000000063e-05, 7.904199999999792e-05, 7.869400000000068e-05, 7.852699999999838e-05, 7.883300000000037e-05, 7.8458e-05, 7.818000000000061e-05, 7.869400000000068e-05, 7.836099999999901e-05, 7.875000000000243e-05, 7.883399999999985e-05, 7.907000000000053e-05, 7.875000000000243e-05, 7.873599999999939e-05, 7.869500000000015e-05, 7.8151999999998e-05, 7.840200000000172e-05, 7.868000000000111e-05, 7.868000000000111e-05, 7.851400000000175e-05, 7.876399999999853e-05, 7.85969999999997e-05, 7.879199999999767e-05, 7.823599999999889e-05, 7.876399999999853e-05, 7.895899999999997e-05, 7.827800000000107e-05, 7.841599999999782e-05, 7.823600000000236e-05, 7.89580000000005e-05, 7.822199999999932e-05, 7.880500000000124e-05, 7.851400000000175e-05, 7.850000000000218e-05, 7.858300000000012e-05, 7.819499999999965e-05, 7.847199999999957e-05, 7.851400000000175e-05, 7.869500000000015e-05, 7.865300000000144e-05, 7.897299999999954e-05, 7.90129999999993e-05, 7.858300000000012e-05, 7.865299999999797e-05, 7.836099999999901e-05, 7.861099999999926e-05, 7.844400000000043e-05]</msg>
<status status="PASS" starttime="20201029 18:27:39.329" endtime="20201029 18:27:39.332"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:39.325" endtime="20201029 18:27:39.332"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:27:39.336" endtime="20201029 18:27:39.355"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:39.334" endtime="20201029 18:27:39.356"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:39.333" endtime="20201029 18:27:39.356"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:38.974" endtime="20201029 18:27:39.356"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:38.973" endtime="20201029 18:27:39.356"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:39.365" endtime="20201029 18:27:39.429"></status>
</kw>
<msg timestamp="20201029 18:27:39.429" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:39.363" endtime="20201029 18:27:39.430"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:39.432" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:39.430" endtime="20201029 18:27:39.432"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:39.433" endtime="20201029 18:27:39.435"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:39.361" endtime="20201029 18:27:39.435"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:39.359" endtime="20201029 18:27:39.435"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:39.442" endtime="20201029 18:27:39.729"></status>
</kw>
<msg timestamp="20201029 18:27:39.732" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066573972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066653764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:39.440" endtime="20201029 18:27:39.732"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:39.740" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066573972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066653764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:39.733" endtime="20201029 18:27:39.740"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:39.741" endtime="20201029 18:27:39.743"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:39.438" endtime="20201029 18:27:39.743"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:39.436" endtime="20201029 18:27:39.744"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:27:39.748" level="INFO">${RESULT} = [{'diff': 7.979200000000908e-05}, {'diff': 7.986100000000051e-05}, {'diff': 7.968099999999811e-05}, {'diff': 7.936100000000001e-05}, {'diff': 8.011099999999383e-05}, {'diff': 7.92369999999959e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:27:39.744" endtime="20201029 18:27:39.748"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:27:39.752" level="INFO">${ACCURACY} = {'diff': [7.979200000000908e-05, 7.986100000000051e-05, 7.968099999999811e-05, 7.936100000000001e-05, 8.011099999999383e-05, 7.92369999999959e-05, 7.999999999999674e-05, 7.938899999999915e-05, 7.96529...</msg>
<status status="PASS" starttime="20201029 18:27:39.748" endtime="20201029 18:27:39.752"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:27:39.757" level="INFO">NAME: accuracy-TIMER_SLEEP-67-philip</msg>
<status status="PASS" starttime="20201029 18:27:39.756" endtime="20201029 18:27:39.757"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:27:39.759" level="INFO">VALUE: [7.979200000000908e-05, 7.986100000000051e-05, 7.968099999999811e-05, 7.936100000000001e-05, 8.011099999999383e-05, 7.92369999999959e-05, 7.999999999999674e-05, 7.938899999999915e-05, 7.965299999999897e-05, 7.934700000000738e-05, 7.924999999998905e-05, 7.929200000000858e-05, 7.976400000000994e-05, 7.958300000000806e-05, 7.965299999999897e-05, 7.975000000000343e-05, 8.008299999999469e-05, 7.959800000000017e-05, 7.986100000000051e-05, 7.911099999999283e-05, 7.94719999999971e-05, 8.004100000000292e-05, 7.96110000000072e-05, 7.967999999999864e-05, 7.927799999998819e-05, 7.993099999999143e-05, 7.963899999999247e-05, 7.979200000000908e-05, 7.980600000000171e-05, 7.920899999999675e-05, 7.94169999999983e-05, 7.993000000000583e-05, 7.956900000000156e-05, 7.931899999999437e-05, 7.955499999999505e-05, 7.969400000000515e-05, 7.988899999999965e-05, 7.95269999999959e-05, 7.952799999999538e-05, 7.94719999999971e-05, 7.948600000000361e-05, 7.962499999999983e-05, 7.977799999998869e-05, 7.91119999999923e-05, 7.93469999999935e-05, 7.969400000000515e-05, 7.973599999999692e-05, 7.92910000000091e-05, 7.976400000000994e-05, 7.916700000000498e-05]</msg>
<status status="PASS" starttime="20201029 18:27:39.758" endtime="20201029 18:27:39.760"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:39.753" endtime="20201029 18:27:39.760"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:27:39.764" endtime="20201029 18:27:39.783"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:39.762" endtime="20201029 18:27:39.784"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:39.761" endtime="20201029 18:27:39.784"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:39.357" endtime="20201029 18:27:39.784"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:39.357" endtime="20201029 18:27:39.785"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:39.793" endtime="20201029 18:27:39.812"></status>
</kw>
<msg timestamp="20201029 18:27:39.812" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:39.792" endtime="20201029 18:27:39.812"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:39.815" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:39.813" endtime="20201029 18:27:39.815"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:39.816" endtime="20201029 18:27:39.817"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:39.789" endtime="20201029 18:27:39.818"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:39.787" endtime="20201029 18:27:39.818"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:39.825" endtime="20201029 18:27:40.110"></status>
</kw>
<msg timestamp="20201029 18:27:40.114" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019464861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019545306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:39.823" endtime="20201029 18:27:40.114"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:40.122" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019464861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019545306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:40.115" endtime="20201029 18:27:40.122"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:40.123" endtime="20201029 18:27:40.124"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:39.820" endtime="20201029 18:27:40.125"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:39.819" endtime="20201029 18:27:40.125"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:27:40.129" level="INFO">${RESULT} = [{'diff': 8.044499999999843e-05}, {'diff': 8.06390000000004e-05}, {'diff': 8.025000000000046e-05}, {'diff': 8.080499999999977e-05}, {'diff': 8.036100000000101e-05}, {'diff': 8.048600000000114e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:27:40.126" endtime="20201029 18:27:40.129"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:27:40.134" level="INFO">${ACCURACY} = {'diff': [8.044499999999843e-05, 8.06390000000004e-05, 8.025000000000046e-05, 8.080499999999977e-05, 8.036100000000101e-05, 8.048600000000114e-05, 8.023599999999742e-05, 8.008300000000163e-05, 8.03890...</msg>
<status status="PASS" starttime="20201029 18:27:40.130" endtime="20201029 18:27:40.134"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:27:40.139" level="INFO">NAME: accuracy-TIMER_SLEEP-68-philip</msg>
<status status="PASS" starttime="20201029 18:27:40.138" endtime="20201029 18:27:40.139"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:27:40.141" level="INFO">VALUE: [8.044499999999843e-05, 8.06390000000004e-05, 8.025000000000046e-05, 8.080499999999977e-05, 8.036100000000101e-05, 8.048600000000114e-05, 8.023599999999742e-05, 8.008300000000163e-05, 8.038900000000015e-05, 8.06390000000004e-05, 8.076399999999706e-05, 8.034700000000145e-05, 8.069499999999868e-05, 8.087500000000108e-05, 8.070799999999878e-05, 8.040200000000025e-05, 8.04719999999981e-05, 8.016599999999957e-05, 8.062500000000083e-05, 8.076400000000053e-05, 8.01389999999999e-05, 8.081899999999934e-05, 8.030600000000221e-05, 8.023600000000089e-05, 8.05840000000016e-05, 8.088900000000065e-05, 8.047200000000157e-05, 8.048600000000114e-05, 8.104099999999698e-05, 8.108299999999916e-05, 8.072199999999835e-05, 8.054199999999942e-05, 8.034800000000092e-05, 8.019399999999871e-05, 8.03329999999984e-05, 8.069500000000215e-05, 8.006999999999806e-05, 8.080600000000271e-05, 8.084800000000142e-05, 8.084699999999848e-05, 8.088900000000065e-05, 8.011100000000076e-05, 8.030499999999927e-05, 8.108299999999916e-05, 8.087500000000108e-05, 8.104199999999992e-05, 8.079200000000314e-05, 8.04169999999993e-05, 8.073599999999792e-05, 8.081999999999881e-05]</msg>
<status status="PASS" starttime="20201029 18:27:40.140" endtime="20201029 18:27:40.142"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:40.135" endtime="20201029 18:27:40.142"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:27:40.146" endtime="20201029 18:27:40.165"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:40.144" endtime="20201029 18:27:40.166"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:40.143" endtime="20201029 18:27:40.166"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:39.785" endtime="20201029 18:27:40.166"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:39.785" endtime="20201029 18:27:40.166"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:40.175" endtime="20201029 18:27:40.193"></status>
</kw>
<msg timestamp="20201029 18:27:40.194" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:40.173" endtime="20201029 18:27:40.194"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:40.196" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:40.195" endtime="20201029 18:27:40.196"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:40.197" endtime="20201029 18:27:40.199"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:40.171" endtime="20201029 18:27:40.199"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:40.169" endtime="20201029 18:27:40.200"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:40.207" endtime="20201029 18:27:40.493"></status>
</kw>
<msg timestamp="20201029 18:27:40.496" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019470444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019552181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:40.204" endtime="20201029 18:27:40.496"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:40.504" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019470444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019552181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:40.497" endtime="20201029 18:27:40.504"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:40.505" endtime="20201029 18:27:40.507"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:40.202" endtime="20201029 18:27:40.507"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:40.200" endtime="20201029 18:27:40.508"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:27:40.511" level="INFO">${RESULT} = [{'diff': 8.17369999999984e-05}, {'diff': 8.198599999999917e-05}, {'diff': 8.19170000000008e-05}, {'diff': 8.130599999999974e-05}, {'diff': 8.136099999999855e-05}, {'diff': 8.133300000000288e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 18:27:40.508" endtime="20201029 18:27:40.512"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:27:40.516" level="INFO">${ACCURACY} = {'diff': [8.17369999999984e-05, 8.198599999999917e-05, 8.19170000000008e-05, 8.130599999999974e-05, 8.136099999999855e-05, 8.133300000000288e-05, 8.143099999999986e-05, 8.187500000000208e-05, 8.202799...</msg>
<status status="PASS" starttime="20201029 18:27:40.512" endtime="20201029 18:27:40.516"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:27:40.520" level="INFO">NAME: accuracy-TIMER_SLEEP-69-philip</msg>
<status status="PASS" starttime="20201029 18:27:40.519" endtime="20201029 18:27:40.520"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:27:40.522" level="INFO">VALUE: [8.17369999999984e-05, 8.198599999999917e-05, 8.19170000000008e-05, 8.130599999999974e-05, 8.136099999999855e-05, 8.133300000000288e-05, 8.143099999999986e-05, 8.187500000000208e-05, 8.202799999999788e-05, 8.205600000000049e-05, 8.14719999999991e-05, 8.19589999999995e-05, 8.108399999999863e-05, 8.131899999999984e-05, 8.199999999999874e-05, 8.11109999999983e-05, 8.120799999999928e-05, 8.172199999999935e-05, 8.166700000000054e-05, 8.166700000000054e-05, 8.204200000000092e-05, 8.204200000000092e-05, 8.187499999999862e-05, 8.169499999999968e-05, 8.198599999999917e-05, 8.183399999999938e-05, 8.201399999999831e-05, 8.140200000000125e-05, 8.158299999999966e-05, 8.118000000000014e-05, 8.129200000000017e-05, 8.205600000000049e-05, 8.201399999999831e-05, 8.205500000000102e-05, 8.131999999999931e-05, 8.173599999999892e-05, 8.150000000000171e-05, 8.172199999999935e-05, 8.191600000000132e-05, 8.195800000000003e-05, 8.18049999999973e-05, 8.145799999999953e-05, 8.169400000000021e-05, 8.144399999999996e-05, 8.14719999999991e-05, 8.195800000000003e-05, 8.170799999999978e-05, 8.109699999999873e-05, 8.152800000000085e-05, 8.155500000000052e-05]</msg>
<status status="PASS" starttime="20201029 18:27:40.521" endtime="20201029 18:27:40.523"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:40.516" endtime="20201029 18:27:40.524"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:27:40.527" endtime="20201029 18:27:40.547"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:40.526" endtime="20201029 18:27:40.547"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:40.525" endtime="20201029 18:27:40.548"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:40.167" endtime="20201029 18:27:40.548"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:40.167" endtime="20201029 18:27:40.548"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:40.557" endtime="20201029 18:27:40.575"></status>
</kw>
<msg timestamp="20201029 18:27:40.575" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:40.556" endtime="20201029 18:27:40.576"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:40.578" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:40.576" endtime="20201029 18:27:40.578"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:40.579" endtime="20201029 18:27:40.581"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:40.552" endtime="20201029 18:27:40.582"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:40.550" endtime="20201029 18:27:40.582"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:40.589" endtime="20201029 18:27:40.874"></status>
</kw>
<msg timestamp="20201029 18:27:40.877" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020725694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0208085, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:27:40.587" endtime="20201029 18:27:40.877"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:40.885" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020725694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0208085, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:27:40.878" endtime="20201029 18:27:40.885"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:40.886" endtime="20201029 18:27:40.888"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:40.585" endtime="20201029 18:27:40.888"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:40.583" endtime="20201029 18:27:40.889"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:27:40.893" level="INFO">${RESULT} = [{'diff': 8.280600000000124e-05}, {'diff': 8.269499999999722e-05}, {'diff': 8.213899999999844e-05}, {'diff': 8.298600000000017e-05}, {'diff': 8.23330000000004e-05}, {'diff': 8.262499999999937e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:27:40.890" endtime="20201029 18:27:40.893"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:27:40.897" level="INFO">${ACCURACY} = {'diff': [8.280600000000124e-05, 8.269499999999722e-05, 8.213899999999844e-05, 8.298600000000017e-05, 8.23330000000004e-05, 8.262499999999937e-05, 8.251400000000228e-05, 8.304199999999845e-05, 8.26109...</msg>
<status status="PASS" starttime="20201029 18:27:40.894" endtime="20201029 18:27:40.897"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:27:40.902" level="INFO">NAME: accuracy-TIMER_SLEEP-70-philip</msg>
<status status="PASS" starttime="20201029 18:27:40.901" endtime="20201029 18:27:40.902"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:27:40.904" level="INFO">VALUE: [8.280600000000124e-05, 8.269499999999722e-05, 8.213899999999844e-05, 8.298600000000017e-05, 8.23330000000004e-05, 8.262499999999937e-05, 8.251400000000228e-05, 8.304199999999845e-05, 8.26109999999998e-05, 8.307000000000106e-05, 8.286100000000005e-05, 8.236199999999902e-05, 8.252799999999838e-05, 8.2152000000002e-05, 8.290199999999928e-05, 8.240299999999826e-05, 8.292999999999842e-05, 8.216699999999758e-05, 8.262499999999937e-05, 8.269500000000068e-05, 8.236099999999955e-05, 8.293100000000136e-05, 8.222299999999932e-05, 8.268100000000111e-05, 8.270800000000078e-05, 8.230500000000127e-05, 8.229099999999823e-05, 8.28049999999983e-05, 8.206900000000059e-05, 8.248599999999967e-05, 8.245800000000053e-05, 8.26529999999985e-05, 8.270800000000078e-05, 8.270900000000025e-05, 8.244499999999697e-05, 8.227799999999813e-05, 8.277699999999916e-05, 8.240299999999826e-05, 8.304100000000245e-05, 8.256900000000109e-05, 8.290300000000222e-05, 8.223599999999942e-05, 8.288900000000265e-05, 8.280600000000124e-05, 8.284700000000048e-05, 8.287500000000309e-05, 8.244500000000043e-05, 8.306999999999759e-05, 8.211199999999877e-05, 8.263899999999894e-05]</msg>
<status status="PASS" starttime="20201029 18:27:40.903" endtime="20201029 18:27:40.905"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:40.898" endtime="20201029 18:27:40.906"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:27:40.909" endtime="20201029 18:27:40.929"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:40.908" endtime="20201029 18:27:40.929"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:40.907" endtime="20201029 18:27:40.929"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:40.549" endtime="20201029 18:27:40.930"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:40.548" endtime="20201029 18:27:40.930"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:40.938" endtime="20201029 18:27:40.956"></status>
</kw>
<msg timestamp="20201029 18:27:40.957" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:40.937" endtime="20201029 18:27:40.957"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:40.959" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:40.958" endtime="20201029 18:27:40.959"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:40.960" endtime="20201029 18:27:40.962"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:40.934" endtime="20201029 18:27:40.962"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:40.932" endtime="20201029 18:27:40.963"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:40.969" endtime="20201029 18:27:41.255"></status>
</kw>
<msg timestamp="20201029 18:27:41.258" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020027528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020111181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:40.967" endtime="20201029 18:27:41.258"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:41.266" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020027528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020111181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:41.259" endtime="20201029 18:27:41.267"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:41.268" endtime="20201029 18:27:41.269"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:40.965" endtime="20201029 18:27:41.270"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:40.963" endtime="20201029 18:27:41.270"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:27:41.278" level="INFO">${RESULT} = [{'diff': 8.36529999999995e-05}, {'diff': 8.391599999999985e-05}, {'diff': 8.388900000000019e-05}, {'diff': 8.356899999999862e-05}, {'diff': 8.338900000000316e-05}, {'diff': 8.362500000000037e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:27:41.271" endtime="20201029 18:27:41.279"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:27:41.290" level="INFO">${ACCURACY} = {'diff': [8.36529999999995e-05, 8.391599999999985e-05, 8.388900000000019e-05, 8.356899999999862e-05, 8.338900000000316e-05, 8.362500000000037e-05, 8.388899999999672e-05, 8.358300000000166e-05, 8.38750...</msg>
<status status="PASS" starttime="20201029 18:27:41.280" endtime="20201029 18:27:41.290"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:27:41.301" level="INFO">NAME: accuracy-TIMER_SLEEP-71-philip</msg>
<status status="PASS" starttime="20201029 18:27:41.297" endtime="20201029 18:27:41.302"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:27:41.308" level="INFO">VALUE: [8.36529999999995e-05, 8.391599999999985e-05, 8.388900000000019e-05, 8.356899999999862e-05, 8.338900000000316e-05, 8.362500000000037e-05, 8.388899999999672e-05, 8.358300000000166e-05, 8.387500000000062e-05, 8.336200000000002e-05, 8.319500000000118e-05, 8.34729999999971e-05, 8.395799999999856e-05, 8.36110000000008e-05, 8.334700000000098e-05, 8.305499999999855e-05, 8.308299999999769e-05, 8.370799999999831e-05, 8.356900000000209e-05, 8.352799999999938e-05, 8.330600000000174e-05, 8.312499999999987e-05, 8.312500000000334e-05, 8.380500000000277e-05, 8.37370000000004e-05, 8.32919999999987e-05, 8.312499999999987e-05, 8.336100000000055e-05, 8.405499999999955e-05, 8.341599999999935e-05, 8.369399999999874e-05, 8.402799999999988e-05, 8.381900000000234e-05, 8.405599999999902e-05, 8.358399999999766e-05, 8.3152999999999e-05, 8.326399999999956e-05, 8.33330000000014e-05, 8.370799999999831e-05, 8.352699999999991e-05, 8.315199999999953e-05, 8.322200000000085e-05, 8.316699999999858e-05, 8.375000000000049e-05, 8.338899999999969e-05, 8.334700000000098e-05, 8.376399999999659e-05, 8.404199999999945e-05, 8.387500000000062e-05, 8.366699999999908e-05]</msg>
<status status="PASS" starttime="20201029 18:27:41.304" endtime="20201029 18:27:41.310"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:41.292" endtime="20201029 18:27:41.311"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:27:41.319" endtime="20201029 18:27:41.341"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:41.315" endtime="20201029 18:27:41.342"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:41.313" endtime="20201029 18:27:41.343"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:40.931" endtime="20201029 18:27:41.343"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:40.930" endtime="20201029 18:27:41.344"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:41.362" endtime="20201029 18:27:41.382"></status>
</kw>
<msg timestamp="20201029 18:27:41.382" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:41.359" endtime="20201029 18:27:41.382"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:41.385" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:41.383" endtime="20201029 18:27:41.385"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:41.386" endtime="20201029 18:27:41.387"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:41.353" endtime="20201029 18:27:41.388"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:41.349" endtime="20201029 18:27:41.388"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:41.394" endtime="20201029 18:27:41.681"></status>
</kw>
<msg timestamp="20201029 18:27:41.684" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034057, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034141528, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:27:41.393" endtime="20201029 18:27:41.684"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:41.692" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034057, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034141528, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:27:41.685" endtime="20201029 18:27:41.692"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:41.693" endtime="20201029 18:27:41.695"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:41.390" endtime="20201029 18:27:41.695"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:41.389" endtime="20201029 18:27:41.696"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:27:41.700" level="INFO">${RESULT} = [{'diff': 8.452800000000038e-05}, {'diff': 8.46249999999979e-05}, {'diff': 8.41669999999961e-05}, {'diff': 8.487499999999815e-05}, {'diff': 8.40840000000051e-05}, {'diff': 8.447300000000157e-05}, {'di...</msg>
<status status="PASS" starttime="20201029 18:27:41.696" endtime="20201029 18:27:41.700"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:27:41.704" level="INFO">${ACCURACY} = {'diff': [8.452800000000038e-05, 8.46249999999979e-05, 8.41669999999961e-05, 8.487499999999815e-05, 8.40840000000051e-05, 8.447300000000157e-05, 8.493000000000389e-05, 8.494400000000346e-05, 8.4707999...</msg>
<status status="PASS" starttime="20201029 18:27:41.701" endtime="20201029 18:27:41.704"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:27:41.708" level="INFO">NAME: accuracy-TIMER_SLEEP-72-philip</msg>
<status status="PASS" starttime="20201029 18:27:41.707" endtime="20201029 18:27:41.708"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:27:41.710" level="INFO">VALUE: [8.452800000000038e-05, 8.46249999999979e-05, 8.41669999999961e-05, 8.487499999999815e-05, 8.40840000000051e-05, 8.447300000000157e-05, 8.493000000000389e-05, 8.494400000000346e-05, 8.470799999999584e-05, 8.412500000000434e-05, 8.490300000000423e-05, 8.42919999999997e-05, 8.42919999999997e-05, 8.505600000000002e-05, 8.423600000000142e-05, 8.508299999999969e-05, 8.415300000000348e-05, 8.4459000000002e-05, 8.433399999999841e-05, 8.504100000000098e-05, 8.465299999999704e-05, 8.431899999999937e-05, 8.418099999999568e-05, 8.418000000000314e-05, 8.440300000000373e-05, 8.502800000000088e-05, 8.409699999999826e-05, 8.473600000000192e-05, 8.418000000000314e-05, 8.493100000000336e-05, 8.488899999999772e-05, 8.494399999999652e-05, 8.448600000000167e-05, 8.411099999999783e-05, 8.452800000000038e-05, 8.43049999999998e-05, 8.487499999999815e-05, 8.475000000000149e-05, 8.420900000000175e-05, 8.473600000000192e-05, 8.505500000000055e-05, 8.473600000000192e-05, 8.495799999999609e-05, 8.487499999999815e-05, 8.455500000000005e-05, 8.461099999999833e-05, 8.486099999999858e-05, 8.505499999999361e-05, 8.475000000000149e-05, 8.41249999999974e-05]</msg>
<status status="PASS" starttime="20201029 18:27:41.709" endtime="20201029 18:27:41.711"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:41.705" endtime="20201029 18:27:41.712"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:27:41.715" endtime="20201029 18:27:41.735"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:41.714" endtime="20201029 18:27:41.736"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:41.713" endtime="20201029 18:27:41.736"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:41.346" endtime="20201029 18:27:41.736"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:41.344" endtime="20201029 18:27:41.736"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:41.746" endtime="20201029 18:27:41.763"></status>
</kw>
<msg timestamp="20201029 18:27:41.764" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:41.743" endtime="20201029 18:27:41.764"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:41.766" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:41.765" endtime="20201029 18:27:41.767"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:41.767" endtime="20201029 18:27:41.769"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:41.741" endtime="20201029 18:27:41.769"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:41.739" endtime="20201029 18:27:41.770"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:41.777" endtime="20201029 18:27:42.062"></status>
</kw>
<msg timestamp="20201029 18:27:42.065" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021127292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021212667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:41.775" endtime="20201029 18:27:42.065"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:42.073" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021127292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021212667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:42.066" endtime="20201029 18:27:42.074"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:42.074" endtime="20201029 18:27:42.076"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:41.772" endtime="20201029 18:27:42.077"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:41.770" endtime="20201029 18:27:42.077"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:27:42.086" level="INFO">${RESULT} = [{'diff': 8.537500000000212e-05}, {'diff': 8.541600000000135e-05}, {'diff': 8.51660000000011e-05}, {'diff': 8.537499999999865e-05}, {'diff': 8.545800000000006e-05}, {'diff': 8.519400000000024e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:27:42.079" endtime="20201029 18:27:42.086"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:27:42.095" level="INFO">${ACCURACY} = {'diff': [8.537500000000212e-05, 8.541600000000135e-05, 8.51660000000011e-05, 8.537499999999865e-05, 8.545800000000006e-05, 8.519400000000024e-05, 8.586099999999958e-05, 8.555499999999758e-05, 8.56810...</msg>
<status status="PASS" starttime="20201029 18:27:42.088" endtime="20201029 18:27:42.095"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:27:42.105" level="INFO">NAME: accuracy-TIMER_SLEEP-73-philip</msg>
<status status="PASS" starttime="20201029 18:27:42.102" endtime="20201029 18:27:42.106"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:27:42.110" level="INFO">VALUE: [8.537500000000212e-05, 8.541600000000135e-05, 8.51660000000011e-05, 8.537499999999865e-05, 8.545800000000006e-05, 8.519400000000024e-05, 8.586099999999958e-05, 8.555499999999758e-05, 8.568100000000065e-05, 8.601299999999937e-05, 8.56249999999989e-05, 8.565299999999804e-05, 8.540300000000126e-05, 8.57370000000024e-05, 8.536099999999908e-05, 8.526300000000209e-05, 8.583299999999697e-05, 8.551399999999834e-05, 8.561099999999933e-05, 8.577799999999816e-05, 8.520799999999981e-05, 8.520799999999981e-05, 8.590300000000176e-05, 8.574999999999902e-05, 8.51110000000023e-05, 8.533299999999994e-05, 8.51660000000011e-05, 8.604099999999851e-05, 8.512500000000187e-05, 8.586099999999958e-05, 8.595800000000056e-05, 8.519400000000024e-05, 8.509699999999926e-05, 8.531999999999984e-05, 8.570800000000031e-05, 8.573599999999945e-05, 8.541700000000083e-05, 8.541599999999788e-05, 8.594500000000047e-05, 8.590199999999881e-05, 8.519400000000024e-05, 8.524999999999852e-05, 8.56799999999977e-05, 8.545800000000006e-05, 8.519499999999972e-05, 8.530600000000027e-05, 8.572199999999988e-05, 8.595900000000004e-05, 8.573599999999945e-05, 8.586199999999905e-05]</msg>
<status status="PASS" starttime="20201029 18:27:42.108" endtime="20201029 18:27:42.112"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:42.097" endtime="20201029 18:27:42.113"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:27:42.121" endtime="20201029 18:27:42.143"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:42.117" endtime="20201029 18:27:42.144"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:42.115" endtime="20201029 18:27:42.144"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:41.737" endtime="20201029 18:27:42.145"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:41.737" endtime="20201029 18:27:42.145"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:42.163" endtime="20201029 18:27:42.184"></status>
</kw>
<msg timestamp="20201029 18:27:42.185" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:42.160" endtime="20201029 18:27:42.185"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:42.187" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:42.186" endtime="20201029 18:27:42.187"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:42.188" endtime="20201029 18:27:42.190"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:42.155" endtime="20201029 18:27:42.190"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:42.150" endtime="20201029 18:27:42.191"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:42.197" endtime="20201029 18:27:42.483"></status>
</kw>
<msg timestamp="20201029 18:27:42.486" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033385431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033471833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:42.196" endtime="20201029 18:27:42.486"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:42.494" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033385431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033471833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:42.487" endtime="20201029 18:27:42.494"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:42.495" endtime="20201029 18:27:42.496"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:42.193" endtime="20201029 18:27:42.497"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:42.191" endtime="20201029 18:27:42.497"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:27:42.501" level="INFO">${RESULT} = [{'diff': 8.640199999999931e-05}, {'diff': 8.652799999999544e-05}, {'diff': 8.629099999999529e-05}, {'diff': 8.661100000000033e-05}, {'diff': 8.636100000000008e-05}, {'diff': 8.661100000000033e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:27:42.498" endtime="20201029 18:27:42.502"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:27:42.506" level="INFO">${ACCURACY} = {'diff': [8.640199999999931e-05, 8.652799999999544e-05, 8.629099999999529e-05, 8.661100000000033e-05, 8.636100000000008e-05, 8.661100000000033e-05, 8.627800000000213e-05, 8.661100000000033e-05, 8.6584...</msg>
<status status="PASS" starttime="20201029 18:27:42.502" endtime="20201029 18:27:42.507"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:27:42.511" level="INFO">NAME: accuracy-TIMER_SLEEP-74-philip</msg>
<status status="PASS" starttime="20201029 18:27:42.510" endtime="20201029 18:27:42.511"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:27:42.513" level="INFO">VALUE: [8.640199999999931e-05, 8.652799999999544e-05, 8.629099999999529e-05, 8.661100000000033e-05, 8.636100000000008e-05, 8.661100000000033e-05, 8.627800000000213e-05, 8.661100000000033e-05, 8.658400000000066e-05, 8.647299999999664e-05, 8.643099999999793e-05, 8.708299999999475e-05, 8.66799999999987e-05, 8.633300000000094e-05, 8.666700000000555e-05, 8.63470000000005e-05, 8.62920000000017e-05, 8.68199999999944e-05, 8.618100000000462e-05, 8.708399999999422e-05, 8.66799999999987e-05, 8.704100000000298e-05, 8.668100000000512e-05, 8.673600000000392e-05, 8.676299999999665e-05, 8.666600000000607e-05, 8.6847000000001e-05, 8.675000000000349e-05, 8.661100000000033e-05, 8.630600000000127e-05, 8.624999999999605e-05, 8.677800000000263e-05, 8.690300000000623e-05, 8.622199999999691e-05, 8.693099999999843e-05, 8.690199999999981e-05, 8.640199999999931e-05, 8.61799999999982e-05, 8.61669999999981e-05, 8.650000000000324e-05, 8.644399999999802e-05, 8.636100000000008e-05, 8.62920000000017e-05, 8.638899999999922e-05, 8.620799999999734e-05, 8.691699999999886e-05, 8.609700000000026e-05, 8.68050000000023e-05, 8.674999999999655e-05, 8.701399999999637e-05]</msg>
<status status="PASS" starttime="20201029 18:27:42.512" endtime="20201029 18:27:42.514"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:42.507" endtime="20201029 18:27:42.515"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:27:42.518" endtime="20201029 18:27:42.538"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:42.517" endtime="20201029 18:27:42.538"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:42.515" endtime="20201029 18:27:42.538"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:42.147" endtime="20201029 18:27:42.539"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:42.146" endtime="20201029 18:27:42.539"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:42.547" endtime="20201029 18:27:42.566"></status>
</kw>
<msg timestamp="20201029 18:27:42.567" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:42.546" endtime="20201029 18:27:42.567"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:42.569" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:42.568" endtime="20201029 18:27:42.569"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:42.570" endtime="20201029 18:27:42.572"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:42.543" endtime="20201029 18:27:42.572"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:42.541" endtime="20201029 18:27:42.573"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:42.579" endtime="20201029 18:27:42.866"></status>
</kw>
<msg timestamp="20201029 18:27:42.869" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019514472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019602444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:42.578" endtime="20201029 18:27:42.870"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:42.878" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019514472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019602444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:42.870" endtime="20201029 18:27:42.878"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:42.879" endtime="20201029 18:27:42.881"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:42.575" endtime="20201029 18:27:42.881"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:42.573" endtime="20201029 18:27:42.882"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:27:42.885" level="INFO">${RESULT} = [{'diff': 8.797199999999866e-05}, {'diff': 8.783300000000244e-05}, {'diff': 8.71799999999992e-05}, {'diff': 8.716700000000258e-05}, {'diff': 8.758299999999872e-05}, {'diff': 8.71799999999992e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 18:27:42.882" endtime="20201029 18:27:42.886"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:27:42.889" level="INFO">${ACCURACY} = {'diff': [8.797199999999866e-05, 8.783300000000244e-05, 8.71799999999992e-05, 8.716700000000258e-05, 8.758299999999872e-05, 8.71799999999992e-05, 8.763900000000047e-05, 8.759699999999829e-05, 8.768099...</msg>
<status status="PASS" starttime="20201029 18:27:42.886" endtime="20201029 18:27:42.890"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:27:42.894" level="INFO">NAME: accuracy-TIMER_SLEEP-75-philip</msg>
<status status="PASS" starttime="20201029 18:27:42.893" endtime="20201029 18:27:42.894"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:27:42.896" level="INFO">VALUE: [8.797199999999866e-05, 8.783300000000244e-05, 8.71799999999992e-05, 8.716700000000258e-05, 8.758299999999872e-05, 8.71799999999992e-05, 8.763900000000047e-05, 8.759699999999829e-05, 8.768099999999918e-05, 8.727799999999966e-05, 8.759799999999776e-05, 8.737500000000065e-05, 8.795799999999909e-05, 8.758300000000219e-05, 8.784699999999854e-05, 8.788900000000072e-05, 8.718099999999868e-05, 8.718099999999868e-05, 8.761099999999786e-05, 8.751400000000034e-05, 8.784700000000201e-05, 8.770900000000179e-05, 8.78059999999993e-05, 8.722300000000086e-05, 8.719400000000224e-05, 8.763800000000099e-05, 8.805500000000008e-05, 8.718000000000267e-05, 8.750000000000077e-05, 8.797199999999866e-05, 8.747200000000163e-05, 8.729199999999923e-05, 8.783400000000191e-05, 8.732000000000184e-05, 8.736200000000055e-05, 8.745900000000154e-05, 8.756899999999915e-05, 8.773599999999798e-05, 8.783299999999897e-05, 8.730499999999933e-05, 8.729199999999923e-05, 8.737500000000065e-05, 8.762499999999743e-05, 8.742999999999945e-05, 8.732000000000184e-05, 8.74730000000011e-05, 8.769499999999875e-05, 8.783400000000191e-05, 8.741599999999988e-05, 8.719399999999877e-05]</msg>
<status status="PASS" starttime="20201029 18:27:42.895" endtime="20201029 18:27:42.897"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:42.890" endtime="20201029 18:27:42.898"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:27:42.901" endtime="20201029 18:27:42.921"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:42.900" endtime="20201029 18:27:42.921"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:42.899" endtime="20201029 18:27:42.922"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:42.540" endtime="20201029 18:27:42.922"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:42.539" endtime="20201029 18:27:42.922"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:42.931" endtime="20201029 18:27:42.954"></status>
</kw>
<msg timestamp="20201029 18:27:42.954" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:42.929" endtime="20201029 18:27:42.955"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:42.957" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:42.955" endtime="20201029 18:27:42.957"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:42.958" endtime="20201029 18:27:42.959"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:42.927" endtime="20201029 18:27:42.960"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:42.924" endtime="20201029 18:27:42.960"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:42.967" endtime="20201029 18:27:43.253"></status>
</kw>
<msg timestamp="20201029 18:27:43.256" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023338167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023427, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:27:42.965" endtime="20201029 18:27:43.256"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:43.264" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023338167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023427, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:27:43.257" endtime="20201029 18:27:43.265"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:43.266" endtime="20201029 18:27:43.267"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:42.963" endtime="20201029 18:27:43.268"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:42.961" endtime="20201029 18:27:43.268"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:27:43.272" level="INFO">${RESULT} = [{'diff': 8.883299999999997e-05}, {'diff': 8.841700000000036e-05}, {'diff': 8.820800000000281e-05}, {'diff': 8.870899999999932e-05}, {'diff': 8.819499999999925e-05}, {'diff': 8.837500000000165e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:27:43.269" endtime="20201029 18:27:43.272"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:27:43.276" level="INFO">${ACCURACY} = {'diff': [8.883299999999997e-05, 8.841700000000036e-05, 8.820800000000281e-05, 8.870899999999932e-05, 8.819499999999925e-05, 8.837500000000165e-05, 8.827800000000066e-05, 8.877699999999822e-05, 8.9014...</msg>
<status status="PASS" starttime="20201029 18:27:43.273" endtime="20201029 18:27:43.276"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:27:43.281" level="INFO">NAME: accuracy-TIMER_SLEEP-76-philip</msg>
<status status="PASS" starttime="20201029 18:27:43.279" endtime="20201029 18:27:43.281"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:27:43.283" level="INFO">VALUE: [8.883299999999997e-05, 8.841700000000036e-05, 8.820800000000281e-05, 8.870899999999932e-05, 8.819499999999925e-05, 8.837500000000165e-05, 8.827800000000066e-05, 8.877699999999822e-05, 8.901400000000184e-05, 8.901400000000184e-05, 8.890300000000129e-05, 8.833300000000294e-05, 8.869400000000027e-05, 8.876400000000159e-05, 8.869499999999975e-05, 8.86670000000006e-05, 8.852800000000091e-05, 8.854099999999754e-05, 8.832000000000284e-05, 8.822200000000238e-05, 8.858299999999972e-05, 8.873600000000245e-05, 8.870799999999984e-05, 8.855500000000058e-05, 8.8945e-05, 8.893000000000095e-05, 8.829200000000023e-05, 8.909700000000326e-05, 8.907000000000012e-05, 8.904200000000098e-05, 8.890199999999834e-05, 8.894400000000052e-05, 8.830500000000033e-05, 8.812499999999793e-05, 8.870799999999984e-05, 8.891700000000086e-05, 8.879200000000073e-05, 8.869499999999975e-05, 8.811099999999836e-05, 8.884799999999901e-05, 8.847299999999864e-05, 8.86250000000019e-05, 8.888900000000172e-05, 8.826400000000109e-05, 8.847199999999916e-05, 8.89999999999988e-05, 8.824999999999805e-05, 8.837500000000165e-05, 8.833300000000294e-05, 8.877800000000116e-05]</msg>
<status status="PASS" starttime="20201029 18:27:43.282" endtime="20201029 18:27:43.285"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:43.277" endtime="20201029 18:27:43.285"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:27:43.289" endtime="20201029 18:27:43.308"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:43.287" endtime="20201029 18:27:43.309"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:43.286" endtime="20201029 18:27:43.309"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:42.923" endtime="20201029 18:27:43.309"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:42.922" endtime="20201029 18:27:43.309"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:43.318" endtime="20201029 18:27:43.337"></status>
</kw>
<msg timestamp="20201029 18:27:43.337" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:43.317" endtime="20201029 18:27:43.337"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:43.340" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:43.338" endtime="20201029 18:27:43.340"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:43.341" endtime="20201029 18:27:43.342"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:43.314" endtime="20201029 18:27:43.343"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:43.312" endtime="20201029 18:27:43.343"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:43.349" endtime="20201029 18:27:43.635"></status>
</kw>
<msg timestamp="20201029 18:27:43.638" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020463167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020552569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:43.348" endtime="20201029 18:27:43.638"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:43.647" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020463167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020552569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:43.639" endtime="20201029 18:27:43.647"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:43.648" endtime="20201029 18:27:43.649"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:43.345" endtime="20201029 18:27:43.650"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:43.344" endtime="20201029 18:27:43.650"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:27:43.654" level="INFO">${RESULT} = [{'diff': 8.940199999999884e-05}, {'diff': 8.934700000000004e-05}, {'diff': 8.938799999999927e-05}, {'diff': 8.917999999999773e-05}, {'diff': 8.956899999999768e-05}, {'diff': 8.977799999999869e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:27:43.651" endtime="20201029 18:27:43.654"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:27:43.659" level="INFO">${ACCURACY} = {'diff': [8.940199999999884e-05, 8.934700000000004e-05, 8.938799999999927e-05, 8.917999999999773e-05, 8.956899999999768e-05, 8.977799999999869e-05, 8.947200000000016e-05, 8.995799999999762e-05, 8.9195...</msg>
<status status="PASS" starttime="20201029 18:27:43.655" endtime="20201029 18:27:43.659"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:27:43.664" level="INFO">NAME: accuracy-TIMER_SLEEP-77-philip</msg>
<status status="PASS" starttime="20201029 18:27:43.663" endtime="20201029 18:27:43.664"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:27:43.666" level="INFO">VALUE: [8.940199999999884e-05, 8.934700000000004e-05, 8.938799999999927e-05, 8.917999999999773e-05, 8.956899999999768e-05, 8.977799999999869e-05, 8.947200000000016e-05, 8.995799999999762e-05, 8.919500000000025e-05, 9.011100000000036e-05, 8.940299999999832e-05, 8.940300000000179e-05, 8.909699999999979e-05, 8.916599999999816e-05, 8.91250000000024e-05, 8.924999999999905e-05, 8.980500000000183e-05, 8.922199999999991e-05, 8.96670000000016e-05, 8.948599999999973e-05, 8.909699999999979e-05, 8.9945000000001e-05, 9.011100000000036e-05, 8.947299999999964e-05, 8.951399999999887e-05, 8.966599999999866e-05, 8.940199999999884e-05, 8.945800000000059e-05, 8.945799999999712e-05, 8.937499999999918e-05, 8.976399999999912e-05, 8.972200000000041e-05, 8.936099999999961e-05, 8.923599999999948e-05, 8.976399999999912e-05, 8.95129999999994e-05, 8.920800000000034e-05, 8.969400000000127e-05, 8.956899999999768e-05, 9.002800000000241e-05, 9.004200000000198e-05, 8.994399999999805e-05, 8.955600000000105e-05, 8.918100000000068e-05, 8.987499999999968e-05, 8.972299999999989e-05, 8.962499999999943e-05, 8.976299999999965e-05, 8.945800000000059e-05, 8.98329999999975e-05]</msg>
<status status="PASS" starttime="20201029 18:27:43.665" endtime="20201029 18:27:43.667"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:43.660" endtime="20201029 18:27:43.667"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:27:43.671" endtime="20201029 18:27:43.690"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:43.669" endtime="20201029 18:27:43.691"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:43.668" endtime="20201029 18:27:43.691"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:43.310" endtime="20201029 18:27:43.692"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:43.310" endtime="20201029 18:27:43.692"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:43.700" endtime="20201029 18:27:43.720"></status>
</kw>
<msg timestamp="20201029 18:27:43.721" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:43.699" endtime="20201029 18:27:43.721"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:43.723" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:43.722" endtime="20201029 18:27:43.724"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:43.724" endtime="20201029 18:27:43.726"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:43.696" endtime="20201029 18:27:43.726"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:43.694" endtime="20201029 18:27:43.727"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:43.733" endtime="20201029 18:27:44.021"></status>
</kw>
<msg timestamp="20201029 18:27:44.024" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020511028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020601806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:43.732" endtime="20201029 18:27:44.024"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:44.032" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020511028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020601806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:44.025" endtime="20201029 18:27:44.032"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:44.033" endtime="20201029 18:27:44.035"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:43.729" endtime="20201029 18:27:44.035"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:43.727" endtime="20201029 18:27:44.036"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:27:44.040" level="INFO">${RESULT} = [{'diff': 9.077799999999969e-05}, {'diff': 9.061100000000086e-05}, {'diff': 9.068099999999871e-05}, {'diff': 9.0639e-05}, {'diff': 9.091699999999939e-05}, {'diff': 9.094399999999905e-05}, {'diff': 9.0...</msg>
<status status="PASS" starttime="20201029 18:27:44.037" endtime="20201029 18:27:44.040"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:27:44.044" level="INFO">${ACCURACY} = {'diff': [9.077799999999969e-05, 9.061100000000086e-05, 9.068099999999871e-05, 9.0639e-05, 9.091699999999939e-05, 9.094399999999905e-05, 9.052699999999997e-05, 9.098599999999776e-05, 9.062500000000043...</msg>
<status status="PASS" starttime="20201029 18:27:44.041" endtime="20201029 18:27:44.044"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:27:44.048" level="INFO">NAME: accuracy-TIMER_SLEEP-78-philip</msg>
<status status="PASS" starttime="20201029 18:27:44.047" endtime="20201029 18:27:44.048"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:27:44.051" level="INFO">VALUE: [9.077799999999969e-05, 9.061100000000086e-05, 9.068099999999871e-05, 9.0639e-05, 9.091699999999939e-05, 9.094399999999905e-05, 9.052699999999997e-05, 9.098599999999776e-05, 9.062500000000043e-05, 9.098600000000123e-05, 9.074999999999708e-05, 9.026399999999962e-05, 9.031899999999843e-05, 9.022200000000091e-05, 9.102799999999994e-05, 9.018100000000168e-05, 9.091699999999939e-05, 9.025000000000005e-05, 9.041599999999941e-05, 9.038899999999975e-05, 9.020800000000134e-05, 9.027799999999919e-05, 9.104199999999951e-05, 9.017999999999873e-05, 9.105600000000255e-05, 9.05000000000003e-05, 9.086100000000111e-05, 9.08199999999984e-05, 9.036200000000008e-05, 9.090200000000034e-05, 9.023600000000048e-05, 9.047200000000116e-05, 9.038899999999975e-05, 9.095800000000209e-05, 9.0945000000002e-05, 9.08199999999984e-05, 9.007000000000112e-05, 9.098599999999776e-05, 9.029199999999876e-05, 9.025000000000005e-05, 9.041700000000236e-05, 9.088800000000077e-05, 9.022199999999744e-05, 9.045799999999812e-05, 9.051399999999987e-05, 9.048600000000073e-05, 9.022200000000091e-05, 9.043099999999846e-05, 9.077799999999969e-05, 9.011100000000036e-05]</msg>
<status status="PASS" starttime="20201029 18:27:44.049" endtime="20201029 18:27:44.055"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:44.045" endtime="20201029 18:27:44.056"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:27:44.060" endtime="20201029 18:27:44.079"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:44.058" endtime="20201029 18:27:44.080"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:44.057" endtime="20201029 18:27:44.080"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:43.693" endtime="20201029 18:27:44.080"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:43.692" endtime="20201029 18:27:44.080"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:44.089" endtime="20201029 18:27:44.109"></status>
</kw>
<msg timestamp="20201029 18:27:44.109" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:44.087" endtime="20201029 18:27:44.109"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:44.112" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:44.110" endtime="20201029 18:27:44.112"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:44.113" endtime="20201029 18:27:44.114"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:44.085" endtime="20201029 18:27:44.115"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:44.083" endtime="20201029 18:27:44.115"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:44.122" endtime="20201029 18:27:44.408"></status>
</kw>
<msg timestamp="20201029 18:27:44.411" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020615458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020706917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:44.120" endtime="20201029 18:27:44.411"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:44.419" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020615458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020706917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:44.412" endtime="20201029 18:27:44.419"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:44.420" endtime="20201029 18:27:44.422"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:44.117" endtime="20201029 18:27:44.422"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:44.116" endtime="20201029 18:27:44.423"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:27:44.427" level="INFO">${RESULT} = [{'diff': 9.14589999999986e-05}, {'diff': 9.166700000000014e-05}, {'diff': 9.199999999999833e-05}, {'diff': 9.204099999999757e-05}, {'diff': 9.16520000000011e-05}, {'diff': 9.187500000000168e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 18:27:44.423" endtime="20201029 18:27:44.427"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:27:44.431" level="INFO">${ACCURACY} = {'diff': [9.14589999999986e-05, 9.166700000000014e-05, 9.199999999999833e-05, 9.204099999999757e-05, 9.16520000000011e-05, 9.187500000000168e-05, 9.193000000000048e-05, 9.179200000000026e-05, 9.187499...</msg>
<status status="PASS" starttime="20201029 18:27:44.427" endtime="20201029 18:27:44.431"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:27:44.435" level="INFO">NAME: accuracy-TIMER_SLEEP-79-philip</msg>
<status status="PASS" starttime="20201029 18:27:44.434" endtime="20201029 18:27:44.435"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:27:44.438" level="INFO">VALUE: [9.14589999999986e-05, 9.166700000000014e-05, 9.199999999999833e-05, 9.204099999999757e-05, 9.16520000000011e-05, 9.187500000000168e-05, 9.193000000000048e-05, 9.179200000000026e-05, 9.187499999999821e-05, 9.191700000000039e-05, 9.161100000000186e-05, 9.205600000000008e-05, 9.158399999999872e-05, 9.157000000000262e-05, 9.175000000000155e-05, 9.1639000000001e-05, 9.120800000000234e-05, 9.129199999999976e-05, 9.125000000000105e-05, 9.204200000000051e-05, 9.134700000000204e-05, 9.123599999999801e-05, 9.186099999999864e-05, 9.173600000000198e-05, 9.119500000000225e-05, 9.201299999999843e-05, 9.194400000000005e-05, 9.168000000000023e-05, 9.156899999999968e-05, 9.208299999999975e-05, 9.111099999999789e-05, 9.156899999999968e-05, 9.198600000000223e-05, 9.20000000000018e-05, 9.168000000000023e-05, 9.166700000000014e-05, 9.141600000000041e-05, 9.131899999999943e-05, 9.18329999999995e-05, 9.15000000000013e-05, 9.111099999999789e-05, 9.122300000000139e-05, 9.194400000000005e-05, 9.144499999999903e-05, 9.183399999999897e-05, 9.15139999999974e-05, 9.183399999999897e-05, 9.136100000000161e-05, 9.191600000000091e-05, 9.15269999999975e-05]</msg>
<status status="PASS" starttime="20201029 18:27:44.436" endtime="20201029 18:27:44.439"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:44.431" endtime="20201029 18:27:44.440"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:27:44.443" endtime="20201029 18:27:44.463"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:44.442" endtime="20201029 18:27:44.463"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:44.441" endtime="20201029 18:27:44.463"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:44.081" endtime="20201029 18:27:44.464"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:44.081" endtime="20201029 18:27:44.464"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:44.472" endtime="20201029 18:27:44.490"></status>
</kw>
<msg timestamp="20201029 18:27:44.491" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:44.471" endtime="20201029 18:27:44.491"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:44.493" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:44.492" endtime="20201029 18:27:44.494"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:44.494" endtime="20201029 18:27:44.496"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:44.468" endtime="20201029 18:27:44.496"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:44.466" endtime="20201029 18:27:44.497"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:44.503" endtime="20201029 18:27:44.788"></status>
</kw>
<msg timestamp="20201029 18:27:44.792" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01948175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019574139, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:27:44.502" endtime="20201029 18:27:44.792"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:44.800" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01948175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019574139, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:27:44.793" endtime="20201029 18:27:44.800"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:44.801" endtime="20201029 18:27:44.802"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:44.499" endtime="20201029 18:27:44.803"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:44.497" endtime="20201029 18:27:44.803"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:27:44.807" level="INFO">${RESULT} = [{'diff': 9.238900000000175e-05}, {'diff': 9.268099999999724e-05}, {'diff': 9.237500000000218e-05}, {'diff': 9.263800000000252e-05}, {'diff': 9.265300000000157e-05}, {'diff': 9.3026999999999e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 18:27:44.804" endtime="20201029 18:27:44.807"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:27:44.812" level="INFO">${ACCURACY} = {'diff': [9.238900000000175e-05, 9.268099999999724e-05, 9.237500000000218e-05, 9.263800000000252e-05, 9.265300000000157e-05, 9.3026999999999e-05, 9.279100000000179e-05, 9.26520000000021e-05, 9.2583000...</msg>
<status status="PASS" starttime="20201029 18:27:44.808" endtime="20201029 18:27:44.812"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:27:44.817" level="INFO">NAME: accuracy-TIMER_SLEEP-80-philip</msg>
<status status="PASS" starttime="20201029 18:27:44.816" endtime="20201029 18:27:44.817"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:27:44.819" level="INFO">VALUE: [9.238900000000175e-05, 9.268099999999724e-05, 9.237500000000218e-05, 9.263800000000252e-05, 9.265300000000157e-05, 9.3026999999999e-05, 9.279100000000179e-05, 9.26520000000021e-05, 9.258300000000025e-05, 9.258300000000025e-05, 9.305499999999814e-05, 9.252800000000144e-05, 9.29590000000001e-05, 9.294500000000053e-05, 9.294500000000053e-05, 9.294500000000053e-05, 9.259799999999929e-05, 9.28330000000005e-05, 9.244400000000055e-05, 9.304100000000204e-05, 9.261099999999939e-05, 9.241700000000089e-05, 9.308299999999728e-05, 9.270800000000037e-05, 9.238900000000175e-05, 9.237500000000218e-05, 9.226400000000162e-05, 9.25269999999985e-05, 9.25139999999984e-05, 9.286099999999964e-05, 9.209699999999932e-05, 9.276399999999865e-05, 9.259699999999982e-05, 9.298600000000323e-05, 9.268099999999724e-05, 9.236099999999914e-05, 9.241699999999742e-05, 9.212499999999846e-05, 9.230600000000033e-05, 9.275000000000255e-05, 9.280499999999789e-05, 9.293000000000148e-05, 9.21659999999977e-05, 9.216700000000064e-05, 9.276399999999865e-05, 9.238900000000175e-05, 9.26529999999981e-05, 9.215300000000107e-05, 9.280600000000083e-05, 9.270899999999985e-05]</msg>
<status status="PASS" starttime="20201029 18:27:44.818" endtime="20201029 18:27:44.820"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:44.813" endtime="20201029 18:27:44.820"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:27:44.824" endtime="20201029 18:27:44.843"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:44.822" endtime="20201029 18:27:44.844"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:44.821" endtime="20201029 18:27:44.844"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:44.465" endtime="20201029 18:27:44.844"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:44.464" endtime="20201029 18:27:44.845"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:44.853" endtime="20201029 18:27:44.871"></status>
</kw>
<msg timestamp="20201029 18:27:44.872" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:44.851" endtime="20201029 18:27:44.872"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:44.874" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:44.873" endtime="20201029 18:27:44.874"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:44.875" endtime="20201029 18:27:44.877"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:44.849" endtime="20201029 18:27:44.877"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:44.847" endtime="20201029 18:27:44.878"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:44.884" endtime="20201029 18:27:45.181"></status>
</kw>
<msg timestamp="20201029 18:27:45.184" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019450236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019543792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:44.883" endtime="20201029 18:27:45.184"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:45.192" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019450236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019543792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:45.185" endtime="20201029 18:27:45.193"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:45.194" endtime="20201029 18:27:45.195"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:44.880" endtime="20201029 18:27:45.196"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:44.878" endtime="20201029 18:27:45.196"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:27:45.200" level="INFO">${RESULT} = [{'diff': 9.355600000000158e-05}, {'diff': 9.383400000000097e-05}, {'diff': 9.393099999999849e-05}, {'diff': 9.37079999999979e-05}, {'diff': 9.392999999999901e-05}, {'diff': 9.311099999999989e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:27:45.197" endtime="20201029 18:27:45.200"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:27:45.204" level="INFO">${ACCURACY} = {'diff': [9.355600000000158e-05, 9.383400000000097e-05, 9.393099999999849e-05, 9.37079999999979e-05, 9.392999999999901e-05, 9.311099999999989e-05, 9.331899999999796e-05, 9.388899999999978e-05, 9.36939...</msg>
<status status="PASS" starttime="20201029 18:27:45.201" endtime="20201029 18:27:45.204"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:27:45.208" level="INFO">NAME: accuracy-TIMER_SLEEP-81-philip</msg>
<status status="PASS" starttime="20201029 18:27:45.207" endtime="20201029 18:27:45.209"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:27:45.211" level="INFO">VALUE: [9.355600000000158e-05, 9.383400000000097e-05, 9.393099999999849e-05, 9.37079999999979e-05, 9.392999999999901e-05, 9.311099999999989e-05, 9.331899999999796e-05, 9.388899999999978e-05, 9.369399999999833e-05, 9.388899999999978e-05, 9.356899999999821e-05, 9.31529999999986e-05, 9.362499999999996e-05, 9.313799999999955e-05, 9.363899999999953e-05, 9.386100000000064e-05, 9.327699999999925e-05, 9.384700000000107e-05, 9.387500000000021e-05, 9.366700000000214e-05, 9.407000000000165e-05, 9.348600000000026e-05, 9.309700000000032e-05, 9.322299999999992e-05, 9.316700000000164e-05, 9.387500000000021e-05, 9.398600000000076e-05, 9.342999999999851e-05, 9.38469999999976e-05, 9.329199999999829e-05, 9.337499999999971e-05, 9.322200000000044e-05, 9.312500000000293e-05, 9.322200000000044e-05, 9.388899999999978e-05, 9.311199999999936e-05, 9.351299999999993e-05, 9.384700000000107e-05, 9.366699999999867e-05, 9.315300000000207e-05, 9.379199999999879e-05, 9.40139999999999e-05, 9.393099999999849e-05, 9.347199999999722e-05, 9.334700000000057e-05, 9.333400000000047e-05, 9.35139999999994e-05, 9.32079999999974e-05, 9.368000000000223e-05, 9.316600000000216e-05]</msg>
<status status="PASS" starttime="20201029 18:27:45.209" endtime="20201029 18:27:45.212"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:45.205" endtime="20201029 18:27:45.212"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:27:45.216" endtime="20201029 18:27:45.235"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:45.214" endtime="20201029 18:27:45.236"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:45.213" endtime="20201029 18:27:45.236"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:44.845" endtime="20201029 18:27:45.236"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:44.845" endtime="20201029 18:27:45.236"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:45.245" endtime="20201029 18:27:45.264"></status>
</kw>
<msg timestamp="20201029 18:27:45.265" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:45.244" endtime="20201029 18:27:45.265"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:45.267" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:45.266" endtime="20201029 18:27:45.268"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:45.268" endtime="20201029 18:27:45.270"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:45.241" endtime="20201029 18:27:45.270"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:45.239" endtime="20201029 18:27:45.271"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:45.277" endtime="20201029 18:27:45.563"></status>
</kw>
<msg timestamp="20201029 18:27:45.566" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020447931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02054275, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:27:45.276" endtime="20201029 18:27:45.566"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:45.574" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020447931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02054275, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:27:45.567" endtime="20201029 18:27:45.574"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:45.575" endtime="20201029 18:27:45.577"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:45.273" endtime="20201029 18:27:45.577"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:45.272" endtime="20201029 18:27:45.577"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:27:45.581" level="INFO">${RESULT} = [{'diff': 9.481899999999946e-05}, {'diff': 9.505599999999961e-05}, {'diff': 9.470899999999838e-05}, {'diff': 9.491699999999992e-05}, {'diff': 9.502800000000047e-05}, {'diff': 9.456899999999921e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:27:45.578" endtime="20201029 18:27:45.582"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:27:45.585" level="INFO">${ACCURACY} = {'diff': [9.481899999999946e-05, 9.505599999999961e-05, 9.470899999999838e-05, 9.491699999999992e-05, 9.502800000000047e-05, 9.456899999999921e-05, 9.469399999999933e-05, 9.491699999999992e-05, 9.4249...</msg>
<status status="PASS" starttime="20201029 18:27:45.582" endtime="20201029 18:27:45.586"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:27:45.590" level="INFO">NAME: accuracy-TIMER_SLEEP-82-philip</msg>
<status status="PASS" starttime="20201029 18:27:45.589" endtime="20201029 18:27:45.590"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:27:45.593" level="INFO">VALUE: [9.481899999999946e-05, 9.505599999999961e-05, 9.470899999999838e-05, 9.491699999999992e-05, 9.502800000000047e-05, 9.456899999999921e-05, 9.469399999999933e-05, 9.491699999999992e-05, 9.424999999999711e-05, 9.505500000000014e-05, 9.40139999999999e-05, 9.506999999999918e-05, 9.462500000000096e-05, 9.49859999999983e-05, 9.504200000000004e-05, 9.431999999999843e-05, 9.463899999999706e-05, 9.477700000000075e-05, 9.429099999999982e-05, 9.467999999999976e-05, 9.452799999999997e-05, 9.46530000000001e-05, 9.483299999999903e-05, 9.427799999999972e-05, 9.459800000000129e-05, 9.46530000000001e-05, 9.418099999999874e-05, 9.438899999999681e-05, 9.501299999999796e-05, 9.493000000000001e-05, 9.491699999999992e-05, 9.463900000000053e-05, 9.504200000000004e-05, 9.436100000000114e-05, 9.477800000000022e-05, 9.416699999999917e-05, 9.426400000000015e-05, 9.487499999999774e-05, 9.452799999999997e-05, 9.426300000000068e-05, 9.500000000000133e-05, 9.413900000000003e-05, 9.502800000000047e-05, 9.459700000000182e-05, 9.484700000000207e-05, 9.48339999999985e-05, 9.468099999999924e-05, 9.481999999999893e-05, 9.476400000000065e-05, 9.423700000000049e-05]</msg>
<status status="PASS" starttime="20201029 18:27:45.591" endtime="20201029 18:27:45.594"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:45.586" endtime="20201029 18:27:45.594"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:27:45.598" endtime="20201029 18:27:45.617"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:45.596" endtime="20201029 18:27:45.618"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:45.595" endtime="20201029 18:27:45.618"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:45.237" endtime="20201029 18:27:45.618"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:45.237" endtime="20201029 18:27:45.619"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:45.627" endtime="20201029 18:27:45.645"></status>
</kw>
<msg timestamp="20201029 18:27:45.646" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:45.626" endtime="20201029 18:27:45.646"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:45.648" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:45.647" endtime="20201029 18:27:45.649"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:45.649" endtime="20201029 18:27:45.651"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:45.623" endtime="20201029 18:27:45.652"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:45.621" endtime="20201029 18:27:45.652"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:45.659" endtime="20201029 18:27:45.947"></status>
</kw>
<msg timestamp="20201029 18:27:45.950" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019524458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019619792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:45.658" endtime="20201029 18:27:45.951"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:45.958" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019524458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019619792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:45.952" endtime="20201029 18:27:45.959"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:45.960" endtime="20201029 18:27:45.961"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:45.655" endtime="20201029 18:27:45.962"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:45.653" endtime="20201029 18:27:45.962"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:27:45.966" level="INFO">${RESULT} = [{'diff': 9.5333999999999e-05}, {'diff': 9.54729999999987e-05}, {'diff': 9.563800000000205e-05}, {'diff': 9.58469999999996e-05}, {'diff': 9.508299999999928e-05}, {'diff': 9.556900000000021e-05}, {'dif...</msg>
<status status="PASS" starttime="20201029 18:27:45.963" endtime="20201029 18:27:45.966"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:27:45.971" level="INFO">${ACCURACY} = {'diff': [9.5333999999999e-05, 9.54729999999987e-05, 9.563800000000205e-05, 9.58469999999996e-05, 9.508299999999928e-05, 9.556900000000021e-05, 9.611099999999942e-05, 9.586100000000264e-05, 9.57920000...</msg>
<status status="PASS" starttime="20201029 18:27:45.967" endtime="20201029 18:27:45.971"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:27:45.975" level="INFO">NAME: accuracy-TIMER_SLEEP-83-philip</msg>
<status status="PASS" starttime="20201029 18:27:45.974" endtime="20201029 18:27:45.976"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:27:45.978" level="INFO">VALUE: [9.5333999999999e-05, 9.54729999999987e-05, 9.563800000000205e-05, 9.58469999999996e-05, 9.508299999999928e-05, 9.556900000000021e-05, 9.611099999999942e-05, 9.586100000000264e-05, 9.579200000000079e-05, 9.56530000000011e-05, 9.55279999999975e-05, 9.57079999999999e-05, 9.545899999999913e-05, 9.591599999999798e-05, 9.536099999999867e-05, 9.605500000000114e-05, 9.574999999999861e-05, 9.54720000000027e-05, 9.594500000000006e-05, 9.558399999999925e-05, 9.595899999999963e-05, 9.536199999999814e-05, 9.607000000000018e-05, 9.581899999999699e-05, 9.587499999999874e-05, 9.587499999999874e-05, 9.530500000000039e-05, 9.550000000000183e-05, 9.577799999999775e-05, 9.512499999999799e-05, 9.531999999999943e-05, 9.607000000000018e-05, 9.531999999999943e-05, 9.53469999999991e-05, 9.611100000000289e-05, 9.593000000000101e-05, 9.520800000000287e-05, 9.605500000000114e-05, 9.575000000000208e-05, 9.573699999999852e-05, 9.552800000000097e-05, 9.561099999999892e-05, 9.591700000000092e-05, 9.554200000000054e-05, 9.563900000000153e-05, 9.606899999999724e-05, 9.577699999999828e-05, 9.53469999999991e-05, 9.602800000000147e-05, 9.519399999999983e-05]</msg>
<status status="PASS" starttime="20201029 18:27:45.976" endtime="20201029 18:27:45.979"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:45.972" endtime="20201029 18:27:45.979"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:27:45.983" endtime="20201029 18:27:46.002"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:45.981" endtime="20201029 18:27:46.003"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:45.980" endtime="20201029 18:27:46.003"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:45.619" endtime="20201029 18:27:46.003"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:45.619" endtime="20201029 18:27:46.004"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:46.012" endtime="20201029 18:27:46.031"></status>
</kw>
<msg timestamp="20201029 18:27:46.032" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:46.010" endtime="20201029 18:27:46.032"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:46.034" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:46.033" endtime="20201029 18:27:46.034"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:46.035" endtime="20201029 18:27:46.037"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:46.008" endtime="20201029 18:27:46.037"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:46.006" endtime="20201029 18:27:46.038"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:46.044" endtime="20201029 18:27:46.330"></status>
</kw>
<msg timestamp="20201029 18:27:46.334" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019570819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019667486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:46.042" endtime="20201029 18:27:46.334"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:46.342" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019570819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019667486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:46.335" endtime="20201029 18:27:46.342"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:46.343" endtime="20201029 18:27:46.345"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:46.040" endtime="20201029 18:27:46.345"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:46.038" endtime="20201029 18:27:46.345"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:27:46.349" level="INFO">${RESULT} = [{'diff': 9.666700000000167e-05}, {'diff': 9.659700000000035e-05}, {'diff': 9.619500000000031e-05}, {'diff': 9.666700000000167e-05}, {'diff': 9.624999999999911e-05}, {'diff': 9.67920000000018e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:27:46.346" endtime="20201029 18:27:46.349"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:27:46.353" level="INFO">${ACCURACY} = {'diff': [9.666700000000167e-05, 9.659700000000035e-05, 9.619500000000031e-05, 9.666700000000167e-05, 9.624999999999911e-05, 9.67920000000018e-05, 9.640300000000185e-05, 9.680500000000189e-05, 9.69860...</msg>
<status status="PASS" starttime="20201029 18:27:46.350" endtime="20201029 18:27:46.354"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:27:46.358" level="INFO">NAME: accuracy-TIMER_SLEEP-84-philip</msg>
<status status="PASS" starttime="20201029 18:27:46.357" endtime="20201029 18:27:46.358"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:27:46.360" level="INFO">VALUE: [9.666700000000167e-05, 9.659700000000035e-05, 9.619500000000031e-05, 9.666700000000167e-05, 9.624999999999911e-05, 9.67920000000018e-05, 9.640300000000185e-05, 9.680500000000189e-05, 9.69860000000003e-05, 9.63470000000001e-05, 9.612500000000246e-05, 9.633299999999706e-05, 9.623599999999954e-05, 9.701399999999943e-05, 9.640300000000185e-05, 9.609699999999985e-05, 9.68059999999979e-05, 9.701299999999996e-05, 9.658300000000078e-05, 9.673600000000004e-05, 9.647200000000022e-05, 9.627800000000172e-05, 9.638900000000228e-05, 9.706999999999771e-05, 9.613899999999856e-05, 9.622199999999997e-05, 9.636099999999967e-05, 9.622199999999997e-05, 9.616599999999823e-05, 9.627800000000172e-05, 9.630499999999792e-05, 9.622199999999997e-05, 9.66669999999982e-05, 9.623599999999954e-05, 9.658299999999731e-05, 9.64859999999998e-05, 9.624999999999911e-05, 9.6334e-05, 9.641699999999795e-05, 9.645900000000013e-05, 9.679100000000232e-05, 9.63470000000001e-05, 9.636099999999967e-05, 9.636099999999967e-05, 9.701399999999943e-05, 9.669400000000133e-05, 9.704199999999857e-05, 9.677799999999875e-05, 9.651399999999893e-05, 9.658400000000025e-05]</msg>
<status status="PASS" starttime="20201029 18:27:46.359" endtime="20201029 18:27:46.361"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:46.354" endtime="20201029 18:27:46.362"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:27:46.365" endtime="20201029 18:27:46.384"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:46.364" endtime="20201029 18:27:46.385"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:46.362" endtime="20201029 18:27:46.385"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:46.004" endtime="20201029 18:27:46.386"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:46.004" endtime="20201029 18:27:46.386"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:46.394" endtime="20201029 18:27:46.416"></status>
</kw>
<msg timestamp="20201029 18:27:46.416" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:46.393" endtime="20201029 18:27:46.417"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:46.419" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:46.417" endtime="20201029 18:27:46.419"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:46.420" endtime="20201029 18:27:46.422"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:46.390" endtime="20201029 18:27:46.422"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:46.388" endtime="20201029 18:27:46.423"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:46.429" endtime="20201029 18:27:46.715"></status>
</kw>
<msg timestamp="20201029 18:27:46.718" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022521611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022619042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:46.427" endtime="20201029 18:27:46.719"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:46.726" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022521611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022619042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:46.719" endtime="20201029 18:27:46.727"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:46.728" endtime="20201029 18:27:46.729"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:46.425" endtime="20201029 18:27:46.730"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:46.423" endtime="20201029 18:27:46.730"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:27:46.734" level="INFO">${RESULT} = [{'diff': 9.743099999999852e-05}, {'diff': 9.788800000000084e-05}, {'diff': 9.758300000000178e-05}, {'diff': 9.756899999999874e-05}, {'diff': 9.794399999999912e-05}, {'diff': 9.769399999999887e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:27:46.731" endtime="20201029 18:27:46.734"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:27:46.738" level="INFO">${ACCURACY} = {'diff': [9.743099999999852e-05, 9.788800000000084e-05, 9.758300000000178e-05, 9.756899999999874e-05, 9.794399999999912e-05, 9.769399999999887e-05, 9.800000000000086e-05, 9.745800000000165e-05, 9.7138...</msg>
<status status="PASS" starttime="20201029 18:27:46.735" endtime="20201029 18:27:46.738"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:27:46.743" level="INFO">NAME: accuracy-TIMER_SLEEP-85-philip</msg>
<status status="PASS" starttime="20201029 18:27:46.742" endtime="20201029 18:27:46.743"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:27:46.745" level="INFO">VALUE: [9.743099999999852e-05, 9.788800000000084e-05, 9.758300000000178e-05, 9.756899999999874e-05, 9.794399999999912e-05, 9.769399999999887e-05, 9.800000000000086e-05, 9.745800000000165e-05, 9.713899999999956e-05, 9.777799999999975e-05, 9.7334000000001e-05, 9.740300000000285e-05, 9.755600000000211e-05, 9.715199999999966e-05, 9.78609999999977e-05, 9.709700000000085e-05, 9.755600000000211e-05, 9.763900000000006e-05, 9.768099999999877e-05, 9.752800000000297e-05, 9.725000000000011e-05, 9.74730000000007e-05, 9.777799999999975e-05, 9.733300000000153e-05, 9.75279999999995e-05, 9.791599999999998e-05, 9.769399999999887e-05, 9.781899999999899e-05, 9.77080000000019e-05, 9.75279999999995e-05, 9.759700000000135e-05, 9.733299999999806e-05, 9.8028e-05, 9.772300000000095e-05, 9.71799999999988e-05, 9.725000000000011e-05, 9.748599999999732e-05, 9.730499999999892e-05, 9.781899999999899e-05, 9.769399999999887e-05, 9.777799999999975e-05, 9.733399999999753e-05, 9.75279999999995e-05, 9.718100000000174e-05, 9.726300000000021e-05, 9.74019999999999e-05, 9.751399999999993e-05, 9.727799999999925e-05, 9.736100000000067e-05, 9.758299999999831e-05]</msg>
<status status="PASS" starttime="20201029 18:27:46.744" endtime="20201029 18:27:46.747"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:46.739" endtime="20201029 18:27:46.747"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:27:46.751" endtime="20201029 18:27:46.770"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:46.749" endtime="20201029 18:27:46.771"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:46.748" endtime="20201029 18:27:46.771"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:46.387" endtime="20201029 18:27:46.771"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:46.386" endtime="20201029 18:27:46.771"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:46.780" endtime="20201029 18:27:46.800"></status>
</kw>
<msg timestamp="20201029 18:27:46.801" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:46.778" endtime="20201029 18:27:46.801"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:46.803" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:46.802" endtime="20201029 18:27:46.803"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:46.804" endtime="20201029 18:27:46.806"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:46.776" endtime="20201029 18:27:46.806"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:46.774" endtime="20201029 18:27:46.807"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:46.813" endtime="20201029 18:27:47.098"></status>
</kw>
<msg timestamp="20201029 18:27:47.101" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020123347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020221556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:46.811" endtime="20201029 18:27:47.101"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:47.109" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020123347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020221556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:47.102" endtime="20201029 18:27:47.110"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:47.110" endtime="20201029 18:27:47.112"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:46.809" endtime="20201029 18:27:47.113"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:46.807" endtime="20201029 18:27:47.113"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:27:47.117" level="INFO">${RESULT} = [{'diff': 9.820900000000188e-05}, {'diff': 9.832000000000243e-05}, {'diff': 9.8721999999999e-05}, {'diff': 9.845800000000265e-05}, {'diff': 9.829100000000035e-05}, {'diff': 9.823599999999807e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 18:27:47.114" endtime="20201029 18:27:47.117"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:27:47.122" level="INFO">${ACCURACY} = {'diff': [9.820900000000188e-05, 9.832000000000243e-05, 9.8721999999999e-05, 9.845800000000265e-05, 9.829100000000035e-05, 9.823599999999807e-05, 9.859700000000235e-05, 9.894400000000012e-05, 9.822199...</msg>
<status status="PASS" starttime="20201029 18:27:47.118" endtime="20201029 18:27:47.122"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:27:47.126" level="INFO">NAME: accuracy-TIMER_SLEEP-86-philip</msg>
<status status="PASS" starttime="20201029 18:27:47.125" endtime="20201029 18:27:47.126"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:27:47.129" level="INFO">VALUE: [9.820900000000188e-05, 9.832000000000243e-05, 9.8721999999999e-05, 9.845800000000265e-05, 9.829100000000035e-05, 9.823599999999807e-05, 9.859700000000235e-05, 9.894400000000012e-05, 9.82219999999985e-05, 9.9028000000001e-05, 9.906999999999971e-05, 9.89860000000023e-05, 9.84869999999978e-05, 9.89159999999975e-05, 9.822200000000197e-05, 9.897200000000272e-05, 9.86800000000003e-05, 9.905500000000067e-05, 9.88059999999999e-05, 9.893100000000002e-05, 9.893100000000002e-05, 9.881899999999999e-05, 9.843000000000005e-05, 9.875000000000161e-05, 9.887499999999827e-05, 9.845799999999919e-05, 9.88609999999987e-05, 9.843000000000005e-05, 9.850000000000136e-05, 9.897200000000272e-05, 9.865300000000063e-05, 9.858400000000225e-05, 9.863900000000106e-05, 9.848599999999832e-05, 9.813900000000056e-05, 9.847199999999875e-05, 9.892999999999708e-05, 9.829100000000035e-05, 9.836100000000167e-05, 9.822200000000197e-05, 9.813900000000056e-05, 9.840300000000038e-05, 9.901399999999796e-05, 9.852699999999756e-05, 9.870899999999891e-05, 9.90410000000011e-05, 9.8415999999997e-05, 9.830499999999992e-05, 9.845900000000213e-05, 9.809700000000185e-05]</msg>
<status status="PASS" starttime="20201029 18:27:47.127" endtime="20201029 18:27:47.129"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:47.123" endtime="20201029 18:27:47.130"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:27:47.134" endtime="20201029 18:27:47.153"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:47.132" endtime="20201029 18:27:47.154"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:47.131" endtime="20201029 18:27:47.154"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:46.772" endtime="20201029 18:27:47.154"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:46.772" endtime="20201029 18:27:47.154"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:47.163" endtime="20201029 18:27:47.181"></status>
</kw>
<msg timestamp="20201029 18:27:47.182" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:47.161" endtime="20201029 18:27:47.182"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:47.184" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:47.183" endtime="20201029 18:27:47.185"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:47.185" endtime="20201029 18:27:47.187"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:47.159" endtime="20201029 18:27:47.187"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:47.157" endtime="20201029 18:27:47.188"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:47.194" endtime="20201029 18:27:47.481"></status>
</kw>
<msg timestamp="20201029 18:27:47.484" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019490972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01959025, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:27:47.193" endtime="20201029 18:27:47.484"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:47.492" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019490972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01959025, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:27:47.485" endtime="20201029 18:27:47.493"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:47.493" endtime="20201029 18:27:47.495"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:47.190" endtime="20201029 18:27:47.495"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:47.188" endtime="20201029 18:27:47.496"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:27:47.500" level="INFO">${RESULT} = [{'diff': 9.927800000000125e-05}, {'diff': 9.970800000000044e-05}, {'diff': 9.931999999999996e-05}, {'diff': 9.987499999999927e-05}, {'diff': 9.947299999999923e-05}, {'diff': 9.962499999999902e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:27:47.497" endtime="20201029 18:27:47.500"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:27:47.504" level="INFO">${ACCURACY} = {'diff': [9.927800000000125e-05, 9.970800000000044e-05, 9.931999999999996e-05, 9.987499999999927e-05, 9.947299999999923e-05, 9.962499999999902e-05, 9.961099999999945e-05, 0.00010006899999999777, 9.929...</msg>
<status status="PASS" starttime="20201029 18:27:47.501" endtime="20201029 18:27:47.504"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:27:47.508" level="INFO">NAME: accuracy-TIMER_SLEEP-87-philip</msg>
<status status="PASS" starttime="20201029 18:27:47.507" endtime="20201029 18:27:47.509"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:27:47.511" level="INFO">VALUE: [9.927800000000125e-05, 9.970800000000044e-05, 9.931999999999996e-05, 9.987499999999927e-05, 9.947299999999923e-05, 9.962499999999902e-05, 9.961099999999945e-05, 0.00010006899999999777, 9.929099999999788e-05, 9.931900000000049e-05, 9.976400000000218e-05, 9.98609999999997e-05, 9.93609999999992e-05, 9.987499999999927e-05, 9.974999999999914e-05, 9.96670000000012e-05, 9.923600000000254e-05, 9.940199999999844e-05, 9.912499999999852e-05, 9.96800000000013e-05, 9.916699999999723e-05, 9.998599999999983e-05, 9.99999999999994e-05, 9.93609999999992e-05, 9.958400000000325e-05, 9.909799999999885e-05, 9.934699999999963e-05, 9.9722e-05, 9.956899999999727e-05, 9.979199999999785e-05, 9.997200000000026e-05, 9.961099999999945e-05, 9.930599999999692e-05, 9.962499999999902e-05, 9.912499999999852e-05, 9.969500000000034e-05, 9.923599999999907e-05, 0.00010006900000000124, 9.965199999999869e-05, 9.941600000000148e-05, 0.00010004200000000157, 0.00010000000000000286, 9.987499999999927e-05, 9.941700000000095e-05, 9.980599999999742e-05, 9.986199999999917e-05, 0.00010004200000000157, 9.986199999999917e-05, 9.9722e-05, 9.942999999999758e-05]</msg>
<status status="PASS" starttime="20201029 18:27:47.509" endtime="20201029 18:27:47.512"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:47.505" endtime="20201029 18:27:47.512"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:27:47.516" endtime="20201029 18:27:47.535"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:47.514" endtime="20201029 18:27:47.536"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:47.513" endtime="20201029 18:27:47.536"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:47.155" endtime="20201029 18:27:47.536"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:47.155" endtime="20201029 18:27:47.536"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:47.545" endtime="20201029 18:27:47.566"></status>
</kw>
<msg timestamp="20201029 18:27:47.566" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:47.543" endtime="20201029 18:27:47.566"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:47.569" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:47.567" endtime="20201029 18:27:47.569"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:47.570" endtime="20201029 18:27:47.571"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:47.541" endtime="20201029 18:27:47.572"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:47.539" endtime="20201029 18:27:47.572"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:47.579" endtime="20201029 18:27:47.863"></status>
</kw>
<msg timestamp="20201029 18:27:47.866" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020958681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021059153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:47.577" endtime="20201029 18:27:47.867"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:47.874" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020958681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021059153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:47.867" endtime="20201029 18:27:47.875"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:47.875" endtime="20201029 18:27:47.877"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:47.575" endtime="20201029 18:27:47.877"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:47.573" endtime="20201029 18:27:47.878"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:27:47.882" level="INFO">${RESULT} = [{'diff': 0.00010047200000000076}, {'diff': 0.00010094499999999812}, {'diff': 0.00010030499999999845}, {'diff': 0.00010023600000000008}, {'diff': 0.00010067999999999883}, {'diff': 0.000100694000000001...</msg>
<status status="PASS" starttime="20201029 18:27:47.879" endtime="20201029 18:27:47.882"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:27:47.886" level="INFO">${ACCURACY} = {'diff': [0.00010047200000000076, 0.00010094499999999812, 0.00010030499999999845, 0.00010023600000000008, 0.00010067999999999883, 0.00010069400000000187, 0.00010034700000000063, 0.00010037499999999977...</msg>
<status status="PASS" starttime="20201029 18:27:47.883" endtime="20201029 18:27:47.886"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:27:47.890" level="INFO">NAME: accuracy-TIMER_SLEEP-88-philip</msg>
<status status="PASS" starttime="20201029 18:27:47.889" endtime="20201029 18:27:47.890"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:27:47.892" level="INFO">VALUE: [0.00010047200000000076, 0.00010094499999999812, 0.00010030499999999845, 0.00010023600000000008, 0.00010067999999999883, 0.00010069400000000187, 0.00010034700000000063, 0.00010037499999999977, 0.00010087500000000027, 0.00010075000000000014, 0.0001004869999999998, 0.00010058400000000078, 0.0001008749999999968, 0.00010075000000000014, 0.00010023600000000008, 0.0001009159999999995, 0.0001003199999999975, 0.00010029200000000182, 0.0001003199999999975, 0.00010075000000000014, 0.00010013900000000256, 0.00010009700000000038, 0.0001001670000000017, 0.00010051400000000293, 0.00010087500000000027, 0.0001010000000000004, 0.00010063900000000306, 0.00010030499999999845, 0.00010017999999999833, 0.00010070800000000144, 0.00010093100000000202, 0.00010029199999999835, 0.00010029199999999835, 0.00010045900000000066, 0.00010061100000000045, 0.00010011099999999995, 0.00010072199999999754, 0.00010011099999999995, 0.00010086099999999723, 0.00010012499999999952, 0.00010018100000000127, 0.00010076399999999971, 0.00010091699999999898, 0.00010047300000000023, 0.00010023699999999955, 0.00010013899999999909, 0.00010040299999999891, 0.00010022199999999704, 0.00010093000000000255, 0.000100722000000001]</msg>
<status status="PASS" starttime="20201029 18:27:47.891" endtime="20201029 18:27:47.894"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:47.886" endtime="20201029 18:27:47.895"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:27:47.898" endtime="20201029 18:27:47.917"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:47.897" endtime="20201029 18:27:47.918"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:47.896" endtime="20201029 18:27:47.918"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:47.537" endtime="20201029 18:27:47.919"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:47.537" endtime="20201029 18:27:47.919"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:47.927" endtime="20201029 18:27:47.947"></status>
</kw>
<msg timestamp="20201029 18:27:47.948" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:47.926" endtime="20201029 18:27:47.948"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:47.950" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:47.949" endtime="20201029 18:27:47.950"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:47.951" endtime="20201029 18:27:47.953"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:47.923" endtime="20201029 18:27:47.953"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:47.921" endtime="20201029 18:27:47.954"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:47.960" endtime="20201029 18:27:48.245"></status>
</kw>
<msg timestamp="20201029 18:27:48.248" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0202475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020349042, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:27:47.959" endtime="20201029 18:27:48.248"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:48.256" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0202475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020349042, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:27:48.249" endtime="20201029 18:27:48.256"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:48.257" endtime="20201029 18:27:48.259"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:47.956" endtime="20201029 18:27:48.259"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:47.954" endtime="20201029 18:27:48.260"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:27:48.264" level="INFO">${RESULT} = [{'diff': 0.0001015419999999996}, {'diff': 0.00010129199999999935}, {'diff': 0.00010172199999999854}, {'diff': 0.00010193000000000008}, {'diff': 0.00010165299999999669}, {'diff': 0.0001017079999999989...</msg>
<status status="PASS" starttime="20201029 18:27:48.261" endtime="20201029 18:27:48.264"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:27:48.268" level="INFO">${ACCURACY} = {'diff': [0.0001015419999999996, 0.00010129199999999935, 0.00010172199999999854, 0.00010193000000000008, 0.00010165299999999669, 0.00010170799999999897, 0.00010167999999999983, 0.0001020420000000001, ...</msg>
<status status="PASS" starttime="20201029 18:27:48.265" endtime="20201029 18:27:48.269"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:27:48.273" level="INFO">NAME: accuracy-TIMER_SLEEP-89-philip</msg>
<status status="PASS" starttime="20201029 18:27:48.272" endtime="20201029 18:27:48.273"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:27:48.275" level="INFO">VALUE: [0.0001015419999999996, 0.00010129199999999935, 0.00010172199999999854, 0.00010193000000000008, 0.00010165299999999669, 0.00010170799999999897, 0.00010167999999999983, 0.0001020420000000001, 0.00010161199999999745, 0.00010182000000000246, 0.00010198600000000183, 0.00010130499999999945, 0.00010109800000000085, 0.00010115200000000019, 0.00010197199999999879, 0.00010212499999999805, 0.00010140299999999991, 0.00010165300000000016, 0.00010159699999999841, 0.00010125000000000065, 0.00010111100000000095, 0.00010145899999999819, 0.00010209700000000238, 0.00010204099999999716, 0.00010159699999999841, 0.0001017359999999981, 0.00010148599999999786, 0.00010165300000000016, 0.00010113900000000009, 0.00010187500000000127, 0.00010137500000000077, 0.00010188900000000084, 0.00010108399999999781, 0.00010156899999999927, 0.00010136099999999773, 0.00010161099999999798, 0.00010119400000000237, 0.00010198599999999836, 0.00010123600000000108, 0.0001020000000000014, 0.00010116699999999923, 0.00010163899999999712, 0.00010162499999999755, 0.00010136099999999773, 0.00010187500000000127, 0.00010165300000000016, 0.000101819999999999, 0.00010194399999999965, 0.0001017359999999981, 0.0001012220000000015]</msg>
<status status="PASS" starttime="20201029 18:27:48.274" endtime="20201029 18:27:48.276"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:48.269" endtime="20201029 18:27:48.277"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:27:48.280" endtime="20201029 18:27:48.300"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:48.279" endtime="20201029 18:27:48.300"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:48.278" endtime="20201029 18:27:48.300"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:47.920" endtime="20201029 18:27:48.301"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:47.919" endtime="20201029 18:27:48.301"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:48.309" endtime="20201029 18:27:48.328"></status>
</kw>
<msg timestamp="20201029 18:27:48.329" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:48.308" endtime="20201029 18:27:48.329"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:48.331" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:48.330" endtime="20201029 18:27:48.331"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:48.332" endtime="20201029 18:27:48.334"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:48.305" endtime="20201029 18:27:48.334"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:48.303" endtime="20201029 18:27:48.335"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:48.341" endtime="20201029 18:27:48.627"></status>
</kw>
<msg timestamp="20201029 18:27:48.630" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019474083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019576375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:48.340" endtime="20201029 18:27:48.631"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:48.638" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019474083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019576375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:48.631" endtime="20201029 18:27:48.639"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:48.639" endtime="20201029 18:27:48.641"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:48.337" endtime="20201029 18:27:48.642"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:48.335" endtime="20201029 18:27:48.642"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:27:48.646" level="INFO">${RESULT} = [{'diff': 0.00010229200000000035}, {'diff': 0.00010306900000000077}, {'diff': 0.000102513999999998}, {'diff': 0.00010280500000000095}, {'diff': 0.00010236099999999873}, {'diff': 0.00010225000000000165...</msg>
<status status="PASS" starttime="20201029 18:27:48.643" endtime="20201029 18:27:48.646"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:27:48.650" level="INFO">${ACCURACY} = {'diff': [0.00010229200000000035, 0.00010306900000000077, 0.000102513999999998, 0.00010280500000000095, 0.00010236099999999873, 0.00010225000000000165, 0.00010270799999999997, 0.00010224999999999818, ...</msg>
<status status="PASS" starttime="20201029 18:27:48.647" endtime="20201029 18:27:48.650"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:27:48.654" level="INFO">NAME: accuracy-TIMER_SLEEP-90-philip</msg>
<status status="PASS" starttime="20201029 18:27:48.653" endtime="20201029 18:27:48.655"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:27:48.657" level="INFO">VALUE: [0.00010229200000000035, 0.00010306900000000077, 0.000102513999999998, 0.00010280500000000095, 0.00010236099999999873, 0.00010225000000000165, 0.00010270799999999997, 0.00010224999999999818, 0.00010284799999999913, 0.00010301400000000197, 0.00010244499999999962, 0.00010301299999999902, 0.00010218000000000033, 0.00010234700000000263, 0.00010215299999999719, 0.00010294500000000012, 0.00010233400000000253, 0.00010277800000000128, 0.00010274999999999868, 0.00010269499999999987, 0.00010255499999999723, 0.00010288800000000237, 0.00010247199999999929, 0.00010227800000000078, 0.00010254199999999714, 0.00010215300000000066, 0.00010277800000000128, 0.00010233299999999959, 0.00010219499999999937, 0.00010219500000000284, 0.00010268000000000083, 0.00010251299999999852, 0.00010234700000000263, 0.00010276400000000172, 0.00010268000000000083, 0.0001025550000000007, 0.00010298600000000283, 0.00010211099999999848, 0.00010230599999999992, 0.00010216700000000023, 0.00010230599999999992, 0.00010240199999999797, 0.00010270799999999997, 0.000102513999999998, 0.00010209699999999891, 0.00010283300000000009, 0.00010258299999999984, 0.00010236099999999873, 0.0001030420000000011, 0.00010261100000000245]</msg>
<status status="PASS" starttime="20201029 18:27:48.655" endtime="20201029 18:27:48.657"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:48.651" endtime="20201029 18:27:48.658"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:27:48.662" endtime="20201029 18:27:48.681"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:48.660" endtime="20201029 18:27:48.682"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:48.659" endtime="20201029 18:27:48.682"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:48.302" endtime="20201029 18:27:48.682"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:48.301" endtime="20201029 18:27:48.682"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:48.692" endtime="20201029 18:27:48.713"></status>
</kw>
<msg timestamp="20201029 18:27:48.713" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:48.689" endtime="20201029 18:27:48.713"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:48.716" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:48.714" endtime="20201029 18:27:48.716"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:48.717" endtime="20201029 18:27:48.718"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:48.687" endtime="20201029 18:27:48.719"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:48.685" endtime="20201029 18:27:48.719"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:48.726" endtime="20201029 18:27:49.011"></status>
</kw>
<msg timestamp="20201029 18:27:49.014" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022107278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022211139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:48.724" endtime="20201029 18:27:49.015"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:49.022" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022107278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022211139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:49.015" endtime="20201029 18:27:49.023"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:49.023" endtime="20201029 18:27:49.025"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:48.722" endtime="20201029 18:27:49.026"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:48.720" endtime="20201029 18:27:49.026"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:27:49.030" level="INFO">${RESULT} = [{'diff': 0.00010386100000000023}, {'diff': 0.00010394500000000112}, {'diff': 0.00010376399999999925}, {'diff': 0.00010366599999999879}, {'diff': 0.00010374999999999968}, {'diff': 0.000103333000000000...</msg>
<status status="PASS" starttime="20201029 18:27:49.027" endtime="20201029 18:27:49.030"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:27:49.034" level="INFO">${ACCURACY} = {'diff': [0.00010386100000000023, 0.00010394500000000112, 0.00010376399999999925, 0.00010366599999999879, 0.00010374999999999968, 0.00010333300000000059, 0.0001032359999999996, 0.00010334700000000016,...</msg>
<status status="PASS" starttime="20201029 18:27:49.031" endtime="20201029 18:27:49.034"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:27:49.038" level="INFO">NAME: accuracy-TIMER_SLEEP-91-philip</msg>
<status status="PASS" starttime="20201029 18:27:49.037" endtime="20201029 18:27:49.038"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:27:49.040" level="INFO">VALUE: [0.00010386100000000023, 0.00010394500000000112, 0.00010376399999999925, 0.00010366599999999879, 0.00010374999999999968, 0.00010333300000000059, 0.0001032359999999996, 0.00010334700000000016, 0.00010391700000000198, 0.00010380599999999796, 0.00010320800000000047, 0.00010391699999999851, 0.00010384800000000013, 0.00010398600000000036, 0.00010384700000000066, 0.00010317999999999786, 0.00010322200000000004, 0.00010354199999999814, 0.00010372200000000054, 0.00010324999999999918, 0.0001040139999999995, 0.00010379200000000185, 0.00010320800000000047, 0.00010393100000000155, 0.00010372200000000054, 0.00010316600000000176, 0.00010372200000000054, 0.00010383299999999762, 0.00010386100000000023, 0.00010311099999999948, 0.00010379200000000185, 0.00010322299999999951, 0.00010398600000000036, 0.00010322200000000004, 0.00010333299999999712, 0.00010363900000000259, 0.00010383299999999762, 0.00010311099999999948, 0.00010331900000000102, 0.00010369399999999793, 0.00010324999999999918, 0.00010395900000000069, 0.00010372300000000001, 0.00010336099999999973, 0.00010398600000000036, 0.00010359700000000041, 0.00010334700000000016, 0.00010384700000000066, 0.0001040689999999983, 0.00010334700000000016]</msg>
<status status="PASS" starttime="20201029 18:27:49.039" endtime="20201029 18:27:49.042"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:49.035" endtime="20201029 18:27:49.043"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:27:49.046" endtime="20201029 18:27:49.066"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:49.045" endtime="20201029 18:27:49.066"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:49.044" endtime="20201029 18:27:49.066"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:48.683" endtime="20201029 18:27:49.067"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:48.683" endtime="20201029 18:27:49.067"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:49.075" endtime="20201029 18:27:49.095"></status>
</kw>
<msg timestamp="20201029 18:27:49.096" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:49.074" endtime="20201029 18:27:49.096"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:49.098" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:49.097" endtime="20201029 18:27:49.098"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:49.099" endtime="20201029 18:27:49.101"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:49.071" endtime="20201029 18:27:49.101"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:49.069" endtime="20201029 18:27:49.102"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:49.108" endtime="20201029 18:27:49.393"></status>
</kw>
<msg timestamp="20201029 18:27:49.396" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019496153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019600583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:49.106" endtime="20201029 18:27:49.396"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:49.404" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019496153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019600583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:49.397" endtime="20201029 18:27:49.404"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:49.405" endtime="20201029 18:27:49.407"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:49.104" endtime="20201029 18:27:49.407"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:49.102" endtime="20201029 18:27:49.408"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:27:49.411" level="INFO">${RESULT} = [{'diff': 0.00010443000000000258}, {'diff': 0.0001042360000000006}, {'diff': 0.00010498599999999789}, {'diff': 0.00010508299999999887}, {'diff': 0.00010456999999999828}, {'diff': 0.0001049859999999978...</msg>
<status status="PASS" starttime="20201029 18:27:49.408" endtime="20201029 18:27:49.412"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:27:49.416" level="INFO">${ACCURACY} = {'diff': [0.00010443000000000258, 0.0001042360000000006, 0.00010498599999999789, 0.00010508299999999887, 0.00010456999999999828, 0.00010498599999999789, 0.0001041810000000018, 0.0001050689999999993, 0...</msg>
<status status="PASS" starttime="20201029 18:27:49.412" endtime="20201029 18:27:49.416"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:27:49.421" level="INFO">NAME: accuracy-TIMER_SLEEP-92-philip</msg>
<status status="PASS" starttime="20201029 18:27:49.420" endtime="20201029 18:27:49.421"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:27:49.423" level="INFO">VALUE: [0.00010443000000000258, 0.0001042360000000006, 0.00010498599999999789, 0.00010508299999999887, 0.00010456999999999828, 0.00010498599999999789, 0.0001041810000000018, 0.0001050689999999993, 0.00010495899999999822, 0.00010500000000000093, 0.00010481899999999905, 0.00010481900000000252, 0.00010454199999999914, 0.00010472200000000154, 0.00010477799999999982, 0.00010497199999999832, 0.00010443100000000205, 0.00010462500000000055, 0.00010476300000000077, 0.00010495800000000222, 0.00010497200000000179, 0.00010487499999999733, 0.00010504100000000016, 0.00010483400000000156, 0.00010452799999999957, 0.00010448600000000086, 0.00010472300000000101, 0.00010461200000000045, 0.0001046940000000024, 0.00010444400000000215, 0.00010497200000000179, 0.00010427699999999984, 0.00010511100000000148, 0.00010433300000000159, 0.00010479199999999939, 0.00010456999999999828, 0.00010425000000000018, 0.00010462499999999708, 0.00010473599999999764, 0.00010467999999999936, 0.00010501299999999755, 0.0001047360000000011, 0.00010463900000000012, 0.00010488900000000037, 0.00010502800000000007, 0.00010500000000000093, 0.00010436100000000073, 0.00010469500000000187, 0.00010441700000000248, 0.00010477799999999982]</msg>
<status status="PASS" starttime="20201029 18:27:49.422" endtime="20201029 18:27:49.428"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:49.417" endtime="20201029 18:27:49.428"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:27:49.432" endtime="20201029 18:27:49.452"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:49.431" endtime="20201029 18:27:49.452"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:49.430" endtime="20201029 18:27:49.453"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:49.068" endtime="20201029 18:27:49.453"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:49.067" endtime="20201029 18:27:49.453"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:49.462" endtime="20201029 18:27:49.481"></status>
</kw>
<msg timestamp="20201029 18:27:49.481" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:49.460" endtime="20201029 18:27:49.481"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:49.483" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:49.482" endtime="20201029 18:27:49.484"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:49.484" endtime="20201029 18:27:49.486"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:49.457" endtime="20201029 18:27:49.487"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:49.455" endtime="20201029 18:27:49.487"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:49.493" endtime="20201029 18:27:49.780"></status>
</kw>
<msg timestamp="20201029 18:27:49.783" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019575083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019680625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:49.492" endtime="20201029 18:27:49.783"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:49.791" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019575083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019680625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:49.784" endtime="20201029 18:27:49.791"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:49.792" endtime="20201029 18:27:49.794"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:49.489" endtime="20201029 18:27:49.794"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:49.488" endtime="20201029 18:27:49.794"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:27:49.798" level="INFO">${RESULT} = [{'diff': 0.00010554200000000014}, {'diff': 0.00010551399999999753}, {'diff': 0.00010533400000000206}, {'diff': 0.00010572300000000201}, {'diff': 0.00010509699999999844}, {'diff': 0.000106110999999999...</msg>
<status status="PASS" starttime="20201029 18:27:49.795" endtime="20201029 18:27:49.798"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:27:49.802" level="INFO">${ACCURACY} = {'diff': [0.00010554200000000014, 0.00010551399999999753, 0.00010533400000000206, 0.00010572300000000201, 0.00010509699999999844, 0.00010611099999999901, 0.00010509700000000191, 0.00010519399999999943...</msg>
<status status="PASS" starttime="20201029 18:27:49.799" endtime="20201029 18:27:49.803"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:27:49.807" level="INFO">NAME: accuracy-TIMER_SLEEP-93-philip</msg>
<status status="PASS" starttime="20201029 18:27:49.806" endtime="20201029 18:27:49.807"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:27:49.809" level="INFO">VALUE: [0.00010554200000000014, 0.00010551399999999753, 0.00010533400000000206, 0.00010572300000000201, 0.00010509699999999844, 0.00010611099999999901, 0.00010509700000000191, 0.00010519399999999943, 0.00010516600000000029, 0.00010583299999999962, 0.00010568099999999983, 0.00010541700000000001, 0.00010572299999999854, 0.00010577800000000082, 0.00010606999999999978, 0.00010534699999999869, 0.0001057499999999982, 0.00010531899999999955, 0.00010554100000000066, 0.00010509700000000191, 0.00010536099999999826, 0.00010509699999999844, 0.0001053200000000025, 0.00010591700000000051, 0.00010591600000000104, 0.00010565200000000122, 0.00010515300000000019, 0.00010604100000000116, 0.00010538900000000087, 0.00010545800000000272, 0.00010518099999999933, 0.00010565300000000069, 0.00010576399999999778, 0.00010566600000000079, 0.00010594499999999965, 0.00010602700000000159, 0.0001057360000000021, 0.00010559700000000241, 0.00010565300000000069, 0.00010576399999999778, 0.00010513900000000062, 0.00010562499999999808, 0.00010604200000000064, 0.00010570900000000244, 0.00010552800000000057, 0.00010591600000000104, 0.00010604100000000116, 0.00010595799999999975, 0.00010559699999999894, 0.00010508299999999887]</msg>
<status status="PASS" starttime="20201029 18:27:49.808" endtime="20201029 18:27:49.810"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:49.803" endtime="20201029 18:27:49.810"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:27:49.814" endtime="20201029 18:27:49.833"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:49.812" endtime="20201029 18:27:49.834"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:49.811" endtime="20201029 18:27:49.834"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:49.454" endtime="20201029 18:27:49.835"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:49.453" endtime="20201029 18:27:49.835"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:49.843" endtime="20201029 18:27:49.865"></status>
</kw>
<msg timestamp="20201029 18:27:49.866" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:49.842" endtime="20201029 18:27:49.866"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:49.868" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:49.867" endtime="20201029 18:27:49.868"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:49.869" endtime="20201029 18:27:49.871"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:49.839" endtime="20201029 18:27:49.871"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:49.837" endtime="20201029 18:27:49.872"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:49.878" endtime="20201029 18:27:50.164"></status>
</kw>
<msg timestamp="20201029 18:27:50.167" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022529972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022637014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:49.876" endtime="20201029 18:27:50.167"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:50.175" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022529972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022637014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:50.168" endtime="20201029 18:27:50.176"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:50.176" endtime="20201029 18:27:50.178"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:49.874" endtime="20201029 18:27:50.179"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:49.872" endtime="20201029 18:27:50.179"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:27:50.183" level="INFO">${RESULT} = [{'diff': 0.00010704200000000164}, {'diff': 0.00010634700000000316}, {'diff': 0.00010661099999999951}, {'diff': 0.00010697200000000032}, {'diff': 0.00010663900000000212}, {'diff': 0.000106945000000000...</msg>
<status status="PASS" starttime="20201029 18:27:50.180" endtime="20201029 18:27:50.183"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:27:50.187" level="INFO">${ACCURACY} = {'diff': [0.00010704200000000164, 0.00010634700000000316, 0.00010661099999999951, 0.00010697200000000032, 0.00010663900000000212, 0.00010694500000000065, 0.00010649999999999896, 0.00010691700000000151...</msg>
<status status="PASS" starttime="20201029 18:27:50.184" endtime="20201029 18:27:50.187"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:27:50.191" level="INFO">NAME: accuracy-TIMER_SLEEP-94-philip</msg>
<status status="PASS" starttime="20201029 18:27:50.190" endtime="20201029 18:27:50.191"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:27:50.194" level="INFO">VALUE: [0.00010704200000000164, 0.00010634700000000316, 0.00010661099999999951, 0.00010697200000000032, 0.00010663900000000212, 0.00010694500000000065, 0.00010649999999999896, 0.00010691700000000151, 0.0001067499999999992, 0.00010665200000000222, 0.00010666700000000126, 0.00010618099999999686, 0.00010629200000000089, 0.00010670899999999997, 0.00010658300000000037, 0.00010666699999999779, 0.00010620899999999947, 0.00010708300000000087, 0.00010647299999999929, 0.00010672200000000007, 0.00010630499999999751, 0.00010666699999999779, 0.0001063889999999984, 0.00010619400000000043, 0.00010629199999999742, 0.00010627799999999785, 0.00010626399999999828, 0.00010611200000000195, 0.00010613799999999868, 0.00010618000000000086, 0.00010673599999999964, 0.00010629200000000089, 0.0001065690000000008, 0.00010697200000000032, 0.00010616700000000076, 0.0001062499999999987, 0.00010622299999999904, 0.00010707000000000078, 0.00010694500000000065, 0.00010692999999999814, 0.00010666599999999832, 0.00010680500000000148, 0.00010640300000000144, 0.0001067080000000005, 0.00010679200000000139, 0.00010704200000000164, 0.00010694500000000065, 0.00010672299999999954, 0.00010652699999999862, 0.00010648599999999939]</msg>
<status status="PASS" starttime="20201029 18:27:50.192" endtime="20201029 18:27:50.195"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:50.188" endtime="20201029 18:27:50.196"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:27:50.199" endtime="20201029 18:27:50.219"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:50.198" endtime="20201029 18:27:50.219"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:50.197" endtime="20201029 18:27:50.219"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:49.836" endtime="20201029 18:27:50.220"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:49.835" endtime="20201029 18:27:50.220"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:50.228" endtime="20201029 18:27:50.249"></status>
</kw>
<msg timestamp="20201029 18:27:50.250" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:50.227" endtime="20201029 18:27:50.250"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:50.252" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:50.251" endtime="20201029 18:27:50.252"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:50.253" endtime="20201029 18:27:50.255"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:50.224" endtime="20201029 18:27:50.255"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:50.222" endtime="20201029 18:27:50.256"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:50.262" endtime="20201029 18:27:50.546"></status>
</kw>
<msg timestamp="20201029 18:27:50.549" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020305403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020413181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:50.260" endtime="20201029 18:27:50.549"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:50.557" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020305403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020413181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:50.550" endtime="20201029 18:27:50.557"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:50.558" endtime="20201029 18:27:50.560"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:50.258" endtime="20201029 18:27:50.560"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:50.256" endtime="20201029 18:27:50.561"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:27:50.565" level="INFO">${RESULT} = [{'diff': 0.00010777799999999935}, {'diff': 0.00010754099999999919}, {'diff': 0.0001080690000000023}, {'diff': 0.00010794400000000218}, {'diff': 0.00010805499999999926}, {'diff': 0.0001074999999999999...</msg>
<status status="PASS" starttime="20201029 18:27:50.561" endtime="20201029 18:27:50.565"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:27:50.569" level="INFO">${ACCURACY} = {'diff': [0.00010777799999999935, 0.00010754099999999919, 0.0001080690000000023, 0.00010794400000000218, 0.00010805499999999926, 0.00010749999999999996, 0.00010747200000000082, 0.00010782000000000153,...</msg>
<status status="PASS" starttime="20201029 18:27:50.565" endtime="20201029 18:27:50.569"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:27:50.574" level="INFO">NAME: accuracy-TIMER_SLEEP-95-philip</msg>
<status status="PASS" starttime="20201029 18:27:50.573" endtime="20201029 18:27:50.574"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:27:50.576" level="INFO">VALUE: [0.00010777799999999935, 0.00010754099999999919, 0.0001080690000000023, 0.00010794400000000218, 0.00010805499999999926, 0.00010749999999999996, 0.00010747200000000082, 0.00010782000000000153, 0.00010782000000000153, 0.0001077500000000002, 0.00010723700000000308, 0.0001077080000000015, 0.00010749999999999996, 0.00010787500000000033, 0.00010798600000000089, 0.00010722200000000057, 0.00010749999999999996, 0.0001077219999999976, 0.00010779200000000239, 0.00010780599999999849, 0.00010804199999999917, 0.00010767999999999889, 0.0001077080000000015, 0.00010733300000000112, 0.00010786100000000076, 0.00010730600000000146, 0.00010712500000000305, 0.00010741700000000201, 0.00010798600000000089, 0.00010774999999999674, 0.00010763899999999965, 0.00010786099999999729, 0.00010744400000000168, 0.00010805500000000273, 0.00010786099999999729, 0.00010747200000000082, 0.0001071950000000009, 0.00010747300000000029, 0.00010800000000000046, 0.0001077630000000003, 0.0001075829999999979, 0.00010744400000000168, 0.00010745800000000125, 0.00010794399999999871, 0.00010730500000000198, 0.00010737499999999983, 0.00010723600000000014, 0.00010763899999999965, 0.000107902, 0.00010758399999999738]</msg>
<status status="PASS" starttime="20201029 18:27:50.575" endtime="20201029 18:27:50.577"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:50.570" endtime="20201029 18:27:50.577"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:27:50.581" endtime="20201029 18:27:50.600"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:50.579" endtime="20201029 18:27:50.601"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:50.578" endtime="20201029 18:27:50.601"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:50.221" endtime="20201029 18:27:50.602"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:50.220" endtime="20201029 18:27:50.602"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:50.610" endtime="20201029 18:27:50.630"></status>
</kw>
<msg timestamp="20201029 18:27:50.631" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:50.609" endtime="20201029 18:27:50.631"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:50.633" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:50.632" endtime="20201029 18:27:50.634"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:50.634" endtime="20201029 18:27:50.636"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:50.606" endtime="20201029 18:27:50.636"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:50.604" endtime="20201029 18:27:50.637"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:50.643" endtime="20201029 18:27:50.930"></status>
</kw>
<msg timestamp="20201029 18:27:50.933" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019502222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019610444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:50.642" endtime="20201029 18:27:50.933"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:50.941" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019502222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019610444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:50.934" endtime="20201029 18:27:50.941"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:50.942" endtime="20201029 18:27:50.944"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:50.639" endtime="20201029 18:27:50.944"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:50.637" endtime="20201029 18:27:50.945"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:27:50.948" level="INFO">${RESULT} = [{'diff': 0.00010822200000000157}, {'diff': 0.00010813900000000015}, {'diff': 0.00010806899999999883}, {'diff': 0.00010865200000000075}, {'diff': 0.00010886100000000176}, {'diff': 0.000108944999999999...</msg>
<status status="PASS" starttime="20201029 18:27:50.945" endtime="20201029 18:27:50.949"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:27:50.952" level="INFO">${ACCURACY} = {'diff': [0.00010822200000000157, 0.00010813900000000015, 0.00010806899999999883, 0.00010865200000000075, 0.00010886100000000176, 0.00010894499999999918, 0.0001083890000000004, 0.00010826400000000028,...</msg>
<status status="PASS" starttime="20201029 18:27:50.949" endtime="20201029 18:27:50.953"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:27:50.957" level="INFO">NAME: accuracy-TIMER_SLEEP-96-philip</msg>
<status status="PASS" starttime="20201029 18:27:50.956" endtime="20201029 18:27:50.957"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:27:50.959" level="INFO">VALUE: [0.00010822200000000157, 0.00010813900000000015, 0.00010806899999999883, 0.00010865200000000075, 0.00010886100000000176, 0.00010894499999999918, 0.0001083890000000004, 0.00010826400000000028, 0.00010811100000000101, 0.00010863799999999771, 0.00010832000000000203, 0.00010845800000000225, 0.00010893000000000014, 0.00010867999999999989, 0.00010869400000000293, 0.00010881999999999906, 0.0001085280000000001, 0.00010875000000000121, 0.0001087089999999985, 0.00010852700000000062, 0.00010823600000000114, 0.00010834699999999822, 0.00010841700000000301, 0.00010895800000000275, 0.00010884800000000167, 0.00010886099999999829, 0.00010857000000000228, 0.00010862499999999761, 0.00010884800000000167, 0.00010902700000000112, 0.00010897199999999885, 0.00010822200000000157, 0.00010887499999999786, 0.00010904200000000017, 0.0001083890000000004, 0.0001083340000000016, 0.0001080699999999983, 0.00010901400000000103, 0.00010834699999999822, 0.00010883300000000262, 0.0001087089999999985, 0.00010816699999999929, 0.00010861099999999804, 0.00010905599999999974, 0.00010859699999999847, 0.00010805599999999874, 0.00010863900000000065, 0.000108902000000001, 0.00010901300000000155, 0.00010887500000000133]</msg>
<status status="PASS" starttime="20201029 18:27:50.958" endtime="20201029 18:27:50.960"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:50.953" endtime="20201029 18:27:50.960"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:27:50.964" endtime="20201029 18:27:50.983"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:50.963" endtime="20201029 18:27:50.984"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:50.961" endtime="20201029 18:27:50.984"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:50.603" endtime="20201029 18:27:50.985"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:50.602" endtime="20201029 18:27:50.985"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:50.993" endtime="20201029 18:27:51.016"></status>
</kw>
<msg timestamp="20201029 18:27:51.016" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:50.992" endtime="20201029 18:27:51.016"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:51.018" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:51.017" endtime="20201029 18:27:51.019"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:51.019" endtime="20201029 18:27:51.021"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:50.989" endtime="20201029 18:27:51.022"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:50.987" endtime="20201029 18:27:51.022"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:51.028" endtime="20201029 18:27:51.314"></status>
</kw>
<msg timestamp="20201029 18:27:51.317" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021473861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021583431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:51.027" endtime="20201029 18:27:51.317"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:51.324" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021473861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021583431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:51.318" endtime="20201029 18:27:51.325"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:51.326" endtime="20201029 18:27:51.327"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:51.024" endtime="20201029 18:27:51.328"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:51.023" endtime="20201029 18:27:51.328"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:27:51.332" level="INFO">${RESULT} = [{'diff': 0.0001095699999999998}, {'diff': 0.00010961099999999904}, {'diff': 0.0001097630000000023}, {'diff': 0.000109902999999998}, {'diff': 0.00010940300000000097}, {'diff': 0.00010925000000000171},...</msg>
<status status="PASS" starttime="20201029 18:27:51.329" endtime="20201029 18:27:51.332"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:27:51.336" level="INFO">${ACCURACY} = {'diff': [0.0001095699999999998, 0.00010961099999999904, 0.0001097630000000023, 0.000109902999999998, 0.00010940300000000097, 0.00010925000000000171, 0.00010931900000000008, 0.00010943000000000064, 0....</msg>
<status status="PASS" starttime="20201029 18:27:51.333" endtime="20201029 18:27:51.336"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:27:51.340" level="INFO">NAME: accuracy-TIMER_SLEEP-97-philip</msg>
<status status="PASS" starttime="20201029 18:27:51.339" endtime="20201029 18:27:51.341"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:27:51.343" level="INFO">VALUE: [0.0001095699999999998, 0.00010961099999999904, 0.0001097630000000023, 0.000109902999999998, 0.00010940300000000097, 0.00010925000000000171, 0.00010931900000000008, 0.00010943000000000064, 0.00010945799999999978, 0.0001091950000000029, 0.00010951400000000153, 0.00010965299999999775, 0.00010979100000000144, 0.00010933300000000312, 0.00010999999999999899, 0.00010951400000000153, 0.00011000000000000246, 0.00010947199999999935, 0.00010929200000000042, 0.00010980600000000049, 0.00010990300000000147, 0.00010983300000000015, 0.00010929099999999747, 0.00010915300000000072, 0.00010963899999999818, 0.0001095829999999999, 0.0001098890000000019, 0.0001094159999999976, 0.00010961099999999904, 0.00010980600000000049, 0.00010973700000000211, 0.00010969400000000046, 0.0001098890000000019, 0.00011001400000000203, 0.00010990300000000147, 0.00010969400000000046, 0.00010988899999999843, 0.00010963899999999818, 0.00010963900000000165, 0.00010918099999999986, 0.00010987499999999886, 0.0001100549999999978, 0.00010998599999999942, 0.00010916600000000082, 0.0001098890000000019, 0.00010969400000000046, 0.00010929200000000042, 0.00010937499999999836, 0.00010954200000000067, 0.00010997199999999985]</msg>
<status status="PASS" starttime="20201029 18:27:51.342" endtime="20201029 18:27:51.344"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:51.337" endtime="20201029 18:27:51.345"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:27:51.349" endtime="20201029 18:27:51.368"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:51.347" endtime="20201029 18:27:51.368"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:51.346" endtime="20201029 18:27:51.369"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:50.986" endtime="20201029 18:27:51.369"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:50.985" endtime="20201029 18:27:51.369"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:51.378" endtime="20201029 18:27:51.397"></status>
</kw>
<msg timestamp="20201029 18:27:51.398" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:51.376" endtime="20201029 18:27:51.398"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:51.400" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:51.399" endtime="20201029 18:27:51.400"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:51.401" endtime="20201029 18:27:51.403"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:51.374" endtime="20201029 18:27:51.403"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:51.372" endtime="20201029 18:27:51.404"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:51.410" endtime="20201029 18:27:51.696"></status>
</kw>
<msg timestamp="20201029 18:27:51.699" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019681597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019792125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:51.408" endtime="20201029 18:27:51.699"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:51.708" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019681597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019792125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:51.700" endtime="20201029 18:27:51.708"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:51.709" endtime="20201029 18:27:51.711"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:51.406" endtime="20201029 18:27:51.711"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:51.404" endtime="20201029 18:27:51.712"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:27:51.716" level="INFO">${RESULT} = [{'diff': 0.0001105280000000021}, {'diff': 0.00011029200000000142}, {'diff': 0.00011104200000000217}, {'diff': 0.00011068100000000136}, {'diff': 0.00011093100000000161}, {'diff': 0.0001108200000000010...</msg>
<status status="PASS" starttime="20201029 18:27:51.712" endtime="20201029 18:27:51.716"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:27:51.720" level="INFO">${ACCURACY} = {'diff': [0.0001105280000000021, 0.00011029200000000142, 0.00011104200000000217, 0.00011068100000000136, 0.00011093100000000161, 0.00011082000000000106, 0.0001104020000000025, 0.00011023599999999967, ...</msg>
<status status="PASS" starttime="20201029 18:27:51.716" endtime="20201029 18:27:51.720"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:27:51.725" level="INFO">NAME: accuracy-TIMER_SLEEP-98-philip</msg>
<status status="PASS" starttime="20201029 18:27:51.724" endtime="20201029 18:27:51.725"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:27:51.727" level="INFO">VALUE: [0.0001105280000000021, 0.00011029200000000142, 0.00011104200000000217, 0.00011068100000000136, 0.00011093100000000161, 0.00011082000000000106, 0.0001104020000000025, 0.00011023599999999967, 0.00011052799999999863, 0.00011106900000000183, 0.00011080599999999802, 0.0001110830000000014, 0.00011022199999999663, 0.00011065299999999875, 0.00011058400000000038, 0.00011024999999999924, 0.00011031900000000108, 0.00011062499999999961, 0.00011066699999999832, 0.00011020800000000053, 0.00011033300000000065, 0.0001110700000000013, 0.00011058400000000038, 0.00011026399999999881, 0.00011086199999999977, 0.00011081900000000158, 0.00011086100000000029, 0.00011006900000000083, 0.00011031900000000108, 0.00011026399999999881, 0.00011111100000000054, 0.00011106999999999784, 0.00011037499999999936, 0.00011029100000000194, 0.00011042999999999817, 0.0001105830000000009, 0.00011090199999999953, 0.00011011099999999954, 0.00011037499999999936, 0.00011094500000000118, 0.00011023599999999967, 0.0001108480000000002, 0.00011077799999999888, 0.00011066599999999885, 0.00011040199999999903, 0.00011029200000000142, 0.0001105280000000021, 0.00011024999999999924, 0.00011018100000000086, 0.00011063899999999918]</msg>
<status status="PASS" starttime="20201029 18:27:51.726" endtime="20201029 18:27:51.728"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:51.721" endtime="20201029 18:27:51.728"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:27:51.732" endtime="20201029 18:27:51.752"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:51.731" endtime="20201029 18:27:51.752"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:51.729" endtime="20201029 18:27:51.753"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:51.370" endtime="20201029 18:27:51.753"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:51.370" endtime="20201029 18:27:51.753"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:51.762" endtime="20201029 18:27:51.781"></status>
</kw>
<msg timestamp="20201029 18:27:51.782" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:51.760" endtime="20201029 18:27:51.782"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:51.784" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:51.783" endtime="20201029 18:27:51.784"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:51.785" endtime="20201029 18:27:51.786"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:51.757" endtime="20201029 18:27:51.787"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:51.755" endtime="20201029 18:27:51.787"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:51.794" endtime="20201029 18:27:52.080"></status>
</kw>
<msg timestamp="20201029 18:27:52.083" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019684861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019796486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:51.792" endtime="20201029 18:27:52.084"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:52.091" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019684861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019796486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:52.085" endtime="20201029 18:27:52.092"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:52.092" endtime="20201029 18:27:52.094"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:51.790" endtime="20201029 18:27:52.095"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:51.788" endtime="20201029 18:27:52.095"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:27:52.099" level="INFO">${RESULT} = [{'diff': 0.00011162499999999714}, {'diff': 0.00011169399999999899}, {'diff': 0.00011133300000000165}, {'diff': 0.00011136100000000079}, {'diff': 0.00011115299999999925}, {'diff': 0.000111500000000000...</msg>
<status status="PASS" starttime="20201029 18:27:52.096" endtime="20201029 18:27:52.099"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:27:52.103" level="INFO">${ACCURACY} = {'diff': [0.00011162499999999714, 0.00011169399999999899, 0.00011133300000000165, 0.00011136100000000079, 0.00011115299999999925, 0.00011150000000000049, 0.00011156899999999886, 0.00011133300000000165...</msg>
<status status="PASS" starttime="20201029 18:27:52.100" endtime="20201029 18:27:52.103"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:27:52.107" level="INFO">NAME: accuracy-TIMER_SLEEP-99-philip</msg>
<status status="PASS" starttime="20201029 18:27:52.106" endtime="20201029 18:27:52.108"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:27:52.110" level="INFO">VALUE: [0.00011162499999999714, 0.00011169399999999899, 0.00011133300000000165, 0.00011136100000000079, 0.00011115299999999925, 0.00011150000000000049, 0.00011156899999999886, 0.00011133300000000165, 0.00011118000000000239, 0.00011118099999999839, 0.00011172199999999813, 0.00011163900000000018, 0.00011130600000000199, 0.00011175000000000074, 0.00011177799999999988, 0.00011168099999999889, 0.00011130499999999904, 0.00011161099999999757, 0.00011175000000000074, 0.0001115419999999992, 0.00011200000000000099, 0.00011112500000000011, 0.00011133400000000113, 0.00011201300000000108, 0.00011191699999999957, 0.00011115199999999978, 0.00011179099999999997, 0.00011163899999999671, 0.00011118099999999839, 0.00011191699999999957, 0.00011126399999999981, 0.00011112500000000011, 0.00011168099999999889, 0.00011163900000000018, 0.00011125000000000024, 0.00011129099999999947, 0.00011166699999999932, 0.00011125000000000024, 0.00011200000000000099, 0.0001114029999999995, 0.00011200000000000099, 0.00011129200000000242, 0.00011126399999999981, 0.00011109800000000045, 0.00011200000000000099, 0.0001120419999999997, 0.00011112500000000011, 0.00011170799999999856, 0.00011180599999999902, 0.00011126399999999981]</msg>
<status status="PASS" starttime="20201029 18:27:52.108" endtime="20201029 18:27:52.110"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:52.104" endtime="20201029 18:27:52.111"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:27:52.114" endtime="20201029 18:27:52.134"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:52.113" endtime="20201029 18:27:52.134"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:52.112" endtime="20201029 18:27:52.135"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:51.754" endtime="20201029 18:27:52.135"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:51.753" endtime="20201029 18:27:52.135"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:52.144" endtime="20201029 18:27:52.163"></status>
</kw>
<msg timestamp="20201029 18:27:52.164" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:52.142" endtime="20201029 18:27:52.164"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:52.166" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:52.165" endtime="20201029 18:27:52.166"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:52.167" endtime="20201029 18:27:52.169"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:52.140" endtime="20201029 18:27:52.169"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:52.138" endtime="20201029 18:27:52.170"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:52.176" endtime="20201029 18:27:52.461"></status>
</kw>
<msg timestamp="20201029 18:27:52.464" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020833042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020945861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:52.175" endtime="20201029 18:27:52.464"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:27:52.472" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020833042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020945861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:27:52.465" endtime="20201029 18:27:52.472"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:52.473" endtime="20201029 18:27:52.475"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:52.172" endtime="20201029 18:27:52.475"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:52.170" endtime="20201029 18:27:52.476"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:27:52.480" level="INFO">${RESULT} = [{'diff': 0.00011281900000000011}, {'diff': 0.00011305600000000027}, {'diff': 0.00011263899999999771}, {'diff': 0.0001123480000000017}, {'diff': 0.00011265300000000075}, {'diff': 0.0001122780000000003...</msg>
<status status="PASS" starttime="20201029 18:27:52.476" endtime="20201029 18:27:52.480"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:27:52.484" level="INFO">${ACCURACY} = {'diff': [0.00011281900000000011, 0.00011305600000000027, 0.00011263899999999771, 0.0001123480000000017, 0.00011265300000000075, 0.00011227800000000038, 0.0001127359999999987, 0.000112596999999999, 0....</msg>
<status status="PASS" starttime="20201029 18:27:52.480" endtime="20201029 18:27:52.484"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:27:52.488" level="INFO">NAME: accuracy-TIMER_SLEEP-100-philip</msg>
<status status="PASS" starttime="20201029 18:27:52.487" endtime="20201029 18:27:52.488"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:27:52.490" level="INFO">VALUE: [0.00011281900000000011, 0.00011305600000000027, 0.00011263899999999771, 0.0001123480000000017, 0.00011265300000000075, 0.00011227800000000038, 0.0001127359999999987, 0.000112596999999999, 0.00011263900000000118, 0.00011276400000000131, 0.00011269500000000293, 0.00011247199999999888, 0.0001127220000000026, 0.00011233400000000213, 0.00011252800000000063, 0.00011308299999999993, 0.00011306900000000036, 0.00011267999999999695, 0.00011301400000000156, 0.0001125420000000002, 0.00011252799999999716, 0.00011229199999999995, 0.00011272199999999913, 0.00011283399999999916, 0.00011258299999999943, 0.00011222199999999863, 0.00011281900000000011, 0.00011229199999999995, 0.00011252800000000063, 0.00011213899999999721, 0.00011216699999999982, 0.00011258399999999891, 0.00011236099999999832, 0.00011270899999999903, 0.0001123749999999979, 0.00011279100000000097, 0.00011247199999999888, 0.00011238900000000093, 0.00011268099999999989, 0.00011229199999999995, 0.000112903000000001, 0.0001128749999999984, 0.00011275000000000174, 0.0001124030000000005, 0.00011269399999999999, 0.00011265300000000075, 0.00011259700000000247, 0.00011300000000000199, 0.00011238899999999746, 0.00011277800000000088]</msg>
<status status="PASS" starttime="20201029 18:27:52.489" endtime="20201029 18:27:52.492"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:52.484" endtime="20201029 18:27:52.492"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:27:52.496" endtime="20201029 18:27:52.515"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:52.495" endtime="20201029 18:27:52.516"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:52.493" endtime="20201029 18:27:52.516"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:52.136" endtime="20201029 18:27:52.517"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:52.136" endtime="20201029 18:27:52.517"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:14.024" endtime="20201029 18:27:52.517"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
</tags>
<status status="PASS" starttime="20201029 18:27:10.931" endtime="20201029 18:27:52.517" critical="yes"></status>
</test>
<status status="PASS" starttime="20201029 18:26:21.880" endtime="20201029 18:27:52.521"></status>
</suite>
<suite id="s1-s4" name="Sleep Jitter" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/03__sleep_jitter.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 18:27:52.573" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 18:27:52.582" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 18:27:53.775" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 18:27:52.572" endtime="20201029 18:27:53.776"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 18:27:56.782" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20201029 18:27:53.778" endtime="20201029 18:27:56.783"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:52.571" endtime="20201029 18:27:56.784"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:27:56.788" endtime="20201029 18:27:57.039"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:56.786" endtime="20201029 18:27:57.040"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:27:57.052" endtime="20201029 18:28:00.074"></status>
</kw>
<msg timestamp="20201029 18:28:00.075" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:27:57.050" endtime="20201029 18:28:00.075"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:28:00.080" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:28:00.077" endtime="20201029 18:28:00.081"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:28:00.088" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:28:00.082" endtime="20201029 18:28:00.089"></status>
</kw>
<status status="FAIL" starttime="20201029 18:27:57.048" endtime="20201029 18:28:00.090"></status>
</kw>
<status status="FAIL" starttime="20201029 18:27:57.046" endtime="20201029 18:28:00.091"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:57.045" endtime="20201029 18:28:00.092"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:28:00.099" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:28:00.098" endtime="20201029 18:28:00.100"></status>
</kw>
<status status="PASS" starttime="20201029 18:28:00.094" endtime="20201029 18:28:00.101"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:57.044" endtime="20201029 18:28:00.101"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:57.043" endtime="20201029 18:28:00.101"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:28:00.103" endtime="20201029 18:28:00.106"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:57.042" endtime="20201029 18:28:00.107"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:28:00.108" endtime="20201029 18:28:00.112"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:57.040" endtime="20201029 18:28:00.113"></status>
</kw>
<status status="PASS" starttime="20201029 18:27:52.569" endtime="20201029 18:28:00.113"></status>
</kw>
<test id="s1-s4-t1" name="0 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:28:00.125" endtime="20201029 18:28:00.147"></status>
</kw>
<status status="PASS" starttime="20201029 18:28:00.122" endtime="20201029 18:28:00.148"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:28:00.167" endtime="20201029 18:28:03.187"></status>
</kw>
<msg timestamp="20201029 18:28:03.188" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:28:00.166" endtime="20201029 18:28:03.189"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:28:03.193" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:28:03.190" endtime="20201029 18:28:03.194"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:28:03.199" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:28:03.196" endtime="20201029 18:28:03.200"></status>
</kw>
<status status="FAIL" starttime="20201029 18:28:00.163" endtime="20201029 18:28:03.202"></status>
</kw>
<status status="FAIL" starttime="20201029 18:28:00.161" endtime="20201029 18:28:03.203"></status>
</kw>
<status status="PASS" starttime="20201029 18:28:00.158" endtime="20201029 18:28:03.204"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:28:03.211" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:28:03.210" endtime="20201029 18:28:03.212"></status>
</kw>
<status status="PASS" starttime="20201029 18:28:03.205" endtime="20201029 18:28:03.212"></status>
</kw>
<status status="PASS" starttime="20201029 18:28:00.156" endtime="20201029 18:28:03.214"></status>
</kw>
<status status="PASS" starttime="20201029 18:28:00.155" endtime="20201029 18:28:03.215"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:28:03.216" endtime="20201029 18:28:03.219"></status>
</kw>
<status status="PASS" starttime="20201029 18:28:00.152" endtime="20201029 18:28:03.221"></status>
</kw>
<status status="PASS" starttime="20201029 18:28:00.149" endtime="20201029 18:28:03.222"></status>
</kw>
<status status="PASS" starttime="20201029 18:28:00.120" endtime="20201029 18:28:03.222"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>0</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:28:03.239" endtime="20201029 18:28:09.364"></status>
</kw>
<msg timestamp="20201029 18:28:09.365" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0\r\n'], 'data': [{'bg-timer-count': '0'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:28:03.236" endtime="20201029 18:28:09.366"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:28:09.370" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0\r\n'], 'data': [{'bg-timer-count': '0'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:28:09.367" endtime="20201029 18:28:09.371"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:28:09.373" endtime="20201029 18:28:09.376"></status>
</kw>
<status status="PASS" starttime="20201029 18:28:03.230" endtime="20201029 18:28:09.377"></status>
</kw>
<status status="PASS" starttime="20201029 18:28:03.226" endtime="20201029 18:28:09.378"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:28:09.383" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'bg-timer-count': 0, 'main-timer-interval': 100000}</msg>
<status status="PASS" starttime="20201029 18:28:09.380" endtime="20201029 18:28:09.384"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:28:09.393" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 18:28:09.390" endtime="20201029 18:28:09.393"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:28:09.397" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 18:28:09.395" endtime="20201029 18:28:09.397"></status>
</kw>
<status status="PASS" starttime="20201029 18:28:09.385" endtime="20201029 18:28:09.398"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:28:09.406" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 18:28:09.404" endtime="20201029 18:28:09.407"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:28:09.410" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 18:28:09.408" endtime="20201029 18:28:09.411"></status>
</kw>
<status status="PASS" starttime="20201029 18:28:09.400" endtime="20201029 18:28:09.412"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:28:09.420" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 18:28:09.418" endtime="20201029 18:28:09.421"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:28:09.424" level="INFO">VALUE: 0</msg>
<status status="PASS" starttime="20201029 18:28:09.422" endtime="20201029 18:28:09.425"></status>
</kw>
<status status="PASS" starttime="20201029 18:28:09.413" endtime="20201029 18:28:09.426"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:28:09.434" endtime="20201029 18:28:09.736"></status>
</kw>
<msg timestamp="20201029 18:28:09.739" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.104039292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.204064042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:28:09.432" endtime="20201029 18:28:09.739"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:28:09.747" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.104039292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.204064042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:28:09.740" endtime="20201029 18:28:09.747"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:28:09.748" endtime="20201029 18:28:09.750"></status>
</kw>
<status status="PASS" starttime="20201029 18:28:09.430" endtime="20201029 18:28:09.751"></status>
</kw>
<status status="PASS" starttime="20201029 18:28:09.427" endtime="20201029 18:28:09.751"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 18:28:09.756" level="INFO">${FILTERED} = [{'diff': 0.10002475000000022}, {'diff': 0.1000100279999998}, {'diff': 0.1000098890000003}, {'diff': 0.10001087499999972}, {'diff': 0.10001088899999999}, {'diff': 0.10001090200000018}, {'diff': 0.1000...</msg>
<status status="PASS" starttime="20201029 18:28:09.752" endtime="20201029 18:28:09.756"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:28:09.760" level="INFO">${RESULT} = {'diff': [0.10002475000000022, 0.1000100279999998, 0.1000098890000003, 0.10001087499999972, 0.10001088899999999, 0.10001090200000018, 0.1000108609999999, 0.10001095800000037, 0.10001137500000024, 0.10...</msg>
<status status="PASS" starttime="20201029 18:28:09.757" endtime="20201029 18:28:09.760"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:28:09.764" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 18:28:09.763" endtime="20201029 18:28:09.764"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:28:09.766" level="INFO">VALUE: [0.10002475000000022, 0.1000100279999998, 0.1000098890000003, 0.10001087499999972, 0.10001088899999999, 0.10001090200000018, 0.1000108609999999, 0.10001095800000037, 0.10001137500000024, 0.10001092999999983, 0.10001084700000007, 0.10001088899999999, 0.10001088899999999, 0.10001088899999999, 0.10001088899999999, 0.10001091699999964, 0.10001086099999945, 0.10001088899999999, 0.10001087499999972, 0.10001088899999999, 0.10001091599999956, 0.10001086099999945, 0.10001088899999999, 0.10001095900000045, 5.409999994654413e-07, 5.420000004363601e-07, 5.420000004363601e-07, 5.420000004363601e-07, 5.409999994654413e-07, 5.419999995481817e-07, 5.419999995481817e-07, 5.410000003536197e-07, 0.1000113469999997, 0.10001084700000007, 0.10001087499999972, 0.10001086100000034, 0.10001090300000026, 0.10001086100000034, 0.10001084799999926, 0.10001088899999999, 0.10001091599999956, 5.410000003536197e-07, 5.420000004363601e-07, 5.419999995481817e-07, 5.409999994654413e-07, 5.420000004363601e-07, 5.420000004363601e-07, 5.410000003536197e-07]</msg>
<status status="PASS" starttime="20201029 18:28:09.765" endtime="20201029 18:28:09.767"></status>
</kw>
<status status="PASS" starttime="20201029 18:28:09.761" endtime="20201029 18:28:09.767"></status>
</kw>
<status status="PASS" starttime="20201029 18:28:03.223" endtime="20201029 18:28:09.768"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
</tags>
<status status="PASS" starttime="20201029 18:28:00.114" endtime="20201029 18:28:09.769" critical="yes"></status>
</test>
<test id="s1-s4-t2" name="5 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:28:09.775" endtime="20201029 18:28:09.795"></status>
</kw>
<status status="PASS" starttime="20201029 18:28:09.774" endtime="20201029 18:28:09.795"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:28:09.809" endtime="20201029 18:28:12.828"></status>
</kw>
<msg timestamp="20201029 18:28:12.829" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:28:09.807" endtime="20201029 18:28:12.829"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:28:12.834" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:28:12.831" endtime="20201029 18:28:12.834"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:28:12.840" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:28:12.836" endtime="20201029 18:28:12.841"></status>
</kw>
<status status="FAIL" starttime="20201029 18:28:09.805" endtime="20201029 18:28:12.843"></status>
</kw>
<status status="FAIL" starttime="20201029 18:28:09.801" endtime="20201029 18:28:12.847"></status>
</kw>
<status status="PASS" starttime="20201029 18:28:09.800" endtime="20201029 18:28:12.848"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:28:12.860" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:28:12.858" endtime="20201029 18:28:12.861"></status>
</kw>
<status status="PASS" starttime="20201029 18:28:12.851" endtime="20201029 18:28:12.862"></status>
</kw>
<status status="PASS" starttime="20201029 18:28:09.799" endtime="20201029 18:28:12.862"></status>
</kw>
<status status="PASS" starttime="20201029 18:28:09.799" endtime="20201029 18:28:12.863"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:28:12.865" endtime="20201029 18:28:12.870"></status>
</kw>
<status status="PASS" starttime="20201029 18:28:09.797" endtime="20201029 18:28:12.872"></status>
</kw>
<status status="PASS" starttime="20201029 18:28:09.796" endtime="20201029 18:28:12.874"></status>
</kw>
<status status="PASS" starttime="20201029 18:28:09.772" endtime="20201029 18:28:12.875"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>5</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:28:12.895" endtime="20201029 18:28:19.022"></status>
</kw>
<msg timestamp="20201029 18:28:19.023" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'bg-timer-count': '5'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:28:12.892" endtime="20201029 18:28:19.024"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:28:19.029" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'bg-timer-count': '5'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:28:19.026" endtime="20201029 18:28:19.029"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:28:19.031" endtime="20201029 18:28:19.035"></status>
</kw>
<status status="PASS" starttime="20201029 18:28:12.886" endtime="20201029 18:28:19.036"></status>
</kw>
<status status="PASS" starttime="20201029 18:28:12.881" endtime="20201029 18:28:19.037"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:28:19.042" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'bg-timer-count': 5, 'main-timer-interval': 100000}</msg>
<status status="PASS" starttime="20201029 18:28:19.038" endtime="20201029 18:28:19.043"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:28:19.052" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 18:28:19.050" endtime="20201029 18:28:19.053"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:28:19.056" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 18:28:19.054" endtime="20201029 18:28:19.057"></status>
</kw>
<status status="PASS" starttime="20201029 18:28:19.045" endtime="20201029 18:28:19.058"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:28:19.067" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 18:28:19.064" endtime="20201029 18:28:19.067"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:28:19.071" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 18:28:19.069" endtime="20201029 18:28:19.072"></status>
</kw>
<status status="PASS" starttime="20201029 18:28:19.060" endtime="20201029 18:28:19.073"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:28:19.081" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 18:28:19.079" endtime="20201029 18:28:19.085"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:28:19.089" level="INFO">VALUE: 5</msg>
<status status="PASS" starttime="20201029 18:28:19.086" endtime="20201029 18:28:19.089"></status>
</kw>
<status status="PASS" starttime="20201029 18:28:19.074" endtime="20201029 18:28:19.090"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:28:19.101" endtime="20201029 18:28:19.399"></status>
</kw>
<msg timestamp="20201029 18:28:19.402" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.112172431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.212213097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:28:19.099" endtime="20201029 18:28:19.403"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:28:19.410" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.112172431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.212213097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:28:19.403" endtime="20201029 18:28:19.410"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:28:19.411" endtime="20201029 18:28:19.413"></status>
</kw>
<status status="PASS" starttime="20201029 18:28:19.095" endtime="20201029 18:28:19.413"></status>
</kw>
<status status="PASS" starttime="20201029 18:28:19.092" endtime="20201029 18:28:19.414"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 18:28:19.418" level="INFO">${FILTERED} = [{'diff': 0.10004066599999994}, {'diff': 0.09999381900000026}, {'diff': 0.10001087500000017}, {'diff': 0.1000108329999998}, {'diff': 0.1000108609999999}, {'diff': 0.10001086200000042}, {'diff': 0.1000...</msg>
<status status="PASS" starttime="20201029 18:28:19.415" endtime="20201029 18:28:19.418"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:28:19.422" level="INFO">${RESULT} = {'diff': [0.10004066599999994, 0.09999381900000026, 0.10001087500000017, 0.1000108329999998, 0.1000108609999999, 0.10001086200000042, 0.1000108609999999, 0.10001087500000017, 0.10001084700000007, 0.10...</msg>
<status status="PASS" starttime="20201029 18:28:19.419" endtime="20201029 18:28:19.422"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:28:19.426" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 18:28:19.425" endtime="20201029 18:28:19.426"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:28:19.429" level="INFO">VALUE: [0.10004066599999994, 0.09999381900000026, 0.10001087500000017, 0.1000108329999998, 0.1000108609999999, 0.10001086200000042, 0.1000108609999999, 0.10001087500000017, 0.10001084700000007, 0.10001088799999991, 0.10001084700000007, 0.10001088899999999, 0.1000108329999998, 0.10001086099999945, 0.10001087499999972, 0.10001087499999972, 0.10001084700000007, 0.10001087499999972, 0.10001091699999964, 5.420000004363601e-07, 5.410000003536197e-07, 5.410000003536197e-07, 0.10001137500000024, 0.10001084800000015, 0.10001087499999972, 0.10001087499999972, 0.10001086099999945, 0.10001087499999972, 0.10001087499999972, 0.10001086100000034, 0.10001087499999972, 0.10001088899999999, 0.10001092999999983, 5.420000004363601e-07, 5.420000004363601e-07, 5.420000004363601e-07, 5.410000003536197e-07, 5.419999995481817e-07, 0.10001136099999997, 0.10001087500000061, 0.10001090300000026, 0.10001086199999953, 0.10001088899999999, 0.1000109440000001, 5.420000004363601e-07, 5.420000004363601e-07, 5.410000003536197e-07, 5.420000004363601e-07]</msg>
<status status="PASS" starttime="20201029 18:28:19.427" endtime="20201029 18:28:19.429"></status>
</kw>
<status status="PASS" starttime="20201029 18:28:19.423" endtime="20201029 18:28:19.430"></status>
</kw>
<status status="PASS" starttime="20201029 18:28:12.877" endtime="20201029 18:28:19.430"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
</tags>
<status status="PASS" starttime="20201029 18:28:09.770" endtime="20201029 18:28:19.431" critical="yes"></status>
</test>
<test id="s1-s4-t3" name="10 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:28:19.438" endtime="20201029 18:28:19.458"></status>
</kw>
<status status="PASS" starttime="20201029 18:28:19.436" endtime="20201029 18:28:19.458"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:28:19.472" endtime="20201029 18:28:22.490"></status>
</kw>
<msg timestamp="20201029 18:28:22.491" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:28:19.470" endtime="20201029 18:28:22.491"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:28:22.493" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:28:22.492" endtime="20201029 18:28:22.493"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:28:22.496" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:28:22.494" endtime="20201029 18:28:22.497"></status>
</kw>
<status status="FAIL" starttime="20201029 18:28:19.468" endtime="20201029 18:28:22.497"></status>
</kw>
<status status="FAIL" starttime="20201029 18:28:19.465" endtime="20201029 18:28:22.498"></status>
</kw>
<status status="PASS" starttime="20201029 18:28:19.464" endtime="20201029 18:28:22.498"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:28:22.502" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:28:22.501" endtime="20201029 18:28:22.502"></status>
</kw>
<status status="PASS" starttime="20201029 18:28:22.499" endtime="20201029 18:28:22.503"></status>
</kw>
<status status="PASS" starttime="20201029 18:28:19.463" endtime="20201029 18:28:22.503"></status>
</kw>
<status status="PASS" starttime="20201029 18:28:19.462" endtime="20201029 18:28:22.503"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:28:22.504" endtime="20201029 18:28:22.505"></status>
</kw>
<status status="PASS" starttime="20201029 18:28:19.461" endtime="20201029 18:28:22.506"></status>
</kw>
<status status="PASS" starttime="20201029 18:28:19.459" endtime="20201029 18:28:22.506"></status>
</kw>
<status status="PASS" starttime="20201029 18:28:19.435" endtime="20201029 18:28:22.506"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>10</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:28:22.515" endtime="20201029 18:28:28.640"></status>
</kw>
<msg timestamp="20201029 18:28:28.641" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'bg-timer-count': '10'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:28:22.513" endtime="20201029 18:28:28.641"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:28:28.646" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'bg-timer-count': '10'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:28:28.643" endtime="20201029 18:28:28.647"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:28:28.649" endtime="20201029 18:28:28.652"></status>
</kw>
<status status="PASS" starttime="20201029 18:28:22.511" endtime="20201029 18:28:28.653"></status>
</kw>
<status status="PASS" starttime="20201029 18:28:22.509" endtime="20201029 18:28:28.654"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:28:28.663" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'bg-timer-count': 10, 'main-timer-interval': 100000}</msg>
<status status="PASS" starttime="20201029 18:28:28.656" endtime="20201029 18:28:28.663"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:28:28.672" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 18:28:28.670" endtime="20201029 18:28:28.673"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:28:28.676" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 18:28:28.674" endtime="20201029 18:28:28.677"></status>
</kw>
<status status="PASS" starttime="20201029 18:28:28.665" endtime="20201029 18:28:28.678"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:28:28.687" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 18:28:28.684" endtime="20201029 18:28:28.687"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:28:28.691" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 18:28:28.689" endtime="20201029 18:28:28.692"></status>
</kw>
<status status="PASS" starttime="20201029 18:28:28.679" endtime="20201029 18:28:28.693"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:28:28.701" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 18:28:28.699" endtime="20201029 18:28:28.702"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:28:28.706" level="INFO">VALUE: 10</msg>
<status status="PASS" starttime="20201029 18:28:28.704" endtime="20201029 18:28:28.707"></status>
</kw>
<status status="PASS" starttime="20201029 18:28:28.694" endtime="20201029 18:28:28.708"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:28:28.720" endtime="20201029 18:28:29.017"></status>
</kw>
<msg timestamp="20201029 18:28:29.020" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.066734528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.166837319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:28:28.718" endtime="20201029 18:28:29.020"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:28:29.027" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.066734528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.166837319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:28:29.021" endtime="20201029 18:28:29.028"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:28:29.029" endtime="20201029 18:28:29.030"></status>
</kw>
<status status="PASS" starttime="20201029 18:28:28.713" endtime="20201029 18:28:29.031"></status>
</kw>
<status status="PASS" starttime="20201029 18:28:28.709" endtime="20201029 18:28:29.031"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 18:28:29.035" level="INFO">${FILTERED} = [{'diff': 0.10010279099999986}, {'diff': 0.09993204200000028}, {'diff': 0.10000986199999984}, {'diff': 0.10001088899999999}, {'diff': 0.10001081900000042}, {'diff': 0.1000108609999999}, {'diff': 0.100...</msg>
<status status="PASS" starttime="20201029 18:28:29.032" endtime="20201029 18:28:29.036"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:28:29.040" level="INFO">${RESULT} = {'diff': [0.10010279099999986, 0.09993204200000028, 0.10000986199999984, 0.10001088899999999, 0.10001081900000042, 0.1000108609999999, 0.10001087499999972, 0.10001083399999988, 0.1000108609999999, 0.1...</msg>
<status status="PASS" starttime="20201029 18:28:29.036" endtime="20201029 18:28:29.040"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:28:29.044" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 18:28:29.043" endtime="20201029 18:28:29.045"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:28:29.047" level="INFO">VALUE: [0.10010279099999986, 0.09993204200000028, 0.10000986199999984, 0.10001088899999999, 0.10001081900000042, 0.1000108609999999, 0.10001087499999972, 0.10001083399999988, 0.1000108609999999, 0.10001086100000034, 0.10001091700000053, 5.410000003536197e-07, 5.410000003536197e-07, 5.420000004363601e-07, 5.419999995481817e-07, 5.410000003536197e-07, 5.409999994654413e-07, 5.419999995481817e-07, 5.419999995481817e-07, 5.420000004363601e-07, 0.10001132000000013, 0.10001087499999972, 0.10001086100000034, 0.10001086100000034, 0.10001088899999999, 0.10001084700000007, 0.10001088899999999, 0.10001090300000026, 0.10001131900000004, 0.10001088899999999, 0.10001088899999999, 0.10001084700000007, 0.10001087499999972, 0.10001086199999953, 0.10001087499999972, 0.10001086099999945, 0.10001090200000018, 0.10001086100000034, 0.10001086100000034, 0.1000109440000001, 5.419999995481817e-07, 5.419999995481817e-07, 5.409999994654413e-07, 5.419999995481817e-07, 5.419999995481817e-07, 5.410000003536197e-07, 5.419999995481817e-07, 5.410000003536197e-07]</msg>
<status status="PASS" starttime="20201029 18:28:29.046" endtime="20201029 18:28:29.048"></status>
</kw>
<status status="PASS" starttime="20201029 18:28:29.041" endtime="20201029 18:28:29.048"></status>
</kw>
<status status="PASS" starttime="20201029 18:28:22.507" endtime="20201029 18:28:29.049"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
</tags>
<status status="PASS" starttime="20201029 18:28:19.432" endtime="20201029 18:28:29.049" critical="yes"></status>
</test>
<test id="s1-s4-t4" name="15 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:28:29.056" endtime="20201029 18:28:29.075"></status>
</kw>
<status status="PASS" starttime="20201029 18:28:29.054" endtime="20201029 18:28:29.076"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:28:29.089" endtime="20201029 18:28:32.108"></status>
</kw>
<msg timestamp="20201029 18:28:32.109" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:28:29.088" endtime="20201029 18:28:32.109"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:28:32.111" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:28:32.110" endtime="20201029 18:28:32.112"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:28:32.115" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:28:32.113" endtime="20201029 18:28:32.115"></status>
</kw>
<status status="FAIL" starttime="20201029 18:28:29.085" endtime="20201029 18:28:32.116"></status>
</kw>
<status status="FAIL" starttime="20201029 18:28:29.083" endtime="20201029 18:28:32.116"></status>
</kw>
<status status="PASS" starttime="20201029 18:28:29.081" endtime="20201029 18:28:32.116"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:28:32.120" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:28:32.119" endtime="20201029 18:28:32.121"></status>
</kw>
<status status="PASS" starttime="20201029 18:28:32.117" endtime="20201029 18:28:32.121"></status>
</kw>
<status status="PASS" starttime="20201029 18:28:29.080" endtime="20201029 18:28:32.121"></status>
</kw>
<status status="PASS" starttime="20201029 18:28:29.080" endtime="20201029 18:28:32.121"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:28:32.122" endtime="20201029 18:28:32.124"></status>
</kw>
<status status="PASS" starttime="20201029 18:28:29.078" endtime="20201029 18:28:32.124"></status>
</kw>
<status status="PASS" starttime="20201029 18:28:29.077" endtime="20201029 18:28:32.125"></status>
</kw>
<status status="PASS" starttime="20201029 18:28:29.053" endtime="20201029 18:28:32.125"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>15</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:28:32.135" endtime="20201029 18:28:38.259"></status>
</kw>
<msg timestamp="20201029 18:28:38.260" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15\r\n'], 'data': [{'bg-timer-count': '15'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:28:32.133" endtime="20201029 18:28:38.261"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:28:38.266" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15\r\n'], 'data': [{'bg-timer-count': '15'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:28:38.263" endtime="20201029 18:28:38.267"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:28:38.269" endtime="20201029 18:28:38.272"></status>
</kw>
<status status="PASS" starttime="20201029 18:28:32.130" endtime="20201029 18:28:38.273"></status>
</kw>
<status status="PASS" starttime="20201029 18:28:32.127" endtime="20201029 18:28:38.274"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:28:38.280" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'bg-timer-count': 15, 'main-timer-interval': 100000}</msg>
<status status="PASS" starttime="20201029 18:28:38.276" endtime="20201029 18:28:38.281"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:28:38.289" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 18:28:38.287" endtime="20201029 18:28:38.290"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:28:38.294" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 18:28:38.292" endtime="20201029 18:28:38.295"></status>
</kw>
<status status="PASS" starttime="20201029 18:28:38.282" endtime="20201029 18:28:38.296"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:28:38.304" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 18:28:38.302" endtime="20201029 18:28:38.305"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:28:38.309" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 18:28:38.307" endtime="20201029 18:28:38.310"></status>
</kw>
<status status="PASS" starttime="20201029 18:28:38.297" endtime="20201029 18:28:38.311"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:28:38.319" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 18:28:38.317" endtime="20201029 18:28:38.320"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:28:38.324" level="INFO">VALUE: 15</msg>
<status status="PASS" starttime="20201029 18:28:38.321" endtime="20201029 18:28:38.324"></status>
</kw>
<status status="PASS" starttime="20201029 18:28:38.312" endtime="20201029 18:28:38.325"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:28:38.338" endtime="20201029 18:28:38.638"></status>
</kw>
<msg timestamp="20201029 18:28:38.641" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.06849525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.168662, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201029 18:28:38.336" endtime="20201029 18:28:38.641"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:28:38.649" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.06849525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.168662, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201029 18:28:38.642" endtime="20201029 18:28:38.649"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:28:38.650" endtime="20201029 18:28:38.652"></status>
</kw>
<status status="PASS" starttime="20201029 18:28:38.330" endtime="20201029 18:28:38.652"></status>
</kw>
<status status="PASS" starttime="20201029 18:28:38.327" endtime="20201029 18:28:38.653"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 18:28:38.658" level="INFO">${FILTERED} = [{'diff': 0.10016675000000008}, {'diff': 0.09989072200000004}, {'diff': 0.09998931900000008}, {'diff': 0.10000987500000003}, {'diff': 0.10001084800000015}, {'diff': 0.10001087500000017}, {'diff': 0.10...</msg>
<status status="PASS" starttime="20201029 18:28:38.654" endtime="20201029 18:28:38.658"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:28:38.662" level="INFO">${RESULT} = {'diff': [0.10016675000000008, 0.09989072200000004, 0.09998931900000008, 0.10000987500000003, 0.10001084800000015, 0.10001087500000017, 0.1000108609999999, 0.1000108609999999, 0.10001086199999998, 0.1...</msg>
<status status="PASS" starttime="20201029 18:28:38.659" endtime="20201029 18:28:38.662"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:28:38.666" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 18:28:38.665" endtime="20201029 18:28:38.667"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:28:38.669" level="INFO">VALUE: [0.10016675000000008, 0.09989072200000004, 0.09998931900000008, 0.10000987500000003, 0.10001084800000015, 0.10001087500000017, 0.1000108609999999, 0.1000108609999999, 0.10001086199999998, 0.10001087499999972, 0.10001086099999945, 0.10001084700000007, 0.10001090200000018, 0.1000108329999998, 0.10001088899999999, 0.10001086099999945, 0.10001084800000015, 0.10001088899999999, 0.10001084700000007, 0.10001088899999999, 0.10001086100000034, 0.10001086100000034, 0.10001087500000061, 0.10001086200000042, 0.10001088899999999, 0.10001086099999945, 0.10001087499999972, 0.10001087499999972, 0.10001087499999972, 0.10001086100000034, 0.10001087499999972, 0.10001087499999972, 0.10001088899999999, 0.10001087499999972, 0.10001088899999999, 0.10001086200000042, 0.10001087499999972, 0.10001093000000072, 5.410000003536197e-07, 5.420000004363601e-07, 5.410000003536197e-07, 5.419999995481817e-07, 5.419999995481817e-07, 5.409999994654413e-07, 5.420000004363601e-07, 5.419999995481817e-07, 5.410000003536197e-07, 5.420000004363601e-07, 5.409999994654413e-07, 5.419999986600033e-07]</msg>
<status status="PASS" starttime="20201029 18:28:38.667" endtime="20201029 18:28:38.670"></status>
</kw>
<status status="PASS" starttime="20201029 18:28:38.663" endtime="20201029 18:28:38.670"></status>
</kw>
<status status="PASS" starttime="20201029 18:28:32.125" endtime="20201029 18:28:38.671"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
</tags>
<status status="PASS" starttime="20201029 18:28:29.051" endtime="20201029 18:28:38.671" critical="yes"></status>
</test>
<test id="s1-s4-t5" name="20 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:28:38.678" endtime="20201029 18:28:38.697"></status>
</kw>
<status status="PASS" starttime="20201029 18:28:38.676" endtime="20201029 18:28:38.698"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:28:38.712" endtime="20201029 18:28:41.735"></status>
</kw>
<msg timestamp="20201029 18:28:41.736" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:28:38.710" endtime="20201029 18:28:41.736"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:28:41.742" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:28:41.739" endtime="20201029 18:28:41.743"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:28:41.749" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:28:41.745" endtime="20201029 18:28:41.750"></status>
</kw>
<status status="FAIL" starttime="20201029 18:28:38.707" endtime="20201029 18:28:41.751"></status>
</kw>
<status status="FAIL" starttime="20201029 18:28:38.704" endtime="20201029 18:28:41.753"></status>
</kw>
<status status="PASS" starttime="20201029 18:28:38.703" endtime="20201029 18:28:41.753"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:28:41.761" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:28:41.760" endtime="20201029 18:28:41.762"></status>
</kw>
<status status="PASS" starttime="20201029 18:28:41.755" endtime="20201029 18:28:41.763"></status>
</kw>
<status status="PASS" starttime="20201029 18:28:38.702" endtime="20201029 18:28:41.763"></status>
</kw>
<status status="PASS" starttime="20201029 18:28:38.702" endtime="20201029 18:28:41.764"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:28:41.765" endtime="20201029 18:28:41.768"></status>
</kw>
<status status="PASS" starttime="20201029 18:28:38.700" endtime="20201029 18:28:41.769"></status>
</kw>
<status status="PASS" starttime="20201029 18:28:38.698" endtime="20201029 18:28:41.770"></status>
</kw>
<status status="PASS" starttime="20201029 18:28:38.675" endtime="20201029 18:28:41.771"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>20</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:28:41.789" endtime="20201029 18:28:47.917"></status>
</kw>
<msg timestamp="20201029 18:28:47.918" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20\r\n'], 'data': [{'bg-timer-count': '20'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:28:41.786" endtime="20201029 18:28:47.918"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:28:47.923" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20\r\n'], 'data': [{'bg-timer-count': '20'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:28:47.920" endtime="20201029 18:28:47.924"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:28:47.925" endtime="20201029 18:28:47.929"></status>
</kw>
<status status="PASS" starttime="20201029 18:28:41.780" endtime="20201029 18:28:47.930"></status>
</kw>
<status status="PASS" starttime="20201029 18:28:41.776" endtime="20201029 18:28:47.931"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:28:47.942" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'bg-timer-count': 20, 'main-timer-interval': 100000}</msg>
<status status="PASS" starttime="20201029 18:28:47.933" endtime="20201029 18:28:47.942"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:28:47.951" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 18:28:47.948" endtime="20201029 18:28:47.952"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:28:47.955" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 18:28:47.953" endtime="20201029 18:28:47.956"></status>
</kw>
<status status="PASS" starttime="20201029 18:28:47.943" endtime="20201029 18:28:47.956"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:28:47.960" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 18:28:47.959" endtime="20201029 18:28:47.961"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:28:47.962" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 18:28:47.961" endtime="20201029 18:28:47.963"></status>
</kw>
<status status="PASS" starttime="20201029 18:28:47.957" endtime="20201029 18:28:47.963"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:28:47.967" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 18:28:47.966" endtime="20201029 18:28:47.968"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:28:47.969" level="INFO">VALUE: 20</msg>
<status status="PASS" starttime="20201029 18:28:47.968" endtime="20201029 18:28:47.970"></status>
</kw>
<status status="PASS" starttime="20201029 18:28:47.964" endtime="20201029 18:28:47.970"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:28:47.978" endtime="20201029 18:28:48.277"></status>
</kw>
<msg timestamp="20201029 18:28:48.280" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.103835361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.204071556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:28:47.977" endtime="20201029 18:28:48.280"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:28:48.288" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.103835361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.204071556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:28:48.281" endtime="20201029 18:28:48.288"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:28:48.289" endtime="20201029 18:28:48.291"></status>
</kw>
<status status="PASS" starttime="20201029 18:28:47.973" endtime="20201029 18:28:48.291"></status>
</kw>
<status status="PASS" starttime="20201029 18:28:47.971" endtime="20201029 18:28:48.292"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 18:28:48.296" level="INFO">${FILTERED} = [{'diff': 0.10023619500000036}, {'diff': 0.09983033399999997}, {'diff': 0.10001772200000003}, {'diff': 0.09997362500000007}, {'diff': 0.10000984699999993}, {'diff': 0.10001084700000007}, {'diff': 0.10...</msg>
<status status="PASS" starttime="20201029 18:28:48.292" endtime="20201029 18:28:48.296"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:28:48.300" level="INFO">${RESULT} = {'diff': [0.10023619500000036, 0.09983033399999997, 0.10001772200000003, 0.09997362500000007, 0.10000984699999993, 0.10001084700000007, 0.1000108609999999, 0.10001087500000017, 0.10001087500000017, 0....</msg>
<status status="PASS" starttime="20201029 18:28:48.297" endtime="20201029 18:28:48.300"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:28:48.304" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 18:28:48.303" endtime="20201029 18:28:48.304"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:28:48.306" level="INFO">VALUE: [0.10023619500000036, 0.09983033399999997, 0.10001772200000003, 0.09997362500000007, 0.10000984699999993, 0.10001084700000007, 0.1000108609999999, 0.10001087500000017, 0.10001087500000017, 0.10001081900000042, 0.10001086100000034, 0.10001087499999972, 0.10001083400000077, 0.10001086100000034, 0.10001087500000061, 0.10001087499999972, 0.10001086100000034, 0.10001090300000026, 5.419999995481817e-07, 5.420000004363601e-07, 5.410000003536197e-07, 5.410000003536197e-07, 5.419999995481817e-07, 5.419999995481817e-07, 5.410000003536197e-07, 5.419999995481817e-07, 5.420000004363601e-07, 5.419999995481817e-07, 5.410000003536197e-07, 5.420000004363601e-07, 5.419999995481817e-07, 5.419999995481817e-07, 5.410000003536197e-07, 5.420000004363601e-07, 5.419999995481817e-07, 5.410000003536197e-07, 5.409999994654413e-07, 5.419999995481817e-07, 5.420000004363601e-07, 5.409999994654413e-07, 5.420000004363601e-07, 0.10001136099999997, 0.10001087499999972, 0.10001088899999999, 0.10001088899999999, 0.10001086100000034, 0.10001086100000034, 0.10001091699999964, 5.420000004363601e-07]</msg>
<status status="PASS" starttime="20201029 18:28:48.305" endtime="20201029 18:28:48.307"></status>
</kw>
<status status="PASS" starttime="20201029 18:28:48.300" endtime="20201029 18:28:48.308"></status>
</kw>
<status status="PASS" starttime="20201029 18:28:41.772" endtime="20201029 18:28:48.308"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
</tags>
<status status="PASS" starttime="20201029 18:28:38.673" endtime="20201029 18:28:48.309" critical="yes"></status>
</test>
<test id="s1-s4-t6" name="25 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:28:48.315" endtime="20201029 18:28:48.338"></status>
</kw>
<status status="PASS" starttime="20201029 18:28:48.314" endtime="20201029 18:28:48.339"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:28:48.354" endtime="20201029 18:28:51.375"></status>
</kw>
<msg timestamp="20201029 18:28:51.376" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:28:48.352" endtime="20201029 18:28:51.377"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:28:51.382" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:28:51.378" endtime="20201029 18:28:51.382"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:28:51.388" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:28:51.384" endtime="20201029 18:28:51.389"></status>
</kw>
<status status="FAIL" starttime="20201029 18:28:48.349" endtime="20201029 18:28:51.390"></status>
</kw>
<status status="FAIL" starttime="20201029 18:28:48.346" endtime="20201029 18:28:51.392"></status>
</kw>
<status status="PASS" starttime="20201029 18:28:48.345" endtime="20201029 18:28:51.392"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:28:51.400" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:28:51.399" endtime="20201029 18:28:51.401"></status>
</kw>
<status status="PASS" starttime="20201029 18:28:51.394" endtime="20201029 18:28:51.402"></status>
</kw>
<status status="PASS" starttime="20201029 18:28:48.344" endtime="20201029 18:28:51.402"></status>
</kw>
<status status="PASS" starttime="20201029 18:28:48.343" endtime="20201029 18:28:51.402"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:28:51.404" endtime="20201029 18:28:51.407"></status>
</kw>
<status status="PASS" starttime="20201029 18:28:48.342" endtime="20201029 18:28:51.408"></status>
</kw>
<status status="PASS" starttime="20201029 18:28:48.340" endtime="20201029 18:28:51.409"></status>
</kw>
<status status="PASS" starttime="20201029 18:28:48.313" endtime="20201029 18:28:51.410"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>25</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:28:51.429" endtime="20201029 18:28:57.556"></status>
</kw>
<msg timestamp="20201029 18:28:57.557" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25\r\n'], 'data': [{'bg-timer-count': '25'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:28:51.426" endtime="20201029 18:28:57.558"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:28:57.563" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25\r\n'], 'data': [{'bg-timer-count': '25'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:28:57.560" endtime="20201029 18:28:57.564"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:28:57.565" endtime="20201029 18:28:57.569"></status>
</kw>
<status status="PASS" starttime="20201029 18:28:51.419" endtime="20201029 18:28:57.570"></status>
</kw>
<status status="PASS" starttime="20201029 18:28:51.415" endtime="20201029 18:28:57.571"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:28:57.577" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'bg-timer-count': 25, 'main-timer-interval': 100000}</msg>
<status status="PASS" starttime="20201029 18:28:57.573" endtime="20201029 18:28:57.578"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:28:57.588" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 18:28:57.586" endtime="20201029 18:28:57.589"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:28:57.593" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 18:28:57.591" endtime="20201029 18:28:57.593"></status>
</kw>
<status status="PASS" starttime="20201029 18:28:57.579" endtime="20201029 18:28:57.595"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:28:57.603" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 18:28:57.601" endtime="20201029 18:28:57.604"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:28:57.608" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 18:28:57.606" endtime="20201029 18:28:57.609"></status>
</kw>
<status status="PASS" starttime="20201029 18:28:57.596" endtime="20201029 18:28:57.610"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:28:57.619" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 18:28:57.617" endtime="20201029 18:28:57.620"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:28:57.624" level="INFO">VALUE: 25</msg>
<status status="PASS" starttime="20201029 18:28:57.622" endtime="20201029 18:28:57.625"></status>
</kw>
<status status="PASS" starttime="20201029 18:28:57.612" endtime="20201029 18:28:57.626"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:28:57.641" endtime="20201029 18:28:57.948"></status>
</kw>
<msg timestamp="20201029 18:28:57.951" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.102159569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.202434028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:28:57.638" endtime="20201029 18:28:57.951"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:28:57.959" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.102159569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.202434028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:28:57.952" endtime="20201029 18:28:57.959"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:28:57.960" endtime="20201029 18:28:57.962"></status>
</kw>
<status status="PASS" starttime="20201029 18:28:57.632" endtime="20201029 18:28:57.962"></status>
</kw>
<status status="PASS" starttime="20201029 18:28:57.628" endtime="20201029 18:28:57.963"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 18:28:57.967" level="INFO">${FILTERED} = [{'diff': 0.10027445899999998}, {'diff': 0.09978765300000036}, {'diff': 0.10001936099999975}, {'diff': 0.09997566600000019}, {'diff': 0.10000988899999985}, {'diff': 0.10001087500000017}, {'diff': 0.10...</msg>
<status status="PASS" starttime="20201029 18:28:57.963" endtime="20201029 18:28:57.967"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:28:57.971" level="INFO">${RESULT} = {'diff': [0.10027445899999998, 0.09978765300000036, 0.10001936099999975, 0.09997566600000019, 0.10000988899999985, 0.10001087500000017, 0.1000108609999999, 0.10001087500000017, 0.10001088899999999, 0....</msg>
<status status="PASS" starttime="20201029 18:28:57.968" endtime="20201029 18:28:57.972"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:28:57.976" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 18:28:57.975" endtime="20201029 18:28:57.976"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:28:57.978" level="INFO">VALUE: [0.10027445899999998, 0.09978765300000036, 0.10001936099999975, 0.09997566600000019, 0.10000988899999985, 0.10001087500000017, 0.1000108609999999, 0.10001087500000017, 0.10001088899999999, 0.10001087499999972, 0.10001088899999999, 0.10001086200000042, 0.10001087499999972, 0.10001088899999999, 0.10001088899999999, 0.10001086100000034, 0.10001088899999999, 0.10001088899999999, 0.10001087500000061, 0.10001088799999991, 0.10001086099999945, 0.10001090300000026, 0.10001087500000061, 0.10001087499999972, 0.10001088899999999, 0.10001087500000061, 0.10001087500000061, 0.10001084700000007, 0.10001084799999926, 0.10001084800000015, 0.10001086100000034, 0.10001086099999945, 0.10001091599999956, 5.410000003536197e-07, 5.419999995481817e-07, 5.419999995481817e-07, 0.10001133399999951, 0.10001087499999972, 0.10001087499999972, 0.10001084700000007, 0.10001086099999945, 0.10001086200000042, 0.10001086100000034, 0.10001086100000034, 0.10001088899999999, 0.10001084800000015, 0.10001088899999999, 0.10001086100000034, 0.10001088799999991, 0.10001083300000069]</msg>
<status status="PASS" starttime="20201029 18:28:57.977" endtime="20201029 18:28:57.979"></status>
</kw>
<status status="PASS" starttime="20201029 18:28:57.972" endtime="20201029 18:28:57.980"></status>
</kw>
<status status="PASS" starttime="20201029 18:28:51.411" endtime="20201029 18:28:57.980"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
</tags>
<status status="PASS" starttime="20201029 18:28:48.310" endtime="20201029 18:28:57.981" critical="yes"></status>
</test>
<status status="PASS" starttime="20201029 18:27:52.530" endtime="20201029 18:28:57.988"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_ztimer_benchmarks</item>
<item name="RIOT-Board">arduino-due</item>
<item name="RIOT-Version">2020.07</item>
</metadata>
<status status="FAIL" starttime="20201029 18:19:48.394" endtime="20201029 18:28:58.022"></status>
</suite>
<statistics>
<total>
<stat pass="12" fail="6">Critical Tests</stat>
<stat pass="12" fail="6">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="12" fail="6">APP_tests_ztimer_benchmarks</stat>
<stat pass="12" fail="6">BOARD_arduino-due</stat>
<stat pass="4" fail="6">dev</stat>
</tag>
<suite>
<stat pass="12" fail="6" id="s1" name="tests_ztimer_benchmarks">tests_ztimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_ztimer_benchmarks.Timer Version</stat>
<stat pass="3" fail="6" id="s1-s2" name="Timer Overhead">tests_ztimer_benchmarks.Timer Overhead</stat>
<stat pass="2" fail="0" id="s1-s3" name="Sleep Accuracy">tests_ztimer_benchmarks.Sleep Accuracy</stat>
<stat pass="6" fail="0" id="s1-s4" name="Sleep Jitter">tests_ztimer_benchmarks.Sleep Jitter</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
