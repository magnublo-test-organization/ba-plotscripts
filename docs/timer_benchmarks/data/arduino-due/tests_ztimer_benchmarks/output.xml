<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201029 09:35:47.045" rpa="false">
<suite id="s1" name="tests_ztimer_benchmarks" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 09:35:50.681" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 09:35:50.690" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 09:35:51.860" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 09:35:50.680" endtime="20201029 09:35:51.860"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 09:35:54.864" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20201029 09:35:51.862" endtime="20201029 09:35:54.866"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:50.679" endtime="20201029 09:35:54.867"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:35:54.872" endtime="20201029 09:35:55.097"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:54.868" endtime="20201029 09:35:55.098"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:55.111" endtime="20201029 09:35:58.132"></status>
</kw>
<msg timestamp="20201029 09:35:58.133" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:55.109" endtime="20201029 09:35:58.133"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:35:58.138" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:58.135" endtime="20201029 09:35:58.139"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:35:58.145" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:35:58.141" endtime="20201029 09:35:58.146"></status>
</kw>
<status status="FAIL" starttime="20201029 09:35:55.107" endtime="20201029 09:35:58.147"></status>
</kw>
<status status="FAIL" starttime="20201029 09:35:55.104" endtime="20201029 09:35:58.148"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:55.103" endtime="20201029 09:35:58.149"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:35:58.157" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:35:58.155" endtime="20201029 09:35:58.159"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:58.151" endtime="20201029 09:35:58.160"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:55.102" endtime="20201029 09:35:58.160"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:55.102" endtime="20201029 09:35:58.160"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:58.162" endtime="20201029 09:35:58.165"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:55.100" endtime="20201029 09:35:58.166"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:58.168" endtime="20201029 09:35:58.171"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:55.099" endtime="20201029 09:35:58.172"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:50.677" endtime="20201029 09:35:58.173"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:35:58.185" endtime="20201029 09:35:58.207"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:58.183" endtime="20201029 09:35:58.209"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:35:58.225" endtime="20201029 09:36:01.247"></status>
</kw>
<msg timestamp="20201029 09:36:01.248" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:35:58.224" endtime="20201029 09:36:01.249"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:36:01.254" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:36:01.250" endtime="20201029 09:36:01.254"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:36:01.260" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:36:01.256" endtime="20201029 09:36:01.261"></status>
</kw>
<status status="FAIL" starttime="20201029 09:35:58.221" endtime="20201029 09:36:01.262"></status>
</kw>
<status status="FAIL" starttime="20201029 09:35:58.218" endtime="20201029 09:36:01.263"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:58.217" endtime="20201029 09:36:01.264"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:36:01.272" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:36:01.270" endtime="20201029 09:36:01.272"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:01.266" endtime="20201029 09:36:01.273"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:58.216" endtime="20201029 09:36:01.273"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:58.215" endtime="20201029 09:36:01.274"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:01.275" endtime="20201029 09:36:01.278"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:58.213" endtime="20201029 09:36:01.279"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:58.210" endtime="20201029 09:36:01.280"></status>
</kw>
<status status="PASS" starttime="20201029 09:35:58.180" endtime="20201029 09:36:01.281"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:01.298" endtime="20201029 09:36:01.317"></status>
</kw>
<msg timestamp="20201029 09:36:01.319" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:36:01.292" endtime="20201029 09:36:01.320"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:36:01.329" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:36:01.324" endtime="20201029 09:36:01.330"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:01.332" endtime="20201029 09:36:01.336"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:01.286" endtime="20201029 09:36:01.338"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:01.283" endtime="20201029 09:36:01.339"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:36:01.350" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201029 09:36:01.347" endtime="20201029 09:36:01.351"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:36:01.356" level="INFO">VALUE: ztimer</msg>
<status status="PASS" starttime="20201029 09:36:01.353" endtime="20201029 09:36:01.357"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:01.341" endtime="20201029 09:36:01.358"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 09:35:58.174" endtime="20201029 09:36:01.360" critical="yes"></status>
</test>
<status status="PASS" starttime="20201029 09:35:47.161" endtime="20201029 09:36:01.368"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 09:36:01.452" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 09:36:01.462" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 09:36:02.580" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 09:36:01.450" endtime="20201029 09:36:02.581"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 09:36:05.584" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20201029 09:36:02.582" endtime="20201029 09:36:05.585"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:01.448" endtime="20201029 09:36:05.587"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:36:05.591" endtime="20201029 09:36:05.863"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:05.588" endtime="20201029 09:36:05.864"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:05.876" endtime="20201029 09:36:08.899"></status>
</kw>
<msg timestamp="20201029 09:36:08.900" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:36:05.875" endtime="20201029 09:36:08.900"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:36:08.905" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:36:08.902" endtime="20201029 09:36:08.906"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:36:08.912" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:36:08.908" endtime="20201029 09:36:08.913"></status>
</kw>
<status status="FAIL" starttime="20201029 09:36:05.873" endtime="20201029 09:36:08.914"></status>
</kw>
<status status="FAIL" starttime="20201029 09:36:05.870" endtime="20201029 09:36:08.915"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:05.869" endtime="20201029 09:36:08.916"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:36:08.924" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:36:08.922" endtime="20201029 09:36:08.925"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:08.918" endtime="20201029 09:36:08.925"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:05.868" endtime="20201029 09:36:08.926"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:05.868" endtime="20201029 09:36:08.926"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:08.928" endtime="20201029 09:36:08.931"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:05.866" endtime="20201029 09:36:08.932"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:08.934" endtime="20201029 09:36:08.937"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:05.865" endtime="20201029 09:36:08.938"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:01.446" endtime="20201029 09:36:08.939"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:36:08.953" endtime="20201029 09:36:08.975"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:08.948" endtime="20201029 09:36:08.977"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:08.995" endtime="20201029 09:36:12.017"></status>
</kw>
<msg timestamp="20201029 09:36:12.018" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:36:08.993" endtime="20201029 09:36:12.019"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:36:12.025" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:36:12.022" endtime="20201029 09:36:12.026"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:36:12.032" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:36:12.027" endtime="20201029 09:36:12.032"></status>
</kw>
<status status="FAIL" starttime="20201029 09:36:08.991" endtime="20201029 09:36:12.034"></status>
</kw>
<status status="FAIL" starttime="20201029 09:36:08.988" endtime="20201029 09:36:12.035"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:08.987" endtime="20201029 09:36:12.036"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:36:12.044" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:36:12.042" endtime="20201029 09:36:12.045"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:12.038" endtime="20201029 09:36:12.045"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:08.986" endtime="20201029 09:36:12.045"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:08.985" endtime="20201029 09:36:12.046"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:12.047" endtime="20201029 09:36:12.051"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:08.982" endtime="20201029 09:36:12.052"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:08.978" endtime="20201029 09:36:12.053"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:08.945" endtime="20201029 09:36:12.054"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:12.072" endtime="20201029 09:36:12.089"></status>
</kw>
<msg timestamp="20201029 09:36:12.090" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:36:12.069" endtime="20201029 09:36:12.091"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:36:12.094" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:36:12.092" endtime="20201029 09:36:12.095"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:12.096" endtime="20201029 09:36:12.098"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:12.063" endtime="20201029 09:36:12.099"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:12.059" endtime="20201029 09:36:12.100"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:12.109" endtime="20201029 09:36:12.386"></status>
</kw>
<msg timestamp="20201029 09:36:12.388" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.110871028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.110880583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:36:12.107" endtime="20201029 09:36:12.388"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:36:12.393" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.110871028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.110880583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:36:12.389" endtime="20201029 09:36:12.393"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:12.394" endtime="20201029 09:36:12.396"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:12.103" endtime="20201029 09:36:12.396"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:12.101" endtime="20201029 09:36:12.397"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:36:12.400" level="INFO">${RESULT} = [{'diff': 9.555000000105451e-06}, {'diff': 9.250000000182723e-06}, {'diff': 1.1042000000127672e-05}, {'diff': 7.290999999742809e-06}, {'diff': 6.194999999653561e-06}, {'diff': 7.472000000063872e-06}, ...</msg>
<status status="PASS" starttime="20201029 09:36:12.397" endtime="20201029 09:36:12.400"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:36:12.404" level="INFO">${GPIO_OVERHEAD} = {'diff': [9.555000000105451e-06, 9.250000000182723e-06, 1.1042000000127672e-05, 7.290999999742809e-06, 6.194999999653561e-06, 7.472000000063872e-06, 5.554999999990429e-06, 1.1584000000119943e-05, 8.54...</msg>
<status status="PASS" starttime="20201029 09:36:12.401" endtime="20201029 09:36:12.404"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:36:12.408" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:36:12.407" endtime="20201029 09:36:12.408"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:36:12.410" level="INFO">VALUE: [9.555000000105451e-06, 9.250000000182723e-06, 1.1042000000127672e-05, 7.290999999742809e-06, 6.194999999653561e-06, 7.472000000063872e-06, 5.554999999990429e-06, 1.1584000000119943e-05, 8.541000000139576e-06, 9.486000000169525e-06, 7.652999999940846e-06, 1.0527999999787596e-05, 1.0679999999929635e-05, 8.18100000010702e-06, 6.98600000026417e-06, 7.874999999657462e-06, 8.778000000209119e-06, 8.000000000230045e-06, 8.486000000029748e-06, 5.554999999990429e-06, 9.374999999867129e-06, 8.542000000222316e-06, 1.1042000000127672e-05, 1.001399999989161e-05, 8.999999999925734e-06]</msg>
<status status="PASS" starttime="20201029 09:36:12.409" endtime="20201029 09:36:12.410"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:12.404" endtime="20201029 09:36:12.411"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:12.057" endtime="20201029 09:36:12.411"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:12.056" endtime="20201029 09:36:12.412"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:12.419" endtime="20201029 09:36:12.430"></status>
</kw>
<msg timestamp="20201029 09:36:12.430" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:36:12.418" endtime="20201029 09:36:12.430"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:36:12.433" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:36:12.431" endtime="20201029 09:36:12.433"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:12.434" endtime="20201029 09:36:12.436"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:12.415" endtime="20201029 09:36:12.437"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:12.413" endtime="20201029 09:36:12.437"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:12.444" endtime="20201029 09:36:12.740"></status>
</kw>
<msg timestamp="20201029 09:36:12.744" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.110871028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.110880583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:36:12.442" endtime="20201029 09:36:12.744"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:36:12.755" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.110871028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.110880583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:36:12.745" endtime="20201029 09:36:12.756"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:12.758" endtime="20201029 09:36:12.760"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:12.439" endtime="20201029 09:36:12.761"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:12.438" endtime="20201029 09:36:12.762"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:36:12.769" level="INFO">${RESULT} = [{'diff': 9.555000000105451e-06}, {'diff': 9.250000000182723e-06}, {'diff': 1.1042000000127672e-05}, {'diff': 7.290999999742809e-06}, {'diff': 6.194999999653561e-06}, {'diff': 7.472000000063872e-06}, ...</msg>
<status status="PASS" starttime="20201029 09:36:12.765" endtime="20201029 09:36:12.769"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:36:12.776" level="INFO">${GPIO_OVERHEAD} = {'diff': [9.555000000105451e-06, 9.250000000182723e-06, 1.1042000000127672e-05, 7.290999999742809e-06, 6.194999999653561e-06, 7.472000000063872e-06, 5.554999999990429e-06, 1.1584000000119943e-05, 8.54...</msg>
<status status="PASS" starttime="20201029 09:36:12.772" endtime="20201029 09:36:12.777"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:36:12.781" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:36:12.779" endtime="20201029 09:36:12.781"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:36:12.783" level="INFO">VALUE: [9.555000000105451e-06, 9.250000000182723e-06, 1.1042000000127672e-05, 7.290999999742809e-06, 6.194999999653561e-06, 7.472000000063872e-06, 5.554999999990429e-06, 1.1584000000119943e-05, 8.541000000139576e-06, 9.486000000169525e-06, 7.652999999940846e-06, 1.0527999999787596e-05, 1.0679999999929635e-05, 8.18100000010702e-06, 6.98600000026417e-06, 7.874999999657462e-06, 8.778000000209119e-06, 8.000000000230045e-06, 8.486000000029748e-06, 5.554999999990429e-06, 9.374999999867129e-06, 8.542000000222316e-06, 1.1042000000127672e-05, 1.001399999989161e-05, 8.999999999925734e-06, 9.249999999738634e-06, 9.096999999957944e-06, 9.485999999725436e-06, 7.639000000114748e-06, 8.054999999895784e-06, 9.443999999803054e-06, 1.0625000000263896e-05, 8.680999999732819e-06, 5.320000000086367e-06, 1.1638999999785682e-05, 9.153000000150513e-06, 6.901999999975317e-06, 9.26400000000882e-06, 9.791000000092254e-06, 1.0542000000057783e-05, 9.250000000182723e-06, 8.18100000010702e-06, 8.12500000035854e-06, 1.1333999999862954e-05, 6.736000000007181e-06, 1.1111000000063598e-05, 8.958000000003352e-06, 8.167000000280922e-06, 7.348000000018118e-06, 1.0194000000129932e-05]</msg>
<status status="PASS" starttime="20201029 09:36:12.782" endtime="20201029 09:36:12.784"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:12.777" endtime="20201029 09:36:12.785"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:12.412" endtime="20201029 09:36:12.785"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:12.412" endtime="20201029 09:36:12.786"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:12.793" endtime="20201029 09:36:12.807"></status>
</kw>
<msg timestamp="20201029 09:36:12.808" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:36:12.792" endtime="20201029 09:36:12.809"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:36:12.813" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:36:12.810" endtime="20201029 09:36:12.814"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:12.816" endtime="20201029 09:36:12.819"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:12.789" endtime="20201029 09:36:12.820"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:12.787" endtime="20201029 09:36:12.821"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:12.834" endtime="20201029 09:36:13.151"></status>
</kw>
<msg timestamp="20201029 09:36:13.155" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.111071889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.111082417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:36:12.831" endtime="20201029 09:36:13.155"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:36:13.165" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.111071889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.111082417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:36:13.156" endtime="20201029 09:36:13.165"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:13.166" endtime="20201029 09:36:13.167"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:12.826" endtime="20201029 09:36:13.168"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:12.822" endtime="20201029 09:36:13.168"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:36:13.173" level="INFO">${RESULT} = [{'diff': 1.0527999999787596e-05}, {'diff': 1.0679999999929635e-05}, {'diff': 8.18100000010702e-06}, {'diff': 6.98600000026417e-06}, {'diff': 7.874999999657462e-06}, {'diff': 8.778000000209119e-06}, {...</msg>
<status status="PASS" starttime="20201029 09:36:13.169" endtime="20201029 09:36:13.173"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:36:13.178" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.0527999999787596e-05, 1.0679999999929635e-05, 8.18100000010702e-06, 6.98600000026417e-06, 7.874999999657462e-06, 8.778000000209119e-06, 8.000000000230045e-06, 8.486000000029748e-06, 5.5549...</msg>
<status status="PASS" starttime="20201029 09:36:13.174" endtime="20201029 09:36:13.178"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:36:13.182" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:36:13.181" endtime="20201029 09:36:13.183"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:36:13.185" level="INFO">VALUE: [1.0527999999787596e-05, 1.0679999999929635e-05, 8.18100000010702e-06, 6.98600000026417e-06, 7.874999999657462e-06, 8.778000000209119e-06, 8.000000000230045e-06, 8.486000000029748e-06, 5.554999999990429e-06, 9.374999999867129e-06, 8.542000000222316e-06, 1.1042000000127672e-05, 1.001399999989161e-05, 8.999999999925734e-06, 9.249999999738634e-06, 9.096999999957944e-06, 9.485999999725436e-06, 7.639000000114748e-06, 8.054999999895784e-06, 9.443999999803054e-06, 1.0625000000263896e-05, 8.680999999732819e-06, 5.320000000086367e-06, 1.1638999999785682e-05, 9.153000000150513e-06, 6.901999999975317e-06, 9.26400000000882e-06, 9.791000000092254e-06, 1.0542000000057783e-05, 9.250000000182723e-06, 8.18100000010702e-06, 8.12500000035854e-06, 1.1333999999862954e-05, 6.736000000007181e-06, 1.1111000000063598e-05, 8.958000000003352e-06, 8.167000000280922e-06, 7.348000000018118e-06, 1.0194000000129932e-05, 7.666000000128292e-06, 1.0916999999999177e-05, 8.416000000011081e-06, 9.305000000292551e-06, 9.374999999867129e-06, 8.542000000222316e-06, 8.37499999972735e-06, 8.888999999623337e-06, 8.360999999901253e-06, 8.556000000048414e-06, 7.3890000003018486e-06, 1.0736000000122203e-05, 8.014000000056143e-06, 7.73599999970287e-06, 5.804999999803329e-06, 7.042000000012649e-06, 8.833999999957598e-06, 7.23600000007707e-06, 1.2277999999810163e-05, 9.735999999982425e-06, 9.61099999985393e-06, 7.403000000127946e-06, 9.499999999995623e-06, 7.1390000000448595e-06, 7.708000000050674e-06]</msg>
<status status="PASS" starttime="20201029 09:36:13.183" endtime="20201029 09:36:13.185"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:13.179" endtime="20201029 09:36:13.186"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:12.786" endtime="20201029 09:36:13.186"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:12.786" endtime="20201029 09:36:13.186"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:13.194" endtime="20201029 09:36:13.206"></status>
</kw>
<msg timestamp="20201029 09:36:13.207" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:36:13.193" endtime="20201029 09:36:13.207"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:36:13.209" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:36:13.208" endtime="20201029 09:36:13.209"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:13.210" endtime="20201029 09:36:13.212"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:13.190" endtime="20201029 09:36:13.212"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:13.188" endtime="20201029 09:36:13.213"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:13.219" endtime="20201029 09:36:13.526"></status>
</kw>
<msg timestamp="20201029 09:36:13.533" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.445261056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.445267958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:36:13.217" endtime="20201029 09:36:13.533"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:36:13.548" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.445261056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.445267958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:36:13.534" endtime="20201029 09:36:13.548"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:13.549" endtime="20201029 09:36:13.551"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:13.215" endtime="20201029 09:36:13.552"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:13.213" endtime="20201029 09:36:13.552"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:36:13.556" level="INFO">${RESULT} = [{'diff': 6.901999999975317e-06}, {'diff': 9.26400000000882e-06}, {'diff': 9.791000000092254e-06}, {'diff': 1.0542000000057783e-05}, {'diff': 9.250000000182723e-06}, {'diff': 8.18100000010702e-06}, {'...</msg>
<status status="PASS" starttime="20201029 09:36:13.553" endtime="20201029 09:36:13.556"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:36:13.561" level="INFO">${GPIO_OVERHEAD} = {'diff': [6.901999999975317e-06, 9.26400000000882e-06, 9.791000000092254e-06, 1.0542000000057783e-05, 9.250000000182723e-06, 8.18100000010702e-06, 8.12500000035854e-06, 1.1333999999862954e-05, 6.73600...</msg>
<status status="PASS" starttime="20201029 09:36:13.557" endtime="20201029 09:36:13.561"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:36:13.570" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:36:13.564" endtime="20201029 09:36:13.570"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:36:13.572" level="INFO">VALUE: [6.901999999975317e-06, 9.26400000000882e-06, 9.791000000092254e-06, 1.0542000000057783e-05, 9.250000000182723e-06, 8.18100000010702e-06, 8.12500000035854e-06, 1.1333999999862954e-05, 6.736000000007181e-06, 1.1111000000063598e-05, 8.958000000003352e-06, 8.167000000280922e-06, 7.348000000018118e-06, 1.0194000000129932e-05, 7.666000000128292e-06, 1.0916999999999177e-05, 8.416000000011081e-06, 9.305000000292551e-06, 9.374999999867129e-06, 8.542000000222316e-06, 8.37499999972735e-06, 8.888999999623337e-06, 8.360999999901253e-06, 8.556000000048414e-06, 7.3890000003018486e-06, 1.0736000000122203e-05, 8.014000000056143e-06, 7.73599999970287e-06, 5.804999999803329e-06, 7.042000000012649e-06, 8.833999999957598e-06, 7.23600000007707e-06, 1.2277999999810163e-05, 9.735999999982425e-06, 9.61099999985393e-06, 7.403000000127946e-06, 9.499999999995623e-06, 7.1390000000448595e-06, 7.708000000050674e-06, 1.0445000000025573e-05, 7.944000000037477e-06, 8.361000000789431e-06, 8.306000000679603e-06, 1.075000000039239e-05, 1.0736000000122203e-05, 1.0972000000109006e-05, 7.402999999683857e-06, 5.20799999925714e-06, 8.110999999644264e-06, 9.556000000188192e-06, 7.055999999394658e-06, 9.973000000051968e-06, 1.020900000003877e-05, 1.1069999999335778e-05, 8.986000000099637e-06, 5.887999999565352e-06, 7.820000000435812e-06, 9.95800000058722e-06, 6.416000000619704e-06, 8.27800000013923e-06, 1.0625000000707985e-05, 1.1624999999959584e-05, 7.819000000353071e-06, 7.73599999970287e-06]</msg>
<status status="PASS" starttime="20201029 09:36:13.571" endtime="20201029 09:36:13.573"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:13.562" endtime="20201029 09:36:13.573"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:13.187" endtime="20201029 09:36:13.574"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:13.187" endtime="20201029 09:36:13.574"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:13.582" endtime="20201029 09:36:13.593"></status>
</kw>
<msg timestamp="20201029 09:36:13.593" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:36:13.580" endtime="20201029 09:36:13.594"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:36:13.596" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:36:13.594" endtime="20201029 09:36:13.596"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:13.597" endtime="20201029 09:36:13.598"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:13.577" endtime="20201029 09:36:13.599"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:13.576" endtime="20201029 09:36:13.599"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:13.606" endtime="20201029 09:36:13.915"></status>
</kw>
<msg timestamp="20201029 09:36:13.918" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.809622625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.809633361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:36:13.604" endtime="20201029 09:36:13.919"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:36:13.928" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.809622625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.809633361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:36:13.919" endtime="20201029 09:36:13.928"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:13.929" endtime="20201029 09:36:13.931"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:13.602" endtime="20201029 09:36:13.932"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:13.600" endtime="20201029 09:36:13.933"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:36:13.937" level="INFO">${RESULT} = [{'diff': 1.0736000000122203e-05}, {'diff': 8.014000000056143e-06}, {'diff': 7.73599999970287e-06}, {'diff': 5.804999999803329e-06}, {'diff': 7.042000000012649e-06}, {'diff': 8.833999999957598e-06}, {...</msg>
<status status="PASS" starttime="20201029 09:36:13.933" endtime="20201029 09:36:13.937"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:36:13.943" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.0736000000122203e-05, 8.014000000056143e-06, 7.73599999970287e-06, 5.804999999803329e-06, 7.042000000012649e-06, 8.833999999957598e-06, 7.23600000007707e-06, 1.2277999999810163e-05, 9.7359...</msg>
<status status="PASS" starttime="20201029 09:36:13.938" endtime="20201029 09:36:13.943"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:36:13.948" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:36:13.947" endtime="20201029 09:36:13.949"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:36:13.951" level="INFO">VALUE: [1.0736000000122203e-05, 8.014000000056143e-06, 7.73599999970287e-06, 5.804999999803329e-06, 7.042000000012649e-06, 8.833999999957598e-06, 7.23600000007707e-06, 1.2277999999810163e-05, 9.735999999982425e-06, 9.61099999985393e-06, 7.403000000127946e-06, 9.499999999995623e-06, 7.1390000000448595e-06, 7.708000000050674e-06, 1.0445000000025573e-05, 7.944000000037477e-06, 8.361000000789431e-06, 8.306000000679603e-06, 1.075000000039239e-05, 1.0736000000122203e-05, 1.0972000000109006e-05, 7.402999999683857e-06, 5.20799999925714e-06, 8.110999999644264e-06, 9.556000000188192e-06, 7.055999999394658e-06, 9.973000000051968e-06, 1.020900000003877e-05, 1.1069999999335778e-05, 8.986000000099637e-06, 5.887999999565352e-06, 7.820000000435812e-06, 9.95800000058722e-06, 6.416000000619704e-06, 8.27800000013923e-06, 1.0625000000707985e-05, 1.1624999999959584e-05, 7.819000000353071e-06, 7.73599999970287e-06, 8.819999999687411e-06, 8.763999999494843e-06, 8.77799999976503e-06, 8.443999999663276e-06, 7.985999999959859e-06, 6.111000000252886e-06, 7.528000000256441e-06, 8.889000000067426e-06, 1.174999999964399e-05, 7.63899999967066e-06, 1.0193999999685843e-05, 8.000000000230045e-06, 8.916999999719621e-06, 7.972999999772412e-06, 8.223000000029401e-06, 7.583000000366269e-06, 6.19500000009765e-06, 9.750000000252612e-06, 1.0500000000135401e-05, 6.722000000181083e-06, 9.624999999680028e-06, 9.110999999784042e-06, 1.1820000000106745e-05, 7.68000000039848e-06, 8.250000000487034e-06]</msg>
<status status="PASS" starttime="20201029 09:36:13.950" endtime="20201029 09:36:13.952"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:13.944" endtime="20201029 09:36:13.953"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:13.575" endtime="20201029 09:36:13.953"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:13.574" endtime="20201029 09:36:13.953"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:13.963" endtime="20201029 09:36:13.973"></status>
</kw>
<msg timestamp="20201029 09:36:13.974" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:36:13.961" endtime="20201029 09:36:13.974"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:36:13.977" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:36:13.975" endtime="20201029 09:36:13.977"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:13.978" endtime="20201029 09:36:13.979"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:13.958" endtime="20201029 09:36:13.980"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:13.956" endtime="20201029 09:36:13.980"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:13.987" endtime="20201029 09:36:14.298"></status>
</kw>
<msg timestamp="20201029 09:36:14.302" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.201008972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.201016028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:36:13.985" endtime="20201029 09:36:14.302"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:36:14.312" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.201008972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.201016028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:36:14.303" endtime="20201029 09:36:14.313"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:14.313" endtime="20201029 09:36:14.315"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:13.983" endtime="20201029 09:36:14.316"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:13.981" endtime="20201029 09:36:14.316"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:36:14.320" level="INFO">${RESULT} = [{'diff': 7.055999999394658e-06}, {'diff': 9.973000000051968e-06}, {'diff': 1.020900000003877e-05}, {'diff': 1.1069999999335778e-05}, {'diff': 8.986000000099637e-06}, {'diff': 5.887999999565352e-06}, ...</msg>
<status status="PASS" starttime="20201029 09:36:14.317" endtime="20201029 09:36:14.320"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:36:14.327" level="INFO">${GPIO_OVERHEAD} = {'diff': [7.055999999394658e-06, 9.973000000051968e-06, 1.020900000003877e-05, 1.1069999999335778e-05, 8.986000000099637e-06, 5.887999999565352e-06, 7.820000000435812e-06, 9.95800000058722e-06, 6.4160...</msg>
<status status="PASS" starttime="20201029 09:36:14.321" endtime="20201029 09:36:14.328"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:36:14.332" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:36:14.331" endtime="20201029 09:36:14.332"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:36:14.334" level="INFO">VALUE: [7.055999999394658e-06, 9.973000000051968e-06, 1.020900000003877e-05, 1.1069999999335778e-05, 8.986000000099637e-06, 5.887999999565352e-06, 7.820000000435812e-06, 9.95800000058722e-06, 6.416000000619704e-06, 8.27800000013923e-06, 1.0625000000707985e-05, 1.1624999999959584e-05, 7.819000000353071e-06, 7.73599999970287e-06, 8.819999999687411e-06, 8.763999999494843e-06, 8.77799999976503e-06, 8.443999999663276e-06, 7.985999999959859e-06, 6.111000000252886e-06, 7.528000000256441e-06, 8.889000000067426e-06, 1.174999999964399e-05, 7.63899999967066e-06, 1.0193999999685843e-05, 8.000000000230045e-06, 8.916999999719621e-06, 7.972999999772412e-06, 8.223000000029401e-06, 7.583000000366269e-06, 6.19500000009765e-06, 9.750000000252612e-06, 1.0500000000135401e-05, 6.722000000181083e-06, 9.624999999680028e-06, 9.110999999784042e-06, 1.1820000000106745e-05, 7.68000000039848e-06, 8.250000000487034e-06, 1.070899999966457e-05, 7.708000000050674e-06, 6.749999999833278e-06, 6.457999999653907e-06, 1.0833000000154414e-05, 6.861000000135675e-06, 9.777999999904807e-06, 9.680999999872597e-06, 6.347000000239689e-06, 1.0666999999742188e-05, 1.0514000000405588e-05, 1.1166999999367988e-05, 8.125000000802629e-06, 1.0569000000515416e-05, 7.945000000120217e-06, 8.180000000024279e-06, 9.346999999770844e-06, 6.944999999980439e-06, 8.652999999192446e-06, 8.347000000519245e-06, 7.555999999908636e-06, 1.0264000000148599e-05, 1.0278000000418785e-05, 9.80500000036244e-06, 7.68100000048122e-06]</msg>
<status status="PASS" starttime="20201029 09:36:14.333" endtime="20201029 09:36:14.335"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:14.328" endtime="20201029 09:36:14.335"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:13.954" endtime="20201029 09:36:14.336"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:13.954" endtime="20201029 09:36:14.336"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:14.343" endtime="20201029 09:36:14.355"></status>
</kw>
<msg timestamp="20201029 09:36:14.355" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:36:14.342" endtime="20201029 09:36:14.355"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:36:14.358" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:36:14.356" endtime="20201029 09:36:14.358"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:14.359" endtime="20201029 09:36:14.360"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:14.339" endtime="20201029 09:36:14.361"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:14.338" endtime="20201029 09:36:14.361"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:14.368" endtime="20201029 09:36:14.686"></status>
</kw>
<msg timestamp="20201029 09:36:14.689" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.577936069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.577944069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:36:14.366" endtime="20201029 09:36:14.690"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:36:14.699" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.577936069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.577944069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:36:14.691" endtime="20201029 09:36:14.700"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:14.700" endtime="20201029 09:36:14.702"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:14.364" endtime="20201029 09:36:14.703"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:14.362" endtime="20201029 09:36:14.703"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:36:14.707" level="INFO">${RESULT} = [{'diff': 8.000000000230045e-06}, {'diff': 8.916999999719621e-06}, {'diff': 7.972999999772412e-06}, {'diff': 8.223000000029401e-06}, {'diff': 7.583000000366269e-06}, {'diff': 6.19500000009765e-06}, {'...</msg>
<status status="PASS" starttime="20201029 09:36:14.704" endtime="20201029 09:36:14.707"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:36:14.712" level="INFO">${GPIO_OVERHEAD} = {'diff': [8.000000000230045e-06, 8.916999999719621e-06, 7.972999999772412e-06, 8.223000000029401e-06, 7.583000000366269e-06, 6.19500000009765e-06, 9.750000000252612e-06, 1.0500000000135401e-05, 6.7220...</msg>
<status status="PASS" starttime="20201029 09:36:14.708" endtime="20201029 09:36:14.712"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:36:14.716" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:36:14.715" endtime="20201029 09:36:14.717"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:36:14.719" level="INFO">VALUE: [8.000000000230045e-06, 8.916999999719621e-06, 7.972999999772412e-06, 8.223000000029401e-06, 7.583000000366269e-06, 6.19500000009765e-06, 9.750000000252612e-06, 1.0500000000135401e-05, 6.722000000181083e-06, 9.624999999680028e-06, 9.110999999784042e-06, 1.1820000000106745e-05, 7.68000000039848e-06, 8.250000000487034e-06, 1.070899999966457e-05, 7.708000000050674e-06, 6.749999999833278e-06, 6.457999999653907e-06, 1.0833000000154414e-05, 6.861000000135675e-06, 9.777999999904807e-06, 9.680999999872597e-06, 6.347000000239689e-06, 1.0666999999742188e-05, 1.0514000000405588e-05, 1.1166999999367988e-05, 8.125000000802629e-06, 1.0569000000515416e-05, 7.945000000120217e-06, 8.180000000024279e-06, 9.346999999770844e-06, 6.944999999980439e-06, 8.652999999192446e-06, 8.347000000519245e-06, 7.555999999908636e-06, 1.0264000000148599e-05, 1.0278000000418785e-05, 9.80500000036244e-06, 7.68100000048122e-06, 7.472000000063872e-06, 9.930000000046846e-06, 8.72199999957246e-06, 7.903000000197835e-06, 1.115299999998598e-05, 8.18100000010702e-06, 7.347999999574029e-06, 7.402999999683857e-06, 9.555000000105451e-06, 1.055600000032797e-05, 9.902999999589213e-06, 8.486000000473837e-06, 9.278000000279008e-06, 8.250000000487034e-06, 8.416999999205643e-06, 6.2080000002850966e-06, 1.2528000000067152e-05, 1.2083999999745743e-05, 6.111000000252886e-06, 9.680999999872597e-06, 8.082999999992069e-06, 9.125000000054229e-06, 9.013999999751832e-06, 7.958000000307663e-06, 7.764000000243243e-06]</msg>
<status status="PASS" starttime="20201029 09:36:14.717" endtime="20201029 09:36:14.719"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:14.713" endtime="20201029 09:36:14.720"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:14.336" endtime="20201029 09:36:14.720"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:14.336" endtime="20201029 09:36:14.720"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:14.729" endtime="20201029 09:36:14.739"></status>
</kw>
<msg timestamp="20201029 09:36:14.740" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:36:14.727" endtime="20201029 09:36:14.740"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:36:14.742" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:36:14.741" endtime="20201029 09:36:14.742"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:14.743" endtime="20201029 09:36:14.745"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:14.724" endtime="20201029 09:36:14.745"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:14.722" endtime="20201029 09:36:14.746"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:14.752" endtime="20201029 09:36:15.070"></status>
</kw>
<msg timestamp="20201029 09:36:15.074" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.947439764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.947450931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:36:14.751" endtime="20201029 09:36:15.074"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:36:15.084" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.947439764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.947450931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:36:15.075" endtime="20201029 09:36:15.084"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:15.085" endtime="20201029 09:36:15.087"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:14.748" endtime="20201029 09:36:15.087"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:14.746" endtime="20201029 09:36:15.087"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:36:15.092" level="INFO">${RESULT} = [{'diff': 1.1166999999367988e-05}, {'diff': 8.125000000802629e-06}, {'diff': 1.0569000000515416e-05}, {'diff': 7.945000000120217e-06}, {'diff': 8.180000000024279e-06}, {'diff': 9.346999999770844e-06},...</msg>
<status status="PASS" starttime="20201029 09:36:15.088" endtime="20201029 09:36:15.092"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:36:15.097" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.1166999999367988e-05, 8.125000000802629e-06, 1.0569000000515416e-05, 7.945000000120217e-06, 8.180000000024279e-06, 9.346999999770844e-06, 6.944999999980439e-06, 8.652999999192446e-06, 8.34...</msg>
<status status="PASS" starttime="20201029 09:36:15.093" endtime="20201029 09:36:15.098"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:36:15.102" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:36:15.101" endtime="20201029 09:36:15.102"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:36:15.104" level="INFO">VALUE: [1.1166999999367988e-05, 8.125000000802629e-06, 1.0569000000515416e-05, 7.945000000120217e-06, 8.180000000024279e-06, 9.346999999770844e-06, 6.944999999980439e-06, 8.652999999192446e-06, 8.347000000519245e-06, 7.555999999908636e-06, 1.0264000000148599e-05, 1.0278000000418785e-05, 9.80500000036244e-06, 7.68100000048122e-06, 7.472000000063872e-06, 9.930000000046846e-06, 8.72199999957246e-06, 7.903000000197835e-06, 1.115299999998598e-05, 8.18100000010702e-06, 7.347999999574029e-06, 7.402999999683857e-06, 9.555000000105451e-06, 1.055600000032797e-05, 9.902999999589213e-06, 8.486000000473837e-06, 9.278000000279008e-06, 8.250000000487034e-06, 8.416999999205643e-06, 6.2080000002850966e-06, 1.2528000000067152e-05, 1.2083999999745743e-05, 6.111000000252886e-06, 9.680999999872597e-06, 8.082999999992069e-06, 9.125000000054229e-06, 9.013999999751832e-06, 7.958000000307663e-06, 7.764000000243243e-06, 8.416000000011081e-06, 6.986999999902821e-06, 9.429999999532868e-06, 9.443999999803054e-06, 1.105599999995377e-05, 6.9859999998200806e-06, 1.0194999999768584e-05, 9.430999999615608e-06, 1.1985999999630792e-05, 8.776999999682289e-06, 1.2027999999553174e-05, 9.750000000252612e-06, 1.105599999995377e-05, 1.1111000000063598e-05, 9.430999999615608e-06, 7.596999999748277e-06, 5.65299999966129e-06, 7.749999999973056e-06, 8.77799999976503e-06, 1.0374999999562817e-05, 8.889000000067426e-06, 9.013999999751832e-06, 9.0699999999444e-06, 9.291999999661016e-06, 7.888999999927648e-06]</msg>
<status status="PASS" starttime="20201029 09:36:15.103" endtime="20201029 09:36:15.105"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:15.098" endtime="20201029 09:36:15.105"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:14.721" endtime="20201029 09:36:15.105"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:14.721" endtime="20201029 09:36:15.106"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:15.114" endtime="20201029 09:36:15.125"></status>
</kw>
<msg timestamp="20201029 09:36:15.125" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:36:15.112" endtime="20201029 09:36:15.125"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:36:15.128" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:36:15.126" endtime="20201029 09:36:15.128"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:15.129" endtime="20201029 09:36:15.131"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:15.109" endtime="20201029 09:36:15.131"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:15.108" endtime="20201029 09:36:15.132"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:15.139" endtime="20201029 09:36:15.455"></status>
</kw>
<msg timestamp="20201029 09:36:15.459" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.317920611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.317929097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:36:15.137" endtime="20201029 09:36:15.459"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:36:15.469" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.317920611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.317929097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:36:15.460" endtime="20201029 09:36:15.469"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:15.470" endtime="20201029 09:36:15.472"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:15.134" endtime="20201029 09:36:15.472"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:15.132" endtime="20201029 09:36:15.473"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:36:15.477" level="INFO">${RESULT} = [{'diff': 8.486000000473837e-06}, {'diff': 9.278000000279008e-06}, {'diff': 8.250000000487034e-06}, {'diff': 8.416999999205643e-06}, {'diff': 6.2080000002850966e-06}, {'diff': 1.2528000000067152e-05},...</msg>
<status status="PASS" starttime="20201029 09:36:15.473" endtime="20201029 09:36:15.477"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:36:15.482" level="INFO">${GPIO_OVERHEAD} = {'diff': [8.486000000473837e-06, 9.278000000279008e-06, 8.250000000487034e-06, 8.416999999205643e-06, 6.2080000002850966e-06, 1.2528000000067152e-05, 1.2083999999745743e-05, 6.111000000252886e-06, 9.6...</msg>
<status status="PASS" starttime="20201029 09:36:15.478" endtime="20201029 09:36:15.483"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:36:15.487" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:36:15.486" endtime="20201029 09:36:15.487"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:36:15.489" level="INFO">VALUE: [8.486000000473837e-06, 9.278000000279008e-06, 8.250000000487034e-06, 8.416999999205643e-06, 6.2080000002850966e-06, 1.2528000000067152e-05, 1.2083999999745743e-05, 6.111000000252886e-06, 9.680999999872597e-06, 8.082999999992069e-06, 9.125000000054229e-06, 9.013999999751832e-06, 7.958000000307663e-06, 7.764000000243243e-06, 8.416000000011081e-06, 6.986999999902821e-06, 9.429999999532868e-06, 9.443999999803054e-06, 1.105599999995377e-05, 6.9859999998200806e-06, 1.0194999999768584e-05, 9.430999999615608e-06, 1.1985999999630792e-05, 8.776999999682289e-06, 1.2027999999553174e-05, 9.750000000252612e-06, 1.105599999995377e-05, 1.1111000000063598e-05, 9.430999999615608e-06, 7.596999999748277e-06, 5.65299999966129e-06, 7.749999999973056e-06, 8.77799999976503e-06, 1.0374999999562817e-05, 8.889000000067426e-06, 9.013999999751832e-06, 9.0699999999444e-06, 9.291999999661016e-06, 7.888999999927648e-06, 1.0361000000180809e-05, 8.596999999888055e-06, 6.944999999980439e-06, 8.139000000184637e-06, 1.0388999999833004e-05, 8.902000000254873e-06, 6.221999999667105e-06, 9.22300000016918e-06, 6.415999999731525e-06, 9.722000000600417e-06, 8.166999999836833e-06, 6.776999999402733e-06, 7.457999999793685e-06, 9.931000000129586e-06, 7.625000000288651e-06, 7.764000000243243e-06, 7.540999999555709e-06, 1.0666000000547626e-05, 7.77800000051343e-06, 9.194999999628806e-06, 9.694000000060043e-06, 7.110999999504486e-06, 6.19400000001491e-06, 9.848000000367563e-06, 8.707999999302274e-06]</msg>
<status status="PASS" starttime="20201029 09:36:15.488" endtime="20201029 09:36:15.490"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:15.484" endtime="20201029 09:36:15.490"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:15.106" endtime="20201029 09:36:15.491"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:15.106" endtime="20201029 09:36:15.491"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:15.499" endtime="20201029 09:36:15.509"></status>
</kw>
<msg timestamp="20201029 09:36:15.509" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:36:15.497" endtime="20201029 09:36:15.510"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:36:15.512" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:36:15.510" endtime="20201029 09:36:15.512"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:15.513" endtime="20201029 09:36:15.515"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:15.495" endtime="20201029 09:36:15.515"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:15.493" endtime="20201029 09:36:15.515"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:15.523" endtime="20201029 09:36:15.838"></status>
</kw>
<msg timestamp="20201029 09:36:15.842" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.694306319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.694316069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:36:15.521" endtime="20201029 09:36:15.842"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:36:15.851" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.694306319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.694316069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:36:15.843" endtime="20201029 09:36:15.852"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:15.852" endtime="20201029 09:36:15.854"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:15.518" endtime="20201029 09:36:15.855"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:15.516" endtime="20201029 09:36:15.855"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:36:15.859" level="INFO">${RESULT} = [{'diff': 9.750000000252612e-06}, {'diff': 1.105599999995377e-05}, {'diff': 1.1111000000063598e-05}, {'diff': 9.430999999615608e-06}, {'diff': 7.596999999748277e-06}, {'diff': 5.65299999966129e-06}, {...</msg>
<status status="PASS" starttime="20201029 09:36:15.856" endtime="20201029 09:36:15.859"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:36:15.864" level="INFO">${GPIO_OVERHEAD} = {'diff': [9.750000000252612e-06, 1.105599999995377e-05, 1.1111000000063598e-05, 9.430999999615608e-06, 7.596999999748277e-06, 5.65299999966129e-06, 7.749999999973056e-06, 8.77799999976503e-06, 1.03749...</msg>
<status status="PASS" starttime="20201029 09:36:15.860" endtime="20201029 09:36:15.864"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:36:15.868" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:36:15.867" endtime="20201029 09:36:15.869"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:36:15.872" level="INFO">VALUE: [9.750000000252612e-06, 1.105599999995377e-05, 1.1111000000063598e-05, 9.430999999615608e-06, 7.596999999748277e-06, 5.65299999966129e-06, 7.749999999973056e-06, 8.77799999976503e-06, 1.0374999999562817e-05, 8.889000000067426e-06, 9.013999999751832e-06, 9.0699999999444e-06, 9.291999999661016e-06, 7.888999999927648e-06, 1.0361000000180809e-05, 8.596999999888055e-06, 6.944999999980439e-06, 8.139000000184637e-06, 1.0388999999833004e-05, 8.902000000254873e-06, 6.221999999667105e-06, 9.22300000016918e-06, 6.415999999731525e-06, 9.722000000600417e-06, 8.166999999836833e-06, 6.776999999402733e-06, 7.457999999793685e-06, 9.931000000129586e-06, 7.625000000288651e-06, 7.764000000243243e-06, 7.540999999555709e-06, 1.0666000000547626e-05, 7.77800000051343e-06, 9.194999999628806e-06, 9.694000000060043e-06, 7.110999999504486e-06, 6.19400000001491e-06, 9.848000000367563e-06, 8.707999999302274e-06, 1.134800000013314e-05, 1.0569000000515416e-05, 7.000000000090267e-06, 1.0624999999819806e-05, 9.889000000207204e-06, 1.188900000048676e-05, 1.1221999999477816e-05, 8.33299999936088e-06, 8.902999999449435e-06, 5.972000000298294e-06, 8.360999999901253e-06, 8.486999999668399e-06, 1.001399999989161e-05, 9.556000000188192e-06, 9.513999999377631e-06, 9.61100000029802e-06, 6.625000000148873e-06, 8.042000000152427e-06, 7.513000000791692e-06, 8.653000000080624e-06, 7.179999999884501e-06, 8.485999999585658e-06, 9.486999999808177e-06, 7.639000000558838e-06, 9.430000000421046e-06]</msg>
<status status="PASS" starttime="20201029 09:36:15.869" endtime="20201029 09:36:15.872"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:15.865" endtime="20201029 09:36:15.873"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:15.492" endtime="20201029 09:36:15.873"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:15.491" endtime="20201029 09:36:15.873"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:15.881" endtime="20201029 09:36:15.893"></status>
</kw>
<msg timestamp="20201029 09:36:15.894" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:36:15.879" endtime="20201029 09:36:15.894"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:36:15.896" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:36:15.895" endtime="20201029 09:36:15.896"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:15.897" endtime="20201029 09:36:15.899"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:15.877" endtime="20201029 09:36:15.899"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:15.875" endtime="20201029 09:36:15.900"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:15.906" endtime="20201029 09:36:16.220"></status>
</kw>
<msg timestamp="20201029 09:36:16.224" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.069292542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.069299319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:36:15.904" endtime="20201029 09:36:16.224"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:36:16.233" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.069292542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.069299319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:36:16.225" endtime="20201029 09:36:16.234"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:16.234" endtime="20201029 09:36:16.236"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:15.902" endtime="20201029 09:36:16.237"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:15.900" endtime="20201029 09:36:16.237"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:36:16.241" level="INFO">${RESULT} = [{'diff': 6.776999999402733e-06}, {'diff': 7.457999999793685e-06}, {'diff': 9.931000000129586e-06}, {'diff': 7.625000000288651e-06}, {'diff': 7.764000000243243e-06}, {'diff': 7.540999999555709e-06}, {...</msg>
<status status="PASS" starttime="20201029 09:36:16.238" endtime="20201029 09:36:16.242"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:36:16.247" level="INFO">${GPIO_OVERHEAD} = {'diff': [6.776999999402733e-06, 7.457999999793685e-06, 9.931000000129586e-06, 7.625000000288651e-06, 7.764000000243243e-06, 7.540999999555709e-06, 1.0666000000547626e-05, 7.77800000051343e-06, 9.1949...</msg>
<status status="PASS" starttime="20201029 09:36:16.242" endtime="20201029 09:36:16.247"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:36:16.251" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:36:16.250" endtime="20201029 09:36:16.252"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:36:16.254" level="INFO">VALUE: [6.776999999402733e-06, 7.457999999793685e-06, 9.931000000129586e-06, 7.625000000288651e-06, 7.764000000243243e-06, 7.540999999555709e-06, 1.0666000000547626e-05, 7.77800000051343e-06, 9.194999999628806e-06, 9.694000000060043e-06, 7.110999999504486e-06, 6.19400000001491e-06, 9.848000000367563e-06, 8.707999999302274e-06, 1.134800000013314e-05, 1.0569000000515416e-05, 7.000000000090267e-06, 1.0624999999819806e-05, 9.889000000207204e-06, 1.188900000048676e-05, 1.1221999999477816e-05, 8.33299999936088e-06, 8.902999999449435e-06, 5.972000000298294e-06, 8.360999999901253e-06, 8.486999999668399e-06, 1.001399999989161e-05, 9.556000000188192e-06, 9.513999999377631e-06, 9.61100000029802e-06, 6.625000000148873e-06, 8.042000000152427e-06, 7.513000000791692e-06, 8.653000000080624e-06, 7.179999999884501e-06, 8.485999999585658e-06, 9.486999999808177e-06, 7.639000000558838e-06, 9.430000000421046e-06, 5.791999999615882e-06, 7.347000000379467e-06, 1.0985999999491014e-05, 7.292000000269638e-06, 7.945000000120217e-06, 8.930999999989808e-06, 8.792000000035216e-06, 1.020799999995603e-05, 8.360999999901253e-06, 9.083000000131847e-06, 1.1930000000326402e-05, 1.1041999999683583e-05, 8.792000000035216e-06, 7.945000000120217e-06, 7.92999999976729e-06, 9.0699999999444e-06, 1.0014000000779788e-05, 8.776999999682289e-06, 9.125000000054229e-06, 6.596999999608499e-06, 7.611000000018464e-06, 9.180000000164057e-06, 7.999999999341867e-06, 8.763999999494843e-06, 7.944000000037477e-06]</msg>
<status status="PASS" starttime="20201029 09:36:16.252" endtime="20201029 09:36:16.254"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:16.248" endtime="20201029 09:36:16.255"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:15.874" endtime="20201029 09:36:16.255"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:15.873" endtime="20201029 09:36:16.255"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:16.263" endtime="20201029 09:36:16.274"></status>
</kw>
<msg timestamp="20201029 09:36:16.275" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:36:16.261" endtime="20201029 09:36:16.275"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:36:16.277" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:36:16.276" endtime="20201029 09:36:16.277"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:16.278" endtime="20201029 09:36:16.280"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:16.259" endtime="20201029 09:36:16.280"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:16.257" endtime="20201029 09:36:16.281"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:16.287" endtime="20201029 09:36:16.606"></status>
</kw>
<msg timestamp="20201029 09:36:16.610" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.444256944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.444265431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:36:16.286" endtime="20201029 09:36:16.610"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:36:16.619" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.444256944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.444265431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:36:16.611" endtime="20201029 09:36:16.620"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:16.621" endtime="20201029 09:36:16.622"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:16.283" endtime="20201029 09:36:16.623"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:16.281" endtime="20201029 09:36:16.623"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:36:16.627" level="INFO">${RESULT} = [{'diff': 8.486999999668399e-06}, {'diff': 1.001399999989161e-05}, {'diff': 9.556000000188192e-06}, {'diff': 9.513999999377631e-06}, {'diff': 9.61100000029802e-06}, {'diff': 6.625000000148873e-06}, {'...</msg>
<status status="PASS" starttime="20201029 09:36:16.624" endtime="20201029 09:36:16.628"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:36:16.632" level="INFO">${GPIO_OVERHEAD} = {'diff': [8.486999999668399e-06, 1.001399999989161e-05, 9.556000000188192e-06, 9.513999999377631e-06, 9.61100000029802e-06, 6.625000000148873e-06, 8.042000000152427e-06, 7.513000000791692e-06, 8.65300...</msg>
<status status="PASS" starttime="20201029 09:36:16.628" endtime="20201029 09:36:16.633"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:36:16.637" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:36:16.636" endtime="20201029 09:36:16.637"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:36:16.639" level="INFO">VALUE: [8.486999999668399e-06, 1.001399999989161e-05, 9.556000000188192e-06, 9.513999999377631e-06, 9.61100000029802e-06, 6.625000000148873e-06, 8.042000000152427e-06, 7.513000000791692e-06, 8.653000000080624e-06, 7.179999999884501e-06, 8.485999999585658e-06, 9.486999999808177e-06, 7.639000000558838e-06, 9.430000000421046e-06, 5.791999999615882e-06, 7.347000000379467e-06, 1.0985999999491014e-05, 7.292000000269638e-06, 7.945000000120217e-06, 8.930999999989808e-06, 8.792000000035216e-06, 1.020799999995603e-05, 8.360999999901253e-06, 9.083000000131847e-06, 1.1930000000326402e-05, 1.1041999999683583e-05, 8.792000000035216e-06, 7.945000000120217e-06, 7.92999999976729e-06, 9.0699999999444e-06, 1.0014000000779788e-05, 8.776999999682289e-06, 9.125000000054229e-06, 6.596999999608499e-06, 7.611000000018464e-06, 9.180000000164057e-06, 7.999999999341867e-06, 8.763999999494843e-06, 7.944000000037477e-06, 1.229200000008035e-05, 8.388999999553448e-06, 7.2089999996194365e-06, 9.291999999661016e-06, 8.055000000339874e-06, 7.222000000695061e-06, 5.943999999757921e-06, 1.1097999999876151e-05, 1.0499999999247223e-05, 8.611000000158242e-06, 9.110999999784042e-06, 6.930999999710252e-06, 8.861000000415231e-06, 9.180000000164057e-06, 1.001299999980887e-05, 9.249999999738634e-06, 8.388999999553448e-06, 8.929999999907068e-06, 8.693999999920266e-06, 8.832999999874858e-06, 7.165999999614314e-06, 1.2444000000222388e-05, 7.68000000039848e-06, 9.125000000054229e-06, 8.0700000006928e-06]</msg>
<status status="PASS" starttime="20201029 09:36:16.638" endtime="20201029 09:36:16.639"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:16.633" endtime="20201029 09:36:16.640"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:16.256" endtime="20201029 09:36:16.640"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:16.256" endtime="20201029 09:36:16.640"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:16.649" endtime="20201029 09:36:16.660"></status>
</kw>
<msg timestamp="20201029 09:36:16.661" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:36:16.647" endtime="20201029 09:36:16.661"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:36:16.663" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:36:16.662" endtime="20201029 09:36:16.664"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:16.664" endtime="20201029 09:36:16.666"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:16.644" endtime="20201029 09:36:16.666"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:16.643" endtime="20201029 09:36:16.667"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:16.673" endtime="20201029 09:36:16.994"></status>
</kw>
<msg timestamp="20201029 09:36:16.998" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.814546375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.814557417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:36:16.672" endtime="20201029 09:36:16.998"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:36:17.007" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.814546375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.814557417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:36:16.999" endtime="20201029 09:36:17.008"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:17.009" endtime="20201029 09:36:17.010"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:16.669" endtime="20201029 09:36:17.011"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:16.667" endtime="20201029 09:36:17.011"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:36:17.016" level="INFO">${RESULT} = [{'diff': 1.1041999999683583e-05}, {'diff': 8.792000000035216e-06}, {'diff': 7.945000000120217e-06}, {'diff': 7.92999999976729e-06}, {'diff': 9.0699999999444e-06}, {'diff': 1.0014000000779788e-05}, {'...</msg>
<status status="PASS" starttime="20201029 09:36:17.012" endtime="20201029 09:36:17.016"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:36:17.021" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.1041999999683583e-05, 8.792000000035216e-06, 7.945000000120217e-06, 7.92999999976729e-06, 9.0699999999444e-06, 1.0014000000779788e-05, 8.776999999682289e-06, 9.125000000054229e-06, 6.59699...</msg>
<status status="PASS" starttime="20201029 09:36:17.017" endtime="20201029 09:36:17.022"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:36:17.026" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:36:17.025" endtime="20201029 09:36:17.026"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:36:17.028" level="INFO">VALUE: [1.1041999999683583e-05, 8.792000000035216e-06, 7.945000000120217e-06, 7.92999999976729e-06, 9.0699999999444e-06, 1.0014000000779788e-05, 8.776999999682289e-06, 9.125000000054229e-06, 6.596999999608499e-06, 7.611000000018464e-06, 9.180000000164057e-06, 7.999999999341867e-06, 8.763999999494843e-06, 7.944000000037477e-06, 1.229200000008035e-05, 8.388999999553448e-06, 7.2089999996194365e-06, 9.291999999661016e-06, 8.055000000339874e-06, 7.222000000695061e-06, 5.943999999757921e-06, 1.1097999999876151e-05, 1.0499999999247223e-05, 8.611000000158242e-06, 9.110999999784042e-06, 6.930999999710252e-06, 8.861000000415231e-06, 9.180000000164057e-06, 1.001299999980887e-05, 9.249999999738634e-06, 8.388999999553448e-06, 8.929999999907068e-06, 8.693999999920266e-06, 8.832999999874858e-06, 7.165999999614314e-06, 1.2444000000222388e-05, 7.68000000039848e-06, 9.125000000054229e-06, 8.0700000006928e-06, 9.971999999969228e-06, 9.847000000284822e-06, 1.0722999999934757e-05, 7.596999999748277e-06, 7.583000000366269e-06, 9.362000000123771e-06, 1.020900000003877e-05, 1.1083999999605965e-05, 1.115299999998598e-05, 8.277999999251051e-06, 6.750000000721457e-06, 8.597999999970796e-06, 7.264000000617443e-06, 7.721999999432683e-06, 1.0679999999929635e-05, 1.0986000000379192e-05, 7.166999999697055e-06, 1.1972000000248784e-05, 9.583999999840387e-06, 7.111000000392664e-06, 1.0485999999865214e-05, 8.445000000634195e-06, 1.0249999999878412e-05, 7.2779999999994516e-06, 7.098000000205218e-06]</msg>
<status status="PASS" starttime="20201029 09:36:17.027" endtime="20201029 09:36:17.029"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:17.022" endtime="20201029 09:36:17.029"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:16.641" endtime="20201029 09:36:17.030"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:16.641" endtime="20201029 09:36:17.030"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:17.038" endtime="20201029 09:36:17.049"></status>
</kw>
<msg timestamp="20201029 09:36:17.050" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:36:17.036" endtime="20201029 09:36:17.050"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:36:17.052" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:36:17.051" endtime="20201029 09:36:17.053"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:17.053" endtime="20201029 09:36:17.055"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:17.034" endtime="20201029 09:36:17.056"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:17.032" endtime="20201029 09:36:17.056"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:17.062" endtime="20201029 09:36:17.392"></status>
</kw>
<msg timestamp="20201029 09:36:17.396" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.185868861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.185875792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:36:17.061" endtime="20201029 09:36:17.396"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:36:17.405" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.185868861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.185875792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:36:17.397" endtime="20201029 09:36:17.406"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:17.407" endtime="20201029 09:36:17.408"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:17.058" endtime="20201029 09:36:17.409"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:17.057" endtime="20201029 09:36:17.409"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:36:17.414" level="INFO">${RESULT} = [{'diff': 6.930999999710252e-06}, {'diff': 8.861000000415231e-06}, {'diff': 9.180000000164057e-06}, {'diff': 1.001299999980887e-05}, {'diff': 9.249999999738634e-06}, {'diff': 8.388999999553448e-06}, {...</msg>
<status status="PASS" starttime="20201029 09:36:17.410" endtime="20201029 09:36:17.414"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:36:17.419" level="INFO">${GPIO_OVERHEAD} = {'diff': [6.930999999710252e-06, 8.861000000415231e-06, 9.180000000164057e-06, 1.001299999980887e-05, 9.249999999738634e-06, 8.388999999553448e-06, 8.929999999907068e-06, 8.693999999920266e-06, 8.8329...</msg>
<status status="PASS" starttime="20201029 09:36:17.415" endtime="20201029 09:36:17.420"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:36:17.424" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:36:17.423" endtime="20201029 09:36:17.424"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:36:17.427" level="INFO">VALUE: [6.930999999710252e-06, 8.861000000415231e-06, 9.180000000164057e-06, 1.001299999980887e-05, 9.249999999738634e-06, 8.388999999553448e-06, 8.929999999907068e-06, 8.693999999920266e-06, 8.832999999874858e-06, 7.165999999614314e-06, 1.2444000000222388e-05, 7.68000000039848e-06, 9.125000000054229e-06, 8.0700000006928e-06, 9.971999999969228e-06, 9.847000000284822e-06, 1.0722999999934757e-05, 7.596999999748277e-06, 7.583000000366269e-06, 9.362000000123771e-06, 1.020900000003877e-05, 1.1083999999605965e-05, 1.115299999998598e-05, 8.277999999251051e-06, 6.750000000721457e-06, 8.597999999970796e-06, 7.264000000617443e-06, 7.721999999432683e-06, 1.0679999999929635e-05, 1.0986000000379192e-05, 7.166999999697055e-06, 1.1972000000248784e-05, 9.583999999840387e-06, 7.111000000392664e-06, 1.0485999999865214e-05, 8.445000000634195e-06, 1.0249999999878412e-05, 7.2779999999994516e-06, 7.098000000205218e-06, 8.889000000067426e-06, 9.569000000375638e-06, 1.2167000000395944e-05, 5.389000000022293e-06, 8.957999999559263e-06, 9.902999999589213e-06, 9.096999999513855e-06, 9.903000000477391e-06, 1.0028000000161796e-05, 8.77799999976503e-06, 1.0139000000464193e-05, 6.73700000053401e-06, 1.1638999999341593e-05, 1.1513999999657187e-05, 7.6249999994004725e-06, 6.63900000041906e-06, 1.0291999999800794e-05, 7.87500000054564e-06, 6.749999999833278e-06, 9.402999999963413e-06, 1.1707999999721608e-05, 5.986000000568481e-06, 1.0137999999493275e-05, 9.249999999738634e-06, 1.1096999999793411e-05]</msg>
<status status="PASS" starttime="20201029 09:36:17.425" endtime="20201029 09:36:17.427"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:17.421" endtime="20201029 09:36:17.428"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:17.031" endtime="20201029 09:36:17.428"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:17.030" endtime="20201029 09:36:17.428"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:17.436" endtime="20201029 09:36:17.446"></status>
</kw>
<msg timestamp="20201029 09:36:17.447" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:36:17.434" endtime="20201029 09:36:17.447"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:36:17.449" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:36:17.448" endtime="20201029 09:36:17.450"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:17.451" endtime="20201029 09:36:17.452"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:17.432" endtime="20201029 09:36:17.453"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:17.430" endtime="20201029 09:36:17.453"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:17.460" endtime="20201029 09:36:17.776"></status>
</kw>
<msg timestamp="20201029 09:36:17.780" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.560199458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.560208056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:36:17.458" endtime="20201029 09:36:17.780"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:36:17.790" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.560199458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.560208056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:36:17.781" endtime="20201029 09:36:17.790"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:17.791" endtime="20201029 09:36:17.793"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:17.456" endtime="20201029 09:36:17.793"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:17.454" endtime="20201029 09:36:17.793"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:36:17.798" level="INFO">${RESULT} = [{'diff': 8.597999999970796e-06}, {'diff': 7.264000000617443e-06}, {'diff': 7.721999999432683e-06}, {'diff': 1.0679999999929635e-05}, {'diff': 1.0986000000379192e-05}, {'diff': 7.166999999697055e-06},...</msg>
<status status="PASS" starttime="20201029 09:36:17.794" endtime="20201029 09:36:17.798"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:36:17.802" level="INFO">${GPIO_OVERHEAD} = {'diff': [8.597999999970796e-06, 7.264000000617443e-06, 7.721999999432683e-06, 1.0679999999929635e-05, 1.0986000000379192e-05, 7.166999999697055e-06, 1.1972000000248784e-05, 9.583999999840387e-06, 7.1...</msg>
<status status="PASS" starttime="20201029 09:36:17.799" endtime="20201029 09:36:17.803"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:36:17.807" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:36:17.806" endtime="20201029 09:36:17.807"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:36:17.810" level="INFO">VALUE: [8.597999999970796e-06, 7.264000000617443e-06, 7.721999999432683e-06, 1.0679999999929635e-05, 1.0986000000379192e-05, 7.166999999697055e-06, 1.1972000000248784e-05, 9.583999999840387e-06, 7.111000000392664e-06, 1.0485999999865214e-05, 8.445000000634195e-06, 1.0249999999878412e-05, 7.2779999999994516e-06, 7.098000000205218e-06, 8.889000000067426e-06, 9.569000000375638e-06, 1.2167000000395944e-05, 5.389000000022293e-06, 8.957999999559263e-06, 9.902999999589213e-06, 9.096999999513855e-06, 9.903000000477391e-06, 1.0028000000161796e-05, 8.77799999976503e-06, 1.0139000000464193e-05, 6.73700000053401e-06, 1.1638999999341593e-05, 1.1513999999657187e-05, 7.6249999994004725e-06, 6.63900000041906e-06, 1.0291999999800794e-05, 7.87500000054564e-06, 6.749999999833278e-06, 9.402999999963413e-06, 1.1707999999721608e-05, 5.986000000568481e-06, 1.0137999999493275e-05, 9.249999999738634e-06, 1.1096999999793411e-05, 7.584000000449009e-06, 7.569999999290644e-06, 9.070000000832579e-06, 7.820000000435812e-06, 6.9450000008686175e-06, 7.513999999986254e-06, 7.6799999995103e-06, 6.5139999989582975e-06, 1.0832999999266235e-05, 1.0500000000135401e-05, 6.374999999891884e-06, 7.77800000051343e-06, 9.013999999751832e-06, 7.459000000764604e-06, 6.221999999667105e-06, 1.0264000000148599e-05, 9.777999999016629e-06, 7.583000000366269e-06, 7.777999998737073e-06, 1.0417000000373378e-05, 6.764000000103465e-06, 1.040300000099137e-05, 6.04200000076105e-06, 8.304999999708684e-06, 7.23600000007707e-06]</msg>
<status status="PASS" starttime="20201029 09:36:17.808" endtime="20201029 09:36:17.810"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:17.804" endtime="20201029 09:36:17.810"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:17.429" endtime="20201029 09:36:17.811"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:17.428" endtime="20201029 09:36:17.811"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:17.820" endtime="20201029 09:36:17.831"></status>
</kw>
<msg timestamp="20201029 09:36:17.832" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:36:17.818" endtime="20201029 09:36:17.832"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:36:17.834" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:36:17.833" endtime="20201029 09:36:17.835"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:17.835" endtime="20201029 09:36:17.837"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:17.815" endtime="20201029 09:36:17.837"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:17.813" endtime="20201029 09:36:17.838"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:17.844" endtime="20201029 09:36:18.155"></status>
</kw>
<msg timestamp="20201029 09:36:18.159" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.939543819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.939550556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:36:17.843" endtime="20201029 09:36:18.160"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:36:18.169" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.939543819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.939550556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:36:18.160" endtime="20201029 09:36:18.170"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:18.170" endtime="20201029 09:36:18.172"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:17.840" endtime="20201029 09:36:18.173"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:17.838" endtime="20201029 09:36:18.173"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:36:18.177" level="INFO">${RESULT} = [{'diff': 6.73700000053401e-06}, {'diff': 1.1638999999341593e-05}, {'diff': 1.1513999999657187e-05}, {'diff': 7.6249999994004725e-06}, {'diff': 6.63900000041906e-06}, {'diff': 1.0291999999800794e-05},...</msg>
<status status="PASS" starttime="20201029 09:36:18.174" endtime="20201029 09:36:18.177"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:36:18.183" level="INFO">${GPIO_OVERHEAD} = {'diff': [6.73700000053401e-06, 1.1638999999341593e-05, 1.1513999999657187e-05, 7.6249999994004725e-06, 6.63900000041906e-06, 1.0291999999800794e-05, 7.87500000054564e-06, 6.749999999833278e-06, 9.402...</msg>
<status status="PASS" starttime="20201029 09:36:18.178" endtime="20201029 09:36:18.183"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:36:18.187" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:36:18.186" endtime="20201029 09:36:18.188"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:36:18.190" level="INFO">VALUE: [6.73700000053401e-06, 1.1638999999341593e-05, 1.1513999999657187e-05, 7.6249999994004725e-06, 6.63900000041906e-06, 1.0291999999800794e-05, 7.87500000054564e-06, 6.749999999833278e-06, 9.402999999963413e-06, 1.1707999999721608e-05, 5.986000000568481e-06, 1.0137999999493275e-05, 9.249999999738634e-06, 1.1096999999793411e-05, 7.584000000449009e-06, 7.569999999290644e-06, 9.070000000832579e-06, 7.820000000435812e-06, 6.9450000008686175e-06, 7.513999999986254e-06, 7.6799999995103e-06, 6.5139999989582975e-06, 1.0832999999266235e-05, 1.0500000000135401e-05, 6.374999999891884e-06, 7.77800000051343e-06, 9.013999999751832e-06, 7.459000000764604e-06, 6.221999999667105e-06, 1.0264000000148599e-05, 9.777999999016629e-06, 7.583000000366269e-06, 7.777999998737073e-06, 1.0417000000373378e-05, 6.764000000103465e-06, 1.040300000099137e-05, 6.04200000076105e-06, 8.304999999708684e-06, 7.23600000007707e-06, 9.777999999016629e-06, 6.83300000048348e-06, 8.540999999695487e-06, 1.051399999951741e-05, 7.124999999774673e-06, 1.179200000045455e-05, 7.4019999996011165e-06, 1.0916999999110999e-05, 8.596999998999877e-06, 7.999999999341867e-06, 5.680999999313485e-06, 9.680999999872597e-06, 1.1639000000229771e-05, 9.62499999879185e-06, 9.680000001566214e-06, 8.721999998684282e-06, 9.000000000369823e-06, 1.005600000070217e-05, 8.721999998684282e-06, 7.527999999368262e-06, 1.0264000000148599e-05, 1.2402000001188185e-05, 6.110999999364708e-06, 6.570000000039045e-06, 1.0334000000611354e-05]</msg>
<status status="PASS" starttime="20201029 09:36:18.188" endtime="20201029 09:36:18.190"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:18.184" endtime="20201029 09:36:18.191"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:17.812" endtime="20201029 09:36:18.191"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:17.811" endtime="20201029 09:36:18.191"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:18.199" endtime="20201029 09:36:18.209"></status>
</kw>
<msg timestamp="20201029 09:36:18.210" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:36:18.197" endtime="20201029 09:36:18.210"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:36:18.212" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:36:18.211" endtime="20201029 09:36:18.213"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:18.213" endtime="20201029 09:36:18.215"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:18.195" endtime="20201029 09:36:18.215"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:18.193" endtime="20201029 09:36:18.216"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:18.223" endtime="20201029 09:36:18.538"></status>
</kw>
<msg timestamp="20201029 09:36:18.542" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.327009486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.327017264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:36:18.221" endtime="20201029 09:36:18.542"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:36:18.552" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.327009486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.327017264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:36:18.543" endtime="20201029 09:36:18.552"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:18.553" endtime="20201029 09:36:18.555"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:18.218" endtime="20201029 09:36:18.555"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:18.217" endtime="20201029 09:36:18.556"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:36:18.561" level="INFO">${RESULT} = [{'diff': 7.77800000051343e-06}, {'diff': 9.013999999751832e-06}, {'diff': 7.459000000764604e-06}, {'diff': 6.221999999667105e-06}, {'diff': 1.0264000000148599e-05}, {'diff': 9.777999999016629e-06}, {...</msg>
<status status="PASS" starttime="20201029 09:36:18.557" endtime="20201029 09:36:18.561"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:36:18.566" level="INFO">${GPIO_OVERHEAD} = {'diff': [7.77800000051343e-06, 9.013999999751832e-06, 7.459000000764604e-06, 6.221999999667105e-06, 1.0264000000148599e-05, 9.777999999016629e-06, 7.583000000366269e-06, 7.777999998737073e-06, 1.0417...</msg>
<status status="PASS" starttime="20201029 09:36:18.562" endtime="20201029 09:36:18.570"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:36:18.575" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:36:18.574" endtime="20201029 09:36:18.575"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:36:18.577" level="INFO">VALUE: [7.77800000051343e-06, 9.013999999751832e-06, 7.459000000764604e-06, 6.221999999667105e-06, 1.0264000000148599e-05, 9.777999999016629e-06, 7.583000000366269e-06, 7.777999998737073e-06, 1.0417000000373378e-05, 6.764000000103465e-06, 1.040300000099137e-05, 6.04200000076105e-06, 8.304999999708684e-06, 7.23600000007707e-06, 9.777999999016629e-06, 6.83300000048348e-06, 8.540999999695487e-06, 1.051399999951741e-05, 7.124999999774673e-06, 1.179200000045455e-05, 7.4019999996011165e-06, 1.0916999999110999e-05, 8.596999998999877e-06, 7.999999999341867e-06, 5.680999999313485e-06, 9.680999999872597e-06, 1.1639000000229771e-05, 9.62499999879185e-06, 9.680000001566214e-06, 8.721999998684282e-06, 9.000000000369823e-06, 1.005600000070217e-05, 8.721999998684282e-06, 7.527999999368262e-06, 1.0264000000148599e-05, 1.2402000001188185e-05, 6.110999999364708e-06, 6.570000000039045e-06, 1.0334000000611354e-05, 7.249999999459078e-06, 7.2909999992987196e-06, 7.83399999981782e-06, 1.0721999998963838e-05, 6.722000000181083e-06, 8.598000000858974e-06, 1.0208000000844208e-05, 9.013999999751832e-06, 8.194000001182644e-06, 9.597000000027833e-06, 9.25000000151499e-06, 9.889000001095383e-06, 1.2235999999887781e-05, 1.1639000000229771e-05, 6.7499999989451e-06, 1.0596999999279433e-05, 1.1209000000178548e-05, 8.735999999842647e-06, 8.417000000093822e-06, 8.889000000067426e-06, 1.0083000001159803e-05, 8.666999999462632e-06, 9.792000000174994e-06, 8.291000000326676e-06, 9.9169999998594e-06]</msg>
<status status="PASS" starttime="20201029 09:36:18.576" endtime="20201029 09:36:18.578"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:18.571" endtime="20201029 09:36:18.578"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:18.192" endtime="20201029 09:36:18.579"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:18.192" endtime="20201029 09:36:18.579"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:18.586" endtime="20201029 09:36:18.598"></status>
</kw>
<msg timestamp="20201029 09:36:18.598" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:36:18.585" endtime="20201029 09:36:18.599"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:36:18.601" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:36:18.599" endtime="20201029 09:36:18.601"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:18.602" endtime="20201029 09:36:18.604"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:18.582" endtime="20201029 09:36:18.604"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:18.581" endtime="20201029 09:36:18.605"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:18.612" endtime="20201029 09:36:18.929"></status>
</kw>
<msg timestamp="20201029 09:36:18.933" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.701772319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.701782, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 09:36:18.611" endtime="20201029 09:36:18.934"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:36:18.944" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.701772319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.701782, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 09:36:18.934" endtime="20201029 09:36:18.945"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:18.945" endtime="20201029 09:36:18.947"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:18.607" endtime="20201029 09:36:18.948"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:18.605" endtime="20201029 09:36:18.948"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:36:18.952" level="INFO">${RESULT} = [{'diff': 9.680999999872597e-06}, {'diff': 1.1639000000229771e-05}, {'diff': 9.62499999879185e-06}, {'diff': 9.680000001566214e-06}, {'diff': 8.721999998684282e-06}, {'diff': 9.000000000369823e-06}, {...</msg>
<status status="PASS" starttime="20201029 09:36:18.949" endtime="20201029 09:36:18.953"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:36:18.957" level="INFO">${GPIO_OVERHEAD} = {'diff': [9.680999999872597e-06, 1.1639000000229771e-05, 9.62499999879185e-06, 9.680000001566214e-06, 8.721999998684282e-06, 9.000000000369823e-06, 1.005600000070217e-05, 8.721999998684282e-06, 7.5279...</msg>
<status status="PASS" starttime="20201029 09:36:18.953" endtime="20201029 09:36:18.958"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:36:18.963" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:36:18.961" endtime="20201029 09:36:18.963"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:36:18.965" level="INFO">VALUE: [9.680999999872597e-06, 1.1639000000229771e-05, 9.62499999879185e-06, 9.680000001566214e-06, 8.721999998684282e-06, 9.000000000369823e-06, 1.005600000070217e-05, 8.721999998684282e-06, 7.527999999368262e-06, 1.0264000000148599e-05, 1.2402000001188185e-05, 6.110999999364708e-06, 6.570000000039045e-06, 1.0334000000611354e-05, 7.249999999459078e-06, 7.2909999992987196e-06, 7.83399999981782e-06, 1.0721999998963838e-05, 6.722000000181083e-06, 8.598000000858974e-06, 1.0208000000844208e-05, 9.013999999751832e-06, 8.194000001182644e-06, 9.597000000027833e-06, 9.25000000151499e-06, 9.889000001095383e-06, 1.2235999999887781e-05, 1.1639000000229771e-05, 6.7499999989451e-06, 1.0596999999279433e-05, 1.1209000000178548e-05, 8.735999999842647e-06, 8.417000000093822e-06, 8.889000000067426e-06, 1.0083000001159803e-05, 8.666999999462632e-06, 9.792000000174994e-06, 8.291000000326676e-06, 9.9169999998594e-06, 8.77799999976503e-06, 8.944000001065433e-06, 1.0972000000109006e-05, 1.0958000000726997e-05, 6.972999999632634e-06, 9.000000000369823e-06, 1.1457999999464619e-05, 7.347000000379467e-06, 8.416999998317465e-06, 7.263999998841086e-06, 8.124999999026272e-06, 5.806000000774247e-06, 8.056000000422614e-06, 5.55599999962908e-06, 1.0124999999305828e-05, 8.776999999682289e-06, 9.125000000054229e-06, 9.249999999738634e-06, 1.0028000000161796e-05, 1.1332999999780213e-05, 7.806000001053803e-06, 7.77700000043069e-06, 7.888000000733086e-06, 7.526999999285522e-06, 7.457999998905507e-06]</msg>
<status status="PASS" starttime="20201029 09:36:18.964" endtime="20201029 09:36:18.966"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:18.958" endtime="20201029 09:36:18.966"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:18.579" endtime="20201029 09:36:18.967"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:18.579" endtime="20201029 09:36:18.967"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:18.975" endtime="20201029 09:36:18.986"></status>
</kw>
<msg timestamp="20201029 09:36:18.986" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:36:18.973" endtime="20201029 09:36:18.986"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:36:18.989" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:36:18.987" endtime="20201029 09:36:18.989"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:18.990" endtime="20201029 09:36:18.991"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:18.970" endtime="20201029 09:36:18.992"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:18.969" endtime="20201029 09:36:18.992"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:18.999" endtime="20201029 09:36:19.312"></status>
</kw>
<msg timestamp="20201029 09:36:19.316" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 9.072013486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 9.072023375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:36:18.997" endtime="20201029 09:36:19.316"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:36:19.326" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 9.072013486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 9.072023375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:36:19.317" endtime="20201029 09:36:19.326"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:19.327" endtime="20201029 09:36:19.329"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:18.995" endtime="20201029 09:36:19.329"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:18.993" endtime="20201029 09:36:19.330"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:36:19.334" level="INFO">${RESULT} = [{'diff': 9.889000001095383e-06}, {'diff': 1.2235999999887781e-05}, {'diff': 1.1639000000229771e-05}, {'diff': 6.7499999989451e-06}, {'diff': 1.0596999999279433e-05}, {'diff': 1.1209000000178548e-05},...</msg>
<status status="PASS" starttime="20201029 09:36:19.330" endtime="20201029 09:36:19.334"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:36:19.339" level="INFO">${GPIO_OVERHEAD} = {'diff': [9.889000001095383e-06, 1.2235999999887781e-05, 1.1639000000229771e-05, 6.7499999989451e-06, 1.0596999999279433e-05, 1.1209000000178548e-05, 8.735999999842647e-06, 8.417000000093822e-06, 8.88...</msg>
<status status="PASS" starttime="20201029 09:36:19.335" endtime="20201029 09:36:19.340"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:36:19.344" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:36:19.343" endtime="20201029 09:36:19.344"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:36:19.347" level="INFO">VALUE: [9.889000001095383e-06, 1.2235999999887781e-05, 1.1639000000229771e-05, 6.7499999989451e-06, 1.0596999999279433e-05, 1.1209000000178548e-05, 8.735999999842647e-06, 8.417000000093822e-06, 8.889000000067426e-06, 1.0083000001159803e-05, 8.666999999462632e-06, 9.792000000174994e-06, 8.291000000326676e-06, 9.9169999998594e-06, 8.77799999976503e-06, 8.944000001065433e-06, 1.0972000000109006e-05, 1.0958000000726997e-05, 6.972999999632634e-06, 9.000000000369823e-06, 1.1457999999464619e-05, 7.347000000379467e-06, 8.416999998317465e-06, 7.263999998841086e-06, 8.124999999026272e-06, 5.806000000774247e-06, 8.056000000422614e-06, 5.55599999962908e-06, 1.0124999999305828e-05, 8.776999999682289e-06, 9.125000000054229e-06, 9.249999999738634e-06, 1.0028000000161796e-05, 1.1332999999780213e-05, 7.806000001053803e-06, 7.77700000043069e-06, 7.888000000733086e-06, 7.526999999285522e-06, 7.457999998905507e-06, 6.389000001050249e-06, 1.0443999999054654e-05, 1.1486000000004992e-05, 8.597000000776234e-06, 7.819000000353071e-06, 1.056899999873906e-05, 6.04200000076105e-06, 7.63899999967066e-06, 8.806000000305403e-06, 8.582999999617869e-06, 9.472000000343428e-06, 1.0930999998493007e-05, 9.598000000110574e-06, 9.43099999872743e-06, 8.722000000460639e-06, 9.32000000020139e-06, 1.0749999999504212e-05, 6.318999998811137e-06, 1.0570000000598156e-05, 9.013999999751832e-06, 9.97299999916379e-06, 8.18100000010702e-06, 6.8049999999431066e-06, 1.0556000001216148e-05, 7.055999999394658e-06]</msg>
<status status="PASS" starttime="20201029 09:36:19.345" endtime="20201029 09:36:19.347"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:19.341" endtime="20201029 09:36:19.348"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:18.967" endtime="20201029 09:36:19.348"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:18.967" endtime="20201029 09:36:19.348"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:19.356" endtime="20201029 09:36:19.372"></status>
</kw>
<msg timestamp="20201029 09:36:19.373" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:36:19.355" endtime="20201029 09:36:19.373"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:36:19.376" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:36:19.374" endtime="20201029 09:36:19.376"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:19.377" endtime="20201029 09:36:19.379"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:19.352" endtime="20201029 09:36:19.379"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:19.350" endtime="20201029 09:36:19.380"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:19.386" endtime="20201029 09:36:19.699"></status>
</kw>
<msg timestamp="20201029 09:36:19.702" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 9.449424875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 9.449430681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:36:19.385" endtime="20201029 09:36:19.703"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:36:19.712" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 9.449424875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 9.449430681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:36:19.704" endtime="20201029 09:36:19.713"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:19.714" endtime="20201029 09:36:19.715"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:19.382" endtime="20201029 09:36:19.716"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:19.381" endtime="20201029 09:36:19.716"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:36:19.721" level="INFO">${RESULT} = [{'diff': 5.806000000774247e-06}, {'diff': 8.056000000422614e-06}, {'diff': 5.55599999962908e-06}, {'diff': 1.0124999999305828e-05}, {'diff': 8.776999999682289e-06}, {'diff': 9.125000000054229e-06}, {...</msg>
<status status="PASS" starttime="20201029 09:36:19.717" endtime="20201029 09:36:19.721"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:36:19.725" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.806000000774247e-06, 8.056000000422614e-06, 5.55599999962908e-06, 1.0124999999305828e-05, 8.776999999682289e-06, 9.125000000054229e-06, 9.249999999738634e-06, 1.0028000000161796e-05, 1.133...</msg>
<status status="PASS" starttime="20201029 09:36:19.722" endtime="20201029 09:36:19.726"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:36:19.730" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:36:19.729" endtime="20201029 09:36:19.730"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:36:19.733" level="INFO">VALUE: [5.806000000774247e-06, 8.056000000422614e-06, 5.55599999962908e-06, 1.0124999999305828e-05, 8.776999999682289e-06, 9.125000000054229e-06, 9.249999999738634e-06, 1.0028000000161796e-05, 1.1332999999780213e-05, 7.806000001053803e-06, 7.77700000043069e-06, 7.888000000733086e-06, 7.526999999285522e-06, 7.457999998905507e-06, 6.389000001050249e-06, 1.0443999999054654e-05, 1.1486000000004992e-05, 8.597000000776234e-06, 7.819000000353071e-06, 1.056899999873906e-05, 6.04200000076105e-06, 7.63899999967066e-06, 8.806000000305403e-06, 8.582999999617869e-06, 9.472000000343428e-06, 1.0930999998493007e-05, 9.598000000110574e-06, 9.43099999872743e-06, 8.722000000460639e-06, 9.32000000020139e-06, 1.0749999999504212e-05, 6.318999998811137e-06, 1.0570000000598156e-05, 9.013999999751832e-06, 9.97299999916379e-06, 8.18100000010702e-06, 6.8049999999431066e-06, 1.0556000001216148e-05, 7.055999999394658e-06, 7.416999999065865e-06, 1.0264000000148599e-05, 7.29199999938146e-06, 8.416000000011081e-06, 9.180999999358619e-06, 8.124999999026272e-06, 1.1625000000847763e-05, 1.0736000000122203e-05, 6.416999999814266e-06, 7.582999998589912e-06, 1.0764000000662577e-05, 1.1111000000951776e-05, 7.23600000007707e-06, 8.902999999449435e-06, 6.263999999589487e-06, 9.11100000067222e-06, 9.402999999963413e-06, 8.486000000473837e-06, 8.709000001161371e-06, 1.0860999999806609e-05, 7.930999998961852e-06, 1.1333999999862954e-05, 8.360999999013075e-06, 1.1584000001008121e-05, 8.166999998948654e-06]</msg>
<status status="PASS" starttime="20201029 09:36:19.731" endtime="20201029 09:36:19.733"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:19.727" endtime="20201029 09:36:19.734"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:19.349" endtime="20201029 09:36:19.734"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:19.348" endtime="20201029 09:36:19.734"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:12.054" endtime="20201029 09:36:19.734"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 09:36:08.940" endtime="20201029 09:36:19.735" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:36:19.742" endtime="20201029 09:36:19.761"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:19.740" endtime="20201029 09:36:19.762"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:19.776" endtime="20201029 09:36:22.797"></status>
</kw>
<msg timestamp="20201029 09:36:22.798" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:36:19.774" endtime="20201029 09:36:22.799"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:36:22.804" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:36:22.801" endtime="20201029 09:36:22.805"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:36:22.810" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:36:22.806" endtime="20201029 09:36:22.811"></status>
</kw>
<status status="FAIL" starttime="20201029 09:36:19.771" endtime="20201029 09:36:22.812"></status>
</kw>
<status status="FAIL" starttime="20201029 09:36:19.769" endtime="20201029 09:36:22.814"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:19.768" endtime="20201029 09:36:22.814"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:36:22.822" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:36:22.820" endtime="20201029 09:36:22.823"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:22.816" endtime="20201029 09:36:22.823"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:19.767" endtime="20201029 09:36:22.823"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:19.766" endtime="20201029 09:36:22.824"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:22.825" endtime="20201029 09:36:22.829"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:19.764" endtime="20201029 09:36:22.830"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:19.762" endtime="20201029 09:36:22.831"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:19.739" endtime="20201029 09:36:22.831"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:22.851" endtime="20201029 09:36:22.865"></status>
</kw>
<msg timestamp="20201029 09:36:22.865" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:36:22.848" endtime="20201029 09:36:22.865"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:36:22.868" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:36:22.866" endtime="20201029 09:36:22.868"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:22.869" endtime="20201029 09:36:22.870"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:22.842" endtime="20201029 09:36:22.871"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:22.837" endtime="20201029 09:36:22.871"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:22.879" endtime="20201029 09:36:23.175"></status>
</kw>
<msg timestamp="20201029 09:36:23.178" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.100037875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.100038806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:36:22.877" endtime="20201029 09:36:23.179"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:36:23.187" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.100037875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.100038806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:36:23.179" endtime="20201029 09:36:23.187"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:23.188" endtime="20201029 09:36:23.189"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:22.874" endtime="20201029 09:36:23.190"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:22.872" endtime="20201029 09:36:23.190"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:36:23.194" level="INFO">${RESULT} = [{'diff': 9.310000002038521e-07}, {'diff': 9.439999999472093e-07}, {'diff': 9.999999996956888e-07}, {'diff': 9.439999999472093e-07}, {'diff': 9.450000000299497e-07}, {'diff': 9.450000000299497e-07}, {...</msg>
<status status="PASS" starttime="20201029 09:36:23.191" endtime="20201029 09:36:23.195"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:36:23.198" level="INFO">${OVERHEAD} = {'diff': [9.310000002038521e-07, 9.439999999472093e-07, 9.999999996956888e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.450000000299497e-07, 9.450000000299497e-07, 1.000000000139778e-06, 9.2999...</msg>
<status status="PASS" starttime="20201029 09:36:23.195" endtime="20201029 09:36:23.199"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:36:23.203" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:36:23.202" endtime="20201029 09:36:23.203"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:36:23.205" level="INFO">VALUE: [9.310000002038521e-07, 9.439999999472093e-07, 9.999999996956888e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.450000000299497e-07, 9.450000000299497e-07, 1.000000000139778e-06, 9.299999996770225e-07, 9.579999997733069e-07, 9.439999999472093e-07, 9.300000001211117e-07, 9.309999997597629e-07, 9.300000001211117e-07, 9.589999998560472e-07, 9.309999997597629e-07, 9.450000000299497e-07, 9.169999999336653e-07, 9.439999999472093e-07, 9.310000002038521e-07, 9.439999999472093e-07, 9.309999997597629e-07, 8.750000000112834e-07, 9.579999997733069e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.030000001075678e-07, 9.309999997597629e-07, 9.450000000299497e-07, 9.719999995994044e-07, 9.309999997597629e-07, 9.310000002038521e-07, 9.310000002038521e-07, 1.000000000139778e-06, 9.440000003912985e-07, 9.439999999472093e-07, 9.310000002038521e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.020000000248274e-07, 9.440000003912985e-07, 9.450000000299497e-07, 9.160000002950142e-07, 9.169999999336653e-07, 9.449999995858605e-07, 9.439999999472093e-07, 9.310000002038521e-07, 9.439999999472093e-07]</msg>
<status status="PASS" starttime="20201029 09:36:23.204" endtime="20201029 09:36:23.205"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:23.199" endtime="20201029 09:36:23.206"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:22.835" endtime="20201029 09:36:23.206"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:22.834" endtime="20201029 09:36:23.207"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:23.216" endtime="20201029 09:36:23.227"></status>
</kw>
<msg timestamp="20201029 09:36:23.227" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:36:23.213" endtime="20201029 09:36:23.227"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:36:23.230" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:36:23.228" endtime="20201029 09:36:23.230"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:23.231" endtime="20201029 09:36:23.232"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:23.211" endtime="20201029 09:36:23.233"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:23.209" endtime="20201029 09:36:23.233"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:23.241" endtime="20201029 09:36:23.559"></status>
</kw>
<msg timestamp="20201029 09:36:23.563" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.100231097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.100232028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:36:23.238" endtime="20201029 09:36:23.563"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:36:23.573" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.100231097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.100232028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:36:23.564" endtime="20201029 09:36:23.573"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:23.574" endtime="20201029 09:36:23.576"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:23.236" endtime="20201029 09:36:23.576"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:23.234" endtime="20201029 09:36:23.577"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:36:23.581" level="INFO">${RESULT} = [{'diff': 9.310000002038521e-07}, {'diff': 9.450000000299497e-07}, {'diff': 9.439999999472093e-07}, {'diff': 9.450000000299497e-07}, {'diff': 9.439999999472093e-07}, {'diff': 9.020000000248274e-07}, {...</msg>
<status status="PASS" starttime="20201029 09:36:23.578" endtime="20201029 09:36:23.581"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:36:23.586" level="INFO">${OVERHEAD} = {'diff': [9.310000002038521e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.020000000248274e-07, 9.440000003912985e-07, 9.450000000299497e-07, 9.1600...</msg>
<status status="PASS" starttime="20201029 09:36:23.582" endtime="20201029 09:36:23.587"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:36:23.591" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:36:23.589" endtime="20201029 09:36:23.591"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:36:23.593" level="INFO">VALUE: [9.310000002038521e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.020000000248274e-07, 9.440000003912985e-07, 9.450000000299497e-07, 9.160000002950142e-07, 9.169999999336653e-07, 9.449999995858605e-07, 9.439999999472093e-07, 9.310000002038521e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.300000001211117e-07, 9.300000001211117e-07, 9.170000003777545e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.300000001211117e-07, 9.309999997597629e-07, 9.449999995858605e-07, 9.449999995858605e-07, 9.450000000299497e-07, 9.450000000299497e-07, 9.300000001211117e-07, 9.300000001211117e-07, 9.169999999336653e-07, 9.169999999336653e-07, 9.439999999472093e-07, 9.300000001211117e-07, 9.450000000299497e-07, 9.300000001211117e-07, 9.439999999472093e-07, 9.310000002038521e-07, 9.309999997597629e-07, 9.310000002038521e-07, 9.299999996770225e-07, 8.88999999837381e-07, 9.300000001211117e-07, 9.450000000299497e-07, 9.300000001211117e-07, 9.58000000217396e-07, 9.029999996634785e-07, 8.890000002814702e-07, 9.300000001211117e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.15999999850925e-07, 9.58000000217396e-07, 9.589999998560472e-07, 1.0280000002360623e-06, 9.589999998560472e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.449999995858605e-07, 9.299999996770225e-07, 9.439999999472093e-07, 9.029999996634785e-07, 9.439999999472093e-07, 9.160000002950142e-07, 9.439999999472093e-07]</msg>
<status status="PASS" starttime="20201029 09:36:23.592" endtime="20201029 09:36:23.594"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:23.587" endtime="20201029 09:36:23.594"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:23.208" endtime="20201029 09:36:23.594"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:23.207" endtime="20201029 09:36:23.599"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:23.607" endtime="20201029 09:36:23.619"></status>
</kw>
<msg timestamp="20201029 09:36:23.619" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:36:23.606" endtime="20201029 09:36:23.620"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:36:23.622" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:36:23.620" endtime="20201029 09:36:23.622"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:23.623" endtime="20201029 09:36:23.625"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:23.603" endtime="20201029 09:36:23.625"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:23.602" endtime="20201029 09:36:23.626"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:23.632" endtime="20201029 09:36:23.956"></status>
</kw>
<msg timestamp="20201029 09:36:23.960" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.454924681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.454925597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:36:23.630" endtime="20201029 09:36:23.960"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:36:23.970" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.454924681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.454925597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:36:23.961" endtime="20201029 09:36:23.970"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:23.971" endtime="20201029 09:36:23.973"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:23.628" endtime="20201029 09:36:23.973"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:23.626" endtime="20201029 09:36:23.974"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:36:23.978" level="INFO">${RESULT} = [{'diff': 9.15999999850925e-07}, {'diff': 9.58000000217396e-07}, {'diff': 9.589999998560472e-07}, {'diff': 1.0280000002360623e-06}, {'diff': 9.589999998560472e-07}, {'diff': 9.439999999472093e-07}, {'...</msg>
<status status="PASS" starttime="20201029 09:36:23.974" endtime="20201029 09:36:23.978"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:36:23.985" level="INFO">${OVERHEAD} = {'diff': [9.15999999850925e-07, 9.58000000217396e-07, 9.589999998560472e-07, 1.0280000002360623e-06, 9.589999998560472e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.449999995858605e-07, 9.29999...</msg>
<status status="PASS" starttime="20201029 09:36:23.979" endtime="20201029 09:36:23.985"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:36:23.989" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:36:23.988" endtime="20201029 09:36:23.989"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:36:23.992" level="INFO">VALUE: [9.15999999850925e-07, 9.58000000217396e-07, 9.589999998560472e-07, 1.0280000002360623e-06, 9.589999998560472e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.449999995858605e-07, 9.299999996770225e-07, 9.439999999472093e-07, 9.029999996634785e-07, 9.439999999472093e-07, 9.160000002950142e-07, 9.439999999472093e-07, 9.299999996770225e-07, 9.450000000299497e-07, 9.440000003912985e-07, 9.310000002038521e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.579999997733069e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.310000002038521e-07, 9.58000000217396e-07, 9.309999997597629e-07, 9.300000001211117e-07, 9.450000000299497e-07, 9.450000000299497e-07, 9.300000001211117e-07, 9.590000003001364e-07, 9.309999997597629e-07, 9.439999999472093e-07, 9.309999997597629e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.310000002038521e-07, 9.450000000299497e-07, 9.590000003001364e-07, 9.020000000248274e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.58000000217396e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.440000003912985e-07, 9.450000000299497e-07, 9.450000000299497e-07, 9.450000000299497e-07, 9.300000001211117e-07, 8.890000002814702e-07, 9.300000001211117e-07, 9.029999996634785e-07, 9.999999996956888e-07, 9.450000000299497e-07, 9.169999999336653e-07, 9.169999999336653e-07, 9.310000002038521e-07, 9.020000000248274e-07, 9.169999999336653e-07]</msg>
<status status="PASS" starttime="20201029 09:36:23.990" endtime="20201029 09:36:23.992"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:23.986" endtime="20201029 09:36:23.993"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:23.600" endtime="20201029 09:36:23.993"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:23.600" endtime="20201029 09:36:23.994"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:24.001" endtime="20201029 09:36:24.012"></status>
</kw>
<msg timestamp="20201029 09:36:24.013" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:36:24.000" endtime="20201029 09:36:24.013"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:36:24.015" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:36:24.014" endtime="20201029 09:36:24.016"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:24.016" endtime="20201029 09:36:24.018"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:23.997" endtime="20201029 09:36:24.018"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:23.996" endtime="20201029 09:36:24.019"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:24.025" endtime="20201029 09:36:24.357"></status>
</kw>
<msg timestamp="20201029 09:36:24.366" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.838198347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.838199292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:36:24.024" endtime="20201029 09:36:24.366"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:36:24.375" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.838198347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.838199292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:36:24.367" endtime="20201029 09:36:24.376"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:24.377" endtime="20201029 09:36:24.378"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:24.021" endtime="20201029 09:36:24.379"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:24.019" endtime="20201029 09:36:24.379"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:36:24.383" level="INFO">${RESULT} = [{'diff': 9.450000000299497e-07}, {'diff': 9.450000000299497e-07}, {'diff': 9.450000000299497e-07}, {'diff': 9.300000001211117e-07}, {'diff': 8.890000002814702e-07}, {'diff': 9.300000001211117e-07}, {...</msg>
<status status="PASS" starttime="20201029 09:36:24.380" endtime="20201029 09:36:24.384"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:36:24.388" level="INFO">${OVERHEAD} = {'diff': [9.450000000299497e-07, 9.450000000299497e-07, 9.450000000299497e-07, 9.300000001211117e-07, 8.890000002814702e-07, 9.300000001211117e-07, 9.029999996634785e-07, 9.999999996956888e-07, 9.4500...</msg>
<status status="PASS" starttime="20201029 09:36:24.384" endtime="20201029 09:36:24.388"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:36:24.392" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:36:24.391" endtime="20201029 09:36:24.392"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:36:24.395" level="INFO">VALUE: [9.450000000299497e-07, 9.450000000299497e-07, 9.450000000299497e-07, 9.300000001211117e-07, 8.890000002814702e-07, 9.300000001211117e-07, 9.029999996634785e-07, 9.999999996956888e-07, 9.450000000299497e-07, 9.169999999336653e-07, 9.169999999336653e-07, 9.310000002038521e-07, 9.020000000248274e-07, 9.169999999336653e-07, 9.309999997597629e-07, 9.439999999472093e-07, 9.300000005652009e-07, 9.030000001075678e-07, 9.439999999472093e-07, 9.579999993292176e-07, 9.58000000217396e-07, 9.439999999472093e-07, 9.310000006479413e-07, 9.170000003777545e-07, 9.030000001075678e-07, 9.300000005652009e-07, 9.169999994895761e-07, 9.310000006479413e-07, 9.58000000217396e-07, 9.58999999411958e-07, 9.299999996770225e-07, 9.299999996770225e-07, 9.450000000299497e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.58000000217396e-07, 9.300000005652009e-07, 9.169999994895761e-07, 8.749999995671942e-07, 9.439999999472093e-07, 9.579999993292176e-07, 9.309999997597629e-07, 9.439999999472093e-07, 9.169999994895761e-07, 1.027999999791973e-06, 9.170000003777545e-07, 9.310000006479413e-07, 9.439999999472093e-07, 9.58000000217396e-07, 9.310000006479413e-07, 9.450000000299497e-07, 9.299999996770225e-07, 9.310000006479413e-07, 9.309999997597629e-07, 9.309999997597629e-07, 9.450000000299497e-07, 9.450000000299497e-07, 9.58000000217396e-07, 9.299999996770225e-07, 9.309999997597629e-07, 9.299999996770225e-07, 9.439999999472093e-07, 9.309999997597629e-07]</msg>
<status status="PASS" starttime="20201029 09:36:24.393" endtime="20201029 09:36:24.395"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:24.389" endtime="20201029 09:36:24.396"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:23.994" endtime="20201029 09:36:24.396"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:23.994" endtime="20201029 09:36:24.396"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:24.405" endtime="20201029 09:36:24.417"></status>
</kw>
<msg timestamp="20201029 09:36:24.418" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:36:24.403" endtime="20201029 09:36:24.418"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:36:24.420" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:36:24.419" endtime="20201029 09:36:24.420"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:24.421" endtime="20201029 09:36:24.423"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:24.400" endtime="20201029 09:36:24.423"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:24.398" endtime="20201029 09:36:24.424"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:24.430" endtime="20201029 09:36:24.748"></status>
</kw>
<msg timestamp="20201029 09:36:24.752" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.223138097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.223139028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:36:24.429" endtime="20201029 09:36:24.752"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:36:24.761" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.223138097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.223139028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:36:24.753" endtime="20201029 09:36:24.762"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:24.763" endtime="20201029 09:36:24.764"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:24.426" endtime="20201029 09:36:24.765"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:24.424" endtime="20201029 09:36:24.765"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:36:24.769" level="INFO">${RESULT} = [{'diff': 9.310000006479413e-07}, {'diff': 9.450000000299497e-07}, {'diff': 9.299999996770225e-07}, {'diff': 9.310000006479413e-07}, {'diff': 9.309999997597629e-07}, {'diff': 9.309999997597629e-07}, {...</msg>
<status status="PASS" starttime="20201029 09:36:24.766" endtime="20201029 09:36:24.770"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:36:24.775" level="INFO">${OVERHEAD} = {'diff': [9.310000006479413e-07, 9.450000000299497e-07, 9.299999996770225e-07, 9.310000006479413e-07, 9.309999997597629e-07, 9.309999997597629e-07, 9.450000000299497e-07, 9.450000000299497e-07, 9.5800...</msg>
<status status="PASS" starttime="20201029 09:36:24.770" endtime="20201029 09:36:24.775"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:36:24.779" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:36:24.778" endtime="20201029 09:36:24.779"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:36:24.781" level="INFO">VALUE: [9.310000006479413e-07, 9.450000000299497e-07, 9.299999996770225e-07, 9.310000006479413e-07, 9.309999997597629e-07, 9.309999997597629e-07, 9.450000000299497e-07, 9.450000000299497e-07, 9.58000000217396e-07, 9.299999996770225e-07, 9.309999997597629e-07, 9.299999996770225e-07, 9.439999999472093e-07, 9.309999997597629e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.58000000217396e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.309999997597629e-07, 9.439999999472093e-07, 9.309999997597629e-07, 9.579999993292176e-07, 9.299999996770225e-07, 9.859999998695912e-07, 9.58000000217396e-07, 9.309999997597629e-07, 9.450000000299497e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.309999997597629e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.170000003777545e-07, 9.579999993292176e-07, 9.170000003777545e-07, 9.309999997597629e-07, 9.450000000299497e-07, 9.309999997597629e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.169999994895761e-07, 9.309999997597629e-07, 9.030000001075678e-07, 9.440000008353877e-07, 9.439999999472093e-07, 9.299999996770225e-07, 9.299999996770225e-07, 9.030000001075678e-07, 9.720000004875828e-07, 9.58000000217396e-07, 9.450000000299497e-07, 9.310000006479413e-07, 9.309999997597629e-07, 9.299999996770225e-07, 9.450000000299497e-07, 9.450000000299497e-07, 9.440000008353877e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.450000000299497e-07]</msg>
<status status="PASS" starttime="20201029 09:36:24.780" endtime="20201029 09:36:24.782"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:24.776" endtime="20201029 09:36:24.783"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:24.397" endtime="20201029 09:36:24.783"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:24.397" endtime="20201029 09:36:24.783"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:24.791" endtime="20201029 09:36:24.803"></status>
</kw>
<msg timestamp="20201029 09:36:24.804" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:36:24.789" endtime="20201029 09:36:24.804"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:36:24.806" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:36:24.805" endtime="20201029 09:36:24.806"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:24.807" endtime="20201029 09:36:24.809"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:24.787" endtime="20201029 09:36:24.810"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:24.785" endtime="20201029 09:36:24.811"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:24.821" endtime="20201029 09:36:25.140"></status>
</kw>
<msg timestamp="20201029 09:36:25.144" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.616209069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.616209972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:36:24.819" endtime="20201029 09:36:25.144"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:36:25.154" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.616209069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.616209972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:36:25.145" endtime="20201029 09:36:25.154"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:25.155" endtime="20201029 09:36:25.157"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:24.815" endtime="20201029 09:36:25.157"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:24.812" endtime="20201029 09:36:25.157"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:36:25.162" level="INFO">${RESULT} = [{'diff': 9.030000001075678e-07}, {'diff': 9.720000004875828e-07}, {'diff': 9.58000000217396e-07}, {'diff': 9.450000000299497e-07}, {'diff': 9.310000006479413e-07}, {'diff': 9.309999997597629e-07}, {'...</msg>
<status status="PASS" starttime="20201029 09:36:25.158" endtime="20201029 09:36:25.162"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:36:25.167" level="INFO">${OVERHEAD} = {'diff': [9.030000001075678e-07, 9.720000004875828e-07, 9.58000000217396e-07, 9.450000000299497e-07, 9.310000006479413e-07, 9.309999997597629e-07, 9.299999996770225e-07, 9.450000000299497e-07, 9.45000...</msg>
<status status="PASS" starttime="20201029 09:36:25.163" endtime="20201029 09:36:25.168"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:36:25.172" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:36:25.170" endtime="20201029 09:36:25.172"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:36:25.174" level="INFO">VALUE: [9.030000001075678e-07, 9.720000004875828e-07, 9.58000000217396e-07, 9.450000000299497e-07, 9.310000006479413e-07, 9.309999997597629e-07, 9.299999996770225e-07, 9.450000000299497e-07, 9.450000000299497e-07, 9.440000008353877e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.309999997597629e-07, 9.450000000299497e-07, 9.169999994895761e-07, 9.169999994895761e-07, 9.309999997597629e-07, 9.450000000299497e-07, 9.58000000217396e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.310000006479413e-07, 9.439999999472093e-07, 9.58000000217396e-07, 9.299999996770225e-07, 9.299999996770225e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.170000003777545e-07, 9.300000005652009e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.299999996770225e-07, 9.450000000299497e-07, 9.450000000299497e-07, 9.299999996770225e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.439999999472093e-07, 1.0130000003272244e-06, 9.439999999472093e-07, 9.299999996770225e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.58999999411958e-07, 9.169999994895761e-07, 9.030000001075678e-07, 9.579999993292176e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.309999997597629e-07, 9.58000000217396e-07, 9.58000000217396e-07, 9.439999999472093e-07, 9.309999997597629e-07]</msg>
<status status="PASS" starttime="20201029 09:36:25.173" endtime="20201029 09:36:25.175"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:25.168" endtime="20201029 09:36:25.175"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:24.784" endtime="20201029 09:36:25.176"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:24.784" endtime="20201029 09:36:25.176"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:25.184" endtime="20201029 09:36:25.196"></status>
</kw>
<msg timestamp="20201029 09:36:25.197" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:36:25.182" endtime="20201029 09:36:25.197"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:36:25.199" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:36:25.198" endtime="20201029 09:36:25.200"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:25.200" endtime="20201029 09:36:25.202"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:25.179" endtime="20201029 09:36:25.202"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:25.178" endtime="20201029 09:36:25.203"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:25.210" endtime="20201029 09:36:25.521"></status>
</kw>
<msg timestamp="20201029 09:36:25.525" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.992892236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.992893181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:36:25.208" endtime="20201029 09:36:25.526"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:36:25.535" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.992892236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.992893181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:36:25.527" endtime="20201029 09:36:25.536"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:25.537" endtime="20201029 09:36:25.538"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:25.205" endtime="20201029 09:36:25.539"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:25.203" endtime="20201029 09:36:25.539"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:36:25.544" level="INFO">${RESULT} = [{'diff': 9.450000000299497e-07}, {'diff': 9.439999999472093e-07}, {'diff': 9.439999999472093e-07}, {'diff': 9.58999999411958e-07}, {'diff': 9.169999994895761e-07}, {'diff': 9.030000001075678e-07}, {'...</msg>
<status status="PASS" starttime="20201029 09:36:25.540" endtime="20201029 09:36:25.544"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:36:25.548" level="INFO">${OVERHEAD} = {'diff': [9.450000000299497e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.58999999411958e-07, 9.169999994895761e-07, 9.030000001075678e-07, 9.579999993292176e-07, 9.450000000299497e-07, 9.43999...</msg>
<status status="PASS" starttime="20201029 09:36:25.545" endtime="20201029 09:36:25.549"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:36:25.552" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:36:25.551" endtime="20201029 09:36:25.553"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:36:25.555" level="INFO">VALUE: [9.450000000299497e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.58999999411958e-07, 9.169999994895761e-07, 9.030000001075678e-07, 9.579999993292176e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.309999997597629e-07, 9.58000000217396e-07, 9.58000000217396e-07, 9.439999999472093e-07, 9.309999997597629e-07, 9.590000003001364e-07, 9.720000004875828e-07, 8.88999999837381e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.300000005652009e-07, 9.030000001075678e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.309999997597629e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.030000001075678e-07, 9.159999994068357e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.159999994068357e-07, 9.58000000217396e-07, 9.309999997597629e-07, 9.450000000299497e-07, 9.450000000299497e-07, 9.309999997597629e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.310000006479413e-07, 9.299999996770225e-07, 9.590000003001364e-07, 9.299999996770225e-07, 9.299999996770225e-07, 9.299999996770225e-07, 9.439999999472093e-07, 9.58000000217396e-07, 9.309999997597629e-07, 9.159999994068357e-07, 9.720000004875828e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.309999997597629e-07, 1.000000000139778e-06, 9.299999996770225e-07, 9.299999996770225e-07, 9.170000003777545e-07, 9.450000000299497e-07, 9.450000000299497e-07, 9.450000000299497e-07, 9.58000000217396e-07, 9.439999999472093e-07]</msg>
<status status="PASS" starttime="20201029 09:36:25.554" endtime="20201029 09:36:25.556"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:25.549" endtime="20201029 09:36:25.556"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:25.177" endtime="20201029 09:36:25.557"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:25.176" endtime="20201029 09:36:25.557"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:25.565" endtime="20201029 09:36:25.577"></status>
</kw>
<msg timestamp="20201029 09:36:25.577" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:36:25.564" endtime="20201029 09:36:25.578"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:36:25.580" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:36:25.578" endtime="20201029 09:36:25.580"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:25.581" endtime="20201029 09:36:25.583"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:25.561" endtime="20201029 09:36:25.583"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:25.559" endtime="20201029 09:36:25.584"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:25.590" endtime="20201029 09:36:25.902"></status>
</kw>
<msg timestamp="20201029 09:36:25.906" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.376249556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.376250472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:36:25.588" endtime="20201029 09:36:25.906"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:36:25.916" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.376249556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.376250472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:36:25.907" endtime="20201029 09:36:25.916"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:25.917" endtime="20201029 09:36:25.920"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:25.586" endtime="20201029 09:36:25.920"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:25.584" endtime="20201029 09:36:25.921"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:36:25.928" level="INFO">${RESULT} = [{'diff': 9.159999994068357e-07}, {'diff': 9.720000004875828e-07}, {'diff': 9.439999999472093e-07}, {'diff': 9.439999999472093e-07}, {'diff': 9.309999997597629e-07}, {'diff': 1.000000000139778e-06}, {...</msg>
<status status="PASS" starttime="20201029 09:36:25.923" endtime="20201029 09:36:25.928"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:36:25.936" level="INFO">${OVERHEAD} = {'diff': [9.159999994068357e-07, 9.720000004875828e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.309999997597629e-07, 1.000000000139778e-06, 9.299999996770225e-07, 9.299999996770225e-07, 9.1700...</msg>
<status status="PASS" starttime="20201029 09:36:25.929" endtime="20201029 09:36:25.937"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:36:25.943" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:36:25.941" endtime="20201029 09:36:25.943"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:36:25.947" level="INFO">VALUE: [9.159999994068357e-07, 9.720000004875828e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.309999997597629e-07, 1.000000000139778e-06, 9.299999996770225e-07, 9.299999996770225e-07, 9.170000003777545e-07, 9.450000000299497e-07, 9.450000000299497e-07, 9.450000000299497e-07, 9.58000000217396e-07, 9.439999999472093e-07, 9.449999991417712e-07, 9.439999999472093e-07, 9.030000001075678e-07, 9.030000001075678e-07, 9.309999997597629e-07, 9.439999999472093e-07, 9.299999996770225e-07, 9.859999998695912e-07, 9.300000005652009e-07, 9.450000000299497e-07, 9.450000000299497e-07, 9.58000000217396e-07, 8.749999995671942e-07, 9.450000000299497e-07, 9.309999997597629e-07, 9.299999996770225e-07, 9.170000003777545e-07, 9.310000006479413e-07, 9.450000000299497e-07, 9.169999994895761e-07, 9.309999997597629e-07, 9.309999997597629e-07, 9.58000000217396e-07, 9.299999996770225e-07, 9.450000000299497e-07, 9.450000000299497e-07, 9.859999998695912e-07, 8.88999999837381e-07, 9.309999997597629e-07, 9.450000000299497e-07, 9.450000000299497e-07, 9.160000002950142e-07, 9.58000000217396e-07, 9.450000000299497e-07, 9.58999999411958e-07, 9.450000000299497e-07, 9.299999996770225e-07, 9.439999999472093e-07, 9.299999996770225e-07, 9.309999997597629e-07, 9.169999994895761e-07, 9.450000000299497e-07, 9.160000002950142e-07, 9.030000001075678e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.58000000217396e-07, 9.299999996770225e-07, 9.579999993292176e-07]</msg>
<status status="PASS" starttime="20201029 09:36:25.945" endtime="20201029 09:36:25.948"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:25.938" endtime="20201029 09:36:25.949"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:25.558" endtime="20201029 09:36:25.950"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:25.557" endtime="20201029 09:36:25.950"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:25.957" endtime="20201029 09:36:25.970"></status>
</kw>
<msg timestamp="20201029 09:36:25.970" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:36:25.956" endtime="20201029 09:36:25.970"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:36:25.973" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:36:25.971" endtime="20201029 09:36:25.973"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:25.974" endtime="20201029 09:36:25.975"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:25.953" endtime="20201029 09:36:25.976"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:25.952" endtime="20201029 09:36:25.976"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:25.983" endtime="20201029 09:36:26.290"></status>
</kw>
<msg timestamp="20201029 09:36:26.294" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.746523917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.746524847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:36:25.981" endtime="20201029 09:36:26.294"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:36:26.303" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.746523917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.746524847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:36:26.295" endtime="20201029 09:36:26.304"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:26.305" endtime="20201029 09:36:26.306"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:25.979" endtime="20201029 09:36:26.307"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:25.977" endtime="20201029 09:36:26.307"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:36:26.312" level="INFO">${RESULT} = [{'diff': 9.299999996770225e-07}, {'diff': 9.439999999472093e-07}, {'diff': 9.299999996770225e-07}, {'diff': 9.309999997597629e-07}, {'diff': 9.169999994895761e-07}, {'diff': 9.450000000299497e-07}, {...</msg>
<status status="PASS" starttime="20201029 09:36:26.308" endtime="20201029 09:36:26.313"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:36:26.317" level="INFO">${OVERHEAD} = {'diff': [9.299999996770225e-07, 9.439999999472093e-07, 9.299999996770225e-07, 9.309999997597629e-07, 9.169999994895761e-07, 9.450000000299497e-07, 9.160000002950142e-07, 9.030000001075678e-07, 9.4399...</msg>
<status status="PASS" starttime="20201029 09:36:26.313" endtime="20201029 09:36:26.317"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:36:26.321" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:36:26.320" endtime="20201029 09:36:26.322"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:36:26.324" level="INFO">VALUE: [9.299999996770225e-07, 9.439999999472093e-07, 9.299999996770225e-07, 9.309999997597629e-07, 9.169999994895761e-07, 9.450000000299497e-07, 9.160000002950142e-07, 9.030000001075678e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.58000000217396e-07, 9.299999996770225e-07, 9.579999993292176e-07, 9.299999996770225e-07, 9.300000005652009e-07, 9.170000003777545e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.590000003001364e-07, 9.299999996770225e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.310000006479413e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.030000001075678e-07, 9.170000003777545e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.309999997597629e-07, 9.450000000299497e-07, 9.309999997597629e-07, 9.450000000299497e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.169999994895761e-07, 9.450000000299497e-07, 9.310000006479413e-07, 9.300000005652009e-07, 9.450000000299497e-07, 9.439999999472093e-07, 8.88999999837381e-07, 9.590000003001364e-07, 9.309999997597629e-07, 9.309999997597629e-07, 9.579999993292176e-07, 9.300000005652009e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.160000002950142e-07, 9.309999997597629e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.309999997597629e-07, 9.300000005652009e-07, 9.450000000299497e-07, 9.58000000217396e-07, 9.299999996770225e-07, 9.439999999472093e-07, 9.309999997597629e-07]</msg>
<status status="PASS" starttime="20201029 09:36:26.322" endtime="20201029 09:36:26.324"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:26.318" endtime="20201029 09:36:26.325"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:25.950" endtime="20201029 09:36:26.325"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:25.950" endtime="20201029 09:36:26.326"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:26.333" endtime="20201029 09:36:26.344"></status>
</kw>
<msg timestamp="20201029 09:36:26.345" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:36:26.332" endtime="20201029 09:36:26.345"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:36:26.347" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:36:26.346" endtime="20201029 09:36:26.347"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:26.348" endtime="20201029 09:36:26.350"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:26.329" endtime="20201029 09:36:26.350"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:26.328" endtime="20201029 09:36:26.351"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:26.358" endtime="20201029 09:36:26.679"></status>
</kw>
<msg timestamp="20201029 09:36:26.682" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.130711639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.130712583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:36:26.357" endtime="20201029 09:36:26.683"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:36:26.692" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.130711639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.130712583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:36:26.683" endtime="20201029 09:36:26.693"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:26.693" endtime="20201029 09:36:26.695"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:26.353" endtime="20201029 09:36:26.695"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:26.351" endtime="20201029 09:36:26.696"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:36:26.700" level="INFO">${RESULT} = [{'diff': 9.439999999472093e-07}, {'diff': 9.439999999472093e-07}, {'diff': 9.450000000299497e-07}, {'diff': 9.160000002950142e-07}, {'diff': 9.309999997597629e-07}, {'diff': 9.450000000299497e-07}, {...</msg>
<status status="PASS" starttime="20201029 09:36:26.697" endtime="20201029 09:36:26.700"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:36:26.705" level="INFO">${OVERHEAD} = {'diff': [9.439999999472093e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.160000002950142e-07, 9.309999997597629e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.309999997597629e-07, 9.3000...</msg>
<status status="PASS" starttime="20201029 09:36:26.701" endtime="20201029 09:36:26.705"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:36:26.709" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:36:26.708" endtime="20201029 09:36:26.710"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:36:26.712" level="INFO">VALUE: [9.439999999472093e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.160000002950142e-07, 9.309999997597629e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.309999997597629e-07, 9.300000005652009e-07, 9.450000000299497e-07, 9.58000000217396e-07, 9.299999996770225e-07, 9.439999999472093e-07, 9.309999997597629e-07, 9.450000000299497e-07, 9.309999997597629e-07, 9.439999999472093e-07, 9.58000000217396e-07, 9.299999996770225e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.170000003777545e-07, 9.309999997597629e-07, 9.439999999472093e-07, 9.309999997597629e-07, 9.439999999472093e-07, 9.299999996770225e-07, 9.300000005652009e-07, 9.58000000217396e-07, 9.160000002950142e-07, 9.299999996770225e-07, 9.439999999472093e-07, 9.159999994068357e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.309999997597629e-07, 9.450000000299497e-07, 9.300000005652009e-07, 9.440000008353877e-07, 9.439999999472093e-07, 9.030000001075678e-07, 9.309999997597629e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.590000003001364e-07, 9.310000006479413e-07, 9.299999996770225e-07, 9.439999999472093e-07, 9.440000008353877e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.58000000217396e-07, 9.299999996770225e-07, 8.879999997546406e-07, 9.170000003777545e-07, 9.310000006479413e-07, 9.300000005652009e-07]</msg>
<status status="PASS" starttime="20201029 09:36:26.710" endtime="20201029 09:36:26.713"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:26.706" endtime="20201029 09:36:26.713"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:26.326" endtime="20201029 09:36:26.714"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:26.326" endtime="20201029 09:36:26.714"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:26.722" endtime="20201029 09:36:26.733"></status>
</kw>
<msg timestamp="20201029 09:36:26.734" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:36:26.720" endtime="20201029 09:36:26.734"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:36:26.736" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:36:26.735" endtime="20201029 09:36:26.736"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:26.737" endtime="20201029 09:36:26.739"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:26.717" endtime="20201029 09:36:26.739"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:26.716" endtime="20201029 09:36:26.740"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:26.746" endtime="20201029 09:36:27.069"></status>
</kw>
<msg timestamp="20201029 09:36:27.073" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.497027694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.497028653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:36:26.745" endtime="20201029 09:36:27.073"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:36:27.083" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.497027694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.497028653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:36:27.074" endtime="20201029 09:36:27.083"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:27.084" endtime="20201029 09:36:27.085"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:26.742" endtime="20201029 09:36:27.086"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:26.740" endtime="20201029 09:36:27.086"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:36:27.091" level="INFO">${RESULT} = [{'diff': 9.590000003001364e-07}, {'diff': 9.310000006479413e-07}, {'diff': 9.299999996770225e-07}, {'diff': 9.439999999472093e-07}, {'diff': 9.440000008353877e-07}, {'diff': 9.439999999472093e-07}, {...</msg>
<status status="PASS" starttime="20201029 09:36:27.087" endtime="20201029 09:36:27.091"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:36:27.096" level="INFO">${OVERHEAD} = {'diff': [9.590000003001364e-07, 9.310000006479413e-07, 9.299999996770225e-07, 9.439999999472093e-07, 9.440000008353877e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.5800...</msg>
<status status="PASS" starttime="20201029 09:36:27.092" endtime="20201029 09:36:27.096"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:36:27.100" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:36:27.099" endtime="20201029 09:36:27.100"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:36:27.103" level="INFO">VALUE: [9.590000003001364e-07, 9.310000006479413e-07, 9.299999996770225e-07, 9.439999999472093e-07, 9.440000008353877e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.58000000217396e-07, 9.299999996770225e-07, 8.879999997546406e-07, 9.170000003777545e-07, 9.310000006479413e-07, 9.300000005652009e-07, 9.439999999472093e-07, 9.309999997597629e-07, 9.439999999472093e-07, 9.299999996770225e-07, 9.450000000299497e-07, 9.450000000299497e-07, 9.450000000299497e-07, 9.450000000299497e-07, 9.440000008353877e-07, 9.309999997597629e-07, 9.160000002950142e-07, 9.450000000299497e-07, 8.750000004553726e-07, 9.160000002950142e-07, 9.309999997597629e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.309999997597629e-07, 9.450000000299497e-07, 9.58000000217396e-07, 9.309999997597629e-07, 9.440000008353877e-07, 9.309999997597629e-07, 9.450000000299497e-07, 9.58000000217396e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.309999997597629e-07, 9.450000000299497e-07, 9.160000002950142e-07, 9.030000001075678e-07, 9.299999996770225e-07, 9.309999997597629e-07, 9.450000000299497e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.300000005652009e-07, 9.160000002950142e-07, 9.58000000217396e-07, 9.310000006479413e-07, 9.299999996770225e-07, 9.310000006479413e-07, 8.88000000642819e-07, 9.439999999472093e-07, 9.590000003001364e-07, 9.299999996770225e-07, 9.58999999411958e-07, 9.450000000299497e-07, 9.309999997597629e-07, 9.300000005652009e-07]</msg>
<status status="PASS" starttime="20201029 09:36:27.101" endtime="20201029 09:36:27.103"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:27.097" endtime="20201029 09:36:27.104"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:26.715" endtime="20201029 09:36:27.104"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:26.714" endtime="20201029 09:36:27.105"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:27.112" endtime="20201029 09:36:27.125"></status>
</kw>
<msg timestamp="20201029 09:36:27.126" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:36:27.111" endtime="20201029 09:36:27.126"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:36:27.128" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:36:27.127" endtime="20201029 09:36:27.128"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:27.129" endtime="20201029 09:36:27.131"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:27.108" endtime="20201029 09:36:27.131"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:27.107" endtime="20201029 09:36:27.132"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:27.138" endtime="20201029 09:36:27.456"></status>
</kw>
<msg timestamp="20201029 09:36:27.460" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.876438292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.876439222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:36:27.137" endtime="20201029 09:36:27.460"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:36:27.469" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.876438292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.876439222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:36:27.461" endtime="20201029 09:36:27.470"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:27.470" endtime="20201029 09:36:27.472"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:27.134" endtime="20201029 09:36:27.473"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:27.132" endtime="20201029 09:36:27.473"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:36:27.477" level="INFO">${RESULT} = [{'diff': 9.300000005652009e-07}, {'diff': 9.160000002950142e-07}, {'diff': 9.58000000217396e-07}, {'diff': 9.310000006479413e-07}, {'diff': 9.299999996770225e-07}, {'diff': 9.310000006479413e-07}, {'...</msg>
<status status="PASS" starttime="20201029 09:36:27.474" endtime="20201029 09:36:27.478"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:36:27.482" level="INFO">${OVERHEAD} = {'diff': [9.300000005652009e-07, 9.160000002950142e-07, 9.58000000217396e-07, 9.310000006479413e-07, 9.299999996770225e-07, 9.310000006479413e-07, 8.88000000642819e-07, 9.439999999472093e-07, 9.590000...</msg>
<status status="PASS" starttime="20201029 09:36:27.478" endtime="20201029 09:36:27.482"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:36:27.486" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:36:27.485" endtime="20201029 09:36:27.486"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:36:27.488" level="INFO">VALUE: [9.300000005652009e-07, 9.160000002950142e-07, 9.58000000217396e-07, 9.310000006479413e-07, 9.299999996770225e-07, 9.310000006479413e-07, 8.88000000642819e-07, 9.439999999472093e-07, 9.590000003001364e-07, 9.299999996770225e-07, 9.58999999411958e-07, 9.450000000299497e-07, 9.309999997597629e-07, 9.300000005652009e-07, 9.309999997597629e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.58000000217396e-07, 9.170000003777545e-07, 9.299999996770225e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.030000001075678e-07, 9.590000003001364e-07, 9.439999999472093e-07, 9.169999994895761e-07, 9.300000005652009e-07, 9.579999993292176e-07, 9.450000000299497e-07, 9.170000003777545e-07, 8.890000007255594e-07, 9.310000006479413e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.309999997597629e-07, 9.450000000299497e-07, 9.859999998695912e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.309999997597629e-07, 9.299999996770225e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.450000000299497e-07, 9.450000000299497e-07, 8.879999997546406e-07, 9.169999994895761e-07, 8.88999999837381e-07, 9.300000005652009e-07, 9.170000003777545e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.439999999472093e-07, 8.890000007255594e-07, 9.450000000299497e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.310000006479413e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.450000000299497e-07]</msg>
<status status="PASS" starttime="20201029 09:36:27.487" endtime="20201029 09:36:27.489"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:27.483" endtime="20201029 09:36:27.490"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:27.105" endtime="20201029 09:36:27.490"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:27.105" endtime="20201029 09:36:27.490"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:27.499" endtime="20201029 09:36:27.510"></status>
</kw>
<msg timestamp="20201029 09:36:27.511" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:36:27.496" endtime="20201029 09:36:27.511"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:36:27.513" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:36:27.512" endtime="20201029 09:36:27.513"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:27.514" endtime="20201029 09:36:27.516"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:27.494" endtime="20201029 09:36:27.516"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:27.492" endtime="20201029 09:36:27.517"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:27.523" endtime="20201029 09:36:27.840"></status>
</kw>
<msg timestamp="20201029 09:36:27.844" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.256077667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.256078597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:36:27.522" endtime="20201029 09:36:27.844"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:36:27.854" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.256077667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.256078597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:36:27.845" endtime="20201029 09:36:27.854"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:27.855" endtime="20201029 09:36:27.856"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:27.519" endtime="20201029 09:36:27.857"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:27.517" endtime="20201029 09:36:27.857"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:36:27.862" level="INFO">${RESULT} = [{'diff': 9.300000005652009e-07}, {'diff': 9.170000003777545e-07}, {'diff': 9.439999999472093e-07}, {'diff': 9.439999999472093e-07}, {'diff': 9.439999999472093e-07}, {'diff': 8.890000007255594e-07}, {...</msg>
<status status="PASS" starttime="20201029 09:36:27.858" endtime="20201029 09:36:27.862"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:36:27.867" level="INFO">${OVERHEAD} = {'diff': [9.300000005652009e-07, 9.170000003777545e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.439999999472093e-07, 8.890000007255594e-07, 9.450000000299497e-07, 9.450000000299497e-07, 9.4399...</msg>
<status status="PASS" starttime="20201029 09:36:27.862" endtime="20201029 09:36:27.867"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:36:27.871" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:36:27.870" endtime="20201029 09:36:27.871"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:36:27.873" level="INFO">VALUE: [9.300000005652009e-07, 9.170000003777545e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.439999999472093e-07, 8.890000007255594e-07, 9.450000000299497e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.310000006479413e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.450000000299497e-07, 9.450000000299497e-07, 9.300000005652009e-07, 9.310000006479413e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.450000000299497e-07, 9.309999997597629e-07, 9.450000000299497e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.58000000217396e-07, 9.170000003777545e-07, 9.450000000299497e-07, 9.310000006479413e-07, 9.300000005652009e-07, 9.439999999472093e-07, 9.170000003777545e-07, 9.160000002950142e-07, 9.309999997597629e-07, 9.439999999472093e-07, 9.309999997597629e-07, 9.160000002950142e-07, 9.439999999472093e-07, 9.299999996770225e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.439999999472093e-07, 8.890000007255594e-07, 9.170000003777545e-07, 9.720000004875828e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.169999994895761e-07, 9.58000000217396e-07, 9.169999994895761e-07, 9.450000000299497e-07, 9.450000000299497e-07, 8.610000001851859e-07, 9.309999997597629e-07, 9.450000000299497e-07, 9.160000002950142e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.309999997597629e-07, 9.299999996770225e-07, 8.890000007255594e-07, 9.309999997597629e-07]</msg>
<status status="PASS" starttime="20201029 09:36:27.872" endtime="20201029 09:36:27.874"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:27.868" endtime="20201029 09:36:27.875"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:27.491" endtime="20201029 09:36:27.875"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:27.491" endtime="20201029 09:36:27.875"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:27.883" endtime="20201029 09:36:27.896"></status>
</kw>
<msg timestamp="20201029 09:36:27.896" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:36:27.881" endtime="20201029 09:36:27.897"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:36:27.899" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:36:27.898" endtime="20201029 09:36:27.899"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:27.900" endtime="20201029 09:36:27.902"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:27.879" endtime="20201029 09:36:27.902"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:27.877" endtime="20201029 09:36:27.903"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:27.909" endtime="20201029 09:36:28.223"></status>
</kw>
<msg timestamp="20201029 09:36:28.227" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.633571875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.633572792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:36:27.907" endtime="20201029 09:36:28.227"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:36:28.237" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.633571875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.633572792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:36:28.228" endtime="20201029 09:36:28.237"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:28.238" endtime="20201029 09:36:28.240"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:27.905" endtime="20201029 09:36:28.240"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:27.903" endtime="20201029 09:36:28.241"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:36:28.245" level="INFO">${RESULT} = [{'diff': 9.169999994895761e-07}, {'diff': 9.450000000299497e-07}, {'diff': 9.450000000299497e-07}, {'diff': 8.610000001851859e-07}, {'diff': 9.309999997597629e-07}, {'diff': 9.450000000299497e-07}, {...</msg>
<status status="PASS" starttime="20201029 09:36:28.241" endtime="20201029 09:36:28.245"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:36:28.250" level="INFO">${OVERHEAD} = {'diff': [9.169999994895761e-07, 9.450000000299497e-07, 9.450000000299497e-07, 8.610000001851859e-07, 9.309999997597629e-07, 9.450000000299497e-07, 9.160000002950142e-07, 9.439999999472093e-07, 9.4399...</msg>
<status status="PASS" starttime="20201029 09:36:28.246" endtime="20201029 09:36:28.251"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:36:28.255" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:36:28.254" endtime="20201029 09:36:28.255"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:36:28.257" level="INFO">VALUE: [9.169999994895761e-07, 9.450000000299497e-07, 9.450000000299497e-07, 8.610000001851859e-07, 9.309999997597629e-07, 9.450000000299497e-07, 9.160000002950142e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.309999997597629e-07, 9.299999996770225e-07, 8.890000007255594e-07, 9.309999997597629e-07, 9.439999999472093e-07, 9.169999994895761e-07, 9.439999999472093e-07, 9.300000005652009e-07, 9.450000000299497e-07, 9.169999994895761e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.300000005652009e-07, 9.310000006479413e-07, 9.309999988715845e-07, 9.450000000299497e-07, 9.310000006479413e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.58999999411958e-07, 9.310000006479413e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.299999987888441e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.310000006479413e-07, 9.580000011055745e-07, 9.450000000299497e-07, 9.450000000299497e-07, 9.579999993292176e-07, 9.300000005652009e-07, 9.580000011055745e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.17000001265933e-07, 9.309999988715845e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.299999987888441e-07]</msg>
<status status="PASS" starttime="20201029 09:36:28.256" endtime="20201029 09:36:28.258"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:28.251" endtime="20201029 09:36:28.258"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:27.876" endtime="20201029 09:36:28.259"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:27.876" endtime="20201029 09:36:28.259"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:28.267" endtime="20201029 09:36:28.277"></status>
</kw>
<msg timestamp="20201029 09:36:28.278" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:36:28.265" endtime="20201029 09:36:28.278"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:36:28.280" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:36:28.279" endtime="20201029 09:36:28.281"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:28.281" endtime="20201029 09:36:28.283"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:28.263" endtime="20201029 09:36:28.284"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:28.261" endtime="20201029 09:36:28.284"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:28.290" endtime="20201029 09:36:28.605"></status>
</kw>
<msg timestamp="20201029 09:36:28.609" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.008741181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.008742111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:36:28.289" endtime="20201029 09:36:28.609"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:36:28.619" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.008741181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.008742111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:36:28.610" endtime="20201029 09:36:28.619"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:28.620" endtime="20201029 09:36:28.622"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:28.286" endtime="20201029 09:36:28.622"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:28.285" endtime="20201029 09:36:28.623"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:36:28.627" level="INFO">${RESULT} = [{'diff': 9.300000005652009e-07}, {'diff': 9.580000011055745e-07}, {'diff': 9.450000000299497e-07}, {'diff': 9.439999999472093e-07}, {'diff': 9.439999999472093e-07}, {'diff': 9.439999999472093e-07}, {...</msg>
<status status="PASS" starttime="20201029 09:36:28.623" endtime="20201029 09:36:28.627"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:36:28.631" level="INFO">${OVERHEAD} = {'diff': [9.300000005652009e-07, 9.580000011055745e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.17000001265933e-07, 9.309999988715845e-07, 9.43999...</msg>
<status status="PASS" starttime="20201029 09:36:28.628" endtime="20201029 09:36:28.632"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:36:28.636" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:36:28.635" endtime="20201029 09:36:28.636"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:36:28.638" level="INFO">VALUE: [9.300000005652009e-07, 9.580000011055745e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.17000001265933e-07, 9.309999988715845e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.299999987888441e-07, 9.169999994895761e-07, 9.310000006479413e-07, 9.309999988715845e-07, 9.17000001265933e-07, 9.309999988715845e-07, 9.169999994895761e-07, 9.580000011055745e-07, 9.590000011883149e-07, 9.439999999472093e-07, 9.159999994068357e-07, 9.450000000299497e-07, 8.890000007255594e-07, 9.310000006479413e-07, 9.439999999472093e-07, 8.890000007255594e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.309999988715845e-07, 9.450000000299497e-07, 9.159999994068357e-07, 9.300000005652009e-07, 9.439999999472093e-07, 9.579999993292176e-07, 9.300000005652009e-07, 9.310000006479413e-07, 9.450000000299497e-07, 9.310000006479413e-07, 9.579999993292176e-07, 1.0000000010279564e-06, 9.439999999472093e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.310000006479413e-07, 9.310000006479413e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.450000000299497e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.169999994895761e-07, 9.440000017235661e-07, 9.439999999472093e-07, 9.300000005652009e-07, 9.309999988715845e-07]</msg>
<status status="PASS" starttime="20201029 09:36:28.637" endtime="20201029 09:36:28.643"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:28.632" endtime="20201029 09:36:28.644"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:28.260" endtime="20201029 09:36:28.644"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:28.259" endtime="20201029 09:36:28.644"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:28.653" endtime="20201029 09:36:28.666"></status>
</kw>
<msg timestamp="20201029 09:36:28.666" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:36:28.651" endtime="20201029 09:36:28.666"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:36:28.669" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:36:28.667" endtime="20201029 09:36:28.669"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:28.670" endtime="20201029 09:36:28.671"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:28.648" endtime="20201029 09:36:28.672"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:28.646" endtime="20201029 09:36:28.672"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:28.679" endtime="20201029 09:36:28.999"></status>
</kw>
<msg timestamp="20201029 09:36:29.002" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.381407583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.381408514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:36:28.677" endtime="20201029 09:36:29.003"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:36:29.012" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.381407583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.381408514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:36:29.004" endtime="20201029 09:36:29.013"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:29.013" endtime="20201029 09:36:29.015"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:28.675" endtime="20201029 09:36:29.015"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:28.673" endtime="20201029 09:36:29.016"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:36:29.020" level="INFO">${RESULT} = [{'diff': 9.310000006479413e-07}, {'diff': 9.310000006479413e-07}, {'diff': 9.439999999472093e-07}, {'diff': 9.450000000299497e-07}, {'diff': 9.450000000299497e-07}, {'diff': 9.450000000299497e-07}, {...</msg>
<status status="PASS" starttime="20201029 09:36:29.017" endtime="20201029 09:36:29.020"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:36:29.025" level="INFO">${OVERHEAD} = {'diff': [9.310000006479413e-07, 9.310000006479413e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.450000000299497e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.4399...</msg>
<status status="PASS" starttime="20201029 09:36:29.021" endtime="20201029 09:36:29.026"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:36:29.029" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:36:29.028" endtime="20201029 09:36:29.030"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:36:29.032" level="INFO">VALUE: [9.310000006479413e-07, 9.310000006479413e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.450000000299497e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.169999994895761e-07, 9.440000017235661e-07, 9.439999999472093e-07, 9.300000005652009e-07, 9.309999988715845e-07, 9.450000000299497e-07, 9.300000005652009e-07, 9.450000000299497e-07, 9.159999994068357e-07, 9.439999999472093e-07, 9.309999988715845e-07, 9.450000000299497e-07, 9.310000006479413e-07, 8.890000007255594e-07, 9.300000005652009e-07, 9.300000005652009e-07, 9.439999999472093e-07, 9.310000006479413e-07, 9.169999994895761e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.310000006479413e-07, 9.299999987888441e-07, 9.450000000299497e-07, 9.450000000299497e-07, 9.450000000299497e-07, 9.309999988715845e-07, 9.310000006479413e-07, 9.439999999472093e-07, 9.310000006479413e-07, 9.310000006479413e-07, 9.579999993292176e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.309999988715845e-07, 9.450000000299497e-07, 9.310000006479413e-07, 9.450000000299497e-07, 9.859999998695912e-07, 9.310000006479413e-07, 9.169999994895761e-07, 9.309999988715845e-07, 9.310000006479413e-07, 9.169999994895761e-07, 9.450000000299497e-07, 9.450000000299497e-07, 8.890000007255594e-07, 9.439999999472093e-07, 9.309999988715845e-07, 9.450000000299497e-07, 9.300000005652009e-07, 9.450000000299497e-07, 9.450000000299497e-07, 9.450000000299497e-07, 9.450000000299497e-07]</msg>
<status status="PASS" starttime="20201029 09:36:29.030" endtime="20201029 09:36:29.033"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:29.026" endtime="20201029 09:36:29.033"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:28.645" endtime="20201029 09:36:29.034"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:28.645" endtime="20201029 09:36:29.034"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:29.042" endtime="20201029 09:36:29.054"></status>
</kw>
<msg timestamp="20201029 09:36:29.054" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:36:29.040" endtime="20201029 09:36:29.054"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:36:29.057" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:36:29.055" endtime="20201029 09:36:29.057"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:29.058" endtime="20201029 09:36:29.059"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:29.037" endtime="20201029 09:36:29.060"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:29.036" endtime="20201029 09:36:29.060"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:29.067" endtime="20201029 09:36:29.381"></status>
</kw>
<msg timestamp="20201029 09:36:29.385" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.757772958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.757773889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:36:29.065" endtime="20201029 09:36:29.385"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:36:29.395" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.757772958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.757773889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:36:29.386" endtime="20201029 09:36:29.395"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:29.396" endtime="20201029 09:36:29.398"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:29.063" endtime="20201029 09:36:29.398"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:29.061" endtime="20201029 09:36:29.399"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:36:29.403" level="INFO">${RESULT} = [{'diff': 9.309999988715845e-07}, {'diff': 9.310000006479413e-07}, {'diff': 9.169999994895761e-07}, {'diff': 9.450000000299497e-07}, {'diff': 9.450000000299497e-07}, {'diff': 8.890000007255594e-07}, {...</msg>
<status status="PASS" starttime="20201029 09:36:29.399" endtime="20201029 09:36:29.403"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:36:29.408" level="INFO">${OVERHEAD} = {'diff': [9.309999988715845e-07, 9.310000006479413e-07, 9.169999994895761e-07, 9.450000000299497e-07, 9.450000000299497e-07, 8.890000007255594e-07, 9.439999999472093e-07, 9.309999988715845e-07, 9.4500...</msg>
<status status="PASS" starttime="20201029 09:36:29.404" endtime="20201029 09:36:29.409"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:36:29.413" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:36:29.412" endtime="20201029 09:36:29.413"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:36:29.415" level="INFO">VALUE: [9.309999988715845e-07, 9.310000006479413e-07, 9.169999994895761e-07, 9.450000000299497e-07, 9.450000000299497e-07, 8.890000007255594e-07, 9.439999999472093e-07, 9.309999988715845e-07, 9.450000000299497e-07, 9.300000005652009e-07, 9.450000000299497e-07, 9.450000000299497e-07, 9.450000000299497e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.300000005652009e-07, 9.159999994068357e-07, 9.310000006479413e-07, 1.027999999791973e-06, 9.310000006479413e-07, 9.450000000299497e-07, 9.300000005652009e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.309999988715845e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.300000005652009e-07, 9.579999993292176e-07, 9.579999993292176e-07, 9.450000000299497e-07, 9.17000001265933e-07, 9.450000000299497e-07, 9.299999987888441e-07, 9.439999999472093e-07, 9.299999987888441e-07, 9.160000011831926e-07, 9.450000000299497e-07, 9.299999987888441e-07, 9.300000005652009e-07, 9.439999999472093e-07, 9.159999994068357e-07, 9.439999999472093e-07, 9.309999988715845e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.310000006479413e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.299999987888441e-07, 9.450000000299497e-07, 9.310000006479413e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.449999982535928e-07, 9.169999994895761e-07, 9.450000000299497e-07, 9.300000005652009e-07, 9.439999999472093e-07]</msg>
<status status="PASS" starttime="20201029 09:36:29.414" endtime="20201029 09:36:29.416"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:29.409" endtime="20201029 09:36:29.416"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:29.035" endtime="20201029 09:36:29.417"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:29.034" endtime="20201029 09:36:29.417"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:29.425" endtime="20201029 09:36:29.437"></status>
</kw>
<msg timestamp="20201029 09:36:29.437" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:36:29.423" endtime="20201029 09:36:29.437"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:36:29.439" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:36:29.438" endtime="20201029 09:36:29.440"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:29.441" endtime="20201029 09:36:29.442"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:29.420" endtime="20201029 09:36:29.443"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:29.419" endtime="20201029 09:36:29.443"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:29.450" endtime="20201029 09:36:29.768"></status>
</kw>
<msg timestamp="20201029 09:36:29.772" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 9.135643208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 9.135644153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:36:29.449" endtime="20201029 09:36:29.772"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:36:29.781" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 9.135643208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 9.135644153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:36:29.773" endtime="20201029 09:36:29.782"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:29.783" endtime="20201029 09:36:29.784"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:29.445" endtime="20201029 09:36:29.785"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:29.444" endtime="20201029 09:36:29.785"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:36:29.789" level="INFO">${RESULT} = [{'diff': 9.450000000299497e-07}, {'diff': 9.439999999472093e-07}, {'diff': 9.299999987888441e-07}, {'diff': 9.450000000299497e-07}, {'diff': 9.310000006479413e-07}, {'diff': 9.439999999472093e-07}, {...</msg>
<status status="PASS" starttime="20201029 09:36:29.786" endtime="20201029 09:36:29.790"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:36:29.794" level="INFO">${OVERHEAD} = {'diff': [9.450000000299497e-07, 9.439999999472093e-07, 9.299999987888441e-07, 9.450000000299497e-07, 9.310000006479413e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.4399...</msg>
<status status="PASS" starttime="20201029 09:36:29.790" endtime="20201029 09:36:29.794"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:36:29.798" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:36:29.797" endtime="20201029 09:36:29.798"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:36:29.801" level="INFO">VALUE: [9.450000000299497e-07, 9.439999999472093e-07, 9.299999987888441e-07, 9.450000000299497e-07, 9.310000006479413e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.449999982535928e-07, 9.169999994895761e-07, 9.450000000299497e-07, 9.300000005652009e-07, 9.439999999472093e-07, 9.310000006479413e-07, 9.450000000299497e-07, 9.299999987888441e-07, 9.450000000299497e-07, 9.299999987888441e-07, 9.299999987888441e-07, 9.720000004875828e-07, 9.450000000299497e-07, 9.450000000299497e-07, 9.309999988715845e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.300000005652009e-07, 9.450000000299497e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.579999993292176e-07, 8.749999995671942e-07, 9.160000011831926e-07, 9.299999987888441e-07, 9.579999993292176e-07, 9.310000006479413e-07, 9.300000005652009e-07, 9.450000000299497e-07, 9.030000001075678e-07, 9.580000011055745e-07, 9.309999988715845e-07, 9.299999987888441e-07, 9.450000000299497e-07, 9.300000005652009e-07, 9.17000001265933e-07, 9.450000000299497e-07, 9.159999994068357e-07, 9.440000017235661e-07, 9.439999999472093e-07, 9.169999994895761e-07, 1.0140000004099647e-06, 9.450000000299497e-07, 9.439999999472093e-07, 9.299999987888441e-07, 9.450000000299497e-07, 9.310000006479413e-07, 9.439999999472093e-07, 9.310000006479413e-07, 1.027999999791973e-06, 9.169999994895761e-07, 9.299999987888441e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.439999999472093e-07]</msg>
<status status="PASS" starttime="20201029 09:36:29.799" endtime="20201029 09:36:29.802"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:29.795" endtime="20201029 09:36:29.803"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:29.418" endtime="20201029 09:36:29.803"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:29.417" endtime="20201029 09:36:29.803"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:29.811" endtime="20201029 09:36:29.823"></status>
</kw>
<msg timestamp="20201029 09:36:29.824" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:36:29.809" endtime="20201029 09:36:29.824"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:36:29.826" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:36:29.825" endtime="20201029 09:36:29.827"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:29.827" endtime="20201029 09:36:29.829"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:29.807" endtime="20201029 09:36:29.829"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:29.805" endtime="20201029 09:36:29.830"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:29.836" endtime="20201029 09:36:30.155"></status>
</kw>
<msg timestamp="20201029 09:36:30.159" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 9.508658042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 9.508659056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:36:29.835" endtime="20201029 09:36:30.159"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:36:30.169" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 9.508658042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 9.508659056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:36:30.160" endtime="20201029 09:36:30.169"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:30.170" endtime="20201029 09:36:30.171"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:29.832" endtime="20201029 09:36:30.172"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:29.830" endtime="20201029 09:36:30.172"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:36:30.177" level="INFO">${RESULT} = [{'diff': 1.0140000004099647e-06}, {'diff': 9.450000000299497e-07}, {'diff': 9.439999999472093e-07}, {'diff': 9.299999987888441e-07}, {'diff': 9.450000000299497e-07}, {'diff': 9.310000006479413e-07}, ...</msg>
<status status="PASS" starttime="20201029 09:36:30.173" endtime="20201029 09:36:30.177"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:36:30.182" level="INFO">${OVERHEAD} = {'diff': [1.0140000004099647e-06, 9.450000000299497e-07, 9.439999999472093e-07, 9.299999987888441e-07, 9.450000000299497e-07, 9.310000006479413e-07, 9.439999999472093e-07, 9.310000006479413e-07, 1.027...</msg>
<status status="PASS" starttime="20201029 09:36:30.178" endtime="20201029 09:36:30.182"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:36:30.186" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:36:30.185" endtime="20201029 09:36:30.186"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:36:30.189" level="INFO">VALUE: [1.0140000004099647e-06, 9.450000000299497e-07, 9.439999999472093e-07, 9.299999987888441e-07, 9.450000000299497e-07, 9.310000006479413e-07, 9.439999999472093e-07, 9.310000006479413e-07, 1.027999999791973e-06, 9.169999994895761e-07, 9.299999987888441e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.310000006479413e-07, 9.030000001075678e-07, 9.439999999472093e-07, 9.169999994895761e-07, 9.310000006479413e-07, 9.309999988715845e-07, 9.439999999472093e-07, 8.889999989492026e-07, 9.299999987888441e-07, 9.300000005652009e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.300000005652009e-07, 9.450000000299497e-07, 9.450000000299497e-07, 9.300000005652009e-07, 9.58999999411958e-07, 9.169999994895761e-07, 9.310000006479413e-07, 9.439999999472093e-07, 9.159999994068357e-07, 9.450000000299497e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.159999994068357e-07, 8.890000007255594e-07, 8.47999999109561e-07, 9.300000005652009e-07, 9.299999987888441e-07, 9.300000005652009e-07, 9.310000006479413e-07, 9.439999999472093e-07, 9.859999998695912e-07, 9.169999994895761e-07, 9.169999994895761e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.159999994068357e-07, 9.310000006479413e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.309999988715845e-07, 9.439999999472093e-07, 9.159999994068357e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.450000000299497e-07]</msg>
<status status="PASS" starttime="20201029 09:36:30.187" endtime="20201029 09:36:30.189"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:30.183" endtime="20201029 09:36:30.190"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:29.804" endtime="20201029 09:36:30.190"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:29.804" endtime="20201029 09:36:30.190"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:30.198" endtime="20201029 09:36:30.210"></status>
</kw>
<msg timestamp="20201029 09:36:30.210" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:36:30.197" endtime="20201029 09:36:30.211"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:36:30.213" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:36:30.211" endtime="20201029 09:36:30.213"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:30.214" endtime="20201029 09:36:30.216"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:30.194" endtime="20201029 09:36:30.216"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:30.193" endtime="20201029 09:36:30.216"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:30.223" endtime="20201029 09:36:30.519"></status>
</kw>
<msg timestamp="20201029 09:36:30.523" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 9.885013194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 9.885014111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:36:30.221" endtime="20201029 09:36:30.523"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:36:30.533" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 9.885013194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 9.885014111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:36:30.524" endtime="20201029 09:36:30.534"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:30.534" endtime="20201029 09:36:30.536"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:30.219" endtime="20201029 09:36:30.537"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:30.217" endtime="20201029 09:36:30.537"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:36:30.541" level="INFO">${RESULT} = [{'diff': 9.169999994895761e-07}, {'diff': 9.169999994895761e-07}, {'diff': 9.439999999472093e-07}, {'diff': 9.439999999472093e-07}, {'diff': 9.159999994068357e-07}, {'diff': 9.310000006479413e-07}, {...</msg>
<status status="PASS" starttime="20201029 09:36:30.538" endtime="20201029 09:36:30.541"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:36:30.546" level="INFO">${OVERHEAD} = {'diff': [9.169999994895761e-07, 9.169999994895761e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.159999994068357e-07, 9.310000006479413e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.3099...</msg>
<status status="PASS" starttime="20201029 09:36:30.542" endtime="20201029 09:36:30.546"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:36:30.550" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:36:30.549" endtime="20201029 09:36:30.550"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:36:30.552" level="INFO">VALUE: [9.169999994895761e-07, 9.169999994895761e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.159999994068357e-07, 9.310000006479413e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.309999988715845e-07, 9.439999999472093e-07, 9.159999994068357e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.579999993292176e-07, 9.310000006479413e-07, 9.439999999472093e-07, 9.309999988715845e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.579999993292176e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.999999992515995e-07, 9.300000005652009e-07, 9.450000000299497e-07, 9.310000006479413e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.169999994895761e-07, 9.859999998695912e-07, 9.159999994068357e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.169999994895761e-07, 9.300000005652009e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.859999998695912e-07, 9.310000006479413e-07, 9.58999999411958e-07, 9.450000000299497e-07, 9.300000005652009e-07, 9.169999994895761e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.300000005652009e-07, 9.450000000299497e-07, 9.579999993292176e-07, 9.299999987888441e-07, 9.439999999472093e-07, 9.309999988715845e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.309999988715845e-07, 9.439999999472093e-07, 9.309999988715845e-07, 9.439999999472093e-07, 9.309999988715845e-07, 9.450000000299497e-07]</msg>
<status status="PASS" starttime="20201029 09:36:30.551" endtime="20201029 09:36:30.553"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:30.547" endtime="20201029 09:36:30.554"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:30.191" endtime="20201029 09:36:30.554"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:30.191" endtime="20201029 09:36:30.554"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:22.833" endtime="20201029 09:36:30.554"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 09:36:19.736" endtime="20201029 09:36:30.555" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:36:30.562" endtime="20201029 09:36:30.581"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:30.560" endtime="20201029 09:36:30.582"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:30.597" endtime="20201029 09:36:33.619"></status>
</kw>
<msg timestamp="20201029 09:36:33.620" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:36:30.596" endtime="20201029 09:36:33.621"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:36:33.626" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:36:33.623" endtime="20201029 09:36:33.626"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:36:33.632" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:36:33.628" endtime="20201029 09:36:33.632"></status>
</kw>
<status status="FAIL" starttime="20201029 09:36:30.593" endtime="20201029 09:36:33.634"></status>
</kw>
<status status="FAIL" starttime="20201029 09:36:30.591" endtime="20201029 09:36:33.635"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:30.589" endtime="20201029 09:36:33.636"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:36:33.643" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:36:33.642" endtime="20201029 09:36:33.644"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:33.637" endtime="20201029 09:36:33.644"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:30.589" endtime="20201029 09:36:33.645"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:30.588" endtime="20201029 09:36:33.645"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:33.647" endtime="20201029 09:36:33.649"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:30.584" endtime="20201029 09:36:33.651"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:30.582" endtime="20201029 09:36:33.652"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:30.559" endtime="20201029 09:36:33.652"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>02</arg>
<arg>set</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:33.666" endtime="20201029 09:36:33.686"></status>
</kw>
<msg timestamp="20201029 09:36:33.686" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:36:33.665" endtime="20201029 09:36:33.687"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:36:33.689" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:36:33.687" endtime="20201029 09:36:33.689"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:33.690" endtime="20201029 09:36:33.692"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:33.661" endtime="20201029 09:36:33.692"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:33.656" endtime="20201029 09:36:33.704"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:33.706" endtime="20201029 09:36:33.708"></status>
</kw>
<msg timestamp="20201029 09:36:33.708" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201029 09:36:33.705" endtime="20201029 09:36:33.708"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:36:33.712" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 09:36:33.711" endtime="20201029 09:36:33.713"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:36:33.715" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 09:36:33.713" endtime="20201029 09:36:33.716"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:33.709" endtime="20201029 09:36:33.716"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:36:33.720" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 09:36:33.719" endtime="20201029 09:36:33.721"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:36:33.722" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 09:36:33.721" endtime="20201029 09:36:33.723"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:33.717" endtime="20201029 09:36:33.723"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:33.729" endtime="20201029 09:36:34.021"></status>
</kw>
<msg timestamp="20201029 09:36:34.024" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.095526819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.095530875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:36:33.728" endtime="20201029 09:36:34.024"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:36:34.032" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.095526819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.095530875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:36:34.025" endtime="20201029 09:36:34.033"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:34.033" endtime="20201029 09:36:34.035"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:33.725" endtime="20201029 09:36:34.035"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:33.724" endtime="20201029 09:36:34.036"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:36:34.040" level="INFO">${RESULT} = [{'diff': 4.056000000307591e-06}, {'diff': 4.999999999810711e-06}, {'diff': 4.985999999984614e-06}, {'diff': 4.958000000332419e-06}, {'diff': 5.027000000268345e-06}, {'diff': 4.972000000158516e-06}, {...</msg>
<status status="PASS" starttime="20201029 09:36:34.037" endtime="20201029 09:36:34.040"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:36:34.044" level="INFO">${OVERHEAD} = {'diff': [4.056000000307591e-06, 4.999999999810711e-06, 4.985999999984614e-06, 4.958000000332419e-06, 5.027000000268345e-06, 4.972000000158516e-06, 4.985999999984614e-06, 4.971999999714427e-06, 4.9870...</msg>
<status status="PASS" starttime="20201029 09:36:34.041" endtime="20201029 09:36:34.044"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:36:34.049" level="INFO">NAME: overhead-02-set-first-timer</msg>
<status status="PASS" starttime="20201029 09:36:34.048" endtime="20201029 09:36:34.049"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:36:34.052" level="INFO">VALUE: [4.056000000307591e-06, 4.999999999810711e-06, 4.985999999984614e-06, 4.958000000332419e-06, 5.027000000268345e-06, 4.972000000158516e-06, 4.985999999984614e-06, 4.971999999714427e-06, 4.987000000067354e-06, 5.000000000254801e-06, 4.985999999984614e-06, 4.987000000067354e-06, 4.972000000158516e-06, 4.943999999618143e-06, 5.014000000080898e-06, 4.985999999984614e-06, 5.000000000254801e-06, 4.987000000067354e-06, 4.972000000158516e-06, 4.985999999984614e-06, 4.985999999984614e-06, 4.985999999984614e-06, 5.000000000254801e-06, 4.985999999984614e-06, 4.972000000158516e-06, 4.999999999810711e-06, 4.9729999997971674e-06, 5.000000000254801e-06, 5.05499999992054e-06, 5.000000000254801e-06, 4.985999999984614e-06, 4.9579999998883295e-06, 4.986999999623265e-06, 4.985999999984614e-06, 5.000000000254801e-06, 4.999999999810711e-06, 4.971999999714427e-06, 4.985999999984614e-06, 5.0420000001771825e-06, 4.9579999998883295e-06, 5.027000000268345e-06, 4.985999999984614e-06, 4.945000000144972e-06, 5.000000000254801e-06, 4.985999999984614e-06, 4.999999999810711e-06, 4.985999999984614e-06, 5.000000000254801e-06, 4.9579999998883295e-06, 4.971999999714427e-06]</msg>
<status status="PASS" starttime="20201029 09:36:34.050" endtime="20201029 09:36:34.052"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:34.045" endtime="20201029 09:36:34.053"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:33.653" endtime="20201029 09:36:34.053"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 09:36:30.556" endtime="20201029 09:36:34.054" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Set Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:36:34.060" endtime="20201029 09:36:34.080"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:34.059" endtime="20201029 09:36:34.081"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:34.093" endtime="20201029 09:36:37.114"></status>
</kw>
<msg timestamp="20201029 09:36:37.115" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:36:34.092" endtime="20201029 09:36:37.115"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:36:37.120" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:36:37.117" endtime="20201029 09:36:37.121"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:36:37.126" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:36:37.123" endtime="20201029 09:36:37.127"></status>
</kw>
<status status="FAIL" starttime="20201029 09:36:34.089" endtime="20201029 09:36:37.128"></status>
</kw>
<status status="FAIL" starttime="20201029 09:36:34.087" endtime="20201029 09:36:37.130"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:34.086" endtime="20201029 09:36:37.130"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:36:37.138" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:36:37.136" endtime="20201029 09:36:37.139"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:37.132" endtime="20201029 09:36:37.139"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:34.085" endtime="20201029 09:36:37.139"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:34.084" endtime="20201029 09:36:37.140"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:37.141" endtime="20201029 09:36:37.144"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:34.083" endtime="20201029 09:36:37.145"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:34.081" endtime="20201029 09:36:37.146"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:34.058" endtime="20201029 09:36:37.147"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>03</arg>
<arg>set</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:37.166" endtime="20201029 09:36:41.208"></status>
</kw>
<msg timestamp="20201029 09:36:41.209" level="INFO">${RESULT} = {'cmd': 'overhead_timer set middle', 'msg': ['overhead_timer set middle\r\n', '{"cmd":"timer overhead: set middle timer","data":[{"timer count":"100"},{"sample count":"50"}/data/riotbuild/riotproject/...</msg>
<status status="PASS" starttime="20201029 09:36:37.161" endtime="20201029 09:36:41.210"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:36:41.215" level="INFO">${RESULT} = {'cmd': 'overhead_timer set middle', 'msg': ['overhead_timer set middle\r\n', '{"cmd":"timer overhead: set middle timer","data":[{"timer count":"100"},{"sample count":"50"}/data/riotbuild/riotproject/...</msg>
<status status="PASS" starttime="20201029 09:36:41.212" endtime="20201029 09:36:41.216"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:36:41.221" level="FAIL">'Timeout' does not contain 'Success'</msg>
<status status="FAIL" starttime="20201029 09:36:41.217" endtime="20201029 09:36:41.222"></status>
</kw>
<status status="FAIL" starttime="20201029 09:36:37.156" endtime="20201029 09:36:41.223"></status>
</kw>
<status status="FAIL" starttime="20201029 09:36:37.151" endtime="20201029 09:36:41.225"></status>
</kw>
<status status="FAIL" starttime="20201029 09:36:37.148" endtime="20201029 09:36:41.226"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="FAIL" starttime="20201029 09:36:34.055" endtime="20201029 09:36:41.228" critical="yes">'Timeout' does not contain 'Success'</status>
</test>
<test id="s1-s2-t5" name="Measure Overhead Set Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:36:41.242" endtime="20201029 09:36:41.264"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:41.239" endtime="20201029 09:36:41.265"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:41.291" endtime="20201029 09:36:48.306"></status>
</kw>
<msg timestamp="20201029 09:36:48.307" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 09:36:41.288" endtime="20201029 09:36:48.307"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:36:48.312" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 09:36:48.309" endtime="20201029 09:36:48.313"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:48.314" endtime="20201029 09:36:48.317"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:41.283" endtime="20201029 09:36:48.318"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:41.278" endtime="20201029 09:36:48.319"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:41.275" endtime="20201029 09:36:48.320"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:48.322" endtime="20201029 09:36:48.325"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:41.274" endtime="20201029 09:36:48.325"></status>
</kw>
<kw name="${i} = 1" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:48.351" endtime="20201029 09:36:52.365"></status>
</kw>
<msg timestamp="20201029 09:36:52.366" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 09:36:48.345" endtime="20201029 09:36:52.366"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:36:52.371" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 09:36:52.368" endtime="20201029 09:36:52.372"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:52.373" endtime="20201029 09:36:52.376"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:48.335" endtime="20201029 09:36:52.377"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:48.330" endtime="20201029 09:36:52.378"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:48.328" endtime="20201029 09:36:52.379"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:52.381" endtime="20201029 09:36:52.384"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:48.326" endtime="20201029 09:36:52.384"></status>
</kw>
<kw name="${i} = 2" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:52.403" endtime="20201029 09:36:56.412"></status>
</kw>
<msg timestamp="20201029 09:36:56.413" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 09:36:52.399" endtime="20201029 09:36:56.414"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:36:56.418" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 09:36:56.416" endtime="20201029 09:36:56.419"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:56.420" endtime="20201029 09:36:56.424"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:52.394" endtime="20201029 09:36:56.425"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:52.389" endtime="20201029 09:36:56.426"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:52.387" endtime="20201029 09:36:56.427"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:56.428" endtime="20201029 09:36:56.432"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:52.385" endtime="20201029 09:36:56.432"></status>
</kw>
<kw name="${i} = 3" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:36:56.450" endtime="20201029 09:37:00.460"></status>
</kw>
<msg timestamp="20201029 09:37:00.461" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 09:36:56.447" endtime="20201029 09:37:00.461"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:37:00.466" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 09:37:00.463" endtime="20201029 09:37:00.467"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:37:00.468" endtime="20201029 09:37:00.471"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:56.442" endtime="20201029 09:37:00.473"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:56.437" endtime="20201029 09:37:00.473"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:56.434" endtime="20201029 09:37:00.474"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 09:37:00.476" endtime="20201029 09:37:00.479"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:56.433" endtime="20201029 09:37:00.479"></status>
</kw>
<kw name="${i} = 4" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:37:00.498" endtime="20201029 09:37:04.508"></status>
</kw>
<msg timestamp="20201029 09:37:04.509" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 09:37:00.495" endtime="20201029 09:37:04.510"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:37:04.514" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 09:37:04.511" endtime="20201029 09:37:04.515"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:37:04.516" endtime="20201029 09:37:04.520"></status>
</kw>
<status status="PASS" starttime="20201029 09:37:00.489" endtime="20201029 09:37:04.521"></status>
</kw>
<status status="PASS" starttime="20201029 09:37:00.484" endtime="20201029 09:37:04.522"></status>
</kw>
<status status="PASS" starttime="20201029 09:37:00.482" endtime="20201029 09:37:04.522"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 09:37:04.524" endtime="20201029 09:37:04.527"></status>
</kw>
<status status="PASS" starttime="20201029 09:37:00.480" endtime="20201029 09:37:04.527"></status>
</kw>
<kw name="${i} = 5" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:37:04.549" endtime="20201029 09:37:08.558"></status>
</kw>
<msg timestamp="20201029 09:37:08.559" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 09:37:04.546" endtime="20201029 09:37:08.560"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:37:08.564" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 09:37:08.562" endtime="20201029 09:37:08.565"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:37:08.567" endtime="20201029 09:37:08.570"></status>
</kw>
<status status="PASS" starttime="20201029 09:37:04.538" endtime="20201029 09:37:08.571"></status>
</kw>
<status status="PASS" starttime="20201029 09:37:04.532" endtime="20201029 09:37:08.572"></status>
</kw>
<status status="PASS" starttime="20201029 09:37:04.530" endtime="20201029 09:37:08.573"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 09:37:08.574" endtime="20201029 09:37:08.577"></status>
</kw>
<status status="PASS" starttime="20201029 09:37:04.528" endtime="20201029 09:37:08.578"></status>
</kw>
<kw name="${i} = 6" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:37:08.596" endtime="20201029 09:37:12.606"></status>
</kw>
<msg timestamp="20201029 09:37:12.607" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 09:37:08.593" endtime="20201029 09:37:12.607"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:37:12.612" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 09:37:12.609" endtime="20201029 09:37:12.612"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:37:12.614" endtime="20201029 09:37:12.617"></status>
</kw>
<status status="PASS" starttime="20201029 09:37:08.588" endtime="20201029 09:37:12.618"></status>
</kw>
<status status="PASS" starttime="20201029 09:37:08.583" endtime="20201029 09:37:12.619"></status>
</kw>
<status status="PASS" starttime="20201029 09:37:08.580" endtime="20201029 09:37:12.620"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 09:37:12.622" endtime="20201029 09:37:12.625"></status>
</kw>
<status status="PASS" starttime="20201029 09:37:08.579" endtime="20201029 09:37:12.625"></status>
</kw>
<kw name="${i} = 7" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:37:12.643" endtime="20201029 09:37:16.653"></status>
</kw>
<msg timestamp="20201029 09:37:16.654" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 09:37:12.640" endtime="20201029 09:37:16.654"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:37:16.659" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 09:37:16.656" endtime="20201029 09:37:16.659"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:37:16.661" endtime="20201029 09:37:16.664"></status>
</kw>
<status status="PASS" starttime="20201029 09:37:12.635" endtime="20201029 09:37:16.665"></status>
</kw>
<status status="PASS" starttime="20201029 09:37:12.630" endtime="20201029 09:37:16.666"></status>
</kw>
<status status="PASS" starttime="20201029 09:37:12.628" endtime="20201029 09:37:16.667"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 09:37:16.669" endtime="20201029 09:37:16.673"></status>
</kw>
<status status="PASS" starttime="20201029 09:37:12.626" endtime="20201029 09:37:16.673"></status>
</kw>
<kw name="${i} = 8" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:37:16.691" endtime="20201029 09:37:20.701"></status>
</kw>
<msg timestamp="20201029 09:37:20.702" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 09:37:16.688" endtime="20201029 09:37:20.702"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:37:20.707" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 09:37:20.704" endtime="20201029 09:37:20.708"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:37:20.709" endtime="20201029 09:37:20.714"></status>
</kw>
<status status="PASS" starttime="20201029 09:37:16.683" endtime="20201029 09:37:20.716"></status>
</kw>
<status status="PASS" starttime="20201029 09:37:16.678" endtime="20201029 09:37:20.717"></status>
</kw>
<status status="PASS" starttime="20201029 09:37:16.675" endtime="20201029 09:37:20.717"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 09:37:20.719" endtime="20201029 09:37:20.722"></status>
</kw>
<status status="PASS" starttime="20201029 09:37:16.674" endtime="20201029 09:37:20.723"></status>
</kw>
<kw name="${i} = 9" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:37:20.741" endtime="20201029 09:37:24.751"></status>
</kw>
<msg timestamp="20201029 09:37:24.752" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 09:37:20.738" endtime="20201029 09:37:24.752"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:37:24.756" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 09:37:24.754" endtime="20201029 09:37:24.757"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:37:24.759" endtime="20201029 09:37:24.762"></status>
</kw>
<status status="PASS" starttime="20201029 09:37:20.733" endtime="20201029 09:37:24.763"></status>
</kw>
<status status="PASS" starttime="20201029 09:37:20.727" endtime="20201029 09:37:24.764"></status>
</kw>
<status status="PASS" starttime="20201029 09:37:20.725" endtime="20201029 09:37:24.765"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 09:37:24.766" endtime="20201029 09:37:24.769"></status>
</kw>
<status status="PASS" starttime="20201029 09:37:20.723" endtime="20201029 09:37:24.770"></status>
</kw>
<kw name="${i} = 10" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:37:24.788" endtime="20201029 09:37:28.798"></status>
</kw>
<msg timestamp="20201029 09:37:28.799" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 09:37:24.785" endtime="20201029 09:37:28.799"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:37:28.804" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 09:37:28.801" endtime="20201029 09:37:28.804"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:37:28.806" endtime="20201029 09:37:28.810"></status>
</kw>
<status status="PASS" starttime="20201029 09:37:24.780" endtime="20201029 09:37:28.811"></status>
</kw>
<status status="PASS" starttime="20201029 09:37:24.775" endtime="20201029 09:37:28.812"></status>
</kw>
<status status="PASS" starttime="20201029 09:37:24.772" endtime="20201029 09:37:28.813"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 09:37:28.814" endtime="20201029 09:37:28.818"></status>
</kw>
<status status="PASS" starttime="20201029 09:37:24.771" endtime="20201029 09:37:28.818"></status>
</kw>
<kw name="${i} = 11" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:37:28.836" endtime="20201029 09:37:32.846"></status>
</kw>
<msg timestamp="20201029 09:37:32.847" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 09:37:28.833" endtime="20201029 09:37:32.847"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:37:32.852" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 09:37:32.849" endtime="20201029 09:37:32.852"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:37:32.854" endtime="20201029 09:37:32.857"></status>
</kw>
<status status="PASS" starttime="20201029 09:37:28.828" endtime="20201029 09:37:32.858"></status>
</kw>
<status status="PASS" starttime="20201029 09:37:28.823" endtime="20201029 09:37:32.859"></status>
</kw>
<status status="PASS" starttime="20201029 09:37:28.820" endtime="20201029 09:37:32.860"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 09:37:32.862" endtime="20201029 09:37:32.865"></status>
</kw>
<status status="PASS" starttime="20201029 09:37:28.819" endtime="20201029 09:37:32.865"></status>
</kw>
<kw name="${i} = 12" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:37:32.886" endtime="20201029 09:37:36.895"></status>
</kw>
<msg timestamp="20201029 09:37:36.896" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 09:37:32.882" endtime="20201029 09:37:36.896"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:37:36.901" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 09:37:36.898" endtime="20201029 09:37:36.902"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:37:36.903" endtime="20201029 09:37:36.906"></status>
</kw>
<status status="PASS" starttime="20201029 09:37:32.875" endtime="20201029 09:37:36.907"></status>
</kw>
<status status="PASS" starttime="20201029 09:37:32.870" endtime="20201029 09:37:36.908"></status>
</kw>
<status status="PASS" starttime="20201029 09:37:32.867" endtime="20201029 09:37:36.909"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 09:37:36.911" endtime="20201029 09:37:36.914"></status>
</kw>
<status status="PASS" starttime="20201029 09:37:32.866" endtime="20201029 09:37:36.914"></status>
</kw>
<kw name="${i} = 13" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:37:36.933" endtime="20201029 09:37:40.942"></status>
</kw>
<msg timestamp="20201029 09:37:40.943" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 09:37:36.929" endtime="20201029 09:37:40.944"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:37:40.949" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 09:37:40.946" endtime="20201029 09:37:40.949"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:37:40.951" endtime="20201029 09:37:40.954"></status>
</kw>
<status status="PASS" starttime="20201029 09:37:36.924" endtime="20201029 09:37:40.955"></status>
</kw>
<status status="PASS" starttime="20201029 09:37:36.919" endtime="20201029 09:37:40.956"></status>
</kw>
<status status="PASS" starttime="20201029 09:37:36.917" endtime="20201029 09:37:40.957"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 09:37:40.959" endtime="20201029 09:37:40.962"></status>
</kw>
<status status="PASS" starttime="20201029 09:37:36.915" endtime="20201029 09:37:40.962"></status>
</kw>
<kw name="${i} = 14" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:37:40.981" endtime="20201029 09:37:44.990"></status>
</kw>
<msg timestamp="20201029 09:37:44.991" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 09:37:40.977" endtime="20201029 09:37:44.992"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:37:44.996" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 09:37:44.993" endtime="20201029 09:37:44.997"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:37:44.998" endtime="20201029 09:37:45.002"></status>
</kw>
<status status="PASS" starttime="20201029 09:37:40.972" endtime="20201029 09:37:45.003"></status>
</kw>
<status status="PASS" starttime="20201029 09:37:40.967" endtime="20201029 09:37:45.004"></status>
</kw>
<status status="PASS" starttime="20201029 09:37:40.965" endtime="20201029 09:37:45.004"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 09:37:45.006" endtime="20201029 09:37:45.009"></status>
</kw>
<status status="PASS" starttime="20201029 09:37:40.963" endtime="20201029 09:37:45.009"></status>
</kw>
<kw name="${i} = 15" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:37:45.028" endtime="20201029 09:37:49.037"></status>
</kw>
<msg timestamp="20201029 09:37:49.038" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 09:37:45.025" endtime="20201029 09:37:49.039"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:37:49.043" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 09:37:49.040" endtime="20201029 09:37:49.044"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:37:49.045" endtime="20201029 09:37:49.049"></status>
</kw>
<status status="PASS" starttime="20201029 09:37:45.019" endtime="20201029 09:37:49.050"></status>
</kw>
<status status="PASS" starttime="20201029 09:37:45.014" endtime="20201029 09:37:49.051"></status>
</kw>
<status status="PASS" starttime="20201029 09:37:45.012" endtime="20201029 09:37:49.051"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 09:37:49.053" endtime="20201029 09:37:49.056"></status>
</kw>
<status status="PASS" starttime="20201029 09:37:45.010" endtime="20201029 09:37:49.057"></status>
</kw>
<status status="PASS" starttime="20201029 09:36:41.272" endtime="20201029 09:37:49.057"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<msg timestamp="20201029 09:37:49.062" level="FAIL">'Timeout' does not contain 'Success'</msg>
<status status="FAIL" starttime="20201029 09:37:49.059" endtime="20201029 09:37:49.063"></status>
</kw>
<status status="FAIL" starttime="20201029 09:36:41.270" endtime="20201029 09:37:49.064"></status>
</kw>
<status status="FAIL" starttime="20201029 09:36:41.266" endtime="20201029 09:37:49.065"></status>
</kw>
<status status="FAIL" starttime="20201029 09:36:41.237" endtime="20201029 09:37:49.066"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="FAIL" starttime="20201029 09:36:41.231" endtime="20201029 09:37:49.067" critical="yes">Setup failed:
'Timeout' does not contain 'Success'</status>
</test>
<test id="s1-s2-t6" name="Measure Overhead Remove First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:37:49.085" endtime="20201029 09:37:49.106"></status>
</kw>
<status status="PASS" starttime="20201029 09:37:49.081" endtime="20201029 09:37:49.107"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:37:49.134" endtime="20201029 09:37:56.148"></status>
</kw>
<msg timestamp="20201029 09:37:56.149" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 09:37:49.130" endtime="20201029 09:37:56.150"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:37:56.154" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 09:37:56.151" endtime="20201029 09:37:56.155"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:37:56.156" endtime="20201029 09:37:56.160"></status>
</kw>
<status status="PASS" starttime="20201029 09:37:49.125" endtime="20201029 09:37:56.161"></status>
</kw>
<status status="PASS" starttime="20201029 09:37:49.120" endtime="20201029 09:37:56.162"></status>
</kw>
<status status="PASS" starttime="20201029 09:37:49.118" endtime="20201029 09:37:56.162"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 09:37:56.164" endtime="20201029 09:37:56.167"></status>
</kw>
<status status="PASS" starttime="20201029 09:37:49.116" endtime="20201029 09:37:56.167"></status>
</kw>
<kw name="${i} = 1" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:37:56.186" endtime="20201029 09:38:00.195"></status>
</kw>
<msg timestamp="20201029 09:38:00.196" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 09:37:56.183" endtime="20201029 09:38:00.197"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:38:00.201" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 09:38:00.198" endtime="20201029 09:38:00.202"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:38:00.203" endtime="20201029 09:38:00.207"></status>
</kw>
<status status="PASS" starttime="20201029 09:37:56.177" endtime="20201029 09:38:00.208"></status>
</kw>
<status status="PASS" starttime="20201029 09:37:56.172" endtime="20201029 09:38:00.209"></status>
</kw>
<status status="PASS" starttime="20201029 09:37:56.170" endtime="20201029 09:38:00.209"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 09:38:00.211" endtime="20201029 09:38:00.214"></status>
</kw>
<status status="PASS" starttime="20201029 09:37:56.168" endtime="20201029 09:38:00.215"></status>
</kw>
<kw name="${i} = 2" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:38:00.235" endtime="20201029 09:38:04.245"></status>
</kw>
<msg timestamp="20201029 09:38:04.246" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 09:38:00.232" endtime="20201029 09:38:04.246"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:38:04.251" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 09:38:04.248" endtime="20201029 09:38:04.252"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:38:04.253" endtime="20201029 09:38:04.256"></status>
</kw>
<status status="PASS" starttime="20201029 09:38:00.226" endtime="20201029 09:38:04.258"></status>
</kw>
<status status="PASS" starttime="20201029 09:38:00.219" endtime="20201029 09:38:04.258"></status>
</kw>
<status status="PASS" starttime="20201029 09:38:00.217" endtime="20201029 09:38:04.259"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 09:38:04.261" endtime="20201029 09:38:04.265"></status>
</kw>
<status status="PASS" starttime="20201029 09:38:00.215" endtime="20201029 09:38:04.266"></status>
</kw>
<kw name="${i} = 3" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:38:04.286" endtime="20201029 09:38:08.295"></status>
</kw>
<msg timestamp="20201029 09:38:08.296" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 09:38:04.282" endtime="20201029 09:38:08.297"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:38:08.301" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 09:38:08.298" endtime="20201029 09:38:08.302"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:38:08.303" endtime="20201029 09:38:08.306"></status>
</kw>
<status status="PASS" starttime="20201029 09:38:04.277" endtime="20201029 09:38:08.308"></status>
</kw>
<status status="PASS" starttime="20201029 09:38:04.272" endtime="20201029 09:38:08.309"></status>
</kw>
<status status="PASS" starttime="20201029 09:38:04.269" endtime="20201029 09:38:08.309"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 09:38:08.311" endtime="20201029 09:38:08.314"></status>
</kw>
<status status="PASS" starttime="20201029 09:38:04.266" endtime="20201029 09:38:08.314"></status>
</kw>
<kw name="${i} = 4" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:38:08.333" endtime="20201029 09:38:12.342"></status>
</kw>
<msg timestamp="20201029 09:38:12.343" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 09:38:08.330" endtime="20201029 09:38:12.344"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:38:12.348" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 09:38:12.345" endtime="20201029 09:38:12.349"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:38:12.350" endtime="20201029 09:38:12.353"></status>
</kw>
<status status="PASS" starttime="20201029 09:38:08.324" endtime="20201029 09:38:12.355"></status>
</kw>
<status status="PASS" starttime="20201029 09:38:08.319" endtime="20201029 09:38:12.356"></status>
</kw>
<status status="PASS" starttime="20201029 09:38:08.317" endtime="20201029 09:38:12.356"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 09:38:12.358" endtime="20201029 09:38:12.361"></status>
</kw>
<status status="PASS" starttime="20201029 09:38:08.315" endtime="20201029 09:38:12.361"></status>
</kw>
<kw name="${i} = 5" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:38:12.380" endtime="20201029 09:38:16.392"></status>
</kw>
<msg timestamp="20201029 09:38:16.393" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 09:38:12.377" endtime="20201029 09:38:16.393"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:38:16.398" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 09:38:16.395" endtime="20201029 09:38:16.399"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:38:16.400" endtime="20201029 09:38:16.403"></status>
</kw>
<status status="PASS" starttime="20201029 09:38:12.372" endtime="20201029 09:38:16.404"></status>
</kw>
<status status="PASS" starttime="20201029 09:38:12.366" endtime="20201029 09:38:16.405"></status>
</kw>
<status status="PASS" starttime="20201029 09:38:12.364" endtime="20201029 09:38:16.406"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 09:38:16.408" endtime="20201029 09:38:16.411"></status>
</kw>
<status status="PASS" starttime="20201029 09:38:12.362" endtime="20201029 09:38:16.411"></status>
</kw>
<kw name="${i} = 6" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:38:16.430" endtime="20201029 09:38:20.439"></status>
</kw>
<msg timestamp="20201029 09:38:20.440" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 09:38:16.427" endtime="20201029 09:38:20.440"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:38:20.445" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 09:38:20.442" endtime="20201029 09:38:20.446"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:38:20.447" endtime="20201029 09:38:20.450"></status>
</kw>
<status status="PASS" starttime="20201029 09:38:16.421" endtime="20201029 09:38:20.452"></status>
</kw>
<status status="PASS" starttime="20201029 09:38:16.416" endtime="20201029 09:38:20.453"></status>
</kw>
<status status="PASS" starttime="20201029 09:38:16.414" endtime="20201029 09:38:20.453"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 09:38:20.455" endtime="20201029 09:38:20.458"></status>
</kw>
<status status="PASS" starttime="20201029 09:38:16.412" endtime="20201029 09:38:20.458"></status>
</kw>
<kw name="${i} = 7" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:38:20.477" endtime="20201029 09:38:24.486"></status>
</kw>
<msg timestamp="20201029 09:38:24.487" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 09:38:20.474" endtime="20201029 09:38:24.488"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:38:24.492" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 09:38:24.489" endtime="20201029 09:38:24.493"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:38:24.494" endtime="20201029 09:38:24.498"></status>
</kw>
<status status="PASS" starttime="20201029 09:38:20.468" endtime="20201029 09:38:24.499"></status>
</kw>
<status status="PASS" starttime="20201029 09:38:20.463" endtime="20201029 09:38:24.500"></status>
</kw>
<status status="PASS" starttime="20201029 09:38:20.461" endtime="20201029 09:38:24.500"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 09:38:24.502" endtime="20201029 09:38:24.505"></status>
</kw>
<status status="PASS" starttime="20201029 09:38:20.459" endtime="20201029 09:38:24.506"></status>
</kw>
<kw name="${i} = 8" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:38:24.525" endtime="20201029 09:38:28.534"></status>
</kw>
<msg timestamp="20201029 09:38:28.535" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 09:38:24.522" endtime="20201029 09:38:28.536"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:38:28.540" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 09:38:28.538" endtime="20201029 09:38:28.541"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:38:28.543" endtime="20201029 09:38:28.546"></status>
</kw>
<status status="PASS" starttime="20201029 09:38:24.516" endtime="20201029 09:38:28.547"></status>
</kw>
<status status="PASS" starttime="20201029 09:38:24.511" endtime="20201029 09:38:28.548"></status>
</kw>
<status status="PASS" starttime="20201029 09:38:24.509" endtime="20201029 09:38:28.548"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 09:38:28.550" endtime="20201029 09:38:28.553"></status>
</kw>
<status status="PASS" starttime="20201029 09:38:24.507" endtime="20201029 09:38:28.554"></status>
</kw>
<kw name="${i} = 9" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:38:28.574" endtime="20201029 09:38:32.584"></status>
</kw>
<msg timestamp="20201029 09:38:32.585" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 09:38:28.571" endtime="20201029 09:38:32.585"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:38:32.590" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 09:38:32.587" endtime="20201029 09:38:32.590"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:38:32.592" endtime="20201029 09:38:32.595"></status>
</kw>
<status status="PASS" starttime="20201029 09:38:28.563" endtime="20201029 09:38:32.596"></status>
</kw>
<status status="PASS" starttime="20201029 09:38:28.559" endtime="20201029 09:38:32.597"></status>
</kw>
<status status="PASS" starttime="20201029 09:38:28.556" endtime="20201029 09:38:32.598"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 09:38:32.599" endtime="20201029 09:38:32.603"></status>
</kw>
<status status="PASS" starttime="20201029 09:38:28.554" endtime="20201029 09:38:32.603"></status>
</kw>
<kw name="${i} = 10" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:38:32.621" endtime="20201029 09:38:36.631"></status>
</kw>
<msg timestamp="20201029 09:38:36.632" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 09:38:32.618" endtime="20201029 09:38:36.632"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:38:36.637" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 09:38:36.634" endtime="20201029 09:38:36.637"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:38:36.639" endtime="20201029 09:38:36.642"></status>
</kw>
<status status="PASS" starttime="20201029 09:38:32.613" endtime="20201029 09:38:36.644"></status>
</kw>
<status status="PASS" starttime="20201029 09:38:32.608" endtime="20201029 09:38:36.645"></status>
</kw>
<status status="PASS" starttime="20201029 09:38:32.605" endtime="20201029 09:38:36.646"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 09:38:36.647" endtime="20201029 09:38:36.650"></status>
</kw>
<status status="PASS" starttime="20201029 09:38:32.604" endtime="20201029 09:38:36.651"></status>
</kw>
<kw name="${i} = 11" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:38:36.669" endtime="20201029 09:38:40.679"></status>
</kw>
<msg timestamp="20201029 09:38:40.680" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 09:38:36.666" endtime="20201029 09:38:40.680"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:38:40.685" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 09:38:40.682" endtime="20201029 09:38:40.686"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:38:40.687" endtime="20201029 09:38:40.690"></status>
</kw>
<status status="PASS" starttime="20201029 09:38:36.661" endtime="20201029 09:38:40.692"></status>
</kw>
<status status="PASS" starttime="20201029 09:38:36.656" endtime="20201029 09:38:40.693"></status>
</kw>
<status status="PASS" starttime="20201029 09:38:36.654" endtime="20201029 09:38:40.693"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 09:38:40.695" endtime="20201029 09:38:40.698"></status>
</kw>
<status status="PASS" starttime="20201029 09:38:36.652" endtime="20201029 09:38:40.698"></status>
</kw>
<kw name="${i} = 12" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:38:40.717" endtime="20201029 09:38:44.726"></status>
</kw>
<msg timestamp="20201029 09:38:44.727" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 09:38:40.714" endtime="20201029 09:38:44.728"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:38:44.732" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 09:38:44.729" endtime="20201029 09:38:44.733"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:38:44.734" endtime="20201029 09:38:44.738"></status>
</kw>
<status status="PASS" starttime="20201029 09:38:40.708" endtime="20201029 09:38:44.739"></status>
</kw>
<status status="PASS" starttime="20201029 09:38:40.703" endtime="20201029 09:38:44.740"></status>
</kw>
<status status="PASS" starttime="20201029 09:38:40.701" endtime="20201029 09:38:44.740"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 09:38:44.742" endtime="20201029 09:38:44.745"></status>
</kw>
<status status="PASS" starttime="20201029 09:38:40.699" endtime="20201029 09:38:44.746"></status>
</kw>
<kw name="${i} = 13" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:38:44.769" endtime="20201029 09:38:48.779"></status>
</kw>
<msg timestamp="20201029 09:38:48.780" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 09:38:44.766" endtime="20201029 09:38:48.780"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:38:48.786" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 09:38:48.782" endtime="20201029 09:38:48.787"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:38:48.788" endtime="20201029 09:38:48.792"></status>
</kw>
<status status="PASS" starttime="20201029 09:38:44.761" endtime="20201029 09:38:48.793"></status>
</kw>
<status status="PASS" starttime="20201029 09:38:44.750" endtime="20201029 09:38:48.794"></status>
</kw>
<status status="PASS" starttime="20201029 09:38:44.748" endtime="20201029 09:38:48.795"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 09:38:48.796" endtime="20201029 09:38:48.800"></status>
</kw>
<status status="PASS" starttime="20201029 09:38:44.746" endtime="20201029 09:38:48.800"></status>
</kw>
<kw name="${i} = 14" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:38:48.819" endtime="20201029 09:38:52.828"></status>
</kw>
<msg timestamp="20201029 09:38:52.829" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 09:38:48.816" endtime="20201029 09:38:52.830"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:38:52.834" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 09:38:52.831" endtime="20201029 09:38:52.835"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:38:52.836" endtime="20201029 09:38:52.840"></status>
</kw>
<status status="PASS" starttime="20201029 09:38:48.810" endtime="20201029 09:38:52.841"></status>
</kw>
<status status="PASS" starttime="20201029 09:38:48.805" endtime="20201029 09:38:52.842"></status>
</kw>
<status status="PASS" starttime="20201029 09:38:48.803" endtime="20201029 09:38:52.842"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 09:38:52.844" endtime="20201029 09:38:52.847"></status>
</kw>
<status status="PASS" starttime="20201029 09:38:48.801" endtime="20201029 09:38:52.848"></status>
</kw>
<kw name="${i} = 15" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:38:52.866" endtime="20201029 09:38:56.875"></status>
</kw>
<msg timestamp="20201029 09:38:56.876" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 09:38:52.863" endtime="20201029 09:38:56.877"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:38:56.881" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 09:38:56.878" endtime="20201029 09:38:56.882"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:38:56.883" endtime="20201029 09:38:56.887"></status>
</kw>
<status status="PASS" starttime="20201029 09:38:52.857" endtime="20201029 09:38:56.888"></status>
</kw>
<status status="PASS" starttime="20201029 09:38:52.852" endtime="20201029 09:38:56.889"></status>
</kw>
<status status="PASS" starttime="20201029 09:38:52.850" endtime="20201029 09:38:56.889"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 09:38:56.891" endtime="20201029 09:38:56.894"></status>
</kw>
<status status="PASS" starttime="20201029 09:38:52.848" endtime="20201029 09:38:56.895"></status>
</kw>
<status status="PASS" starttime="20201029 09:37:49.115" endtime="20201029 09:38:56.895"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<msg timestamp="20201029 09:38:56.900" level="FAIL">'Timeout' does not contain 'Success'</msg>
<status status="FAIL" starttime="20201029 09:38:56.897" endtime="20201029 09:38:56.901"></status>
</kw>
<status status="FAIL" starttime="20201029 09:37:49.112" endtime="20201029 09:38:56.902"></status>
</kw>
<status status="FAIL" starttime="20201029 09:37:49.109" endtime="20201029 09:38:56.903"></status>
</kw>
<status status="FAIL" starttime="20201029 09:37:49.079" endtime="20201029 09:38:56.904"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="FAIL" starttime="20201029 09:37:49.071" endtime="20201029 09:38:56.905" critical="yes">Setup failed:
'Timeout' does not contain 'Success'</status>
</test>
<test id="s1-s2-t7" name="Measure Overhead Remove Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:38:56.920" endtime="20201029 09:38:56.942"></status>
</kw>
<status status="PASS" starttime="20201029 09:38:56.917" endtime="20201029 09:38:56.943"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:38:56.971" endtime="20201029 09:39:03.986"></status>
</kw>
<msg timestamp="20201029 09:39:03.986" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 09:38:56.968" endtime="20201029 09:39:03.987"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:39:03.991" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 09:39:03.989" endtime="20201029 09:39:03.992"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:39:03.994" endtime="20201029 09:39:03.997"></status>
</kw>
<status status="PASS" starttime="20201029 09:38:56.963" endtime="20201029 09:39:03.998"></status>
</kw>
<status status="PASS" starttime="20201029 09:38:56.958" endtime="20201029 09:39:03.999"></status>
</kw>
<status status="PASS" starttime="20201029 09:38:56.955" endtime="20201029 09:39:04.000"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 09:39:04.002" endtime="20201029 09:39:04.005"></status>
</kw>
<status status="PASS" starttime="20201029 09:38:56.954" endtime="20201029 09:39:04.005"></status>
</kw>
<kw name="${i} = 1" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:39:04.023" endtime="20201029 09:39:08.033"></status>
</kw>
<msg timestamp="20201029 09:39:08.034" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 09:39:04.020" endtime="20201029 09:39:08.034"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:39:08.039" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 09:39:08.036" endtime="20201029 09:39:08.039"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:39:08.041" endtime="20201029 09:39:08.044"></status>
</kw>
<status status="PASS" starttime="20201029 09:39:04.015" endtime="20201029 09:39:08.045"></status>
</kw>
<status status="PASS" starttime="20201029 09:39:04.010" endtime="20201029 09:39:08.046"></status>
</kw>
<status status="PASS" starttime="20201029 09:39:04.007" endtime="20201029 09:39:08.047"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 09:39:08.049" endtime="20201029 09:39:08.052"></status>
</kw>
<status status="PASS" starttime="20201029 09:39:04.006" endtime="20201029 09:39:08.052"></status>
</kw>
<kw name="${i} = 2" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:39:08.070" endtime="20201029 09:39:12.080"></status>
</kw>
<msg timestamp="20201029 09:39:12.082" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 09:39:08.067" endtime="20201029 09:39:12.082"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:39:12.087" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 09:39:12.084" endtime="20201029 09:39:12.087"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:39:12.089" endtime="20201029 09:39:12.092"></status>
</kw>
<status status="PASS" starttime="20201029 09:39:08.062" endtime="20201029 09:39:12.093"></status>
</kw>
<status status="PASS" starttime="20201029 09:39:08.057" endtime="20201029 09:39:12.094"></status>
</kw>
<status status="PASS" starttime="20201029 09:39:08.055" endtime="20201029 09:39:12.095"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 09:39:12.096" endtime="20201029 09:39:12.099"></status>
</kw>
<status status="PASS" starttime="20201029 09:39:08.053" endtime="20201029 09:39:12.100"></status>
</kw>
<kw name="${i} = 3" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:39:12.120" endtime="20201029 09:39:16.130"></status>
</kw>
<msg timestamp="20201029 09:39:16.131" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 09:39:12.117" endtime="20201029 09:39:16.131"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:39:16.136" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 09:39:16.133" endtime="20201029 09:39:16.136"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:39:16.138" endtime="20201029 09:39:16.141"></status>
</kw>
<status status="PASS" starttime="20201029 09:39:12.112" endtime="20201029 09:39:16.142"></status>
</kw>
<status status="PASS" starttime="20201029 09:39:12.105" endtime="20201029 09:39:16.143"></status>
</kw>
<status status="PASS" starttime="20201029 09:39:12.102" endtime="20201029 09:39:16.144"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 09:39:16.146" endtime="20201029 09:39:16.149"></status>
</kw>
<status status="PASS" starttime="20201029 09:39:12.101" endtime="20201029 09:39:16.149"></status>
</kw>
<kw name="${i} = 4" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:39:16.167" endtime="20201029 09:39:20.177"></status>
</kw>
<msg timestamp="20201029 09:39:20.178" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 09:39:16.164" endtime="20201029 09:39:20.178"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:39:20.183" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 09:39:20.180" endtime="20201029 09:39:20.184"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:39:20.185" endtime="20201029 09:39:20.188"></status>
</kw>
<status status="PASS" starttime="20201029 09:39:16.159" endtime="20201029 09:39:20.189"></status>
</kw>
<status status="PASS" starttime="20201029 09:39:16.154" endtime="20201029 09:39:20.190"></status>
</kw>
<status status="PASS" starttime="20201029 09:39:16.152" endtime="20201029 09:39:20.191"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 09:39:20.193" endtime="20201029 09:39:20.196"></status>
</kw>
<status status="PASS" starttime="20201029 09:39:16.150" endtime="20201029 09:39:20.196"></status>
</kw>
<kw name="${i} = 5" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:39:20.216" endtime="20201029 09:39:24.225"></status>
</kw>
<msg timestamp="20201029 09:39:24.226" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 09:39:20.212" endtime="20201029 09:39:24.226"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:39:24.231" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 09:39:24.228" endtime="20201029 09:39:24.232"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:39:24.233" endtime="20201029 09:39:24.237"></status>
</kw>
<status status="PASS" starttime="20201029 09:39:20.206" endtime="20201029 09:39:24.238"></status>
</kw>
<status status="PASS" starttime="20201029 09:39:20.201" endtime="20201029 09:39:24.239"></status>
</kw>
<status status="PASS" starttime="20201029 09:39:20.199" endtime="20201029 09:39:24.239"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 09:39:24.241" endtime="20201029 09:39:24.244"></status>
</kw>
<status status="PASS" starttime="20201029 09:39:20.197" endtime="20201029 09:39:24.244"></status>
</kw>
<kw name="${i} = 6" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:39:24.263" endtime="20201029 09:39:28.272"></status>
</kw>
<msg timestamp="20201029 09:39:28.273" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 09:39:24.260" endtime="20201029 09:39:28.274"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:39:28.278" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 09:39:28.275" endtime="20201029 09:39:28.279"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:39:28.280" endtime="20201029 09:39:28.286"></status>
</kw>
<status status="PASS" starttime="20201029 09:39:24.254" endtime="20201029 09:39:28.287"></status>
</kw>
<status status="PASS" starttime="20201029 09:39:24.249" endtime="20201029 09:39:28.288"></status>
</kw>
<status status="PASS" starttime="20201029 09:39:24.247" endtime="20201029 09:39:28.288"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 09:39:28.290" endtime="20201029 09:39:28.293"></status>
</kw>
<status status="PASS" starttime="20201029 09:39:24.245" endtime="20201029 09:39:28.294"></status>
</kw>
<kw name="${i} = 7" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:39:28.312" endtime="20201029 09:39:32.322"></status>
</kw>
<msg timestamp="20201029 09:39:32.323" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 09:39:28.309" endtime="20201029 09:39:32.323"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:39:32.327" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 09:39:32.325" endtime="20201029 09:39:32.328"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:39:32.330" endtime="20201029 09:39:32.333"></status>
</kw>
<status status="PASS" starttime="20201029 09:39:28.304" endtime="20201029 09:39:32.334"></status>
</kw>
<status status="PASS" starttime="20201029 09:39:28.299" endtime="20201029 09:39:32.335"></status>
</kw>
<status status="PASS" starttime="20201029 09:39:28.296" endtime="20201029 09:39:32.336"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 09:39:32.337" endtime="20201029 09:39:32.340"></status>
</kw>
<status status="PASS" starttime="20201029 09:39:28.294" endtime="20201029 09:39:32.341"></status>
</kw>
<kw name="${i} = 8" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:39:32.360" endtime="20201029 09:39:36.369"></status>
</kw>
<msg timestamp="20201029 09:39:36.370" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 09:39:32.357" endtime="20201029 09:39:36.371"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:39:36.375" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 09:39:36.373" endtime="20201029 09:39:36.376"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:39:36.378" endtime="20201029 09:39:36.381"></status>
</kw>
<status status="PASS" starttime="20201029 09:39:32.352" endtime="20201029 09:39:36.382"></status>
</kw>
<status status="PASS" starttime="20201029 09:39:32.347" endtime="20201029 09:39:36.383"></status>
</kw>
<status status="PASS" starttime="20201029 09:39:32.344" endtime="20201029 09:39:36.384"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 09:39:36.385" endtime="20201029 09:39:36.388"></status>
</kw>
<status status="PASS" starttime="20201029 09:39:32.342" endtime="20201029 09:39:36.389"></status>
</kw>
<kw name="${i} = 9" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:39:36.407" endtime="20201029 09:39:40.417"></status>
</kw>
<msg timestamp="20201029 09:39:40.418" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 09:39:36.404" endtime="20201029 09:39:40.418"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:39:40.423" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 09:39:40.420" endtime="20201029 09:39:40.423"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:39:40.425" endtime="20201029 09:39:40.428"></status>
</kw>
<status status="PASS" starttime="20201029 09:39:36.399" endtime="20201029 09:39:40.429"></status>
</kw>
<status status="PASS" starttime="20201029 09:39:36.394" endtime="20201029 09:39:40.430"></status>
</kw>
<status status="PASS" starttime="20201029 09:39:36.391" endtime="20201029 09:39:40.431"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 09:39:40.432" endtime="20201029 09:39:40.435"></status>
</kw>
<status status="PASS" starttime="20201029 09:39:36.389" endtime="20201029 09:39:40.436"></status>
</kw>
<kw name="${i} = 10" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:39:40.456" endtime="20201029 09:39:44.466"></status>
</kw>
<msg timestamp="20201029 09:39:44.467" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 09:39:40.453" endtime="20201029 09:39:44.467"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:39:44.472" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 09:39:44.469" endtime="20201029 09:39:44.473"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:39:44.474" endtime="20201029 09:39:44.477"></status>
</kw>
<status status="PASS" starttime="20201029 09:39:40.446" endtime="20201029 09:39:44.478"></status>
</kw>
<status status="PASS" starttime="20201029 09:39:40.441" endtime="20201029 09:39:44.479"></status>
</kw>
<status status="PASS" starttime="20201029 09:39:40.438" endtime="20201029 09:39:44.481"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 09:39:44.483" endtime="20201029 09:39:44.486"></status>
</kw>
<status status="PASS" starttime="20201029 09:39:40.437" endtime="20201029 09:39:44.486"></status>
</kw>
<kw name="${i} = 11" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:39:44.505" endtime="20201029 09:39:48.514"></status>
</kw>
<msg timestamp="20201029 09:39:48.515" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 09:39:44.501" endtime="20201029 09:39:48.515"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:39:48.520" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 09:39:48.517" endtime="20201029 09:39:48.520"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:39:48.522" endtime="20201029 09:39:48.525"></status>
</kw>
<status status="PASS" starttime="20201029 09:39:44.496" endtime="20201029 09:39:48.526"></status>
</kw>
<status status="PASS" starttime="20201029 09:39:44.491" endtime="20201029 09:39:48.527"></status>
</kw>
<status status="PASS" starttime="20201029 09:39:44.489" endtime="20201029 09:39:48.528"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 09:39:48.530" endtime="20201029 09:39:48.533"></status>
</kw>
<status status="PASS" starttime="20201029 09:39:44.487" endtime="20201029 09:39:48.533"></status>
</kw>
<kw name="${i} = 12" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:39:48.558" endtime="20201029 09:39:52.568"></status>
</kw>
<msg timestamp="20201029 09:39:52.569" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 09:39:48.555" endtime="20201029 09:39:52.569"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:39:52.574" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 09:39:52.571" endtime="20201029 09:39:52.575"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:39:52.576" endtime="20201029 09:39:52.580"></status>
</kw>
<status status="PASS" starttime="20201029 09:39:48.543" endtime="20201029 09:39:52.581"></status>
</kw>
<status status="PASS" starttime="20201029 09:39:48.538" endtime="20201029 09:39:52.582"></status>
</kw>
<status status="PASS" starttime="20201029 09:39:48.536" endtime="20201029 09:39:52.582"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 09:39:52.584" endtime="20201029 09:39:52.587"></status>
</kw>
<status status="PASS" starttime="20201029 09:39:48.534" endtime="20201029 09:39:52.588"></status>
</kw>
<kw name="${i} = 13" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:39:52.607" endtime="20201029 09:39:56.616"></status>
</kw>
<msg timestamp="20201029 09:39:56.617" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 09:39:52.603" endtime="20201029 09:39:56.618"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:39:56.622" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 09:39:56.619" endtime="20201029 09:39:56.624"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:39:56.625" endtime="20201029 09:39:56.629"></status>
</kw>
<status status="PASS" starttime="20201029 09:39:52.598" endtime="20201029 09:39:56.630"></status>
</kw>
<status status="PASS" starttime="20201029 09:39:52.593" endtime="20201029 09:39:56.631"></status>
</kw>
<status status="PASS" starttime="20201029 09:39:52.590" endtime="20201029 09:39:56.631"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 09:39:56.633" endtime="20201029 09:39:56.636"></status>
</kw>
<status status="PASS" starttime="20201029 09:39:52.588" endtime="20201029 09:39:56.637"></status>
</kw>
<kw name="${i} = 14" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:39:56.658" endtime="20201029 09:40:00.668"></status>
</kw>
<msg timestamp="20201029 09:40:00.669" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 09:39:56.655" endtime="20201029 09:40:00.669"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:40:00.674" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 09:40:00.671" endtime="20201029 09:40:00.674"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:40:00.676" endtime="20201029 09:40:00.679"></status>
</kw>
<status status="PASS" starttime="20201029 09:39:56.649" endtime="20201029 09:40:00.680"></status>
</kw>
<status status="PASS" starttime="20201029 09:39:56.642" endtime="20201029 09:40:00.681"></status>
</kw>
<status status="PASS" starttime="20201029 09:39:56.639" endtime="20201029 09:40:00.682"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 09:40:00.684" endtime="20201029 09:40:00.687"></status>
</kw>
<status status="PASS" starttime="20201029 09:39:56.638" endtime="20201029 09:40:00.687"></status>
</kw>
<kw name="${i} = 15" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:40:00.706" endtime="20201029 09:40:04.716"></status>
</kw>
<msg timestamp="20201029 09:40:04.717" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 09:40:00.703" endtime="20201029 09:40:04.717"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:40:04.722" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 09:40:04.719" endtime="20201029 09:40:04.723"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:40:04.724" endtime="20201029 09:40:04.727"></status>
</kw>
<status status="PASS" starttime="20201029 09:40:00.697" endtime="20201029 09:40:04.729"></status>
</kw>
<status status="PASS" starttime="20201029 09:40:00.692" endtime="20201029 09:40:04.730"></status>
</kw>
<status status="PASS" starttime="20201029 09:40:00.690" endtime="20201029 09:40:04.730"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 09:40:04.732" endtime="20201029 09:40:04.735"></status>
</kw>
<status status="PASS" starttime="20201029 09:40:00.688" endtime="20201029 09:40:04.736"></status>
</kw>
<status status="PASS" starttime="20201029 09:38:56.952" endtime="20201029 09:40:04.736"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<msg timestamp="20201029 09:40:04.741" level="FAIL">'Timeout' does not contain 'Success'</msg>
<status status="FAIL" starttime="20201029 09:40:04.738" endtime="20201029 09:40:04.742"></status>
</kw>
<status status="FAIL" starttime="20201029 09:38:56.947" endtime="20201029 09:40:04.743"></status>
</kw>
<status status="FAIL" starttime="20201029 09:38:56.944" endtime="20201029 09:40:04.745"></status>
</kw>
<status status="FAIL" starttime="20201029 09:38:56.914" endtime="20201029 09:40:04.745"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="FAIL" starttime="20201029 09:38:56.909" endtime="20201029 09:40:04.746" critical="yes">Setup failed:
'Timeout' does not contain 'Success'</status>
</test>
<test id="s1-s2-t8" name="Measure Overhead Remove Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:40:04.762" endtime="20201029 09:40:04.783"></status>
</kw>
<status status="PASS" starttime="20201029 09:40:04.758" endtime="20201029 09:40:04.785"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:40:04.814" endtime="20201029 09:40:11.828"></status>
</kw>
<msg timestamp="20201029 09:40:11.829" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 09:40:04.810" endtime="20201029 09:40:11.830"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:40:11.835" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 09:40:11.832" endtime="20201029 09:40:11.836"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:40:11.838" endtime="20201029 09:40:11.842"></status>
</kw>
<status status="PASS" starttime="20201029 09:40:04.803" endtime="20201029 09:40:11.844"></status>
</kw>
<status status="PASS" starttime="20201029 09:40:04.798" endtime="20201029 09:40:11.845"></status>
</kw>
<status status="PASS" starttime="20201029 09:40:04.795" endtime="20201029 09:40:11.846"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 09:40:11.848" endtime="20201029 09:40:11.852"></status>
</kw>
<status status="PASS" starttime="20201029 09:40:04.794" endtime="20201029 09:40:11.852"></status>
</kw>
<kw name="${i} = 1" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:40:11.875" endtime="20201029 09:40:15.885"></status>
</kw>
<msg timestamp="20201029 09:40:15.886" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 09:40:11.871" endtime="20201029 09:40:15.886"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:40:15.892" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 09:40:15.888" endtime="20201029 09:40:15.893"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:40:15.895" endtime="20201029 09:40:15.899"></status>
</kw>
<status status="PASS" starttime="20201029 09:40:11.864" endtime="20201029 09:40:15.900"></status>
</kw>
<status status="PASS" starttime="20201029 09:40:11.859" endtime="20201029 09:40:15.901"></status>
</kw>
<status status="PASS" starttime="20201029 09:40:11.855" endtime="20201029 09:40:15.902"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 09:40:15.905" endtime="20201029 09:40:15.909"></status>
</kw>
<status status="PASS" starttime="20201029 09:40:11.853" endtime="20201029 09:40:15.910"></status>
</kw>
<kw name="${i} = 2" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:40:15.932" endtime="20201029 09:40:19.942"></status>
</kw>
<msg timestamp="20201029 09:40:19.943" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 09:40:15.928" endtime="20201029 09:40:19.943"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:40:19.949" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 09:40:19.946" endtime="20201029 09:40:19.949"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:40:19.951" endtime="20201029 09:40:19.954"></status>
</kw>
<status status="PASS" starttime="20201029 09:40:15.922" endtime="20201029 09:40:19.955"></status>
</kw>
<status status="PASS" starttime="20201029 09:40:15.916" endtime="20201029 09:40:19.956"></status>
</kw>
<status status="PASS" starttime="20201029 09:40:15.913" endtime="20201029 09:40:19.957"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 09:40:19.959" endtime="20201029 09:40:19.962"></status>
</kw>
<status status="PASS" starttime="20201029 09:40:15.910" endtime="20201029 09:40:19.962"></status>
</kw>
<kw name="${i} = 3" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:40:19.981" endtime="20201029 09:40:23.993"></status>
</kw>
<msg timestamp="20201029 09:40:23.994" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 09:40:19.978" endtime="20201029 09:40:23.994"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:40:23.999" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 09:40:23.996" endtime="20201029 09:40:23.999"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:40:24.001" endtime="20201029 09:40:24.004"></status>
</kw>
<status status="PASS" starttime="20201029 09:40:19.972" endtime="20201029 09:40:24.006"></status>
</kw>
<status status="PASS" starttime="20201029 09:40:19.967" endtime="20201029 09:40:24.006"></status>
</kw>
<status status="PASS" starttime="20201029 09:40:19.965" endtime="20201029 09:40:24.007"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 09:40:24.009" endtime="20201029 09:40:24.012"></status>
</kw>
<status status="PASS" starttime="20201029 09:40:19.963" endtime="20201029 09:40:24.013"></status>
</kw>
<kw name="${i} = 4" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:40:24.031" endtime="20201029 09:40:28.041"></status>
</kw>
<msg timestamp="20201029 09:40:28.042" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 09:40:24.028" endtime="20201029 09:40:28.042"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:40:28.047" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 09:40:28.044" endtime="20201029 09:40:28.047"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:40:28.049" endtime="20201029 09:40:28.052"></status>
</kw>
<status status="PASS" starttime="20201029 09:40:24.023" endtime="20201029 09:40:28.054"></status>
</kw>
<status status="PASS" starttime="20201029 09:40:24.018" endtime="20201029 09:40:28.055"></status>
</kw>
<status status="PASS" starttime="20201029 09:40:24.015" endtime="20201029 09:40:28.055"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 09:40:28.057" endtime="20201029 09:40:28.060"></status>
</kw>
<status status="PASS" starttime="20201029 09:40:24.013" endtime="20201029 09:40:28.060"></status>
</kw>
<kw name="${i} = 5" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:40:28.080" endtime="20201029 09:40:32.090"></status>
</kw>
<msg timestamp="20201029 09:40:32.091" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 09:40:28.076" endtime="20201029 09:40:32.091"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:40:32.096" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 09:40:32.093" endtime="20201029 09:40:32.097"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:40:32.098" endtime="20201029 09:40:32.102"></status>
</kw>
<status status="PASS" starttime="20201029 09:40:28.071" endtime="20201029 09:40:32.103"></status>
</kw>
<status status="PASS" starttime="20201029 09:40:28.066" endtime="20201029 09:40:32.104"></status>
</kw>
<status status="PASS" starttime="20201029 09:40:28.063" endtime="20201029 09:40:32.104"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 09:40:32.106" endtime="20201029 09:40:32.109"></status>
</kw>
<status status="PASS" starttime="20201029 09:40:28.061" endtime="20201029 09:40:32.110"></status>
</kw>
<kw name="${i} = 6" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:40:32.128" endtime="20201029 09:40:36.138"></status>
</kw>
<msg timestamp="20201029 09:40:36.139" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 09:40:32.125" endtime="20201029 09:40:36.140"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:40:36.144" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 09:40:36.141" endtime="20201029 09:40:36.145"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:40:36.146" endtime="20201029 09:40:36.150"></status>
</kw>
<status status="PASS" starttime="20201029 09:40:32.120" endtime="20201029 09:40:36.151"></status>
</kw>
<status status="PASS" starttime="20201029 09:40:32.115" endtime="20201029 09:40:36.152"></status>
</kw>
<status status="PASS" starttime="20201029 09:40:32.112" endtime="20201029 09:40:36.152"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 09:40:36.154" endtime="20201029 09:40:36.157"></status>
</kw>
<status status="PASS" starttime="20201029 09:40:32.110" endtime="20201029 09:40:36.158"></status>
</kw>
<kw name="${i} = 7" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:40:36.179" endtime="20201029 09:40:40.189"></status>
</kw>
<msg timestamp="20201029 09:40:40.190" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 09:40:36.176" endtime="20201029 09:40:40.190"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:40:40.195" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 09:40:40.192" endtime="20201029 09:40:40.195"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:40:40.197" endtime="20201029 09:40:40.200"></status>
</kw>
<status status="PASS" starttime="20201029 09:40:36.168" endtime="20201029 09:40:40.201"></status>
</kw>
<status status="PASS" starttime="20201029 09:40:36.163" endtime="20201029 09:40:40.202"></status>
</kw>
<status status="PASS" starttime="20201029 09:40:36.160" endtime="20201029 09:40:40.203"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 09:40:40.205" endtime="20201029 09:40:40.208"></status>
</kw>
<status status="PASS" starttime="20201029 09:40:36.159" endtime="20201029 09:40:40.208"></status>
</kw>
<kw name="${i} = 8" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:40:40.233" endtime="20201029 09:40:44.242"></status>
</kw>
<msg timestamp="20201029 09:40:44.243" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 09:40:40.230" endtime="20201029 09:40:44.243"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:40:44.248" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 09:40:44.245" endtime="20201029 09:40:44.249"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:40:44.251" endtime="20201029 09:40:44.254"></status>
</kw>
<status status="PASS" starttime="20201029 09:40:40.224" endtime="20201029 09:40:44.255"></status>
</kw>
<status status="PASS" starttime="20201029 09:40:40.219" endtime="20201029 09:40:44.256"></status>
</kw>
<status status="PASS" starttime="20201029 09:40:40.211" endtime="20201029 09:40:44.257"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 09:40:44.258" endtime="20201029 09:40:44.262"></status>
</kw>
<status status="PASS" starttime="20201029 09:40:40.209" endtime="20201029 09:40:44.262"></status>
</kw>
<kw name="${i} = 9" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:40:44.281" endtime="20201029 09:40:48.291"></status>
</kw>
<msg timestamp="20201029 09:40:48.292" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 09:40:44.278" endtime="20201029 09:40:48.292"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:40:48.297" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 09:40:48.294" endtime="20201029 09:40:48.297"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:40:48.299" endtime="20201029 09:40:48.302"></status>
</kw>
<status status="PASS" starttime="20201029 09:40:44.272" endtime="20201029 09:40:48.303"></status>
</kw>
<status status="PASS" starttime="20201029 09:40:44.267" endtime="20201029 09:40:48.304"></status>
</kw>
<status status="PASS" starttime="20201029 09:40:44.265" endtime="20201029 09:40:48.305"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 09:40:48.307" endtime="20201029 09:40:48.310"></status>
</kw>
<status status="PASS" starttime="20201029 09:40:44.263" endtime="20201029 09:40:48.310"></status>
</kw>
<kw name="${i} = 10" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:40:48.329" endtime="20201029 09:40:52.339"></status>
</kw>
<msg timestamp="20201029 09:40:52.340" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 09:40:48.326" endtime="20201029 09:40:52.340"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:40:52.345" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 09:40:52.342" endtime="20201029 09:40:52.345"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:40:52.347" endtime="20201029 09:40:52.350"></status>
</kw>
<status status="PASS" starttime="20201029 09:40:48.320" endtime="20201029 09:40:52.351"></status>
</kw>
<status status="PASS" starttime="20201029 09:40:48.315" endtime="20201029 09:40:52.352"></status>
</kw>
<status status="PASS" starttime="20201029 09:40:48.313" endtime="20201029 09:40:52.353"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 09:40:52.355" endtime="20201029 09:40:52.359"></status>
</kw>
<status status="PASS" starttime="20201029 09:40:48.311" endtime="20201029 09:40:52.359"></status>
</kw>
<kw name="${i} = 11" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:40:52.380" endtime="20201029 09:40:56.390"></status>
</kw>
<msg timestamp="20201029 09:40:56.391" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 09:40:52.377" endtime="20201029 09:40:56.392"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:40:56.396" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 09:40:56.393" endtime="20201029 09:40:56.397"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:40:56.398" endtime="20201029 09:40:56.402"></status>
</kw>
<status status="PASS" starttime="20201029 09:40:52.372" endtime="20201029 09:40:56.403"></status>
</kw>
<status status="PASS" starttime="20201029 09:40:52.364" endtime="20201029 09:40:56.404"></status>
</kw>
<status status="PASS" starttime="20201029 09:40:52.362" endtime="20201029 09:40:56.405"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 09:40:56.406" endtime="20201029 09:40:56.410"></status>
</kw>
<status status="PASS" starttime="20201029 09:40:52.360" endtime="20201029 09:40:56.410"></status>
</kw>
<kw name="${i} = 12" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:40:56.429" endtime="20201029 09:41:00.438"></status>
</kw>
<msg timestamp="20201029 09:41:00.439" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 09:40:56.425" endtime="20201029 09:41:00.440"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:41:00.444" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 09:41:00.442" endtime="20201029 09:41:00.445"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:41:00.447" endtime="20201029 09:41:00.450"></status>
</kw>
<status status="PASS" starttime="20201029 09:40:56.420" endtime="20201029 09:41:00.451"></status>
</kw>
<status status="PASS" starttime="20201029 09:40:56.415" endtime="20201029 09:41:00.452"></status>
</kw>
<status status="PASS" starttime="20201029 09:40:56.412" endtime="20201029 09:41:00.453"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 09:41:00.455" endtime="20201029 09:41:00.458"></status>
</kw>
<status status="PASS" starttime="20201029 09:40:56.411" endtime="20201029 09:41:00.458"></status>
</kw>
<kw name="${i} = 13" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:41:00.477" endtime="20201029 09:41:04.487"></status>
</kw>
<msg timestamp="20201029 09:41:04.488" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 09:41:00.474" endtime="20201029 09:41:04.488"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:41:04.493" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 09:41:04.490" endtime="20201029 09:41:04.493"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:41:04.495" endtime="20201029 09:41:04.499"></status>
</kw>
<status status="PASS" starttime="20201029 09:41:00.468" endtime="20201029 09:41:04.500"></status>
</kw>
<status status="PASS" starttime="20201029 09:41:00.463" endtime="20201029 09:41:04.501"></status>
</kw>
<status status="PASS" starttime="20201029 09:41:00.461" endtime="20201029 09:41:04.502"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 09:41:04.504" endtime="20201029 09:41:04.507"></status>
</kw>
<status status="PASS" starttime="20201029 09:41:00.459" endtime="20201029 09:41:04.507"></status>
</kw>
<kw name="${i} = 14" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:41:04.526" endtime="20201029 09:41:08.538"></status>
</kw>
<msg timestamp="20201029 09:41:08.539" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 09:41:04.523" endtime="20201029 09:41:08.539"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:41:08.544" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 09:41:08.541" endtime="20201029 09:41:08.545"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:41:08.546" endtime="20201029 09:41:08.550"></status>
</kw>
<status status="PASS" starttime="20201029 09:41:04.518" endtime="20201029 09:41:08.551"></status>
</kw>
<status status="PASS" starttime="20201029 09:41:04.513" endtime="20201029 09:41:08.552"></status>
</kw>
<status status="PASS" starttime="20201029 09:41:04.510" endtime="20201029 09:41:08.553"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 09:41:08.554" endtime="20201029 09:41:08.557"></status>
</kw>
<status status="PASS" starttime="20201029 09:41:04.508" endtime="20201029 09:41:08.558"></status>
</kw>
<kw name="${i} = 15" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:41:08.577" endtime="20201029 09:41:12.586"></status>
</kw>
<msg timestamp="20201029 09:41:12.587" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 09:41:08.574" endtime="20201029 09:41:12.588"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:41:12.592" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 09:41:12.590" endtime="20201029 09:41:12.593"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:41:12.595" endtime="20201029 09:41:12.598"></status>
</kw>
<status status="PASS" starttime="20201029 09:41:08.568" endtime="20201029 09:41:12.599"></status>
</kw>
<status status="PASS" starttime="20201029 09:41:08.563" endtime="20201029 09:41:12.600"></status>
</kw>
<status status="PASS" starttime="20201029 09:41:08.560" endtime="20201029 09:41:12.601"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 09:41:12.602" endtime="20201029 09:41:12.606"></status>
</kw>
<status status="PASS" starttime="20201029 09:41:08.559" endtime="20201029 09:41:12.606"></status>
</kw>
<status status="PASS" starttime="20201029 09:40:04.792" endtime="20201029 09:41:12.606"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<msg timestamp="20201029 09:41:12.612" level="FAIL">'Timeout' does not contain 'Success'</msg>
<status status="FAIL" starttime="20201029 09:41:12.608" endtime="20201029 09:41:12.612"></status>
</kw>
<status status="FAIL" starttime="20201029 09:40:04.789" endtime="20201029 09:41:12.614"></status>
</kw>
<status status="FAIL" starttime="20201029 09:40:04.786" endtime="20201029 09:41:12.615"></status>
</kw>
<status status="FAIL" starttime="20201029 09:40:04.756" endtime="20201029 09:41:12.615"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="FAIL" starttime="20201029 09:40:04.750" endtime="20201029 09:41:12.617" critical="yes">Setup failed:
'Timeout' does not contain 'Success'</status>
</test>
<test id="s1-s2-t9" name="Measure Add Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:41:12.632" endtime="20201029 09:41:12.654"></status>
</kw>
<status status="PASS" starttime="20201029 09:41:12.629" endtime="20201029 09:41:12.655"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:41:12.680" endtime="20201029 09:41:19.691"></status>
</kw>
<msg timestamp="20201029 09:41:19.692" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 09:41:12.679" endtime="20201029 09:41:19.693"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:41:19.697" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 09:41:19.694" endtime="20201029 09:41:19.698"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:41:19.699" endtime="20201029 09:41:19.703"></status>
</kw>
<status status="PASS" starttime="20201029 09:41:12.673" endtime="20201029 09:41:19.704"></status>
</kw>
<status status="PASS" starttime="20201029 09:41:12.668" endtime="20201029 09:41:19.705"></status>
</kw>
<status status="PASS" starttime="20201029 09:41:12.666" endtime="20201029 09:41:19.706"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 09:41:19.707" endtime="20201029 09:41:19.711"></status>
</kw>
<status status="PASS" starttime="20201029 09:41:12.664" endtime="20201029 09:41:19.711"></status>
</kw>
<kw name="${i} = 1" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:41:19.730" endtime="20201029 09:41:23.740"></status>
</kw>
<msg timestamp="20201029 09:41:23.741" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 09:41:19.727" endtime="20201029 09:41:23.741"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:41:23.746" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 09:41:23.743" endtime="20201029 09:41:23.746"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:41:23.748" endtime="20201029 09:41:23.751"></status>
</kw>
<status status="PASS" starttime="20201029 09:41:19.721" endtime="20201029 09:41:23.752"></status>
</kw>
<status status="PASS" starttime="20201029 09:41:19.716" endtime="20201029 09:41:23.753"></status>
</kw>
<status status="PASS" starttime="20201029 09:41:19.714" endtime="20201029 09:41:23.754"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 09:41:23.756" endtime="20201029 09:41:23.759"></status>
</kw>
<status status="PASS" starttime="20201029 09:41:19.712" endtime="20201029 09:41:23.759"></status>
</kw>
<kw name="${i} = 2" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:41:23.778" endtime="20201029 09:41:27.788"></status>
</kw>
<msg timestamp="20201029 09:41:27.789" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 09:41:23.775" endtime="20201029 09:41:27.789"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:41:27.795" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 09:41:27.791" endtime="20201029 09:41:27.795"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:41:27.797" endtime="20201029 09:41:27.800"></status>
</kw>
<status status="PASS" starttime="20201029 09:41:23.769" endtime="20201029 09:41:27.801"></status>
</kw>
<status status="PASS" starttime="20201029 09:41:23.764" endtime="20201029 09:41:27.802"></status>
</kw>
<status status="PASS" starttime="20201029 09:41:23.762" endtime="20201029 09:41:27.803"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 09:41:27.805" endtime="20201029 09:41:27.808"></status>
</kw>
<status status="PASS" starttime="20201029 09:41:23.760" endtime="20201029 09:41:27.808"></status>
</kw>
<kw name="${i} = 3" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:41:27.827" endtime="20201029 09:41:31.837"></status>
</kw>
<msg timestamp="20201029 09:41:31.838" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 09:41:27.824" endtime="20201029 09:41:31.838"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:41:31.843" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 09:41:31.840" endtime="20201029 09:41:31.844"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:41:31.845" endtime="20201029 09:41:31.848"></status>
</kw>
<status status="PASS" starttime="20201029 09:41:27.818" endtime="20201029 09:41:31.850"></status>
</kw>
<status status="PASS" starttime="20201029 09:41:27.813" endtime="20201029 09:41:31.851"></status>
</kw>
<status status="PASS" starttime="20201029 09:41:27.811" endtime="20201029 09:41:31.851"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 09:41:31.853" endtime="20201029 09:41:31.856"></status>
</kw>
<status status="PASS" starttime="20201029 09:41:27.809" endtime="20201029 09:41:31.857"></status>
</kw>
<kw name="${i} = 4" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:41:31.882" endtime="20201029 09:41:35.891"></status>
</kw>
<msg timestamp="20201029 09:41:35.892" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 09:41:31.878" endtime="20201029 09:41:35.892"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:41:35.897" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 09:41:35.894" endtime="20201029 09:41:35.898"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:41:35.899" endtime="20201029 09:41:35.903"></status>
</kw>
<status status="PASS" starttime="20201029 09:41:31.867" endtime="20201029 09:41:35.904"></status>
</kw>
<status status="PASS" starttime="20201029 09:41:31.862" endtime="20201029 09:41:35.905"></status>
</kw>
<status status="PASS" starttime="20201029 09:41:31.859" endtime="20201029 09:41:35.905"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 09:41:35.907" endtime="20201029 09:41:35.910"></status>
</kw>
<status status="PASS" starttime="20201029 09:41:31.857" endtime="20201029 09:41:35.911"></status>
</kw>
<kw name="${i} = 5" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:41:35.930" endtime="20201029 09:41:39.941"></status>
</kw>
<msg timestamp="20201029 09:41:39.942" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 09:41:35.926" endtime="20201029 09:41:39.943"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:41:39.947" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 09:41:39.944" endtime="20201029 09:41:39.948"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:41:39.949" endtime="20201029 09:41:39.953"></status>
</kw>
<status status="PASS" starttime="20201029 09:41:35.921" endtime="20201029 09:41:39.954"></status>
</kw>
<status status="PASS" starttime="20201029 09:41:35.916" endtime="20201029 09:41:39.955"></status>
</kw>
<status status="PASS" starttime="20201029 09:41:35.913" endtime="20201029 09:41:39.956"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 09:41:39.957" endtime="20201029 09:41:39.961"></status>
</kw>
<status status="PASS" starttime="20201029 09:41:35.912" endtime="20201029 09:41:39.961"></status>
</kw>
<kw name="${i} = 6" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:41:39.980" endtime="20201029 09:41:43.990"></status>
</kw>
<msg timestamp="20201029 09:41:43.991" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 09:41:39.977" endtime="20201029 09:41:43.991"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:41:43.996" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 09:41:43.993" endtime="20201029 09:41:43.997"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:41:43.998" endtime="20201029 09:41:44.003"></status>
</kw>
<status status="PASS" starttime="20201029 09:41:39.971" endtime="20201029 09:41:44.004"></status>
</kw>
<status status="PASS" starttime="20201029 09:41:39.966" endtime="20201029 09:41:44.006"></status>
</kw>
<status status="PASS" starttime="20201029 09:41:39.964" endtime="20201029 09:41:44.007"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 09:41:44.009" endtime="20201029 09:41:44.013"></status>
</kw>
<status status="PASS" starttime="20201029 09:41:39.962" endtime="20201029 09:41:44.014"></status>
</kw>
<kw name="${i} = 7" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:41:44.033" endtime="20201029 09:41:48.042"></status>
</kw>
<msg timestamp="20201029 09:41:48.043" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 09:41:44.029" endtime="20201029 09:41:48.043"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:41:48.045" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 09:41:48.044" endtime="20201029 09:41:48.045"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:41:48.046" endtime="20201029 09:41:48.047"></status>
</kw>
<status status="PASS" starttime="20201029 09:41:44.024" endtime="20201029 09:41:48.048"></status>
</kw>
<status status="PASS" starttime="20201029 09:41:44.019" endtime="20201029 09:41:48.048"></status>
</kw>
<status status="PASS" starttime="20201029 09:41:44.016" endtime="20201029 09:41:48.049"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 09:41:48.050" endtime="20201029 09:41:48.051"></status>
</kw>
<status status="PASS" starttime="20201029 09:41:44.014" endtime="20201029 09:41:48.051"></status>
</kw>
<kw name="${i} = 8" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:41:48.063" endtime="20201029 09:41:52.071"></status>
</kw>
<msg timestamp="20201029 09:41:52.072" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 09:41:48.061" endtime="20201029 09:41:52.073"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:41:52.077" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 09:41:52.074" endtime="20201029 09:41:52.078"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:41:52.080" endtime="20201029 09:41:52.083"></status>
</kw>
<status status="PASS" starttime="20201029 09:41:48.059" endtime="20201029 09:41:52.084"></status>
</kw>
<status status="PASS" starttime="20201029 09:41:48.054" endtime="20201029 09:41:52.085"></status>
</kw>
<status status="PASS" starttime="20201029 09:41:48.053" endtime="20201029 09:41:52.086"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 09:41:52.087" endtime="20201029 09:41:52.090"></status>
</kw>
<status status="PASS" starttime="20201029 09:41:48.052" endtime="20201029 09:41:52.091"></status>
</kw>
<kw name="${i} = 9" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:41:52.110" endtime="20201029 09:41:56.119"></status>
</kw>
<msg timestamp="20201029 09:41:56.120" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 09:41:52.107" endtime="20201029 09:41:56.121"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:41:56.125" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 09:41:56.123" endtime="20201029 09:41:56.126"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:41:56.128" endtime="20201029 09:41:56.131"></status>
</kw>
<status status="PASS" starttime="20201029 09:41:52.101" endtime="20201029 09:41:56.132"></status>
</kw>
<status status="PASS" starttime="20201029 09:41:52.096" endtime="20201029 09:41:56.133"></status>
</kw>
<status status="PASS" starttime="20201029 09:41:52.093" endtime="20201029 09:41:56.134"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 09:41:56.136" endtime="20201029 09:41:56.139"></status>
</kw>
<status status="PASS" starttime="20201029 09:41:52.092" endtime="20201029 09:41:56.139"></status>
</kw>
<kw name="${i} = 10" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:41:56.158" endtime="20201029 09:42:00.168"></status>
</kw>
<msg timestamp="20201029 09:42:00.169" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 09:41:56.155" endtime="20201029 09:42:00.169"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:42:00.174" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 09:42:00.171" endtime="20201029 09:42:00.174"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:42:00.176" endtime="20201029 09:42:00.179"></status>
</kw>
<status status="PASS" starttime="20201029 09:41:56.149" endtime="20201029 09:42:00.180"></status>
</kw>
<status status="PASS" starttime="20201029 09:41:56.144" endtime="20201029 09:42:00.181"></status>
</kw>
<status status="PASS" starttime="20201029 09:41:56.142" endtime="20201029 09:42:00.182"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 09:42:00.184" endtime="20201029 09:42:00.188"></status>
</kw>
<status status="PASS" starttime="20201029 09:41:56.140" endtime="20201029 09:42:00.188"></status>
</kw>
<kw name="${i} = 11" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:42:00.207" endtime="20201029 09:42:04.218"></status>
</kw>
<msg timestamp="20201029 09:42:04.219" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 09:42:00.204" endtime="20201029 09:42:04.220"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:42:04.224" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 09:42:04.221" endtime="20201029 09:42:04.225"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:42:04.227" endtime="20201029 09:42:04.232"></status>
</kw>
<status status="PASS" starttime="20201029 09:42:00.198" endtime="20201029 09:42:04.233"></status>
</kw>
<status status="PASS" starttime="20201029 09:42:00.193" endtime="20201029 09:42:04.234"></status>
</kw>
<status status="PASS" starttime="20201029 09:42:00.191" endtime="20201029 09:42:04.235"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 09:42:04.236" endtime="20201029 09:42:04.240"></status>
</kw>
<status status="PASS" starttime="20201029 09:42:00.189" endtime="20201029 09:42:04.240"></status>
</kw>
<kw name="${i} = 12" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:42:04.260" endtime="20201029 09:42:08.270"></status>
</kw>
<msg timestamp="20201029 09:42:08.271" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 09:42:04.257" endtime="20201029 09:42:08.271"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:42:08.276" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 09:42:08.273" endtime="20201029 09:42:08.276"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:42:08.278" endtime="20201029 09:42:08.281"></status>
</kw>
<status status="PASS" starttime="20201029 09:42:04.250" endtime="20201029 09:42:08.282"></status>
</kw>
<status status="PASS" starttime="20201029 09:42:04.245" endtime="20201029 09:42:08.283"></status>
</kw>
<status status="PASS" starttime="20201029 09:42:04.243" endtime="20201029 09:42:08.284"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 09:42:08.286" endtime="20201029 09:42:08.289"></status>
</kw>
<status status="PASS" starttime="20201029 09:42:04.241" endtime="20201029 09:42:08.289"></status>
</kw>
<kw name="${i} = 13" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:42:08.308" endtime="20201029 09:42:12.318"></status>
</kw>
<msg timestamp="20201029 09:42:12.319" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 09:42:08.305" endtime="20201029 09:42:12.319"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:42:12.324" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 09:42:12.321" endtime="20201029 09:42:12.325"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:42:12.326" endtime="20201029 09:42:12.330"></status>
</kw>
<status status="PASS" starttime="20201029 09:42:08.299" endtime="20201029 09:42:12.332"></status>
</kw>
<status status="PASS" starttime="20201029 09:42:08.294" endtime="20201029 09:42:12.333"></status>
</kw>
<status status="PASS" starttime="20201029 09:42:08.292" endtime="20201029 09:42:12.333"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 09:42:12.335" endtime="20201029 09:42:12.338"></status>
</kw>
<status status="PASS" starttime="20201029 09:42:08.290" endtime="20201029 09:42:12.338"></status>
</kw>
<kw name="${i} = 14" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:42:12.357" endtime="20201029 09:42:16.367"></status>
</kw>
<msg timestamp="20201029 09:42:16.368" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 09:42:12.354" endtime="20201029 09:42:16.368"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:42:16.373" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 09:42:16.370" endtime="20201029 09:42:16.374"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:42:16.375" endtime="20201029 09:42:16.379"></status>
</kw>
<status status="PASS" starttime="20201029 09:42:12.348" endtime="20201029 09:42:16.380"></status>
</kw>
<status status="PASS" starttime="20201029 09:42:12.344" endtime="20201029 09:42:16.381"></status>
</kw>
<status status="PASS" starttime="20201029 09:42:12.341" endtime="20201029 09:42:16.381"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 09:42:16.383" endtime="20201029 09:42:16.386"></status>
</kw>
<status status="PASS" starttime="20201029 09:42:12.339" endtime="20201029 09:42:16.387"></status>
</kw>
<kw name="${i} = 15" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:42:16.408" endtime="20201029 09:42:20.417"></status>
</kw>
<msg timestamp="20201029 09:42:20.418" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 09:42:16.405" endtime="20201029 09:42:20.419"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:42:20.424" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 09:42:20.421" endtime="20201029 09:42:20.424"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:42:20.426" endtime="20201029 09:42:20.429"></status>
</kw>
<status status="PASS" starttime="20201029 09:42:16.397" endtime="20201029 09:42:20.430"></status>
</kw>
<status status="PASS" starttime="20201029 09:42:16.392" endtime="20201029 09:42:20.431"></status>
</kw>
<status status="PASS" starttime="20201029 09:42:16.389" endtime="20201029 09:42:20.432"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 09:42:20.434" endtime="20201029 09:42:20.437"></status>
</kw>
<status status="PASS" starttime="20201029 09:42:16.387" endtime="20201029 09:42:20.437"></status>
</kw>
<status status="PASS" starttime="20201029 09:41:12.663" endtime="20201029 09:42:20.438"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<msg timestamp="20201029 09:42:20.443" level="FAIL">'Timeout' does not contain 'Success'</msg>
<status status="FAIL" starttime="20201029 09:42:20.439" endtime="20201029 09:42:20.444"></status>
</kw>
<status status="FAIL" starttime="20201029 09:41:12.660" endtime="20201029 09:42:20.445"></status>
</kw>
<status status="FAIL" starttime="20201029 09:41:12.656" endtime="20201029 09:42:20.446"></status>
</kw>
<status status="FAIL" starttime="20201029 09:41:12.625" endtime="20201029 09:42:20.447"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="FAIL" starttime="20201029 09:41:12.620" endtime="20201029 09:42:20.448" critical="yes">Setup failed:
'Timeout' does not contain 'Success'</status>
</test>
<status status="FAIL" starttime="20201029 09:36:01.380" endtime="20201029 09:42:20.471"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_ztimer_benchmarks</item>
<item name="RIOT-Board">arduino-due</item>
<item name="RIOT-Version">2020.07</item>
</metadata>
<status status="FAIL" starttime="20201029 09:35:47.048" endtime="20201029 09:42:20.544"></status>
</suite>
<statistics>
<total>
<stat pass="4" fail="6">Critical Tests</stat>
<stat pass="4" fail="6">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="4" fail="6">APP_tests_ztimer_benchmarks</stat>
<stat pass="4" fail="6">BOARD_arduino-due</stat>
<stat pass="4" fail="6">dev</stat>
</tag>
<suite>
<stat pass="4" fail="6" id="s1" name="tests_ztimer_benchmarks">tests_ztimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_ztimer_benchmarks.Timer Version</stat>
<stat pass="3" fail="6" id="s1-s2" name="Timer Overhead">tests_ztimer_benchmarks.Timer Overhead</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
