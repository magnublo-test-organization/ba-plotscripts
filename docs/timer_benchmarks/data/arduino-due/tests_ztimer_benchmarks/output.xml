<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201030 18:31:59.378" rpa="false">
<suite id="s1" name="tests_ztimer_benchmarks" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 18:32:02.990" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 18:32:02.998" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 18:32:04.150" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 18:32:02.988" endtime="20201030 18:32:04.152"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 18:32:07.157" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20201030 18:32:04.154" endtime="20201030 18:32:07.158"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:02.987" endtime="20201030 18:32:07.159"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:07.163" endtime="20201030 18:32:07.378"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:07.161" endtime="20201030 18:32:07.379"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:07.391" endtime="20201030 18:32:10.410"></status>
</kw>
<msg timestamp="20201030 18:32:10.410" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:07.390" endtime="20201030 18:32:10.411"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:10.413" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:10.412" endtime="20201030 18:32:10.414"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:32:10.417" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:32:10.414" endtime="20201030 18:32:10.417"></status>
</kw>
<status status="FAIL" starttime="20201030 18:32:07.387" endtime="20201030 18:32:10.418"></status>
</kw>
<status status="FAIL" starttime="20201030 18:32:07.385" endtime="20201030 18:32:10.418"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:07.384" endtime="20201030 18:32:10.419"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:32:10.424" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:32:10.423" endtime="20201030 18:32:10.424"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:10.420" endtime="20201030 18:32:10.425"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:07.383" endtime="20201030 18:32:10.425"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:07.382" endtime="20201030 18:32:10.425"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:10.426" endtime="20201030 18:32:10.427"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:07.381" endtime="20201030 18:32:10.428"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:10.429" endtime="20201030 18:32:10.430"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:07.379" endtime="20201030 18:32:10.431"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:02.985" endtime="20201030 18:32:10.431"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:10.438" endtime="20201030 18:32:10.457"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:10.436" endtime="20201030 18:32:10.458"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:10.471" endtime="20201030 18:32:13.492"></status>
</kw>
<msg timestamp="20201030 18:32:13.493" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:10.470" endtime="20201030 18:32:13.494"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:13.499" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:13.496" endtime="20201030 18:32:13.499"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:32:13.505" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:32:13.501" endtime="20201030 18:32:13.505"></status>
</kw>
<status status="FAIL" starttime="20201030 18:32:10.467" endtime="20201030 18:32:13.507"></status>
</kw>
<status status="FAIL" starttime="20201030 18:32:10.465" endtime="20201030 18:32:13.508"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:10.463" endtime="20201030 18:32:13.509"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:32:13.516" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:32:13.515" endtime="20201030 18:32:13.517"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:13.510" endtime="20201030 18:32:13.517"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:10.462" endtime="20201030 18:32:13.518"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:10.462" endtime="20201030 18:32:13.518"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:13.520" endtime="20201030 18:32:13.523"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:10.460" endtime="20201030 18:32:13.524"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:10.459" endtime="20201030 18:32:13.525"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:10.435" endtime="20201030 18:32:13.525"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:13.538" endtime="20201030 18:32:13.550"></status>
</kw>
<msg timestamp="20201030 18:32:13.550" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:13.535" endtime="20201030 18:32:13.551"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:13.553" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:13.551" endtime="20201030 18:32:13.553"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:13.554" endtime="20201030 18:32:13.555"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:13.530" endtime="20201030 18:32:13.556"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:13.527" endtime="20201030 18:32:13.556"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:13.560" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201030 18:32:13.559" endtime="20201030 18:32:13.561"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:13.562" level="INFO">VALUE: ztimer</msg>
<status status="PASS" starttime="20201030 18:32:13.561" endtime="20201030 18:32:13.563"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:13.557" endtime="20201030 18:32:13.563"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 18:32:10.432" endtime="20201030 18:32:13.564" critical="yes"></status>
</test>
<status status="PASS" starttime="20201030 18:31:59.501" endtime="20201030 18:32:13.567"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 18:32:13.623" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 18:32:13.631" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 18:32:14.752" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 18:32:13.622" endtime="20201030 18:32:14.753"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 18:32:17.755" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20201030 18:32:14.754" endtime="20201030 18:32:17.756"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:13.620" endtime="20201030 18:32:17.757"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:17.759" endtime="20201030 18:32:17.981"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:17.757" endtime="20201030 18:32:17.982"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:17.994" endtime="20201030 18:32:21.015"></status>
</kw>
<msg timestamp="20201030 18:32:21.016" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:17.992" endtime="20201030 18:32:21.016"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:21.021" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:21.018" endtime="20201030 18:32:21.022"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:32:21.027" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:32:21.023" endtime="20201030 18:32:21.028"></status>
</kw>
<status status="FAIL" starttime="20201030 18:32:17.990" endtime="20201030 18:32:21.029"></status>
</kw>
<status status="FAIL" starttime="20201030 18:32:17.988" endtime="20201030 18:32:21.030"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:17.987" endtime="20201030 18:32:21.031"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:32:21.038" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:32:21.037" endtime="20201030 18:32:21.039"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:21.033" endtime="20201030 18:32:21.040"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:17.986" endtime="20201030 18:32:21.040"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:17.985" endtime="20201030 18:32:21.041"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:21.042" endtime="20201030 18:32:21.045"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:17.984" endtime="20201030 18:32:21.046"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:21.048" endtime="20201030 18:32:21.051"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:17.982" endtime="20201030 18:32:21.052"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:13.619" endtime="20201030 18:32:21.053"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:21.066" endtime="20201030 18:32:21.088"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:21.061" endtime="20201030 18:32:21.089"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:21.112" endtime="20201030 18:32:24.133"></status>
</kw>
<msg timestamp="20201030 18:32:24.134" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:21.110" endtime="20201030 18:32:24.135"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:24.140" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:24.137" endtime="20201030 18:32:24.140"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:32:24.146" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:32:24.142" endtime="20201030 18:32:24.146"></status>
</kw>
<status status="FAIL" starttime="20201030 18:32:21.107" endtime="20201030 18:32:24.148"></status>
</kw>
<status status="FAIL" starttime="20201030 18:32:21.102" endtime="20201030 18:32:24.149"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:21.099" endtime="20201030 18:32:24.150"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:32:24.157" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:32:24.156" endtime="20201030 18:32:24.158"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:24.151" endtime="20201030 18:32:24.159"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:21.097" endtime="20201030 18:32:24.159"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:21.096" endtime="20201030 18:32:24.159"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:24.161" endtime="20201030 18:32:24.164"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:21.093" endtime="20201030 18:32:24.165"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:21.090" endtime="20201030 18:32:24.166"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:21.058" endtime="20201030 18:32:24.167"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:24.184" endtime="20201030 18:32:24.199"></status>
</kw>
<msg timestamp="20201030 18:32:24.200" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:24.181" endtime="20201030 18:32:24.200"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:24.202" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:24.201" endtime="20201030 18:32:24.202"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:24.203" endtime="20201030 18:32:24.205"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:24.175" endtime="20201030 18:32:24.205"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:24.172" endtime="20201030 18:32:24.206"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:24.212" endtime="20201030 18:32:24.499"></status>
</kw>
<msg timestamp="20201030 18:32:24.501" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.109856861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.109862931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:24.211" endtime="20201030 18:32:24.501"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:24.508" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.109856861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.109862931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:24.502" endtime="20201030 18:32:24.508"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:24.509" endtime="20201030 18:32:24.512"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:24.208" endtime="20201030 18:32:24.512"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:24.206" endtime="20201030 18:32:24.513"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:32:24.529" level="INFO">${debug} = {'diff': [0, 6.069999999969156e-06, 6.513000000207825e-06, 6.6389999999749705e-06, 6.167000000001366e-06, 5.792000000059971e-06, 6.568999999956304e-06, 5.874999999821995e-06, 5.070000000273467e-06, 6....</msg>
<status status="PASS" starttime="20201030 18:32:24.514" endtime="20201030 18:32:24.530"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:24.531" endtime="20201030 18:32:24.532"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:24.536" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:32:24.535" endtime="20201030 18:32:24.537"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:24.539" level="INFO">VALUE: {'diff': [0, 6.069999999969156e-06, 6.513000000207825e-06, 6.6389999999749705e-06, 6.167000000001366e-06, 5.792000000059971e-06, 6.568999999956304e-06, 5.874999999821995e-06, 5.070000000273467e-06, 6.8049999999431066e-06, 5.374999999752106e-06, 5.708000000215208e-06, 6.500000000020378e-06, 5.792000000059971e-06, 6.44499999991055e-06, 6.63799999989223e-06, 6.277999999859674e-06, 5.2500000000677005e-06, 5.9310000000145635e-06, 6.583000000226491e-06, 6.736000000007181e-06, 5.444999999770772e-06, 5.097000000287011e-06, 5.65299999966129e-06, 5.402000000209739e-06, 5.444999999770772e-06, 5.0690000001907265e-06, 6.625000000148873e-06, 6.8199999998519445e-06, 6.861000000135675e-06, 5.874999999821995e-06, 5.486000000054503e-06, 6.471999999924094e-06, 5.124999999939206e-06, 6.471999999924094e-06, 5.959000000110848e-06, 6.625000000148873e-06, 6.1659999999186255e-06, 6.389000000162071e-06, 5.680999999757574e-06, 5.971999999854205e-06, 6.514000000290565e-06, 6.110999999808797e-06, 5.556000000073169e-06, 6.679999999814612e-06, 6.347000000239689e-06, 5.375000000196195e-06, 6.44499999991055e-06, 6.6389999999749705e-06, 6.874999999961773e-06], 'eventsource_diff': [0, 6.069999999969156e-06, 6.513000000207825e-06, 6.6389999999749705e-06, 6.167000000001366e-06, 5.792000000059971e-06, 6.568999999956304e-06, 5.874999999821995e-06, 5.070000000273467e-06, 6.8049999999431066e-06, 5.374999999752106e-06, 5.708000000215208e-06, 6.500000000020378e-06, 5.792000000059971e-06, 6.44499999991055e-06, 6.63799999989223e-06, 6.277999999859674e-06, 5.2500000000677005e-06, 5.9310000000145635e-06, 6.583000000226491e-06, 6.736000000007181e-06, 5.444999999770772e-06, 5.097000000287011e-06, 5.65299999966129e-06, 5.402000000209739e-06, 5.444999999770772e-06, 5.0690000001907265e-06, 6.625000000148873e-06, 6.8199999998519445e-06, 6.861000000135675e-06, 5.874999999821995e-06, 5.486000000054503e-06, 6.471999999924094e-06, 5.124999999939206e-06, 6.471999999924094e-06, 5.959000000110848e-06, 6.625000000148873e-06, 6.1659999999186255e-06, 6.389000000162071e-06, 5.680999999757574e-06, 5.971999999854205e-06, 6.514000000290565e-06, 6.110999999808797e-06, 5.556000000073169e-06, 6.679999999814612e-06, 6.347000000239689e-06, 5.375000000196195e-06, 6.44499999991055e-06, 6.6389999999749705e-06, 6.874999999961773e-06], 'time': [3.109856861, 3.109862931, 3.109869444, 3.109876083, 3.10988225, 3.109888042, 3.109894611, 3.109900486, 3.109905556, 3.109912361, 3.109917736, 3.109923444, 3.109929944, 3.109935736, 3.109942181, 3.109948819, 3.109955097, 3.109960347, 3.109966278, 3.109972861, 3.109979597, 3.109985042, 3.109990139, 3.109995792, 3.110001194, 3.110006639, 3.110011708, 3.110018333, 3.110025153, 3.110032014, 3.110037889, 3.110043375, 3.110049847, 3.110054972, 3.110061444, 3.110067403, 3.110074028, 3.110080194, 3.110086583, 3.110092264, 3.110098236, 3.11010475, 3.110110861, 3.110116417, 3.110123097, 3.110129444, 3.110134819, 3.110141264, 3.110147903, 3.110154778], 'source}</msg>
<status status="PASS" starttime="20201030 18:32:24.537" endtime="20201030 18:32:24.540"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:24.533" endtime="20201030 18:32:24.540"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:24.544" level="INFO">${RESULT} = [{'diff': 6.069999999969156e-06}, {'diff': 6.6389999999749705e-06}, {'diff': 5.792000000059971e-06}, {'diff': 5.874999999821995e-06}, {'diff': 6.8049999999431066e-06}, {'diff': 5.708000000215208e-06},...</msg>
<status status="PASS" starttime="20201030 18:32:24.541" endtime="20201030 18:32:24.544"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:32:24.547" level="INFO">${GPIO_OVERHEAD} = {'diff': [6.069999999969156e-06, 6.6389999999749705e-06, 5.792000000059971e-06, 5.874999999821995e-06, 6.8049999999431066e-06, 5.708000000215208e-06, 5.792000000059971e-06, 6.63799999989223e-06, 5.250...</msg>
<status status="PASS" starttime="20201030 18:32:24.545" endtime="20201030 18:32:24.547"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:24.551" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:32:24.550" endtime="20201030 18:32:24.551"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:24.553" level="INFO">VALUE: [6.069999999969156e-06, 6.6389999999749705e-06, 5.792000000059971e-06, 5.874999999821995e-06, 6.8049999999431066e-06, 5.708000000215208e-06, 5.792000000059971e-06, 6.63799999989223e-06, 5.2500000000677005e-06, 6.583000000226491e-06, 5.444999999770772e-06, 5.65299999966129e-06, 5.444999999770772e-06, 6.625000000148873e-06, 6.861000000135675e-06, 5.486000000054503e-06, 5.124999999939206e-06, 5.959000000110848e-06, 6.1659999999186255e-06, 5.680999999757574e-06, 6.514000000290565e-06, 5.556000000073169e-06, 6.347000000239689e-06, 6.44499999991055e-06, 6.874999999961773e-06]</msg>
<status status="PASS" starttime="20201030 18:32:24.552" endtime="20201030 18:32:24.554"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:24.548" endtime="20201030 18:32:24.554"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:24.559" endtime="20201030 18:32:24.578"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:24.556" endtime="20201030 18:32:24.579"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:24.555" endtime="20201030 18:32:24.579"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:24.169" endtime="20201030 18:32:24.580"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:24.169" endtime="20201030 18:32:24.580"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:24.588" endtime="20201030 18:32:24.599"></status>
</kw>
<msg timestamp="20201030 18:32:24.599" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:24.586" endtime="20201030 18:32:24.599"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:24.601" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:24.600" endtime="20201030 18:32:24.602"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:24.602" endtime="20201030 18:32:24.604"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:24.584" endtime="20201030 18:32:24.605"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:24.582" endtime="20201030 18:32:24.605"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:24.612" endtime="20201030 18:32:24.880"></status>
</kw>
<msg timestamp="20201030 18:32:24.882" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017696389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01770225, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:32:24.610" endtime="20201030 18:32:24.882"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:24.887" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017696389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01770225, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:32:24.883" endtime="20201030 18:32:24.888"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:24.888" endtime="20201030 18:32:24.890"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:24.607" endtime="20201030 18:32:24.891"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:24.606" endtime="20201030 18:32:24.891"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:32:24.904" level="INFO">${debug} = {'diff': [0, 5.860999999999367e-06, 6.417000000001616e-06, 5.1389999999977565e-06, 6.083000000000477e-06, 5.819000000000657e-06, 5.0699999999993806e-06, 6.666000000002392e-06, 5.291999999997021e-06, 6...</msg>
<status status="PASS" starttime="20201030 18:32:24.892" endtime="20201030 18:32:24.905"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:24.906" endtime="20201030 18:32:24.907"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:24.911" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:32:24.910" endtime="20201030 18:32:24.911"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:24.914" level="INFO">VALUE: {'diff': [0, 5.860999999999367e-06, 6.417000000001616e-06, 5.1389999999977565e-06, 6.083000000000477e-06, 5.819000000000657e-06, 5.0699999999993806e-06, 6.666000000002392e-06, 5.291999999997021e-06, 6.278000000001921e-06, 6.749999999999812e-06, 5.680000000000962e-06, 5.2639999999978815e-06, 5.903000000001546e-06, 6.445000000000756e-06, 6.097000000000047e-06, 5.735999999999242e-06, 5.874999999998937e-06, 6.319000000001157e-06, 5.860999999999367e-06, 5.278000000000921e-06, 6.041999999997771e-06, 5.319000000000157e-06, 6.334000000000201e-06, 5.125000000001656e-06, 6.874999999999937e-06, 5.915999999998173e-06, 5.139000000001226e-06, 5.389000000001476e-06, 6.805999999998091e-06, 5.319000000000157e-06, 6.153000000001796e-06, 6.235999999999742e-06, 5.180999999999936e-06, 5.026999999997728e-06, 6.0979999999995205e-06, 5.500000000002031e-06, 5.762999999998908e-06, 6.792000000001991e-06, 6.624999999999687e-06, 5.556000000000311e-06, 6.513999999999132e-06, 5.332999999999727e-06, 5.708000000000102e-06, 5.4589999999993255e-06, 5.930000000001212e-06, 5.402999999997576e-06, 6.611000000000117e-06, 5.431000000000186e-06, 6.583000000000977e-06], 'eventsource_diff': [0, 5.860999999999367e-06, 6.417000000001616e-06, 5.1389999999977565e-06, 6.083000000000477e-06, 5.819000000000657e-06, 5.0699999999993806e-06, 6.666000000002392e-06, 5.291999999997021e-06, 6.278000000001921e-06, 6.749999999999812e-06, 5.680000000000962e-06, 5.2639999999978815e-06, 5.903000000001546e-06, 6.445000000000756e-06, 6.097000000000047e-06, 5.735999999999242e-06, 5.874999999998937e-06, 6.319000000001157e-06, 5.860999999999367e-06, 5.278000000000921e-06, 6.041999999997771e-06, 5.319000000000157e-06, 6.334000000000201e-06, 5.125000000001656e-06, 6.874999999999937e-06, 5.915999999998173e-06, 5.139000000001226e-06, 5.389000000001476e-06, 6.805999999998091e-06, 5.319000000000157e-06, 6.153000000001796e-06, 6.235999999999742e-06, 5.180999999999936e-06, 5.026999999997728e-06, 6.0979999999995205e-06, 5.500000000002031e-06, 5.762999999998908e-06, 6.792000000001991e-06, 6.624999999999687e-06, 5.556000000000311e-06, 6.513999999999132e-06, 5.332999999999727e-06, 5.708000000000102e-06, 5.4589999999993255e-06, 5.930000000001212e-06, 5.402999999997576e-06, 6.611000000000117e-06, 5.431000000000186e-06, 6.583000000000977e-06], 'time': [0.017696389, 0.01770225, 0.017708667, 0.017713806, 0.017719889, 0.017725708, 0.017730778, 0.017737444, 0.017742736, 0.017749014, 0.017755764, 0.017761444, 0.017766708, 0.017772611, 0.017779056, 0.017785153, 0.017790889, 0.017796764, 0.017803083, 0.017808944, 0.017814222, 0.017820264, 0.017825583, 0.017831917, 0.017837042, 0.017843917, 0.017849833, 0.017854972, 0.017860361, 0.017867167, 0.017872486, 0.017878639, 0.017884875, 0.017890056, 0.017895083, 0.017901181, 0.017906681, 0.017912444, 0.017919236, 0.017925861, 0.017931417, 0.017937931, 0.017943264, 0.017948972, 0.017954431, 0.017960361, 0.017965764, 0.017972375, 0.017977806, 0.017984389], 'source}</msg>
<status status="PASS" starttime="20201030 18:32:24.912" endtime="20201030 18:32:24.915"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:24.908" endtime="20201030 18:32:24.915"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:24.919" level="INFO">${RESULT} = [{'diff': 5.860999999999367e-06}, {'diff': 5.1389999999977565e-06}, {'diff': 5.819000000000657e-06}, {'diff': 6.666000000002392e-06}, {'diff': 6.278000000001921e-06}, {'diff': 5.680000000000962e-06}, ...</msg>
<status status="PASS" starttime="20201030 18:32:24.916" endtime="20201030 18:32:24.919"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:32:24.922" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.860999999999367e-06, 5.1389999999977565e-06, 5.819000000000657e-06, 6.666000000002392e-06, 6.278000000001921e-06, 5.680000000000962e-06, 5.903000000001546e-06, 6.097000000000047e-06, 5.874...</msg>
<status status="PASS" starttime="20201030 18:32:24.920" endtime="20201030 18:32:24.923"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:24.927" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:32:24.926" endtime="20201030 18:32:24.927"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:24.929" level="INFO">VALUE: [5.860999999999367e-06, 5.1389999999977565e-06, 5.819000000000657e-06, 6.666000000002392e-06, 6.278000000001921e-06, 5.680000000000962e-06, 5.903000000001546e-06, 6.097000000000047e-06, 5.874999999998937e-06, 5.860999999999367e-06, 6.041999999997771e-06, 6.334000000000201e-06, 6.874999999999937e-06, 5.139000000001226e-06, 6.805999999998091e-06, 6.153000000001796e-06, 5.180999999999936e-06, 6.0979999999995205e-06, 5.762999999998908e-06, 6.624999999999687e-06, 6.513999999999132e-06, 5.708000000000102e-06, 5.930000000001212e-06, 6.611000000000117e-06, 6.583000000000977e-06]</msg>
<status status="PASS" starttime="20201030 18:32:24.928" endtime="20201030 18:32:24.929"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:24.923" endtime="20201030 18:32:24.930"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:24.933" endtime="20201030 18:32:24.953"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:24.932" endtime="20201030 18:32:24.953"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:24.931" endtime="20201030 18:32:24.954"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:24.581" endtime="20201030 18:32:24.954"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:24.580" endtime="20201030 18:32:24.954"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:24.962" endtime="20201030 18:32:24.974"></status>
</kw>
<msg timestamp="20201030 18:32:24.975" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:24.960" endtime="20201030 18:32:24.975"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:24.977" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:24.976" endtime="20201030 18:32:24.977"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:24.978" endtime="20201030 18:32:24.980"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:24.958" endtime="20201030 18:32:24.980"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:24.956" endtime="20201030 18:32:24.981"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:24.987" endtime="20201030 18:32:25.254"></status>
</kw>
<msg timestamp="20201030 18:32:25.256" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017528236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017533917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:24.985" endtime="20201030 18:32:25.256"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:25.261" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017528236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017533917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:25.257" endtime="20201030 18:32:25.262"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:25.262" endtime="20201030 18:32:25.264"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:24.983" endtime="20201030 18:32:25.265"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:24.981" endtime="20201030 18:32:25.265"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:32:25.280" level="INFO">${debug} = {'diff': [0, 5.681000000000436e-06, 6.638999999999257e-06, 6.874999999999937e-06, 5.375000000001906e-06, 6.097000000000047e-06, 6.083000000000477e-06, 6.041999999997771e-06, 5.041000000000767e-06, 6.7...</msg>
<status status="PASS" starttime="20201030 18:32:25.266" endtime="20201030 18:32:25.280"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:25.281" endtime="20201030 18:32:25.282"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:25.286" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:32:25.285" endtime="20201030 18:32:25.286"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:25.289" level="INFO">VALUE: {'diff': [0, 5.681000000000436e-06, 6.638999999999257e-06, 6.874999999999937e-06, 5.375000000001906e-06, 6.097000000000047e-06, 6.083000000000477e-06, 6.041999999997771e-06, 5.041000000000767e-06, 6.792000000001991e-06, 5.805999999997091e-06, 6.624999999999687e-06, 6.360999999999867e-06, 6.722000000000672e-06, 5.875000000002406e-06, 6.0279999999982015e-06, 5.791000000001517e-06, 5.681000000000436e-06, 5.4439999999968125e-06, 5.750000000002281e-06, 5.8479999999992704e-06, 5.555000000000837e-06, 5.042000000000241e-06, 5.860999999999367e-06, 6.306000000001061e-06, 6.5829999999975075e-06, 5.153000000000796e-06, 6.555000000001837e-06, 6.4029999999985765e-06, 5.374999999998437e-06, 6.333000000000727e-06, 6.528000000002171e-06, 5.2639999999978815e-06, 5.207999999999602e-06, 5.08400000000242e-06, 6.0689999999974376e-06, 5.403000000001046e-06, 6.736000000000242e-06, 5.971999999999922e-06, 6.695000000001006e-06, 5.319000000000157e-06, 5.457999999999852e-06, 6.749999999999812e-06, 6.445000000000756e-06, 6.860999999996897e-06, 5.806000000000561e-06, 6.110999999999617e-06, 5.305000000000587e-06, 6.763999999999382e-06, 6.611000000000117e-06], 'eventsource_diff': [0, 5.681000000000436e-06, 6.638999999999257e-06, 6.874999999999937e-06, 5.375000000001906e-06, 6.097000000000047e-06, 6.083000000000477e-06, 6.041999999997771e-06, 5.041000000000767e-06, 6.792000000001991e-06, 5.805999999997091e-06, 6.624999999999687e-06, 6.360999999999867e-06, 6.722000000000672e-06, 5.875000000002406e-06, 6.0279999999982015e-06, 5.791000000001517e-06, 5.681000000000436e-06, 5.4439999999968125e-06, 5.750000000002281e-06, 5.8479999999992704e-06, 5.555000000000837e-06, 5.042000000000241e-06, 5.860999999999367e-06, 6.306000000001061e-06, 6.5829999999975075e-06, 5.153000000000796e-06, 6.555000000001837e-06, 6.4029999999985765e-06, 5.374999999998437e-06, 6.333000000000727e-06, 6.528000000002171e-06, 5.2639999999978815e-06, 5.207999999999602e-06, 5.08400000000242e-06, 6.0689999999974376e-06, 5.403000000001046e-06, 6.736000000000242e-06, 5.971999999999922e-06, 6.695000000001006e-06, 5.319000000000157e-06, 5.457999999999852e-06, 6.749999999999812e-06, 6.445000000000756e-06, 6.860999999996897e-06, 5.806000000000561e-06, 6.110999999999617e-06, 5.305000000000587e-06, 6.763999999999382e-06, 6.611000000000117e-06], 'time': [0.017528236, 0.017533917, 0.017540556, 0.017547431, 0.017552806, 0.017558903, 0.017564986, 0.017571028, 0.017576069, 0.017582861, 0.017588667, 0.017595292, 0.017601653, 0.017608375, 0.01761425, 0.017620278, 0.017626069, 0.01763175, 0.017637194, 0.017642944, 0.017648792, 0.017654347, 0.017659389, 0.01766525, 0.017671556, 0.017678139, 0.017683292, 0.017689847, 0.01769625, 0.017701625, 0.017707958, 0.017714486, 0.01771975, 0.017724958, 0.017730042, 0.017736111, 0.017741514, 0.01774825, 0.017754222, 0.017760917, 0.017766236, 0.017771694, 0.017778444, 0.017784889, 0.01779175, 0.017797556, 0.017803667, 0.017808972, 0.017815736, 0.017822347], 'source}</msg>
<status status="PASS" starttime="20201030 18:32:25.287" endtime="20201030 18:32:25.290"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:25.283" endtime="20201030 18:32:25.290"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:25.293" level="INFO">${RESULT} = [{'diff': 5.681000000000436e-06}, {'diff': 6.874999999999937e-06}, {'diff': 6.097000000000047e-06}, {'diff': 6.041999999997771e-06}, {'diff': 6.792000000001991e-06}, {'diff': 6.624999999999687e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:32:25.291" endtime="20201030 18:32:25.294"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:32:25.297" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.681000000000436e-06, 6.874999999999937e-06, 6.097000000000047e-06, 6.041999999997771e-06, 6.792000000001991e-06, 6.624999999999687e-06, 6.722000000000672e-06, 6.0279999999982015e-06, 5.681...</msg>
<status status="PASS" starttime="20201030 18:32:25.294" endtime="20201030 18:32:25.297"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:25.301" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:32:25.300" endtime="20201030 18:32:25.301"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:25.303" level="INFO">VALUE: [5.681000000000436e-06, 6.874999999999937e-06, 6.097000000000047e-06, 6.041999999997771e-06, 6.792000000001991e-06, 6.624999999999687e-06, 6.722000000000672e-06, 6.0279999999982015e-06, 5.681000000000436e-06, 5.750000000002281e-06, 5.555000000000837e-06, 5.860999999999367e-06, 6.5829999999975075e-06, 6.555000000001837e-06, 5.374999999998437e-06, 6.528000000002171e-06, 5.207999999999602e-06, 6.0689999999974376e-06, 6.736000000000242e-06, 6.695000000001006e-06, 5.457999999999852e-06, 6.445000000000756e-06, 5.806000000000561e-06, 5.305000000000587e-06, 6.611000000000117e-06]</msg>
<status status="PASS" starttime="20201030 18:32:25.302" endtime="20201030 18:32:25.303"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:25.297" endtime="20201030 18:32:25.304"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:25.308" endtime="20201030 18:32:25.329"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:25.306" endtime="20201030 18:32:25.329"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:25.305" endtime="20201030 18:32:25.330"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:24.955" endtime="20201030 18:32:25.330"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:24.954" endtime="20201030 18:32:25.330"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:25.338" endtime="20201030 18:32:25.349"></status>
</kw>
<msg timestamp="20201030 18:32:25.349" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:25.336" endtime="20201030 18:32:25.349"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:25.352" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:25.350" endtime="20201030 18:32:25.352"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:25.353" endtime="20201030 18:32:25.354"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:25.334" endtime="20201030 18:32:25.355"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:25.332" endtime="20201030 18:32:25.355"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:25.364" endtime="20201030 18:32:25.632"></status>
</kw>
<msg timestamp="20201030 18:32:25.633" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017521708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017526722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:25.362" endtime="20201030 18:32:25.634"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:25.639" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017521708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017526722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:25.635" endtime="20201030 18:32:25.639"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:25.640" endtime="20201030 18:32:25.642"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:25.358" endtime="20201030 18:32:25.642"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:25.356" endtime="20201030 18:32:25.643"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:32:25.655" level="INFO">${debug} = {'diff': [0, 5.014000000001101e-06, 5.874999999998937e-06, 6.736000000000242e-06, 6.110999999999617e-06, 6.1389999999987566e-06, 6.570000000000881e-06, 6.874999999999937e-06, 6.804999999998618e-06, 5....</msg>
<status status="PASS" starttime="20201030 18:32:25.643" endtime="20201030 18:32:25.656"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:25.657" endtime="20201030 18:32:25.658"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:25.662" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:32:25.661" endtime="20201030 18:32:25.662"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:25.665" level="INFO">VALUE: {'diff': [0, 5.014000000001101e-06, 5.874999999998937e-06, 6.736000000000242e-06, 6.110999999999617e-06, 6.1389999999987566e-06, 6.570000000000881e-06, 6.874999999999937e-06, 6.804999999998618e-06, 5.861000000002836e-06, 5.0839999999989505e-06, 5.444000000000282e-06, 6.874999999999937e-06, 5.374999999998437e-06, 5.500000000002031e-06, 5.695000000000006e-06, 5.540999999997798e-06, 5.985999999999492e-06, 6.806000000001561e-06, 5.499999999998562e-06, 5.681000000000436e-06, 6.569000000001407e-06, 5.624999999998687e-06, 6.514000000002601e-06, 5.971999999999922e-06, 6.763999999999382e-06, 5.374999999998437e-06, 5.139000000001226e-06, 6.583000000000977e-06, 6.2779999999984515e-06, 6.153000000001796e-06, 6.693999999998063e-06, 5.624999999998687e-06, 5.000000000001531e-06, 5.681000000000436e-06, 5.735999999999242e-06, 6.292000000001491e-06, 6.499999999999562e-06, 6.874999999999937e-06, 5.512999999998658e-06, 5.7229999999991454e-06, 5.319000000000157e-06, 6.153000000001796e-06, 5.624999999998687e-06, 6.694000000001532e-06, 6.2090000000000756e-06, 5.555000000000837e-06, 6.097000000000047e-06, 5.277999999997451e-06, 5.1949999999995056e-06], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING'], 'source_diff': [0, 5.014000000001101e-06, 5.874999999998937e-06, 6.736000000000242e-06, 6.110999999999617e-06, 6.1389999999987566e-06, 6.570000000000881e-06, 6.874999999999937e-06, 6.804999999998618e-06, 5.861000000002836e-06, 5.0839999999989505e-06, 5.444000000000282e-06, 6.874999999999937e-06, 5.374999999998437e-06, 5.500000000002031e-06, 5.695000000000006e-06, 5.540999999997798e-06, 5.985999999999492e-06, 6.806000000001561e-06, 5.499999999998562e-06, 5.681000000000436e-06, 6.569000000001407e-06, 5.624999999998687e-06, 6.514000000002601e-06, 5.971999999999922e-06, 6.763999999999382e-06, 5.374999999998437e-06, 5.139000000001226e-06, 6.583000000000977e-06, 6.2779999999984515e-06, 6.153000000001796e-06, 6.693999999998063e-06, 5.624999999998687e-06, 5.000000000001531e-06, 5.681000000000436e-06, 5.735999999999242e-06, 6.292000000001491e-06, 6.499999999999562e-06, 6.874999999999937e-06, 5.512999999998658e-06, 5.7229999999991454e-06, 5.319000000000157e-06, 6.153000000001796e-06, 5.624999999998687e-06, 6.694000000001532e-06, 6.2090000000000756e-06, 5.555000000000837e-06, 6.097000000000047e-06, 5.277999999997451e-06, 5.1949999999995056e-06], 'time': [0.017521708, 0.017526722, 0.017532597, 0.017539333, 0.017545444, 0.017551583, 0.017558153, 0.017565028, 0.017571833, 0.017577694, 0.017582778, 0.017588222, 0.017595097, 0.017600472, 0.017605972, 0.017611667, 0.017617208, 0.017623194, 0.01763, 0.0176355, 0.017641181, 0.01764775, 0.017653375, 0.017659889, 0.017665861, 0.017672625, 0.017678, 0.017683139, 0.017689722, 0.017696, 0.017702153, 0.017708847, 0.017714472, 0.017719472, 0.017725153, 0.017730889, 0.017737181, 0.017743681, 0.017750556, 0.017756069, 0.017761792, 0.017767111, 0.017773264, 0.017778889, 0.017785583, 0.017791792, 0.017797347, 0.017803444, 0.017808722, 0.017813917], 'source}</msg>
<status status="PASS" starttime="20201030 18:32:25.663" endtime="20201030 18:32:25.666"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:25.659" endtime="20201030 18:32:25.666"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:25.670" level="INFO">${RESULT} = [{'diff': 5.014000000001101e-06}, {'diff': 6.736000000000242e-06}, {'diff': 6.1389999999987566e-06}, {'diff': 6.874999999999937e-06}, {'diff': 5.861000000002836e-06}, {'diff': 5.444000000000282e-06}, ...</msg>
<status status="PASS" starttime="20201030 18:32:25.667" endtime="20201030 18:32:25.670"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:32:25.673" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.014000000001101e-06, 6.736000000000242e-06, 6.1389999999987566e-06, 6.874999999999937e-06, 5.861000000002836e-06, 5.444000000000282e-06, 5.374999999998437e-06, 5.695000000000006e-06, 5.985...</msg>
<status status="PASS" starttime="20201030 18:32:25.671" endtime="20201030 18:32:25.673"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:25.677" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:32:25.676" endtime="20201030 18:32:25.677"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:25.679" level="INFO">VALUE: [5.014000000001101e-06, 6.736000000000242e-06, 6.1389999999987566e-06, 6.874999999999937e-06, 5.861000000002836e-06, 5.444000000000282e-06, 5.374999999998437e-06, 5.695000000000006e-06, 5.985999999999492e-06, 5.499999999998562e-06, 6.569000000001407e-06, 6.514000000002601e-06, 6.763999999999382e-06, 5.139000000001226e-06, 6.2779999999984515e-06, 6.693999999998063e-06, 5.000000000001531e-06, 5.735999999999242e-06, 6.499999999999562e-06, 5.512999999998658e-06, 5.319000000000157e-06, 5.624999999998687e-06, 6.2090000000000756e-06, 6.097000000000047e-06, 5.1949999999995056e-06]</msg>
<status status="PASS" starttime="20201030 18:32:25.678" endtime="20201030 18:32:25.679"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:25.673" endtime="20201030 18:32:25.680"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:25.683" endtime="20201030 18:32:25.703"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:25.682" endtime="20201030 18:32:25.704"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:25.681" endtime="20201030 18:32:25.704"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:25.331" endtime="20201030 18:32:25.704"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:25.330" endtime="20201030 18:32:25.704"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:25.713" endtime="20201030 18:32:25.725"></status>
</kw>
<msg timestamp="20201030 18:32:25.725" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:25.711" endtime="20201030 18:32:25.725"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:25.728" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:25.726" endtime="20201030 18:32:25.728"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:25.729" endtime="20201030 18:32:25.730"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:25.708" endtime="20201030 18:32:25.731"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:25.706" endtime="20201030 18:32:25.731"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:25.738" endtime="20201030 18:32:26.004"></status>
</kw>
<msg timestamp="20201030 18:32:26.006" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018292514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018298486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:25.736" endtime="20201030 18:32:26.006"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:26.011" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018292514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018298486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:26.007" endtime="20201030 18:32:26.012"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:26.012" endtime="20201030 18:32:26.014"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:25.733" endtime="20201030 18:32:26.015"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:25.732" endtime="20201030 18:32:26.015"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:32:26.029" level="INFO">${debug} = {'diff': [0, 5.971999999999922e-06, 6.638999999999257e-06, 5.625000000002156e-06, 6.693999999998063e-06, 6.570000000000881e-06, 5.485999999998992e-06, 5.708000000000102e-06, 5.055999999999811e-06, 6.0...</msg>
<status status="PASS" starttime="20201030 18:32:26.016" endtime="20201030 18:32:26.029"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:26.030" endtime="20201030 18:32:26.031"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:26.035" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:32:26.034" endtime="20201030 18:32:26.035"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:26.038" level="INFO">VALUE: {'diff': [0, 5.971999999999922e-06, 6.638999999999257e-06, 5.625000000002156e-06, 6.693999999998063e-06, 6.570000000000881e-06, 5.485999999998992e-06, 5.708000000000102e-06, 5.055999999999811e-06, 6.097000000000047e-06, 5.389000000001476e-06, 6.028000000001671e-06, 5.6939999999970625e-06, 5.971999999999922e-06, 6.389000000002476e-06, 6.334000000000201e-06, 6.151999999998853e-06, 5.389000000001476e-06, 5.152999999997326e-06, 6.306000000001061e-06, 5.6389999999982565e-06, 5.736000000002711e-06, 5.915999999998173e-06, 6.292000000001491e-06, 6.0139999999986316e-06, 5.319000000000157e-06, 6.0979999999995205e-06, 6.874999999999937e-06, 6.749999999999812e-06, 6.097000000000047e-06, 5.861000000002836e-06, 6.3329999999972575e-06, 5.125000000001656e-06, 5.931000000000686e-06, 5.444000000000282e-06, 6.374999999999437e-06, 6.7919999999985214e-06, 6.153000000001796e-06, 5.471999999999422e-06, 5.292000000000491e-06, 5.596999999999547e-06, 5.735999999999242e-06, 6.679999999998493e-06, 6.292000000001491e-06, 6.2779999999984515e-06, 6.389000000002476e-06, 5.555000000000837e-06, 5.3339999999992005e-06, 5.068999999999907e-06, 5.346999999999297e-06], 'eventsource_diff': [0, 5.971999999999922e-06, 6.638999999999257e-06, 5.625000000002156e-06, 6.693999999998063e-06, 6.570000000000881e-06, 5.485999999998992e-06, 5.708000000000102e-06, 5.055999999999811e-06, 6.097000000000047e-06, 5.389000000001476e-06, 6.028000000001671e-06, 5.6939999999970625e-06, 5.971999999999922e-06, 6.389000000002476e-06, 6.334000000000201e-06, 6.151999999998853e-06, 5.389000000001476e-06, 5.152999999997326e-06, 6.306000000001061e-06, 5.6389999999982565e-06, 5.736000000002711e-06, 5.915999999998173e-06, 6.292000000001491e-06, 6.0139999999986316e-06, 5.319000000000157e-06, 6.0979999999995205e-06, 6.874999999999937e-06, 6.749999999999812e-06, 6.097000000000047e-06, 5.861000000002836e-06, 6.3329999999972575e-06, 5.125000000001656e-06, 5.931000000000686e-06, 5.444000000000282e-06, 6.374999999999437e-06, 6.7919999999985214e-06, 6.153000000001796e-06, 5.471999999999422e-06, 5.292000000000491e-06, 5.596999999999547e-06, 5.735999999999242e-06, 6.679999999998493e-06, 6.292000000001491e-06, 6.2779999999984515e-06, 6.389000000002476e-06, 5.555000000000837e-06, 5.3339999999992005e-06, 5.068999999999907e-06, 5.346999999999297e-06], 'time': [0.018292514, 0.018298486, 0.018305125, 0.01831075, 0.018317444, 0.018324014, 0.0183295, 0.018335208, 0.018340264, 0.018346361, 0.01835175, 0.018357778, 0.018363472, 0.018369444, 0.018375833, 0.018382167, 0.018388319, 0.018393708, 0.018398861, 0.018405167, 0.018410806, 0.018416542, 0.018422458, 0.01842875, 0.018434764, 0.018440083, 0.018446181, 0.018453056, 0.018459806, 0.018465903, 0.018471764, 0.018478097, 0.018483222, 0.018489153, 0.018494597, 0.018500972, 0.018507764, 0.018513917, 0.018519389, 0.018524681, 0.018530278, 0.018536014, 0.018542694, 0.018548986, 0.018555264, 0.018561653, 0.018567208, 0.018572542, 0.018577611, 0.018582958], 'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC']}</msg>
<status status="PASS" starttime="20201030 18:32:26.036" endtime="20201030 18:32:26.039"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:26.032" endtime="20201030 18:32:26.039"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:26.042" level="INFO">${RESULT} = [{'diff': 5.971999999999922e-06}, {'diff': 5.625000000002156e-06}, {'diff': 6.570000000000881e-06}, {'diff': 5.708000000000102e-06}, {'diff': 6.097000000000047e-06}, {'diff': 6.028000000001671e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:32:26.040" endtime="20201030 18:32:26.043"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:32:26.046" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.971999999999922e-06, 5.625000000002156e-06, 6.570000000000881e-06, 5.708000000000102e-06, 6.097000000000047e-06, 6.028000000001671e-06, 5.971999999999922e-06, 6.334000000000201e-06, 5.3890...</msg>
<status status="PASS" starttime="20201030 18:32:26.043" endtime="20201030 18:32:26.046"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:26.050" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:32:26.049" endtime="20201030 18:32:26.050"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:26.052" level="INFO">VALUE: [5.971999999999922e-06, 5.625000000002156e-06, 6.570000000000881e-06, 5.708000000000102e-06, 6.097000000000047e-06, 6.028000000001671e-06, 5.971999999999922e-06, 6.334000000000201e-06, 5.389000000001476e-06, 6.306000000001061e-06, 5.736000000002711e-06, 6.292000000001491e-06, 5.319000000000157e-06, 6.874999999999937e-06, 6.097000000000047e-06, 6.3329999999972575e-06, 5.931000000000686e-06, 6.374999999999437e-06, 6.153000000001796e-06, 5.292000000000491e-06, 5.735999999999242e-06, 6.292000000001491e-06, 6.389000000002476e-06, 5.3339999999992005e-06, 5.346999999999297e-06]</msg>
<status status="PASS" starttime="20201030 18:32:26.051" endtime="20201030 18:32:26.053"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:26.046" endtime="20201030 18:32:26.053"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:26.058" endtime="20201030 18:32:26.077"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:26.055" endtime="20201030 18:32:26.078"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:26.054" endtime="20201030 18:32:26.078"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:25.705" endtime="20201030 18:32:26.078"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:25.705" endtime="20201030 18:32:26.078"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:26.086" endtime="20201030 18:32:26.097"></status>
</kw>
<msg timestamp="20201030 18:32:26.097" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:26.085" endtime="20201030 18:32:26.097"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:26.100" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:26.098" endtime="20201030 18:32:26.100"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:26.101" endtime="20201030 18:32:26.102"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:26.082" endtime="20201030 18:32:26.103"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:26.080" endtime="20201030 18:32:26.103"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:26.110" endtime="20201030 18:32:26.377"></status>
</kw>
<msg timestamp="20201030 18:32:26.378" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017556375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017561875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:26.108" endtime="20201030 18:32:26.379"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:26.384" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017556375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017561875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:26.380" endtime="20201030 18:32:26.384"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:26.385" endtime="20201030 18:32:26.387"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:26.105" endtime="20201030 18:32:26.387"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:26.104" endtime="20201030 18:32:26.387"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:32:26.401" level="INFO">${debug} = {'diff': [0, 5.500000000002031e-06, 6.124999999999187e-06, 5.292000000000491e-06, 5.444000000000282e-06, 5.457999999999852e-06, 5.5979999999990204e-06, 5.221999999999172e-06, 5.542000000000741e-06, 6....</msg>
<status status="PASS" starttime="20201030 18:32:26.388" endtime="20201030 18:32:26.401"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:26.402" endtime="20201030 18:32:26.404"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:26.408" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:32:26.407" endtime="20201030 18:32:26.408"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:26.411" level="INFO">VALUE: {'diff': [0, 5.500000000002031e-06, 6.124999999999187e-06, 5.292000000000491e-06, 5.444000000000282e-06, 5.457999999999852e-06, 5.5979999999990204e-06, 5.221999999999172e-06, 5.542000000000741e-06, 6.861000000000367e-06, 5.569000000000407e-06, 5.2639999999978815e-06, 6.806000000001561e-06, 5.680000000000962e-06, 5.735999999999242e-06, 5.319999999999631e-06, 6.569000000001407e-06, 6.041999999997771e-06, 6.458000000000852e-06, 6.1389999999987566e-06, 6.056000000000811e-06, 6.333000000000727e-06, 6.569000000001407e-06, 6.583999999996981e-06, 6.805000000002087e-06, 6.638999999999257e-06, 5.485999999998992e-06, 6.806000000001561e-06, 5.985999999999492e-06, 5.139000000001226e-06, 5.915999999998173e-06, 6.695000000001006e-06, 5.930000000001212e-06, 6.680999999997966e-06, 6.028000000001671e-06, 5.804999999997618e-06, 6.514000000002601e-06, 6.569999999997411e-06, 5.194000000000032e-06, 6.110999999999617e-06, 6.445000000000756e-06, 5.194000000000032e-06, 6.167000000001366e-06, 6.874999999999937e-06, 5.235999999998742e-06, 5.417000000000616e-06, 5.125000000001656e-06, 5.374999999998437e-06, 5.402000000001572e-06, 5.916999999997646e-06], 'eventsource_diff': [0, 5.500000000002031e-06, 6.124999999999187e-06, 5.292000000000491e-06, 5.444000000000282e-06, 5.457999999999852e-06, 5.5979999999990204e-06, 5.221999999999172e-06, 5.542000000000741e-06, 6.861000000000367e-06, 5.569000000000407e-06, 5.2639999999978815e-06, 6.806000000001561e-06, 5.680000000000962e-06, 5.735999999999242e-06, 5.319999999999631e-06, 6.569000000001407e-06, 6.041999999997771e-06, 6.458000000000852e-06, 6.1389999999987566e-06, 6.056000000000811e-06, 6.333000000000727e-06, 6.569000000001407e-06, 6.583999999996981e-06, 6.805000000002087e-06, 6.638999999999257e-06, 5.485999999998992e-06, 6.806000000001561e-06, 5.985999999999492e-06, 5.139000000001226e-06, 5.915999999998173e-06, 6.695000000001006e-06, 5.930000000001212e-06, 6.680999999997966e-06, 6.028000000001671e-06, 5.804999999997618e-06, 6.514000000002601e-06, 6.569999999997411e-06, 5.194000000000032e-06, 6.110999999999617e-06, 6.445000000000756e-06, 5.194000000000032e-06, 6.167000000001366e-06, 6.874999999999937e-06, 5.235999999998742e-06, 5.417000000000616e-06, 5.125000000001656e-06, 5.374999999998437e-06, 5.402000000001572e-06, 5.916999999997646e-06], 'time': [0.017556375, 0.017561875, 0.017568, 0.017573292, 0.017578736, 0.017584194, 0.017589792, 0.017595014, 0.017600556, 0.017607417, 0.017612986, 0.01761825, 0.017625056, 0.017630736, 0.017636472, 0.017641792, 0.017648361, 0.017654403, 0.017660861, 0.017667, 0.017673056, 0.017679389, 0.017685958, 0.017692542, 0.017699347, 0.017705986, 0.017711472, 0.017718278, 0.017724264, 0.017729403, 0.017735319, 0.017742014, 0.017747944, 0.017754625, 0.017760653, 0.017766458, 0.017772972, 0.017779542, 0.017784736, 0.017790847, 0.017797292, 0.017802486, 0.017808653, 0.017815528, 0.017820764, 0.017826181, 0.017831306, 0.017836681, 0.017842083, 0.017848], 'source}</msg>
<status status="PASS" starttime="20201030 18:32:26.409" endtime="20201030 18:32:26.412"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:26.405" endtime="20201030 18:32:26.412"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:26.415" level="INFO">${RESULT} = [{'diff': 5.500000000002031e-06}, {'diff': 5.292000000000491e-06}, {'diff': 5.457999999999852e-06}, {'diff': 5.221999999999172e-06}, {'diff': 6.861000000000367e-06}, {'diff': 5.2639999999978815e-06}, ...</msg>
<status status="PASS" starttime="20201030 18:32:26.413" endtime="20201030 18:32:26.416"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:32:26.420" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.500000000002031e-06, 5.292000000000491e-06, 5.457999999999852e-06, 5.221999999999172e-06, 6.861000000000367e-06, 5.2639999999978815e-06, 5.680000000000962e-06, 5.319999999999631e-06, 6.041...</msg>
<status status="PASS" starttime="20201030 18:32:26.417" endtime="20201030 18:32:26.420"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:26.424" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:32:26.423" endtime="20201030 18:32:26.425"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:26.427" level="INFO">VALUE: [5.500000000002031e-06, 5.292000000000491e-06, 5.457999999999852e-06, 5.221999999999172e-06, 6.861000000000367e-06, 5.2639999999978815e-06, 5.680000000000962e-06, 5.319999999999631e-06, 6.041999999997771e-06, 6.1389999999987566e-06, 6.333000000000727e-06, 6.583999999996981e-06, 6.638999999999257e-06, 6.806000000001561e-06, 5.139000000001226e-06, 6.695000000001006e-06, 6.680999999997966e-06, 5.804999999997618e-06, 6.569999999997411e-06, 6.110999999999617e-06, 5.194000000000032e-06, 6.874999999999937e-06, 5.417000000000616e-06, 5.374999999998437e-06, 5.916999999997646e-06]</msg>
<status status="PASS" starttime="20201030 18:32:26.425" endtime="20201030 18:32:26.427"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:26.421" endtime="20201030 18:32:26.427"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:26.431" endtime="20201030 18:32:26.451"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:26.429" endtime="20201030 18:32:26.451"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:26.428" endtime="20201030 18:32:26.451"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:26.079" endtime="20201030 18:32:26.452"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:26.079" endtime="20201030 18:32:26.452"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:26.460" endtime="20201030 18:32:26.470"></status>
</kw>
<msg timestamp="20201030 18:32:26.470" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:26.458" endtime="20201030 18:32:26.471"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:26.473" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:26.472" endtime="20201030 18:32:26.473"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:26.474" endtime="20201030 18:32:26.475"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:26.456" endtime="20201030 18:32:26.476"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:26.454" endtime="20201030 18:32:26.477"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:26.483" endtime="20201030 18:32:26.748"></status>
</kw>
<msg timestamp="20201030 18:32:26.750" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017391042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017397889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:26.481" endtime="20201030 18:32:26.750"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:26.755" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017391042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017397889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:26.751" endtime="20201030 18:32:26.755"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:26.756" endtime="20201030 18:32:26.758"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:26.479" endtime="20201030 18:32:26.758"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:26.477" endtime="20201030 18:32:26.759"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:32:26.772" level="INFO">${debug} = {'diff': [0, 6.847000000000797e-06, 6.638999999999257e-06, 6.166000000001892e-06, 5.791999999997521e-06, 5.153000000000796e-06, 5.846999999999797e-06, 5.207999999999602e-06, 5.737000000002185e-06, 5.2...</msg>
<status status="PASS" starttime="20201030 18:32:26.760" endtime="20201030 18:32:26.773"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:26.774" endtime="20201030 18:32:26.775"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:26.779" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:32:26.778" endtime="20201030 18:32:26.780"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:26.782" level="INFO">VALUE: {'diff': [0, 6.847000000000797e-06, 6.638999999999257e-06, 6.166000000001892e-06, 5.791999999997521e-06, 5.153000000000796e-06, 5.846999999999797e-06, 5.207999999999602e-06, 5.737000000002185e-06, 5.2499999999983116e-06, 6.180000000001462e-06, 5.1249999999981866e-06, 5.792000000000991e-06, 6.4029999999985765e-06, 6.861000000000367e-06, 5.264000000001351e-06, 5.402000000001572e-06, 5.9029999999980765e-06, 5.985999999999492e-06, 5.945000000000256e-06, 6.763999999999382e-06, 6.512999999999658e-06, 5.403000000001046e-06, 6.2639999999988816e-06, 5.292000000000491e-06, 5.528000000001171e-06, 6.569000000001407e-06, 6.805999999998091e-06, 5.207999999999602e-06, 5.569000000000407e-06, 6.806000000001561e-06, 5.096999999999047e-06, 5.985999999999492e-06, 5.111000000002086e-06, 5.0839999999989505e-06, 5.151999999997853e-06, 6.389000000002476e-06, 6.541999999998271e-06, 6.542000000001741e-06, 5.819000000000657e-06, 6.8469999999973274e-06, 5.764000000001851e-06, 6.847000000000797e-06, 5.11199999999809e-06, 5.235999999998742e-06, 5.083000000002946e-06, 5.055999999999811e-06, 6.665999999998923e-06, 5.139000000001226e-06, 6.041999999997771e-06], 'eventsource_diff': [0, 6.847000000000797e-06, 6.638999999999257e-06, 6.166000000001892e-06, 5.791999999997521e-06, 5.153000000000796e-06, 5.846999999999797e-06, 5.207999999999602e-06, 5.737000000002185e-06, 5.2499999999983116e-06, 6.180000000001462e-06, 5.1249999999981866e-06, 5.792000000000991e-06, 6.4029999999985765e-06, 6.861000000000367e-06, 5.264000000001351e-06, 5.402000000001572e-06, 5.9029999999980765e-06, 5.985999999999492e-06, 5.945000000000256e-06, 6.763999999999382e-06, 6.512999999999658e-06, 5.403000000001046e-06, 6.2639999999988816e-06, 5.292000000000491e-06, 5.528000000001171e-06, 6.569000000001407e-06, 6.805999999998091e-06, 5.207999999999602e-06, 5.569000000000407e-06, 6.806000000001561e-06, 5.096999999999047e-06, 5.985999999999492e-06, 5.111000000002086e-06, 5.0839999999989505e-06, 5.151999999997853e-06, 6.389000000002476e-06, 6.541999999998271e-06, 6.542000000001741e-06, 5.819000000000657e-06, 6.8469999999973274e-06, 5.764000000001851e-06, 6.847000000000797e-06, 5.11199999999809e-06, 5.235999999998742e-06, 5.083000000002946e-06, 5.055999999999811e-06, 6.665999999998923e-06, 5.139000000001226e-06, 6.041999999997771e-06], 'time': [0.017391042, 0.017397889, 0.017404528, 0.017410694, 0.017416486, 0.017421639, 0.017427486, 0.017432694, 0.017438431, 0.017443681, 0.017449861, 0.017454986, 0.017460778, 0.017467181, 0.017474042, 0.017479306, 0.017484708, 0.017490611, 0.017496597, 0.017502542, 0.017509306, 0.017515819, 0.017521222, 0.017527486, 0.017532778, 0.017538306, 0.017544875, 0.017551681, 0.017556889, 0.017562458, 0.017569264, 0.017574361, 0.017580347, 0.017585458, 0.017590542, 0.017595694, 0.017602083, 0.017608625, 0.017615167, 0.017620986, 0.017627833, 0.017633597, 0.017640444, 0.017645556, 0.017650792, 0.017655875, 0.017660931, 0.017667597, 0.017672736, 0.017678778], 'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC']}</msg>
<status status="PASS" starttime="20201030 18:32:26.780" endtime="20201030 18:32:26.783"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:26.776" endtime="20201030 18:32:26.783"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:26.787" level="INFO">${RESULT} = [{'diff': 6.847000000000797e-06}, {'diff': 6.166000000001892e-06}, {'diff': 5.153000000000796e-06}, {'diff': 5.207999999999602e-06}, {'diff': 5.2499999999983116e-06}, {'diff': 5.1249999999981866e-06},...</msg>
<status status="PASS" starttime="20201030 18:32:26.784" endtime="20201030 18:32:26.787"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:32:26.790" level="INFO">${GPIO_OVERHEAD} = {'diff': [6.847000000000797e-06, 6.166000000001892e-06, 5.153000000000796e-06, 5.207999999999602e-06, 5.2499999999983116e-06, 5.1249999999981866e-06, 6.4029999999985765e-06, 5.264000000001351e-06, 5.9...</msg>
<status status="PASS" starttime="20201030 18:32:26.788" endtime="20201030 18:32:26.790"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:26.794" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:32:26.793" endtime="20201030 18:32:26.794"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:26.796" level="INFO">VALUE: [6.847000000000797e-06, 6.166000000001892e-06, 5.153000000000796e-06, 5.207999999999602e-06, 5.2499999999983116e-06, 5.1249999999981866e-06, 6.4029999999985765e-06, 5.264000000001351e-06, 5.9029999999980765e-06, 5.945000000000256e-06, 6.512999999999658e-06, 6.2639999999988816e-06, 5.528000000001171e-06, 6.805999999998091e-06, 5.569000000000407e-06, 5.096999999999047e-06, 5.111000000002086e-06, 5.151999999997853e-06, 6.541999999998271e-06, 5.819000000000657e-06, 5.764000000001851e-06, 5.11199999999809e-06, 5.083000000002946e-06, 6.665999999998923e-06, 6.041999999997771e-06]</msg>
<status status="PASS" starttime="20201030 18:32:26.795" endtime="20201030 18:32:26.797"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:26.791" endtime="20201030 18:32:26.798"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:26.801" endtime="20201030 18:32:26.821"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:26.800" endtime="20201030 18:32:26.821"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:26.798" endtime="20201030 18:32:26.821"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:26.453" endtime="20201030 18:32:26.822"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:26.452" endtime="20201030 18:32:26.822"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:26.830" endtime="20201030 18:32:26.842"></status>
</kw>
<msg timestamp="20201030 18:32:26.842" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:26.828" endtime="20201030 18:32:26.842"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:26.845" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:26.843" endtime="20201030 18:32:26.845"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:26.846" endtime="20201030 18:32:26.847"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:26.825" endtime="20201030 18:32:26.848"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:26.824" endtime="20201030 18:32:26.848"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:26.855" endtime="20201030 18:32:27.121"></status>
</kw>
<msg timestamp="20201030 18:32:27.123" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017361667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017368125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:26.853" endtime="20201030 18:32:27.123"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:27.129" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017361667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017368125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:27.124" endtime="20201030 18:32:27.129"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:27.130" endtime="20201030 18:32:27.131"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:26.851" endtime="20201030 18:32:27.132"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:26.849" endtime="20201030 18:32:27.132"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:32:27.146" level="INFO">${debug} = {'diff': [0, 6.458000000000852e-06, 6.818999999998188e-06, 6.8480000000002705e-06, 6.401999999999103e-06, 6.445000000000756e-06, 5.207999999999602e-06, 5.444999999999756e-06, 6.749999999999812e-06, 5....</msg>
<status status="PASS" starttime="20201030 18:32:27.133" endtime="20201030 18:32:27.146"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:27.147" endtime="20201030 18:32:27.148"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:27.152" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:32:27.151" endtime="20201030 18:32:27.152"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:27.155" level="INFO">VALUE: {'diff': [0, 6.458000000000852e-06, 6.818999999998188e-06, 6.8480000000002705e-06, 6.401999999999103e-06, 6.445000000000756e-06, 5.207999999999602e-06, 5.444999999999756e-06, 6.749999999999812e-06, 5.750000000002281e-06, 6.790999999999048e-06, 5.860999999999367e-06, 6.2229999999996455e-06, 6.805000000002087e-06, 5.749999999998812e-06, 5.374999999998437e-06, 5.500000000002031e-06, 5.681000000000436e-06, 5.915999999998173e-06, 6.153000000001796e-06, 6.638999999999257e-06, 6.570000000000881e-06, 5.194000000000032e-06, 6.5969999999970774e-06, 6.445000000000756e-06, 5.735999999999242e-06, 5.971999999999922e-06, 6.236000000003211e-06, 5.180999999999936e-06, 6.679999999998493e-06, 6.584000000000451e-06, 5.319000000000157e-06, 6.0279999999982015e-06, 5.625000000002156e-06, 5.569000000000407e-06, 5.374999999998437e-06, 6.388999999999007e-06, 5.542000000000741e-06, 5.999999999999062e-06, 6.569000000001407e-06, 6.222000000000172e-06, 5.36199999999834e-06, 5.805000000001087e-06, 5.806000000000561e-06, 5.055000000000337e-06, 6.6529999999988265e-06, 6.569000000001407e-06, 5.5139999999981315e-06, 5.264000000001351e-06, 6.638999999999257e-06], 'eventsource_diff': [0, 6.458000000000852e-06, 6.818999999998188e-06, 6.8480000000002705e-06, 6.401999999999103e-06, 6.445000000000756e-06, 5.207999999999602e-06, 5.444999999999756e-06, 6.749999999999812e-06, 5.750000000002281e-06, 6.790999999999048e-06, 5.860999999999367e-06, 6.2229999999996455e-06, 6.805000000002087e-06, 5.749999999998812e-06, 5.374999999998437e-06, 5.500000000002031e-06, 5.681000000000436e-06, 5.915999999998173e-06, 6.153000000001796e-06, 6.638999999999257e-06, 6.570000000000881e-06, 5.194000000000032e-06, 6.5969999999970774e-06, 6.445000000000756e-06, 5.735999999999242e-06, 5.971999999999922e-06, 6.236000000003211e-06, 5.180999999999936e-06, 6.679999999998493e-06, 6.584000000000451e-06, 5.319000000000157e-06, 6.0279999999982015e-06, 5.625000000002156e-06, 5.569000000000407e-06, 5.374999999998437e-06, 6.388999999999007e-06, 5.542000000000741e-06, 5.999999999999062e-06, 6.569000000001407e-06, 6.222000000000172e-06, 5.36199999999834e-06, 5.805000000001087e-06, 5.806000000000561e-06, 5.055000000000337e-06, 6.6529999999988265e-06, 6.569000000001407e-06, 5.5139999999981315e-06, 5.264000000001351e-06, 6.638999999999257e-06], 'time': [0.017361667, 0.017368125, 0.017374944, 0.017381792, 0.017388194, 0.017394639, 0.017399847, 0.017405292, 0.017412042, 0.017417792, 0.017424583, 0.017430444, 0.017436667, 0.017443472, 0.017449222, 0.017454597, 0.017460097, 0.017465778, 0.017471694, 0.017477847, 0.017484486, 0.017491056, 0.01749625, 0.017502847, 0.017509292, 0.017515028, 0.017521, 0.017527236, 0.017532417, 0.017539097, 0.017545681, 0.017551, 0.017557028, 0.017562653, 0.017568222, 0.017573597, 0.017579986, 0.017585528, 0.017591528, 0.017598097, 0.017604319, 0.017609681, 0.017615486, 0.017621292, 0.017626347, 0.017633, 0.017639569, 0.017645083, 0.017650347, 0.017656986], 'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC']}</msg>
<status status="PASS" starttime="20201030 18:32:27.153" endtime="20201030 18:32:27.156"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:27.149" endtime="20201030 18:32:27.156"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:27.160" level="INFO">${RESULT} = [{'diff': 6.458000000000852e-06}, {'diff': 6.8480000000002705e-06}, {'diff': 6.445000000000756e-06}, {'diff': 5.444999999999756e-06}, {'diff': 5.750000000002281e-06}, {'diff': 5.860999999999367e-06}, ...</msg>
<status status="PASS" starttime="20201030 18:32:27.157" endtime="20201030 18:32:27.160"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:32:27.163" level="INFO">${GPIO_OVERHEAD} = {'diff': [6.458000000000852e-06, 6.8480000000002705e-06, 6.445000000000756e-06, 5.444999999999756e-06, 5.750000000002281e-06, 5.860999999999367e-06, 6.805000000002087e-06, 5.374999999998437e-06, 5.681...</msg>
<status status="PASS" starttime="20201030 18:32:27.161" endtime="20201030 18:32:27.163"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:27.167" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:32:27.166" endtime="20201030 18:32:27.167"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:27.169" level="INFO">VALUE: [6.458000000000852e-06, 6.8480000000002705e-06, 6.445000000000756e-06, 5.444999999999756e-06, 5.750000000002281e-06, 5.860999999999367e-06, 6.805000000002087e-06, 5.374999999998437e-06, 5.681000000000436e-06, 6.153000000001796e-06, 6.570000000000881e-06, 6.5969999999970774e-06, 5.735999999999242e-06, 6.236000000003211e-06, 6.679999999998493e-06, 5.319000000000157e-06, 5.625000000002156e-06, 5.374999999998437e-06, 5.542000000000741e-06, 6.569000000001407e-06, 5.36199999999834e-06, 5.806000000000561e-06, 6.6529999999988265e-06, 5.5139999999981315e-06, 6.638999999999257e-06]</msg>
<status status="PASS" starttime="20201030 18:32:27.168" endtime="20201030 18:32:27.170"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:27.164" endtime="20201030 18:32:27.170"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:27.174" endtime="20201030 18:32:27.193"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:27.172" endtime="20201030 18:32:27.194"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:27.171" endtime="20201030 18:32:27.194"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:26.823" endtime="20201030 18:32:27.194"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:26.822" endtime="20201030 18:32:27.194"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:27.203" endtime="20201030 18:32:27.215"></status>
</kw>
<msg timestamp="20201030 18:32:27.216" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:27.201" endtime="20201030 18:32:27.216"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:27.218" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:27.217" endtime="20201030 18:32:27.218"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:27.219" endtime="20201030 18:32:27.221"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:27.198" endtime="20201030 18:32:27.221"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:27.197" endtime="20201030 18:32:27.222"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:27.228" endtime="20201030 18:32:27.496"></status>
</kw>
<msg timestamp="20201030 18:32:27.498" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018521181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018526181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:27.226" endtime="20201030 18:32:27.498"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:27.504" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018521181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018526181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:27.499" endtime="20201030 18:32:27.504"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:27.505" endtime="20201030 18:32:27.506"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:27.224" endtime="20201030 18:32:27.507"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:27.222" endtime="20201030 18:32:27.508"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:32:27.521" level="INFO">${debug} = {'diff': [0, 4.9999999999980616e-06, 6.874999999999937e-06, 5.985999999999492e-06, 5.902000000002072e-06, 5.153000000000796e-06, 6.638999999999257e-06, 6.333000000000727e-06, 6.624999999999687e-06, 6....</msg>
<status status="PASS" starttime="20201030 18:32:27.509" endtime="20201030 18:32:27.521"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:27.522" endtime="20201030 18:32:27.524"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:27.527" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:32:27.526" endtime="20201030 18:32:27.528"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:27.530" level="INFO">VALUE: {'diff': [0, 4.9999999999980616e-06, 6.874999999999937e-06, 5.985999999999492e-06, 5.902000000002072e-06, 5.153000000000796e-06, 6.638999999999257e-06, 6.333000000000727e-06, 6.624999999999687e-06, 6.334000000000201e-06, 5.499999999998562e-06, 5.749999999998812e-06, 5.014000000001101e-06, 5.624999999998687e-06, 5.930000000001212e-06, 6.1389999999987566e-06, 5.971999999999922e-06, 5.973000000002865e-06, 5.1249999999981866e-06, 5.541000000001267e-06, 5.721999999999672e-06, 5.556000000000311e-06, 5.499999999998562e-06, 5.569000000000407e-06, 6.388999999999007e-06, 6.528000000002171e-06, 5.958000000000352e-06, 5.027999999997201e-06, 6.167000000001366e-06, 5.389000000001476e-06, 6.554999999998368e-06, 6.2090000000000756e-06, 6.874999999999937e-06, 6.276999999998978e-06, 6.695000000001006e-06, 5.514000000001601e-06, 5.360999999998867e-06, 5.389000000001476e-06, 5.319000000000157e-06, 5.319999999999631e-06, 5.790999999998048e-06, 6.874999999999937e-06, 6.388999999999007e-06, 6.459000000000326e-06, 5.513000000002127e-06, 6.7919999999985214e-06, 6.153000000001796e-06, 5.569000000000407e-06, 5.0839999999989505e-06, 6.151999999998853e-06], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING'], 'source_diff': [0, 4.9999999999980616e-06, 6.874999999999937e-06, 5.985999999999492e-06, 5.902000000002072e-06, 5.153000000000796e-06, 6.638999999999257e-06, 6.333000000000727e-06, 6.624999999999687e-06, 6.334000000000201e-06, 5.499999999998562e-06, 5.749999999998812e-06, 5.014000000001101e-06, 5.624999999998687e-06, 5.930000000001212e-06, 6.1389999999987566e-06, 5.971999999999922e-06, 5.973000000002865e-06, 5.1249999999981866e-06, 5.541000000001267e-06, 5.721999999999672e-06, 5.556000000000311e-06, 5.499999999998562e-06, 5.569000000000407e-06, 6.388999999999007e-06, 6.528000000002171e-06, 5.958000000000352e-06, 5.027999999997201e-06, 6.167000000001366e-06, 5.389000000001476e-06, 6.554999999998368e-06, 6.2090000000000756e-06, 6.874999999999937e-06, 6.276999999998978e-06, 6.695000000001006e-06, 5.514000000001601e-06, 5.360999999998867e-06, 5.389000000001476e-06, 5.319000000000157e-06, 5.319999999999631e-06, 5.790999999998048e-06, 6.874999999999937e-06, 6.388999999999007e-06, 6.459000000000326e-06, 5.513000000002127e-06, 6.7919999999985214e-06, 6.153000000001796e-06, 5.569000000000407e-06, 5.0839999999989505e-06, 6.151999999998853e-06], 'time': [0.018521181, 0.018526181, 0.018533056, 0.018539042, 0.018544944, 0.018550097, 0.018556736, 0.018563069, 0.018569694, 0.018576028, 0.018581528, 0.018587278, 0.018592292, 0.018597917, 0.018603847, 0.018609986, 0.018615958, 0.018621931, 0.018627056, 0.018632597, 0.018638319, 0.018643875, 0.018649375, 0.018654944, 0.018661333, 0.018667861, 0.018673819, 0.018678847, 0.018685014, 0.018690403, 0.018696958, 0.018703167, 0.018710042, 0.018716319, 0.018723014, 0.018728528, 0.018733889, 0.018739278, 0.018744597, 0.018749917, 0.018755708, 0.018762583, 0.018768972, 0.018775431, 0.018780944, 0.018787736, 0.018793889, 0.018799458, 0.018804542, 0.018810694], 'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC']}</msg>
<status status="PASS" starttime="20201030 18:32:27.528" endtime="20201030 18:32:27.531"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:27.524" endtime="20201030 18:32:27.531"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:27.535" level="INFO">${RESULT} = [{'diff': 4.9999999999980616e-06}, {'diff': 5.985999999999492e-06}, {'diff': 5.153000000000796e-06}, {'diff': 6.333000000000727e-06}, {'diff': 6.334000000000201e-06}, {'diff': 5.749999999998812e-06}, ...</msg>
<status status="PASS" starttime="20201030 18:32:27.532" endtime="20201030 18:32:27.535"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:32:27.538" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.9999999999980616e-06, 5.985999999999492e-06, 5.153000000000796e-06, 6.333000000000727e-06, 6.334000000000201e-06, 5.749999999998812e-06, 5.624999999998687e-06, 6.1389999999987566e-06, 5.97...</msg>
<status status="PASS" starttime="20201030 18:32:27.536" endtime="20201030 18:32:27.538"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:27.542" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:32:27.541" endtime="20201030 18:32:27.542"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:27.544" level="INFO">VALUE: [4.9999999999980616e-06, 5.985999999999492e-06, 5.153000000000796e-06, 6.333000000000727e-06, 6.334000000000201e-06, 5.749999999998812e-06, 5.624999999998687e-06, 6.1389999999987566e-06, 5.973000000002865e-06, 5.541000000001267e-06, 5.556000000000311e-06, 5.569000000000407e-06, 6.528000000002171e-06, 5.027999999997201e-06, 5.389000000001476e-06, 6.2090000000000756e-06, 6.276999999998978e-06, 5.514000000001601e-06, 5.389000000001476e-06, 5.319999999999631e-06, 6.874999999999937e-06, 6.459000000000326e-06, 6.7919999999985214e-06, 5.569000000000407e-06, 6.151999999998853e-06]</msg>
<status status="PASS" starttime="20201030 18:32:27.543" endtime="20201030 18:32:27.545"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:27.539" endtime="20201030 18:32:27.546"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:27.550" endtime="20201030 18:32:27.570"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:27.548" endtime="20201030 18:32:27.570"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:27.547" endtime="20201030 18:32:27.570"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:27.195" endtime="20201030 18:32:27.571"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:27.195" endtime="20201030 18:32:27.571"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:27.579" endtime="20201030 18:32:27.588"></status>
</kw>
<msg timestamp="20201030 18:32:27.589" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:27.577" endtime="20201030 18:32:27.589"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:27.591" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:27.590" endtime="20201030 18:32:27.592"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:27.592" endtime="20201030 18:32:27.594"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:27.574" endtime="20201030 18:32:27.594"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:27.573" endtime="20201030 18:32:27.595"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:27.601" endtime="20201030 18:32:27.866"></status>
</kw>
<msg timestamp="20201030 18:32:27.868" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017388667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017394181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:27.600" endtime="20201030 18:32:27.868"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:27.873" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017388667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017394181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:27.869" endtime="20201030 18:32:27.874"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:27.874" endtime="20201030 18:32:27.876"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:27.597" endtime="20201030 18:32:27.876"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:27.595" endtime="20201030 18:32:27.877"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:32:27.891" level="INFO">${debug} = {'diff': [0, 5.514000000001601e-06, 6.568999999997938e-06, 6.333000000000727e-06, 6.681000000001436e-06, 5.4439999999968125e-06, 5.750000000002281e-06, 6.1389999999987566e-06, 5.096999999999047e-06, 5...</msg>
<status status="PASS" starttime="20201030 18:32:27.878" endtime="20201030 18:32:27.892"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:27.892" endtime="20201030 18:32:27.894"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:27.897" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:32:27.896" endtime="20201030 18:32:27.898"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:27.901" level="INFO">VALUE: {'diff': [0, 5.514000000001601e-06, 6.568999999997938e-06, 6.333000000000727e-06, 6.681000000001436e-06, 5.4439999999968125e-06, 5.750000000002281e-06, 6.1389999999987566e-06, 5.096999999999047e-06, 5.195000000002975e-06, 6.874999999999937e-06, 5.3889999999980065e-06, 5.264000000001351e-06, 5.471999999999422e-06, 5.055000000000337e-06, 5.0139999999976315e-06, 6.153000000001796e-06, 5.860999999999367e-06, 6.513999999999132e-06, 6.861000000000367e-06, 5.985999999999492e-06, 6.389000000002476e-06, 5.277999999997451e-06, 6.194000000001032e-06, 5.444999999999756e-06, 6.097000000000047e-06, 5.569999999999881e-06, 5.916000000001642e-06, 5.749999999998812e-06, 5.180999999999936e-06, 6.569000000001407e-06, 6.638999999999257e-06, 6.0279999999982015e-06, 5.805000000001087e-06, 5.737000000002185e-06, 6.054999999997868e-06, 6.083000000000477e-06, 6.334000000000201e-06, 6.165999999998423e-06, 6.749999999999812e-06, 6.195000000000506e-06, 5.639000000001726e-06, 5.014000000001101e-06, 5.0139999999976315e-06, 5.680000000000962e-06, 6.4029999999985765e-06, 6.278000000001921e-06, 5.5139999999981315e-06, 5.777000000001947e-06, 5.2089999999990755e-06], 'eventsource_diff': [0, 5.514000000001601e-06, 6.568999999997938e-06, 6.333000000000727e-06, 6.681000000001436e-06, 5.4439999999968125e-06, 5.750000000002281e-06, 6.1389999999987566e-06, 5.096999999999047e-06, 5.195000000002975e-06, 6.874999999999937e-06, 5.3889999999980065e-06, 5.264000000001351e-06, 5.471999999999422e-06, 5.055000000000337e-06, 5.0139999999976315e-06, 6.153000000001796e-06, 5.860999999999367e-06, 6.513999999999132e-06, 6.861000000000367e-06, 5.985999999999492e-06, 6.389000000002476e-06, 5.277999999997451e-06, 6.194000000001032e-06, 5.444999999999756e-06, 6.097000000000047e-06, 5.569999999999881e-06, 5.916000000001642e-06, 5.749999999998812e-06, 5.180999999999936e-06, 6.569000000001407e-06, 6.638999999999257e-06, 6.0279999999982015e-06, 5.805000000001087e-06, 5.737000000002185e-06, 6.054999999997868e-06, 6.083000000000477e-06, 6.334000000000201e-06, 6.165999999998423e-06, 6.749999999999812e-06, 6.195000000000506e-06, 5.639000000001726e-06, 5.014000000001101e-06, 5.0139999999976315e-06, 5.680000000000962e-06, 6.4029999999985765e-06, 6.278000000001921e-06, 5.5139999999981315e-06, 5.777000000001947e-06, 5.2089999999990755e-06], 'time': [0.017388667, 0.017394181, 0.01740075, 0.017407083, 0.017413764, 0.017419208, 0.017424958, 0.017431097, 0.017436194, 0.017441389, 0.017448264, 0.017453653, 0.017458917, 0.017464389, 0.017469444, 0.017474458, 0.017480611, 0.017486472, 0.017492986, 0.017499847, 0.017505833, 0.017512222, 0.0175175, 0.017523694, 0.017529139, 0.017535236, 0.017540806, 0.017546722, 0.017552472, 0.017557653, 0.017564222, 0.017570861, 0.017576889, 0.017582694, 0.017588431, 0.017594486, 0.017600569, 0.017606903, 0.017613069, 0.017619819, 0.017626014, 0.017631653, 0.017636667, 0.017641681, 0.017647361, 0.017653764, 0.017660042, 0.017665556, 0.017671333, 0.017676542], 'source}</msg>
<status status="PASS" starttime="20201030 18:32:27.899" endtime="20201030 18:32:27.901"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:27.895" endtime="20201030 18:32:27.902"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:27.905" level="INFO">${RESULT} = [{'diff': 5.514000000001601e-06}, {'diff': 6.333000000000727e-06}, {'diff': 5.4439999999968125e-06}, {'diff': 6.1389999999987566e-06}, {'diff': 5.195000000002975e-06}, {'diff': 5.3889999999980065e-06}...</msg>
<status status="PASS" starttime="20201030 18:32:27.903" endtime="20201030 18:32:27.906"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:32:27.909" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.514000000001601e-06, 6.333000000000727e-06, 5.4439999999968125e-06, 6.1389999999987566e-06, 5.195000000002975e-06, 5.3889999999980065e-06, 5.471999999999422e-06, 5.0139999999976315e-06, 5....</msg>
<status status="PASS" starttime="20201030 18:32:27.906" endtime="20201030 18:32:27.910"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:27.913" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:32:27.912" endtime="20201030 18:32:27.914"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:27.916" level="INFO">VALUE: [5.514000000001601e-06, 6.333000000000727e-06, 5.4439999999968125e-06, 6.1389999999987566e-06, 5.195000000002975e-06, 5.3889999999980065e-06, 5.471999999999422e-06, 5.0139999999976315e-06, 5.860999999999367e-06, 6.861000000000367e-06, 6.389000000002476e-06, 6.194000000001032e-06, 6.097000000000047e-06, 5.916000000001642e-06, 5.180999999999936e-06, 6.638999999999257e-06, 5.805000000001087e-06, 6.054999999997868e-06, 6.334000000000201e-06, 6.749999999999812e-06, 5.639000000001726e-06, 5.0139999999976315e-06, 6.4029999999985765e-06, 5.5139999999981315e-06, 5.2089999999990755e-06]</msg>
<status status="PASS" starttime="20201030 18:32:27.914" endtime="20201030 18:32:27.916"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:27.910" endtime="20201030 18:32:27.917"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:27.920" endtime="20201030 18:32:27.940"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:27.919" endtime="20201030 18:32:27.940"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:27.918" endtime="20201030 18:32:27.941"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:27.572" endtime="20201030 18:32:27.941"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:27.571" endtime="20201030 18:32:27.941"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:27.949" endtime="20201030 18:32:27.960"></status>
</kw>
<msg timestamp="20201030 18:32:27.961" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:27.947" endtime="20201030 18:32:27.961"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:27.963" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:27.962" endtime="20201030 18:32:27.963"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:27.964" endtime="20201030 18:32:27.966"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:27.945" endtime="20201030 18:32:27.966"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:27.943" endtime="20201030 18:32:27.967"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:27.974" endtime="20201030 18:32:28.240"></status>
</kw>
<msg timestamp="20201030 18:32:28.242" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017408472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017414806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:27.972" endtime="20201030 18:32:28.242"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:28.247" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017408472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017414806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:28.243" endtime="20201030 18:32:28.247"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:28.248" endtime="20201030 18:32:28.250"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:27.969" endtime="20201030 18:32:28.250"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:27.967" endtime="20201030 18:32:28.251"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:32:28.265" level="INFO">${debug} = {'diff': [0, 6.334000000000201e-06, 5.499999999998562e-06, 5.735999999999242e-06, 5.610999999999117e-06, 6.416000000002142e-06, 6.2779999999984515e-06, 6.389000000002476e-06, 6.430999999997716e-06, 5....</msg>
<status status="PASS" starttime="20201030 18:32:28.252" endtime="20201030 18:32:28.265"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:28.266" endtime="20201030 18:32:28.268"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:28.271" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:32:28.270" endtime="20201030 18:32:28.271"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:28.274" level="INFO">VALUE: {'diff': [0, 6.334000000000201e-06, 5.499999999998562e-06, 5.735999999999242e-06, 5.610999999999117e-06, 6.416000000002142e-06, 6.2779999999984515e-06, 6.389000000002476e-06, 6.430999999997716e-06, 5.541000000001267e-06, 6.181000000000936e-06, 5.194000000000032e-06, 6.708999999997106e-06, 6.208000000000602e-06, 5.194000000000032e-06, 5.556000000000311e-06, 6.153000000001796e-06, 5.874999999998937e-06, 6.1529999999983265e-06, 6.166000000001892e-06, 5.721999999999672e-06, 6.1529999999983265e-06, 5.681000000000436e-06, 6.235999999999742e-06, 5.500000000002031e-06, 6.416999999998146e-06, 6.375000000002906e-06, 5.415999999997673e-06, 6.874999999999937e-06, 6.389000000002476e-06, 6.4029999999985765e-06, 6.444000000001282e-06, 6.110999999999617e-06, 5.0699999999993806e-06, 6.222000000000172e-06, 6.458000000000852e-06, 5.0139999999976315e-06, 6.167000000001366e-06, 5.667000000000866e-06, 5.5689999999969375e-06, 5.917000000001116e-06, 6.2639999999988816e-06, 5.458000000003321e-06, 5.207999999999602e-06, 5.569999999999881e-06, 5.569000000000407e-06, 6.6669999999983964e-06, 6.708000000001102e-06, 6.360999999999867e-06, 6.763999999999382e-06], 'eventsource_diff': [0, 6.334000000000201e-06, 5.499999999998562e-06, 5.735999999999242e-06, 5.610999999999117e-06, 6.416000000002142e-06, 6.2779999999984515e-06, 6.389000000002476e-06, 6.430999999997716e-06, 5.541000000001267e-06, 6.181000000000936e-06, 5.194000000000032e-06, 6.708999999997106e-06, 6.208000000000602e-06, 5.194000000000032e-06, 5.556000000000311e-06, 6.153000000001796e-06, 5.874999999998937e-06, 6.1529999999983265e-06, 6.166000000001892e-06, 5.721999999999672e-06, 6.1529999999983265e-06, 5.681000000000436e-06, 6.235999999999742e-06, 5.500000000002031e-06, 6.416999999998146e-06, 6.375000000002906e-06, 5.415999999997673e-06, 6.874999999999937e-06, 6.389000000002476e-06, 6.4029999999985765e-06, 6.444000000001282e-06, 6.110999999999617e-06, 5.0699999999993806e-06, 6.222000000000172e-06, 6.458000000000852e-06, 5.0139999999976315e-06, 6.167000000001366e-06, 5.667000000000866e-06, 5.5689999999969375e-06, 5.917000000001116e-06, 6.2639999999988816e-06, 5.458000000003321e-06, 5.207999999999602e-06, 5.569999999999881e-06, 5.569000000000407e-06, 6.6669999999983964e-06, 6.708000000001102e-06, 6.360999999999867e-06, 6.763999999999382e-06], 'time': [0.017408472, 0.017414806, 0.017420306, 0.017426042, 0.017431653, 0.017438069, 0.017444347, 0.017450736, 0.017457167, 0.017462708, 0.017468889, 0.017474083, 0.017480792, 0.017487, 0.017492194, 0.01749775, 0.017503903, 0.017509778, 0.017515931, 0.017522097, 0.017527819, 0.017533972, 0.017539653, 0.017545889, 0.017551389, 0.017557806, 0.017564181, 0.017569597, 0.017576472, 0.017582861, 0.017589264, 0.017595708, 0.017601819, 0.017606889, 0.017613111, 0.017619569, 0.017624583, 0.01763075, 0.017636417, 0.017641986, 0.017647903, 0.017654167, 0.017659625, 0.017664833, 0.017670403, 0.017675972, 0.017682639, 0.017689347, 0.017695708, 0.017702472], 'source}</msg>
<status status="PASS" starttime="20201030 18:32:28.272" endtime="20201030 18:32:28.275"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:28.268" endtime="20201030 18:32:28.275"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:28.278" level="INFO">${RESULT} = [{'diff': 6.334000000000201e-06}, {'diff': 5.735999999999242e-06}, {'diff': 6.416000000002142e-06}, {'diff': 6.389000000002476e-06}, {'diff': 5.541000000001267e-06}, {'diff': 5.194000000000032e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:32:28.276" endtime="20201030 18:32:28.279"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:32:28.282" level="INFO">${GPIO_OVERHEAD} = {'diff': [6.334000000000201e-06, 5.735999999999242e-06, 6.416000000002142e-06, 6.389000000002476e-06, 5.541000000001267e-06, 5.194000000000032e-06, 6.208000000000602e-06, 5.556000000000311e-06, 5.8749...</msg>
<status status="PASS" starttime="20201030 18:32:28.279" endtime="20201030 18:32:28.282"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:28.286" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:32:28.285" endtime="20201030 18:32:28.286"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:28.288" level="INFO">VALUE: [6.334000000000201e-06, 5.735999999999242e-06, 6.416000000002142e-06, 6.389000000002476e-06, 5.541000000001267e-06, 5.194000000000032e-06, 6.208000000000602e-06, 5.556000000000311e-06, 5.874999999998937e-06, 6.166000000001892e-06, 6.1529999999983265e-06, 6.235999999999742e-06, 6.416999999998146e-06, 5.415999999997673e-06, 6.389000000002476e-06, 6.444000000001282e-06, 5.0699999999993806e-06, 6.458000000000852e-06, 6.167000000001366e-06, 5.5689999999969375e-06, 6.2639999999988816e-06, 5.207999999999602e-06, 5.569000000000407e-06, 6.708000000001102e-06, 6.763999999999382e-06]</msg>
<status status="PASS" starttime="20201030 18:32:28.287" endtime="20201030 18:32:28.289"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:28.282" endtime="20201030 18:32:28.289"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:28.293" endtime="20201030 18:32:28.312"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:28.291" endtime="20201030 18:32:28.313"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:28.290" endtime="20201030 18:32:28.313"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:27.942" endtime="20201030 18:32:28.314"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:27.941" endtime="20201030 18:32:28.314"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:28.323" endtime="20201030 18:32:28.334"></status>
</kw>
<msg timestamp="20201030 18:32:28.335" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:28.322" endtime="20201030 18:32:28.335"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:28.337" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:28.336" endtime="20201030 18:32:28.337"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:28.338" endtime="20201030 18:32:28.340"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:28.319" endtime="20201030 18:32:28.340"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:28.317" endtime="20201030 18:32:28.341"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:28.348" endtime="20201030 18:32:28.616"></status>
</kw>
<msg timestamp="20201030 18:32:28.618" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019447014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019452597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:28.346" endtime="20201030 18:32:28.618"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:28.623" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019447014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019452597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:28.619" endtime="20201030 18:32:28.624"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:28.624" endtime="20201030 18:32:28.626"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:28.343" endtime="20201030 18:32:28.626"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:28.341" endtime="20201030 18:32:28.627"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:32:28.640" level="INFO">${debug} = {'diff': [0, 5.582999999999977e-06, 5.695000000000006e-06, 5.916000000001642e-06, 5.778000000001421e-06, 6.180999999997466e-06, 6.847000000000797e-06, 6.819000000001657e-06, 6.0839999999999506e-06, 5....</msg>
<status status="PASS" starttime="20201030 18:32:28.628" endtime="20201030 18:32:28.640"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:28.641" endtime="20201030 18:32:28.643"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:28.646" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:32:28.645" endtime="20201030 18:32:28.647"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:28.649" level="INFO">VALUE: {'diff': [0, 5.582999999999977e-06, 5.695000000000006e-06, 5.916000000001642e-06, 5.778000000001421e-06, 6.180999999997466e-06, 6.847000000000797e-06, 6.819000000001657e-06, 6.0839999999999506e-06, 5.985999999999492e-06, 6.861000000000367e-06, 5.207999999999602e-06, 6.041999999997771e-06, 6.749999999999812e-06, 6.625000000003156e-06, 6.221999999996702e-06, 6.153000000001796e-06, 6.694000000001532e-06, 5.3889999999980065e-06, 5.431000000000186e-06, 6.554999999998368e-06, 6.584000000000451e-06, 5.625000000002156e-06, 5.555000000000837e-06, 6.1529999999983265e-06, 6.056000000000811e-06, 5.305000000000587e-06, 5.582999999999977e-06, 5.8339999999997005e-06, 6.763999999999382e-06, 6.818999999998188e-06, 6.445000000000756e-06, 6.027000000002197e-06, 5.499999999998562e-06, 6.0979999999995205e-06, 5.749999999998812e-06, 5.666000000001392e-06, 5.139000000001226e-06, 6.3329999999972575e-06, 6.514000000002601e-06, 6.819999999997661e-06, 6.444000000001282e-06, 6.874999999999937e-06, 6.042000000001241e-06, 6.804999999998618e-06, 6.763999999999382e-06, 6.264000000002351e-06, 5.680999999996966e-06, 5.083000000002946e-06, 5.556000000000311e-06], 'eventsource_diff': [0, 5.582999999999977e-06, 5.695000000000006e-06, 5.916000000001642e-06, 5.778000000001421e-06, 6.180999999997466e-06, 6.847000000000797e-06, 6.819000000001657e-06, 6.0839999999999506e-06, 5.985999999999492e-06, 6.861000000000367e-06, 5.207999999999602e-06, 6.041999999997771e-06, 6.749999999999812e-06, 6.625000000003156e-06, 6.221999999996702e-06, 6.153000000001796e-06, 6.694000000001532e-06, 5.3889999999980065e-06, 5.431000000000186e-06, 6.554999999998368e-06, 6.584000000000451e-06, 5.625000000002156e-06, 5.555000000000837e-06, 6.1529999999983265e-06, 6.056000000000811e-06, 5.305000000000587e-06, 5.582999999999977e-06, 5.8339999999997005e-06, 6.763999999999382e-06, 6.818999999998188e-06, 6.445000000000756e-06, 6.027000000002197e-06, 5.499999999998562e-06, 6.0979999999995205e-06, 5.749999999998812e-06, 5.666000000001392e-06, 5.139000000001226e-06, 6.3329999999972575e-06, 6.514000000002601e-06, 6.819999999997661e-06, 6.444000000001282e-06, 6.874999999999937e-06, 6.042000000001241e-06, 6.804999999998618e-06, 6.763999999999382e-06, 6.264000000002351e-06, 5.680999999996966e-06, 5.083000000002946e-06, 5.556000000000311e-06], 'time': [0.019447014, 0.019452597, 0.019458292, 0.019464208, 0.019469986, 0.019476167, 0.019483014, 0.019489833, 0.019495917, 0.019501903, 0.019508764, 0.019513972, 0.019520014, 0.019526764, 0.019533389, 0.019539611, 0.019545764, 0.019552458, 0.019557847, 0.019563278, 0.019569833, 0.019576417, 0.019582042, 0.019587597, 0.01959375, 0.019599806, 0.019605111, 0.019610694, 0.019616528, 0.019623292, 0.019630111, 0.019636556, 0.019642583, 0.019648083, 0.019654181, 0.019659931, 0.019665597, 0.019670736, 0.019677069, 0.019683583, 0.019690403, 0.019696847, 0.019703722, 0.019709764, 0.019716569, 0.019723333, 0.019729597, 0.019735278, 0.019740361, 0.019745917], 'source}</msg>
<status status="PASS" starttime="20201030 18:32:28.647" endtime="20201030 18:32:28.650"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:28.643" endtime="20201030 18:32:28.651"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:28.654" level="INFO">${RESULT} = [{'diff': 5.582999999999977e-06}, {'diff': 5.916000000001642e-06}, {'diff': 6.180999999997466e-06}, {'diff': 6.819000000001657e-06}, {'diff': 5.985999999999492e-06}, {'diff': 5.207999999999602e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:32:28.652" endtime="20201030 18:32:28.654"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:32:28.657" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.582999999999977e-06, 5.916000000001642e-06, 6.180999999997466e-06, 6.819000000001657e-06, 5.985999999999492e-06, 5.207999999999602e-06, 6.749999999999812e-06, 6.221999999996702e-06, 6.6940...</msg>
<status status="PASS" starttime="20201030 18:32:28.655" endtime="20201030 18:32:28.657"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:28.661" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:32:28.660" endtime="20201030 18:32:28.662"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:28.664" level="INFO">VALUE: [5.582999999999977e-06, 5.916000000001642e-06, 6.180999999997466e-06, 6.819000000001657e-06, 5.985999999999492e-06, 5.207999999999602e-06, 6.749999999999812e-06, 6.221999999996702e-06, 6.694000000001532e-06, 5.431000000000186e-06, 6.584000000000451e-06, 5.555000000000837e-06, 6.056000000000811e-06, 5.582999999999977e-06, 6.763999999999382e-06, 6.445000000000756e-06, 5.499999999998562e-06, 5.749999999998812e-06, 5.139000000001226e-06, 6.514000000002601e-06, 6.444000000001282e-06, 6.042000000001241e-06, 6.763999999999382e-06, 5.680999999996966e-06, 5.556000000000311e-06]</msg>
<status status="PASS" starttime="20201030 18:32:28.662" endtime="20201030 18:32:28.664"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:28.658" endtime="20201030 18:32:28.664"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:28.668" endtime="20201030 18:32:28.688"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:28.667" endtime="20201030 18:32:28.688"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:28.665" endtime="20201030 18:32:28.688"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:28.315" endtime="20201030 18:32:28.689"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:28.314" endtime="20201030 18:32:28.689"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:28.698" endtime="20201030 18:32:28.710"></status>
</kw>
<msg timestamp="20201030 18:32:28.710" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:28.696" endtime="20201030 18:32:28.710"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:28.713" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:28.711" endtime="20201030 18:32:28.713"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:28.714" endtime="20201030 18:32:28.715"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:28.693" endtime="20201030 18:32:28.716"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:28.691" endtime="20201030 18:32:28.716"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:28.723" endtime="20201030 18:32:28.989"></status>
</kw>
<msg timestamp="20201030 18:32:28.991" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018389306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01839475, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:32:28.721" endtime="20201030 18:32:28.991"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:28.996" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018389306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01839475, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:32:28.992" endtime="20201030 18:32:28.997"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:28.997" endtime="20201030 18:32:28.999"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:28.719" endtime="20201030 18:32:29.000"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:28.717" endtime="20201030 18:32:29.000"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:32:29.014" level="INFO">${debug} = {'diff': [0, 5.444000000000282e-06, 5.055999999999811e-06, 5.569000000000407e-06, 5.082999999999477e-06, 6.6669999999983964e-06, 6.292000000001491e-06, 5.3889999999980065e-06, 5.555000000000837e-06, 6...</msg>
<status status="PASS" starttime="20201030 18:32:29.001" endtime="20201030 18:32:29.014"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:29.015" endtime="20201030 18:32:29.016"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:29.020" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:32:29.019" endtime="20201030 18:32:29.020"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:29.023" level="INFO">VALUE: {'diff': [0, 5.444000000000282e-06, 5.055999999999811e-06, 5.569000000000407e-06, 5.082999999999477e-06, 6.6669999999983964e-06, 6.292000000001491e-06, 5.3889999999980065e-06, 5.555000000000837e-06, 6.513999999999132e-06, 5.264000000001351e-06, 6.804999999998618e-06, 5.1949999999995056e-06, 5.333000000003196e-06, 5.680999999996966e-06, 5.916000000001642e-06, 6.820000000001131e-06, 6.624999999999687e-06, 5.721999999999672e-06, 5.332999999999727e-06, 6.0979999999995205e-06, 6.888999999999507e-06, 6.262999999999408e-06, 5.264000000001351e-06, 6.749999999999812e-06, 5.139000000001226e-06, 5.2639999999978815e-06, 5.611000000002586e-06, 5.680999999996966e-06, 6.764000000002851e-06, 5.610999999999117e-06, 5.499999999998562e-06, 6.694000000001532e-06, 5.971999999999922e-06, 6.638999999999257e-06, 6.124999999999187e-06, 6.749999999999812e-06, 6.485999999999992e-06, 5.1949999999995056e-06, 5.917000000001116e-06, 6.583000000000977e-06, 6.388999999999007e-06, 6.513999999999132e-06, 5.555000000000837e-06, 5.735999999999242e-06, 6.056000000000811e-06, 5.500000000002031e-06, 5.7779999999979514e-06, 6.526999999999228e-06, 6.445000000000756e-06], 'eventsource_diff': [0, 5.444000000000282e-06, 5.055999999999811e-06, 5.569000000000407e-06, 5.082999999999477e-06, 6.6669999999983964e-06, 6.292000000001491e-06, 5.3889999999980065e-06, 5.555000000000837e-06, 6.513999999999132e-06, 5.264000000001351e-06, 6.804999999998618e-06, 5.1949999999995056e-06, 5.333000000003196e-06, 5.680999999996966e-06, 5.916000000001642e-06, 6.820000000001131e-06, 6.624999999999687e-06, 5.721999999999672e-06, 5.332999999999727e-06, 6.0979999999995205e-06, 6.888999999999507e-06, 6.262999999999408e-06, 5.264000000001351e-06, 6.749999999999812e-06, 5.139000000001226e-06, 5.2639999999978815e-06, 5.611000000002586e-06, 5.680999999996966e-06, 6.764000000002851e-06, 5.610999999999117e-06, 5.499999999998562e-06, 6.694000000001532e-06, 5.971999999999922e-06, 6.638999999999257e-06, 6.124999999999187e-06, 6.749999999999812e-06, 6.485999999999992e-06, 5.1949999999995056e-06, 5.917000000001116e-06, 6.583000000000977e-06, 6.388999999999007e-06, 6.513999999999132e-06, 5.555000000000837e-06, 5.735999999999242e-06, 6.056000000000811e-06, 5.500000000002031e-06, 5.7779999999979514e-06, 6.526999999999228e-06, 6.445000000000756e-06], 'time': [0.018389306, 0.01839475, 0.018399806, 0.018405375, 0.018410458, 0.018417125, 0.018423417, 0.018428806, 0.018434361, 0.018440875, 0.018446139, 0.018452944, 0.018458139, 0.018463472, 0.018469153, 0.018475069, 0.018481889, 0.018488514, 0.018494236, 0.018499569, 0.018505667, 0.018512556, 0.018518819, 0.018524083, 0.018530833, 0.018535972, 0.018541236, 0.018546847, 0.018552528, 0.018559292, 0.018564903, 0.018570403, 0.018577097, 0.018583069, 0.018589708, 0.018595833, 0.018602583, 0.018609069, 0.018614264, 0.018620181, 0.018626764, 0.018633153, 0.018639667, 0.018645222, 0.018650958, 0.018657014, 0.018662514, 0.018668292, 0.018674819, 0.018681264], 'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC']}</msg>
<status status="PASS" starttime="20201030 18:32:29.021" endtime="20201030 18:32:29.024"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:29.017" endtime="20201030 18:32:29.024"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:29.027" level="INFO">${RESULT} = [{'diff': 5.444000000000282e-06}, {'diff': 5.569000000000407e-06}, {'diff': 6.6669999999983964e-06}, {'diff': 5.3889999999980065e-06}, {'diff': 6.513999999999132e-06}, {'diff': 6.804999999998618e-06},...</msg>
<status status="PASS" starttime="20201030 18:32:29.025" endtime="20201030 18:32:29.028"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:32:29.031" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.444000000000282e-06, 5.569000000000407e-06, 6.6669999999983964e-06, 5.3889999999980065e-06, 6.513999999999132e-06, 6.804999999998618e-06, 5.333000000003196e-06, 5.916000000001642e-06, 6.62...</msg>
<status status="PASS" starttime="20201030 18:32:29.028" endtime="20201030 18:32:29.031"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:29.035" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:32:29.034" endtime="20201030 18:32:29.035"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:29.037" level="INFO">VALUE: [5.444000000000282e-06, 5.569000000000407e-06, 6.6669999999983964e-06, 5.3889999999980065e-06, 6.513999999999132e-06, 6.804999999998618e-06, 5.333000000003196e-06, 5.916000000001642e-06, 6.624999999999687e-06, 5.332999999999727e-06, 6.888999999999507e-06, 5.264000000001351e-06, 5.139000000001226e-06, 5.611000000002586e-06, 6.764000000002851e-06, 5.499999999998562e-06, 5.971999999999922e-06, 6.124999999999187e-06, 6.485999999999992e-06, 5.917000000001116e-06, 6.388999999999007e-06, 5.555000000000837e-06, 6.056000000000811e-06, 5.7779999999979514e-06, 6.445000000000756e-06]</msg>
<status status="PASS" starttime="20201030 18:32:29.036" endtime="20201030 18:32:29.038"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:29.031" endtime="20201030 18:32:29.038"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:29.043" endtime="20201030 18:32:29.062"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:29.041" endtime="20201030 18:32:29.063"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:29.039" endtime="20201030 18:32:29.063"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:28.690" endtime="20201030 18:32:29.063"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:28.689" endtime="20201030 18:32:29.063"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:29.071" endtime="20201030 18:32:29.083"></status>
</kw>
<msg timestamp="20201030 18:32:29.084" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:29.070" endtime="20201030 18:32:29.084"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:29.086" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:29.085" endtime="20201030 18:32:29.086"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:29.087" endtime="20201030 18:32:29.089"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:29.067" endtime="20201030 18:32:29.089"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:29.065" endtime="20201030 18:32:29.090"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:29.096" endtime="20201030 18:32:29.361"></status>
</kw>
<msg timestamp="20201030 18:32:29.363" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017351306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017357236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:29.095" endtime="20201030 18:32:29.363"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:29.369" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017351306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017357236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:29.364" endtime="20201030 18:32:29.369"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:29.370" endtime="20201030 18:32:29.371"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:29.092" endtime="20201030 18:32:29.372"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:29.090" endtime="20201030 18:32:29.372"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:32:29.386" level="INFO">${debug} = {'diff': [0, 5.930000000001212e-06, 6.513999999999132e-06, 5.319000000000157e-06, 5.9589999999998255e-06, 6.7779999999989515e-06, 5.596999999999547e-06, 5.860999999999367e-06, 5.625000000002156e-06, 6...</msg>
<status status="PASS" starttime="20201030 18:32:29.373" endtime="20201030 18:32:29.387"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:29.387" endtime="20201030 18:32:29.389"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:29.393" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:32:29.391" endtime="20201030 18:32:29.393"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:29.396" level="INFO">VALUE: {'diff': [0, 5.930000000001212e-06, 6.513999999999132e-06, 5.319000000000157e-06, 5.9589999999998255e-06, 6.7779999999989515e-06, 5.596999999999547e-06, 5.860999999999367e-06, 5.625000000002156e-06, 6.041999999997771e-06, 6.027000000002197e-06, 6.0279999999982015e-06, 5.167000000000366e-06, 6.624999999999687e-06, 5.860999999999367e-06, 6.875000000003406e-06, 6.860999999996897e-06, 5.721999999999672e-06, 6.709000000000576e-06, 6.791000000002517e-06, 6.4029999999985765e-06, 6.388999999999007e-06, 5.625000000002156e-06, 6.0279999999982015e-06, 5.055000000000337e-06, 6.431000000001186e-06, 5.082999999999477e-06, 5.499999999998562e-06, 5.319999999999631e-06, 5.625000000002156e-06, 6.540999999998798e-06, 4.986000000001961e-06, 6.180999999997466e-06, 5.375000000001906e-06, 6.443999999997813e-06, 6.334000000000201e-06, 5.846999999999797e-06, 5.389000000001476e-06, 6.097000000000047e-06, 6.569000000001407e-06, 5.499999999998562e-06, 6.2229999999996455e-06, 6.804999999998618e-06, 6.514000000002601e-06, 6.445000000000756e-06, 6.818999999998188e-06, 6.153000000001796e-06, 5.971999999999922e-06, 6.749999999999812e-06, 6.4029999999985765e-06], 'eventsource_diff': [0, 5.930000000001212e-06, 6.513999999999132e-06, 5.319000000000157e-06, 5.9589999999998255e-06, 6.7779999999989515e-06, 5.596999999999547e-06, 5.860999999999367e-06, 5.625000000002156e-06, 6.041999999997771e-06, 6.027000000002197e-06, 6.0279999999982015e-06, 5.167000000000366e-06, 6.624999999999687e-06, 5.860999999999367e-06, 6.875000000003406e-06, 6.860999999996897e-06, 5.721999999999672e-06, 6.709000000000576e-06, 6.791000000002517e-06, 6.4029999999985765e-06, 6.388999999999007e-06, 5.625000000002156e-06, 6.0279999999982015e-06, 5.055000000000337e-06, 6.431000000001186e-06, 5.082999999999477e-06, 5.499999999998562e-06, 5.319999999999631e-06, 5.625000000002156e-06, 6.540999999998798e-06, 4.986000000001961e-06, 6.180999999997466e-06, 5.375000000001906e-06, 6.443999999997813e-06, 6.334000000000201e-06, 5.846999999999797e-06, 5.389000000001476e-06, 6.097000000000047e-06, 6.569000000001407e-06, 5.499999999998562e-06, 6.2229999999996455e-06, 6.804999999998618e-06, 6.514000000002601e-06, 6.445000000000756e-06, 6.818999999998188e-06, 6.153000000001796e-06, 5.971999999999922e-06, 6.749999999999812e-06, 6.4029999999985765e-06], 'time': [0.017351306, 0.017357236, 0.01736375, 0.017369069, 0.017375028, 0.017381806, 0.017387403, 0.017393264, 0.017398889, 0.017404931, 0.017410958, 0.017416986, 0.017422153, 0.017428778, 0.017434639, 0.017441514, 0.017448375, 0.017454097, 0.017460806, 0.017467597, 0.017474, 0.017480389, 0.017486014, 0.017492042, 0.017497097, 0.017503528, 0.017508611, 0.017514111, 0.017519431, 0.017525056, 0.017531597, 0.017536583, 0.017542764, 0.017548139, 0.017554583, 0.017560917, 0.017566764, 0.017572153, 0.01757825, 0.017584819, 0.017590319, 0.017596542, 0.017603347, 0.017609861, 0.017616306, 0.017623125, 0.017629278, 0.01763525, 0.017642, 0.017648403], 'source}</msg>
<status status="PASS" starttime="20201030 18:32:29.394" endtime="20201030 18:32:29.397"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:29.390" endtime="20201030 18:32:29.397"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:29.401" level="INFO">${RESULT} = [{'diff': 5.930000000001212e-06}, {'diff': 5.319000000000157e-06}, {'diff': 6.7779999999989515e-06}, {'diff': 5.860999999999367e-06}, {'diff': 6.041999999997771e-06}, {'diff': 6.0279999999982015e-06},...</msg>
<status status="PASS" starttime="20201030 18:32:29.398" endtime="20201030 18:32:29.401"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:32:29.404" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.930000000001212e-06, 5.319000000000157e-06, 6.7779999999989515e-06, 5.860999999999367e-06, 6.041999999997771e-06, 6.0279999999982015e-06, 6.624999999999687e-06, 6.875000000003406e-06, 5.72...</msg>
<status status="PASS" starttime="20201030 18:32:29.402" endtime="20201030 18:32:29.405"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:29.409" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:32:29.408" endtime="20201030 18:32:29.409"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:29.411" level="INFO">VALUE: [5.930000000001212e-06, 5.319000000000157e-06, 6.7779999999989515e-06, 5.860999999999367e-06, 6.041999999997771e-06, 6.0279999999982015e-06, 6.624999999999687e-06, 6.875000000003406e-06, 5.721999999999672e-06, 6.791000000002517e-06, 6.388999999999007e-06, 6.0279999999982015e-06, 6.431000000001186e-06, 5.499999999998562e-06, 5.625000000002156e-06, 4.986000000001961e-06, 5.375000000001906e-06, 6.334000000000201e-06, 5.389000000001476e-06, 6.569000000001407e-06, 6.2229999999996455e-06, 6.514000000002601e-06, 6.818999999998188e-06, 5.971999999999922e-06, 6.4029999999985765e-06]</msg>
<status status="PASS" starttime="20201030 18:32:29.410" endtime="20201030 18:32:29.411"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:29.405" endtime="20201030 18:32:29.412"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:29.415" endtime="20201030 18:32:29.435"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:29.414" endtime="20201030 18:32:29.435"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:29.413" endtime="20201030 18:32:29.436"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:29.064" endtime="20201030 18:32:29.436"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:29.064" endtime="20201030 18:32:29.436"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:29.445" endtime="20201030 18:32:29.456"></status>
</kw>
<msg timestamp="20201030 18:32:29.456" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:29.443" endtime="20201030 18:32:29.456"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:29.459" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:29.457" endtime="20201030 18:32:29.459"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:29.460" endtime="20201030 18:32:29.461"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:29.440" endtime="20201030 18:32:29.462"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:29.439" endtime="20201030 18:32:29.462"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:29.468" endtime="20201030 18:32:29.734"></status>
</kw>
<msg timestamp="20201030 18:32:29.736" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019005194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019011222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:29.467" endtime="20201030 18:32:29.736"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:29.741" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019005194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019011222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:29.737" endtime="20201030 18:32:29.741"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:29.742" endtime="20201030 18:32:29.744"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:29.464" endtime="20201030 18:32:29.744"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:29.463" endtime="20201030 18:32:29.745"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:32:29.759" level="INFO">${debug} = {'diff': [0, 6.028000000001671e-06, 5.444999999999756e-06, 6.513999999999132e-06, 5.444000000000282e-06, 5.624999999998687e-06, 6.333000000000727e-06, 5.09799999999852e-06, 6.805000000002087e-06, 5.72...</msg>
<status status="PASS" starttime="20201030 18:32:29.746" endtime="20201030 18:32:29.759"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:29.760" endtime="20201030 18:32:29.762"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:29.765" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:32:29.764" endtime="20201030 18:32:29.765"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:29.768" level="INFO">VALUE: {'diff': [0, 6.028000000001671e-06, 5.444999999999756e-06, 6.513999999999132e-06, 5.444000000000282e-06, 5.624999999998687e-06, 6.333000000000727e-06, 5.09799999999852e-06, 6.805000000002087e-06, 5.721999999999672e-06, 6.749999999999812e-06, 5.389000000001476e-06, 5.319999999999631e-06, 5.1389999999977565e-06, 5.388000000002002e-06, 6.638999999999257e-06, 5.09799999999852e-06, 6.375000000002906e-06, 5.790999999998048e-06, 5.375000000001906e-06, 6.583999999996981e-06, 6.569000000001407e-06, 5.375000000001906e-06, 6.874999999999937e-06, 5.3889999999980065e-06, 6.388999999999007e-06, 6.903000000002546e-06, 5.346999999999297e-06, 5.457999999999852e-06, 6.195000000000506e-06, 6.276999999998978e-06, 5.681000000000436e-06, 6.458000000000852e-06, 6.680999999997966e-06, 6.458000000000852e-06, 5.082999999999477e-06, 6.292000000001491e-06, 5.431000000000186e-06, 6.4579999999973825e-06, 5.208000000003071e-06, 6.1389999999987566e-06, 6.5279999999987015e-06, 6.667000000001866e-06, 5.929999999997743e-06, 5.846999999999797e-06, 5.459000000002795e-06, 5.429999999997243e-06, 5.153000000000796e-06, 5.055999999999811e-06, 5.930000000001212e-06], 'eventsource_diff': [0, 6.028000000001671e-06, 5.444999999999756e-06, 6.513999999999132e-06, 5.444000000000282e-06, 5.624999999998687e-06, 6.333000000000727e-06, 5.09799999999852e-06, 6.805000000002087e-06, 5.721999999999672e-06, 6.749999999999812e-06, 5.389000000001476e-06, 5.319999999999631e-06, 5.1389999999977565e-06, 5.388000000002002e-06, 6.638999999999257e-06, 5.09799999999852e-06, 6.375000000002906e-06, 5.790999999998048e-06, 5.375000000001906e-06, 6.583999999996981e-06, 6.569000000001407e-06, 5.375000000001906e-06, 6.874999999999937e-06, 5.3889999999980065e-06, 6.388999999999007e-06, 6.903000000002546e-06, 5.346999999999297e-06, 5.457999999999852e-06, 6.195000000000506e-06, 6.276999999998978e-06, 5.681000000000436e-06, 6.458000000000852e-06, 6.680999999997966e-06, 6.458000000000852e-06, 5.082999999999477e-06, 6.292000000001491e-06, 5.431000000000186e-06, 6.4579999999973825e-06, 5.208000000003071e-06, 6.1389999999987566e-06, 6.5279999999987015e-06, 6.667000000001866e-06, 5.929999999997743e-06, 5.846999999999797e-06, 5.459000000002795e-06, 5.429999999997243e-06, 5.153000000000796e-06, 5.055999999999811e-06, 5.930000000001212e-06], 'time': [0.019005194, 0.019011222, 0.019016667, 0.019023181, 0.019028625, 0.01903425, 0.019040583, 0.019045681, 0.019052486, 0.019058208, 0.019064958, 0.019070347, 0.019075667, 0.019080806, 0.019086194, 0.019092833, 0.019097931, 0.019104306, 0.019110097, 0.019115472, 0.019122056, 0.019128625, 0.019134, 0.019140875, 0.019146264, 0.019152653, 0.019159556, 0.019164903, 0.019170361, 0.019176556, 0.019182833, 0.019188514, 0.019194972, 0.019201653, 0.019208111, 0.019213194, 0.019219486, 0.019224917, 0.019231375, 0.019236583, 0.019242722, 0.01924925, 0.019255917, 0.019261847, 0.019267694, 0.019273153, 0.019278583, 0.019283736, 0.019288792, 0.019294722], 'source}</msg>
<status status="PASS" starttime="20201030 18:32:29.766" endtime="20201030 18:32:29.769"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:29.762" endtime="20201030 18:32:29.769"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:29.773" level="INFO">${RESULT} = [{'diff': 6.028000000001671e-06}, {'diff': 6.513999999999132e-06}, {'diff': 5.624999999998687e-06}, {'diff': 5.09799999999852e-06}, {'diff': 5.721999999999672e-06}, {'diff': 5.389000000001476e-06}, {'...</msg>
<status status="PASS" starttime="20201030 18:32:29.770" endtime="20201030 18:32:29.773"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:32:29.776" level="INFO">${GPIO_OVERHEAD} = {'diff': [6.028000000001671e-06, 6.513999999999132e-06, 5.624999999998687e-06, 5.09799999999852e-06, 5.721999999999672e-06, 5.389000000001476e-06, 5.1389999999977565e-06, 6.638999999999257e-06, 6.3750...</msg>
<status status="PASS" starttime="20201030 18:32:29.773" endtime="20201030 18:32:29.776"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:29.780" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:32:29.779" endtime="20201030 18:32:29.780"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:29.782" level="INFO">VALUE: [6.028000000001671e-06, 6.513999999999132e-06, 5.624999999998687e-06, 5.09799999999852e-06, 5.721999999999672e-06, 5.389000000001476e-06, 5.1389999999977565e-06, 6.638999999999257e-06, 6.375000000002906e-06, 5.375000000001906e-06, 6.569000000001407e-06, 6.874999999999937e-06, 6.388999999999007e-06, 5.346999999999297e-06, 6.195000000000506e-06, 5.681000000000436e-06, 6.680999999997966e-06, 5.082999999999477e-06, 5.431000000000186e-06, 5.208000000003071e-06, 6.5279999999987015e-06, 5.929999999997743e-06, 5.459000000002795e-06, 5.153000000000796e-06, 5.930000000001212e-06]</msg>
<status status="PASS" starttime="20201030 18:32:29.781" endtime="20201030 18:32:29.783"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:29.776" endtime="20201030 18:32:29.783"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:29.787" endtime="20201030 18:32:29.806"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:29.785" endtime="20201030 18:32:29.807"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:29.784" endtime="20201030 18:32:29.807"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:29.437" endtime="20201030 18:32:29.808"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:29.437" endtime="20201030 18:32:29.808"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:29.815" endtime="20201030 18:32:29.827"></status>
</kw>
<msg timestamp="20201030 18:32:29.828" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:29.814" endtime="20201030 18:32:29.828"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:29.830" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:29.829" endtime="20201030 18:32:29.831"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:29.831" endtime="20201030 18:32:29.833"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:29.811" endtime="20201030 18:32:29.834"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:29.810" endtime="20201030 18:32:29.834"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:29.841" endtime="20201030 18:32:30.107"></status>
</kw>
<msg timestamp="20201030 18:32:30.109" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017412903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017418181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:29.839" endtime="20201030 18:32:30.109"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:30.114" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017412903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017418181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:30.110" endtime="20201030 18:32:30.115"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:30.116" endtime="20201030 18:32:30.117"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:29.836" endtime="20201030 18:32:30.118"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:29.835" endtime="20201030 18:32:30.118"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:32:30.131" level="INFO">${debug} = {'diff': [0, 5.278000000000921e-06, 5.068999999999907e-06, 6.1939999999975626e-06, 6.070000000000381e-06, 6.611000000000117e-06, 5.610999999999117e-06, 5.083000000002946e-06, 5.499999999998562e-06, 6....</msg>
<status status="PASS" starttime="20201030 18:32:30.119" endtime="20201030 18:32:30.132"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:30.132" endtime="20201030 18:32:30.134"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:30.137" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:32:30.136" endtime="20201030 18:32:30.138"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:30.141" level="INFO">VALUE: {'diff': [0, 5.278000000000921e-06, 5.068999999999907e-06, 6.1939999999975626e-06, 6.070000000000381e-06, 6.611000000000117e-06, 5.610999999999117e-06, 5.083000000002946e-06, 5.499999999998562e-06, 6.709000000000576e-06, 5.958000000000352e-06, 5.153000000000796e-06, 5.5139999999981315e-06, 5.971999999999922e-06, 6.792000000001991e-06, 5.5689999999969375e-06, 5.083000000002946e-06, 5.9729999999993955e-06, 6.222000000000172e-06, 6.3329999999972575e-06, 6.459000000000326e-06, 6.694000000001532e-06, 6.097000000000047e-06, 6.736000000000242e-06, 5.042000000000241e-06, 5.194000000000032e-06, 6.570000000000881e-06, 5.554999999997368e-06, 5.9729999999993955e-06, 6.708000000001102e-06, 6.110999999999617e-06, 5.361000000002336e-06, 6.569999999997411e-06, 6.097000000000047e-06, 5.555000000000837e-06, 5.153000000000796e-06, 6.9169999999986465e-06, 6.513999999999132e-06, 5.791000000001517e-06, 5.7229999999991454e-06, 6.360999999999867e-06, 6.360999999999867e-06, 6.597000000000547e-06, 5.735999999999242e-06, 6.639000000002726e-06, 5.610999999999117e-06, 6.459000000000326e-06, 6.512999999999658e-06, 6.291999999998021e-06, 5.736000000002711e-06], 'eventsource_diff': [0, 5.278000000000921e-06, 5.068999999999907e-06, 6.1939999999975626e-06, 6.070000000000381e-06, 6.611000000000117e-06, 5.610999999999117e-06, 5.083000000002946e-06, 5.499999999998562e-06, 6.709000000000576e-06, 5.958000000000352e-06, 5.153000000000796e-06, 5.5139999999981315e-06, 5.971999999999922e-06, 6.792000000001991e-06, 5.5689999999969375e-06, 5.083000000002946e-06, 5.9729999999993955e-06, 6.222000000000172e-06, 6.3329999999972575e-06, 6.459000000000326e-06, 6.694000000001532e-06, 6.097000000000047e-06, 6.736000000000242e-06, 5.042000000000241e-06, 5.194000000000032e-06, 6.570000000000881e-06, 5.554999999997368e-06, 5.9729999999993955e-06, 6.708000000001102e-06, 6.110999999999617e-06, 5.361000000002336e-06, 6.569999999997411e-06, 6.097000000000047e-06, 5.555000000000837e-06, 5.153000000000796e-06, 6.9169999999986465e-06, 6.513999999999132e-06, 5.791000000001517e-06, 5.7229999999991454e-06, 6.360999999999867e-06, 6.360999999999867e-06, 6.597000000000547e-06, 5.735999999999242e-06, 6.639000000002726e-06, 5.610999999999117e-06, 6.459000000000326e-06, 6.512999999999658e-06, 6.291999999998021e-06, 5.736000000002711e-06], 'time': [0.017412903, 0.017418181, 0.01742325, 0.017429444, 0.017435514, 0.017442125, 0.017447736, 0.017452819, 0.017458319, 0.017465028, 0.017470986, 0.017476139, 0.017481653, 0.017487625, 0.017494417, 0.017499986, 0.017505069, 0.017511042, 0.017517264, 0.017523597, 0.017530056, 0.01753675, 0.017542847, 0.017549583, 0.017554625, 0.017559819, 0.017566389, 0.017571944, 0.017577917, 0.017584625, 0.017590736, 0.017596097, 0.017602667, 0.017608764, 0.017614319, 0.017619472, 0.017626389, 0.017632903, 0.017638694, 0.017644417, 0.017650778, 0.017657139, 0.017663736, 0.017669472, 0.017676111, 0.017681722, 0.017688181, 0.017694694, 0.017700986, 0.017706722], 'source}</msg>
<status status="PASS" starttime="20201030 18:32:30.138" endtime="20201030 18:32:30.141"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:30.135" endtime="20201030 18:32:30.142"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:30.145" level="INFO">${RESULT} = [{'diff': 5.278000000000921e-06}, {'diff': 6.1939999999975626e-06}, {'diff': 6.611000000000117e-06}, {'diff': 5.083000000002946e-06}, {'diff': 6.709000000000576e-06}, {'diff': 5.153000000000796e-06}, ...</msg>
<status status="PASS" starttime="20201030 18:32:30.143" endtime="20201030 18:32:30.146"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:32:30.149" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.278000000000921e-06, 6.1939999999975626e-06, 6.611000000000117e-06, 5.083000000002946e-06, 6.709000000000576e-06, 5.153000000000796e-06, 5.971999999999922e-06, 5.5689999999969375e-06, 5.97...</msg>
<status status="PASS" starttime="20201030 18:32:30.146" endtime="20201030 18:32:30.149"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:30.153" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:32:30.152" endtime="20201030 18:32:30.153"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:30.155" level="INFO">VALUE: [5.278000000000921e-06, 6.1939999999975626e-06, 6.611000000000117e-06, 5.083000000002946e-06, 6.709000000000576e-06, 5.153000000000796e-06, 5.971999999999922e-06, 5.5689999999969375e-06, 5.9729999999993955e-06, 6.3329999999972575e-06, 6.694000000001532e-06, 6.736000000000242e-06, 5.194000000000032e-06, 5.554999999997368e-06, 6.708000000001102e-06, 5.361000000002336e-06, 6.097000000000047e-06, 5.153000000000796e-06, 6.513999999999132e-06, 5.7229999999991454e-06, 6.360999999999867e-06, 5.735999999999242e-06, 5.610999999999117e-06, 6.512999999999658e-06, 5.736000000002711e-06]</msg>
<status status="PASS" starttime="20201030 18:32:30.154" endtime="20201030 18:32:30.155"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:30.149" endtime="20201030 18:32:30.156"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:30.160" endtime="20201030 18:32:30.179"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:30.158" endtime="20201030 18:32:30.180"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:30.157" endtime="20201030 18:32:30.180"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:29.808" endtime="20201030 18:32:30.180"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:29.808" endtime="20201030 18:32:30.180"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:30.189" endtime="20201030 18:32:30.201"></status>
</kw>
<msg timestamp="20201030 18:32:30.201" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:30.187" endtime="20201030 18:32:30.202"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:30.204" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:30.202" endtime="20201030 18:32:30.204"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:30.205" endtime="20201030 18:32:30.206"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:30.184" endtime="20201030 18:32:30.207"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:30.182" endtime="20201030 18:32:30.207"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:30.214" endtime="20201030 18:32:30.479"></status>
</kw>
<msg timestamp="20201030 18:32:30.481" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018272903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018279597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:30.212" endtime="20201030 18:32:30.481"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:30.486" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018272903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018279597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:30.482" endtime="20201030 18:32:30.486"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:30.487" endtime="20201030 18:32:30.489"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:30.210" endtime="20201030 18:32:30.489"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:30.208" endtime="20201030 18:32:30.490"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:32:30.504" level="INFO">${debug} = {'diff': [0, 6.694000000001532e-06, 6.763999999999382e-06, 6.8329999999977575e-06, 6.749999999999812e-06, 5.987000000002435e-06, 5.721999999999672e-06, 5.624999999998687e-06, 6.347000000000297e-06, 5....</msg>
<status status="PASS" starttime="20201030 18:32:30.491" endtime="20201030 18:32:30.504"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:30.505" endtime="20201030 18:32:30.506"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:30.510" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:32:30.509" endtime="20201030 18:32:30.510"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:30.513" level="INFO">VALUE: {'diff': [0, 6.694000000001532e-06, 6.763999999999382e-06, 6.8329999999977575e-06, 6.749999999999812e-06, 5.987000000002435e-06, 5.721999999999672e-06, 5.624999999998687e-06, 6.347000000000297e-06, 5.375000000001906e-06, 6.568999999997938e-06, 6.278000000001921e-06, 5.499999999998562e-06, 6.570000000000881e-06, 6.458000000000852e-06, 6.555999999997841e-06, 6.540999999998798e-06, 6.709000000000576e-06, 6.736000000000242e-06, 5.180000000000462e-06, 5.639000000001726e-06, 6.388999999999007e-06, 5.569000000000407e-06, 6.2639999999988816e-06, 6.513999999999132e-06, 6.042000000001241e-06, 5.125000000001656e-06, 5.5689999999969375e-06, 5.556000000000311e-06, 6.874999999999937e-06, 5.417000000000616e-06, 6.180000000001462e-06, 5.846999999999797e-06, 6.181000000000936e-06, 5.1799999999969926e-06, 5.625000000002156e-06, 5.86199999999884e-06, 5.624999999998687e-06, 5.263000000001877e-06, 6.499999999999562e-06, 5.681000000000436e-06, 5.194000000000032e-06, 6.042000000001241e-06, 5.319999999999631e-06, 5.985999999999492e-06, 6.222000000000172e-06, 5.542000000000741e-06, 6.762999999999908e-06, 5.736999999998715e-06, 5.610999999999117e-06], 'eventsource_diff': [0, 6.694000000001532e-06, 6.763999999999382e-06, 6.8329999999977575e-06, 6.749999999999812e-06, 5.987000000002435e-06, 5.721999999999672e-06, 5.624999999998687e-06, 6.347000000000297e-06, 5.375000000001906e-06, 6.568999999997938e-06, 6.278000000001921e-06, 5.499999999998562e-06, 6.570000000000881e-06, 6.458000000000852e-06, 6.555999999997841e-06, 6.540999999998798e-06, 6.709000000000576e-06, 6.736000000000242e-06, 5.180000000000462e-06, 5.639000000001726e-06, 6.388999999999007e-06, 5.569000000000407e-06, 6.2639999999988816e-06, 6.513999999999132e-06, 6.042000000001241e-06, 5.125000000001656e-06, 5.5689999999969375e-06, 5.556000000000311e-06, 6.874999999999937e-06, 5.417000000000616e-06, 6.180000000001462e-06, 5.846999999999797e-06, 6.181000000000936e-06, 5.1799999999969926e-06, 5.625000000002156e-06, 5.86199999999884e-06, 5.624999999998687e-06, 5.263000000001877e-06, 6.499999999999562e-06, 5.681000000000436e-06, 5.194000000000032e-06, 6.042000000001241e-06, 5.319999999999631e-06, 5.985999999999492e-06, 6.222000000000172e-06, 5.542000000000741e-06, 6.762999999999908e-06, 5.736999999998715e-06, 5.610999999999117e-06], 'time': [0.018272903, 0.018279597, 0.018286361, 0.018293194, 0.018299944, 0.018305931, 0.018311653, 0.018317278, 0.018323625, 0.018329, 0.018335569, 0.018341847, 0.018347347, 0.018353917, 0.018360375, 0.018366931, 0.018373472, 0.018380181, 0.018386917, 0.018392097, 0.018397736, 0.018404125, 0.018409694, 0.018415958, 0.018422472, 0.018428514, 0.018433639, 0.018439208, 0.018444764, 0.018451639, 0.018457056, 0.018463236, 0.018469083, 0.018475264, 0.018480444, 0.018486069, 0.018491931, 0.018497556, 0.018502819, 0.018509319, 0.018515, 0.018520194, 0.018526236, 0.018531556, 0.018537542, 0.018543764, 0.018549306, 0.018556069, 0.018561806, 0.018567417], 'source}</msg>
<status status="PASS" starttime="20201030 18:32:30.511" endtime="20201030 18:32:30.514"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:30.507" endtime="20201030 18:32:30.514"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:30.517" level="INFO">${RESULT} = [{'diff': 6.694000000001532e-06}, {'diff': 6.8329999999977575e-06}, {'diff': 5.987000000002435e-06}, {'diff': 5.624999999998687e-06}, {'diff': 5.375000000001906e-06}, {'diff': 6.278000000001921e-06}, ...</msg>
<status status="PASS" starttime="20201030 18:32:30.515" endtime="20201030 18:32:30.518"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:32:30.521" level="INFO">${GPIO_OVERHEAD} = {'diff': [6.694000000001532e-06, 6.8329999999977575e-06, 5.987000000002435e-06, 5.624999999998687e-06, 5.375000000001906e-06, 6.278000000001921e-06, 6.570000000000881e-06, 6.555999999997841e-06, 6.709...</msg>
<status status="PASS" starttime="20201030 18:32:30.518" endtime="20201030 18:32:30.521"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:30.525" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:32:30.524" endtime="20201030 18:32:30.525"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:30.527" level="INFO">VALUE: [6.694000000001532e-06, 6.8329999999977575e-06, 5.987000000002435e-06, 5.624999999998687e-06, 5.375000000001906e-06, 6.278000000001921e-06, 6.570000000000881e-06, 6.555999999997841e-06, 6.709000000000576e-06, 5.180000000000462e-06, 6.388999999999007e-06, 6.2639999999988816e-06, 6.042000000001241e-06, 5.5689999999969375e-06, 6.874999999999937e-06, 6.180000000001462e-06, 6.181000000000936e-06, 5.625000000002156e-06, 5.624999999998687e-06, 6.499999999999562e-06, 5.194000000000032e-06, 5.319999999999631e-06, 6.222000000000172e-06, 6.762999999999908e-06, 5.610999999999117e-06]</msg>
<status status="PASS" starttime="20201030 18:32:30.526" endtime="20201030 18:32:30.528"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:30.521" endtime="20201030 18:32:30.528"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:30.533" endtime="20201030 18:32:30.553"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:30.532" endtime="20201030 18:32:30.553"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:30.529" endtime="20201030 18:32:30.554"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:30.181" endtime="20201030 18:32:30.554"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:30.181" endtime="20201030 18:32:30.554"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:30.562" endtime="20201030 18:32:30.573"></status>
</kw>
<msg timestamp="20201030 18:32:30.573" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:30.560" endtime="20201030 18:32:30.573"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:30.576" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:30.574" endtime="20201030 18:32:30.576"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:30.577" endtime="20201030 18:32:30.578"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:30.558" endtime="20201030 18:32:30.579"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:30.556" endtime="20201030 18:32:30.579"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:30.585" endtime="20201030 18:32:30.850"></status>
</kw>
<msg timestamp="20201030 18:32:30.852" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017362083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0173685, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:32:30.584" endtime="20201030 18:32:30.852"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:30.857" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017362083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0173685, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:32:30.853" endtime="20201030 18:32:30.858"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:30.858" endtime="20201030 18:32:30.860"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:30.581" endtime="20201030 18:32:30.861"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:30.580" endtime="20201030 18:32:30.861"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:32:30.874" level="INFO">${debug} = {'diff': [0, 6.416999999998146e-06, 5.125000000001656e-06, 6.306000000001061e-06, 6.665999999998923e-06, 6.570000000000881e-06, 6.888999999999507e-06, 4.9999999999980616e-06, 5.694000000000532e-06, 6....</msg>
<status status="PASS" starttime="20201030 18:32:30.862" endtime="20201030 18:32:30.875"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:30.875" endtime="20201030 18:32:30.877"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:30.881" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:32:30.880" endtime="20201030 18:32:30.881"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:30.885" level="INFO">VALUE: {'diff': [0, 6.416999999998146e-06, 5.125000000001656e-06, 6.306000000001061e-06, 6.665999999998923e-06, 6.570000000000881e-06, 6.888999999999507e-06, 4.9999999999980616e-06, 5.694000000000532e-06, 6.681000000001436e-06, 5.512999999998658e-06, 5.8479999999992704e-06, 6.861000000000367e-06, 5.082999999999477e-06, 5.917000000001116e-06, 5.471999999999422e-06, 5.180999999999936e-06, 6.805000000002087e-06, 6.222000000000172e-06, 6.0279999999982015e-06, 5.735999999999242e-06, 6.874999999999937e-06, 6.360999999999867e-06, 6.778000000002421e-06, 5.985999999999492e-06, 6.334000000000201e-06, 5.860999999999367e-06, 5.805000000001087e-06, 6.445000000000756e-06, 5.679999999997493e-06, 5.08400000000242e-06, 5.846999999999797e-06, 5.040999999997298e-06, 6.2229999999996455e-06, 5.833000000000227e-06, 6.931000000001686e-06, 5.152000000001322e-06, 6.569999999997411e-06, 6.861000000000367e-06, 5.985999999999492e-06, 5.207999999999602e-06, 5.014000000001101e-06, 6.570000000000881e-06, 5.805000000001087e-06, 5.1949999999995056e-06, 5.096999999999047e-06, 5.194000000000032e-06, 6.2229999999996455e-06, 5.555000000000837e-06, 6.041999999997771e-06], 'eventsource_diff': [0, 6.416999999998146e-06, 5.125000000001656e-06, 6.306000000001061e-06, 6.665999999998923e-06, 6.570000000000881e-06, 6.888999999999507e-06, 4.9999999999980616e-06, 5.694000000000532e-06, 6.681000000001436e-06, 5.512999999998658e-06, 5.8479999999992704e-06, 6.861000000000367e-06, 5.082999999999477e-06, 5.917000000001116e-06, 5.471999999999422e-06, 5.180999999999936e-06, 6.805000000002087e-06, 6.222000000000172e-06, 6.0279999999982015e-06, 5.735999999999242e-06, 6.874999999999937e-06, 6.360999999999867e-06, 6.778000000002421e-06, 5.985999999999492e-06, 6.334000000000201e-06, 5.860999999999367e-06, 5.805000000001087e-06, 6.445000000000756e-06, 5.679999999997493e-06, 5.08400000000242e-06, 5.846999999999797e-06, 5.040999999997298e-06, 6.2229999999996455e-06, 5.833000000000227e-06, 6.931000000001686e-06, 5.152000000001322e-06, 6.569999999997411e-06, 6.861000000000367e-06, 5.985999999999492e-06, 5.207999999999602e-06, 5.014000000001101e-06, 6.570000000000881e-06, 5.805000000001087e-06, 5.1949999999995056e-06, 5.096999999999047e-06, 5.194000000000032e-06, 6.2229999999996455e-06, 5.555000000000837e-06, 6.041999999997771e-06], 'time': [0.017362083, 0.0173685, 0.017373625, 0.017379931, 0.017386597, 0.017393167, 0.017400056, 0.017405056, 0.01741075, 0.017417431, 0.017422944, 0.017428792, 0.017435653, 0.017440736, 0.017446653, 0.017452125, 0.017457306, 0.017464111, 0.017470333, 0.017476361, 0.017482097, 0.017488972, 0.017495333, 0.017502111, 0.017508097, 0.017514431, 0.017520292, 0.017526097, 0.017532542, 0.017538222, 0.017543306, 0.017549153, 0.017554194, 0.017560417, 0.01756625, 0.017573181, 0.017578333, 0.017584903, 0.017591764, 0.01759775, 0.017602958, 0.017607972, 0.017614542, 0.017620347, 0.017625542, 0.017630639, 0.017635833, 0.017642056, 0.017647611, 0.017653653], 'source}</msg>
<status status="PASS" starttime="20201030 18:32:30.882" endtime="20201030 18:32:30.886"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:30.878" endtime="20201030 18:32:30.887"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:30.891" level="INFO">${RESULT} = [{'diff': 6.416999999998146e-06}, {'diff': 6.306000000001061e-06}, {'diff': 6.570000000000881e-06}, {'diff': 4.9999999999980616e-06}, {'diff': 6.681000000001436e-06}, {'diff': 5.8479999999992704e-06},...</msg>
<status status="PASS" starttime="20201030 18:32:30.888" endtime="20201030 18:32:30.891"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:32:30.896" level="INFO">${GPIO_OVERHEAD} = {'diff': [6.416999999998146e-06, 6.306000000001061e-06, 6.570000000000881e-06, 4.9999999999980616e-06, 6.681000000001436e-06, 5.8479999999992704e-06, 5.082999999999477e-06, 5.471999999999422e-06, 6.80...</msg>
<status status="PASS" starttime="20201030 18:32:30.892" endtime="20201030 18:32:30.896"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:30.900" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:32:30.899" endtime="20201030 18:32:30.900"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:30.902" level="INFO">VALUE: [6.416999999998146e-06, 6.306000000001061e-06, 6.570000000000881e-06, 4.9999999999980616e-06, 6.681000000001436e-06, 5.8479999999992704e-06, 5.082999999999477e-06, 5.471999999999422e-06, 6.805000000002087e-06, 6.0279999999982015e-06, 6.874999999999937e-06, 6.778000000002421e-06, 6.334000000000201e-06, 5.805000000001087e-06, 5.679999999997493e-06, 5.846999999999797e-06, 6.2229999999996455e-06, 6.931000000001686e-06, 6.569999999997411e-06, 5.985999999999492e-06, 5.014000000001101e-06, 5.805000000001087e-06, 5.096999999999047e-06, 6.2229999999996455e-06, 6.041999999997771e-06]</msg>
<status status="PASS" starttime="20201030 18:32:30.901" endtime="20201030 18:32:30.903"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:30.897" endtime="20201030 18:32:30.904"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:30.908" endtime="20201030 18:32:30.928"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:30.907" endtime="20201030 18:32:30.929"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:30.905" endtime="20201030 18:32:30.929"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:30.555" endtime="20201030 18:32:30.929"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:30.554" endtime="20201030 18:32:30.930"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:30.938" endtime="20201030 18:32:30.947"></status>
</kw>
<msg timestamp="20201030 18:32:30.948" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:30.936" endtime="20201030 18:32:30.948"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:30.950" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:30.949" endtime="20201030 18:32:30.950"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:30.951" endtime="20201030 18:32:30.953"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:30.933" endtime="20201030 18:32:30.953"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:30.932" endtime="20201030 18:32:30.954"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:30.960" endtime="20201030 18:32:31.230"></status>
</kw>
<msg timestamp="20201030 18:32:31.232" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017722931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017729681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:30.959" endtime="20201030 18:32:31.232"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:31.238" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017722931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017729681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:31.233" endtime="20201030 18:32:31.238"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:31.239" endtime="20201030 18:32:31.240"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:30.956" endtime="20201030 18:32:31.241"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:30.954" endtime="20201030 18:32:31.242"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:32:31.256" level="INFO">${debug} = {'diff': [0, 6.749999999999812e-06, 5.735999999999242e-06, 6.874999999999937e-06, 5.139000000001226e-06, 6.818999999998188e-06, 6.819000000001657e-06, 5.1949999999995056e-06, 5.917000000001116e-06, 5....</msg>
<status status="PASS" starttime="20201030 18:32:31.243" endtime="20201030 18:32:31.256"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:31.257" endtime="20201030 18:32:31.259"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:31.262" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:32:31.261" endtime="20201030 18:32:31.262"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:31.265" level="INFO">VALUE: {'diff': [0, 6.749999999999812e-06, 5.735999999999242e-06, 6.874999999999937e-06, 5.139000000001226e-06, 6.818999999998188e-06, 6.819000000001657e-06, 5.1949999999995056e-06, 5.917000000001116e-06, 5.137999999998283e-06, 6.806000000001561e-06, 5.027999999997201e-06, 5.680000000000962e-06, 5.569999999999881e-06, 6.222000000000172e-06, 5.360999999998867e-06, 5.569999999999881e-06, 6.513000000003127e-06, 6.499999999999562e-06, 6.749999999999812e-06, 6.944999999997786e-06, 6.749999999999812e-06, 6.222000000000172e-06, 6.708000000001102e-06, 6.6529999999988265e-06, 6.347000000000297e-06, 6.028000000001671e-06, 5.749999999998812e-06, 6.320000000000631e-06, 5.096999999999047e-06, 6.333000000000727e-06, 6.167000000001366e-06, 5.666999999997396e-06, 6.874999999999937e-06, 5.068999999999907e-06, 5.028000000000671e-06, 5.166000000000892e-06, 5.250000000001781e-06, 5.666999999997396e-06, 6.570000000000881e-06, 6.333000000000727e-06, 5.082999999999477e-06, 6.347000000000297e-06, 5.2639999999978815e-06, 5.08400000000242e-06, 5.0139999999976315e-06, 6.513000000003127e-06, 6.291999999998021e-06, 6.945000000001256e-06, 6.374999999999437e-06], 'eventsource_diff': [0, 6.749999999999812e-06, 5.735999999999242e-06, 6.874999999999937e-06, 5.139000000001226e-06, 6.818999999998188e-06, 6.819000000001657e-06, 5.1949999999995056e-06, 5.917000000001116e-06, 5.137999999998283e-06, 6.806000000001561e-06, 5.027999999997201e-06, 5.680000000000962e-06, 5.569999999999881e-06, 6.222000000000172e-06, 5.360999999998867e-06, 5.569999999999881e-06, 6.513000000003127e-06, 6.499999999999562e-06, 6.749999999999812e-06, 6.944999999997786e-06, 6.749999999999812e-06, 6.222000000000172e-06, 6.708000000001102e-06, 6.6529999999988265e-06, 6.347000000000297e-06, 6.028000000001671e-06, 5.749999999998812e-06, 6.320000000000631e-06, 5.096999999999047e-06, 6.333000000000727e-06, 6.167000000001366e-06, 5.666999999997396e-06, 6.874999999999937e-06, 5.068999999999907e-06, 5.028000000000671e-06, 5.166000000000892e-06, 5.250000000001781e-06, 5.666999999997396e-06, 6.570000000000881e-06, 6.333000000000727e-06, 5.082999999999477e-06, 6.347000000000297e-06, 5.2639999999978815e-06, 5.08400000000242e-06, 5.0139999999976315e-06, 6.513000000003127e-06, 6.291999999998021e-06, 6.945000000001256e-06, 6.374999999999437e-06], 'time': [0.017722931, 0.017729681, 0.017735417, 0.017742292, 0.017747431, 0.01775425, 0.017761069, 0.017766264, 0.017772181, 0.017777319, 0.017784125, 0.017789153, 0.017794833, 0.017800403, 0.017806625, 0.017811986, 0.017817556, 0.017824069, 0.017830569, 0.017837319, 0.017844264, 0.017851014, 0.017857236, 0.017863944, 0.017870597, 0.017876944, 0.017882972, 0.017888722, 0.017895042, 0.017900139, 0.017906472, 0.017912639, 0.017918306, 0.017925181, 0.01793025, 0.017935278, 0.017940444, 0.017945694, 0.017951361, 0.017957931, 0.017964264, 0.017969347, 0.017975694, 0.017980958, 0.017986042, 0.017991056, 0.017997569, 0.018003861, 0.018010806, 0.018017181], 'source}</msg>
<status status="PASS" starttime="20201030 18:32:31.263" endtime="20201030 18:32:31.266"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:31.259" endtime="20201030 18:32:31.266"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:31.270" level="INFO">${RESULT} = [{'diff': 6.749999999999812e-06}, {'diff': 6.874999999999937e-06}, {'diff': 6.818999999998188e-06}, {'diff': 5.1949999999995056e-06}, {'diff': 5.137999999998283e-06}, {'diff': 5.027999999997201e-06}, ...</msg>
<status status="PASS" starttime="20201030 18:32:31.267" endtime="20201030 18:32:31.270"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:32:31.273" level="INFO">${GPIO_OVERHEAD} = {'diff': [6.749999999999812e-06, 6.874999999999937e-06, 6.818999999998188e-06, 5.1949999999995056e-06, 5.137999999998283e-06, 5.027999999997201e-06, 5.569999999999881e-06, 5.360999999998867e-06, 6.513...</msg>
<status status="PASS" starttime="20201030 18:32:31.270" endtime="20201030 18:32:31.273"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:31.277" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:32:31.276" endtime="20201030 18:32:31.277"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:31.279" level="INFO">VALUE: [6.749999999999812e-06, 6.874999999999937e-06, 6.818999999998188e-06, 5.1949999999995056e-06, 5.137999999998283e-06, 5.027999999997201e-06, 5.569999999999881e-06, 5.360999999998867e-06, 6.513000000003127e-06, 6.749999999999812e-06, 6.749999999999812e-06, 6.708000000001102e-06, 6.347000000000297e-06, 5.749999999998812e-06, 5.096999999999047e-06, 6.167000000001366e-06, 6.874999999999937e-06, 5.028000000000671e-06, 5.250000000001781e-06, 6.570000000000881e-06, 5.082999999999477e-06, 5.2639999999978815e-06, 5.0139999999976315e-06, 6.291999999998021e-06, 6.374999999999437e-06]</msg>
<status status="PASS" starttime="20201030 18:32:31.278" endtime="20201030 18:32:31.280"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:31.273" endtime="20201030 18:32:31.280"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:31.284" endtime="20201030 18:32:31.303"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:31.282" endtime="20201030 18:32:31.304"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:31.281" endtime="20201030 18:32:31.304"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:30.930" endtime="20201030 18:32:31.304"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:30.930" endtime="20201030 18:32:31.305"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:31.312" endtime="20201030 18:32:31.325"></status>
</kw>
<msg timestamp="20201030 18:32:31.326" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:31.311" endtime="20201030 18:32:31.326"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:31.328" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:31.327" endtime="20201030 18:32:31.329"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:31.329" endtime="20201030 18:32:31.331"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:31.308" endtime="20201030 18:32:31.331"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:31.307" endtime="20201030 18:32:31.332"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:31.339" endtime="20201030 18:32:31.605"></status>
</kw>
<msg timestamp="20201030 18:32:31.607" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017397764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017403264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:31.337" endtime="20201030 18:32:31.607"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:31.612" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017397764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017403264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:31.608" endtime="20201030 18:32:31.612"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:31.613" endtime="20201030 18:32:31.615"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:31.334" endtime="20201030 18:32:31.615"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:31.333" endtime="20201030 18:32:31.616"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:32:31.629" level="INFO">${debug} = {'diff': [0, 5.500000000002031e-06, 6.443999999997813e-06, 5.750000000002281e-06, 6.847999999996801e-06, 5.986000000002961e-06, 6.568999999997938e-06, 6.749999999999812e-06, 5.806000000000561e-06, 5.1...</msg>
<status status="PASS" starttime="20201030 18:32:31.616" endtime="20201030 18:32:31.629"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:31.630" endtime="20201030 18:32:31.631"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:31.635" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:32:31.634" endtime="20201030 18:32:31.635"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:31.638" level="INFO">VALUE: {'diff': [0, 5.500000000002031e-06, 6.443999999997813e-06, 5.750000000002281e-06, 6.847999999996801e-06, 5.986000000002961e-06, 6.568999999997938e-06, 6.749999999999812e-06, 5.806000000000561e-06, 5.166000000000892e-06, 5.6529999999978264e-06, 6.570000000000881e-06, 6.097000000000047e-06, 6.153000000001796e-06, 6.637999999999783e-06, 5.916999999997646e-06, 5.681000000000436e-06, 5.097000000002516e-06, 6.499999999999562e-06, 6.818999999998188e-06, 6.195000000000506e-06, 6.833000000001227e-06, 4.9999999999980616e-06, 5.500000000002031e-06, 5.082999999999477e-06, 6.459000000000326e-06, 5.319000000000157e-06, 5.860999999999367e-06, 5.8889999999985065e-06, 5.167000000000366e-06, 6.583000000000977e-06, 5.319999999999631e-06, 6.804999999998618e-06, 5.556000000000311e-06, 5.332999999999727e-06, 5.319999999999631e-06, 6.208000000000602e-06, 5.264000000001351e-06, 5.430000000000712e-06, 6.4729999999998955e-06, 6.026999999998728e-06, 5.153000000000796e-06, 6.749999999999812e-06, 6.2639999999988816e-06, 6.347000000000297e-06, 6.736000000000242e-06, 6.459000000000326e-06, 6.041000000001767e-06, 6.444999999997286e-06, 6.069000000000907e-06], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING'], 'source_diff': [0, 5.500000000002031e-06, 6.443999999997813e-06, 5.750000000002281e-06, 6.847999999996801e-06, 5.986000000002961e-06, 6.568999999997938e-06, 6.749999999999812e-06, 5.806000000000561e-06, 5.166000000000892e-06, 5.6529999999978264e-06, 6.570000000000881e-06, 6.097000000000047e-06, 6.153000000001796e-06, 6.637999999999783e-06, 5.916999999997646e-06, 5.681000000000436e-06, 5.097000000002516e-06, 6.499999999999562e-06, 6.818999999998188e-06, 6.195000000000506e-06, 6.833000000001227e-06, 4.9999999999980616e-06, 5.500000000002031e-06, 5.082999999999477e-06, 6.459000000000326e-06, 5.319000000000157e-06, 5.860999999999367e-06, 5.8889999999985065e-06, 5.167000000000366e-06, 6.583000000000977e-06, 5.319999999999631e-06, 6.804999999998618e-06, 5.556000000000311e-06, 5.332999999999727e-06, 5.319999999999631e-06, 6.208000000000602e-06, 5.264000000001351e-06, 5.430000000000712e-06, 6.4729999999998955e-06, 6.026999999998728e-06, 5.153000000000796e-06, 6.749999999999812e-06, 6.2639999999988816e-06, 6.347000000000297e-06, 6.736000000000242e-06, 6.459000000000326e-06, 6.041000000001767e-06, 6.444999999997286e-06, 6.069000000000907e-06], 'time': [0.017397764, 0.017403264, 0.017409708, 0.017415458, 0.017422306, 0.017428292, 0.017434861, 0.017441611, 0.017447417, 0.017452583, 0.017458236, 0.017464806, 0.017470903, 0.017477056, 0.017483694, 0.017489611, 0.017495292, 0.017500389, 0.017506889, 0.017513708, 0.017519903, 0.017526736, 0.017531736, 0.017537236, 0.017542319, 0.017548778, 0.017554097, 0.017559958, 0.017565847, 0.017571014, 0.017577597, 0.017582917, 0.017589722, 0.017595278, 0.017600611, 0.017605931, 0.017612139, 0.017617403, 0.017622833, 0.017629306, 0.017635333, 0.017640486, 0.017647236, 0.0176535, 0.017659847, 0.017666583, 0.017673042, 0.017679083, 0.017685528, 0.017691597], 'source}</msg>
<status status="PASS" starttime="20201030 18:32:31.636" endtime="20201030 18:32:31.639"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:31.632" endtime="20201030 18:32:31.639"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:31.643" level="INFO">${RESULT} = [{'diff': 5.500000000002031e-06}, {'diff': 5.750000000002281e-06}, {'diff': 5.986000000002961e-06}, {'diff': 6.749999999999812e-06}, {'diff': 5.166000000000892e-06}, {'diff': 6.570000000000881e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:32:31.640" endtime="20201030 18:32:31.643"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:32:31.646" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.500000000002031e-06, 5.750000000002281e-06, 5.986000000002961e-06, 6.749999999999812e-06, 5.166000000000892e-06, 6.570000000000881e-06, 6.153000000001796e-06, 5.916999999997646e-06, 5.0970...</msg>
<status status="PASS" starttime="20201030 18:32:31.644" endtime="20201030 18:32:31.646"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:31.650" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:32:31.649" endtime="20201030 18:32:31.651"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:31.652" level="INFO">VALUE: [5.500000000002031e-06, 5.750000000002281e-06, 5.986000000002961e-06, 6.749999999999812e-06, 5.166000000000892e-06, 6.570000000000881e-06, 6.153000000001796e-06, 5.916999999997646e-06, 5.097000000002516e-06, 6.818999999998188e-06, 6.833000000001227e-06, 5.500000000002031e-06, 6.459000000000326e-06, 5.860999999999367e-06, 5.167000000000366e-06, 5.319999999999631e-06, 5.556000000000311e-06, 5.319999999999631e-06, 5.264000000001351e-06, 6.4729999999998955e-06, 5.153000000000796e-06, 6.2639999999988816e-06, 6.736000000000242e-06, 6.041000000001767e-06, 6.069000000000907e-06]</msg>
<status status="PASS" starttime="20201030 18:32:31.651" endtime="20201030 18:32:31.653"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:31.647" endtime="20201030 18:32:31.653"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:31.657" endtime="20201030 18:32:31.676"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:31.655" endtime="20201030 18:32:31.677"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:31.654" endtime="20201030 18:32:31.677"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:31.305" endtime="20201030 18:32:31.678"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:31.305" endtime="20201030 18:32:31.678"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:24.167" endtime="20201030 18:32:31.678"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:31.682" endtime="20201030 18:32:31.701"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:31.680" endtime="20201030 18:32:31.702"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:31.679" endtime="20201030 18:32:31.702"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 18:32:21.054" endtime="20201030 18:32:31.702" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:31.709" endtime="20201030 18:32:31.729"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:31.708" endtime="20201030 18:32:31.730"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:31.743" endtime="20201030 18:32:34.764"></status>
</kw>
<msg timestamp="20201030 18:32:34.765" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:31.741" endtime="20201030 18:32:34.766"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:34.770" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:34.768" endtime="20201030 18:32:34.771"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:32:34.777" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:32:34.773" endtime="20201030 18:32:34.777"></status>
</kw>
<status status="FAIL" starttime="20201030 18:32:31.739" endtime="20201030 18:32:34.779"></status>
</kw>
<status status="FAIL" starttime="20201030 18:32:31.736" endtime="20201030 18:32:34.780"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:31.735" endtime="20201030 18:32:34.781"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:32:34.789" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:32:34.787" endtime="20201030 18:32:34.790"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:34.783" endtime="20201030 18:32:34.790"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:31.734" endtime="20201030 18:32:34.790"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:31.734" endtime="20201030 18:32:34.791"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:34.792" endtime="20201030 18:32:34.795"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:31.732" endtime="20201030 18:32:34.796"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:31.731" endtime="20201030 18:32:34.797"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:31.706" endtime="20201030 18:32:34.798"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:34.816" endtime="20201030 18:32:34.833"></status>
</kw>
<msg timestamp="20201030 18:32:34.834" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:34.812" endtime="20201030 18:32:34.834"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:34.839" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:34.836" endtime="20201030 18:32:34.839"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:34.841" endtime="20201030 18:32:34.844"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:34.807" endtime="20201030 18:32:34.845"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:34.804" endtime="20201030 18:32:34.846"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:34.857" endtime="20201030 18:32:35.152"></status>
</kw>
<msg timestamp="20201030 18:32:35.155" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.098663056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.098663972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:34.855" endtime="20201030 18:32:35.156"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:35.163" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.098663056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.098663972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:35.156" endtime="20201030 18:32:35.164"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:35.165" endtime="20201030 18:32:35.166"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:34.851" endtime="20201030 18:32:35.167"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:34.847" endtime="20201030 18:32:35.167"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:35.171" level="INFO">${RESULT} = [{'diff': 9.160000002950142e-07}, {'diff': 9.169999999336653e-07}, {'diff': 9.439999999472093e-07}, {'diff': 9.310000002038521e-07}, {'diff': 9.309999997597629e-07}, {'diff': 9.169999999336653e-07}, {...</msg>
<status status="PASS" starttime="20201030 18:32:35.168" endtime="20201030 18:32:35.171"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:32:35.175" level="INFO">${OVERHEAD} = {'diff': [9.160000002950142e-07, 9.169999999336653e-07, 9.439999999472093e-07, 9.310000002038521e-07, 9.309999997597629e-07, 9.169999999336653e-07, 9.300000001211117e-07, 9.15999999850925e-07, 9.31000...</msg>
<status status="PASS" starttime="20201030 18:32:35.172" endtime="20201030 18:32:35.176"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:35.180" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:32:35.179" endtime="20201030 18:32:35.180"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:35.182" level="INFO">VALUE: [9.160000002950142e-07, 9.169999999336653e-07, 9.439999999472093e-07, 9.310000002038521e-07, 9.309999997597629e-07, 9.169999999336653e-07, 9.300000001211117e-07, 9.15999999850925e-07, 9.310000002038521e-07, 9.310000002038521e-07, 9.310000002038521e-07, 9.450000000299497e-07, 9.300000001211117e-07, 9.450000000299497e-07, 9.310000002038521e-07, 9.450000000299497e-07, 9.300000001211117e-07, 9.030000001075678e-07, 9.310000002038521e-07, 9.300000001211117e-07, 9.309999997597629e-07, 9.299999996770225e-07, 9.300000001211117e-07, 9.300000001211117e-07, 9.15999999850925e-07, 9.450000000299497e-07, 9.300000001211117e-07, 9.030000001075678e-07, 9.300000001211117e-07, 9.300000001211117e-07, 9.299999996770225e-07, 9.160000002950142e-07, 9.450000000299497e-07, 9.999999996956888e-07, 9.169999999336653e-07, 9.300000001211117e-07, 9.439999999472093e-07, 9.300000001211117e-07, 9.160000002950142e-07, 9.300000001211117e-07, 9.309999997597629e-07, 8.88999999837381e-07, 9.309999997597629e-07, 9.300000001211117e-07, 9.169999999336653e-07, 9.300000001211117e-07, 9.310000002038521e-07, 9.160000002950142e-07, 9.030000001075678e-07, 9.310000002038521e-07]</msg>
<status status="PASS" starttime="20201030 18:32:35.181" endtime="20201030 18:32:35.184"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:35.176" endtime="20201030 18:32:35.185"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:35.189" endtime="20201030 18:32:35.208"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:35.187" endtime="20201030 18:32:35.209"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:35.186" endtime="20201030 18:32:35.209"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:34.801" endtime="20201030 18:32:35.209"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:34.800" endtime="20201030 18:32:35.209"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:35.217" endtime="20201030 18:32:35.230"></status>
</kw>
<msg timestamp="20201030 18:32:35.231" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:35.216" endtime="20201030 18:32:35.231"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:35.233" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:35.232" endtime="20201030 18:32:35.234"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:35.234" endtime="20201030 18:32:35.236"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:35.213" endtime="20201030 18:32:35.237"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:35.212" endtime="20201030 18:32:35.237"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:35.243" endtime="20201030 18:32:35.533"></status>
</kw>
<msg timestamp="20201030 18:32:35.536" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017839306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017840222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:35.242" endtime="20201030 18:32:35.536"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:35.544" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017839306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017840222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:35.537" endtime="20201030 18:32:35.544"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:35.545" endtime="20201030 18:32:35.547"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:35.239" endtime="20201030 18:32:35.547"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:35.238" endtime="20201030 18:32:35.548"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:35.554" level="INFO">${RESULT} = [{'diff': 9.160000000001112e-07}, {'diff': 9.169999999995848e-07}, {'diff': 9.030000000000149e-07}, {'diff': 9.169999999995848e-07}, {'diff': 9.169999999995848e-07}, {'diff': 1.01400000000057e-06}, {'...</msg>
<status status="PASS" starttime="20201030 18:32:35.549" endtime="20201030 18:32:35.555"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:32:35.563" level="INFO">${OVERHEAD} = {'diff': [9.160000000001112e-07, 9.169999999995848e-07, 9.030000000000149e-07, 9.169999999995848e-07, 9.169999999995848e-07, 1.01400000000057e-06, 9.43999999999251e-07, 9.160000000001112e-07, 9.160000...</msg>
<status status="PASS" starttime="20201030 18:32:35.556" endtime="20201030 18:32:35.563"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:35.570" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:32:35.568" endtime="20201030 18:32:35.571"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:35.574" level="INFO">VALUE: [9.160000000001112e-07, 9.169999999995848e-07, 9.030000000000149e-07, 9.169999999995848e-07, 9.169999999995848e-07, 1.01400000000057e-06, 9.43999999999251e-07, 9.160000000001112e-07, 9.160000000001112e-07, 8.89000000000445e-07, 9.57999999998821e-07, 9.169999999995848e-07, 9.299999999996811e-07, 9.160000000001112e-07, 8.330000000021653e-07, 9.299999999996811e-07, 9.299999999996811e-07, 9.300000000031505e-07, 9.720000000018603e-07, 9.160000000001112e-07, 9.299999999996811e-07, 9.43999999999251e-07, 9.299999999996811e-07, 9.43999999999251e-07, 9.450000000021941e-07, 9.160000000001112e-07, 9.169999999995848e-07, 9.300000000031505e-07, 9.160000000001112e-07, 9.309999999991547e-07, 9.030000000000149e-07, 9.160000000001112e-07, 9.309999999991547e-07, 9.450000000021941e-07, 9.030000000000149e-07, 9.309999999991547e-07, 9.169999999995848e-07, 9.169999999995848e-07, 9.43999999999251e-07, 9.299999999996811e-07, 9.309999999991547e-07, 9.299999999996811e-07, 9.310000000026242e-07, 9.299999999996811e-07, 9.299999999996811e-07, 9.43999999999251e-07, 9.43999999999251e-07, 9.299999999996811e-07, 9.160000000001112e-07, 9.300000000031505e-07]</msg>
<status status="PASS" starttime="20201030 18:32:35.572" endtime="20201030 18:32:35.574"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:35.564" endtime="20201030 18:32:35.576"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:35.581" endtime="20201030 18:32:35.601"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:35.580" endtime="20201030 18:32:35.602"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:35.578" endtime="20201030 18:32:35.602"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:35.210" endtime="20201030 18:32:35.602"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:35.210" endtime="20201030 18:32:35.602"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:35.610" endtime="20201030 18:32:35.624"></status>
</kw>
<msg timestamp="20201030 18:32:35.624" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:35.609" endtime="20201030 18:32:35.624"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:35.627" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:35.625" endtime="20201030 18:32:35.627"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:35.628" endtime="20201030 18:32:35.629"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:35.606" endtime="20201030 18:32:35.630"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:35.604" endtime="20201030 18:32:35.630"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:35.637" endtime="20201030 18:32:35.916"></status>
</kw>
<msg timestamp="20201030 18:32:35.919" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018219403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018220278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:35.635" endtime="20201030 18:32:35.920"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:35.927" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018219403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018220278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:35.920" endtime="20201030 18:32:35.928"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:35.929" endtime="20201030 18:32:35.931"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:35.633" endtime="20201030 18:32:35.932"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:35.631" endtime="20201030 18:32:35.932"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:35.936" level="INFO">${RESULT} = [{'diff': 8.750000000008751e-07}, {'diff': 9.43999999999251e-07}, {'diff': 9.299999999996811e-07}, {'diff': 9.169999999995848e-07}, {'diff': 8.889999999969755e-07}, {'diff': 9.310000000026242e-07}, {'...</msg>
<status status="PASS" starttime="20201030 18:32:35.933" endtime="20201030 18:32:35.936"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:32:35.940" level="INFO">${OVERHEAD} = {'diff': [8.750000000008751e-07, 9.43999999999251e-07, 9.299999999996811e-07, 9.169999999995848e-07, 8.889999999969755e-07, 9.310000000026242e-07, 9.310000000026242e-07, 9.309999999991547e-07, 8.46999...</msg>
<status status="PASS" starttime="20201030 18:32:35.937" endtime="20201030 18:32:35.941"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:35.945" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:32:35.944" endtime="20201030 18:32:35.945"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:35.947" level="INFO">VALUE: [8.750000000008751e-07, 9.43999999999251e-07, 9.299999999996811e-07, 9.169999999995848e-07, 8.889999999969755e-07, 9.310000000026242e-07, 9.310000000026242e-07, 9.309999999991547e-07, 8.469999999982658e-07, 9.449999999987246e-07, 9.299999999996811e-07, 9.299999999996811e-07, 9.309999999991547e-07, 9.309999999991547e-07, 9.299999999996811e-07, 9.449999999987246e-07, 9.299999999996811e-07, 9.030000000000149e-07, 9.299999999996811e-07, 9.43999999999251e-07, 9.169999999995848e-07, 9.309999999991547e-07, 9.43999999999251e-07, 9.309999999991547e-07, 9.299999999996811e-07, 9.43999999999251e-07, 9.299999999996811e-07, 1.000000000001e-06, 9.450000000021941e-07, 9.169999999995848e-07, 9.310000000026242e-07, 9.310000000026242e-07, 9.309999999991547e-07, 9.169999999995848e-07, 9.030000000000149e-07, 9.300000000031505e-07, 9.309999999991547e-07, 9.300000000031505e-07, 9.299999999996811e-07, 9.309999999991547e-07, 9.299999999996811e-07, 9.160000000001112e-07, 9.309999999991547e-07, 9.43999999999251e-07, 9.299999999996811e-07, 9.449999999987246e-07, 9.300000000031505e-07, 9.440000000027204e-07, 9.309999999991547e-07, 9.020000000005413e-07]</msg>
<status status="PASS" starttime="20201030 18:32:35.946" endtime="20201030 18:32:35.948"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:35.941" endtime="20201030 18:32:35.948"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:35.952" endtime="20201030 18:32:35.971"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:35.950" endtime="20201030 18:32:35.972"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:35.949" endtime="20201030 18:32:35.972"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:35.603" endtime="20201030 18:32:35.972"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:35.603" endtime="20201030 18:32:35.972"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:35.980" endtime="20201030 18:32:35.993"></status>
</kw>
<msg timestamp="20201030 18:32:35.993" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:35.979" endtime="20201030 18:32:35.993"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:35.996" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:35.994" endtime="20201030 18:32:35.996"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:35.997" endtime="20201030 18:32:35.999"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:35.976" endtime="20201030 18:32:36.000"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:35.974" endtime="20201030 18:32:36.000"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:36.007" endtime="20201030 18:32:36.298"></status>
</kw>
<msg timestamp="20201030 18:32:36.305" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018362431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018363375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:36.005" endtime="20201030 18:32:36.305"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:36.323" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018362431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018363375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:36.307" endtime="20201030 18:32:36.324"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:36.325" endtime="20201030 18:32:36.330"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:36.003" endtime="20201030 18:32:36.331"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:36.001" endtime="20201030 18:32:36.333"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:36.343" level="INFO">${RESULT} = [{'diff': 9.440000000027204e-07}, {'diff': 9.309999999991547e-07}, {'diff': 9.309999999991547e-07}, {'diff': 9.030000000000149e-07}, {'diff': 9.309999999991547e-07}, {'diff': 9.310000000026242e-07}, {...</msg>
<status status="PASS" starttime="20201030 18:32:36.335" endtime="20201030 18:32:36.345"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:32:36.355" level="INFO">${OVERHEAD} = {'diff': [9.440000000027204e-07, 9.309999999991547e-07, 9.309999999991547e-07, 9.030000000000149e-07, 9.309999999991547e-07, 9.310000000026242e-07, 9.309999999991547e-07, 9.309999999991547e-07, 9.1700...</msg>
<status status="PASS" starttime="20201030 18:32:36.347" endtime="20201030 18:32:36.356"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:36.365" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:32:36.363" endtime="20201030 18:32:36.366"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:36.369" level="INFO">VALUE: [9.440000000027204e-07, 9.309999999991547e-07, 9.309999999991547e-07, 9.030000000000149e-07, 9.309999999991547e-07, 9.310000000026242e-07, 9.309999999991547e-07, 9.309999999991547e-07, 9.170000000030543e-07, 9.169999999995848e-07, 9.299999999996811e-07, 9.160000000001112e-07, 9.43999999999251e-07, 9.309999999991547e-07, 9.43999999999251e-07, 9.169999999995848e-07, 9.160000000001112e-07, 9.169999999995848e-07, 9.310000000026242e-07, 9.59000000001764e-07, 9.309999999991547e-07, 9.299999999996811e-07, 9.169999999995848e-07, 9.309999999991547e-07, 9.160000000001112e-07, 9.43999999999251e-07, 9.310000000026242e-07, 9.449999999987246e-07, 9.309999999991547e-07, 9.440000000027204e-07, 9.309999999991547e-07, 9.169999999995848e-07, 9.299999999996811e-07, 8.89000000000445e-07, 9.43999999999251e-07, 9.450000000021941e-07, 9.169999999995848e-07, 9.440000000027204e-07, 9.309999999991547e-07, 9.43999999999251e-07, 9.43999999999251e-07, 9.160000000001112e-07, 9.309999999991547e-07, 9.299999999996811e-07, 9.170000000030543e-07, 9.450000000021941e-07, 9.299999999996811e-07, 9.160000000001112e-07, 9.030000000000149e-07, 9.859999999979607e-07]</msg>
<status status="PASS" starttime="20201030 18:32:36.367" endtime="20201030 18:32:36.371"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:36.357" endtime="20201030 18:32:36.371"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:36.375" endtime="20201030 18:32:36.395"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:36.374" endtime="20201030 18:32:36.396"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:36.372" endtime="20201030 18:32:36.396"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:35.973" endtime="20201030 18:32:36.396"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:35.973" endtime="20201030 18:32:36.396"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:36.404" endtime="20201030 18:32:36.415"></status>
</kw>
<msg timestamp="20201030 18:32:36.416" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:36.403" endtime="20201030 18:32:36.416"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:36.418" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:36.417" endtime="20201030 18:32:36.419"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:36.419" endtime="20201030 18:32:36.421"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:36.400" endtime="20201030 18:32:36.421"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:36.398" endtime="20201030 18:32:36.422"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:36.428" endtime="20201030 18:32:36.715"></status>
</kw>
<msg timestamp="20201030 18:32:36.718" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017966778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017967708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:36.427" endtime="20201030 18:32:36.718"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:36.726" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017966778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017967708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:36.719" endtime="20201030 18:32:36.726"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:36.727" endtime="20201030 18:32:36.729"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:36.424" endtime="20201030 18:32:36.729"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:36.422" endtime="20201030 18:32:36.729"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:36.734" level="INFO">${RESULT} = [{'diff': 9.299999999996811e-07}, {'diff': 9.309999999991547e-07}, {'diff': 9.299999999996811e-07}, {'diff': 9.299999999996811e-07}, {'diff': 9.860000000014302e-07}, {'diff': 9.309999999991547e-07}, {...</msg>
<status status="PASS" starttime="20201030 18:32:36.731" endtime="20201030 18:32:36.734"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:32:36.739" level="INFO">${OVERHEAD} = {'diff': [9.299999999996811e-07, 9.309999999991547e-07, 9.299999999996811e-07, 9.299999999996811e-07, 9.860000000014302e-07, 9.309999999991547e-07, 9.169999999995848e-07, 9.43999999999251e-07, 9.16999...</msg>
<status status="PASS" starttime="20201030 18:32:36.735" endtime="20201030 18:32:36.739"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:36.743" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:32:36.742" endtime="20201030 18:32:36.743"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:36.745" level="INFO">VALUE: [9.299999999996811e-07, 9.309999999991547e-07, 9.299999999996811e-07, 9.299999999996811e-07, 9.860000000014302e-07, 9.309999999991547e-07, 9.169999999995848e-07, 9.43999999999251e-07, 9.169999999995848e-07, 9.310000000026242e-07, 8.750000000008751e-07, 9.160000000001112e-07, 9.169999999995848e-07, 9.169999999995848e-07, 9.169999999995848e-07, 9.169999999995848e-07, 9.299999999996811e-07, 9.169999999995848e-07, 9.309999999991547e-07, 9.169999999995848e-07, 9.169999999995848e-07, 9.43999999999251e-07, 9.309999999991547e-07, 9.299999999996811e-07, 9.309999999991547e-07, 9.299999999996811e-07, 9.170000000030543e-07, 9.43999999999251e-07, 9.299999999996811e-07, 9.030000000000149e-07, 9.309999999991547e-07, 9.299999999996811e-07, 9.160000000001112e-07, 9.310000000026242e-07, 9.43999999999251e-07, 9.160000000001112e-07, 9.160000000001112e-07, 9.309999999991547e-07, 8.880000000009713e-07, 9.299999999996811e-07, 9.310000000026242e-07, 9.169999999995848e-07, 9.310000000026242e-07, 9.43999999999251e-07, 9.160000000001112e-07, 9.310000000026242e-07, 9.030000000000149e-07, 9.160000000001112e-07, 9.440000000027204e-07, 9.299999999996811e-07]</msg>
<status status="PASS" starttime="20201030 18:32:36.744" endtime="20201030 18:32:36.746"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:36.740" endtime="20201030 18:32:36.746"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:36.750" endtime="20201030 18:32:36.769"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:36.748" endtime="20201030 18:32:36.770"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:36.747" endtime="20201030 18:32:36.770"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:36.397" endtime="20201030 18:32:36.770"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:36.397" endtime="20201030 18:32:36.770"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:36.778" endtime="20201030 18:32:36.791"></status>
</kw>
<msg timestamp="20201030 18:32:36.791" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:36.777" endtime="20201030 18:32:36.792"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:36.794" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:36.792" endtime="20201030 18:32:36.794"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:36.795" endtime="20201030 18:32:36.796"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:36.774" endtime="20201030 18:32:36.797"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:36.772" endtime="20201030 18:32:36.797"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:36.804" endtime="20201030 18:32:37.092"></status>
</kw>
<msg timestamp="20201030 18:32:37.095" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017888181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017889125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:36.802" endtime="20201030 18:32:37.096"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:37.103" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017888181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017889125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:37.097" endtime="20201030 18:32:37.104"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:37.105" endtime="20201030 18:32:37.108"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:36.800" endtime="20201030 18:32:37.108"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:36.798" endtime="20201030 18:32:37.109"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:37.112" level="INFO">${RESULT} = [{'diff': 9.43999999999251e-07}, {'diff': 9.160000000001112e-07}, {'diff': 9.309999999991547e-07}, {'diff': 9.43999999999251e-07}, {'diff': 9.309999999991547e-07}, {'diff': 9.450000000021941e-07}, {'d...</msg>
<status status="PASS" starttime="20201030 18:32:37.109" endtime="20201030 18:32:37.113"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:32:37.117" level="INFO">${OVERHEAD} = {'diff': [9.43999999999251e-07, 9.160000000001112e-07, 9.309999999991547e-07, 9.43999999999251e-07, 9.309999999991547e-07, 9.450000000021941e-07, 9.310000000026242e-07, 9.030000000000149e-07, 9.160000...</msg>
<status status="PASS" starttime="20201030 18:32:37.113" endtime="20201030 18:32:37.117"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:37.121" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:32:37.120" endtime="20201030 18:32:37.121"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:37.123" level="INFO">VALUE: [9.43999999999251e-07, 9.160000000001112e-07, 9.309999999991547e-07, 9.43999999999251e-07, 9.309999999991547e-07, 9.450000000021941e-07, 9.310000000026242e-07, 9.030000000000149e-07, 9.160000000001112e-07, 9.160000000001112e-07, 9.309999999991547e-07, 9.169999999995848e-07, 9.57999999998821e-07, 9.580000000022904e-07, 9.299999999996811e-07, 9.440000000027204e-07, 9.299999999996811e-07, 9.169999999995848e-07, 9.299999999996811e-07, 9.299999999996811e-07, 9.43999999999251e-07, 8.89000000000445e-07, 9.160000000001112e-07, 9.449999999987246e-07, 9.440000000027204e-07, 9.299999999996811e-07, 9.309999999991547e-07, 9.169999999995848e-07, 9.020000000005413e-07, 9.299999999996811e-07, 9.160000000001112e-07, 9.299999999996811e-07, 9.309999999991547e-07, 9.449999999987246e-07, 9.169999999995848e-07, 9.309999999991547e-07, 9.160000000001112e-07, 9.299999999996811e-07, 9.299999999996811e-07, 8.89000000000445e-07, 9.309999999991547e-07, 9.169999999995848e-07, 9.43999999999251e-07, 9.310000000026242e-07, 9.169999999995848e-07, 9.859999999979607e-07, 9.300000000031505e-07, 9.309999999991547e-07, 9.030000000000149e-07, 9.299999999996811e-07]</msg>
<status status="PASS" starttime="20201030 18:32:37.122" endtime="20201030 18:32:37.124"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:37.117" endtime="20201030 18:32:37.124"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:37.128" endtime="20201030 18:32:37.147"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:37.126" endtime="20201030 18:32:37.148"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:37.125" endtime="20201030 18:32:37.148"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:36.771" endtime="20201030 18:32:37.148"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:36.771" endtime="20201030 18:32:37.148"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:37.156" endtime="20201030 18:32:37.169"></status>
</kw>
<msg timestamp="20201030 18:32:37.169" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:37.155" endtime="20201030 18:32:37.169"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:37.172" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:37.170" endtime="20201030 18:32:37.172"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:37.173" endtime="20201030 18:32:37.175"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:37.152" endtime="20201030 18:32:37.176"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:37.150" endtime="20201030 18:32:37.176"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:37.182" endtime="20201030 18:32:37.472"></status>
</kw>
<msg timestamp="20201030 18:32:37.475" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018556361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018557306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:37.181" endtime="20201030 18:32:37.476"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:37.484" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018556361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018557306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:37.477" endtime="20201030 18:32:37.484"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:37.485" endtime="20201030 18:32:37.487"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:37.178" endtime="20201030 18:32:37.487"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:37.177" endtime="20201030 18:32:37.488"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:37.492" level="INFO">${RESULT} = [{'diff': 9.449999999987246e-07}, {'diff': 9.309999999991547e-07}, {'diff': 9.43999999999251e-07}, {'diff': 9.449999999987246e-07}, {'diff': 9.299999999996811e-07}, {'diff': 9.310000000026242e-07}, {'...</msg>
<status status="PASS" starttime="20201030 18:32:37.489" endtime="20201030 18:32:37.492"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:32:37.496" level="INFO">${OVERHEAD} = {'diff': [9.449999999987246e-07, 9.309999999991547e-07, 9.43999999999251e-07, 9.449999999987246e-07, 9.299999999996811e-07, 9.310000000026242e-07, 8.610000000013052e-07, 9.310000000026242e-07, 9.29999...</msg>
<status status="PASS" starttime="20201030 18:32:37.493" endtime="20201030 18:32:37.496"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:37.500" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:32:37.499" endtime="20201030 18:32:37.500"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:37.502" level="INFO">VALUE: [9.449999999987246e-07, 9.309999999991547e-07, 9.43999999999251e-07, 9.449999999987246e-07, 9.299999999996811e-07, 9.310000000026242e-07, 8.610000000013052e-07, 9.310000000026242e-07, 9.299999999996811e-07, 9.170000000030543e-07, 9.169999999995848e-07, 9.309999999991547e-07, 9.309999999991547e-07, 9.169999999995848e-07, 9.299999999996811e-07, 9.169999999995848e-07, 9.160000000001112e-07, 9.309999999991547e-07, 9.309999999991547e-07, 9.169999999995848e-07, 9.43999999999251e-07, 9.030000000000149e-07, 9.299999999996811e-07, 9.310000000026242e-07, 9.309999999991547e-07, 1.000000000001e-06, 9.299999999996811e-07, 9.299999999996811e-07, 8.89000000000445e-07, 9.449999999987246e-07, 9.450000000021941e-07, 9.299999999996811e-07, 9.43999999999251e-07, 9.299999999996811e-07, 9.43999999999251e-07, 9.310000000026242e-07, 9.169999999995848e-07, 9.309999999991547e-07, 9.169999999995848e-07, 9.309999999991547e-07, 9.449999999987246e-07, 9.309999999991547e-07, 9.449999999987246e-07, 9.310000000026242e-07, 9.299999999996811e-07, 9.310000000026242e-07, 9.030000000000149e-07, 9.169999999995848e-07, 9.309999999991547e-07, 9.160000000001112e-07]</msg>
<status status="PASS" starttime="20201030 18:32:37.501" endtime="20201030 18:32:37.503"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:37.497" endtime="20201030 18:32:37.504"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:37.508" endtime="20201030 18:32:37.527"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:37.506" endtime="20201030 18:32:37.528"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:37.505" endtime="20201030 18:32:37.528"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:37.149" endtime="20201030 18:32:37.528"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:37.149" endtime="20201030 18:32:37.528"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:37.536" endtime="20201030 18:32:37.549"></status>
</kw>
<msg timestamp="20201030 18:32:37.549" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:37.535" endtime="20201030 18:32:37.549"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:37.552" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:37.550" endtime="20201030 18:32:37.552"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:37.553" endtime="20201030 18:32:37.554"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:37.532" endtime="20201030 18:32:37.555"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:37.530" endtime="20201030 18:32:37.555"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:37.561" endtime="20201030 18:32:37.851"></status>
</kw>
<msg timestamp="20201030 18:32:37.854" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017749125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017750056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:37.560" endtime="20201030 18:32:37.855"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:37.863" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017749125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017750056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:37.856" endtime="20201030 18:32:37.863"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:37.864" endtime="20201030 18:32:37.865"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:37.557" endtime="20201030 18:32:37.866"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:37.556" endtime="20201030 18:32:37.866"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:37.870" level="INFO">${RESULT} = [{'diff': 9.309999999991547e-07}, {'diff': 9.299999999996811e-07}, {'diff': 9.299999999996811e-07}, {'diff': 9.309999999991547e-07}, {'diff': 9.310000000026242e-07}, {'diff': 9.160000000001112e-07}, {...</msg>
<status status="PASS" starttime="20201030 18:32:37.867" endtime="20201030 18:32:37.871"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:32:37.875" level="INFO">${OVERHEAD} = {'diff': [9.309999999991547e-07, 9.299999999996811e-07, 9.299999999996811e-07, 9.309999999991547e-07, 9.310000000026242e-07, 9.160000000001112e-07, 9.160000000001112e-07, 9.169999999995848e-07, 1.0000...</msg>
<status status="PASS" starttime="20201030 18:32:37.871" endtime="20201030 18:32:37.875"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:37.879" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:32:37.878" endtime="20201030 18:32:37.880"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:37.882" level="INFO">VALUE: [9.309999999991547e-07, 9.299999999996811e-07, 9.299999999996811e-07, 9.309999999991547e-07, 9.310000000026242e-07, 9.160000000001112e-07, 9.160000000001112e-07, 9.169999999995848e-07, 1.000000000001e-06, 9.160000000001112e-07, 9.299999999996811e-07, 9.309999999991547e-07, 9.030000000000149e-07, 9.169999999995848e-07, 9.299999999996811e-07, 9.299999999996811e-07, 9.309999999991547e-07, 9.43999999999251e-07, 9.169999999995848e-07, 9.309999999991547e-07, 9.59000000001764e-07, 9.169999999995848e-07, 9.299999999996811e-07, 9.299999999996811e-07, 9.449999999987246e-07, 9.43999999999251e-07, 9.299999999996811e-07, 9.309999999991547e-07, 9.169999999995848e-07, 9.160000000001112e-07, 9.450000000021941e-07, 9.159999999966417e-07, 9.300000000031505e-07, 9.440000000027204e-07, 9.299999999996811e-07, 9.59000000001764e-07, 9.169999999995848e-07, 9.299999999996811e-07, 9.309999999991547e-07, 9.309999999991547e-07, 9.309999999991547e-07, 9.299999999996811e-07, 9.310000000026242e-07, 9.310000000026242e-07, 9.43999999999251e-07, 9.169999999995848e-07, 9.160000000001112e-07, 9.030000000000149e-07, 9.299999999996811e-07, 9.309999999991547e-07]</msg>
<status status="PASS" starttime="20201030 18:32:37.880" endtime="20201030 18:32:37.882"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:37.876" endtime="20201030 18:32:37.883"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:37.886" endtime="20201030 18:32:37.906"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:37.885" endtime="20201030 18:32:37.906"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:37.884" endtime="20201030 18:32:37.907"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:37.529" endtime="20201030 18:32:37.907"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:37.529" endtime="20201030 18:32:37.907"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:37.915" endtime="20201030 18:32:37.926"></status>
</kw>
<msg timestamp="20201030 18:32:37.927" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:37.913" endtime="20201030 18:32:37.927"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:37.929" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:37.928" endtime="20201030 18:32:37.930"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:37.930" endtime="20201030 18:32:37.932"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:37.911" endtime="20201030 18:32:37.932"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:37.909" endtime="20201030 18:32:37.933"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:37.940" endtime="20201030 18:32:38.223"></status>
</kw>
<msg timestamp="20201030 18:32:38.227" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018099514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018100431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:37.938" endtime="20201030 18:32:38.227"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:38.235" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018099514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018100431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:38.228" endtime="20201030 18:32:38.235"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:38.236" endtime="20201030 18:32:38.238"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:37.935" endtime="20201030 18:32:38.238"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:37.933" endtime="20201030 18:32:38.238"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:38.242" level="INFO">${RESULT} = [{'diff': 9.169999999995848e-07}, {'diff': 9.299999999996811e-07}, {'diff': 9.43999999999251e-07}, {'diff': 9.309999999991547e-07}, {'diff': 9.030000000000149e-07}, {'diff': 9.019999999970718e-07}, {'...</msg>
<status status="PASS" starttime="20201030 18:32:38.239" endtime="20201030 18:32:38.243"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:32:38.246" level="INFO">${OVERHEAD} = {'diff': [9.169999999995848e-07, 9.299999999996811e-07, 9.43999999999251e-07, 9.309999999991547e-07, 9.030000000000149e-07, 9.019999999970718e-07, 9.59000000001764e-07, 9.030000000000149e-07, 9.169999...</msg>
<status status="PASS" starttime="20201030 18:32:38.243" endtime="20201030 18:32:38.247"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:38.251" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:32:38.249" endtime="20201030 18:32:38.251"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:38.253" level="INFO">VALUE: [9.169999999995848e-07, 9.299999999996811e-07, 9.43999999999251e-07, 9.309999999991547e-07, 9.030000000000149e-07, 9.019999999970718e-07, 9.59000000001764e-07, 9.030000000000149e-07, 9.169999999995848e-07, 8.470000000017353e-07, 9.309999999991547e-07, 9.43999999999251e-07, 9.440000000027204e-07, 9.169999999995848e-07, 9.309999999991547e-07, 9.169999999995848e-07, 9.169999999995848e-07, 9.450000000021941e-07, 9.309999999991547e-07, 9.169999999995848e-07, 9.43999999999251e-07, 9.299999999996811e-07, 9.299999999996811e-07, 9.299999999996811e-07, 9.160000000001112e-07, 9.450000000021941e-07, 9.160000000001112e-07, 9.030000000000149e-07, 9.299999999996811e-07, 9.169999999995848e-07, 8.749999999974056e-07, 9.169999999995848e-07, 9.299999999996811e-07, 9.299999999996811e-07, 9.450000000021941e-07, 9.169999999995848e-07, 9.299999999996811e-07, 9.299999999996811e-07, 9.169999999995848e-07, 9.449999999987246e-07, 9.309999999991547e-07, 9.450000000021941e-07, 9.310000000026242e-07, 9.160000000001112e-07, 9.309999999991547e-07, 9.309999999991547e-07, 9.160000000001112e-07, 9.310000000026242e-07, 9.299999999996811e-07, 1.000000000001e-06]</msg>
<status status="PASS" starttime="20201030 18:32:38.252" endtime="20201030 18:32:38.253"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:38.247" endtime="20201030 18:32:38.254"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:38.257" endtime="20201030 18:32:38.277"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:38.256" endtime="20201030 18:32:38.278"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:38.255" endtime="20201030 18:32:38.278"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:37.908" endtime="20201030 18:32:38.278"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:37.907" endtime="20201030 18:32:38.278"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:38.286" endtime="20201030 18:32:38.299"></status>
</kw>
<msg timestamp="20201030 18:32:38.299" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:38.284" endtime="20201030 18:32:38.299"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:38.302" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:38.300" endtime="20201030 18:32:38.302"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:38.303" endtime="20201030 18:32:38.305"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:38.282" endtime="20201030 18:32:38.306"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:38.280" endtime="20201030 18:32:38.307"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:38.313" endtime="20201030 18:32:38.602"></status>
</kw>
<msg timestamp="20201030 18:32:38.605" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01773525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017736181, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:32:38.311" endtime="20201030 18:32:38.605"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:38.613" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01773525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017736181, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:32:38.606" endtime="20201030 18:32:38.613"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:38.614" endtime="20201030 18:32:38.616"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:38.309" endtime="20201030 18:32:38.616"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:38.307" endtime="20201030 18:32:38.617"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:38.621" level="INFO">${RESULT} = [{'diff': 9.309999999991547e-07}, {'diff': 9.309999999991547e-07}, {'diff': 8.89000000000445e-07}, {'diff': 9.309999999991547e-07}, {'diff': 9.299999999996811e-07}, {'diff': 9.299999999996811e-07}, {'...</msg>
<status status="PASS" starttime="20201030 18:32:38.618" endtime="20201030 18:32:38.621"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:32:38.625" level="INFO">${OVERHEAD} = {'diff': [9.309999999991547e-07, 9.309999999991547e-07, 8.89000000000445e-07, 9.309999999991547e-07, 9.299999999996811e-07, 9.299999999996811e-07, 9.310000000026242e-07, 9.160000000001112e-07, 1.00000...</msg>
<status status="PASS" starttime="20201030 18:32:38.622" endtime="20201030 18:32:38.625"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:38.629" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:32:38.628" endtime="20201030 18:32:38.629"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:38.632" level="INFO">VALUE: [9.309999999991547e-07, 9.309999999991547e-07, 8.89000000000445e-07, 9.309999999991547e-07, 9.299999999996811e-07, 9.299999999996811e-07, 9.310000000026242e-07, 9.160000000001112e-07, 1.000000000001e-06, 8.750000000008751e-07, 9.299999999996811e-07, 9.299999999996811e-07, 9.450000000021941e-07, 9.299999999996811e-07, 9.309999999991547e-07, 9.299999999996811e-07, 9.449999999987246e-07, 9.299999999996811e-07, 9.169999999995848e-07, 9.309999999991547e-07, 9.449999999987246e-07, 9.160000000001112e-07, 9.160000000001112e-07, 9.309999999991547e-07, 9.309999999991547e-07, 9.859999999979607e-07, 9.169999999995848e-07, 9.169999999995848e-07, 9.440000000027204e-07, 9.160000000001112e-07, 9.309999999991547e-07, 9.309999999991547e-07, 9.160000000001112e-07, 9.169999999995848e-07, 9.169999999995848e-07, 9.300000000031505e-07, 9.309999999991547e-07, 9.309999999991547e-07, 9.169999999995848e-07, 9.160000000001112e-07, 9.169999999995848e-07, 9.999999999975306e-07, 9.43999999999251e-07, 8.750000000008751e-07, 9.169999999995848e-07, 9.299999999996811e-07, 9.449999999987246e-07, 9.299999999996811e-07, 9.169999999995848e-07, 9.300000000031505e-07]</msg>
<status status="PASS" starttime="20201030 18:32:38.630" endtime="20201030 18:32:38.635"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:38.625" endtime="20201030 18:32:38.635"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:38.640" endtime="20201030 18:32:38.659"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:38.638" endtime="20201030 18:32:38.660"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:38.637" endtime="20201030 18:32:38.660"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:38.279" endtime="20201030 18:32:38.660"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:38.279" endtime="20201030 18:32:38.661"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:38.668" endtime="20201030 18:32:38.680"></status>
</kw>
<msg timestamp="20201030 18:32:38.681" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:38.667" endtime="20201030 18:32:38.681"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:38.683" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:38.682" endtime="20201030 18:32:38.684"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:38.684" endtime="20201030 18:32:38.686"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:38.664" endtime="20201030 18:32:38.687"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:38.663" endtime="20201030 18:32:38.687"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:38.693" endtime="20201030 18:32:38.982"></status>
</kw>
<msg timestamp="20201030 18:32:38.986" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017863319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01786425, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:32:38.692" endtime="20201030 18:32:38.986"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:38.994" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017863319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01786425, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:32:38.987" endtime="20201030 18:32:38.994"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:38.995" endtime="20201030 18:32:38.997"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:38.689" endtime="20201030 18:32:38.997"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:38.688" endtime="20201030 18:32:38.998"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:39.001" level="INFO">${RESULT} = [{'diff': 9.310000000026242e-07}, {'diff': 9.43999999999251e-07}, {'diff': 9.449999999987246e-07}, {'diff': 9.169999999995848e-07}, {'diff': 9.309999999991547e-07}, {'diff': 9.449999999987246e-07}, {'...</msg>
<status status="PASS" starttime="20201030 18:32:38.998" endtime="20201030 18:32:39.002"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:32:39.006" level="INFO">${OVERHEAD} = {'diff': [9.310000000026242e-07, 9.43999999999251e-07, 9.449999999987246e-07, 9.169999999995848e-07, 9.309999999991547e-07, 9.449999999987246e-07, 9.169999999995848e-07, 9.169999999995848e-07, 9.16999...</msg>
<status status="PASS" starttime="20201030 18:32:39.002" endtime="20201030 18:32:39.007"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:39.011" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:32:39.010" endtime="20201030 18:32:39.011"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:39.013" level="INFO">VALUE: [9.310000000026242e-07, 9.43999999999251e-07, 9.449999999987246e-07, 9.169999999995848e-07, 9.309999999991547e-07, 9.449999999987246e-07, 9.169999999995848e-07, 9.169999999995848e-07, 9.169999999995848e-07, 9.43999999999251e-07, 9.030000000000149e-07, 9.170000000030543e-07, 9.299999999996811e-07, 9.299999999996811e-07, 9.299999999996811e-07, 9.160000000001112e-07, 9.309999999991547e-07, 8.89000000000445e-07, 8.750000000008751e-07, 9.169999999995848e-07, 9.309999999991547e-07, 9.160000000001112e-07, 9.160000000001112e-07, 9.300000000031505e-07, 9.309999999991547e-07, 9.299999999996811e-07, 9.43999999999251e-07, 9.169999999995848e-07, 9.43999999999251e-07, 9.030000000000149e-07, 9.169999999995848e-07, 9.440000000027204e-07, 9.170000000030543e-07, 9.169999999995848e-07, 9.440000000027204e-07, 9.299999999996811e-07, 9.169999999995848e-07, 8.89000000000445e-07, 9.299999999996811e-07, 9.309999999991547e-07, 9.309999999991547e-07, 9.309999999991547e-07, 9.170000000030543e-07, 9.309999999991547e-07, 9.43999999999251e-07, 9.030000000000149e-07, 9.449999999987246e-07, 9.160000000001112e-07, 9.299999999996811e-07, 9.299999999996811e-07]</msg>
<status status="PASS" starttime="20201030 18:32:39.012" endtime="20201030 18:32:39.013"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:39.007" endtime="20201030 18:32:39.014"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:39.018" endtime="20201030 18:32:39.037"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:39.016" endtime="20201030 18:32:39.038"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:39.015" endtime="20201030 18:32:39.038"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:38.661" endtime="20201030 18:32:39.038"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:38.661" endtime="20201030 18:32:39.038"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:39.046" endtime="20201030 18:32:39.057"></status>
</kw>
<msg timestamp="20201030 18:32:39.058" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:39.044" endtime="20201030 18:32:39.058"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:39.061" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:39.059" endtime="20201030 18:32:39.061"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:39.062" endtime="20201030 18:32:39.063"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:39.042" endtime="20201030 18:32:39.064"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:39.040" endtime="20201030 18:32:39.064"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:39.071" endtime="20201030 18:32:39.360"></status>
</kw>
<msg timestamp="20201030 18:32:39.363" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017771833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017772708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:39.069" endtime="20201030 18:32:39.364"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:39.371" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017771833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017772708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:39.365" endtime="20201030 18:32:39.372"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:39.373" endtime="20201030 18:32:39.375"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:39.066" endtime="20201030 18:32:39.376"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:39.065" endtime="20201030 18:32:39.376"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:39.380" level="INFO">${RESULT} = [{'diff': 8.750000000008751e-07}, {'diff': 9.299999999996811e-07}, {'diff': 9.999999999975306e-07}, {'diff': 9.030000000000149e-07}, {'diff': 9.030000000000149e-07}, {'diff': 9.450000000021941e-07}, {...</msg>
<status status="PASS" starttime="20201030 18:32:39.377" endtime="20201030 18:32:39.380"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:32:39.384" level="INFO">${OVERHEAD} = {'diff': [8.750000000008751e-07, 9.299999999996811e-07, 9.999999999975306e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.450000000021941e-07, 9.030000000000149e-07, 9.310000000026242e-07, 9.2999...</msg>
<status status="PASS" starttime="20201030 18:32:39.381" endtime="20201030 18:32:39.384"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:39.388" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:32:39.387" endtime="20201030 18:32:39.389"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:39.391" level="INFO">VALUE: [8.750000000008751e-07, 9.299999999996811e-07, 9.999999999975306e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.450000000021941e-07, 9.030000000000149e-07, 9.310000000026242e-07, 9.299999999996811e-07, 9.310000000026242e-07, 9.43999999999251e-07, 9.299999999996811e-07, 9.299999999996811e-07, 9.169999999995848e-07, 9.310000000026242e-07, 9.299999999996811e-07, 9.299999999996811e-07, 9.309999999991547e-07, 9.309999999991547e-07, 9.309999999991547e-07, 9.309999999991547e-07, 9.160000000001112e-07, 9.299999999996811e-07, 9.169999999995848e-07, 9.309999999991547e-07, 8.609999999978357e-07, 9.160000000001112e-07, 8.89000000000445e-07, 9.310000000026242e-07, 9.299999999996811e-07, 9.450000000021941e-07, 9.299999999996811e-07, 9.300000000031505e-07, 9.309999999991547e-07, 9.43999999999251e-07, 9.170000000030543e-07, 9.170000000030543e-07, 8.89000000000445e-07, 9.310000000026242e-07, 9.299999999996811e-07, 9.43999999999251e-07, 9.159999999966417e-07, 9.299999999996811e-07, 9.299999999996811e-07, 9.309999999991547e-07, 8.750000000008751e-07, 9.160000000001112e-07, 9.169999999995848e-07, 9.169999999995848e-07, 9.170000000030543e-07]</msg>
<status status="PASS" starttime="20201030 18:32:39.389" endtime="20201030 18:32:39.391"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:39.385" endtime="20201030 18:32:39.392"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:39.395" endtime="20201030 18:32:39.415"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:39.394" endtime="20201030 18:32:39.415"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:39.393" endtime="20201030 18:32:39.415"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:39.039" endtime="20201030 18:32:39.416"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:39.039" endtime="20201030 18:32:39.416"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:39.424" endtime="20201030 18:32:39.436"></status>
</kw>
<msg timestamp="20201030 18:32:39.437" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:39.423" endtime="20201030 18:32:39.437"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:39.439" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:39.438" endtime="20201030 18:32:39.440"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:39.440" endtime="20201030 18:32:39.443"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:39.420" endtime="20201030 18:32:39.443"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:39.418" endtime="20201030 18:32:39.444"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:39.450" endtime="20201030 18:32:39.732"></status>
</kw>
<msg timestamp="20201030 18:32:39.735" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018257347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018258292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:39.449" endtime="20201030 18:32:39.736"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:39.744" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018257347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018258292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:39.737" endtime="20201030 18:32:39.744"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:39.745" endtime="20201030 18:32:39.747"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:39.446" endtime="20201030 18:32:39.747"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:39.444" endtime="20201030 18:32:39.748"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:39.752" level="INFO">${RESULT} = [{'diff': 9.449999999987246e-07}, {'diff': 8.889999999969755e-07}, {'diff': 8.89000000000445e-07}, {'diff': 9.299999999996811e-07}, {'diff': 9.299999999996811e-07}, {'diff': 9.299999999996811e-07}, {'...</msg>
<status status="PASS" starttime="20201030 18:32:39.749" endtime="20201030 18:32:39.752"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:32:39.756" level="INFO">${OVERHEAD} = {'diff': [9.449999999987246e-07, 8.889999999969755e-07, 8.89000000000445e-07, 9.299999999996811e-07, 9.299999999996811e-07, 9.299999999996811e-07, 9.310000000026242e-07, 9.309999999991547e-07, 9.30999...</msg>
<status status="PASS" starttime="20201030 18:32:39.753" endtime="20201030 18:32:39.756"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:39.760" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:32:39.759" endtime="20201030 18:32:39.760"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:39.763" level="INFO">VALUE: [9.449999999987246e-07, 8.889999999969755e-07, 8.89000000000445e-07, 9.299999999996811e-07, 9.299999999996811e-07, 9.299999999996811e-07, 9.310000000026242e-07, 9.309999999991547e-07, 9.309999999991547e-07, 9.299999999996811e-07, 9.299999999996811e-07, 9.169999999995848e-07, 9.43999999999251e-07, 9.159999999966417e-07, 9.309999999991547e-07, 9.160000000001112e-07, 9.309999999991547e-07, 9.309999999991547e-07, 9.309999999991547e-07, 9.299999999996811e-07, 9.43999999999251e-07, 9.309999999991547e-07, 9.030000000000149e-07, 9.309999999991547e-07, 9.310000000026242e-07, 9.160000000001112e-07, 9.169999999995848e-07, 9.169999999995848e-07, 9.020000000005413e-07, 9.299999999996811e-07, 9.169999999995848e-07, 8.880000000009713e-07, 9.299999999996811e-07, 9.309999999991547e-07, 8.880000000009713e-07, 9.450000000021941e-07, 9.450000000021941e-07, 9.309999999991547e-07, 9.169999999995848e-07, 9.299999999996811e-07, 9.299999999996811e-07, 9.43999999999251e-07, 9.299999999996811e-07, 9.300000000031505e-07, 9.020000000005413e-07, 9.309999999991547e-07, 9.299999999996811e-07, 9.169999999995848e-07, 9.169999999995848e-07, 9.589999999982945e-07]</msg>
<status status="PASS" starttime="20201030 18:32:39.761" endtime="20201030 18:32:39.764"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:39.757" endtime="20201030 18:32:39.764"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:39.768" endtime="20201030 18:32:39.787"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:39.766" endtime="20201030 18:32:39.788"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:39.765" endtime="20201030 18:32:39.788"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:39.417" endtime="20201030 18:32:39.789"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:39.416" endtime="20201030 18:32:39.789"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:39.797" endtime="20201030 18:32:39.810"></status>
</kw>
<msg timestamp="20201030 18:32:39.810" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:39.795" endtime="20201030 18:32:39.810"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:39.813" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:39.811" endtime="20201030 18:32:39.813"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:39.814" endtime="20201030 18:32:39.815"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:39.793" endtime="20201030 18:32:39.816"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:39.791" endtime="20201030 18:32:39.816"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:39.823" endtime="20201030 18:32:40.102"></status>
</kw>
<msg timestamp="20201030 18:32:40.105" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018206528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018207458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:39.821" endtime="20201030 18:32:40.105"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:40.113" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018206528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018207458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:40.106" endtime="20201030 18:32:40.114"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:40.114" endtime="20201030 18:32:40.116"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:39.819" endtime="20201030 18:32:40.117"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:39.817" endtime="20201030 18:32:40.117"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:40.121" level="INFO">${RESULT} = [{'diff': 9.299999999996811e-07}, {'diff': 9.299999999996811e-07}, {'diff': 9.299999999996811e-07}, {'diff': 9.309999999991547e-07}, {'diff': 9.43999999999251e-07}, {'diff': 9.170000000030543e-07}, {'...</msg>
<status status="PASS" starttime="20201030 18:32:40.118" endtime="20201030 18:32:40.121"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:32:40.126" level="INFO">${OVERHEAD} = {'diff': [9.299999999996811e-07, 9.299999999996811e-07, 9.299999999996811e-07, 9.309999999991547e-07, 9.43999999999251e-07, 9.170000000030543e-07, 9.169999999995848e-07, 9.449999999987246e-07, 9.43999...</msg>
<status status="PASS" starttime="20201030 18:32:40.122" endtime="20201030 18:32:40.126"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:40.130" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:32:40.129" endtime="20201030 18:32:40.130"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:40.133" level="INFO">VALUE: [9.299999999996811e-07, 9.299999999996811e-07, 9.299999999996811e-07, 9.309999999991547e-07, 9.43999999999251e-07, 9.170000000030543e-07, 9.169999999995848e-07, 9.449999999987246e-07, 9.43999999999251e-07, 9.309999999991547e-07, 8.750000000008751e-07, 9.43999999999251e-07, 9.030000000000149e-07, 9.169999999995848e-07, 9.169999999995848e-07, 9.030000000000149e-07, 1.01400000000057e-06, 9.299999999996811e-07, 9.309999999991547e-07, 9.309999999991547e-07, 9.719999999983908e-07, 9.169999999995848e-07, 9.310000000026242e-07, 9.160000000001112e-07, 9.299999999996811e-07, 9.300000000031505e-07, 9.309999999991547e-07, 9.450000000021941e-07, 9.440000000027204e-07, 9.169999999995848e-07, 9.449999999987246e-07, 9.169999999995848e-07, 9.309999999991547e-07, 9.299999999996811e-07, 9.169999999995848e-07, 9.309999999991547e-07, 9.309999999991547e-07, 9.43999999999251e-07, 9.440000000027204e-07, 9.309999999991547e-07, 9.309999999991547e-07, 9.299999999996811e-07, 9.160000000001112e-07, 8.880000000009713e-07, 8.750000000008751e-07, 9.309999999991547e-07, 9.160000000001112e-07, 8.750000000008751e-07, 9.310000000026242e-07, 9.160000000001112e-07]</msg>
<status status="PASS" starttime="20201030 18:32:40.131" endtime="20201030 18:32:40.133"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:40.127" endtime="20201030 18:32:40.133"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:40.137" endtime="20201030 18:32:40.157"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:40.135" endtime="20201030 18:32:40.158"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:40.134" endtime="20201030 18:32:40.158"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:39.790" endtime="20201030 18:32:40.158"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:39.789" endtime="20201030 18:32:40.158"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:40.166" endtime="20201030 18:32:40.178"></status>
</kw>
<msg timestamp="20201030 18:32:40.179" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:40.164" endtime="20201030 18:32:40.179"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:40.181" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:40.180" endtime="20201030 18:32:40.182"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:40.182" endtime="20201030 18:32:40.184"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:40.162" endtime="20201030 18:32:40.184"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:40.160" endtime="20201030 18:32:40.185"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:40.191" endtime="20201030 18:32:40.476"></status>
</kw>
<msg timestamp="20201030 18:32:40.479" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018341167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018342125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:40.190" endtime="20201030 18:32:40.480"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:40.488" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018341167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018342125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:40.481" endtime="20201030 18:32:40.488"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:40.489" endtime="20201030 18:32:40.492"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:40.187" endtime="20201030 18:32:40.492"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:40.185" endtime="20201030 18:32:40.493"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:40.497" level="INFO">${RESULT} = [{'diff': 9.580000000022904e-07}, {'diff': 9.299999999996811e-07}, {'diff': 9.859999999979607e-07}, {'diff': 9.160000000001112e-07}, {'diff': 9.169999999995848e-07}, {'diff': 9.299999999996811e-07}, {...</msg>
<status status="PASS" starttime="20201030 18:32:40.494" endtime="20201030 18:32:40.497"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:32:40.501" level="INFO">${OVERHEAD} = {'diff': [9.580000000022904e-07, 9.299999999996811e-07, 9.859999999979607e-07, 9.160000000001112e-07, 9.169999999995848e-07, 9.299999999996811e-07, 9.160000000001112e-07, 9.43999999999251e-07, 9.43999...</msg>
<status status="PASS" starttime="20201030 18:32:40.498" endtime="20201030 18:32:40.501"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:40.505" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:32:40.504" endtime="20201030 18:32:40.506"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:40.508" level="INFO">VALUE: [9.580000000022904e-07, 9.299999999996811e-07, 9.859999999979607e-07, 9.160000000001112e-07, 9.169999999995848e-07, 9.299999999996811e-07, 9.160000000001112e-07, 9.43999999999251e-07, 9.43999999999251e-07, 9.43999999999251e-07, 9.310000000026242e-07, 9.169999999995848e-07, 9.030000000000149e-07, 9.299999999996811e-07, 9.450000000021941e-07, 9.309999999991547e-07, 9.299999999996811e-07, 9.160000000001112e-07, 8.610000000013052e-07, 9.170000000030543e-07, 9.160000000001112e-07, 9.309999999991547e-07, 9.309999999991547e-07, 9.449999999987246e-07, 9.299999999996811e-07, 9.169999999995848e-07, 9.299999999996811e-07, 9.169999999995848e-07, 9.299999999996811e-07, 9.450000000021941e-07, 9.299999999996811e-07, 9.299999999996811e-07, 9.299999999996811e-07, 9.299999999996811e-07, 9.449999999987246e-07, 9.299999999996811e-07, 9.299999999996811e-07, 9.309999999991547e-07, 9.299999999996811e-07, 9.450000000021941e-07, 9.43999999999251e-07, 9.309999999991547e-07, 9.299999999996811e-07, 9.169999999995848e-07, 9.309999999991547e-07, 9.309999999991547e-07, 9.309999999991547e-07, 9.450000000021941e-07, 9.43999999999251e-07, 9.310000000026242e-07]</msg>
<status status="PASS" starttime="20201030 18:32:40.506" endtime="20201030 18:32:40.509"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:40.502" endtime="20201030 18:32:40.509"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:40.513" endtime="20201030 18:32:40.532"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:40.511" endtime="20201030 18:32:40.533"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:40.510" endtime="20201030 18:32:40.533"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:40.159" endtime="20201030 18:32:40.534"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:40.159" endtime="20201030 18:32:40.534"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:40.542" endtime="20201030 18:32:40.553"></status>
</kw>
<msg timestamp="20201030 18:32:40.553" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:40.540" endtime="20201030 18:32:40.553"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:40.556" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:40.554" endtime="20201030 18:32:40.556"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:40.557" endtime="20201030 18:32:40.559"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:40.537" endtime="20201030 18:32:40.560"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:40.536" endtime="20201030 18:32:40.560"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:40.566" endtime="20201030 18:32:40.855"></status>
</kw>
<msg timestamp="20201030 18:32:40.859" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017818986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017819903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:40.565" endtime="20201030 18:32:40.859"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:40.867" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017818986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017819903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:40.860" endtime="20201030 18:32:40.867"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:40.868" endtime="20201030 18:32:40.869"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:40.562" endtime="20201030 18:32:40.870"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:40.561" endtime="20201030 18:32:40.870"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:40.874" level="INFO">${RESULT} = [{'diff': 9.170000000030543e-07}, {'diff': 9.299999999996811e-07}, {'diff': 9.449999999987246e-07}, {'diff': 9.299999999996811e-07}, {'diff': 8.750000000008751e-07}, {'diff': 9.309999999991547e-07}, {...</msg>
<status status="PASS" starttime="20201030 18:32:40.871" endtime="20201030 18:32:40.874"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:32:40.878" level="INFO">${OVERHEAD} = {'diff': [9.170000000030543e-07, 9.299999999996811e-07, 9.449999999987246e-07, 9.299999999996811e-07, 8.750000000008751e-07, 9.309999999991547e-07, 9.309999999991547e-07, 9.43999999999251e-07, 9.58000...</msg>
<status status="PASS" starttime="20201030 18:32:40.875" endtime="20201030 18:32:40.879"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:40.882" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:32:40.881" endtime="20201030 18:32:40.883"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:40.885" level="INFO">VALUE: [9.170000000030543e-07, 9.299999999996811e-07, 9.449999999987246e-07, 9.299999999996811e-07, 8.750000000008751e-07, 9.309999999991547e-07, 9.309999999991547e-07, 9.43999999999251e-07, 9.580000000022904e-07, 9.030000000000149e-07, 9.160000000001112e-07, 9.169999999995848e-07, 9.309999999991547e-07, 9.169999999995848e-07, 9.449999999987246e-07, 9.169999999995848e-07, 9.43999999999251e-07, 9.299999999996811e-07, 9.440000000027204e-07, 9.43999999999251e-07, 9.310000000026242e-07, 9.309999999991547e-07, 9.169999999995848e-07, 9.309999999991547e-07, 9.309999999991547e-07, 9.309999999991547e-07, 9.299999999996811e-07, 9.450000000021941e-07, 9.310000000026242e-07, 9.580000000022904e-07, 9.030000000000149e-07, 9.299999999996811e-07, 9.299999999996811e-07, 9.299999999996811e-07, 9.299999999996811e-07, 9.43999999999251e-07, 9.160000000001112e-07, 9.43999999999251e-07, 9.299999999996811e-07, 9.43999999999251e-07, 9.169999999995848e-07, 9.030000000000149e-07, 9.309999999991547e-07, 8.89000000000445e-07, 9.169999999995848e-07, 9.309999999991547e-07, 9.299999999996811e-07, 8.879999999975019e-07, 9.299999999996811e-07, 9.309999999991547e-07]</msg>
<status status="PASS" starttime="20201030 18:32:40.884" endtime="20201030 18:32:40.893"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:40.879" endtime="20201030 18:32:40.894"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:40.898" endtime="20201030 18:32:40.917"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:40.896" endtime="20201030 18:32:40.918"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:40.895" endtime="20201030 18:32:40.918"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:40.535" endtime="20201030 18:32:40.918"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:40.534" endtime="20201030 18:32:40.918"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:40.926" endtime="20201030 18:32:40.938"></status>
</kw>
<msg timestamp="20201030 18:32:40.938" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:40.925" endtime="20201030 18:32:40.939"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:40.941" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:40.940" endtime="20201030 18:32:40.941"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:40.942" endtime="20201030 18:32:40.944"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:40.922" endtime="20201030 18:32:40.944"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:40.920" endtime="20201030 18:32:40.944"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:40.951" endtime="20201030 18:32:41.237"></status>
</kw>
<msg timestamp="20201030 18:32:41.240" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017981083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017982014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:40.949" endtime="20201030 18:32:41.240"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:41.248" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017981083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017982014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:41.241" endtime="20201030 18:32:41.248"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:41.249" endtime="20201030 18:32:41.251"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:40.947" endtime="20201030 18:32:41.251"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:40.945" endtime="20201030 18:32:41.252"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:41.256" level="INFO">${RESULT} = [{'diff': 9.310000000026242e-07}, {'diff': 9.299999999996811e-07}, {'diff': 9.169999999995848e-07}, {'diff': 9.299999999996811e-07}, {'diff': 9.169999999995848e-07}, {'diff': 8.889999999969755e-07}, {...</msg>
<status status="PASS" starttime="20201030 18:32:41.252" endtime="20201030 18:32:41.256"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:32:41.261" level="INFO">${OVERHEAD} = {'diff': [9.310000000026242e-07, 9.299999999996811e-07, 9.169999999995848e-07, 9.299999999996811e-07, 9.169999999995848e-07, 8.889999999969755e-07, 9.299999999996811e-07, 9.299999999996811e-07, 9.4399...</msg>
<status status="PASS" starttime="20201030 18:32:41.257" endtime="20201030 18:32:41.261"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:41.265" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:32:41.264" endtime="20201030 18:32:41.265"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:41.267" level="INFO">VALUE: [9.310000000026242e-07, 9.299999999996811e-07, 9.169999999995848e-07, 9.299999999996811e-07, 9.169999999995848e-07, 8.889999999969755e-07, 9.299999999996811e-07, 9.299999999996811e-07, 9.43999999999251e-07, 9.160000000001112e-07, 9.299999999996811e-07, 9.309999999991547e-07, 9.299999999996811e-07, 9.030000000000149e-07, 9.299999999996811e-07, 9.309999999991547e-07, 9.309999999991547e-07, 9.43999999999251e-07, 9.299999999996811e-07, 9.300000000031505e-07, 9.169999999995848e-07, 9.169999999995848e-07, 9.299999999996811e-07, 8.89000000000445e-07, 9.299999999996811e-07, 9.299999999996811e-07, 9.030000000000149e-07, 9.449999999987246e-07, 9.449999999987246e-07, 9.299999999996811e-07, 9.160000000001112e-07, 9.309999999991547e-07, 9.299999999996811e-07, 9.299999999996811e-07, 9.309999999991547e-07, 9.299999999996811e-07, 9.310000000026242e-07, 9.299999999996811e-07, 9.299999999996811e-07, 9.309999999991547e-07, 9.309999999991547e-07, 9.43999999999251e-07, 9.450000000021941e-07, 9.309999999991547e-07, 9.169999999995848e-07, 9.169999999995848e-07, 9.309999999991547e-07, 9.309999999991547e-07, 9.440000000027204e-07, 9.310000000026242e-07]</msg>
<status status="PASS" starttime="20201030 18:32:41.266" endtime="20201030 18:32:41.268"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:41.261" endtime="20201030 18:32:41.269"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:41.272" endtime="20201030 18:32:41.292"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:41.271" endtime="20201030 18:32:41.293"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:41.269" endtime="20201030 18:32:41.294"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:40.919" endtime="20201030 18:32:41.294"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:40.919" endtime="20201030 18:32:41.294"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:41.305" endtime="20201030 18:32:41.318"></status>
</kw>
<msg timestamp="20201030 18:32:41.318" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:41.303" endtime="20201030 18:32:41.318"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:41.321" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:41.319" endtime="20201030 18:32:41.321"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:41.323" endtime="20201030 18:32:41.325"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:41.300" endtime="20201030 18:32:41.326"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:41.297" endtime="20201030 18:32:41.326"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:41.334" endtime="20201030 18:32:41.618"></status>
</kw>
<msg timestamp="20201030 18:32:41.621" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021729444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021730389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:41.333" endtime="20201030 18:32:41.621"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:41.629" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021729444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021730389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:41.622" endtime="20201030 18:32:41.630"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:41.630" endtime="20201030 18:32:41.633"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:41.330" endtime="20201030 18:32:41.633"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:41.327" endtime="20201030 18:32:41.634"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:41.638" level="INFO">${RESULT} = [{'diff': 9.449999999987246e-07}, {'diff': 9.859999999979607e-07}, {'diff': 9.43999999999251e-07}, {'diff': 8.750000000008751e-07}, {'diff': 9.030000000000149e-07}, {'diff': 9.169999999995848e-07}, {'...</msg>
<status status="PASS" starttime="20201030 18:32:41.635" endtime="20201030 18:32:41.638"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:32:41.642" level="INFO">${OVERHEAD} = {'diff': [9.449999999987246e-07, 9.859999999979607e-07, 9.43999999999251e-07, 8.750000000008751e-07, 9.030000000000149e-07, 9.169999999995848e-07, 9.43999999999251e-07, 9.440000000027204e-07, 9.309999...</msg>
<status status="PASS" starttime="20201030 18:32:41.639" endtime="20201030 18:32:41.642"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:41.646" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:32:41.645" endtime="20201030 18:32:41.646"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:41.648" level="INFO">VALUE: [9.449999999987246e-07, 9.859999999979607e-07, 9.43999999999251e-07, 8.750000000008751e-07, 9.030000000000149e-07, 9.169999999995848e-07, 9.43999999999251e-07, 9.440000000027204e-07, 9.309999999991547e-07, 9.309999999991547e-07, 9.449999999987246e-07, 9.160000000001112e-07, 9.299999999996811e-07, 9.299999999996811e-07, 9.169999999995848e-07, 9.309999999991547e-07, 9.310000000026242e-07, 9.309999999991547e-07, 9.309999999991547e-07, 9.43999999999251e-07, 9.299999999996811e-07, 9.169999999995848e-07, 9.299999999996811e-07, 9.300000000031505e-07, 9.300000000031505e-07, 9.299999999996811e-07, 8.470000000017353e-07, 9.169999999995848e-07, 9.169999999995848e-07, 9.43999999999251e-07, 9.299999999996811e-07, 9.169999999995848e-07, 9.169999999995848e-07, 9.299999999996811e-07, 9.299999999996811e-07, 9.309999999991547e-07, 9.299999999996811e-07, 8.880000000009713e-07, 9.169999999995848e-07, 9.300000000031505e-07, 9.160000000001112e-07, 9.030000000000149e-07, 9.310000000026242e-07, 9.309999999991547e-07, 9.729999999978645e-07, 8.750000000008751e-07, 9.309999999991547e-07, 9.450000000021941e-07, 9.309999999991547e-07, 9.169999999995848e-07]</msg>
<status status="PASS" starttime="20201030 18:32:41.647" endtime="20201030 18:32:41.649"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:41.643" endtime="20201030 18:32:41.650"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:41.653" endtime="20201030 18:32:41.673"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:41.652" endtime="20201030 18:32:41.673"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:41.651" endtime="20201030 18:32:41.674"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:41.295" endtime="20201030 18:32:41.674"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:41.295" endtime="20201030 18:32:41.674"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:41.683" endtime="20201030 18:32:41.695"></status>
</kw>
<msg timestamp="20201030 18:32:41.695" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:41.681" endtime="20201030 18:32:41.696"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:41.698" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:41.697" endtime="20201030 18:32:41.698"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:41.699" endtime="20201030 18:32:41.702"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:41.678" endtime="20201030 18:32:41.702"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:41.676" endtime="20201030 18:32:41.703"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:41.709" endtime="20201030 18:32:41.993"></status>
</kw>
<msg timestamp="20201030 18:32:41.996" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018940625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018941556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:41.707" endtime="20201030 18:32:41.996"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:42.004" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018940625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018941556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:41.997" endtime="20201030 18:32:42.004"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:42.005" endtime="20201030 18:32:42.007"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:41.705" endtime="20201030 18:32:42.007"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:41.703" endtime="20201030 18:32:42.008"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:42.012" level="INFO">${RESULT} = [{'diff': 9.309999999991547e-07}, {'diff': 9.440000000027204e-07}, {'diff': 9.299999999996811e-07}, {'diff': 9.299999999996811e-07}, {'diff': 9.440000000027204e-07}, {'diff': 9.309999999991547e-07}, {...</msg>
<status status="PASS" starttime="20201030 18:32:42.008" endtime="20201030 18:32:42.012"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:32:42.016" level="INFO">${OVERHEAD} = {'diff': [9.309999999991547e-07, 9.440000000027204e-07, 9.299999999996811e-07, 9.299999999996811e-07, 9.440000000027204e-07, 9.309999999991547e-07, 9.160000000001112e-07, 9.299999999996811e-07, 9.3100...</msg>
<status status="PASS" starttime="20201030 18:32:42.012" endtime="20201030 18:32:42.016"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:42.020" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:32:42.019" endtime="20201030 18:32:42.020"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:42.022" level="INFO">VALUE: [9.309999999991547e-07, 9.440000000027204e-07, 9.299999999996811e-07, 9.299999999996811e-07, 9.440000000027204e-07, 9.309999999991547e-07, 9.160000000001112e-07, 9.299999999996811e-07, 9.310000000026242e-07, 9.030000000000149e-07, 9.169999999995848e-07, 9.169999999995848e-07, 9.299999999996811e-07, 9.309999999991547e-07, 9.310000000026242e-07, 9.169999999995848e-07, 9.030000000000149e-07, 9.449999999987246e-07, 9.160000000001112e-07, 9.43999999999251e-07, 9.299999999996811e-07, 9.309999999991547e-07, 9.309999999991547e-07, 9.299999999996811e-07, 9.299999999996811e-07, 9.440000000027204e-07, 9.299999999996811e-07, 9.309999999991547e-07, 9.309999999991547e-07, 8.610000000013052e-07, 9.310000000026242e-07, 9.309999999991547e-07, 9.299999999996811e-07, 9.43999999999251e-07, 9.309999999991547e-07, 9.299999999996811e-07, 9.309999999991547e-07, 9.43999999999251e-07, 9.440000000027204e-07, 9.169999999995848e-07, 9.309999999991547e-07, 8.89000000000445e-07, 9.450000000021941e-07, 9.309999999991547e-07, 9.309999999991547e-07, 9.43999999999251e-07, 9.169999999995848e-07, 9.160000000001112e-07, 9.309999999991547e-07, 9.859999999979607e-07]</msg>
<status status="PASS" starttime="20201030 18:32:42.021" endtime="20201030 18:32:42.026"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:42.017" endtime="20201030 18:32:42.026"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:42.030" endtime="20201030 18:32:42.049"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:42.028" endtime="20201030 18:32:42.050"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:42.027" endtime="20201030 18:32:42.050"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:41.675" endtime="20201030 18:32:42.051"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:41.674" endtime="20201030 18:32:42.051"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:42.058" endtime="20201030 18:32:42.071"></status>
</kw>
<msg timestamp="20201030 18:32:42.072" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:42.057" endtime="20201030 18:32:42.072"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:42.074" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:42.073" endtime="20201030 18:32:42.074"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:42.075" endtime="20201030 18:32:42.077"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:42.054" endtime="20201030 18:32:42.077"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:42.053" endtime="20201030 18:32:42.078"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:42.084" endtime="20201030 18:32:42.374"></status>
</kw>
<msg timestamp="20201030 18:32:42.377" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017760556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017761486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:42.083" endtime="20201030 18:32:42.377"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:42.385" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017760556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017761486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:42.378" endtime="20201030 18:32:42.385"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:42.386" endtime="20201030 18:32:42.387"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:42.080" endtime="20201030 18:32:42.388"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:42.078" endtime="20201030 18:32:42.388"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:42.392" level="INFO">${RESULT} = [{'diff': 9.299999999996811e-07}, {'diff': 9.299999999996811e-07}, {'diff': 9.169999999995848e-07}, {'diff': 9.160000000001112e-07}, {'diff': 9.449999999987246e-07}, {'diff': 9.440000000027204e-07}, {...</msg>
<status status="PASS" starttime="20201030 18:32:42.389" endtime="20201030 18:32:42.392"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:32:42.397" level="INFO">${OVERHEAD} = {'diff': [9.299999999996811e-07, 9.299999999996811e-07, 9.169999999995848e-07, 9.160000000001112e-07, 9.449999999987246e-07, 9.440000000027204e-07, 9.299999999996811e-07, 9.299999999996811e-07, 9.0300...</msg>
<status status="PASS" starttime="20201030 18:32:42.393" endtime="20201030 18:32:42.397"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:42.401" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:32:42.400" endtime="20201030 18:32:42.402"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:42.404" level="INFO">VALUE: [9.299999999996811e-07, 9.299999999996811e-07, 9.169999999995848e-07, 9.160000000001112e-07, 9.449999999987246e-07, 9.440000000027204e-07, 9.299999999996811e-07, 9.299999999996811e-07, 9.030000000000149e-07, 9.299999999996811e-07, 9.43999999999251e-07, 9.169999999995848e-07, 9.309999999991547e-07, 9.299999999996811e-07, 9.310000000026242e-07, 8.89000000000445e-07, 9.169999999995848e-07, 9.299999999996811e-07, 9.309999999991547e-07, 1.01400000000057e-06, 9.309999999991547e-07, 9.169999999995848e-07, 9.43999999999251e-07, 9.160000000001112e-07, 9.030000000000149e-07, 8.89000000000445e-07, 9.449999999987246e-07, 9.309999999991547e-07, 9.449999999987246e-07, 9.43999999999251e-07, 9.160000000001112e-07, 9.169999999995848e-07, 9.43999999999251e-07, 9.020000000005413e-07, 9.299999999996811e-07, 9.299999999996811e-07, 9.309999999991547e-07, 9.440000000027204e-07, 9.299999999996811e-07, 9.169999999995848e-07, 9.299999999996811e-07, 9.299999999996811e-07, 9.57999999998821e-07, 9.309999999991547e-07, 9.160000000001112e-07, 9.299999999996811e-07, 9.169999999995848e-07, 9.449999999987246e-07, 9.299999999996811e-07, 9.449999999987246e-07]</msg>
<status status="PASS" starttime="20201030 18:32:42.402" endtime="20201030 18:32:42.404"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:42.398" endtime="20201030 18:32:42.405"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:42.409" endtime="20201030 18:32:42.428"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:42.407" endtime="20201030 18:32:42.429"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:42.406" endtime="20201030 18:32:42.429"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:42.051" endtime="20201030 18:32:42.429"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:42.051" endtime="20201030 18:32:42.429"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:34.799" endtime="20201030 18:32:42.430"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:42.433" endtime="20201030 18:32:42.453"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:42.432" endtime="20201030 18:32:42.453"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:42.431" endtime="20201030 18:32:42.454"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 18:32:31.704" endtime="20201030 18:32:42.454" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:42.461" endtime="20201030 18:32:42.480"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:42.459" endtime="20201030 18:32:42.481"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:42.493" endtime="20201030 18:32:45.516"></status>
</kw>
<msg timestamp="20201030 18:32:45.517" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:42.492" endtime="20201030 18:32:45.517"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:45.522" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:45.519" endtime="20201030 18:32:45.523"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:32:45.528" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:32:45.524" endtime="20201030 18:32:45.529"></status>
</kw>
<status status="FAIL" starttime="20201030 18:32:42.489" endtime="20201030 18:32:45.530"></status>
</kw>
<status status="FAIL" starttime="20201030 18:32:42.487" endtime="20201030 18:32:45.532"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:42.486" endtime="20201030 18:32:45.532"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:32:45.540" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:32:45.538" endtime="20201030 18:32:45.541"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:45.534" endtime="20201030 18:32:45.541"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:42.485" endtime="20201030 18:32:45.541"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:42.484" endtime="20201030 18:32:45.542"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:45.543" endtime="20201030 18:32:45.546"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:42.483" endtime="20201030 18:32:45.547"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:42.481" endtime="20201030 18:32:45.548"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:42.458" endtime="20201030 18:32:45.549"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>02</arg>
<arg>set</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:45.566" endtime="20201030 18:32:45.589"></status>
</kw>
<msg timestamp="20201030 18:32:45.591" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:45.563" endtime="20201030 18:32:45.591"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:45.596" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:45.593" endtime="20201030 18:32:45.597"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:45.598" endtime="20201030 18:32:45.601"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:45.558" endtime="20201030 18:32:45.603"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:45.553" endtime="20201030 18:32:45.603"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:45.608" endtime="20201030 18:32:45.611"></status>
</kw>
<msg timestamp="20201030 18:32:45.612" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201030 18:32:45.605" endtime="20201030 18:32:45.612"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:45.620" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 18:32:45.618" endtime="20201030 18:32:45.621"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:45.624" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 18:32:45.623" endtime="20201030 18:32:45.624"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:45.614" endtime="20201030 18:32:45.625"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:45.629" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 18:32:45.628" endtime="20201030 18:32:45.629"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:45.631" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 18:32:45.630" endtime="20201030 18:32:45.631"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:45.625" endtime="20201030 18:32:45.632"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:45.638" endtime="20201030 18:32:45.932"></status>
</kw>
<msg timestamp="20201030 18:32:45.935" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.097220042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.097223931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:45.636" endtime="20201030 18:32:45.935"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:45.943" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.097220042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.097223931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:45.936" endtime="20201030 18:32:45.944"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:45.944" endtime="20201030 18:32:45.946"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:45.634" endtime="20201030 18:32:45.947"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:45.632" endtime="20201030 18:32:45.947"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:45.952" level="INFO">${RESULT} = [{'diff': 3.888999999812626e-06}, {'diff': 4.847000000030022e-06}, {'diff': 4.778000000094096e-06}, {'diff': 4.778000000094096e-06}, {'diff': 4.778000000094096e-06}, {'diff': 4.792000000364283e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:32:45.948" endtime="20201030 18:32:45.952"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:32:45.957" level="INFO">${OVERHEAD} = {'diff': [3.888999999812626e-06, 4.847000000030022e-06, 4.778000000094096e-06, 4.778000000094096e-06, 4.778000000094096e-06, 4.792000000364283e-06, 4.735999999727625e-06, 4.736000000171714e-06, 4.8059...</msg>
<status status="PASS" starttime="20201030 18:32:45.953" endtime="20201030 18:32:45.958"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:45.964" level="INFO">NAME: overhead-02-set-first-timer</msg>
<status status="PASS" starttime="20201030 18:32:45.963" endtime="20201030 18:32:45.965"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:45.973" level="INFO">VALUE: [3.888999999812626e-06, 4.847000000030022e-06, 4.778000000094096e-06, 4.778000000094096e-06, 4.778000000094096e-06, 4.792000000364283e-06, 4.735999999727625e-06, 4.736000000171714e-06, 4.805999999746291e-06, 4.7770000000113555e-06, 4.7919999999201934e-06, 4.792000000364283e-06, 4.8340000002866645e-06, 4.792000000364283e-06, 4.790999999837453e-06, 4.778000000094096e-06, 4.7919999999201934e-06, 4.805999999746291e-06, 4.792000000364283e-06, 4.80500000010764e-06, 4.7499999999978115e-06, 4.778000000094096e-06, 4.80500000010764e-06, 4.778000000094096e-06, 4.791000000281542e-06, 4.790999999837453e-06, 4.790999999837453e-06, 4.7770000000113555e-06, 4.791000000281542e-06, 4.7919999999201934e-06, 4.778000000094096e-06, 4.790999999837453e-06, 4.763999999823909e-06, 4.763999999823909e-06, 4.778000000094096e-06, 4.778000000094096e-06, 4.778000000094096e-06, 4.778000000094096e-06, 4.7919999999201934e-06, 4.80600000019038e-06, 4.777999999650007e-06, 4.7919999999201934e-06, 4.764000000267998e-06, 4.80600000019038e-06, 4.778000000094096e-06, 4.777999999650007e-06, 4.7919999999201934e-06, 4.778000000094096e-06, 4.7919999999201934e-06, 4.777999999650007e-06]</msg>
<status status="PASS" starttime="20201030 18:32:45.966" endtime="20201030 18:32:45.974"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:45.959" endtime="20201030 18:32:45.974"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:45.980" endtime="20201030 18:32:46.000"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:45.977" endtime="20201030 18:32:46.001"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:45.976" endtime="20201030 18:32:46.001"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:45.550" endtime="20201030 18:32:46.001"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 18:32:42.455" endtime="20201030 18:32:46.002" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Set Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:46.009" endtime="20201030 18:32:46.028"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:46.007" endtime="20201030 18:32:46.029"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:46.042" endtime="20201030 18:32:49.064"></status>
</kw>
<msg timestamp="20201030 18:32:49.065" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:46.041" endtime="20201030 18:32:49.065"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:49.070" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:49.067" endtime="20201030 18:32:49.070"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:32:49.076" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:32:49.072" endtime="20201030 18:32:49.077"></status>
</kw>
<status status="FAIL" starttime="20201030 18:32:46.038" endtime="20201030 18:32:49.078"></status>
</kw>
<status status="FAIL" starttime="20201030 18:32:46.036" endtime="20201030 18:32:49.079"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:46.035" endtime="20201030 18:32:49.080"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:32:49.087" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:32:49.086" endtime="20201030 18:32:49.088"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:49.082" endtime="20201030 18:32:49.089"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:46.034" endtime="20201030 18:32:49.089"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:46.033" endtime="20201030 18:32:49.089"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:49.091" endtime="20201030 18:32:49.094"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:46.031" endtime="20201030 18:32:49.095"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:46.029" endtime="20201030 18:32:49.096"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:46.006" endtime="20201030 18:32:49.096"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>03</arg>
<arg>set</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:49.114" endtime="20201030 18:32:53.150"></status>
</kw>
<msg timestamp="20201030 18:32:53.151" level="INFO">${RESULT} = {'cmd': 'overhead_timer set middle', 'msg': ['overhead_timer set middle\r\n', '{"cmd":"timer overhead: set middle timer","data":[{"timer count":"100"},{"sample count":"50"}/data/riotbuild/riotproject/...</msg>
<status status="PASS" starttime="20201030 18:32:49.110" endtime="20201030 18:32:53.151"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:53.154" level="INFO">${RESULT} = {'cmd': 'overhead_timer set middle', 'msg': ['overhead_timer set middle\r\n', '{"cmd":"timer overhead: set middle timer","data":[{"timer count":"100"},{"sample count":"50"}/data/riotbuild/riotproject/...</msg>
<status status="PASS" starttime="20201030 18:32:53.152" endtime="20201030 18:32:53.154"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:32:53.157" level="FAIL">'Timeout' does not contain 'Success'</msg>
<status status="FAIL" starttime="20201030 18:32:53.155" endtime="20201030 18:32:53.157"></status>
</kw>
<status status="FAIL" starttime="20201030 18:32:49.105" endtime="20201030 18:32:53.158"></status>
</kw>
<status status="FAIL" starttime="20201030 18:32:49.101" endtime="20201030 18:32:53.158"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:53.163" endtime="20201030 18:32:53.182"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:53.160" endtime="20201030 18:32:53.183"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:53.159" endtime="20201030 18:32:53.183"></status>
</kw>
<status status="FAIL" starttime="20201030 18:32:49.098" endtime="20201030 18:32:53.184"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="FAIL" starttime="20201030 18:32:46.003" endtime="20201030 18:32:53.184" critical="yes">'Timeout' does not contain 'Success'</status>
</test>
<test id="s1-s2-t5" name="Measure Overhead Set Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:53.191" endtime="20201030 18:32:53.211"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:53.190" endtime="20201030 18:32:53.211"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:53.224" endtime="20201030 18:33:00.237"></status>
</kw>
<msg timestamp="20201030 18:33:00.238" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 18:32:53.223" endtime="20201030 18:33:00.238"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:00.242" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 18:33:00.240" endtime="20201030 18:33:00.243"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:00.245" endtime="20201030 18:33:00.248"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:53.220" endtime="20201030 18:33:00.249"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:53.218" endtime="20201030 18:33:00.250"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:53.217" endtime="20201030 18:33:00.251"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:00.252" endtime="20201030 18:33:00.256"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:53.216" endtime="20201030 18:33:00.256"></status>
</kw>
<kw name="${i} = 1" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:00.275" endtime="20201030 18:33:04.284"></status>
</kw>
<msg timestamp="20201030 18:33:04.285" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 18:33:00.271" endtime="20201030 18:33:04.293"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:04.298" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 18:33:04.295" endtime="20201030 18:33:04.298"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:04.300" endtime="20201030 18:33:04.303"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:00.266" endtime="20201030 18:33:04.304"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:00.261" endtime="20201030 18:33:04.305"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:00.259" endtime="20201030 18:33:04.306"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:04.308" endtime="20201030 18:33:04.311"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:00.257" endtime="20201030 18:33:04.311"></status>
</kw>
<kw name="${i} = 2" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:04.332" endtime="20201030 18:33:08.342"></status>
</kw>
<msg timestamp="20201030 18:33:08.343" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 18:33:04.329" endtime="20201030 18:33:08.343"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:08.348" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 18:33:08.345" endtime="20201030 18:33:08.349"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:08.350" endtime="20201030 18:33:08.353"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:04.323" endtime="20201030 18:33:08.355"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:04.316" endtime="20201030 18:33:08.356"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:04.314" endtime="20201030 18:33:08.356"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:08.358" endtime="20201030 18:33:08.361"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:04.312" endtime="20201030 18:33:08.361"></status>
</kw>
<kw name="${i} = 3" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:08.380" endtime="20201030 18:33:12.389"></status>
</kw>
<msg timestamp="20201030 18:33:12.390" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 18:33:08.377" endtime="20201030 18:33:12.391"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:12.395" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 18:33:12.392" endtime="20201030 18:33:12.396"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:12.398" endtime="20201030 18:33:12.401"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:08.371" endtime="20201030 18:33:12.402"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:08.366" endtime="20201030 18:33:12.403"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:08.364" endtime="20201030 18:33:12.403"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:12.405" endtime="20201030 18:33:12.408"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:08.362" endtime="20201030 18:33:12.409"></status>
</kw>
<kw name="${i} = 4" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:12.428" endtime="20201030 18:33:16.438"></status>
</kw>
<msg timestamp="20201030 18:33:16.439" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 18:33:12.425" endtime="20201030 18:33:16.439"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:16.444" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 18:33:16.441" endtime="20201030 18:33:16.444"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:16.446" endtime="20201030 18:33:16.449"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:12.419" endtime="20201030 18:33:16.450"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:12.414" endtime="20201030 18:33:16.451"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:12.411" endtime="20201030 18:33:16.452"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:16.455" endtime="20201030 18:33:16.460"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:12.410" endtime="20201030 18:33:16.460"></status>
</kw>
<kw name="${i} = 5" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:16.481" endtime="20201030 18:33:20.491"></status>
</kw>
<msg timestamp="20201030 18:33:20.492" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 18:33:16.476" endtime="20201030 18:33:20.492"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:20.497" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 18:33:20.494" endtime="20201030 18:33:20.498"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:20.499" endtime="20201030 18:33:20.502"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:16.471" endtime="20201030 18:33:20.504"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:16.466" endtime="20201030 18:33:20.505"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:16.463" endtime="20201030 18:33:20.505"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:20.507" endtime="20201030 18:33:20.510"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:16.461" endtime="20201030 18:33:20.510"></status>
</kw>
<kw name="${i} = 6" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:20.529" endtime="20201030 18:33:24.538"></status>
</kw>
<msg timestamp="20201030 18:33:24.539" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 18:33:20.525" endtime="20201030 18:33:24.540"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:24.544" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 18:33:24.541" endtime="20201030 18:33:24.545"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:24.546" endtime="20201030 18:33:24.550"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:20.520" endtime="20201030 18:33:24.551"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:20.515" endtime="20201030 18:33:24.552"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:20.513" endtime="20201030 18:33:24.552"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:24.554" endtime="20201030 18:33:24.557"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:20.511" endtime="20201030 18:33:24.558"></status>
</kw>
<kw name="${i} = 7" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:24.577" endtime="20201030 18:33:28.587"></status>
</kw>
<msg timestamp="20201030 18:33:28.588" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 18:33:24.574" endtime="20201030 18:33:28.588"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:28.592" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 18:33:28.590" endtime="20201030 18:33:28.593"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:28.595" endtime="20201030 18:33:28.598"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:24.568" endtime="20201030 18:33:28.599"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:24.563" endtime="20201030 18:33:28.600"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:24.560" endtime="20201030 18:33:28.601"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:28.602" endtime="20201030 18:33:28.605"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:24.558" endtime="20201030 18:33:28.606"></status>
</kw>
<kw name="${i} = 8" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:28.624" endtime="20201030 18:33:32.634"></status>
</kw>
<msg timestamp="20201030 18:33:32.635" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 18:33:28.621" endtime="20201030 18:33:32.635"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:32.640" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 18:33:32.637" endtime="20201030 18:33:32.640"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:32.642" endtime="20201030 18:33:32.645"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:28.616" endtime="20201030 18:33:32.646"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:28.611" endtime="20201030 18:33:32.647"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:28.608" endtime="20201030 18:33:32.648"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:32.650" endtime="20201030 18:33:32.653"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:28.607" endtime="20201030 18:33:32.653"></status>
</kw>
<kw name="${i} = 9" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:32.674" endtime="20201030 18:33:36.684"></status>
</kw>
<msg timestamp="20201030 18:33:36.685" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 18:33:32.671" endtime="20201030 18:33:36.685"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:36.690" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 18:33:36.687" endtime="20201030 18:33:36.691"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:36.692" endtime="20201030 18:33:36.695"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:32.663" endtime="20201030 18:33:36.696"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:32.659" endtime="20201030 18:33:36.697"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:32.656" endtime="20201030 18:33:36.699"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:36.700" endtime="20201030 18:33:36.704"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:32.654" endtime="20201030 18:33:36.704"></status>
</kw>
<kw name="${i} = 10" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:36.722" endtime="20201030 18:33:40.732"></status>
</kw>
<msg timestamp="20201030 18:33:40.733" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 18:33:36.719" endtime="20201030 18:33:40.733"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:40.738" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 18:33:40.735" endtime="20201030 18:33:40.739"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:40.740" endtime="20201030 18:33:40.743"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:36.714" endtime="20201030 18:33:40.744"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:36.709" endtime="20201030 18:33:40.745"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:36.707" endtime="20201030 18:33:40.746"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:40.748" endtime="20201030 18:33:40.751"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:36.705" endtime="20201030 18:33:40.751"></status>
</kw>
<kw name="${i} = 11" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:40.770" endtime="20201030 18:33:44.779"></status>
</kw>
<msg timestamp="20201030 18:33:44.780" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 18:33:40.767" endtime="20201030 18:33:44.781"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:44.785" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 18:33:44.782" endtime="20201030 18:33:44.786"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:44.787" endtime="20201030 18:33:44.791"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:40.761" endtime="20201030 18:33:44.792"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:40.756" endtime="20201030 18:33:44.793"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:40.754" endtime="20201030 18:33:44.793"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:44.795" endtime="20201030 18:33:44.798"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:40.752" endtime="20201030 18:33:44.799"></status>
</kw>
<kw name="${i} = 12" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:44.817" endtime="20201030 18:33:48.827"></status>
</kw>
<msg timestamp="20201030 18:33:48.828" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 18:33:44.814" endtime="20201030 18:33:48.828"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:48.832" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 18:33:48.830" endtime="20201030 18:33:48.834"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:48.835" endtime="20201030 18:33:48.839"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:44.809" endtime="20201030 18:33:48.840"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:44.804" endtime="20201030 18:33:48.841"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:44.801" endtime="20201030 18:33:48.841"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:48.843" endtime="20201030 18:33:48.846"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:44.799" endtime="20201030 18:33:48.847"></status>
</kw>
<kw name="${i} = 13" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:48.868" endtime="20201030 18:33:52.877"></status>
</kw>
<msg timestamp="20201030 18:33:52.878" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 18:33:48.864" endtime="20201030 18:33:52.879"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:52.883" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 18:33:52.880" endtime="20201030 18:33:52.884"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:52.886" endtime="20201030 18:33:52.889"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:48.859" endtime="20201030 18:33:52.890"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:48.852" endtime="20201030 18:33:52.891"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:48.849" endtime="20201030 18:33:52.892"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:52.894" endtime="20201030 18:33:52.897"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:48.848" endtime="20201030 18:33:52.898"></status>
</kw>
<kw name="${i} = 14" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:52.917" endtime="20201030 18:33:56.928"></status>
</kw>
<msg timestamp="20201030 18:33:56.929" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 18:33:52.913" endtime="20201030 18:33:56.929"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:56.934" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 18:33:56.931" endtime="20201030 18:33:56.934"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:56.936" endtime="20201030 18:33:56.939"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:52.908" endtime="20201030 18:33:56.940"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:52.903" endtime="20201030 18:33:56.941"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:52.900" endtime="20201030 18:33:56.942"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:56.943" endtime="20201030 18:33:56.947"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:52.899" endtime="20201030 18:33:56.947"></status>
</kw>
<kw name="${i} = 15" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:56.965" endtime="20201030 18:34:00.976"></status>
</kw>
<msg timestamp="20201030 18:34:00.977" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 18:33:56.962" endtime="20201030 18:34:00.977"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:34:00.982" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 18:34:00.979" endtime="20201030 18:34:00.982"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:00.984" endtime="20201030 18:34:00.987"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:56.957" endtime="20201030 18:34:00.988"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:56.952" endtime="20201030 18:34:00.989"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:56.949" endtime="20201030 18:34:00.990"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:00.992" endtime="20201030 18:34:00.995"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:56.948" endtime="20201030 18:34:00.995"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:53.215" endtime="20201030 18:34:00.995"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<msg timestamp="20201030 18:34:01.001" level="FAIL">'Timeout' does not contain 'Success'</msg>
<status status="FAIL" starttime="20201030 18:34:00.997" endtime="20201030 18:34:01.001"></status>
</kw>
<status status="FAIL" starttime="20201030 18:32:53.214" endtime="20201030 18:34:01.003"></status>
</kw>
<status status="FAIL" starttime="20201030 18:32:53.212" endtime="20201030 18:34:01.004"></status>
</kw>
<status status="FAIL" starttime="20201030 18:32:53.189" endtime="20201030 18:34:01.005"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="FAIL" starttime="20201030 18:32:53.186" endtime="20201030 18:34:01.006" critical="yes">Setup failed:
'Timeout' does not contain 'Success'</status>
</test>
<test id="s1-s2-t6" name="Measure Overhead Remove First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:34:01.020" endtime="20201030 18:34:01.042"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:01.017" endtime="20201030 18:34:01.043"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:01.072" endtime="20201030 18:34:08.087"></status>
</kw>
<msg timestamp="20201030 18:34:08.088" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 18:34:01.069" endtime="20201030 18:34:08.088"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:34:08.092" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 18:34:08.090" endtime="20201030 18:34:08.093"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:08.095" endtime="20201030 18:34:08.098"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:01.063" endtime="20201030 18:34:08.099"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:01.059" endtime="20201030 18:34:08.100"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:01.056" endtime="20201030 18:34:08.101"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:08.102" endtime="20201030 18:34:08.105"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:01.054" endtime="20201030 18:34:08.106"></status>
</kw>
<kw name="${i} = 1" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:08.124" endtime="20201030 18:34:12.132"></status>
</kw>
<msg timestamp="20201030 18:34:12.133" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 18:34:08.121" endtime="20201030 18:34:12.133"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:34:12.145" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 18:34:12.142" endtime="20201030 18:34:12.146"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:12.148" endtime="20201030 18:34:12.151"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:08.116" endtime="20201030 18:34:12.152"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:08.111" endtime="20201030 18:34:12.153"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:08.108" endtime="20201030 18:34:12.154"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:12.156" endtime="20201030 18:34:12.159"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:08.107" endtime="20201030 18:34:12.159"></status>
</kw>
<kw name="${i} = 2" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:12.178" endtime="20201030 18:34:16.189"></status>
</kw>
<msg timestamp="20201030 18:34:16.190" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 18:34:12.174" endtime="20201030 18:34:16.190"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:34:16.195" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 18:34:16.192" endtime="20201030 18:34:16.195"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:16.197" endtime="20201030 18:34:16.200"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:12.169" endtime="20201030 18:34:16.201"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:12.164" endtime="20201030 18:34:16.202"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:12.162" endtime="20201030 18:34:16.203"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:16.204" endtime="20201030 18:34:16.208"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:12.160" endtime="20201030 18:34:16.208"></status>
</kw>
<kw name="${i} = 3" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:16.226" endtime="20201030 18:34:20.236"></status>
</kw>
<msg timestamp="20201030 18:34:20.237" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 18:34:16.223" endtime="20201030 18:34:20.237"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:34:20.242" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 18:34:20.239" endtime="20201030 18:34:20.243"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:20.244" endtime="20201030 18:34:20.247"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:16.218" endtime="20201030 18:34:20.248"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:16.213" endtime="20201030 18:34:20.249"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:16.210" endtime="20201030 18:34:20.250"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:20.252" endtime="20201030 18:34:20.255"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:16.209" endtime="20201030 18:34:20.255"></status>
</kw>
<kw name="${i} = 4" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:20.274" endtime="20201030 18:34:24.284"></status>
</kw>
<msg timestamp="20201030 18:34:24.285" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 18:34:20.270" endtime="20201030 18:34:24.286"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:34:24.290" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 18:34:24.287" endtime="20201030 18:34:24.291"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:24.292" endtime="20201030 18:34:24.296"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:20.265" endtime="20201030 18:34:24.297"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:20.260" endtime="20201030 18:34:24.298"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:20.258" endtime="20201030 18:34:24.298"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:24.300" endtime="20201030 18:34:24.303"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:20.256" endtime="20201030 18:34:24.304"></status>
</kw>
<kw name="${i} = 5" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:24.322" endtime="20201030 18:34:28.332"></status>
</kw>
<msg timestamp="20201030 18:34:28.332" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 18:34:24.319" endtime="20201030 18:34:28.333"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:34:28.338" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 18:34:28.335" endtime="20201030 18:34:28.338"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:28.340" endtime="20201030 18:34:28.343"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:24.313" endtime="20201030 18:34:28.344"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:24.309" endtime="20201030 18:34:28.345"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:24.306" endtime="20201030 18:34:28.346"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:28.348" endtime="20201030 18:34:28.351"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:24.304" endtime="20201030 18:34:28.351"></status>
</kw>
<kw name="${i} = 6" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:28.377" endtime="20201030 18:34:32.387"></status>
</kw>
<msg timestamp="20201030 18:34:32.388" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 18:34:28.374" endtime="20201030 18:34:32.388"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:34:32.393" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 18:34:32.390" endtime="20201030 18:34:32.394"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:32.395" endtime="20201030 18:34:32.399"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:28.362" endtime="20201030 18:34:32.400"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:28.357" endtime="20201030 18:34:32.401"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:28.354" endtime="20201030 18:34:32.401"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:32.403" endtime="20201030 18:34:32.406"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:28.352" endtime="20201030 18:34:32.407"></status>
</kw>
<kw name="${i} = 7" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:32.426" endtime="20201030 18:34:36.436"></status>
</kw>
<msg timestamp="20201030 18:34:36.437" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 18:34:32.423" endtime="20201030 18:34:36.437"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:34:36.442" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 18:34:36.439" endtime="20201030 18:34:36.442"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:36.444" endtime="20201030 18:34:36.447"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:32.417" endtime="20201030 18:34:36.448"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:32.412" endtime="20201030 18:34:36.449"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:32.409" endtime="20201030 18:34:36.450"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:36.452" endtime="20201030 18:34:36.455"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:32.407" endtime="20201030 18:34:36.455"></status>
</kw>
<kw name="${i} = 8" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:36.474" endtime="20201030 18:34:40.483"></status>
</kw>
<msg timestamp="20201030 18:34:40.484" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 18:34:36.471" endtime="20201030 18:34:40.485"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:34:40.489" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 18:34:40.487" endtime="20201030 18:34:40.490"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:40.491" endtime="20201030 18:34:40.495"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:36.465" endtime="20201030 18:34:40.496"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:36.460" endtime="20201030 18:34:40.497"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:36.458" endtime="20201030 18:34:40.497"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:40.499" endtime="20201030 18:34:40.502"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:36.456" endtime="20201030 18:34:40.503"></status>
</kw>
<kw name="${i} = 9" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:40.521" endtime="20201030 18:34:44.531"></status>
</kw>
<msg timestamp="20201030 18:34:44.532" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 18:34:40.518" endtime="20201030 18:34:44.532"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:34:44.537" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 18:34:44.534" endtime="20201030 18:34:44.537"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:44.539" endtime="20201030 18:34:44.542"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:40.513" endtime="20201030 18:34:44.543"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:40.508" endtime="20201030 18:34:44.544"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:40.505" endtime="20201030 18:34:44.545"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:44.547" endtime="20201030 18:34:44.551"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:40.503" endtime="20201030 18:34:44.551"></status>
</kw>
<kw name="${i} = 10" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:44.572" endtime="20201030 18:34:48.581"></status>
</kw>
<msg timestamp="20201030 18:34:48.582" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 18:34:44.568" endtime="20201030 18:34:48.583"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:34:48.587" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 18:34:48.584" endtime="20201030 18:34:48.588"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:48.589" endtime="20201030 18:34:48.593"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:44.563" endtime="20201030 18:34:48.594"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:44.556" endtime="20201030 18:34:48.595"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:44.553" endtime="20201030 18:34:48.595"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:48.597" endtime="20201030 18:34:48.600"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:44.552" endtime="20201030 18:34:48.601"></status>
</kw>
<kw name="${i} = 11" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:48.620" endtime="20201030 18:34:52.629"></status>
</kw>
<msg timestamp="20201030 18:34:52.630" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 18:34:48.616" endtime="20201030 18:34:52.631"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:34:52.635" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 18:34:52.633" endtime="20201030 18:34:52.636"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:52.638" endtime="20201030 18:34:52.641"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:48.610" endtime="20201030 18:34:52.642"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:48.606" endtime="20201030 18:34:52.643"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:48.603" endtime="20201030 18:34:52.644"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:52.645" endtime="20201030 18:34:52.648"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:48.601" endtime="20201030 18:34:52.649"></status>
</kw>
<kw name="${i} = 12" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:52.667" endtime="20201030 18:34:56.677"></status>
</kw>
<msg timestamp="20201030 18:34:56.678" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 18:34:52.664" endtime="20201030 18:34:56.678"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:34:56.683" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 18:34:56.680" endtime="20201030 18:34:56.683"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:56.685" endtime="20201030 18:34:56.689"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:52.659" endtime="20201030 18:34:56.690"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:52.654" endtime="20201030 18:34:56.691"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:52.651" endtime="20201030 18:34:56.692"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:56.694" endtime="20201030 18:34:56.697"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:52.650" endtime="20201030 18:34:56.697"></status>
</kw>
<kw name="${i} = 13" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:34:56.716" endtime="20201030 18:35:00.725"></status>
</kw>
<msg timestamp="20201030 18:35:00.727" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 18:34:56.713" endtime="20201030 18:35:00.727"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:35:00.731" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 18:35:00.729" endtime="20201030 18:35:00.732"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:35:00.734" endtime="20201030 18:35:00.739"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:56.707" endtime="20201030 18:35:00.740"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:56.702" endtime="20201030 18:35:00.741"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:56.700" endtime="20201030 18:35:00.742"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 18:35:00.743" endtime="20201030 18:35:00.747"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:56.698" endtime="20201030 18:35:00.747"></status>
</kw>
<kw name="${i} = 14" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:35:00.766" endtime="20201030 18:35:04.775"></status>
</kw>
<msg timestamp="20201030 18:35:04.776" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 18:35:00.762" endtime="20201030 18:35:04.777"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:35:04.781" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 18:35:04.778" endtime="20201030 18:35:04.782"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:35:04.783" endtime="20201030 18:35:04.787"></status>
</kw>
<status status="PASS" starttime="20201030 18:35:00.757" endtime="20201030 18:35:04.788"></status>
</kw>
<status status="PASS" starttime="20201030 18:35:00.752" endtime="20201030 18:35:04.789"></status>
</kw>
<status status="PASS" starttime="20201030 18:35:00.750" endtime="20201030 18:35:04.789"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 18:35:04.791" endtime="20201030 18:35:04.794"></status>
</kw>
<status status="PASS" starttime="20201030 18:35:00.748" endtime="20201030 18:35:04.795"></status>
</kw>
<kw name="${i} = 15" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:35:04.813" endtime="20201030 18:35:08.824"></status>
</kw>
<msg timestamp="20201030 18:35:08.825" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 18:35:04.810" endtime="20201030 18:35:08.826"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:35:08.830" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 18:35:08.828" endtime="20201030 18:35:08.831"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:35:08.833" endtime="20201030 18:35:08.836"></status>
</kw>
<status status="PASS" starttime="20201030 18:35:04.804" endtime="20201030 18:35:08.837"></status>
</kw>
<status status="PASS" starttime="20201030 18:35:04.800" endtime="20201030 18:35:08.838"></status>
</kw>
<status status="PASS" starttime="20201030 18:35:04.797" endtime="20201030 18:35:08.839"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 18:35:08.840" endtime="20201030 18:35:08.844"></status>
</kw>
<status status="PASS" starttime="20201030 18:35:04.795" endtime="20201030 18:35:08.844"></status>
</kw>
<status status="PASS" starttime="20201030 18:34:01.053" endtime="20201030 18:35:08.844"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<msg timestamp="20201030 18:35:08.850" level="FAIL">'Timeout' does not contain 'Success'</msg>
<status status="FAIL" starttime="20201030 18:35:08.846" endtime="20201030 18:35:08.850"></status>
</kw>
<status status="FAIL" starttime="20201030 18:34:01.048" endtime="20201030 18:35:08.851"></status>
</kw>
<status status="FAIL" starttime="20201030 18:34:01.045" endtime="20201030 18:35:08.853"></status>
</kw>
<status status="FAIL" starttime="20201030 18:34:01.015" endtime="20201030 18:35:08.853"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="FAIL" starttime="20201030 18:34:01.009" endtime="20201030 18:35:08.855" critical="yes">Setup failed:
'Timeout' does not contain 'Success'</status>
</test>
<test id="s1-s2-t7" name="Measure Overhead Remove Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:35:08.869" endtime="20201030 18:35:08.891"></status>
</kw>
<status status="PASS" starttime="20201030 18:35:08.866" endtime="20201030 18:35:08.892"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:35:08.918" endtime="20201030 18:35:15.931"></status>
</kw>
<msg timestamp="20201030 18:35:15.932" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 18:35:08.917" endtime="20201030 18:35:15.932"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:35:15.937" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 18:35:15.934" endtime="20201030 18:35:15.938"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:35:15.939" endtime="20201030 18:35:15.943"></status>
</kw>
<status status="PASS" starttime="20201030 18:35:08.912" endtime="20201030 18:35:15.944"></status>
</kw>
<status status="PASS" starttime="20201030 18:35:08.905" endtime="20201030 18:35:15.945"></status>
</kw>
<status status="PASS" starttime="20201030 18:35:08.902" endtime="20201030 18:35:15.945"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 18:35:15.947" endtime="20201030 18:35:15.950"></status>
</kw>
<status status="PASS" starttime="20201030 18:35:08.901" endtime="20201030 18:35:15.951"></status>
</kw>
<kw name="${i} = 1" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:35:15.969" endtime="20201030 18:35:19.979"></status>
</kw>
<msg timestamp="20201030 18:35:19.980" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 18:35:15.966" endtime="20201030 18:35:19.980"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:35:19.985" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 18:35:19.982" endtime="20201030 18:35:19.986"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:35:19.988" endtime="20201030 18:35:19.991"></status>
</kw>
<status status="PASS" starttime="20201030 18:35:15.961" endtime="20201030 18:35:19.992"></status>
</kw>
<status status="PASS" starttime="20201030 18:35:15.955" endtime="20201030 18:35:19.993"></status>
</kw>
<status status="PASS" starttime="20201030 18:35:15.953" endtime="20201030 18:35:19.994"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 18:35:19.995" endtime="20201030 18:35:19.998"></status>
</kw>
<status status="PASS" starttime="20201030 18:35:15.951" endtime="20201030 18:35:19.999"></status>
</kw>
<kw name="${i} = 2" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:35:20.017" endtime="20201030 18:35:24.027"></status>
</kw>
<msg timestamp="20201030 18:35:24.028" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 18:35:20.014" endtime="20201030 18:35:24.028"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:35:24.033" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 18:35:24.030" endtime="20201030 18:35:24.033"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:35:24.035" endtime="20201030 18:35:24.038"></status>
</kw>
<status status="PASS" starttime="20201030 18:35:20.009" endtime="20201030 18:35:24.039"></status>
</kw>
<status status="PASS" starttime="20201030 18:35:20.004" endtime="20201030 18:35:24.040"></status>
</kw>
<status status="PASS" starttime="20201030 18:35:20.001" endtime="20201030 18:35:24.041"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 18:35:24.043" endtime="20201030 18:35:24.046"></status>
</kw>
<status status="PASS" starttime="20201030 18:35:20.000" endtime="20201030 18:35:24.046"></status>
</kw>
<kw name="${i} = 3" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:35:24.065" endtime="20201030 18:35:28.078"></status>
</kw>
<msg timestamp="20201030 18:35:28.079" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 18:35:24.061" endtime="20201030 18:35:28.080"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:35:28.084" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 18:35:28.082" endtime="20201030 18:35:28.085"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:35:28.087" endtime="20201030 18:35:28.090"></status>
</kw>
<status status="PASS" starttime="20201030 18:35:24.056" endtime="20201030 18:35:28.091"></status>
</kw>
<status status="PASS" starttime="20201030 18:35:24.051" endtime="20201030 18:35:28.092"></status>
</kw>
<status status="PASS" starttime="20201030 18:35:24.049" endtime="20201030 18:35:28.092"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 18:35:28.094" endtime="20201030 18:35:28.097"></status>
</kw>
<status status="PASS" starttime="20201030 18:35:24.047" endtime="20201030 18:35:28.098"></status>
</kw>
<kw name="${i} = 4" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:35:28.117" endtime="20201030 18:35:32.127"></status>
</kw>
<msg timestamp="20201030 18:35:32.128" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 18:35:28.113" endtime="20201030 18:35:32.128"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:35:32.133" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 18:35:32.130" endtime="20201030 18:35:32.133"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:35:32.135" endtime="20201030 18:35:32.138"></status>
</kw>
<status status="PASS" starttime="20201030 18:35:28.108" endtime="20201030 18:35:32.139"></status>
</kw>
<status status="PASS" starttime="20201030 18:35:28.103" endtime="20201030 18:35:32.140"></status>
</kw>
<status status="PASS" starttime="20201030 18:35:28.100" endtime="20201030 18:35:32.141"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 18:35:32.143" endtime="20201030 18:35:32.146"></status>
</kw>
<status status="PASS" starttime="20201030 18:35:28.099" endtime="20201030 18:35:32.146"></status>
</kw>
<kw name="${i} = 5" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:35:32.165" endtime="20201030 18:35:36.174"></status>
</kw>
<msg timestamp="20201030 18:35:36.175" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 18:35:32.161" endtime="20201030 18:35:36.176"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:35:36.180" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 18:35:36.177" endtime="20201030 18:35:36.181"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:35:36.182" endtime="20201030 18:35:36.185"></status>
</kw>
<status status="PASS" starttime="20201030 18:35:32.156" endtime="20201030 18:35:36.187"></status>
</kw>
<status status="PASS" starttime="20201030 18:35:32.151" endtime="20201030 18:35:36.188"></status>
</kw>
<status status="PASS" starttime="20201030 18:35:32.149" endtime="20201030 18:35:36.188"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 18:35:36.190" endtime="20201030 18:35:36.193"></status>
</kw>
<status status="PASS" starttime="20201030 18:35:32.147" endtime="20201030 18:35:36.193"></status>
</kw>
<kw name="${i} = 6" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:35:36.212" endtime="20201030 18:35:40.221"></status>
</kw>
<msg timestamp="20201030 18:35:40.222" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 18:35:36.209" endtime="20201030 18:35:40.223"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:35:40.228" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 18:35:40.225" endtime="20201030 18:35:40.228"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:35:40.230" endtime="20201030 18:35:40.233"></status>
</kw>
<status status="PASS" starttime="20201030 18:35:36.203" endtime="20201030 18:35:40.234"></status>
</kw>
<status status="PASS" starttime="20201030 18:35:36.198" endtime="20201030 18:35:40.235"></status>
</kw>
<status status="PASS" starttime="20201030 18:35:36.196" endtime="20201030 18:35:40.236"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 18:35:40.238" endtime="20201030 18:35:40.241"></status>
</kw>
<status status="PASS" starttime="20201030 18:35:36.194" endtime="20201030 18:35:40.241"></status>
</kw>
<kw name="${i} = 7" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:35:40.263" endtime="20201030 18:35:44.272"></status>
</kw>
<msg timestamp="20201030 18:35:44.273" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 18:35:40.259" endtime="20201030 18:35:44.273"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:35:44.278" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 18:35:44.275" endtime="20201030 18:35:44.279"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:35:44.280" endtime="20201030 18:35:44.283"></status>
</kw>
<status status="PASS" starttime="20201030 18:35:40.252" endtime="20201030 18:35:44.284"></status>
</kw>
<status status="PASS" starttime="20201030 18:35:40.246" endtime="20201030 18:35:44.285"></status>
</kw>
<status status="PASS" starttime="20201030 18:35:40.244" endtime="20201030 18:35:44.286"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 18:35:44.288" endtime="20201030 18:35:44.291"></status>
</kw>
<status status="PASS" starttime="20201030 18:35:40.242" endtime="20201030 18:35:44.291"></status>
</kw>
<kw name="${i} = 8" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:35:44.310" endtime="20201030 18:35:48.319"></status>
</kw>
<msg timestamp="20201030 18:35:48.320" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 18:35:44.307" endtime="20201030 18:35:48.321"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:35:48.325" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 18:35:48.322" endtime="20201030 18:35:48.326"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:35:48.327" endtime="20201030 18:35:48.331"></status>
</kw>
<status status="PASS" starttime="20201030 18:35:44.301" endtime="20201030 18:35:48.332"></status>
</kw>
<status status="PASS" starttime="20201030 18:35:44.296" endtime="20201030 18:35:48.333"></status>
</kw>
<status status="PASS" starttime="20201030 18:35:44.294" endtime="20201030 18:35:48.333"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 18:35:48.335" endtime="20201030 18:35:48.338"></status>
</kw>
<status status="PASS" starttime="20201030 18:35:44.292" endtime="20201030 18:35:48.339"></status>
</kw>
<kw name="${i} = 9" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:35:48.357" endtime="20201030 18:35:52.367"></status>
</kw>
<msg timestamp="20201030 18:35:52.368" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 18:35:48.354" endtime="20201030 18:35:52.368"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:35:52.372" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 18:35:52.370" endtime="20201030 18:35:52.373"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:35:52.375" endtime="20201030 18:35:52.378"></status>
</kw>
<status status="PASS" starttime="20201030 18:35:48.348" endtime="20201030 18:35:52.379"></status>
</kw>
<status status="PASS" starttime="20201030 18:35:48.343" endtime="20201030 18:35:52.380"></status>
</kw>
<status status="PASS" starttime="20201030 18:35:48.341" endtime="20201030 18:35:52.381"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 18:35:52.382" endtime="20201030 18:35:52.386"></status>
</kw>
<status status="PASS" starttime="20201030 18:35:48.339" endtime="20201030 18:35:52.387"></status>
</kw>
<kw name="${i} = 10" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:35:52.405" endtime="20201030 18:35:56.415"></status>
</kw>
<msg timestamp="20201030 18:35:56.416" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 18:35:52.402" endtime="20201030 18:35:56.416"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:35:56.421" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 18:35:56.418" endtime="20201030 18:35:56.421"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:35:56.423" endtime="20201030 18:35:56.426"></status>
</kw>
<status status="PASS" starttime="20201030 18:35:52.396" endtime="20201030 18:35:56.427"></status>
</kw>
<status status="PASS" starttime="20201030 18:35:52.392" endtime="20201030 18:35:56.428"></status>
</kw>
<status status="PASS" starttime="20201030 18:35:52.389" endtime="20201030 18:35:56.429"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 18:35:56.431" endtime="20201030 18:35:56.434"></status>
</kw>
<status status="PASS" starttime="20201030 18:35:52.387" endtime="20201030 18:35:56.434"></status>
</kw>
<kw name="${i} = 11" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:35:56.455" endtime="20201030 18:36:00.465"></status>
</kw>
<msg timestamp="20201030 18:36:00.466" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 18:35:56.452" endtime="20201030 18:36:00.466"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:36:00.471" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 18:36:00.468" endtime="20201030 18:36:00.471"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:36:00.473" endtime="20201030 18:36:00.476"></status>
</kw>
<status status="PASS" starttime="20201030 18:35:56.444" endtime="20201030 18:36:00.477"></status>
</kw>
<status status="PASS" starttime="20201030 18:35:56.439" endtime="20201030 18:36:00.478"></status>
</kw>
<status status="PASS" starttime="20201030 18:35:56.437" endtime="20201030 18:36:00.479"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 18:36:00.481" endtime="20201030 18:36:00.484"></status>
</kw>
<status status="PASS" starttime="20201030 18:35:56.435" endtime="20201030 18:36:00.484"></status>
</kw>
<kw name="${i} = 12" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:36:00.503" endtime="20201030 18:36:04.512"></status>
</kw>
<msg timestamp="20201030 18:36:04.513" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 18:36:00.499" endtime="20201030 18:36:04.513"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:36:04.518" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 18:36:04.515" endtime="20201030 18:36:04.518"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:36:04.520" endtime="20201030 18:36:04.524"></status>
</kw>
<status status="PASS" starttime="20201030 18:36:00.494" endtime="20201030 18:36:04.525"></status>
</kw>
<status status="PASS" starttime="20201030 18:36:00.489" endtime="20201030 18:36:04.526"></status>
</kw>
<status status="PASS" starttime="20201030 18:36:00.487" endtime="20201030 18:36:04.527"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 18:36:04.528" endtime="20201030 18:36:04.532"></status>
</kw>
<status status="PASS" starttime="20201030 18:36:00.485" endtime="20201030 18:36:04.532"></status>
</kw>
<kw name="${i} = 13" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:36:04.550" endtime="20201030 18:36:08.560"></status>
</kw>
<msg timestamp="20201030 18:36:08.561" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 18:36:04.547" endtime="20201030 18:36:08.561"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:36:08.566" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 18:36:08.563" endtime="20201030 18:36:08.567"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:36:08.568" endtime="20201030 18:36:08.571"></status>
</kw>
<status status="PASS" starttime="20201030 18:36:04.542" endtime="20201030 18:36:08.573"></status>
</kw>
<status status="PASS" starttime="20201030 18:36:04.537" endtime="20201030 18:36:08.574"></status>
</kw>
<status status="PASS" starttime="20201030 18:36:04.534" endtime="20201030 18:36:08.574"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 18:36:08.576" endtime="20201030 18:36:08.579"></status>
</kw>
<status status="PASS" starttime="20201030 18:36:04.533" endtime="20201030 18:36:08.579"></status>
</kw>
<kw name="${i} = 14" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:36:08.598" endtime="20201030 18:36:12.608"></status>
</kw>
<msg timestamp="20201030 18:36:12.609" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 18:36:08.595" endtime="20201030 18:36:12.609"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:36:12.613" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 18:36:12.611" endtime="20201030 18:36:12.614"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:36:12.616" endtime="20201030 18:36:12.619"></status>
</kw>
<status status="PASS" starttime="20201030 18:36:08.589" endtime="20201030 18:36:12.620"></status>
</kw>
<status status="PASS" starttime="20201030 18:36:08.584" endtime="20201030 18:36:12.621"></status>
</kw>
<status status="PASS" starttime="20201030 18:36:08.582" endtime="20201030 18:36:12.622"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 18:36:12.623" endtime="20201030 18:36:12.627"></status>
</kw>
<status status="PASS" starttime="20201030 18:36:08.580" endtime="20201030 18:36:12.627"></status>
</kw>
<kw name="${i} = 15" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:36:12.648" endtime="20201030 18:36:16.658"></status>
</kw>
<msg timestamp="20201030 18:36:16.658" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 18:36:12.645" endtime="20201030 18:36:16.659"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:36:16.664" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 18:36:16.661" endtime="20201030 18:36:16.665"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:36:16.666" endtime="20201030 18:36:16.670"></status>
</kw>
<status status="PASS" starttime="20201030 18:36:12.639" endtime="20201030 18:36:16.671"></status>
</kw>
<status status="PASS" starttime="20201030 18:36:12.632" endtime="20201030 18:36:16.672"></status>
</kw>
<status status="PASS" starttime="20201030 18:36:12.629" endtime="20201030 18:36:16.672"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 18:36:16.674" endtime="20201030 18:36:16.677"></status>
</kw>
<status status="PASS" starttime="20201030 18:36:12.628" endtime="20201030 18:36:16.678"></status>
</kw>
<status status="PASS" starttime="20201030 18:35:08.899" endtime="20201030 18:36:16.678"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<msg timestamp="20201030 18:36:16.683" level="FAIL">'Timeout' does not contain 'Success'</msg>
<status status="FAIL" starttime="20201030 18:36:16.680" endtime="20201030 18:36:16.684"></status>
</kw>
<status status="FAIL" starttime="20201030 18:35:08.897" endtime="20201030 18:36:16.685"></status>
</kw>
<status status="FAIL" starttime="20201030 18:35:08.893" endtime="20201030 18:36:16.686"></status>
</kw>
<status status="FAIL" starttime="20201030 18:35:08.863" endtime="20201030 18:36:16.687"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="FAIL" starttime="20201030 18:35:08.858" endtime="20201030 18:36:16.688" critical="yes">Setup failed:
'Timeout' does not contain 'Success'</status>
</test>
<test id="s1-s2-t8" name="Measure Overhead Remove Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:36:16.703" endtime="20201030 18:36:16.724"></status>
</kw>
<status status="PASS" starttime="20201030 18:36:16.700" endtime="20201030 18:36:16.726"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:36:16.752" endtime="20201030 18:36:23.767"></status>
</kw>
<msg timestamp="20201030 18:36:23.768" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 18:36:16.749" endtime="20201030 18:36:23.768"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:36:23.773" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 18:36:23.770" endtime="20201030 18:36:23.773"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:36:23.775" endtime="20201030 18:36:23.778"></status>
</kw>
<status status="PASS" starttime="20201030 18:36:16.744" endtime="20201030 18:36:23.779"></status>
</kw>
<status status="PASS" starttime="20201030 18:36:16.739" endtime="20201030 18:36:23.780"></status>
</kw>
<status status="PASS" starttime="20201030 18:36:16.736" endtime="20201030 18:36:23.781"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 18:36:23.783" endtime="20201030 18:36:23.786"></status>
</kw>
<status status="PASS" starttime="20201030 18:36:16.735" endtime="20201030 18:36:23.786"></status>
</kw>
<kw name="${i} = 1" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:36:23.807" endtime="20201030 18:36:27.816"></status>
</kw>
<msg timestamp="20201030 18:36:27.817" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 18:36:23.803" endtime="20201030 18:36:27.818"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:36:27.822" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 18:36:27.820" endtime="20201030 18:36:27.824"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:36:27.825" endtime="20201030 18:36:27.829"></status>
</kw>
<status status="PASS" starttime="20201030 18:36:23.796" endtime="20201030 18:36:27.830"></status>
</kw>
<status status="PASS" starttime="20201030 18:36:23.791" endtime="20201030 18:36:27.831"></status>
</kw>
<status status="PASS" starttime="20201030 18:36:23.789" endtime="20201030 18:36:27.831"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 18:36:27.833" endtime="20201030 18:36:27.836"></status>
</kw>
<status status="PASS" starttime="20201030 18:36:23.787" endtime="20201030 18:36:27.837"></status>
</kw>
<kw name="${i} = 2" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:36:27.855" endtime="20201030 18:36:31.865"></status>
</kw>
<msg timestamp="20201030 18:36:31.866" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 18:36:27.852" endtime="20201030 18:36:31.866"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:36:31.871" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 18:36:31.868" endtime="20201030 18:36:31.871"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:36:31.873" endtime="20201030 18:36:31.876"></status>
</kw>
<status status="PASS" starttime="20201030 18:36:27.847" endtime="20201030 18:36:31.877"></status>
</kw>
<status status="PASS" starttime="20201030 18:36:27.842" endtime="20201030 18:36:31.878"></status>
</kw>
<status status="PASS" starttime="20201030 18:36:27.839" endtime="20201030 18:36:31.879"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 18:36:31.881" endtime="20201030 18:36:31.884"></status>
</kw>
<status status="PASS" starttime="20201030 18:36:27.837" endtime="20201030 18:36:31.884"></status>
</kw>
<kw name="${i} = 3" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:36:31.903" endtime="20201030 18:36:35.912"></status>
</kw>
<msg timestamp="20201030 18:36:35.913" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 18:36:31.900" endtime="20201030 18:36:35.914"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:36:35.918" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 18:36:35.916" endtime="20201030 18:36:35.919"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:36:35.921" endtime="20201030 18:36:35.924"></status>
</kw>
<status status="PASS" starttime="20201030 18:36:31.894" endtime="20201030 18:36:35.925"></status>
</kw>
<status status="PASS" starttime="20201030 18:36:31.889" endtime="20201030 18:36:35.926"></status>
</kw>
<status status="PASS" starttime="20201030 18:36:31.887" endtime="20201030 18:36:35.926"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 18:36:35.928" endtime="20201030 18:36:35.932"></status>
</kw>
<status status="PASS" starttime="20201030 18:36:31.885" endtime="20201030 18:36:35.932"></status>
</kw>
<kw name="${i} = 4" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:36:35.952" endtime="20201030 18:36:39.962"></status>
</kw>
<msg timestamp="20201030 18:36:39.963" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 18:36:35.948" endtime="20201030 18:36:39.964"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:36:39.968" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 18:36:39.965" endtime="20201030 18:36:39.969"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:36:39.971" endtime="20201030 18:36:39.974"></status>
</kw>
<status status="PASS" starttime="20201030 18:36:35.943" endtime="20201030 18:36:39.975"></status>
</kw>
<status status="PASS" starttime="20201030 18:36:35.937" endtime="20201030 18:36:39.976"></status>
</kw>
<status status="PASS" starttime="20201030 18:36:35.935" endtime="20201030 18:36:39.976"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 18:36:39.978" endtime="20201030 18:36:39.981"></status>
</kw>
<status status="PASS" starttime="20201030 18:36:35.933" endtime="20201030 18:36:39.982"></status>
</kw>
<kw name="${i} = 5" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:36:40.003" endtime="20201030 18:36:44.012"></status>
</kw>
<msg timestamp="20201030 18:36:44.013" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 18:36:39.999" endtime="20201030 18:36:44.014"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:36:44.018" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 18:36:44.015" endtime="20201030 18:36:44.019"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:36:44.020" endtime="20201030 18:36:44.024"></status>
</kw>
<status status="PASS" starttime="20201030 18:36:39.994" endtime="20201030 18:36:44.025"></status>
</kw>
<status status="PASS" starttime="20201030 18:36:39.987" endtime="20201030 18:36:44.026"></status>
</kw>
<status status="PASS" starttime="20201030 18:36:39.984" endtime="20201030 18:36:44.026"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 18:36:44.028" endtime="20201030 18:36:44.031"></status>
</kw>
<status status="PASS" starttime="20201030 18:36:39.982" endtime="20201030 18:36:44.032"></status>
</kw>
<kw name="${i} = 6" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:36:44.050" endtime="20201030 18:36:48.060"></status>
</kw>
<msg timestamp="20201030 18:36:48.061" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 18:36:44.047" endtime="20201030 18:36:48.061"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:36:48.065" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 18:36:48.063" endtime="20201030 18:36:48.066"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:36:48.068" endtime="20201030 18:36:48.071"></status>
</kw>
<status status="PASS" starttime="20201030 18:36:44.041" endtime="20201030 18:36:48.072"></status>
</kw>
<status status="PASS" starttime="20201030 18:36:44.037" endtime="20201030 18:36:48.073"></status>
</kw>
<status status="PASS" starttime="20201030 18:36:44.034" endtime="20201030 18:36:48.074"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 18:36:48.075" endtime="20201030 18:36:48.079"></status>
</kw>
<status status="PASS" starttime="20201030 18:36:44.032" endtime="20201030 18:36:48.079"></status>
</kw>
<kw name="${i} = 7" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:36:48.098" endtime="20201030 18:36:52.108"></status>
</kw>
<msg timestamp="20201030 18:36:52.109" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 18:36:48.095" endtime="20201030 18:36:52.109"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:36:52.114" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 18:36:52.111" endtime="20201030 18:36:52.114"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:36:52.116" endtime="20201030 18:36:52.120"></status>
</kw>
<status status="PASS" starttime="20201030 18:36:48.090" endtime="20201030 18:36:52.121"></status>
</kw>
<status status="PASS" starttime="20201030 18:36:48.084" endtime="20201030 18:36:52.122"></status>
</kw>
<status status="PASS" starttime="20201030 18:36:48.081" endtime="20201030 18:36:52.122"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 18:36:52.124" endtime="20201030 18:36:52.127"></status>
</kw>
<status status="PASS" starttime="20201030 18:36:48.080" endtime="20201030 18:36:52.128"></status>
</kw>
<kw name="${i} = 8" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:36:52.146" endtime="20201030 18:36:56.158"></status>
</kw>
<msg timestamp="20201030 18:36:56.159" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 18:36:52.143" endtime="20201030 18:36:56.159"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:36:56.164" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 18:36:56.161" endtime="20201030 18:36:56.164"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:36:56.166" endtime="20201030 18:36:56.169"></status>
</kw>
<status status="PASS" starttime="20201030 18:36:52.138" endtime="20201030 18:36:56.170"></status>
</kw>
<status status="PASS" starttime="20201030 18:36:52.133" endtime="20201030 18:36:56.171"></status>
</kw>
<status status="PASS" starttime="20201030 18:36:52.130" endtime="20201030 18:36:56.172"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 18:36:56.174" endtime="20201030 18:36:56.177"></status>
</kw>
<status status="PASS" starttime="20201030 18:36:52.128" endtime="20201030 18:36:56.177"></status>
</kw>
<kw name="${i} = 9" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:36:56.200" endtime="20201030 18:37:00.209"></status>
</kw>
<msg timestamp="20201030 18:37:00.210" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 18:36:56.196" endtime="20201030 18:37:00.210"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:37:00.215" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 18:37:00.212" endtime="20201030 18:37:00.215"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:37:00.217" endtime="20201030 18:37:00.220"></status>
</kw>
<status status="PASS" starttime="20201030 18:36:56.189" endtime="20201030 18:37:00.221"></status>
</kw>
<status status="PASS" starttime="20201030 18:36:56.182" endtime="20201030 18:37:00.222"></status>
</kw>
<status status="PASS" starttime="20201030 18:36:56.180" endtime="20201030 18:37:00.223"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 18:37:00.225" endtime="20201030 18:37:00.228"></status>
</kw>
<status status="PASS" starttime="20201030 18:36:56.178" endtime="20201030 18:37:00.229"></status>
</kw>
<kw name="${i} = 10" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:37:00.248" endtime="20201030 18:37:04.257"></status>
</kw>
<msg timestamp="20201030 18:37:04.258" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 18:37:00.244" endtime="20201030 18:37:04.259"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:37:04.263" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 18:37:04.261" endtime="20201030 18:37:04.264"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:37:04.265" endtime="20201030 18:37:04.269"></status>
</kw>
<status status="PASS" starttime="20201030 18:37:00.239" endtime="20201030 18:37:04.270"></status>
</kw>
<status status="PASS" starttime="20201030 18:37:00.234" endtime="20201030 18:37:04.271"></status>
</kw>
<status status="PASS" starttime="20201030 18:37:00.232" endtime="20201030 18:37:04.271"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 18:37:04.273" endtime="20201030 18:37:04.276"></status>
</kw>
<status status="PASS" starttime="20201030 18:37:00.230" endtime="20201030 18:37:04.277"></status>
</kw>
<kw name="${i} = 11" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:37:04.295" endtime="20201030 18:37:08.305"></status>
</kw>
<msg timestamp="20201030 18:37:08.306" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 18:37:04.292" endtime="20201030 18:37:08.306"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:37:08.311" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 18:37:08.308" endtime="20201030 18:37:08.311"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:37:08.313" endtime="20201030 18:37:08.316"></status>
</kw>
<status status="PASS" starttime="20201030 18:37:04.287" endtime="20201030 18:37:08.317"></status>
</kw>
<status status="PASS" starttime="20201030 18:37:04.282" endtime="20201030 18:37:08.318"></status>
</kw>
<status status="PASS" starttime="20201030 18:37:04.279" endtime="20201030 18:37:08.319"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 18:37:08.321" endtime="20201030 18:37:08.324"></status>
</kw>
<status status="PASS" starttime="20201030 18:37:04.277" endtime="20201030 18:37:08.324"></status>
</kw>
<kw name="${i} = 12" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:37:08.345" endtime="20201030 18:37:12.355"></status>
</kw>
<msg timestamp="20201030 18:37:12.356" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 18:37:08.342" endtime="20201030 18:37:12.356"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:37:12.361" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 18:37:12.358" endtime="20201030 18:37:12.362"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:37:12.363" endtime="20201030 18:37:12.367"></status>
</kw>
<status status="PASS" starttime="20201030 18:37:08.334" endtime="20201030 18:37:12.369"></status>
</kw>
<status status="PASS" starttime="20201030 18:37:08.329" endtime="20201030 18:37:12.370"></status>
</kw>
<status status="PASS" starttime="20201030 18:37:08.327" endtime="20201030 18:37:12.370"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 18:37:12.372" endtime="20201030 18:37:12.375"></status>
</kw>
<status status="PASS" starttime="20201030 18:37:08.325" endtime="20201030 18:37:12.376"></status>
</kw>
<kw name="${i} = 13" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:37:12.394" endtime="20201030 18:37:16.401"></status>
</kw>
<msg timestamp="20201030 18:37:16.402" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 18:37:12.391" endtime="20201030 18:37:16.403"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:37:16.407" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 18:37:16.404" endtime="20201030 18:37:16.408"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:37:16.409" endtime="20201030 18:37:16.413"></status>
</kw>
<status status="PASS" starttime="20201030 18:37:12.386" endtime="20201030 18:37:16.414"></status>
</kw>
<status status="PASS" starttime="20201030 18:37:12.381" endtime="20201030 18:37:16.415"></status>
</kw>
<status status="PASS" starttime="20201030 18:37:12.378" endtime="20201030 18:37:16.415"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 18:37:16.417" endtime="20201030 18:37:16.421"></status>
</kw>
<status status="PASS" starttime="20201030 18:37:12.376" endtime="20201030 18:37:16.421"></status>
</kw>
<kw name="${i} = 14" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:37:16.439" endtime="20201030 18:37:20.449"></status>
</kw>
<msg timestamp="20201030 18:37:20.450" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 18:37:16.436" endtime="20201030 18:37:20.450"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:37:20.455" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 18:37:20.452" endtime="20201030 18:37:20.455"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:37:20.457" endtime="20201030 18:37:20.460"></status>
</kw>
<status status="PASS" starttime="20201030 18:37:16.431" endtime="20201030 18:37:20.461"></status>
</kw>
<status status="PASS" starttime="20201030 18:37:16.426" endtime="20201030 18:37:20.462"></status>
</kw>
<status status="PASS" starttime="20201030 18:37:16.423" endtime="20201030 18:37:20.463"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 18:37:20.465" endtime="20201030 18:37:20.468"></status>
</kw>
<status status="PASS" starttime="20201030 18:37:16.422" endtime="20201030 18:37:20.468"></status>
</kw>
<kw name="${i} = 15" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:37:20.487" endtime="20201030 18:37:24.497"></status>
</kw>
<msg timestamp="20201030 18:37:24.498" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 18:37:20.484" endtime="20201030 18:37:24.498"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:37:24.504" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 18:37:24.500" endtime="20201030 18:37:24.505"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:37:24.506" endtime="20201030 18:37:24.510"></status>
</kw>
<status status="PASS" starttime="20201030 18:37:20.478" endtime="20201030 18:37:24.511"></status>
</kw>
<status status="PASS" starttime="20201030 18:37:20.473" endtime="20201030 18:37:24.512"></status>
</kw>
<status status="PASS" starttime="20201030 18:37:20.471" endtime="20201030 18:37:24.512"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 18:37:24.514" endtime="20201030 18:37:24.518"></status>
</kw>
<status status="PASS" starttime="20201030 18:37:20.469" endtime="20201030 18:37:24.518"></status>
</kw>
<status status="PASS" starttime="20201030 18:36:16.733" endtime="20201030 18:37:24.519"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<msg timestamp="20201030 18:37:24.524" level="FAIL">'Timeout' does not contain 'Success'</msg>
<status status="FAIL" starttime="20201030 18:37:24.520" endtime="20201030 18:37:24.525"></status>
</kw>
<status status="FAIL" starttime="20201030 18:36:16.730" endtime="20201030 18:37:24.526"></status>
</kw>
<status status="FAIL" starttime="20201030 18:36:16.727" endtime="20201030 18:37:24.527"></status>
</kw>
<status status="FAIL" starttime="20201030 18:36:16.697" endtime="20201030 18:37:24.528"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="FAIL" starttime="20201030 18:36:16.692" endtime="20201030 18:37:24.529" critical="yes">Setup failed:
'Timeout' does not contain 'Success'</status>
</test>
<test id="s1-s2-t9" name="Measure Add Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:37:24.548" endtime="20201030 18:37:24.570"></status>
</kw>
<status status="PASS" starttime="20201030 18:37:24.545" endtime="20201030 18:37:24.571"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:37:24.596" endtime="20201030 18:37:31.608"></status>
</kw>
<msg timestamp="20201030 18:37:31.609" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 18:37:24.594" endtime="20201030 18:37:31.609"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:37:31.614" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 18:37:31.611" endtime="20201030 18:37:31.615"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:37:31.616" endtime="20201030 18:37:31.619"></status>
</kw>
<status status="PASS" starttime="20201030 18:37:24.590" endtime="20201030 18:37:31.621"></status>
</kw>
<status status="PASS" starttime="20201030 18:37:24.585" endtime="20201030 18:37:31.622"></status>
</kw>
<status status="PASS" starttime="20201030 18:37:24.582" endtime="20201030 18:37:31.622"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 18:37:31.624" endtime="20201030 18:37:31.627"></status>
</kw>
<status status="PASS" starttime="20201030 18:37:24.580" endtime="20201030 18:37:31.628"></status>
</kw>
<kw name="${i} = 1" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:37:31.660" endtime="20201030 18:37:35.676"></status>
</kw>
<msg timestamp="20201030 18:37:35.677" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 18:37:31.653" endtime="20201030 18:37:35.677"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:37:35.682" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 18:37:35.679" endtime="20201030 18:37:35.683"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:37:35.685" endtime="20201030 18:37:35.689"></status>
</kw>
<status status="PASS" starttime="20201030 18:37:31.639" endtime="20201030 18:37:35.690"></status>
</kw>
<status status="PASS" starttime="20201030 18:37:31.633" endtime="20201030 18:37:35.691"></status>
</kw>
<status status="PASS" starttime="20201030 18:37:31.630" endtime="20201030 18:37:35.692"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 18:37:35.694" endtime="20201030 18:37:35.697"></status>
</kw>
<status status="PASS" starttime="20201030 18:37:31.628" endtime="20201030 18:37:35.698"></status>
</kw>
<kw name="${i} = 2" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:37:35.719" endtime="20201030 18:37:39.728"></status>
</kw>
<msg timestamp="20201030 18:37:39.729" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 18:37:35.716" endtime="20201030 18:37:39.730"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:37:39.735" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 18:37:39.732" endtime="20201030 18:37:39.739"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:37:39.746" endtime="20201030 18:37:39.761"></status>
</kw>
<status status="PASS" starttime="20201030 18:37:35.708" endtime="20201030 18:37:39.767"></status>
</kw>
<status status="PASS" starttime="20201030 18:37:35.703" endtime="20201030 18:37:39.773"></status>
</kw>
<status status="PASS" starttime="20201030 18:37:35.700" endtime="20201030 18:37:39.776"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 18:37:39.780" endtime="20201030 18:37:39.788"></status>
</kw>
<status status="PASS" starttime="20201030 18:37:35.698" endtime="20201030 18:37:39.789"></status>
</kw>
<kw name="${i} = 3" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:37:39.802" endtime="20201030 18:37:43.811"></status>
</kw>
<msg timestamp="20201030 18:37:43.812" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 18:37:39.800" endtime="20201030 18:37:43.812"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:37:43.817" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 18:37:43.814" endtime="20201030 18:37:43.818"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:37:43.819" endtime="20201030 18:37:43.823"></status>
</kw>
<status status="PASS" starttime="20201030 18:37:39.797" endtime="20201030 18:37:43.824"></status>
</kw>
<status status="PASS" starttime="20201030 18:37:39.794" endtime="20201030 18:37:43.825"></status>
</kw>
<status status="PASS" starttime="20201030 18:37:39.792" endtime="20201030 18:37:43.825"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 18:37:43.827" endtime="20201030 18:37:43.831"></status>
</kw>
<status status="PASS" starttime="20201030 18:37:39.791" endtime="20201030 18:37:43.831"></status>
</kw>
<kw name="${i} = 4" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:37:43.851" endtime="20201030 18:37:47.861"></status>
</kw>
<msg timestamp="20201030 18:37:47.862" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 18:37:43.848" endtime="20201030 18:37:47.863"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:37:47.868" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 18:37:47.865" endtime="20201030 18:37:47.869"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:37:47.870" endtime="20201030 18:37:47.874"></status>
</kw>
<status status="PASS" starttime="20201030 18:37:43.842" endtime="20201030 18:37:47.875"></status>
</kw>
<status status="PASS" starttime="20201030 18:37:43.837" endtime="20201030 18:37:47.876"></status>
</kw>
<status status="PASS" starttime="20201030 18:37:43.834" endtime="20201030 18:37:47.877"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 18:37:47.879" endtime="20201030 18:37:47.882"></status>
</kw>
<status status="PASS" starttime="20201030 18:37:43.832" endtime="20201030 18:37:47.883"></status>
</kw>
<kw name="${i} = 5" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:37:47.902" endtime="20201030 18:37:51.912"></status>
</kw>
<msg timestamp="20201030 18:37:51.913" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 18:37:47.899" endtime="20201030 18:37:51.914"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:37:51.919" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 18:37:51.916" endtime="20201030 18:37:51.919"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:37:51.921" endtime="20201030 18:37:51.924"></status>
</kw>
<status status="PASS" starttime="20201030 18:37:47.893" endtime="20201030 18:37:51.925"></status>
</kw>
<status status="PASS" starttime="20201030 18:37:47.888" endtime="20201030 18:37:51.927"></status>
</kw>
<status status="PASS" starttime="20201030 18:37:47.885" endtime="20201030 18:37:51.927"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 18:37:51.929" endtime="20201030 18:37:51.932"></status>
</kw>
<status status="PASS" starttime="20201030 18:37:47.883" endtime="20201030 18:37:51.933"></status>
</kw>
<kw name="${i} = 6" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:37:51.955" endtime="20201030 18:37:55.965"></status>
</kw>
<msg timestamp="20201030 18:37:55.966" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 18:37:51.952" endtime="20201030 18:37:55.967"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:37:55.971" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 18:37:55.968" endtime="20201030 18:37:55.972"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:37:55.974" endtime="20201030 18:37:55.977"></status>
</kw>
<status status="PASS" starttime="20201030 18:37:51.946" endtime="20201030 18:37:55.978"></status>
</kw>
<status status="PASS" starttime="20201030 18:37:51.938" endtime="20201030 18:37:55.979"></status>
</kw>
<status status="PASS" starttime="20201030 18:37:51.935" endtime="20201030 18:37:55.980"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 18:37:55.982" endtime="20201030 18:37:55.985"></status>
</kw>
<status status="PASS" starttime="20201030 18:37:51.934" endtime="20201030 18:37:55.986"></status>
</kw>
<kw name="${i} = 7" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:37:56.007" endtime="20201030 18:38:00.017"></status>
</kw>
<msg timestamp="20201030 18:38:00.018" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 18:37:56.003" endtime="20201030 18:38:00.018"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:38:00.023" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 18:38:00.020" endtime="20201030 18:38:00.023"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:00.025" endtime="20201030 18:38:00.029"></status>
</kw>
<status status="PASS" starttime="20201030 18:37:55.996" endtime="20201030 18:38:00.030"></status>
</kw>
<status status="PASS" starttime="20201030 18:37:55.991" endtime="20201030 18:38:00.031"></status>
</kw>
<status status="PASS" starttime="20201030 18:37:55.988" endtime="20201030 18:38:00.031"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:00.033" endtime="20201030 18:38:00.037"></status>
</kw>
<status status="PASS" starttime="20201030 18:37:55.986" endtime="20201030 18:38:00.037"></status>
</kw>
<kw name="${i} = 8" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:00.057" endtime="20201030 18:38:04.067"></status>
</kw>
<msg timestamp="20201030 18:38:04.068" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 18:38:00.054" endtime="20201030 18:38:04.068"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:38:04.073" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 18:38:04.070" endtime="20201030 18:38:04.074"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:04.076" endtime="20201030 18:38:04.079"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:00.048" endtime="20201030 18:38:04.080"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:00.043" endtime="20201030 18:38:04.081"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:00.040" endtime="20201030 18:38:04.082"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:04.084" endtime="20201030 18:38:04.087"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:00.038" endtime="20201030 18:38:04.088"></status>
</kw>
<kw name="${i} = 9" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:04.108" endtime="20201030 18:38:08.117"></status>
</kw>
<msg timestamp="20201030 18:38:08.118" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 18:38:04.104" endtime="20201030 18:38:08.119"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:38:08.124" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 18:38:08.121" endtime="20201030 18:38:08.124"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:08.126" endtime="20201030 18:38:08.132"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:04.098" endtime="20201030 18:38:08.133"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:04.093" endtime="20201030 18:38:08.134"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:04.090" endtime="20201030 18:38:08.135"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:08.137" endtime="20201030 18:38:08.140"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:04.089" endtime="20201030 18:38:08.140"></status>
</kw>
<kw name="${i} = 10" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:08.161" endtime="20201030 18:38:12.171"></status>
</kw>
<msg timestamp="20201030 18:38:12.172" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 18:38:08.158" endtime="20201030 18:38:12.172"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:38:12.177" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 18:38:12.174" endtime="20201030 18:38:12.178"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:12.180" endtime="20201030 18:38:12.183"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:08.152" endtime="20201030 18:38:12.184"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:08.147" endtime="20201030 18:38:12.185"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:08.143" endtime="20201030 18:38:12.186"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:12.188" endtime="20201030 18:38:12.191"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:08.141" endtime="20201030 18:38:12.192"></status>
</kw>
<kw name="${i} = 11" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:12.212" endtime="20201030 18:38:16.222"></status>
</kw>
<msg timestamp="20201030 18:38:16.223" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 18:38:12.208" endtime="20201030 18:38:16.223"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:38:16.228" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 18:38:16.225" endtime="20201030 18:38:16.229"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:16.230" endtime="20201030 18:38:16.234"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:12.203" endtime="20201030 18:38:16.235"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:12.197" endtime="20201030 18:38:16.236"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:12.195" endtime="20201030 18:38:16.237"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:16.239" endtime="20201030 18:38:16.242"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:12.193" endtime="20201030 18:38:16.243"></status>
</kw>
<kw name="${i} = 12" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:16.262" endtime="20201030 18:38:20.272"></status>
</kw>
<msg timestamp="20201030 18:38:20.273" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 18:38:16.259" endtime="20201030 18:38:20.274"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:38:20.278" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 18:38:20.275" endtime="20201030 18:38:20.279"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:20.281" endtime="20201030 18:38:20.284"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:16.253" endtime="20201030 18:38:20.285"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:16.248" endtime="20201030 18:38:20.286"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:16.245" endtime="20201030 18:38:20.288"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:20.290" endtime="20201030 18:38:20.293"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:16.243" endtime="20201030 18:38:20.294"></status>
</kw>
<kw name="${i} = 13" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:20.316" endtime="20201030 18:38:24.326"></status>
</kw>
<msg timestamp="20201030 18:38:24.327" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 18:38:20.312" endtime="20201030 18:38:24.327"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:38:24.332" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 18:38:24.329" endtime="20201030 18:38:24.333"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:24.334" endtime="20201030 18:38:24.338"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:20.304" endtime="20201030 18:38:24.339"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:20.299" endtime="20201030 18:38:24.340"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:20.296" endtime="20201030 18:38:24.341"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:24.343" endtime="20201030 18:38:24.346"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:20.294" endtime="20201030 18:38:24.346"></status>
</kw>
<kw name="${i} = 14" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:24.366" endtime="20201030 18:38:28.376"></status>
</kw>
<msg timestamp="20201030 18:38:28.377" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 18:38:24.363" endtime="20201030 18:38:28.378"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:38:28.382" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 18:38:28.380" endtime="20201030 18:38:28.383"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:28.385" endtime="20201030 18:38:28.388"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:24.357" endtime="20201030 18:38:28.390"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:24.352" endtime="20201030 18:38:28.391"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:24.349" endtime="20201030 18:38:28.391"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:28.393" endtime="20201030 18:38:28.397"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:24.347" endtime="20201030 18:38:28.397"></status>
</kw>
<kw name="${i} = 15" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:28.418" endtime="20201030 18:38:32.428"></status>
</kw>
<msg timestamp="20201030 18:38:32.429" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 18:38:28.415" endtime="20201030 18:38:32.430"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:38:32.435" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 18:38:32.432" endtime="20201030 18:38:32.436"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:32.438" endtime="20201030 18:38:32.441"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:28.408" endtime="20201030 18:38:32.443"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:28.403" endtime="20201030 18:38:32.444"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:28.400" endtime="20201030 18:38:32.444"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:32.446" endtime="20201030 18:38:32.450"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:28.398" endtime="20201030 18:38:32.450"></status>
</kw>
<status status="PASS" starttime="20201030 18:37:24.579" endtime="20201030 18:38:32.450"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<msg timestamp="20201030 18:38:32.456" level="FAIL">'Timeout' does not contain 'Success'</msg>
<status status="FAIL" starttime="20201030 18:38:32.452" endtime="20201030 18:38:32.457"></status>
</kw>
<status status="FAIL" starttime="20201030 18:37:24.576" endtime="20201030 18:38:32.458"></status>
</kw>
<status status="FAIL" starttime="20201030 18:37:24.573" endtime="20201030 18:38:32.460"></status>
</kw>
<status status="FAIL" starttime="20201030 18:37:24.543" endtime="20201030 18:38:32.460"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:38:32.469" endtime="20201030 18:38:32.491"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:32.466" endtime="20201030 18:38:32.493"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:32.463" endtime="20201030 18:38:32.493"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="FAIL" starttime="20201030 18:37:24.533" endtime="20201030 18:38:32.494" critical="yes">Setup failed:
'Timeout' does not contain 'Success'</status>
</test>
<status status="FAIL" starttime="20201030 18:32:13.573" endtime="20201030 18:38:32.519"></status>
</suite>
<suite id="s1-s3" name="Sleep Accuracy" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/02__sleep_accuracy.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 18:38:32.630" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 18:38:32.638" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 18:38:33.734" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 18:38:32.628" endtime="20201030 18:38:33.735"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 18:38:36.738" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20201030 18:38:33.736" endtime="20201030 18:38:36.739"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:32.627" endtime="20201030 18:38:36.741"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:38:36.745" endtime="20201030 18:38:37.001"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:36.742" endtime="20201030 18:38:37.001"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:37.014" endtime="20201030 18:38:40.035"></status>
</kw>
<msg timestamp="20201030 18:38:40.036" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:38:37.012" endtime="20201030 18:38:40.037"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:38:40.042" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:38:40.039" endtime="20201030 18:38:40.042"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:38:40.048" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:38:40.044" endtime="20201030 18:38:40.049"></status>
</kw>
<status status="FAIL" starttime="20201030 18:38:37.010" endtime="20201030 18:38:40.050"></status>
</kw>
<status status="FAIL" starttime="20201030 18:38:37.008" endtime="20201030 18:38:40.051"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:37.006" endtime="20201030 18:38:40.052"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:38:40.060" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:38:40.058" endtime="20201030 18:38:40.061"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:40.054" endtime="20201030 18:38:40.062"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:37.005" endtime="20201030 18:38:40.062"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:37.005" endtime="20201030 18:38:40.062"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:40.064" endtime="20201030 18:38:40.067"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:37.004" endtime="20201030 18:38:40.068"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:40.070" endtime="20201030 18:38:40.073"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:37.002" endtime="20201030 18:38:40.074"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:32.626" endtime="20201030 18:38:40.075"></status>
</kw>
<test id="s1-s3-t1" name="Measure TIMER_SET Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:38:40.087" endtime="20201030 18:38:40.108"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:40.084" endtime="20201030 18:38:40.110"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:40.146" endtime="20201030 18:38:43.168"></status>
</kw>
<msg timestamp="20201030 18:38:43.169" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:38:40.141" endtime="20201030 18:38:43.170"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:38:43.174" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:38:43.171" endtime="20201030 18:38:43.175"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:38:43.180" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:38:43.177" endtime="20201030 18:38:43.181"></status>
</kw>
<status status="FAIL" starttime="20201030 18:38:40.130" endtime="20201030 18:38:43.182"></status>
</kw>
<status status="FAIL" starttime="20201030 18:38:40.125" endtime="20201030 18:38:43.183"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:40.122" endtime="20201030 18:38:43.184"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:38:43.192" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:38:43.191" endtime="20201030 18:38:43.193"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:43.186" endtime="20201030 18:38:43.193"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:40.120" endtime="20201030 18:38:43.194"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:40.117" endtime="20201030 18:38:43.194"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:43.196" endtime="20201030 18:38:43.199"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:40.114" endtime="20201030 18:38:43.200"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:40.111" endtime="20201030 18:38:43.201"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:40.081" endtime="20201030 18:38:43.201"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:43.221" endtime="20201030 18:38:43.239"></status>
</kw>
<msg timestamp="20201030 18:38:43.240" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:38:43.218" endtime="20201030 18:38:43.240"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:38:43.245" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:38:43.242" endtime="20201030 18:38:43.246"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:43.248" endtime="20201030 18:38:43.251"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:43.212" endtime="20201030 18:38:43.252"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:43.208" endtime="20201030 18:38:43.252"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:43.258" endtime="20201030 18:38:43.569"></status>
</kw>
<msg timestamp="20201030 18:38:43.572" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.12537625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.125390569, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:38:43.257" endtime="20201030 18:38:43.572"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:38:43.580" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.12537625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.125390569, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:38:43.573" endtime="20201030 18:38:43.580"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:43.581" endtime="20201030 18:38:43.583"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:43.254" endtime="20201030 18:38:43.583"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:43.253" endtime="20201030 18:38:43.584"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:38:43.588" level="INFO">${RESULT} = [{'diff': 1.431899999992936e-05}, {'diff': 1.441599999996157e-05}, {'diff': 1.4860999999921631e-05}, {'diff': 1.4804999999729063e-05}, {'diff': 1.4179999999974768e-05}, {'diff': 1.4583000000012447e-05...</msg>
<status status="PASS" starttime="20201030 18:38:43.585" endtime="20201030 18:38:43.588"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:38:43.592" level="INFO">${ACCURACY} = {'diff': [1.431899999992936e-05, 1.441599999996157e-05, 1.4860999999921631e-05, 1.4804999999729063e-05, 1.4179999999974768e-05, 1.4583000000012447e-05, 1.481899999999925e-05, 1.4624999999934829e-05, 1...</msg>
<status status="PASS" starttime="20201030 18:38:43.589" endtime="20201030 18:38:43.592"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:38:43.597" level="INFO">NAME: accuracy-TIMER_SET-1-philip</msg>
<status status="PASS" starttime="20201030 18:38:43.595" endtime="20201030 18:38:43.597"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:38:43.599" level="INFO">VALUE: [1.431899999992936e-05, 1.441599999996157e-05, 1.4860999999921631e-05, 1.4804999999729063e-05, 1.4179999999974768e-05, 1.4583000000012447e-05, 1.481899999999925e-05, 1.4624999999934829e-05, 1.4278000000089719e-05, 1.4638999999760927e-05, 1.4096999999768656e-05, 1.4708000000140942e-05, 1.3943999999987966e-05, 1.456900000018635e-05, 1.4944000000127744e-05, 1.472199999996704e-05, 1.4138999999691038e-05, 1.4096999999768656e-05, 1.4527999999902619e-05, 1.4889000000017916e-05, 1.4625000000378918e-05, 1.4014000000006632e-05, 1.4292000000359906e-05, 1.4735999999793137e-05, 1.4014000000006632e-05, 1.4944999999766395e-05, 1.4236000000167337e-05, 1.4736000000237226e-05, 1.4639000000205016e-05, 1.4612000000191472e-05, 1.4528000000346708e-05, 1.4945000000210484e-05, 1.491699999967011e-05, 1.4306000000186003e-05, 1.3971999999640161e-05, 1.4541999999728716e-05, 1.4833999999908087e-05, 1.4305999999741914e-05, 1.3972999999722902e-05, 1.4777999999715519e-05, 1.4487000000062977e-05, 1.387500000005204e-05, 1.4290999999833076e-05, 1.4791999999985705e-05, 1.4763999999889421e-05, 1.4055000000290363e-05, 1.4014000000006632e-05, 1.4014000000006632e-05, 1.4736000000237226e-05, 1.4583000000012447e-05]</msg>
<status status="PASS" starttime="20201030 18:38:43.598" endtime="20201030 18:38:43.599"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:43.593" endtime="20201030 18:38:43.600"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:38:43.603" endtime="20201030 18:38:43.623"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:43.602" endtime="20201030 18:38:43.623"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:43.601" endtime="20201030 18:38:43.624"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:43.204" endtime="20201030 18:38:43.624"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:43.203" endtime="20201030 18:38:43.624"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:43.637" endtime="20201030 18:38:43.652"></status>
</kw>
<msg timestamp="20201030 18:38:43.653" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:38:43.633" endtime="20201030 18:38:43.653"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:38:43.656" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:38:43.654" endtime="20201030 18:38:43.656"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:43.657" endtime="20201030 18:38:43.660"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:43.629" endtime="20201030 18:38:43.660"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:43.627" endtime="20201030 18:38:43.661"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:43.667" endtime="20201030 18:38:43.953"></status>
</kw>
<msg timestamp="20201030 18:38:43.957" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023898903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023913819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:38:43.666" endtime="20201030 18:38:43.957"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:38:43.975" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023898903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023913819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:38:43.959" endtime="20201030 18:38:43.976"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:43.978" endtime="20201030 18:38:43.981"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:43.663" endtime="20201030 18:38:43.982"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:43.661" endtime="20201030 18:38:43.983"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:38:43.991" level="INFO">${RESULT} = [{'diff': 1.4916000000000235e-05}, {'diff': 1.4527999999999763e-05}, {'diff': 1.402699999999979e-05}, {'diff': 1.4305000000002649e-05}, {'diff': 1.4347000000001359e-05}, {'diff': 1.4652000000000415e-0...</msg>
<status status="PASS" starttime="20201030 18:38:43.985" endtime="20201030 18:38:43.992"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:38:44.000" level="INFO">${ACCURACY} = {'diff': [1.4916000000000235e-05, 1.4527999999999763e-05, 1.402699999999979e-05, 1.4305000000002649e-05, 1.4347000000001359e-05, 1.4652000000000415e-05, 1.4291999999999083e-05, 1.4737000000000777e-05,...</msg>
<status status="PASS" starttime="20201030 18:38:43.993" endtime="20201030 18:38:44.001"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:38:44.011" level="INFO">NAME: accuracy-TIMER_SET-2-philip</msg>
<status status="PASS" starttime="20201030 18:38:44.008" endtime="20201030 18:38:44.012"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:38:44.017" level="INFO">VALUE: [1.4916000000000235e-05, 1.4527999999999763e-05, 1.402699999999979e-05, 1.4305000000002649e-05, 1.4347000000001359e-05, 1.4652000000000415e-05, 1.4291999999999083e-05, 1.4737000000000777e-05, 1.4110999999997209e-05, 1.4194000000002094e-05, 1.4693999999999124e-05, 1.477699999999707e-05, 1.4180000000002524e-05, 1.452700000000029e-05, 1.4013999999999693e-05, 1.4277999999999513e-05, 1.4721999999998264e-05, 1.4527999999999763e-05, 1.4069000000001969e-05, 1.4611000000001179e-05, 1.4221999999997764e-05, 1.4361000000000929e-05, 1.4125000000000248e-05, 1.4138999999999818e-05, 1.433299999999832e-05, 1.4568999999999e-05, 1.4527999999999763e-05, 1.4291999999999083e-05, 1.4042000000002303e-05, 1.4667000000002928e-05, 1.4125000000000248e-05, 1.4277999999999513e-05, 1.4097000000001109e-05, 1.4221999999997764e-05, 1.4458999999997918e-05, 1.4263999999999943e-05, 1.3971999999997514e-05, 1.4680999999999028e-05, 1.461099999999771e-05, 1.4735999999997834e-05, 1.4874999999997529e-05, 1.4903000000000138e-05, 1.4055999999998403e-05, 1.4763999999996974e-05, 1.3959000000000887e-05, 1.4514000000000193e-05, 1.3945000000001317e-05, 1.4735999999997834e-05, 1.3986000000000554e-05, 1.4874999999997529e-05]</msg>
<status status="PASS" starttime="20201030 18:38:44.014" endtime="20201030 18:38:44.018"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:44.002" endtime="20201030 18:38:44.019"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:38:44.026" endtime="20201030 18:38:44.048"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:44.023" endtime="20201030 18:38:44.049"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:44.021" endtime="20201030 18:38:44.050"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:43.625" endtime="20201030 18:38:44.050"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:43.624" endtime="20201030 18:38:44.051"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:44.064" endtime="20201030 18:38:44.078"></status>
</kw>
<msg timestamp="20201030 18:38:44.079" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:38:44.062" endtime="20201030 18:38:44.079"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:38:44.081" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:38:44.080" endtime="20201030 18:38:44.082"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:44.082" endtime="20201030 18:38:44.084"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:44.060" endtime="20201030 18:38:44.084"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:44.057" endtime="20201030 18:38:44.085"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:44.091" endtime="20201030 18:38:44.377"></status>
</kw>
<msg timestamp="20201030 18:38:44.380" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027649083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027663861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:38:44.090" endtime="20201030 18:38:44.380"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:38:44.388" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027649083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027663861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:38:44.381" endtime="20201030 18:38:44.388"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:44.389" endtime="20201030 18:38:44.391"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:44.087" endtime="20201030 18:38:44.391"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:44.085" endtime="20201030 18:38:44.392"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:38:44.396" level="INFO">${RESULT} = [{'diff': 1.4778000000000013e-05}, {'diff': 1.486099999999796e-05}, {'diff': 1.480499999999968e-05}, {'diff': 1.459699999999814e-05}, {'diff': 1.3986000000000554e-05}, {'diff': 1.4263999999999943e-05}...</msg>
<status status="PASS" starttime="20201030 18:38:44.392" endtime="20201030 18:38:44.396"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:38:44.402" level="INFO">${ACCURACY} = {'diff': [1.4778000000000013e-05, 1.486099999999796e-05, 1.480499999999968e-05, 1.459699999999814e-05, 1.3986000000000554e-05, 1.4263999999999943e-05, 1.434699999999789e-05, 1.433299999999832e-05, 1.4...</msg>
<status status="PASS" starttime="20201030 18:38:44.397" endtime="20201030 18:38:44.402"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:38:44.406" level="INFO">NAME: accuracy-TIMER_SET-3-philip</msg>
<status status="PASS" starttime="20201030 18:38:44.405" endtime="20201030 18:38:44.406"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:38:44.409" level="INFO">VALUE: [1.4778000000000013e-05, 1.486099999999796e-05, 1.480499999999968e-05, 1.459699999999814e-05, 1.3986000000000554e-05, 1.4263999999999943e-05, 1.434699999999789e-05, 1.433299999999832e-05, 1.4473000000000957e-05, 1.4541999999999333e-05, 1.4736000000001304e-05, 1.4721999999998264e-05, 1.4055999999998403e-05, 1.4708999999998168e-05, 1.4637999999997375e-05, 1.4389000000000068e-05, 1.4652999999999888e-05, 1.4694999999998598e-05, 1.4013999999999693e-05, 1.4639000000000318e-05, 1.4458999999997918e-05, 1.4819999999998723e-05, 1.4429999999999304e-05, 1.4527999999999763e-05, 1.4084000000001012e-05, 1.4791999999999583e-05, 1.4375000000000498e-05, 1.4861000000001429e-05, 1.3986000000000554e-05, 1.4097000000001109e-05, 1.3985999999997084e-05, 1.3943999999998374e-05, 1.4097000000001109e-05, 1.4263999999999943e-05, 1.4361000000000929e-05, 1.427700000000004e-05, 1.404099999999936e-05, 1.4639000000000318e-05, 1.4347000000001359e-05, 1.4778000000000013e-05, 1.405499999999893e-05, 1.4013999999999693e-05, 1.4708999999998168e-05, 1.4027999999999263e-05, 1.4513999999996724e-05, 1.4569000000002469e-05, 1.4278000000002983e-05, 1.4125000000000248e-05, 1.4679999999999555e-05, 1.4833000000002289e-05]</msg>
<status status="PASS" starttime="20201030 18:38:44.407" endtime="20201030 18:38:44.409"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:44.402" endtime="20201030 18:38:44.409"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:38:44.413" endtime="20201030 18:38:44.433"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:44.411" endtime="20201030 18:38:44.433"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:44.410" endtime="20201030 18:38:44.434"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:44.053" endtime="20201030 18:38:44.434"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:44.051" endtime="20201030 18:38:44.434"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:44.443" endtime="20201030 18:38:44.458"></status>
</kw>
<msg timestamp="20201030 18:38:44.458" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:38:44.441" endtime="20201030 18:38:44.458"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:38:44.461" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:38:44.459" endtime="20201030 18:38:44.461"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:44.462" endtime="20201030 18:38:44.463"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:44.439" endtime="20201030 18:38:44.464"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:44.437" endtime="20201030 18:38:44.464"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:44.471" endtime="20201030 18:38:44.757"></status>
</kw>
<msg timestamp="20201030 18:38:44.761" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019422458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019436639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:38:44.469" endtime="20201030 18:38:44.761"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:38:44.771" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019422458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019436639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:38:44.762" endtime="20201030 18:38:44.772"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:44.774" endtime="20201030 18:38:44.777"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:44.467" endtime="20201030 18:38:44.778"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:44.465" endtime="20201030 18:38:44.779"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:38:44.788" level="INFO">${RESULT} = [{'diff': 1.4180999999998528e-05}, {'diff': 1.4347000000001359e-05}, {'diff': 1.4611000000001179e-05}, {'diff': 1.4679999999999555e-05}, {'diff': 1.4416999999999208e-05}, {'diff': 1.4222000000001234e-...</msg>
<status status="PASS" starttime="20201030 18:38:44.781" endtime="20201030 18:38:44.788"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:38:44.797" level="INFO">${ACCURACY} = {'diff': [1.4180999999998528e-05, 1.4347000000001359e-05, 1.4611000000001179e-05, 1.4679999999999555e-05, 1.4416999999999208e-05, 1.4222000000001234e-05, 1.4805999999999153e-05, 1.4500000000000624e-05...</msg>
<status status="PASS" starttime="20201030 18:38:44.790" endtime="20201030 18:38:44.797"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:38:44.806" level="INFO">NAME: accuracy-TIMER_SET-4-philip</msg>
<status status="PASS" starttime="20201030 18:38:44.804" endtime="20201030 18:38:44.807"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:38:44.812" level="INFO">VALUE: [1.4180999999998528e-05, 1.4347000000001359e-05, 1.4611000000001179e-05, 1.4679999999999555e-05, 1.4416999999999208e-05, 1.4222000000001234e-05, 1.4805999999999153e-05, 1.4500000000000624e-05, 1.4569999999998473e-05, 1.4499999999997154e-05, 1.4306000000002123e-05, 1.3959000000000887e-05, 1.4541999999999333e-05, 1.4013999999999693e-05, 1.4874999999997529e-05, 1.4708999999998168e-05, 1.4957999999998944e-05, 1.4472000000001484e-05, 1.4707999999998694e-05, 1.4861000000001429e-05, 1.4680999999999028e-05, 1.4889000000000568e-05, 1.4806000000002623e-05, 1.4916999999999708e-05, 1.4487000000000527e-05, 1.4708999999998168e-05, 1.4083000000001539e-05, 1.4236000000000804e-05, 1.4791999999999583e-05, 1.4165999999999485e-05, 1.4263999999999943e-05, 1.4693999999999124e-05, 1.4875000000000999e-05, 1.4360999999997459e-05, 1.4665999999999985e-05, 1.4722000000001734e-05, 1.4083000000001539e-05, 1.4901999999997195e-05, 1.4625000000000749e-05, 1.4874999999997529e-05, 1.4665999999999985e-05, 1.4138999999999818e-05, 1.430499999999918e-05, 1.4778000000000013e-05, 1.4764000000000443e-05, 1.4250000000000373e-05, 1.4889000000000568e-05, 1.4305999999998653e-05, 1.4097000000001109e-05, 1.4306000000002123e-05]</msg>
<status status="PASS" starttime="20201030 18:38:44.809" endtime="20201030 18:38:44.813"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:44.799" endtime="20201030 18:38:44.814"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:38:44.822" endtime="20201030 18:38:44.844"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:44.819" endtime="20201030 18:38:44.847"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:44.816" endtime="20201030 18:38:44.848"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:44.435" endtime="20201030 18:38:44.848"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:44.435" endtime="20201030 18:38:44.849"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:44.868" endtime="20201030 18:38:44.884"></status>
</kw>
<msg timestamp="20201030 18:38:44.884" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:38:44.864" endtime="20201030 18:38:44.884"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:38:44.887" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:38:44.885" endtime="20201030 18:38:44.887"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:44.888" endtime="20201030 18:38:44.889"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:44.859" endtime="20201030 18:38:44.890"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:44.854" endtime="20201030 18:38:44.890"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:44.897" endtime="20201030 18:38:45.182"></status>
</kw>
<msg timestamp="20201030 18:38:45.185" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036648222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036662472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:38:44.895" endtime="20201030 18:38:45.185"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:38:45.193" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036648222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036662472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:38:45.186" endtime="20201030 18:38:45.193"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:45.194" endtime="20201030 18:38:45.196"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:44.893" endtime="20201030 18:38:45.196"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:44.891" endtime="20201030 18:38:45.197"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:38:45.201" level="INFO">${RESULT} = [{'diff': 1.4250000000000373e-05}, {'diff': 1.4471999999994545e-05}, {'diff': 1.480499999999968e-05}, {'diff': 1.483299999999882e-05}, {'diff': 1.4764000000000443e-05}, {'diff': 1.4888999999997099e-05...</msg>
<status status="PASS" starttime="20201030 18:38:45.198" endtime="20201030 18:38:45.201"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:38:45.205" level="INFO">${ACCURACY} = {'diff': [1.4250000000000373e-05, 1.4471999999994545e-05, 1.480499999999968e-05, 1.483299999999882e-05, 1.4764000000000443e-05, 1.4888999999997099e-05, 1.4945000000002318e-05, 1.4693999999995655e-05, ...</msg>
<status status="PASS" starttime="20201030 18:38:45.202" endtime="20201030 18:38:45.206"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:38:45.210" level="INFO">NAME: accuracy-TIMER_SET-5-philip</msg>
<status status="PASS" starttime="20201030 18:38:45.209" endtime="20201030 18:38:45.210"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:38:45.212" level="INFO">VALUE: [1.4250000000000373e-05, 1.4471999999994545e-05, 1.480499999999968e-05, 1.483299999999882e-05, 1.4764000000000443e-05, 1.4888999999997099e-05, 1.4945000000002318e-05, 1.4693999999995655e-05, 1.4374999999997029e-05, 1.4320000000005162e-05, 1.4000000000000123e-05, 1.4417000000002678e-05, 1.4749999999993935e-05, 1.4472000000001484e-05, 1.4055999999998403e-05, 1.4152999999995919e-05, 1.4291999999999083e-05, 1.3986000000000554e-05, 1.4236000000000804e-05, 1.4125000000003718e-05, 1.4764000000000443e-05, 1.4764000000000443e-05, 1.4514000000000193e-05, 1.4055999999998403e-05, 1.4457999999994975e-05, 1.4125000000003718e-05, 1.4403000000003108e-05, 1.4500000000000624e-05, 1.4624999999997279e-05, 1.4389000000003538e-05, 1.4500000000000624e-05, 1.4041999999998833e-05, 1.4389000000003538e-05, 1.4429999999995835e-05, 1.4027999999999263e-05, 1.402699999999979e-05, 1.4652000000003884e-05, 1.4235999999993865e-05, 1.4930000000003274e-05, 1.4055000000005868e-05, 1.481899999999925e-05, 1.4722000000001734e-05, 1.4750000000000874e-05, 1.4083000000005008e-05, 1.4124999999996779e-05, 1.4055999999998403e-05, 1.486099999999796e-05, 1.4138999999996349e-05, 1.4375000000003968e-05, 1.4041999999998833e-05]</msg>
<status status="PASS" starttime="20201030 18:38:45.211" endtime="20201030 18:38:45.214"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:45.206" endtime="20201030 18:38:45.214"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:38:45.218" endtime="20201030 18:38:45.238"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:45.217" endtime="20201030 18:38:45.238"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:45.215" endtime="20201030 18:38:45.239"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:44.851" endtime="20201030 18:38:45.239"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:44.850" endtime="20201030 18:38:45.239"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:45.248" endtime="20201030 18:38:45.262"></status>
</kw>
<msg timestamp="20201030 18:38:45.262" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:38:45.246" endtime="20201030 18:38:45.262"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:38:45.265" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:38:45.263" endtime="20201030 18:38:45.265"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:45.266" endtime="20201030 18:38:45.267"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:45.243" endtime="20201030 18:38:45.268"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:45.241" endtime="20201030 18:38:45.268"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:45.274" endtime="20201030 18:38:45.562"></status>
</kw>
<msg timestamp="20201030 18:38:45.565" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019730236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019744431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:38:45.273" endtime="20201030 18:38:45.565"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:38:45.573" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019730236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019744431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:38:45.566" endtime="20201030 18:38:45.573"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:45.574" endtime="20201030 18:38:45.576"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:45.270" endtime="20201030 18:38:45.576"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:45.269" endtime="20201030 18:38:45.577"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:38:45.581" level="INFO">${RESULT} = [{'diff': 1.4194999999998098e-05}, {'diff': 1.3944999999997848e-05}, {'diff': 1.4375000000000498e-05}, {'diff': 1.4125000000000248e-05}, {'diff': 1.3986000000000554e-05}, {'diff': 1.3931000000001748e-...</msg>
<status status="PASS" starttime="20201030 18:38:45.577" endtime="20201030 18:38:45.581"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:38:45.585" level="INFO">${ACCURACY} = {'diff': [1.4194999999998098e-05, 1.3944999999997848e-05, 1.4375000000000498e-05, 1.4125000000000248e-05, 1.3986000000000554e-05, 1.3931000000001748e-05, 1.477700000000054e-05, 1.426300000000047e-05, ...</msg>
<status status="PASS" starttime="20201030 18:38:45.582" endtime="20201030 18:38:45.586"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:38:45.590" level="INFO">NAME: accuracy-TIMER_SET-6-philip</msg>
<status status="PASS" starttime="20201030 18:38:45.589" endtime="20201030 18:38:45.590"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:38:45.593" level="INFO">VALUE: [1.4194999999998098e-05, 1.3944999999997848e-05, 1.4375000000000498e-05, 1.4125000000000248e-05, 1.3986000000000554e-05, 1.3931000000001748e-05, 1.477700000000054e-05, 1.426300000000047e-05, 1.4888000000001095e-05, 1.4611000000001179e-05, 1.481899999999925e-05, 1.4263999999999943e-05, 1.4721999999998264e-05, 1.4721999999998264e-05, 1.4624999999997279e-05, 1.4125000000000248e-05, 1.4889000000000568e-05, 1.4375000000000498e-05, 1.4000000000000123e-05, 1.4250000000000373e-05, 1.4361000000000929e-05, 1.3986000000000554e-05, 1.4875000000000999e-05, 1.481899999999925e-05, 1.4514000000000193e-05, 1.483299999999882e-05, 1.3944000000001844e-05, 1.4625000000000749e-05, 1.4472000000001484e-05, 1.430499999999918e-05, 1.4556000000002373e-05, 1.4707999999998694e-05, 1.4555999999998903e-05, 1.4764000000000443e-05, 1.4472000000001484e-05, 1.459699999999814e-05, 1.4930999999999278e-05, 1.4875000000000999e-05, 1.4249999999996904e-05, 1.4291999999999083e-05, 1.4957999999998944e-05, 1.4250000000000373e-05, 1.4223000000000707e-05, 1.4527999999999763e-05, 1.4180999999998528e-05, 1.3958999999997418e-05, 1.4277999999999513e-05, 1.4041999999998833e-05, 1.4084000000001012e-05, 1.4444999999998348e-05]</msg>
<status status="PASS" starttime="20201030 18:38:45.591" endtime="20201030 18:38:45.593"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:45.586" endtime="20201030 18:38:45.594"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:38:45.597" endtime="20201030 18:38:45.617"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:45.596" endtime="20201030 18:38:45.618"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:45.595" endtime="20201030 18:38:45.618"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:45.240" endtime="20201030 18:38:45.618"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:45.239" endtime="20201030 18:38:45.618"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:45.627" endtime="20201030 18:38:45.641"></status>
</kw>
<msg timestamp="20201030 18:38:45.642" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:38:45.625" endtime="20201030 18:38:45.642"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:38:45.644" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:38:45.643" endtime="20201030 18:38:45.644"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:45.645" endtime="20201030 18:38:45.647"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:45.623" endtime="20201030 18:38:45.647"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:45.621" endtime="20201030 18:38:45.648"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:45.654" endtime="20201030 18:38:45.940"></status>
</kw>
<msg timestamp="20201030 18:38:45.944" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019283861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019298056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:38:45.653" endtime="20201030 18:38:45.945"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:38:45.953" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019283861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019298056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:38:45.945" endtime="20201030 18:38:45.953"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:45.954" endtime="20201030 18:38:45.955"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:45.650" endtime="20201030 18:38:45.956"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:45.648" endtime="20201030 18:38:45.956"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:38:45.960" level="INFO">${RESULT} = [{'diff': 1.4195000000001567e-05}, {'diff': 1.4570000000001943e-05}, {'diff': 1.4749999999997404e-05}, {'diff': 1.4291999999999083e-05}, {'diff': 1.4639000000000318e-05}, {'diff': 1.4236000000000804e-...</msg>
<status status="PASS" starttime="20201030 18:38:45.957" endtime="20201030 18:38:45.961"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:38:45.965" level="INFO">${ACCURACY} = {'diff': [1.4195000000001567e-05, 1.4570000000001943e-05, 1.4749999999997404e-05, 1.4291999999999083e-05, 1.4639000000000318e-05, 1.4236000000000804e-05, 1.4568999999999e-05, 1.4179999999999054e-05, 1...</msg>
<status status="PASS" starttime="20201030 18:38:45.961" endtime="20201030 18:38:45.965"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:38:45.969" level="INFO">NAME: accuracy-TIMER_SET-7-philip</msg>
<status status="PASS" starttime="20201030 18:38:45.968" endtime="20201030 18:38:45.969"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:38:45.971" level="INFO">VALUE: [1.4195000000001567e-05, 1.4570000000001943e-05, 1.4749999999997404e-05, 1.4291999999999083e-05, 1.4639000000000318e-05, 1.4236000000000804e-05, 1.4568999999999e-05, 1.4179999999999054e-05, 1.4679999999999555e-05, 1.4278000000002983e-05, 1.430499999999918e-05, 1.4235999999997334e-05, 1.4639000000000318e-05, 1.4083000000001539e-05, 1.458299999999857e-05, 1.4111000000000679e-05, 1.409699999999764e-05, 1.4429999999999304e-05, 1.4429999999999304e-05, 1.4527999999999763e-05, 1.4597000000001609e-05, 1.4875000000000999e-05, 1.3944000000001844e-05, 1.4223000000000707e-05, 1.4194999999998098e-05, 1.4916999999999708e-05, 1.4889000000000568e-05, 1.4679999999999555e-05, 1.4250000000000373e-05, 1.4903000000000138e-05, 1.4666999999999458e-05, 1.4320000000001692e-05, 1.4361000000000929e-05, 1.4250000000000373e-05, 1.4416999999999208e-05, 1.4250000000000373e-05, 1.4056000000001873e-05, 1.3945000000001317e-05, 1.4805999999999153e-05, 1.4639000000000318e-05, 1.4584000000001512e-05, 1.4652999999999888e-05, 1.4445000000001817e-05, 1.4416999999999208e-05, 1.4194999999998098e-05, 1.430499999999918e-05, 1.4402999999999638e-05, 1.476300000000097e-05, 1.4305999999998653e-05, 1.4387999999997125e-05]</msg>
<status status="PASS" starttime="20201030 18:38:45.970" endtime="20201030 18:38:45.972"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:45.965" endtime="20201030 18:38:45.973"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:38:45.976" endtime="20201030 18:38:45.996"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:45.975" endtime="20201030 18:38:45.996"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:45.974" endtime="20201030 18:38:45.997"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:45.619" endtime="20201030 18:38:45.997"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:45.619" endtime="20201030 18:38:45.997"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:46.006" endtime="20201030 18:38:46.022"></status>
</kw>
<msg timestamp="20201030 18:38:46.022" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:38:46.004" endtime="20201030 18:38:46.023"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:38:46.025" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:38:46.023" endtime="20201030 18:38:46.025"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:46.026" endtime="20201030 18:38:46.028"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:46.002" endtime="20201030 18:38:46.028"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:46.000" endtime="20201030 18:38:46.029"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:46.035" endtime="20201030 18:38:46.332"></status>
</kw>
<msg timestamp="20201030 18:38:46.339" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020642958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02065725, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:38:46.033" endtime="20201030 18:38:46.340"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:38:46.359" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020642958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02065725, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:38:46.342" endtime="20201030 18:38:46.359"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:46.361" endtime="20201030 18:38:46.364"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:46.031" endtime="20201030 18:38:46.365"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:46.029" endtime="20201030 18:38:46.367"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:38:46.375" level="INFO">${RESULT} = [{'diff': 1.4291999999999083e-05}, {'diff': 1.4013999999999693e-05}, {'diff': 1.4584000000001512e-05}, {'diff': 1.458299999999857e-05}, {'diff': 1.3986000000000554e-05}, {'diff': 1.4014000000003163e-0...</msg>
<status status="PASS" starttime="20201030 18:38:46.368" endtime="20201030 18:38:46.375"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:38:46.384" level="INFO">${ACCURACY} = {'diff': [1.4291999999999083e-05, 1.4013999999999693e-05, 1.4584000000001512e-05, 1.458299999999857e-05, 1.3986000000000554e-05, 1.4014000000003163e-05, 1.4181000000001998e-05, 1.4013999999999693e-05,...</msg>
<status status="PASS" starttime="20201030 18:38:46.377" endtime="20201030 18:38:46.384"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:38:46.391" level="INFO">NAME: accuracy-TIMER_SET-8-philip</msg>
<status status="PASS" starttime="20201030 18:38:46.390" endtime="20201030 18:38:46.391"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:38:46.393" level="INFO">VALUE: [1.4291999999999083e-05, 1.4013999999999693e-05, 1.4584000000001512e-05, 1.458299999999857e-05, 1.3986000000000554e-05, 1.4014000000003163e-05, 1.4181000000001998e-05, 1.4013999999999693e-05, 1.4694999999998598e-05, 1.4735999999997834e-05, 1.461099999999771e-05, 1.4597000000001609e-05, 1.4222999999997238e-05, 1.4569999999998473e-05, 1.4737000000000777e-05, 1.3985999999997084e-05, 1.3945000000001317e-05, 1.476300000000097e-05, 1.4527999999999763e-05, 1.4291999999999083e-05, 1.480499999999968e-05, 1.4862000000000902e-05, 1.4207999999998194e-05, 1.481899999999925e-05, 1.4027999999999263e-05, 1.4721999999998264e-05, 1.4375000000000498e-05, 1.4236000000000804e-05, 1.4263999999999943e-05, 1.4708000000002164e-05, 1.4874999999997529e-05, 1.4097000000001109e-05, 1.4415999999999735e-05, 1.486099999999796e-05, 1.4875000000000999e-05, 1.4139000000003288e-05, 1.4013999999999693e-05, 1.4861000000001429e-05, 1.4361000000000929e-05, 1.4889000000000568e-05, 1.4208000000001664e-05, 1.4041999999998833e-05, 1.4639000000000318e-05, 1.4541999999999333e-05, 1.4402999999999638e-05, 1.4764000000000443e-05, 1.3973000000000457e-05, 1.4819000000002719e-05, 1.4194999999998098e-05, 1.4819999999998723e-05]</msg>
<status status="PASS" starttime="20201030 18:38:46.392" endtime="20201030 18:38:46.395"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:46.386" endtime="20201030 18:38:46.395"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:38:46.399" endtime="20201030 18:38:46.418"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:46.398" endtime="20201030 18:38:46.419"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:46.396" endtime="20201030 18:38:46.419"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:45.998" endtime="20201030 18:38:46.420"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:45.997" endtime="20201030 18:38:46.420"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:46.428" endtime="20201030 18:38:46.444"></status>
</kw>
<msg timestamp="20201030 18:38:46.445" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:38:46.427" endtime="20201030 18:38:46.445"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:38:46.447" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:38:46.446" endtime="20201030 18:38:46.448"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:46.448" endtime="20201030 18:38:46.450"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:46.424" endtime="20201030 18:38:46.450"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:46.422" endtime="20201030 18:38:46.451"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:46.457" endtime="20201030 18:38:46.742"></status>
</kw>
<msg timestamp="20201030 18:38:46.746" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020116486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020130597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:38:46.456" endtime="20201030 18:38:46.746"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:38:46.754" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020116486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020130597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:38:46.747" endtime="20201030 18:38:46.754"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:46.755" endtime="20201030 18:38:46.757"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:46.453" endtime="20201030 18:38:46.757"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:46.451" endtime="20201030 18:38:46.758"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:38:46.762" level="INFO">${RESULT} = [{'diff': 1.4111000000000679e-05}, {'diff': 1.4443999999998874e-05}, {'diff': 1.4514000000000193e-05}, {'diff': 1.4402999999999638e-05}, {'diff': 1.459699999999814e-05}, {'diff': 1.4222000000001234e-0...</msg>
<status status="PASS" starttime="20201030 18:38:46.759" endtime="20201030 18:38:46.762"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:38:46.767" level="INFO">${ACCURACY} = {'diff': [1.4111000000000679e-05, 1.4443999999998874e-05, 1.4514000000000193e-05, 1.4402999999999638e-05, 1.459699999999814e-05, 1.4222000000001234e-05, 1.4750000000000874e-05, 1.4166999999998958e-05,...</msg>
<status status="PASS" starttime="20201030 18:38:46.763" endtime="20201030 18:38:46.767"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:38:46.771" level="INFO">NAME: accuracy-TIMER_SET-9-philip</msg>
<status status="PASS" starttime="20201030 18:38:46.770" endtime="20201030 18:38:46.772"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:38:46.774" level="INFO">VALUE: [1.4111000000000679e-05, 1.4443999999998874e-05, 1.4514000000000193e-05, 1.4402999999999638e-05, 1.459699999999814e-05, 1.4222000000001234e-05, 1.4750000000000874e-05, 1.4166999999998958e-05, 1.4833000000002289e-05, 1.4138999999999818e-05, 1.3957999999997944e-05, 1.4694999999998598e-05, 1.4431000000002248e-05, 1.4750000000000874e-05, 1.4555999999998903e-05, 1.4208000000001664e-05, 1.4402999999999638e-05, 1.4471999999998014e-05, 1.4375000000000498e-05, 1.4806000000002623e-05, 1.4750000000000874e-05, 1.4805999999999153e-05, 1.4958999999998418e-05, 1.4805999999999153e-05, 1.4055999999998403e-05, 1.3930999999998278e-05, 1.4402999999999638e-05, 1.4445000000001817e-05, 1.4209000000001137e-05, 1.4000000000000123e-05, 1.4889000000000568e-05, 1.4151999999999915e-05, 1.4500000000000624e-05, 1.4097000000001109e-05, 1.4722000000001734e-05, 1.5014000000000693e-05, 1.3915999999999235e-05, 1.4111000000000679e-05, 1.408299999999807e-05, 1.404099999999936e-05, 1.4665999999999985e-05, 1.4514000000000193e-05, 1.3985999999997084e-05, 1.4000000000000123e-05, 1.4875000000000999e-05, 1.4583000000002039e-05, 1.4291999999999083e-05, 1.480499999999968e-05, 1.434699999999789e-05, 1.433299999999832e-05]</msg>
<status status="PASS" starttime="20201030 18:38:46.772" endtime="20201030 18:38:46.774"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:46.768" endtime="20201030 18:38:46.775"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:38:46.779" endtime="20201030 18:38:46.798"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:46.777" endtime="20201030 18:38:46.799"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:46.776" endtime="20201030 18:38:46.799"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:46.421" endtime="20201030 18:38:46.799"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:46.420" endtime="20201030 18:38:46.800"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:46.808" endtime="20201030 18:38:46.823"></status>
</kw>
<msg timestamp="20201030 18:38:46.823" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:38:46.806" endtime="20201030 18:38:46.824"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:38:46.826" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:38:46.824" endtime="20201030 18:38:46.826"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:46.827" endtime="20201030 18:38:46.828"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:46.804" endtime="20201030 18:38:46.829"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:46.802" endtime="20201030 18:38:46.829"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:46.836" endtime="20201030 18:38:47.130"></status>
</kw>
<msg timestamp="20201030 18:38:47.138" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020154, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020168236, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:38:46.834" endtime="20201030 18:38:47.138"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:38:47.156" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020154, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020168236, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:38:47.140" endtime="20201030 18:38:47.157"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:47.159" endtime="20201030 18:38:47.162"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:46.832" endtime="20201030 18:38:47.163"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:46.830" endtime="20201030 18:38:47.164"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:38:47.173" level="INFO">${RESULT} = [{'diff': 1.4236000000000804e-05}, {'diff': 1.480499999999968e-05}, {'diff': 1.483299999999882e-05}, {'diff': 1.4041999999998833e-05}, {'diff': 1.4693999999999124e-05}, {'diff': 1.4028000000002733e-05...</msg>
<status status="PASS" starttime="20201030 18:38:47.166" endtime="20201030 18:38:47.173"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:38:47.182" level="INFO">${ACCURACY} = {'diff': [1.4236000000000804e-05, 1.480499999999968e-05, 1.483299999999882e-05, 1.4041999999998833e-05, 1.4693999999999124e-05, 1.4028000000002733e-05, 1.4652999999999888e-05, 1.4208000000001664e-05, ...</msg>
<status status="PASS" starttime="20201030 18:38:47.175" endtime="20201030 18:38:47.182"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:38:47.191" level="INFO">NAME: accuracy-TIMER_SET-10-philip</msg>
<status status="PASS" starttime="20201030 18:38:47.189" endtime="20201030 18:38:47.192"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:38:47.196" level="INFO">VALUE: [1.4236000000000804e-05, 1.480499999999968e-05, 1.483299999999882e-05, 1.4041999999998833e-05, 1.4693999999999124e-05, 1.4028000000002733e-05, 1.4652999999999888e-05, 1.4208000000001664e-05, 1.4291999999999083e-05, 1.4166999999998958e-05, 1.4638000000000845e-05, 1.4083000000001539e-05, 1.4097000000001109e-05, 1.4013999999999693e-05, 1.4250000000000373e-05, 1.4361000000000929e-05, 1.4235999999997334e-05, 1.4471999999998014e-05, 1.4874999999997529e-05, 1.4500000000000624e-05, 1.4458999999997918e-05, 1.4013999999999693e-05, 1.4111000000000679e-05, 1.4236000000000804e-05, 1.3986000000000554e-05, 1.4347999999997363e-05, 1.4805999999999153e-05, 1.4499999999997154e-05, 1.4665999999999985e-05, 1.4084000000001012e-05, 1.4889000000000568e-05, 1.4737000000000777e-05, 1.4389000000000068e-05, 1.4693999999999124e-05, 1.4638000000000845e-05, 1.429099999999961e-05, 1.4361000000000929e-05, 1.404099999999936e-05, 1.429099999999961e-05, 1.4639000000000318e-05, 1.4250000000000373e-05, 1.481899999999925e-05, 1.4402000000000165e-05, 1.4443999999998874e-05, 1.4679999999999555e-05, 1.40689999999985e-05, 1.4179999999999054e-05, 1.3958000000001414e-05, 1.4625000000000749e-05, 1.4250000000000373e-05]</msg>
<status status="PASS" starttime="20201030 18:38:47.193" endtime="20201030 18:38:47.197"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:47.184" endtime="20201030 18:38:47.197"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:38:47.201" endtime="20201030 18:38:47.220"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:47.199" endtime="20201030 18:38:47.221"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:47.198" endtime="20201030 18:38:47.221"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:46.800" endtime="20201030 18:38:47.222"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:46.800" endtime="20201030 18:38:47.222"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:47.230" endtime="20201030 18:38:47.247"></status>
</kw>
<msg timestamp="20201030 18:38:47.248" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:38:47.229" endtime="20201030 18:38:47.248"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:38:47.250" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:38:47.249" endtime="20201030 18:38:47.251"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:47.251" endtime="20201030 18:38:47.253"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:47.226" endtime="20201030 18:38:47.254"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:47.224" endtime="20201030 18:38:47.254"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:47.260" endtime="20201030 18:38:47.545"></status>
</kw>
<msg timestamp="20201030 18:38:47.548" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021298139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021313069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:38:47.259" endtime="20201030 18:38:47.548"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:38:47.558" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021298139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021313069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:38:47.549" endtime="20201030 18:38:47.558"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:47.559" endtime="20201030 18:38:47.561"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:47.256" endtime="20201030 18:38:47.561"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:47.255" endtime="20201030 18:38:47.562"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:38:47.566" level="INFO">${RESULT} = [{'diff': 1.4929999999999805e-05}, {'diff': 1.50689999999995e-05}, {'diff': 1.4971999999998514e-05}, {'diff': 1.5707999999999694e-05}, {'diff': 1.584700000000286e-05}, {'diff': 1.4999999999997654e-05}...</msg>
<status status="PASS" starttime="20201030 18:38:47.563" endtime="20201030 18:38:47.566"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:38:47.570" level="INFO">${ACCURACY} = {'diff': [1.4929999999999805e-05, 1.50689999999995e-05, 1.4971999999998514e-05, 1.5707999999999694e-05, 1.584700000000286e-05, 1.4999999999997654e-05, 1.5166000000000485e-05, 1.508299999999907e-05, 1....</msg>
<status status="PASS" starttime="20201030 18:38:47.567" endtime="20201030 18:38:47.570"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:38:47.574" level="INFO">NAME: accuracy-TIMER_SET-11-philip</msg>
<status status="PASS" starttime="20201030 18:38:47.573" endtime="20201030 18:38:47.575"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:38:47.577" level="INFO">VALUE: [1.4929999999999805e-05, 1.50689999999995e-05, 1.4971999999998514e-05, 1.5707999999999694e-05, 1.584700000000286e-05, 1.4999999999997654e-05, 1.5166000000000485e-05, 1.508299999999907e-05, 1.5014000000000693e-05, 1.586100000000243e-05, 1.5138999999997349e-05, 1.5236000000001804e-05, 1.5694000000000125e-05, 1.5278000000000513e-05, 1.5221999999998764e-05, 1.590300000000114e-05, 1.5292000000000083e-05, 1.5541999999996864e-05, 1.53750000000015e-05, 1.5221999999998764e-05, 1.5736000000002304e-05, 1.5223000000001707e-05, 1.5695000000003068e-05, 1.5208999999998668e-05, 1.5000000000001124e-05, 1.4972999999997988e-05, 1.4985999999998084e-05, 1.5028000000000263e-05, 1.5528000000000763e-05, 1.5000000000001124e-05, 1.5041999999999833e-05, 1.502699999999732e-05, 1.5278000000000513e-05, 1.536099999999846e-05, 1.5166999999999958e-05, 1.4986000000001554e-05, 1.5430000000000305e-05, 1.5264000000000943e-05, 1.5721999999999264e-05, 1.586099999999896e-05, 1.5416000000000735e-05, 1.5236000000001804e-05, 1.5957999999999944e-05, 1.5235999999998334e-05, 1.5944000000000375e-05, 1.5749999999998404e-05, 1.5735999999998834e-05, 1.5749999999998404e-05, 1.505499999999993e-05, 1.5680000000000555e-05]</msg>
<status status="PASS" starttime="20201030 18:38:47.576" endtime="20201030 18:38:47.579"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:47.571" endtime="20201030 18:38:47.579"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:38:47.583" endtime="20201030 18:38:47.602"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:47.581" endtime="20201030 18:38:47.603"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:47.580" endtime="20201030 18:38:47.603"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:47.223" endtime="20201030 18:38:47.603"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:47.222" endtime="20201030 18:38:47.604"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:47.612" endtime="20201030 18:38:47.629"></status>
</kw>
<msg timestamp="20201030 18:38:47.629" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:38:47.611" endtime="20201030 18:38:47.629"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:38:47.632" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:38:47.630" endtime="20201030 18:38:47.632"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:47.633" endtime="20201030 18:38:47.634"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:47.608" endtime="20201030 18:38:47.635"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:47.606" endtime="20201030 18:38:47.635"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:47.642" endtime="20201030 18:38:47.928"></status>
</kw>
<msg timestamp="20201030 18:38:47.931" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020662056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020678347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:38:47.640" endtime="20201030 18:38:47.931"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:38:47.939" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020662056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020678347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:38:47.932" endtime="20201030 18:38:47.939"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:47.940" endtime="20201030 18:38:47.941"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:47.638" endtime="20201030 18:38:47.942"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:47.636" endtime="20201030 18:38:47.942"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:38:47.947" level="INFO">${RESULT} = [{'diff': 1.629099999999814e-05}, {'diff': 1.6750000000002874e-05}, {'diff': 1.6777999999998544e-05}, {'diff': 1.6500000000002624e-05}, {'diff': 1.665299999999842e-05}, {'diff': 1.6208000000000194e-05...</msg>
<status status="PASS" starttime="20201030 18:38:47.944" endtime="20201030 18:38:47.948"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:38:47.955" level="INFO">${ACCURACY} = {'diff': [1.629099999999814e-05, 1.6750000000002874e-05, 1.6777999999998544e-05, 1.6500000000002624e-05, 1.665299999999842e-05, 1.6208000000000194e-05, 1.6527999999998294e-05, 1.65829999999971e-05, 1....</msg>
<status status="PASS" starttime="20201030 18:38:47.949" endtime="20201030 18:38:47.955"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:38:47.959" level="INFO">NAME: accuracy-TIMER_SET-12-philip</msg>
<status status="PASS" starttime="20201030 18:38:47.958" endtime="20201030 18:38:47.960"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:38:47.962" level="INFO">VALUE: [1.629099999999814e-05, 1.6750000000002874e-05, 1.6777999999998544e-05, 1.6500000000002624e-05, 1.665299999999842e-05, 1.6208000000000194e-05, 1.6527999999998294e-05, 1.65829999999971e-05, 1.6292000000001083e-05, 1.6458000000000444e-05, 1.658300000000057e-05, 1.6181000000000528e-05, 1.637499999999903e-05, 1.6709000000000168e-05, 1.6805999999997684e-05, 1.6249999999998904e-05, 1.6292000000001083e-05, 1.6778000000002014e-05, 1.6112000000002152e-05, 1.690299999999867e-05, 1.687499999999953e-05, 1.6721999999996795e-05, 1.6820000000000723e-05, 1.6902000000002665e-05, 1.6235999999999334e-05, 1.638900000000207e-05, 1.6152000000001915e-05, 1.690299999999867e-05, 1.6597999999999613e-05, 1.6694000000001125e-05, 1.6679999999998085e-05, 1.6929999999998335e-05, 1.641700000000121e-05, 1.5957999999999944e-05, 1.633300000000032e-05, 1.6708000000000695e-05, 1.6735999999999834e-05, 1.631900000000075e-05, 1.609699999999964e-05, 1.6930000000001805e-05, 1.663899999999885e-05, 1.6929999999998335e-05, 1.655499999999796e-05, 1.636099999999946e-05, 1.666699999999799e-05, 1.662499999999928e-05, 1.6180000000001055e-05, 1.6763999999998974e-05, 1.63889999999986e-05, 1.683300000000082e-05]</msg>
<status status="PASS" starttime="20201030 18:38:47.960" endtime="20201030 18:38:47.963"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:47.956" endtime="20201030 18:38:47.963"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:38:47.967" endtime="20201030 18:38:47.986"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:47.965" endtime="20201030 18:38:47.987"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:47.964" endtime="20201030 18:38:47.987"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:47.604" endtime="20201030 18:38:47.988"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:47.604" endtime="20201030 18:38:47.988"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:47.996" endtime="20201030 18:38:48.013"></status>
</kw>
<msg timestamp="20201030 18:38:48.013" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:38:47.995" endtime="20201030 18:38:48.013"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:38:48.016" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:38:48.014" endtime="20201030 18:38:48.016"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:48.017" endtime="20201030 18:38:48.018"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:47.992" endtime="20201030 18:38:48.019"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:47.990" endtime="20201030 18:38:48.019"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:48.026" endtime="20201030 18:38:48.310"></status>
</kw>
<msg timestamp="20201030 18:38:48.313" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020042431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020059917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:38:48.024" endtime="20201030 18:38:48.313"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:38:48.321" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020042431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020059917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:38:48.314" endtime="20201030 18:38:48.321"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:48.322" endtime="20201030 18:38:48.324"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:48.022" endtime="20201030 18:38:48.324"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:48.020" endtime="20201030 18:38:48.325"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:38:48.329" level="INFO">${RESULT} = [{'diff': 1.7486000000000584e-05}, {'diff': 1.693099999999781e-05}, {'diff': 1.7292000000002083e-05}, {'diff': 1.7833999999997824e-05}, {'diff': 1.737500000000003e-05}, {'diff': 1.777700000000007e-05}...</msg>
<status status="PASS" starttime="20201030 18:38:48.326" endtime="20201030 18:38:48.329"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:38:48.333" level="INFO">${ACCURACY} = {'diff': [1.7486000000000584e-05, 1.693099999999781e-05, 1.7292000000002083e-05, 1.7833999999997824e-05, 1.737500000000003e-05, 1.777700000000007e-05, 1.7098000000000113e-05, 1.7084000000000543e-05, 1...</msg>
<status status="PASS" starttime="20201030 18:38:48.330" endtime="20201030 18:38:48.333"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:38:48.337" level="INFO">NAME: accuracy-TIMER_SET-13-philip</msg>
<status status="PASS" starttime="20201030 18:38:48.336" endtime="20201030 18:38:48.338"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:38:48.340" level="INFO">VALUE: [1.7486000000000584e-05, 1.693099999999781e-05, 1.7292000000002083e-05, 1.7833999999997824e-05, 1.737500000000003e-05, 1.777700000000007e-05, 1.7098000000000113e-05, 1.7084000000000543e-05, 1.783300000000182e-05, 1.791700000000271e-05, 1.715299999999892e-05, 1.7693999999998655e-05, 1.7236000000000334e-05, 1.6986000000000084e-05, 1.7665999999999515e-05, 1.7443999999998405e-05, 1.7665999999999515e-05, 1.779099999999964e-05, 1.765299999999942e-05, 1.6972000000000514e-05, 1.736100000000046e-05, 1.7443999999998405e-05, 1.709700000000064e-05, 1.715299999999892e-05, 1.7679999999999085e-05, 1.730500000000218e-05, 1.716699999999849e-05, 1.781899999999878e-05, 1.7750000000000404e-05, 1.7750000000000404e-05, 1.7791999999999114e-05, 1.6972000000000514e-05, 1.7735999999997365e-05, 1.7472000000001014e-05, 1.7778000000003014e-05, 1.7306000000001653e-05, 1.762500000000028e-05, 1.6959000000000418e-05, 1.718100000000153e-05, 1.7527999999999294e-05, 1.7834000000001293e-05, 1.7013999999999224e-05, 1.6972999999999988e-05, 1.7819999999998254e-05, 1.7750000000000404e-05, 1.7334000000000793e-05, 1.6959000000000418e-05, 1.7598000000000613e-05, 1.6945000000000848e-05, 1.7985999999997615e-05]</msg>
<status status="PASS" starttime="20201030 18:38:48.338" endtime="20201030 18:38:48.341"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:48.334" endtime="20201030 18:38:48.341"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:38:48.346" endtime="20201030 18:38:48.365"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:48.344" endtime="20201030 18:38:48.366"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:48.342" endtime="20201030 18:38:48.366"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:47.989" endtime="20201030 18:38:48.366"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:47.988" endtime="20201030 18:38:48.367"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:48.375" endtime="20201030 18:38:48.391"></status>
</kw>
<msg timestamp="20201030 18:38:48.391" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:38:48.374" endtime="20201030 18:38:48.392"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:38:48.394" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:38:48.392" endtime="20201030 18:38:48.394"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:48.395" endtime="20201030 18:38:48.396"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:48.371" endtime="20201030 18:38:48.397"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:48.369" endtime="20201030 18:38:48.397"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:48.404" endtime="20201030 18:38:48.690"></status>
</kw>
<msg timestamp="20201030 18:38:48.693" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020232417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020250514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:38:48.402" endtime="20201030 18:38:48.693"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:38:48.701" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020232417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020250514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:38:48.694" endtime="20201030 18:38:48.701"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:48.702" endtime="20201030 18:38:48.704"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:48.400" endtime="20201030 18:38:48.704"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:48.398" endtime="20201030 18:38:48.705"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:38:48.709" level="INFO">${RESULT} = [{'diff': 1.809700000000164e-05}, {'diff': 1.8500000000001154e-05}, {'diff': 1.793100000000228e-05}, {'diff': 1.8055999999998934e-05}, {'diff': 1.845900000000192e-05}, {'diff': 1.86950000000026e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:38:48.705" endtime="20201030 18:38:48.709"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:38:48.713" level="INFO">${ACCURACY} = {'diff': [1.809700000000164e-05, 1.8500000000001154e-05, 1.793100000000228e-05, 1.8055999999998934e-05, 1.845900000000192e-05, 1.86950000000026e-05, 1.8778000000000544e-05, 1.8598000000001613e-05, 1.8...</msg>
<status status="PASS" starttime="20201030 18:38:48.710" endtime="20201030 18:38:48.713"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:38:48.717" level="INFO">NAME: accuracy-TIMER_SET-14-philip</msg>
<status status="PASS" starttime="20201030 18:38:48.716" endtime="20201030 18:38:48.718"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:38:48.720" level="INFO">VALUE: [1.809700000000164e-05, 1.8500000000001154e-05, 1.793100000000228e-05, 1.8055999999998934e-05, 1.845900000000192e-05, 1.86950000000026e-05, 1.8778000000000544e-05, 1.8598000000001613e-05, 1.8777999999997075e-05, 1.838899999999713e-05, 1.841699999999974e-05, 1.838899999999713e-05, 1.8306000000002653e-05, 1.8792000000000114e-05, 1.852700000000082e-05, 1.856899999999953e-05, 1.85829999999991e-05, 1.8651999999997476e-05, 1.8680000000000085e-05, 1.8680000000000085e-05, 1.7972000000001515e-05, 1.80690000000025e-05, 1.884700000000239e-05, 1.840300000000017e-05, 1.8429999999999835e-05, 1.88890000000011e-05, 1.837500000000103e-05, 1.891700000000024e-05, 1.812500000000078e-05, 1.8764000000000974e-05, 1.78890000000001e-05, 1.837499999999756e-05, 1.8249999999997435e-05, 1.793099999999881e-05, 1.8014000000000224e-05, 1.8014000000000224e-05, 1.859699999999867e-05, 1.8055999999998934e-05, 1.83890000000006e-05, 1.8778000000000544e-05, 1.8847999999998394e-05, 1.8236000000001334e-05, 1.8528000000000294e-05, 1.793100000000228e-05, 1.891700000000024e-05, 1.862499999999781e-05, 1.8305999999999184e-05, 1.840300000000017e-05, 1.868099999999956e-05, 1.8069999999998504e-05]</msg>
<status status="PASS" starttime="20201030 18:38:48.718" endtime="20201030 18:38:48.721"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:48.714" endtime="20201030 18:38:48.722"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:38:48.726" endtime="20201030 18:38:48.745"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:48.724" endtime="20201030 18:38:48.746"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:48.723" endtime="20201030 18:38:48.746"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:48.368" endtime="20201030 18:38:48.746"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:48.367" endtime="20201030 18:38:48.746"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:48.755" endtime="20201030 18:38:48.771"></status>
</kw>
<msg timestamp="20201030 18:38:48.772" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:38:48.753" endtime="20201030 18:38:48.772"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:38:48.774" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:38:48.773" endtime="20201030 18:38:48.775"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:48.775" endtime="20201030 18:38:48.777"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:48.751" endtime="20201030 18:38:48.778"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:48.749" endtime="20201030 18:38:48.778"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:48.784" endtime="20201030 18:38:49.071"></status>
</kw>
<msg timestamp="20201030 18:38:49.074" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020356403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020375431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:38:48.783" endtime="20201030 18:38:49.074"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:38:49.082" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020356403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020375431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:38:49.075" endtime="20201030 18:38:49.083"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:49.083" endtime="20201030 18:38:49.085"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:48.780" endtime="20201030 18:38:49.085"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:48.779" endtime="20201030 18:38:49.086"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:38:49.090" level="INFO">${RESULT} = [{'diff': 1.9028000000000794e-05}, {'diff': 1.9430000000000835e-05}, {'diff': 1.9000000000001654e-05}, {'diff': 1.988899999999863e-05}, {'diff': 1.8943999999999905e-05}, {'diff': 1.97630000000025e-05}...</msg>
<status status="PASS" starttime="20201030 18:38:49.087" endtime="20201030 18:38:49.090"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:38:49.095" level="INFO">${ACCURACY} = {'diff': [1.9028000000000794e-05, 1.9430000000000835e-05, 1.9000000000001654e-05, 1.988899999999863e-05, 1.8943999999999905e-05, 1.97630000000025e-05, 1.912500000000178e-05, 1.937499999999856e-05, 1.9...</msg>
<status status="PASS" starttime="20201030 18:38:49.091" endtime="20201030 18:38:49.095"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:38:49.099" level="INFO">NAME: accuracy-TIMER_SET-15-philip</msg>
<status status="PASS" starttime="20201030 18:38:49.098" endtime="20201030 18:38:49.100"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:38:49.102" level="INFO">VALUE: [1.9028000000000794e-05, 1.9430000000000835e-05, 1.9000000000001654e-05, 1.988899999999863e-05, 1.8943999999999905e-05, 1.97630000000025e-05, 1.912500000000178e-05, 1.937499999999856e-05, 1.959699999999967e-05, 1.963899999999838e-05, 1.9708000000000225e-05, 1.909699999999917e-05, 1.904100000000089e-05, 1.931900000000028e-05, 1.9028000000000794e-05, 1.983300000000035e-05, 1.937499999999856e-05, 1.9000000000001654e-05, 1.965299999999795e-05, 1.9013999999997755e-05, 1.9806000000000684e-05, 1.9847999999999394e-05, 1.9014000000001224e-05, 1.9570000000000004e-05, 1.9013999999997755e-05, 1.8985999999998615e-05, 1.9570000000000004e-05, 1.9013999999997755e-05, 1.994500000000038e-05, 1.915300000000092e-05, 1.909699999999917e-05, 1.9763999999998505e-05, 1.9014000000001224e-05, 1.969500000000013e-05, 1.8957999999999475e-05, 1.9292000000000614e-05, 1.9069999999999504e-05, 1.9042000000000364e-05, 1.906900000000003e-05, 1.916700000000049e-05, 1.931900000000028e-05, 1.986099999999949e-05, 1.9680000000001086e-05, 1.954100000000139e-05, 1.95830000000001e-05, 1.905499999999699e-05, 1.8943999999999905e-05, 1.930500000000071e-05, 1.936100000000246e-05, 1.9471999999999545e-05]</msg>
<status status="PASS" starttime="20201030 18:38:49.100" endtime="20201030 18:38:49.103"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:49.096" endtime="20201030 18:38:49.103"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:38:49.107" endtime="20201030 18:38:49.126"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:49.105" endtime="20201030 18:38:49.127"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:49.104" endtime="20201030 18:38:49.127"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:48.747" endtime="20201030 18:38:49.127"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:48.747" endtime="20201030 18:38:49.128"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:49.136" endtime="20201030 18:38:49.153"></status>
</kw>
<msg timestamp="20201030 18:38:49.153" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:38:49.135" endtime="20201030 18:38:49.153"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:38:49.155" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:38:49.154" endtime="20201030 18:38:49.156"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:49.157" endtime="20201030 18:38:49.158"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:49.132" endtime="20201030 18:38:49.159"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:49.130" endtime="20201030 18:38:49.159"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:49.165" endtime="20201030 18:38:49.472"></status>
</kw>
<msg timestamp="20201030 18:38:49.475" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020476486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020497097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:38:49.164" endtime="20201030 18:38:49.476"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:38:49.484" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020476486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020497097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:38:49.476" endtime="20201030 18:38:49.484"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:49.485" endtime="20201030 18:38:49.486"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:49.161" endtime="20201030 18:38:49.487"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:49.160" endtime="20201030 18:38:49.487"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:38:49.491" level="INFO">${RESULT} = [{'diff': 2.061100000000024e-05}, {'diff': 2.015299999999845e-05}, {'diff': 2.037499999999956e-05}, {'diff': 2.016699999999802e-05}, {'diff': 2.034700000000042e-05}, {'diff': 2.083300000000135e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:38:49.488" endtime="20201030 18:38:49.491"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:38:49.495" level="INFO">${ACCURACY} = {'diff': [2.061100000000024e-05, 2.015299999999845e-05, 2.037499999999956e-05, 2.016699999999802e-05, 2.034700000000042e-05, 2.083300000000135e-05, 2.081900000000178e-05, 2.03890000000026e-05, 2.08610...</msg>
<status status="PASS" starttime="20201030 18:38:49.492" endtime="20201030 18:38:49.495"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:38:49.500" level="INFO">NAME: accuracy-TIMER_SET-16-philip</msg>
<status status="PASS" starttime="20201030 18:38:49.499" endtime="20201030 18:38:49.500"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:38:49.502" level="INFO">VALUE: [2.061100000000024e-05, 2.015299999999845e-05, 2.037499999999956e-05, 2.016699999999802e-05, 2.034700000000042e-05, 2.083300000000135e-05, 2.081900000000178e-05, 2.03890000000026e-05, 2.086100000000049e-05, 2.0749999999999935e-05, 2.0472000000000545e-05, 2.0319999999997285e-05, 2.087500000000006e-05, 2.038899999999913e-05, 2.068099999999809e-05, 2.0805999999998215e-05, 2.036099999999999e-05, 2.0471999999997076e-05, 2.0263999999999005e-05, 2.0097999999999644e-05, 1.997300000000299e-05, 2.0778000000002544e-05, 2.0471999999997076e-05, 2.0665999999999046e-05, 2.0347999999999894e-05, 2.0249999999999435e-05, 2.0887999999996687e-05, 2.0943999999998436e-05, 2.033300000000085e-05, 2.081899999999831e-05, 2.030500000000171e-05, 2.0014000000002224e-05, 2.080500000000221e-05, 2.029099999999867e-05, 2.086100000000049e-05, 2.0166000000002016e-05, 2.056899999999806e-05, 2.081899999999831e-05, 2.063900000000285e-05, 2.0694000000001656e-05, 2.006899999999756e-05, 2.011099999999974e-05, 2.083300000000135e-05, 2.0722000000000795e-05, 2.069499999999766e-05, 2.0792000000002114e-05, 2.0041999999997895e-05, 2.087500000000006e-05, 2.016700000000149e-05, 2.065299999999895e-05]</msg>
<status status="PASS" starttime="20201030 18:38:49.501" endtime="20201030 18:38:49.503"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:49.496" endtime="20201030 18:38:49.503"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:38:49.507" endtime="20201030 18:38:49.527"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:49.506" endtime="20201030 18:38:49.527"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:49.504" endtime="20201030 18:38:49.528"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:49.128" endtime="20201030 18:38:49.528"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:49.128" endtime="20201030 18:38:49.528"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:49.537" endtime="20201030 18:38:49.553"></status>
</kw>
<msg timestamp="20201030 18:38:49.554" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:38:49.535" endtime="20201030 18:38:49.554"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:38:49.556" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:38:49.555" endtime="20201030 18:38:49.557"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:49.557" endtime="20201030 18:38:49.559"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:49.532" endtime="20201030 18:38:49.559"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:49.530" endtime="20201030 18:38:49.560"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:49.566" endtime="20201030 18:38:49.852"></status>
</kw>
<msg timestamp="20201030 18:38:49.855" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020862458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020883444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:38:49.565" endtime="20201030 18:38:49.855"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:38:49.863" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020862458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020883444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:38:49.856" endtime="20201030 18:38:49.864"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:49.864" endtime="20201030 18:38:49.866"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:49.562" endtime="20201030 18:38:49.867"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:49.560" endtime="20201030 18:38:49.867"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:38:49.871" level="INFO">${RESULT} = [{'diff': 2.0986000000000615e-05}, {'diff': 2.162500000000081e-05}, {'diff': 2.1778000000000075e-05}, {'diff': 2.1541999999999395e-05}, {'diff': 2.161100000000124e-05}, {'diff': 2.1443999999998936e-05...</msg>
<status status="PASS" starttime="20201030 18:38:49.868" endtime="20201030 18:38:49.871"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:38:49.875" level="INFO">${ACCURACY} = {'diff': [2.0986000000000615e-05, 2.162500000000081e-05, 2.1778000000000075e-05, 2.1541999999999395e-05, 2.161100000000124e-05, 2.1443999999998936e-05, 2.179100000000017e-05, 2.17770000000006e-05, 2.1...</msg>
<status status="PASS" starttime="20201030 18:38:49.872" endtime="20201030 18:38:49.875"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:38:49.880" level="INFO">NAME: accuracy-TIMER_SET-17-philip</msg>
<status status="PASS" starttime="20201030 18:38:49.879" endtime="20201030 18:38:49.880"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:38:49.882" level="INFO">VALUE: [2.0986000000000615e-05, 2.162500000000081e-05, 2.1778000000000075e-05, 2.1541999999999395e-05, 2.161100000000124e-05, 2.1443999999998936e-05, 2.179100000000017e-05, 2.17770000000006e-05, 2.1084000000001074e-05, 2.111100000000074e-05, 2.180499999999974e-05, 2.10969999999977e-05, 2.0944000000001906e-05, 2.186100000000149e-05, 2.1916000000000296e-05, 2.0943999999998436e-05, 2.181899999999931e-05, 2.1750000000000935e-05, 2.1666000000000046e-05, 2.1250000000000435e-05, 2.180499999999974e-05, 2.105499999999899e-05, 2.191699999999977e-05, 2.1208000000001725e-05, 2.0930000000002336e-05, 2.134700000000142e-05, 2.131899999999881e-05, 2.186099999999802e-05, 2.1805999999999215e-05, 2.161099999999777e-05, 2.1013999999999755e-05, 2.115300000000292e-05, 2.145900000000145e-05, 2.1291999999999145e-05, 2.12770000000001e-05, 2.1848000000001394e-05, 2.15969999999982e-05, 2.1764000000000505e-05, 2.116699999999902e-05, 2.191699999999977e-05, 2.1778000000000075e-05, 2.123700000000034e-05, 2.14029999999997e-05, 2.1112000000000214e-05, 2.147300000000102e-05, 2.1180000000002586e-05, 2.188900000000063e-05, 2.1680000000003086e-05, 2.1652000000000476e-05, 2.1693999999999186e-05]</msg>
<status status="PASS" starttime="20201030 18:38:49.881" endtime="20201030 18:38:49.884"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:49.876" endtime="20201030 18:38:49.884"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:38:49.888" endtime="20201030 18:38:49.907"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:49.887" endtime="20201030 18:38:49.908"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:49.885" endtime="20201030 18:38:49.908"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:49.529" endtime="20201030 18:38:49.909"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:49.528" endtime="20201030 18:38:49.909"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:49.918" endtime="20201030 18:38:49.934"></status>
</kw>
<msg timestamp="20201030 18:38:49.935" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:38:49.916" endtime="20201030 18:38:49.935"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:38:49.937" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:38:49.936" endtime="20201030 18:38:49.938"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:49.938" endtime="20201030 18:38:49.940"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:49.913" endtime="20201030 18:38:49.941"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:49.911" endtime="20201030 18:38:49.941"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:49.949" endtime="20201030 18:38:50.235"></status>
</kw>
<msg timestamp="20201030 18:38:50.238" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020304375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020327278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:38:49.948" endtime="20201030 18:38:50.238"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:38:50.246" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020304375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020327278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:38:50.239" endtime="20201030 18:38:50.246"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:50.247" endtime="20201030 18:38:50.249"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:49.945" endtime="20201030 18:38:50.249"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:49.942" endtime="20201030 18:38:50.250"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:38:50.254" level="INFO">${RESULT} = [{'diff': 2.29030000000012e-05}, {'diff': 2.204100000000042e-05}, {'diff': 2.230500000000024e-05}, {'diff': 2.2166000000000546e-05}, {'diff': 2.2679999999997147e-05}, {'diff': 2.293100000000034e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:38:50.250" endtime="20201030 18:38:50.254"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:38:50.259" level="INFO">${ACCURACY} = {'diff': [2.29030000000012e-05, 2.204100000000042e-05, 2.230500000000024e-05, 2.2166000000000546e-05, 2.2679999999997147e-05, 2.293100000000034e-05, 2.2528000000000825e-05, 2.238900000000113e-05, 2.27...</msg>
<status status="PASS" starttime="20201030 18:38:50.255" endtime="20201030 18:38:50.259"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:38:50.263" level="INFO">NAME: accuracy-TIMER_SET-18-philip</msg>
<status status="PASS" starttime="20201030 18:38:50.262" endtime="20201030 18:38:50.263"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:38:50.266" level="INFO">VALUE: [2.29030000000012e-05, 2.204100000000042e-05, 2.230500000000024e-05, 2.2166000000000546e-05, 2.2679999999997147e-05, 2.293100000000034e-05, 2.2528000000000825e-05, 2.238900000000113e-05, 2.2707999999999756e-05, 2.2707999999999756e-05, 2.1929999999999866e-05, 2.25969999999992e-05, 2.2499999999998216e-05, 2.2320000000002754e-05, 2.2471999999999076e-05, 2.2069999999999035e-05, 2.220899999999873e-05, 2.265300000000095e-05, 2.218099999999959e-05, 2.234700000000242e-05, 2.270899999999923e-05, 2.258299999999963e-05, 2.2055999999999465e-05, 2.2680000000000616e-05, 2.24030000000007e-05, 2.2098000000001644e-05, 2.2598000000002144e-05, 2.2651999999998007e-05, 2.2026999999997382e-05, 2.2694000000000186e-05, 2.237500000000156e-05, 2.252700000000135e-05, 2.2388000000001657e-05, 2.2250000000001435e-05, 2.25969999999992e-05, 2.2542000000000395e-05, 2.2166000000000546e-05, 2.284699999999945e-05, 2.2513999999997786e-05, 2.237500000000156e-05, 2.2250000000001435e-05, 2.2430000000000366e-05, 2.280500000000074e-05, 2.258299999999963e-05, 2.2207999999999256e-05, 2.238900000000113e-05, 2.219499999999916e-05, 2.219499999999916e-05, 2.2930000000000866e-05, 2.234699999999895e-05]</msg>
<status status="PASS" starttime="20201030 18:38:50.264" endtime="20201030 18:38:50.270"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:50.259" endtime="20201030 18:38:50.271"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:38:50.274" endtime="20201030 18:38:50.294"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:50.273" endtime="20201030 18:38:50.294"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:50.272" endtime="20201030 18:38:50.295"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:49.910" endtime="20201030 18:38:50.295"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:49.909" endtime="20201030 18:38:50.295"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:50.304" endtime="20201030 18:38:50.319"></status>
</kw>
<msg timestamp="20201030 18:38:50.320" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:38:50.302" endtime="20201030 18:38:50.320"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:38:50.322" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:38:50.321" endtime="20201030 18:38:50.322"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:50.323" endtime="20201030 18:38:50.325"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:50.300" endtime="20201030 18:38:50.325"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:50.298" endtime="20201030 18:38:50.326"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:50.332" endtime="20201030 18:38:50.619"></status>
</kw>
<msg timestamp="20201030 18:38:50.623" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019819181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019842597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:38:50.330" endtime="20201030 18:38:50.623"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:38:50.631" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019819181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019842597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:38:50.624" endtime="20201030 18:38:50.631"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:50.632" endtime="20201030 18:38:50.634"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:50.328" endtime="20201030 18:38:50.634"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:50.326" endtime="20201030 18:38:50.635"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:38:50.639" level="INFO">${RESULT} = [{'diff': 2.3415999999998327e-05}, {'diff': 2.3707999999997287e-05}, {'diff': 2.3735999999999896e-05}, {'diff': 2.3513999999998786e-05}, {'diff': 2.319500000000016e-05}, {'diff': 2.3527999999998356e-0...</msg>
<status status="PASS" starttime="20201030 18:38:50.635" endtime="20201030 18:38:50.639"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:38:50.643" level="INFO">${ACCURACY} = {'diff': [2.3415999999998327e-05, 2.3707999999997287e-05, 2.3735999999999896e-05, 2.3513999999998786e-05, 2.319500000000016e-05, 2.3527999999998356e-05, 2.35970000000002e-05, 2.3249999999998966e-05, 2...</msg>
<status status="PASS" starttime="20201030 18:38:50.640" endtime="20201030 18:38:50.643"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:38:50.647" level="INFO">NAME: accuracy-TIMER_SET-19-philip</msg>
<status status="PASS" starttime="20201030 18:38:50.646" endtime="20201030 18:38:50.648"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:38:50.650" level="INFO">VALUE: [2.3415999999998327e-05, 2.3707999999997287e-05, 2.3735999999999896e-05, 2.3513999999998786e-05, 2.319500000000016e-05, 2.3527999999998356e-05, 2.35970000000002e-05, 2.3249999999998966e-05, 2.3528000000001825e-05, 2.3347999999999425e-05, 2.362500000000281e-05, 2.341700000000127e-05, 2.369500000000066e-05, 2.388900000000263e-05, 2.3249999999998966e-05, 2.3014000000001755e-05, 2.391700000000177e-05, 2.294499999999991e-05, 2.394500000000091e-05, 2.3541999999997926e-05, 2.35970000000002e-05, 2.365299999999848e-05, 2.315299999999798e-05, 2.3708000000000756e-05, 2.3762999999999562e-05, 2.311099999999927e-05, 2.3402000000002227e-05, 2.3735999999999896e-05, 2.304100000000142e-05, 2.336100000000299e-05, 2.312500000000231e-05, 2.331900000000081e-05, 2.3708000000000756e-05, 2.3582999999997162e-05, 2.3304999999997772e-05, 2.337499999999909e-05, 2.3221999999999826e-05, 2.311100000000274e-05, 2.3722000000000326e-05, 2.393100000000134e-05, 2.308300000000013e-05, 2.334699999999995e-05, 2.313899999999841e-05, 2.3249999999998966e-05, 2.336099999999952e-05, 2.336099999999952e-05, 2.388899999999916e-05, 2.3098000000002644e-05, 2.3570000000000535e-05, 2.294499999999991e-05]</msg>
<status status="PASS" starttime="20201030 18:38:50.648" endtime="20201030 18:38:50.651"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:50.644" endtime="20201030 18:38:50.651"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:38:50.655" endtime="20201030 18:38:50.674"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:50.653" endtime="20201030 18:38:50.675"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:50.652" endtime="20201030 18:38:50.675"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:50.296" endtime="20201030 18:38:50.675"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:50.295" endtime="20201030 18:38:50.675"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:50.684" endtime="20201030 18:38:50.700"></status>
</kw>
<msg timestamp="20201030 18:38:50.701" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:38:50.683" endtime="20201030 18:38:50.701"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:38:50.703" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:38:50.702" endtime="20201030 18:38:50.703"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:50.704" endtime="20201030 18:38:50.706"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:50.680" endtime="20201030 18:38:50.706"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:50.678" endtime="20201030 18:38:50.707"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:50.713" endtime="20201030 18:38:51.016"></status>
</kw>
<msg timestamp="20201030 18:38:51.019" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020605153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020629722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:38:50.711" endtime="20201030 18:38:51.019"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:38:51.027" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020605153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020629722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:38:51.020" endtime="20201030 18:38:51.028"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:51.028" endtime="20201030 18:38:51.030"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:50.709" endtime="20201030 18:38:51.030"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:50.707" endtime="20201030 18:38:51.031"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:38:51.035" level="INFO">${RESULT} = [{'diff': 2.4568999999998592e-05}, {'diff': 2.3957999999997537e-05}, {'diff': 2.3999999999999716e-05}, {'diff': 2.4736000000000896e-05}, {'diff': 2.4513999999999786e-05}, {'diff': 2.438899999999966e-0...</msg>
<status status="PASS" starttime="20201030 18:38:51.032" endtime="20201030 18:38:51.035"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:38:51.039" level="INFO">${ACCURACY} = {'diff': [2.4568999999998592e-05, 2.3957999999997537e-05, 2.3999999999999716e-05, 2.4736000000000896e-05, 2.4513999999999786e-05, 2.438899999999966e-05, 2.487500000000059e-05, 2.4693999999998717e-05, ...</msg>
<status status="PASS" starttime="20201030 18:38:51.036" endtime="20201030 18:38:51.039"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:38:51.043" level="INFO">NAME: accuracy-TIMER_SET-20-philip</msg>
<status status="PASS" starttime="20201030 18:38:51.042" endtime="20201030 18:38:51.044"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:38:51.046" level="INFO">VALUE: [2.4568999999998592e-05, 2.3957999999997537e-05, 2.3999999999999716e-05, 2.4736000000000896e-05, 2.4513999999999786e-05, 2.438899999999966e-05, 2.487500000000059e-05, 2.4693999999998717e-05, 2.465299999999948e-05, 2.4222000000000826e-05, 2.4750000000000466e-05, 2.487500000000059e-05, 2.4332999999997912e-05, 2.4291999999998676e-05, 2.483300000000188e-05, 2.4528000000002825e-05, 2.4777999999999606e-05, 2.436100000000052e-05, 2.4846999999997982e-05, 2.462500000000034e-05, 2.415299999999898e-05, 2.45970000000012e-05, 2.4361999999999995e-05, 2.395899999999701e-05, 2.4348000000000425e-05, 2.4026999999999382e-05, 2.406900000000156e-05, 2.4598000000000675e-05, 2.4582999999998162e-05, 2.4180000000002116e-05, 2.487500000000059e-05, 2.4040999999998952e-05, 2.4652000000000007e-05, 2.4818999999998842e-05, 2.40970000000007e-05, 2.413899999999941e-05, 2.4249999999999966e-05, 2.4165999999999077e-05, 2.4028000000002325e-05, 2.388899999999916e-05, 2.436100000000052e-05, 2.431900000000181e-05, 2.4708000000001756e-05, 2.416700000000202e-05, 2.4070000000001035e-05, 2.4722000000001326e-05, 2.4013999999999286e-05, 2.4319999999997816e-05, 2.4014000000002755e-05, 2.433300000000138e-05]</msg>
<status status="PASS" starttime="20201030 18:38:51.044" endtime="20201030 18:38:51.047"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:51.040" endtime="20201030 18:38:51.048"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:38:51.051" endtime="20201030 18:38:51.071"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:51.050" endtime="20201030 18:38:51.071"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:51.049" endtime="20201030 18:38:51.072"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:50.676" endtime="20201030 18:38:51.072"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:50.676" endtime="20201030 18:38:51.072"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:51.081" endtime="20201030 18:38:51.096"></status>
</kw>
<msg timestamp="20201030 18:38:51.097" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:38:51.079" endtime="20201030 18:38:51.097"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:38:51.099" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:38:51.098" endtime="20201030 18:38:51.100"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:51.100" endtime="20201030 18:38:51.102"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:51.077" endtime="20201030 18:38:51.102"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:51.075" endtime="20201030 18:38:51.103"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:51.109" endtime="20201030 18:38:51.396"></status>
</kw>
<msg timestamp="20201030 18:38:51.399" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019500764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019525861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:38:51.108" endtime="20201030 18:38:51.399"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:38:51.407" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019500764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019525861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:38:51.400" endtime="20201030 18:38:51.408"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:51.408" endtime="20201030 18:38:51.410"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:51.105" endtime="20201030 18:38:51.410"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:51.103" endtime="20201030 18:38:51.411"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:38:51.415" level="INFO">${RESULT} = [{'diff': 2.5096999999998232e-05}, {'diff': 2.511100000000127e-05}, {'diff': 2.590300000000073e-05}, {'diff': 2.4943999999998967e-05}, {'diff': 2.59170000000003e-05}, {'diff': 2.5278000000000106e-05},...</msg>
<status status="PASS" starttime="20201030 18:38:51.412" endtime="20201030 18:38:51.415"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:38:51.422" level="INFO">${ACCURACY} = {'diff': [2.5096999999998232e-05, 2.511100000000127e-05, 2.590300000000073e-05, 2.4943999999998967e-05, 2.59170000000003e-05, 2.5278000000000106e-05, 2.512500000000084e-05, 2.493100000000234e-05, 2.56...</msg>
<status status="PASS" starttime="20201030 18:38:51.416" endtime="20201030 18:38:51.423"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:38:51.427" level="INFO">NAME: accuracy-TIMER_SET-21-philip</msg>
<status status="PASS" starttime="20201030 18:38:51.426" endtime="20201030 18:38:51.427"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:38:51.429" level="INFO">VALUE: [2.5096999999998232e-05, 2.511100000000127e-05, 2.590300000000073e-05, 2.4943999999998967e-05, 2.59170000000003e-05, 2.5278000000000106e-05, 2.512500000000084e-05, 2.493100000000234e-05, 2.566700000000005e-05, 2.5610999999998302e-05, 2.5070000000002035e-05, 2.4958000000002006e-05, 2.5250000000000966e-05, 2.5334000000001855e-05, 2.538900000000066e-05, 2.5291999999999676e-05, 2.5055999999998996e-05, 2.5250000000000966e-05, 2.566700000000005e-05, 2.5597999999998206e-05, 2.547300000000155e-05, 2.5305999999999246e-05, 2.5596999999998732e-05, 2.536100000000152e-05, 2.536100000000152e-05, 2.5250000000000966e-05, 2.5846999999998982e-05, 2.563900000000091e-05, 2.536100000000152e-05, 2.5818999999999842e-05, 2.5818999999999842e-05, 2.5179999999999647e-05, 2.508300000000213e-05, 2.513900000000041e-05, 2.537500000000109e-05, 2.5305999999999246e-05, 2.5555999999999496e-05, 2.588900000000116e-05, 2.5764000000001036e-05, 2.518099999999912e-05, 2.583300000000288e-05, 2.5582999999999162e-05, 2.5249999999997497e-05, 2.5528000000000356e-05, 2.5443999999999467e-05, 2.5820000000002785e-05, 2.5943999999999967e-05, 2.566700000000005e-05, 2.518099999999912e-05, 2.494499999999844e-05]</msg>
<status status="PASS" starttime="20201030 18:38:51.428" endtime="20201030 18:38:51.430"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:51.423" endtime="20201030 18:38:51.431"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:38:51.434" endtime="20201030 18:38:51.454"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:51.433" endtime="20201030 18:38:51.454"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:51.431" endtime="20201030 18:38:51.454"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:51.073" endtime="20201030 18:38:51.455"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:51.073" endtime="20201030 18:38:51.455"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:51.463" endtime="20201030 18:38:51.479"></status>
</kw>
<msg timestamp="20201030 18:38:51.480" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:38:51.462" endtime="20201030 18:38:51.480"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:38:51.482" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:38:51.481" endtime="20201030 18:38:51.482"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:51.483" endtime="20201030 18:38:51.485"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:51.459" endtime="20201030 18:38:51.485"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:51.457" endtime="20201030 18:38:51.486"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:51.492" endtime="20201030 18:38:51.779"></status>
</kw>
<msg timestamp="20201030 18:38:51.782" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019347778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019374667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:38:51.491" endtime="20201030 18:38:51.782"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:38:51.790" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019347778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019374667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:38:51.783" endtime="20201030 18:38:51.790"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:51.791" endtime="20201030 18:38:51.793"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:51.488" endtime="20201030 18:38:51.793"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:51.486" endtime="20201030 18:38:51.794"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:38:51.798" level="INFO">${RESULT} = [{'diff': 2.688900000000216e-05}, {'diff': 2.643100000000037e-05}, {'diff': 2.6069999999999566e-05}, {'diff': 2.62369999999984e-05}, {'diff': 2.6471999999999607e-05}, {'diff': 2.6749999999998997e-05},...</msg>
<status status="PASS" starttime="20201030 18:38:51.794" endtime="20201030 18:38:51.798"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:38:51.802" level="INFO">${ACCURACY} = {'diff': [2.688900000000216e-05, 2.643100000000037e-05, 2.6069999999999566e-05, 2.62369999999984e-05, 2.6471999999999607e-05, 2.6749999999998997e-05, 2.647299999999908e-05, 2.6598000000002675e-05, 2.6...</msg>
<status status="PASS" starttime="20201030 18:38:51.799" endtime="20201030 18:38:51.802"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:38:51.806" level="INFO">NAME: accuracy-TIMER_SET-22-philip</msg>
<status status="PASS" starttime="20201030 18:38:51.805" endtime="20201030 18:38:51.807"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:38:51.809" level="INFO">VALUE: [2.688900000000216e-05, 2.643100000000037e-05, 2.6069999999999566e-05, 2.62369999999984e-05, 2.6471999999999607e-05, 2.6749999999998997e-05, 2.647299999999908e-05, 2.6598000000002675e-05, 2.6290999999997733e-05, 2.6304999999997303e-05, 2.6555000000001022e-05, 2.6762999999999093e-05, 2.5999999999998247e-05, 2.5943999999999967e-05, 2.6096999999999232e-05, 2.6735999999999427e-05, 2.6957999999997068e-05, 2.6014000000001286e-05, 2.6430000000000897e-05, 2.6583999999999636e-05, 2.647300000000255e-05, 2.5944000000003437e-05, 2.69170000000013e-05, 2.6749999999998997e-05, 2.5944000000003437e-05, 2.6471999999999607e-05, 2.668100000000062e-05, 2.6792000000001176e-05, 2.6360999999999052e-05, 2.597299999999858e-05, 2.6721999999999857e-05, 2.6263999999998067e-05, 2.6874999999999122e-05, 2.6957999999997068e-05, 2.6361999999998526e-05, 2.6624999999998872e-05, 2.6054999999997053e-05, 2.6042000000000426e-05, 2.5999999999998247e-05, 2.6763999999998567e-05, 2.6166000000001077e-05, 2.6680000000001147e-05, 2.6651999999998538e-05, 2.6235999999998927e-05, 2.6750000000002466e-05, 2.641699999999733e-05, 2.6374999999998622e-05, 2.6764000000002036e-05, 2.6082999999999662e-05, 2.6346999999999482e-05]</msg>
<status status="PASS" starttime="20201030 18:38:51.807" endtime="20201030 18:38:51.809"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:51.803" endtime="20201030 18:38:51.810"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:38:51.814" endtime="20201030 18:38:51.833"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:51.812" endtime="20201030 18:38:51.834"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:51.811" endtime="20201030 18:38:51.834"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:51.456" endtime="20201030 18:38:51.834"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:51.455" endtime="20201030 18:38:51.834"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:51.843" endtime="20201030 18:38:51.860"></status>
</kw>
<msg timestamp="20201030 18:38:51.860" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:38:51.841" endtime="20201030 18:38:51.861"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:38:51.863" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:38:51.861" endtime="20201030 18:38:51.863"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:51.864" endtime="20201030 18:38:51.865"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:51.839" endtime="20201030 18:38:51.866"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:51.837" endtime="20201030 18:38:51.866"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:51.873" endtime="20201030 18:38:52.159"></status>
</kw>
<msg timestamp="20201030 18:38:52.162" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020248167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020275944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:38:51.871" endtime="20201030 18:38:52.162"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:38:52.170" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020248167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020275944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:38:52.163" endtime="20201030 18:38:52.170"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:52.171" endtime="20201030 18:38:52.173"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:51.869" endtime="20201030 18:38:52.173"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:51.867" endtime="20201030 18:38:52.174"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:38:52.178" level="INFO">${RESULT} = [{'diff': 2.7776999999999663e-05}, {'diff': 2.7679999999998678e-05}, {'diff': 2.7708000000001287e-05}, {'diff': 2.7790999999999233e-05}, {'diff': 2.7110999999999802e-05}, {'diff': 2.7847000000000982e-...</msg>
<status status="PASS" starttime="20201030 18:38:52.175" endtime="20201030 18:38:52.178"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:38:52.182" level="INFO">${ACCURACY} = {'diff': [2.7776999999999663e-05, 2.7679999999998678e-05, 2.7708000000001287e-05, 2.7790999999999233e-05, 2.7110999999999802e-05, 2.7847000000000982e-05, 2.7597000000000732e-05, 2.7042000000001426e-05...</msg>
<status status="PASS" starttime="20201030 18:38:52.179" endtime="20201030 18:38:52.182"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:38:52.186" level="INFO">NAME: accuracy-TIMER_SET-23-philip</msg>
<status status="PASS" starttime="20201030 18:38:52.185" endtime="20201030 18:38:52.187"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:38:52.189" level="INFO">VALUE: [2.7776999999999663e-05, 2.7679999999998678e-05, 2.7708000000001287e-05, 2.7790999999999233e-05, 2.7110999999999802e-05, 2.7847000000000982e-05, 2.7597000000000732e-05, 2.7042000000001426e-05, 2.7610999999996833e-05, 2.7235999999999927e-05, 2.7320000000000816e-05, 2.7722000000000857e-05, 2.716700000000155e-05, 2.79309999999984e-05, 2.7638999999999442e-05, 2.7819999999997846e-05, 2.7278000000002106e-05, 2.7249999999999497e-05, 2.7584000000000636e-05, 2.7763999999999567e-05, 2.744500000000094e-05, 2.7763999999999567e-05, 2.7888999999999692e-05, 2.720900000000026e-05, 2.7624999999999872e-05, 2.7736000000000427e-05, 2.716700000000155e-05, 2.7249999999999497e-05, 2.7194000000001217e-05, 2.7193999999997748e-05, 2.7472000000000607e-05, 2.6958000000000537e-05, 2.7235999999999927e-05, 2.7694000000001717e-05, 2.7554999999998553e-05, 2.794500000000144e-05, 2.7166000000002077e-05, 2.7361000000000052e-05, 2.79170000000023e-05, 2.7833000000001412e-05, 2.7249999999999497e-05, 2.6972000000000107e-05, 2.7708000000001287e-05, 2.7570000000001066e-05, 2.7347000000000482e-05, 2.7584000000000636e-05, 2.7291999999998207e-05, 2.7472000000000607e-05, 2.7902999999999262e-05, 2.768099999999815e-05]</msg>
<status status="PASS" starttime="20201030 18:38:52.188" endtime="20201030 18:38:52.190"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:52.183" endtime="20201030 18:38:52.191"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:38:52.195" endtime="20201030 18:38:52.214"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:52.193" endtime="20201030 18:38:52.215"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:52.192" endtime="20201030 18:38:52.215"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:51.835" endtime="20201030 18:38:52.215"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:51.835" endtime="20201030 18:38:52.215"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:52.224" endtime="20201030 18:38:52.241"></status>
</kw>
<msg timestamp="20201030 18:38:52.241" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:38:52.222" endtime="20201030 18:38:52.241"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:38:52.244" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:38:52.242" endtime="20201030 18:38:52.244"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:52.245" endtime="20201030 18:38:52.246"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:52.220" endtime="20201030 18:38:52.247"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:52.218" endtime="20201030 18:38:52.247"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:52.254" endtime="20201030 18:38:52.539"></status>
</kw>
<msg timestamp="20201030 18:38:52.542" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019561736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019590153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:38:52.252" endtime="20201030 18:38:52.542"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:38:52.551" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019561736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019590153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:38:52.544" endtime="20201030 18:38:52.551"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:52.552" endtime="20201030 18:38:52.554"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:52.250" endtime="20201030 18:38:52.554"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:52.248" endtime="20201030 18:38:52.555"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:38:52.558" level="INFO">${RESULT} = [{'diff': 2.841699999999933e-05}, {'diff': 2.8389000000000192e-05}, {'diff': 2.8319999999998346e-05}, {'diff': 2.8819999999998847e-05}, {'diff': 2.8778000000000137e-05}, {'diff': 2.8862000000001026e-0...</msg>
<status status="PASS" starttime="20201030 18:38:52.555" endtime="20201030 18:38:52.559"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:38:52.563" level="INFO">${ACCURACY} = {'diff': [2.841699999999933e-05, 2.8389000000000192e-05, 2.8319999999998346e-05, 2.8819999999998847e-05, 2.8778000000000137e-05, 2.8862000000001026e-05, 2.791699999999883e-05, 2.8138999999999942e-05, ...</msg>
<status status="PASS" starttime="20201030 18:38:52.559" endtime="20201030 18:38:52.564"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:38:52.568" level="INFO">NAME: accuracy-TIMER_SET-24-philip</msg>
<status status="PASS" starttime="20201030 18:38:52.567" endtime="20201030 18:38:52.568"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:38:52.571" level="INFO">VALUE: [2.841699999999933e-05, 2.8389000000000192e-05, 2.8319999999998346e-05, 2.8819999999998847e-05, 2.8778000000000137e-05, 2.8862000000001026e-05, 2.791699999999883e-05, 2.8138999999999942e-05, 2.8610999999997833e-05, 2.816699999999908e-05, 2.8402999999999762e-05, 2.8568999999999123e-05, 2.7943999999998498e-05, 2.8013999999999817e-05, 2.8666000000000108e-05, 2.8680000000003147e-05, 2.8846999999998513e-05, 2.8791000000000233e-05, 2.8402999999999762e-05, 2.8514000000000317e-05, 2.8332999999998443e-05, 2.8860999999998083e-05, 2.8805999999999277e-05, 2.8778000000000137e-05, 2.84309999999989e-05, 2.8055999999998527e-05, 2.8888000000001218e-05, 2.79309999999984e-05, 2.8027999999999387e-05, 2.8833999999998416e-05, 2.8666999999999582e-05, 2.8332999999998443e-05, 2.8389000000000192e-05, 2.8820000000002316e-05, 2.8027999999999387e-05, 2.8542000000002926e-05, 2.8653000000000012e-05, 2.86379999999975e-05, 2.840300000000323e-05, 2.8083000000001662e-05, 2.8000000000000247e-05, 2.8763000000001093e-05, 2.8193999999998748e-05, 2.8040999999999483e-05, 2.8638999999996972e-05, 2.8430000000002897e-05, 2.8833000000002412e-05, 2.8568999999999123e-05, 2.8221999999997888e-05, 2.7986000000000677e-05]</msg>
<status status="PASS" starttime="20201030 18:38:52.569" endtime="20201030 18:38:52.571"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:52.564" endtime="20201030 18:38:52.572"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:38:52.576" endtime="20201030 18:38:52.595"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:52.574" endtime="20201030 18:38:52.596"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:52.573" endtime="20201030 18:38:52.596"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:52.216" endtime="20201030 18:38:52.596"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:52.216" endtime="20201030 18:38:52.596"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:52.605" endtime="20201030 18:38:52.620"></status>
</kw>
<msg timestamp="20201030 18:38:52.621" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:38:52.603" endtime="20201030 18:38:52.621"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:38:52.623" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:38:52.622" endtime="20201030 18:38:52.624"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:52.624" endtime="20201030 18:38:52.626"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:52.601" endtime="20201030 18:38:52.627"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:52.599" endtime="20201030 18:38:52.627"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:52.633" endtime="20201030 18:38:52.921"></status>
</kw>
<msg timestamp="20201030 18:38:52.924" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019441847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019471431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:38:52.632" endtime="20201030 18:38:52.924"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:38:52.932" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019441847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019471431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:38:52.925" endtime="20201030 18:38:52.933"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:52.934" endtime="20201030 18:38:52.935"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:52.629" endtime="20201030 18:38:52.936"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:52.628" endtime="20201030 18:38:52.936"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:38:52.940" level="INFO">${RESULT} = [{'diff': 2.9583999999999167e-05}, {'diff': 2.9027999999996917e-05}, {'diff': 2.9750000000001997e-05}, {'diff': 2.947300000000208e-05}, {'diff': 2.966599999999764e-05}, {'diff': 2.972300000000233e-05}...</msg>
<status status="PASS" starttime="20201030 18:38:52.937" endtime="20201030 18:38:52.941"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:38:52.944" level="INFO">${ACCURACY} = {'diff': [2.9583999999999167e-05, 2.9027999999996917e-05, 2.9750000000001997e-05, 2.947300000000208e-05, 2.966599999999764e-05, 2.972300000000233e-05, 2.9124999999997903e-05, 2.9318999999999873e-05, 2...</msg>
<status status="PASS" starttime="20201030 18:38:52.941" endtime="20201030 18:38:52.945"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:38:52.949" level="INFO">NAME: accuracy-TIMER_SET-25-philip</msg>
<status status="PASS" starttime="20201030 18:38:52.948" endtime="20201030 18:38:52.949"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:38:52.951" level="INFO">VALUE: [2.9583999999999167e-05, 2.9027999999996917e-05, 2.9750000000001997e-05, 2.947300000000208e-05, 2.966599999999764e-05, 2.972300000000233e-05, 2.9124999999997903e-05, 2.9318999999999873e-05, 2.9124999999997903e-05, 2.9180000000000178e-05, 2.9874999999998653e-05, 2.9569000000000123e-05, 2.9763999999998098e-05, 2.9735999999998958e-05, 2.9652999999997542e-05, 2.9250000000001497e-05, 2.9222000000002357e-05, 2.9499999999998278e-05, 2.9721999999999388e-05, 2.9332999999999443e-05, 2.9750000000001997e-05, 2.8971999999998638e-05, 2.9486000000002177e-05, 2.9944000000000498e-05, 2.9749999999998528e-05, 2.9791999999997237e-05, 2.9778000000001137e-05, 2.9389000000001192e-05, 2.9153000000000512e-05, 2.994499999999997e-05, 2.9555000000000553e-05, 2.898700000000115e-05, 2.9319999999999347e-05, 2.9625000000001872e-05, 2.8944000000002967e-05, 2.9611000000002302e-05, 2.9110999999998333e-05, 2.9846999999999513e-05, 2.9680000000000678e-05, 2.9805000000000803e-05, 2.9055000000000053e-05, 2.9832999999999943e-05, 2.9374999999998153e-05, 2.9055000000000053e-05, 2.9903000000001262e-05, 2.9250000000001497e-05, 2.9028000000000387e-05, 2.9000000000001247e-05, 2.9235999999998458e-05, 2.9082999999999193e-05]</msg>
<status status="PASS" starttime="20201030 18:38:52.950" endtime="20201030 18:38:52.952"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:52.945" endtime="20201030 18:38:52.953"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:38:52.957" endtime="20201030 18:38:52.976"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:52.955" endtime="20201030 18:38:52.977"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:52.954" endtime="20201030 18:38:52.977"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:52.597" endtime="20201030 18:38:52.978"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:52.597" endtime="20201030 18:38:52.978"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:52.987" endtime="20201030 18:38:53.004"></status>
</kw>
<msg timestamp="20201030 18:38:53.004" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:38:52.985" endtime="20201030 18:38:53.005"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:38:53.007" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:38:53.005" endtime="20201030 18:38:53.007"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:53.008" endtime="20201030 18:38:53.009"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:52.983" endtime="20201030 18:38:53.010"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:52.980" endtime="20201030 18:38:53.010"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:53.017" endtime="20201030 18:38:53.322"></status>
</kw>
<msg timestamp="20201030 18:38:53.325" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021913625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021944458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:38:53.015" endtime="20201030 18:38:53.325"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:38:53.333" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021913625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021944458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:38:53.326" endtime="20201030 18:38:53.334"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:53.334" endtime="20201030 18:38:53.336"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:53.013" endtime="20201030 18:38:53.337"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:53.011" endtime="20201030 18:38:53.337"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:38:53.341" level="INFO">${RESULT} = [{'diff': 3.083300000000094e-05}, {'diff': 3.0276999999998694e-05}, {'diff': 2.9985999999999208e-05}, {'diff': 3.0374999999999153e-05}, {'diff': 3.065299999999854e-05}, {'diff': 3.0263999999998598e-05...</msg>
<status status="PASS" starttime="20201030 18:38:53.338" endtime="20201030 18:38:53.341"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:38:53.346" level="INFO">${ACCURACY} = {'diff': [3.083300000000094e-05, 3.0276999999998694e-05, 2.9985999999999208e-05, 3.0374999999999153e-05, 3.065299999999854e-05, 3.0263999999998598e-05, 3.069400000000125e-05, 3.063899999999897e-05, 3....</msg>
<status status="PASS" starttime="20201030 18:38:53.342" endtime="20201030 18:38:53.346"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:38:53.351" level="INFO">NAME: accuracy-TIMER_SET-26-philip</msg>
<status status="PASS" starttime="20201030 18:38:53.350" endtime="20201030 18:38:53.351"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:38:53.353" level="INFO">VALUE: [3.083300000000094e-05, 3.0276999999998694e-05, 2.9985999999999208e-05, 3.0374999999999153e-05, 3.065299999999854e-05, 3.0263999999998598e-05, 3.069400000000125e-05, 3.063899999999897e-05, 3.0320000000000347e-05, 3.044500000000047e-05, 3.0194000000000748e-05, 3.072200000000039e-05, 2.9985999999999208e-05, 3.077799999999867e-05, 3.0360999999999583e-05, 3.087500000000312e-05, 3.086100000000008e-05, 3.094500000000097e-05, 3.0249999999999028e-05, 3.0499999999999278e-05, 3.013800000000247e-05, 3.0417000000001332e-05, 3.0152000000002038e-05, 3.0291999999997737e-05, 3.091700000000183e-05, 2.9971999999999638e-05, 3.0444000000000998e-05, 3.0431000000000902e-05, 3.0304999999997834e-05, 3.069400000000125e-05, 3.0124999999998903e-05, 3.0138999999998473e-05, 3.0097000000003232e-05, 3.0416999999997862e-05, 3.077799999999867e-05, 3.090299999999879e-05, 3.0500000000002747e-05, 3.0431000000000902e-05, 3.058300000000069e-05, 3.0125000000002372e-05, 3.0320000000000347e-05, 3.052800000000189e-05, 3.065299999999854e-05, 3.091600000000236e-05, 3.065299999999854e-05, 3.044500000000047e-05, 3.0153000000001512e-05, 3.0291999999997737e-05, 3.0333999999999917e-05, 3.0584000000000167e-05]</msg>
<status status="PASS" starttime="20201030 18:38:53.352" endtime="20201030 18:38:53.355"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:53.347" endtime="20201030 18:38:53.355"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:38:53.359" endtime="20201030 18:38:53.378"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:53.357" endtime="20201030 18:38:53.379"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:53.356" endtime="20201030 18:38:53.379"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:52.979" endtime="20201030 18:38:53.379"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:52.978" endtime="20201030 18:38:53.380"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:53.388" endtime="20201030 18:38:53.404"></status>
</kw>
<msg timestamp="20201030 18:38:53.404" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:38:53.387" endtime="20201030 18:38:53.404"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:38:53.407" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:38:53.405" endtime="20201030 18:38:53.407"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:53.408" endtime="20201030 18:38:53.410"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:53.384" endtime="20201030 18:38:53.410"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:53.382" endtime="20201030 18:38:53.410"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:53.417" endtime="20201030 18:38:53.704"></status>
</kw>
<msg timestamp="20201030 18:38:53.707" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0195865, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019617514, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:38:53.415" endtime="20201030 18:38:53.707"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:38:53.715" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0195865, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019617514, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:38:53.708" endtime="20201030 18:38:53.715"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:53.716" endtime="20201030 18:38:53.718"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:53.413" endtime="20201030 18:38:53.718"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:53.411" endtime="20201030 18:38:53.719"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:38:53.722" level="INFO">${RESULT} = [{'diff': 3.101399999999935e-05}, {'diff': 3.137500000000015e-05}, {'diff': 3.159700000000126e-05}, {'diff': 3.102799999999892e-05}, {'diff': 3.099999999999978e-05}, {'diff': 3.108300000000119e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:38:53.719" endtime="20201030 18:38:53.723"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:38:53.727" level="INFO">${ACCURACY} = {'diff': [3.101399999999935e-05, 3.137500000000015e-05, 3.159700000000126e-05, 3.102799999999892e-05, 3.099999999999978e-05, 3.108300000000119e-05, 3.109700000000076e-05, 3.163899999999997e-05, 3.1027...</msg>
<status status="PASS" starttime="20201030 18:38:53.723" endtime="20201030 18:38:53.728"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:38:53.732" level="INFO">NAME: accuracy-TIMER_SET-27-philip</msg>
<status status="PASS" starttime="20201030 18:38:53.731" endtime="20201030 18:38:53.732"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:38:53.734" level="INFO">VALUE: [3.101399999999935e-05, 3.137500000000015e-05, 3.159700000000126e-05, 3.102799999999892e-05, 3.099999999999978e-05, 3.108300000000119e-05, 3.109700000000076e-05, 3.163899999999997e-05, 3.102799999999892e-05, 3.183400000000142e-05, 3.168100000000215e-05, 3.123600000000046e-05, 3.119500000000122e-05, 3.119500000000122e-05, 3.1362000000000056e-05, 3.134700000000101e-05, 3.144399999999853e-05, 3.16250000000004e-05, 3.119400000000175e-05, 3.101399999999935e-05, 3.101399999999935e-05, 3.168000000000268e-05, 3.117999999999871e-05, 3.150000000000028e-05, 3.1846999999998044e-05, 3.1804999999999334e-05, 3.097199999999717e-05, 3.118100000000165e-05, 3.130599999999831e-05, 3.127799999999917e-05, 3.144500000000147e-05, 3.136100000000058e-05, 3.175000000000053e-05, 3.145800000000157e-05, 3.122300000000036e-05, 3.111099999999686e-05, 3.102800000000239e-05, 3.098600000000021e-05, 3.101399999999935e-05, 3.1763000000000624e-05, 3.140299999999929e-05, 3.123699999999993e-05, 3.137499999999668e-05, 3.127700000000316e-05, 3.187500000000065e-05, 3.11249999999999e-05, 3.108300000000119e-05, 3.129100000000273e-05, 3.1832999999998474e-05, 3.175000000000053e-05]</msg>
<status status="PASS" starttime="20201030 18:38:53.733" endtime="20201030 18:38:53.735"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:53.728" endtime="20201030 18:38:53.736"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:38:53.740" endtime="20201030 18:38:53.759"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:53.738" endtime="20201030 18:38:53.760"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:53.737" endtime="20201030 18:38:53.760"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:53.381" endtime="20201030 18:38:53.760"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:53.380" endtime="20201030 18:38:53.760"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:53.769" endtime="20201030 18:38:53.785"></status>
</kw>
<msg timestamp="20201030 18:38:53.785" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:38:53.767" endtime="20201030 18:38:53.786"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:38:53.788" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:38:53.787" endtime="20201030 18:38:53.788"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:53.789" endtime="20201030 18:38:53.791"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:53.765" endtime="20201030 18:38:53.791"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:53.763" endtime="20201030 18:38:53.792"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:53.798" endtime="20201030 18:38:54.084"></status>
</kw>
<msg timestamp="20201030 18:38:54.087" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019996972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020029556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:38:53.796" endtime="20201030 18:38:54.087"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:38:54.095" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019996972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020029556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:38:54.088" endtime="20201030 18:38:54.096"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:54.096" endtime="20201030 18:38:54.098"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:53.794" endtime="20201030 18:38:54.099"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:53.792" endtime="20201030 18:38:54.099"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:38:54.103" level="INFO">${RESULT} = [{'diff': 3.258400000000217e-05}, {'diff': 3.205599999999906e-05}, {'diff': 3.238799999999778e-05}, {'diff': 3.252800000000042e-05}, {'diff': 3.26250000000014e-05}, {'diff': 3.21250000000009e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:38:54.100" endtime="20201030 18:38:54.103"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:38:54.107" level="INFO">${ACCURACY} = {'diff': [3.258400000000217e-05, 3.205599999999906e-05, 3.238799999999778e-05, 3.252800000000042e-05, 3.26250000000014e-05, 3.21250000000009e-05, 3.2291000000000264e-05, 3.265300000000054e-05, 3.26670...</msg>
<status status="PASS" starttime="20201030 18:38:54.104" endtime="20201030 18:38:54.107"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:38:54.111" level="INFO">NAME: accuracy-TIMER_SET-28-philip</msg>
<status status="PASS" starttime="20201030 18:38:54.110" endtime="20201030 18:38:54.112"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:38:54.114" level="INFO">VALUE: [3.258400000000217e-05, 3.205599999999906e-05, 3.238799999999778e-05, 3.252800000000042e-05, 3.26250000000014e-05, 3.21250000000009e-05, 3.2291000000000264e-05, 3.265300000000054e-05, 3.266700000000011e-05, 3.26250000000014e-05, 3.242999999999996e-05, 3.238900000000072e-05, 3.2846999999999044e-05, 3.230600000000278e-05, 3.215300000000004e-05, 3.2874999999998183e-05, 3.2582999999999224e-05, 3.258300000000269e-05, 3.21250000000009e-05, 3.19579999999986e-05, 3.199999999999731e-05, 3.201400000000035e-05, 3.2555000000000084e-05, 3.265299999999707e-05, 3.245899999999857e-05, 3.194500000000197e-05, 3.270900000000229e-05, 3.21250000000009e-05, 3.233300000000244e-05, 3.197200000000164e-05, 3.2027000000000444e-05, 3.268000000000021e-05, 3.2374999999997683e-05, 3.223600000000146e-05, 3.291700000000036e-05, 3.290299999999732e-05, 3.204199999999949e-05, 3.219400000000275e-05, 3.2582999999999224e-05, 3.245900000000204e-05, 3.213900000000047e-05, 3.265300000000054e-05, 3.238900000000072e-05, 3.206999999999863e-05, 3.255599999999956e-05, 3.2832999999999474e-05, 3.198600000000121e-05, 3.197200000000164e-05, 3.259800000000174e-05, 3.273599999999849e-05]</msg>
<status status="PASS" starttime="20201030 18:38:54.112" endtime="20201030 18:38:54.115"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:54.108" endtime="20201030 18:38:54.115"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:38:54.119" endtime="20201030 18:38:54.138"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:54.117" endtime="20201030 18:38:54.139"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:54.116" endtime="20201030 18:38:54.139"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:53.761" endtime="20201030 18:38:54.140"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:53.761" endtime="20201030 18:38:54.140"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:54.151" endtime="20201030 18:38:54.169"></status>
</kw>
<msg timestamp="20201030 18:38:54.169" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:38:54.148" endtime="20201030 18:38:54.170"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:38:54.172" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:38:54.170" endtime="20201030 18:38:54.172"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:54.173" endtime="20201030 18:38:54.174"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:54.145" endtime="20201030 18:38:54.175"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:54.142" endtime="20201030 18:38:54.175"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:54.182" endtime="20201030 18:38:54.469"></status>
</kw>
<msg timestamp="20201030 18:38:54.472" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024057347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024090722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:38:54.181" endtime="20201030 18:38:54.472"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:38:54.480" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024057347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024090722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:38:54.473" endtime="20201030 18:38:54.481"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:54.482" endtime="20201030 18:38:54.483"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:54.178" endtime="20201030 18:38:54.484"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:54.176" endtime="20201030 18:38:54.484"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:38:54.488" level="INFO">${RESULT} = [{'diff': 3.3374999999998683e-05}, {'diff': 3.3360999999999114e-05}, {'diff': 3.390199999999885e-05}, {'diff': 3.298599999999874e-05}, {'diff': 3.297199999999917e-05}, {'diff': 3.3888999999998753e-05}...</msg>
<status status="PASS" starttime="20201030 18:38:54.485" endtime="20201030 18:38:54.488"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:38:54.492" level="INFO">${ACCURACY} = {'diff': [3.3374999999998683e-05, 3.3360999999999114e-05, 3.390199999999885e-05, 3.298599999999874e-05, 3.297199999999917e-05, 3.3888999999998753e-05, 3.3374999999998683e-05, 3.3374999999998683e-05, 3...</msg>
<status status="PASS" starttime="20201030 18:38:54.489" endtime="20201030 18:38:54.492"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:38:54.496" level="INFO">NAME: accuracy-TIMER_SET-29-philip</msg>
<status status="PASS" starttime="20201030 18:38:54.495" endtime="20201030 18:38:54.497"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:38:54.499" level="INFO">VALUE: [3.3374999999998683e-05, 3.3360999999999114e-05, 3.390199999999885e-05, 3.298599999999874e-05, 3.297199999999917e-05, 3.3888999999998753e-05, 3.3374999999998683e-05, 3.3374999999998683e-05, 3.3346999999999544e-05, 3.37779999999982e-05, 3.302799999999745e-05, 3.37640000000021e-05, 3.330600000000031e-05, 3.382000000000038e-05, 3.316699999999714e-05, 3.374999999999906e-05, 3.3445e-05, 3.3624999999998934e-05, 3.331999999999988e-05, 3.379200000000124e-05, 3.3818999999997434e-05, 3.3819000000000904e-05, 3.372199999999992e-05, 3.3610999999999364e-05, 3.366700000000111e-05, 3.3013000000001874e-05, 3.3068999999996684e-05, 3.363799999999903e-05, 3.3110999999998864e-05, 3.301400000000135e-05, 3.3332999999999974e-05, 3.376399999999863e-05, 3.3847000000000044e-05, 3.3888999999998753e-05, 3.300000000000178e-05, 3.3888999999998753e-05, 3.323599999999899e-05, 3.363900000000197e-05, 3.372199999999992e-05, 3.323699999999846e-05, 3.302800000000092e-05, 3.3374999999998683e-05, 3.3110999999998864e-05, 3.330599999999684e-05, 3.299999999999831e-05, 3.368100000000068e-05, 3.337500000000215e-05, 3.3055000000000584e-05, 3.338799999999878e-05, 3.365299999999807e-05]</msg>
<status status="PASS" starttime="20201030 18:38:54.498" endtime="20201030 18:38:54.500"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:54.493" endtime="20201030 18:38:54.501"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:38:54.505" endtime="20201030 18:38:54.524"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:54.503" endtime="20201030 18:38:54.525"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:54.502" endtime="20201030 18:38:54.525"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:54.141" endtime="20201030 18:38:54.525"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:54.140" endtime="20201030 18:38:54.525"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:54.534" endtime="20201030 18:38:54.550"></status>
</kw>
<msg timestamp="20201030 18:38:54.551" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:38:54.533" endtime="20201030 18:38:54.551"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:38:54.553" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:38:54.552" endtime="20201030 18:38:54.554"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:54.554" endtime="20201030 18:38:54.556"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:54.530" endtime="20201030 18:38:54.557"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:54.528" endtime="20201030 18:38:54.557"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:54.564" endtime="20201030 18:38:54.849"></status>
</kw>
<msg timestamp="20201030 18:38:54.852" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019958944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019993347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:38:54.562" endtime="20201030 18:38:54.852"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:38:54.860" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019958944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019993347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:38:54.853" endtime="20201030 18:38:54.860"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:54.861" endtime="20201030 18:38:54.863"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:54.560" endtime="20201030 18:38:54.863"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:54.558" endtime="20201030 18:38:54.864"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:38:54.868" level="INFO">${RESULT} = [{'diff': 3.440300000000229e-05}, {'diff': 3.39580000000006e-05}, {'diff': 3.398599999999974e-05}, {'diff': 3.472300000000039e-05}, {'diff': 3.473600000000049e-05}, {'diff': 3.41250000000029e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:38:54.864" endtime="20201030 18:38:54.868"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:38:54.875" level="INFO">${ACCURACY} = {'diff': [3.440300000000229e-05, 3.39580000000006e-05, 3.398599999999974e-05, 3.472300000000039e-05, 3.473600000000049e-05, 3.41250000000029e-05, 3.447200000000067e-05, 3.466699999999864e-05, 3.405599...</msg>
<status status="PASS" starttime="20201030 18:38:54.869" endtime="20201030 18:38:54.875"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:38:54.880" level="INFO">NAME: accuracy-TIMER_SET-30-philip</msg>
<status status="PASS" starttime="20201030 18:38:54.879" endtime="20201030 18:38:54.880"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:38:54.882" level="INFO">VALUE: [3.440300000000229e-05, 3.39580000000006e-05, 3.398599999999974e-05, 3.472300000000039e-05, 3.473600000000049e-05, 3.41250000000029e-05, 3.447200000000067e-05, 3.466699999999864e-05, 3.405599999999759e-05, 3.405600000000106e-05, 3.4138999999999003e-05, 3.393100000000093e-05, 3.4582999999997754e-05, 3.4555000000002084e-05, 3.419400000000128e-05, 3.40840000000002e-05, 3.4902999999999323e-05, 3.451399999999938e-05, 3.4763000000000155e-05, 3.470900000000082e-05, 3.466599999999917e-05, 3.4762999999996685e-05, 3.4055000000001584e-05, 3.444400000000153e-05, 3.4597000000000794e-05, 3.4110999999999864e-05, 3.469400000000178e-05, 3.4333000000000974e-05, 3.495799999999813e-05, 3.472200000000092e-05, 3.4583000000001224e-05, 3.4861000000000614e-05, 3.424999999999956e-05, 3.423599999999999e-05, 3.482000000000138e-05, 3.3874999999999184e-05, 3.4361000000000114e-05, 3.430599999999784e-05, 3.423599999999999e-05, 3.423599999999999e-05, 3.4611000000000364e-05, 3.397299999999964e-05, 3.4652999999999073e-05, 3.449999999999981e-05, 3.397299999999964e-05, 3.46519999999996e-05, 3.444400000000153e-05, 3.416600000000214e-05, 3.4347000000000544e-05, 3.4902999999999323e-05]</msg>
<status status="PASS" starttime="20201030 18:38:54.881" endtime="20201030 18:38:54.883"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:54.876" endtime="20201030 18:38:54.883"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:38:54.887" endtime="20201030 18:38:54.906"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:54.885" endtime="20201030 18:38:54.907"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:54.884" endtime="20201030 18:38:54.907"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:54.527" endtime="20201030 18:38:54.908"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:54.526" endtime="20201030 18:38:54.908"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:54.916" endtime="20201030 18:38:54.933"></status>
</kw>
<msg timestamp="20201030 18:38:54.933" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:38:54.915" endtime="20201030 18:38:54.933"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:38:54.936" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:38:54.934" endtime="20201030 18:38:54.936"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:54.937" endtime="20201030 18:38:54.938"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:54.912" endtime="20201030 18:38:54.939"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:54.910" endtime="20201030 18:38:54.939"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:54.947" endtime="20201030 18:38:55.236"></status>
</kw>
<msg timestamp="20201030 18:38:55.239" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019397222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019432931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:38:54.945" endtime="20201030 18:38:55.239"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:38:55.247" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019397222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019432931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:38:55.240" endtime="20201030 18:38:55.247"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:55.248" endtime="20201030 18:38:55.250"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:54.941" endtime="20201030 18:38:55.250"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:54.940" endtime="20201030 18:38:55.251"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:38:55.255" level="INFO">${RESULT} = [{'diff': 3.570900000000182e-05}, {'diff': 3.5026999999999975e-05}, {'diff': 3.493100000000193e-05}, {'diff': 3.502799999999945e-05}, {'diff': 3.5304999999999365e-05}, {'diff': 3.5319000000002404e-05}...</msg>
<status status="PASS" starttime="20201030 18:38:55.251" endtime="20201030 18:38:55.255"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:38:55.259" level="INFO">${ACCURACY} = {'diff': [3.570900000000182e-05, 3.5026999999999975e-05, 3.493100000000193e-05, 3.502799999999945e-05, 3.5304999999999365e-05, 3.5319000000002404e-05, 3.565199999999713e-05, 3.5847000000002044e-05, 3....</msg>
<status status="PASS" starttime="20201030 18:38:55.256" endtime="20201030 18:38:55.259"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:38:55.263" level="INFO">NAME: accuracy-TIMER_SET-31-philip</msg>
<status status="PASS" starttime="20201030 18:38:55.262" endtime="20201030 18:38:55.263"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:38:55.265" level="INFO">VALUE: [3.570900000000182e-05, 3.5026999999999975e-05, 3.493100000000193e-05, 3.502799999999945e-05, 3.5304999999999365e-05, 3.5319000000002404e-05, 3.565199999999713e-05, 3.5847000000002044e-05, 3.573600000000149e-05, 3.522200000000142e-05, 3.601399999999741e-05, 3.544400000000253e-05, 3.5568999999999185e-05, 3.569400000000278e-05, 3.5582999999998755e-05, 3.5818999999999435e-05, 3.504199999999902e-05, 3.551400000000038e-05, 3.532000000000188e-05, 3.5568999999999185e-05, 3.497300000000064e-05, 3.5625000000000934e-05, 3.523600000000099e-05, 3.511200000000034e-05, 3.5625000000000934e-05, 3.583399999999848e-05, 3.572199999999845e-05, 3.551400000000038e-05, 3.574999999999759e-05, 3.5055000000002584e-05, 3.5762999999997686e-05, 3.575000000000106e-05, 3.5569000000002654e-05, 3.5305000000002834e-05, 3.5889000000000754e-05, 3.5875000000001184e-05, 3.579199999999977e-05, 3.4902999999999323e-05, 3.5875000000001184e-05, 3.551400000000038e-05, 3.531999999999841e-05, 3.501399999999988e-05, 3.5111000000000864e-05, 3.581999999999891e-05, 3.520900000000132e-05, 3.518099999999871e-05, 3.502799999999945e-05, 3.5389000000000254e-05, 3.5888999999997284e-05, 3.547300000000114e-05]</msg>
<status status="PASS" starttime="20201030 18:38:55.264" endtime="20201030 18:38:55.266"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:55.259" endtime="20201030 18:38:55.267"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:38:55.271" endtime="20201030 18:38:55.290"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:55.269" endtime="20201030 18:38:55.291"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:55.268" endtime="20201030 18:38:55.291"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:54.909" endtime="20201030 18:38:55.291"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:54.908" endtime="20201030 18:38:55.292"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:55.300" endtime="20201030 18:38:55.317"></status>
</kw>
<msg timestamp="20201030 18:38:55.318" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:38:55.299" endtime="20201030 18:38:55.318"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:38:55.320" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:38:55.319" endtime="20201030 18:38:55.320"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:55.321" endtime="20201030 18:38:55.323"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:55.296" endtime="20201030 18:38:55.323"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:55.294" endtime="20201030 18:38:55.324"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:55.330" endtime="20201030 18:38:55.617"></status>
</kw>
<msg timestamp="20201030 18:38:55.620" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020262194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020298194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:38:55.329" endtime="20201030 18:38:55.620"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:38:55.628" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020262194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020298194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:38:55.621" endtime="20201030 18:38:55.629"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:55.629" endtime="20201030 18:38:55.631"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:55.326" endtime="20201030 18:38:55.632"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:55.324" endtime="20201030 18:38:55.632"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:38:55.636" level="INFO">${RESULT} = [{'diff': 3.599999999999784e-05}, {'diff': 3.6596999999999325e-05}, {'diff': 3.6833000000000005e-05}, {'diff': 3.6875000000002184e-05}, {'diff': 3.626399999999766e-05}, {'diff': 3.6889000000001754e-05...</msg>
<status status="PASS" starttime="20201030 18:38:55.633" endtime="20201030 18:38:55.636"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:38:55.640" level="INFO">${ACCURACY} = {'diff': [3.599999999999784e-05, 3.6596999999999325e-05, 3.6833000000000005e-05, 3.6875000000002184e-05, 3.626399999999766e-05, 3.6889000000001754e-05, 3.6068999999999685e-05, 3.679200000000077e-05, 3...</msg>
<status status="PASS" starttime="20201030 18:38:55.637" endtime="20201030 18:38:55.640"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:38:55.645" level="INFO">NAME: accuracy-TIMER_SET-32-philip</msg>
<status status="PASS" starttime="20201030 18:38:55.644" endtime="20201030 18:38:55.645"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:38:55.647" level="INFO">VALUE: [3.599999999999784e-05, 3.6596999999999325e-05, 3.6833000000000005e-05, 3.6875000000002184e-05, 3.626399999999766e-05, 3.6889000000001754e-05, 3.6068999999999685e-05, 3.679200000000077e-05, 3.6388999999997784e-05, 3.6653000000001074e-05, 3.598600000000174e-05, 3.675000000000206e-05, 3.6332999999999505e-05, 3.605599999999959e-05, 3.59719999999987e-05, 3.6403000000000824e-05, 3.629200000000027e-05, 3.6416999999996924e-05, 3.672299999999892e-05, 3.604200000000002e-05, 3.6652999999997604e-05, 3.674999999999859e-05, 3.6569000000000185e-05, 3.643000000000049e-05, 3.674999999999859e-05, 3.6318999999999935e-05, 3.6013000000001405e-05, 3.677799999999773e-05, 3.6541000000001045e-05, 3.616600000000067e-05, 3.67780000000012e-05, 3.64580000000031e-05, 3.600000000000131e-05, 3.6139000000001004e-05, 3.623599999999852e-05, 3.6681000000000213e-05, 3.6666999999997174e-05, 3.6332999999999505e-05, 3.605599999999959e-05, 3.6833000000000005e-05, 3.602800000000045e-05, 3.694500000000003e-05, 3.6139000000001004e-05, 3.636199999999812e-05, 3.6874999999998714e-05, 3.6917000000000894e-05, 3.669400000000031e-05, 3.600000000000131e-05, 3.6332999999999505e-05, 3.6388999999997784e-05]</msg>
<status status="PASS" starttime="20201030 18:38:55.646" endtime="20201030 18:38:55.649"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:55.641" endtime="20201030 18:38:55.649"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:38:55.653" endtime="20201030 18:38:55.672"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:55.651" endtime="20201030 18:38:55.673"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:55.650" endtime="20201030 18:38:55.673"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:55.293" endtime="20201030 18:38:55.674"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:55.292" endtime="20201030 18:38:55.674"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:55.682" endtime="20201030 18:38:55.698"></status>
</kw>
<msg timestamp="20201030 18:38:55.699" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:38:55.681" endtime="20201030 18:38:55.699"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:38:55.701" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:38:55.700" endtime="20201030 18:38:55.701"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:55.702" endtime="20201030 18:38:55.704"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:55.678" endtime="20201030 18:38:55.704"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:55.676" endtime="20201030 18:38:55.705"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:55.711" endtime="20201030 18:38:56.004"></status>
</kw>
<msg timestamp="20201030 18:38:56.011" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019585597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019623292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:38:55.710" endtime="20201030 18:38:56.011"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:38:56.039" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019585597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019623292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:38:56.013" endtime="20201030 18:38:56.040"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:56.042" endtime="20201030 18:38:56.045"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:55.707" endtime="20201030 18:38:56.046"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:55.705" endtime="20201030 18:38:56.047"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:38:56.056" level="INFO">${RESULT} = [{'diff': 3.7695000000000783e-05}, {'diff': 3.783399999999701e-05}, {'diff': 3.7889000000002754e-05}, {'diff': 3.7360999999999644e-05}, {'diff': 3.7083000000000255e-05}, {'diff': 3.724999999999909e-05...</msg>
<status status="PASS" starttime="20201030 18:38:56.049" endtime="20201030 18:38:56.057"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:38:56.067" level="INFO">${ACCURACY} = {'diff': [3.7695000000000783e-05, 3.783399999999701e-05, 3.7889000000002754e-05, 3.7360999999999644e-05, 3.7083000000000255e-05, 3.724999999999909e-05, 3.7111000000002864e-05, 3.729200000000127e-05, 3...</msg>
<status status="PASS" starttime="20201030 18:38:56.058" endtime="20201030 18:38:56.067"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:38:56.076" level="INFO">NAME: accuracy-TIMER_SET-33-philip</msg>
<status status="PASS" starttime="20201030 18:38:56.074" endtime="20201030 18:38:56.077"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:38:56.080" level="INFO">VALUE: [3.7695000000000783e-05, 3.783399999999701e-05, 3.7889000000002754e-05, 3.7360999999999644e-05, 3.7083000000000255e-05, 3.724999999999909e-05, 3.7111000000002864e-05, 3.729200000000127e-05, 3.7875000000003184e-05, 3.7930999999997994e-05, 3.794400000000156e-05, 3.7888999999999284e-05, 3.701400000000188e-05, 3.7653000000002074e-05, 3.7388999999998784e-05, 3.726400000000213e-05, 3.7138999999998534e-05, 3.7138999999998534e-05, 3.702800000000145e-05, 3.7388999999998784e-05, 3.7695000000000783e-05, 3.7431000000000964e-05, 3.7832999999997535e-05, 3.7347000000000075e-05, 3.7888999999999284e-05, 3.7847000000000575e-05, 3.76659999999987e-05, 3.7375000000002684e-05, 3.7624999999999464e-05, 3.772200000000045e-05, 3.7139000000002004e-05, 3.7583000000000755e-05, 3.7653000000002074e-05, 3.780600000000134e-05, 3.7889000000002754e-05, 3.697200000000317e-05, 3.7055000000001115e-05, 3.7902999999998854e-05, 3.7347000000000075e-05, 3.772200000000045e-05, 3.7124999999998964e-05, 3.7597000000000325e-05, 3.694500000000003e-05, 3.7888999999999284e-05, 3.7360999999999644e-05, 3.7167000000001144e-05, 3.776400000000263e-05, 3.730599999999737e-05, 3.74590000000001e-05, 3.7805000000001865e-05]</msg>
<status status="PASS" starttime="20201030 18:38:56.078" endtime="20201030 18:38:56.081"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:56.068" endtime="20201030 18:38:56.081"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:38:56.085" endtime="20201030 18:38:56.104"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:56.083" endtime="20201030 18:38:56.105"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:56.082" endtime="20201030 18:38:56.105"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:55.675" endtime="20201030 18:38:56.105"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:55.674" endtime="20201030 18:38:56.105"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:56.114" endtime="20201030 18:38:56.130"></status>
</kw>
<msg timestamp="20201030 18:38:56.130" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:38:56.113" endtime="20201030 18:38:56.130"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:38:56.133" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:38:56.131" endtime="20201030 18:38:56.133"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:56.134" endtime="20201030 18:38:56.135"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:56.110" endtime="20201030 18:38:56.136"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:56.108" endtime="20201030 18:38:56.136"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:56.144" endtime="20201030 18:38:56.430"></status>
</kw>
<msg timestamp="20201030 18:38:56.433" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019421556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019459972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:38:56.141" endtime="20201030 18:38:56.434"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:38:56.442" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019421556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019459972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:38:56.434" endtime="20201030 18:38:56.442"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:56.443" endtime="20201030 18:38:56.444"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:56.139" endtime="20201030 18:38:56.445"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:56.137" endtime="20201030 18:38:56.445"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:38:56.449" level="INFO">${RESULT} = [{'diff': 3.841599999999945e-05}, {'diff': 3.8290999999999326e-05}, {'diff': 3.84720000000012e-05}, {'diff': 3.8138999999999534e-05}, {'diff': 3.801400000000288e-05}, {'diff': 3.8582999999998285e-05},...</msg>
<status status="PASS" starttime="20201030 18:38:56.446" endtime="20201030 18:38:56.450"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:38:56.453" level="INFO">${ACCURACY} = {'diff': [3.841599999999945e-05, 3.8290999999999326e-05, 3.84720000000012e-05, 3.8138999999999534e-05, 3.801400000000288e-05, 3.8582999999998285e-05, 3.869399999999884e-05, 3.825000000000009e-05, 3.79...</msg>
<status status="PASS" starttime="20201030 18:38:56.450" endtime="20201030 18:38:56.454"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:38:56.458" level="INFO">NAME: accuracy-TIMER_SET-34-philip</msg>
<status status="PASS" starttime="20201030 18:38:56.457" endtime="20201030 18:38:56.458"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:38:56.460" level="INFO">VALUE: [3.841599999999945e-05, 3.8290999999999326e-05, 3.84720000000012e-05, 3.8138999999999534e-05, 3.801400000000288e-05, 3.8582999999998285e-05, 3.869399999999884e-05, 3.825000000000009e-05, 3.7945000000001033e-05, 3.8694999999998314e-05, 3.883399999999801e-05, 3.877799999999973e-05, 3.836200000000012e-05, 3.8304999999998895e-05, 3.8276999999999756e-05, 3.79590000000006e-05, 3.854199999999905e-05, 3.8332999999998035e-05, 3.8040999999999076e-05, 3.8625000000000465e-05, 3.8346999999997605e-05, 3.870799999999841e-05, 3.868000000000274e-05, 3.851399999999991e-05, 3.8818999999998965e-05, 3.8639000000000034e-05, 3.875000000000059e-05, 3.802799999999898e-05, 3.8875000000000715e-05, 3.8652999999999604e-05, 3.875000000000059e-05, 3.854199999999905e-05, 3.822200000000095e-05, 3.8375000000000214e-05, 3.8124999999999964e-05, 3.8111000000000395e-05, 3.805600000000159e-05, 3.801399999999941e-05, 3.881999999999844e-05, 3.8361000000000645e-05, 3.8583000000001755e-05, 3.8875000000000715e-05, 3.8680999999998744e-05, 3.8304999999998895e-05, 3.8110999999996925e-05, 3.8902999999999854e-05, 3.823600000000052e-05, 3.8680999999998744e-05, 3.8166999999998674e-05, 3.8153000000002574e-05]</msg>
<status status="PASS" starttime="20201030 18:38:56.459" endtime="20201030 18:38:56.461"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:56.454" endtime="20201030 18:38:56.462"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:38:56.465" endtime="20201030 18:38:56.485"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:56.464" endtime="20201030 18:38:56.485"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:56.463" endtime="20201030 18:38:56.486"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:56.106" endtime="20201030 18:38:56.486"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:56.106" endtime="20201030 18:38:56.486"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:56.495" endtime="20201030 18:38:56.513"></status>
</kw>
<msg timestamp="20201030 18:38:56.513" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:38:56.493" endtime="20201030 18:38:56.513"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:38:56.516" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:38:56.514" endtime="20201030 18:38:56.516"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:56.517" endtime="20201030 18:38:56.518"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:56.491" endtime="20201030 18:38:56.519"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:56.488" endtime="20201030 18:38:56.519"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:56.525" endtime="20201030 18:38:56.819"></status>
</kw>
<msg timestamp="20201030 18:38:56.826" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020329181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020368486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:38:56.524" endtime="20201030 18:38:56.827"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:38:56.844" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020329181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020368486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:38:56.828" endtime="20201030 18:38:56.845"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:56.847" endtime="20201030 18:38:56.850"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:56.522" endtime="20201030 18:38:56.851"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:56.520" endtime="20201030 18:38:56.852"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:38:56.860" level="INFO">${RESULT} = [{'diff': 3.9304999999999896e-05}, {'diff': 3.952799999999701e-05}, {'diff': 3.951399999999744e-05}, {'diff': 3.9375000000001215e-05}, {'diff': 3.907000000000216e-05}, {'diff': 3.9375000000001215e-05}...</msg>
<status status="PASS" starttime="20201030 18:38:56.854" endtime="20201030 18:38:56.861"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:38:56.869" level="INFO">${ACCURACY} = {'diff': [3.9304999999999896e-05, 3.952799999999701e-05, 3.951399999999744e-05, 3.9375000000001215e-05, 3.907000000000216e-05, 3.9375000000001215e-05, 3.951399999999744e-05, 3.975000000000159e-05, 3.9...</msg>
<status status="PASS" starttime="20201030 18:38:56.862" endtime="20201030 18:38:56.870"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:38:56.878" level="INFO">NAME: accuracy-TIMER_SET-35-philip</msg>
<status status="PASS" starttime="20201030 18:38:56.876" endtime="20201030 18:38:56.879"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:38:56.884" level="INFO">VALUE: [3.9304999999999896e-05, 3.952799999999701e-05, 3.951399999999744e-05, 3.9375000000001215e-05, 3.907000000000216e-05, 3.9375000000001215e-05, 3.951399999999744e-05, 3.975000000000159e-05, 3.9709000000002354e-05, 3.925000000000109e-05, 3.9639000000001035e-05, 3.9639000000001035e-05, 3.9403000000000354e-05, 3.943000000000002e-05, 3.9360999999998175e-05, 3.9111000000001395e-05, 3.9041000000000076e-05, 3.972199999999898e-05, 3.922200000000195e-05, 3.9568999999999716e-05, 3.9304999999999896e-05, 3.952800000000048e-05, 3.917999999999977e-05, 3.9874999999998245e-05, 3.9874999999998245e-05, 3.975000000000159e-05, 3.950000000000134e-05, 3.905600000000259e-05, 3.976400000000116e-05, 3.9375000000001215e-05, 3.9167000000003144e-05, 3.900000000000084e-05, 3.959799999999833e-05, 3.8958999999998134e-05, 3.9360999999998175e-05, 3.8958999999998134e-05, 3.943000000000002e-05, 3.913800000000106e-05, 3.944399999999959e-05, 3.991600000000095e-05, 3.9375000000001215e-05, 3.9361000000001645e-05, 3.9318999999999465e-05, 3.902799999999998e-05, 3.9110999999997925e-05, 3.9097000000001825e-05, 3.901400000000041e-05, 3.981999999999944e-05, 3.922199999999848e-05, 3.931999999999894e-05]</msg>
<status status="PASS" starttime="20201030 18:38:56.881" endtime="20201030 18:38:56.887"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:56.871" endtime="20201030 18:38:56.888"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:38:56.892" endtime="20201030 18:38:56.911"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:56.890" endtime="20201030 18:38:56.912"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:56.889" endtime="20201030 18:38:56.912"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:56.487" endtime="20201030 18:38:56.912"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:56.486" endtime="20201030 18:38:56.912"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:56.921" endtime="20201030 18:38:56.937"></status>
</kw>
<msg timestamp="20201030 18:38:56.937" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:38:56.920" endtime="20201030 18:38:56.937"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:38:56.940" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:38:56.938" endtime="20201030 18:38:56.940"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:56.941" endtime="20201030 18:38:56.942"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:56.917" endtime="20201030 18:38:56.943"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:56.915" endtime="20201030 18:38:56.943"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:56.950" endtime="20201030 18:38:57.237"></status>
</kw>
<msg timestamp="20201030 18:38:57.240" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019396625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019437389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:38:56.948" endtime="20201030 18:38:57.240"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:38:57.248" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019396625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019437389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:38:57.241" endtime="20201030 18:38:57.248"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:57.249" endtime="20201030 18:38:57.250"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:56.945" endtime="20201030 18:38:57.251"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:56.944" endtime="20201030 18:38:57.251"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:38:57.255" level="INFO">${RESULT} = [{'diff': 4.076399999999869e-05}, {'diff': 4.0874999999999245e-05}, {'diff': 4.0959000000000134e-05}, {'diff': 3.9930999999999994e-05}, {'diff': 4.02920000000008e-05}, {'diff': 4.0681000000000744e-05}...</msg>
<status status="PASS" starttime="20201030 18:38:57.252" endtime="20201030 18:38:57.256"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:38:57.260" level="INFO">${ACCURACY} = {'diff': [4.076399999999869e-05, 4.0874999999999245e-05, 4.0959000000000134e-05, 3.9930999999999994e-05, 4.02920000000008e-05, 4.0681000000000744e-05, 3.9944999999999564e-05, 4.005600000000012e-05, 4....</msg>
<status status="PASS" starttime="20201030 18:38:57.256" endtime="20201030 18:38:57.261"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:38:57.265" level="INFO">NAME: accuracy-TIMER_SET-36-philip</msg>
<status status="PASS" starttime="20201030 18:38:57.264" endtime="20201030 18:38:57.265"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:38:57.267" level="INFO">VALUE: [4.076399999999869e-05, 4.0874999999999245e-05, 4.0959000000000134e-05, 3.9930999999999994e-05, 4.02920000000008e-05, 4.0681000000000744e-05, 3.9944999999999564e-05, 4.005600000000012e-05, 4.0360999999999175e-05, 4.023599999999905e-05, 4.0526999999998536e-05, 4.0541000000001576e-05, 4.044400000000059e-05, 4.0610999999999425e-05, 3.997199999999923e-05, 4.0110999999998925e-05, 4.0610999999999425e-05, 4.069400000000084e-05, 4.022199999999948e-05, 4.022199999999948e-05, 4.0153000000001104e-05, 4.018000000000077e-05, 4.0596999999999855e-05, 4.0403000000001354e-05, 4.023599999999905e-05, 4.0667000000001174e-05, 4.0945000000000564e-05, 4.0874999999999245e-05, 4.034799999999908e-05, 4.084800000000305e-05, 4.008399999999926e-05, 4.030600000000037e-05, 4.074999999999912e-05, 4.023599999999905e-05, 4.069400000000084e-05, 3.997199999999923e-05, 4.0139000000001535e-05, 4.04859999999993e-05, 4.0583000000000286e-05, 4.0804999999997926e-05, 4.0153000000001104e-05, 4.0861000000003145e-05, 4.006999999999969e-05, 4.069400000000084e-05, 4.072199999999998e-05, 4.073599999999955e-05, 4.0959000000000134e-05, 4.075000000000259e-05, 4.0624999999998995e-05, 4.0194999999999814e-05]</msg>
<status status="PASS" starttime="20201030 18:38:57.266" endtime="20201030 18:38:57.268"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:57.261" endtime="20201030 18:38:57.269"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:38:57.272" endtime="20201030 18:38:57.292"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:57.271" endtime="20201030 18:38:57.292"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:57.269" endtime="20201030 18:38:57.292"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:56.913" endtime="20201030 18:38:57.293"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:56.913" endtime="20201030 18:38:57.293"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:57.301" endtime="20201030 18:38:57.317"></status>
</kw>
<msg timestamp="20201030 18:38:57.318" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:38:57.300" endtime="20201030 18:38:57.318"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:38:57.320" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:38:57.319" endtime="20201030 18:38:57.321"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:57.321" endtime="20201030 18:38:57.323"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:57.297" endtime="20201030 18:38:57.323"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:57.295" endtime="20201030 18:38:57.324"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:57.330" endtime="20201030 18:38:57.617"></status>
</kw>
<msg timestamp="20201030 18:38:57.620" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019439431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019480667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:38:57.329" endtime="20201030 18:38:57.621"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:38:57.629" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019439431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019480667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:38:57.622" endtime="20201030 18:38:57.629"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:57.630" endtime="20201030 18:38:57.631"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:57.326" endtime="20201030 18:38:57.632"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:57.324" endtime="20201030 18:38:57.632"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:38:57.636" level="INFO">${RESULT} = [{'diff': 4.123600000000005e-05}, {'diff': 4.1847000000001106e-05}, {'diff': 4.1708999999997415e-05}, {'diff': 4.09859999999998e-05}, {'diff': 4.148599999999683e-05}, {'diff': 4.1374999999999745e-05},...</msg>
<status status="PASS" starttime="20201030 18:38:57.633" endtime="20201030 18:38:57.637"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:38:57.640" level="INFO">${ACCURACY} = {'diff': [4.123600000000005e-05, 4.1847000000001106e-05, 4.1708999999997415e-05, 4.09859999999998e-05, 4.148599999999683e-05, 4.1374999999999745e-05, 4.190199999999991e-05, 4.1181000000001244e-05, 4.1...</msg>
<status status="PASS" starttime="20201030 18:38:57.637" endtime="20201030 18:38:57.641"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:38:57.645" level="INFO">NAME: accuracy-TIMER_SET-37-philip</msg>
<status status="PASS" starttime="20201030 18:38:57.644" endtime="20201030 18:38:57.645"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:38:57.647" level="INFO">VALUE: [4.123600000000005e-05, 4.1847000000001106e-05, 4.1708999999997415e-05, 4.09859999999998e-05, 4.148599999999683e-05, 4.1374999999999745e-05, 4.190199999999991e-05, 4.1181000000001244e-05, 4.1861000000000675e-05, 4.1805000000002396e-05, 4.144399999999812e-05, 4.1361000000000175e-05, 4.1083000000000786e-05, 4.173600000000055e-05, 4.142999999999855e-05, 4.1347000000000605e-05, 4.097200000000023e-05, 4.145800000000116e-05, 4.1583000000001286e-05, 4.095799999999719e-05, 4.1110999999999925e-05, 4.1388999999999315e-05, 4.177799999999926e-05, 4.1167000000001674e-05, 4.107000000000069e-05, 4.1361000000000175e-05, 4.157000000000119e-05, 4.1568999999998246e-05, 4.158399999999729e-05, 4.11119999999994e-05, 4.100000000000284e-05, 4.123600000000005e-05, 4.1526999999999537e-05, 4.1110999999999925e-05, 4.194399999999862e-05, 4.116599999999873e-05, 4.179199999999883e-05, 4.14860000000003e-05, 4.183400000000101e-05, 4.1818999999998496e-05, 4.170799999999794e-05, 4.1611000000000425e-05, 4.1624999999999995e-05, 4.095799999999719e-05, 4.1695000000001314e-05, 4.1083000000000786e-05, 4.173600000000055e-05, 4.1388999999999315e-05, 4.184800000000058e-05, 4.158399999999729e-05]</msg>
<status status="PASS" starttime="20201030 18:38:57.646" endtime="20201030 18:38:57.648"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:57.641" endtime="20201030 18:38:57.649"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:38:57.652" endtime="20201030 18:38:57.672"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:57.651" endtime="20201030 18:38:57.672"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:57.650" endtime="20201030 18:38:57.673"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:57.294" endtime="20201030 18:38:57.673"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:57.293" endtime="20201030 18:38:57.673"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:57.682" endtime="20201030 18:38:57.698"></status>
</kw>
<msg timestamp="20201030 18:38:57.699" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:38:57.680" endtime="20201030 18:38:57.699"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:38:57.701" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:38:57.700" endtime="20201030 18:38:57.701"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:57.702" endtime="20201030 18:38:57.704"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:57.678" endtime="20201030 18:38:57.704"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:57.675" endtime="20201030 18:38:57.705"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:57.711" endtime="20201030 18:38:57.996"></status>
</kw>
<msg timestamp="20201030 18:38:57.999" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020425847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020467917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:38:57.710" endtime="20201030 18:38:57.999"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:38:58.008" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020425847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020467917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:38:58.000" endtime="20201030 18:38:58.008"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:58.009" endtime="20201030 18:38:58.010"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:57.707" endtime="20201030 18:38:58.011"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:57.705" endtime="20201030 18:38:58.011"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:38:58.015" level="INFO">${RESULT} = [{'diff': 4.206999999999822e-05}, {'diff': 4.1930999999998525e-05}, {'diff': 4.1916999999998955e-05}, {'diff': 4.2054999999999176e-05}, {'diff': 4.2304999999999426e-05}, {'diff': 4.275000000000112e-05...</msg>
<status status="PASS" starttime="20201030 18:38:58.012" endtime="20201030 18:38:58.015"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:38:58.019" level="INFO">${ACCURACY} = {'diff': [4.206999999999822e-05, 4.1930999999998525e-05, 4.1916999999998955e-05, 4.2054999999999176e-05, 4.2304999999999426e-05, 4.275000000000112e-05, 4.194400000000209e-05, 4.222199999999801e-05, 4....</msg>
<status status="PASS" starttime="20201030 18:38:58.016" endtime="20201030 18:38:58.020"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:38:58.024" level="INFO">NAME: accuracy-TIMER_SET-38-philip</msg>
<status status="PASS" starttime="20201030 18:38:58.023" endtime="20201030 18:38:58.024"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:38:58.026" level="INFO">VALUE: [4.206999999999822e-05, 4.1930999999998525e-05, 4.1916999999998955e-05, 4.2054999999999176e-05, 4.2304999999999426e-05, 4.275000000000112e-05, 4.194400000000209e-05, 4.222199999999801e-05, 4.2818999999999496e-05, 4.2568999999999246e-05, 4.2875000000001245e-05, 4.24860000000013e-05, 4.2110999999997456e-05, 4.2832999999999066e-05, 4.2110999999997456e-05, 4.2346999999998136e-05, 4.2596999999998386e-05, 4.28059999999994e-05, 4.197200000000123e-05, 4.233399999999804e-05, 4.2139000000000065e-05, 4.223600000000105e-05, 4.2194999999998345e-05, 4.2402999999999885e-05, 4.275000000000112e-05, 4.265200000000066e-05, 4.270799999999894e-05, 4.226400000000019e-05, 4.247200000000173e-05, 4.2375000000000745e-05, 4.2818999999999496e-05, 4.2040999999999606e-05, 4.2847000000002106e-05, 4.24860000000013e-05, 4.250000000000087e-05, 4.220799999999844e-05, 4.244399999999912e-05, 4.23059999999989e-05, 4.2666999999999705e-05, 4.272199999999851e-05, 4.233400000000151e-05, 4.2194999999998345e-05, 4.233400000000151e-05, 4.288799999999787e-05, 4.226400000000019e-05, 4.2152999999999635e-05, 4.2333000000002036e-05, 4.24860000000013e-05, 4.241599999999998e-05, 4.2583000000002286e-05]</msg>
<status status="PASS" starttime="20201030 18:38:58.025" endtime="20201030 18:38:58.028"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:58.020" endtime="20201030 18:38:58.028"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:38:58.032" endtime="20201030 18:38:58.051"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:58.030" endtime="20201030 18:38:58.052"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:58.029" endtime="20201030 18:38:58.052"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:57.674" endtime="20201030 18:38:58.052"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:57.673" endtime="20201030 18:38:58.053"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:58.061" endtime="20201030 18:38:58.078"></status>
</kw>
<msg timestamp="20201030 18:38:58.079" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:38:58.060" endtime="20201030 18:38:58.079"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:38:58.081" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:38:58.080" endtime="20201030 18:38:58.081"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:58.082" endtime="20201030 18:38:58.084"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:58.057" endtime="20201030 18:38:58.084"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:58.055" endtime="20201030 18:38:58.085"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:58.091" endtime="20201030 18:38:58.376"></status>
</kw>
<msg timestamp="20201030 18:38:58.379" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019420056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019463958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:38:58.090" endtime="20201030 18:38:58.380"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:38:58.387" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019420056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019463958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:38:58.380" endtime="20201030 18:38:58.388"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:58.389" endtime="20201030 18:38:58.390"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:58.087" endtime="20201030 18:38:58.391"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:58.085" endtime="20201030 18:38:58.391"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:38:58.395" level="INFO">${RESULT} = [{'diff': 4.390199999999844e-05}, {'diff': 4.36939999999969e-05}, {'diff': 4.3833000000000066e-05}, {'diff': 4.377800000000126e-05}, {'diff': 4.3902999999997916e-05}, {'diff': 4.301399999999747e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:38:58.392" endtime="20201030 18:38:58.395"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:38:58.403" level="INFO">${ACCURACY} = {'diff': [4.390199999999844e-05, 4.36939999999969e-05, 4.3833000000000066e-05, 4.377800000000126e-05, 4.3902999999997916e-05, 4.301399999999747e-05, 4.3596999999999386e-05, 4.379200000000083e-05, 4.30...</msg>
<status status="PASS" starttime="20201030 18:38:58.396" endtime="20201030 18:38:58.403"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:38:58.407" level="INFO">NAME: accuracy-TIMER_SET-39-philip</msg>
<status status="PASS" starttime="20201030 18:38:58.406" endtime="20201030 18:38:58.407"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:38:58.410" level="INFO">VALUE: [4.390199999999844e-05, 4.36939999999969e-05, 4.3833000000000066e-05, 4.377800000000126e-05, 4.3902999999997916e-05, 4.301399999999747e-05, 4.3596999999999386e-05, 4.379200000000083e-05, 4.306999999999922e-05, 4.3096999999998886e-05, 4.348599999999883e-05, 4.376399999999822e-05, 4.3653000000001135e-05, 4.3708999999999415e-05, 4.3652999999997666e-05, 4.326399999999772e-05, 4.323599999999858e-05, 4.3167000000000205e-05, 4.345799999999969e-05, 4.3111000000001926e-05, 4.377699999999832e-05, 4.297200000000223e-05, 4.374999999999865e-05, 4.294399999999962e-05, 4.373599999999908e-05, 4.3403000000000885e-05, 4.370799999999994e-05, 4.354200000000058e-05, 4.329199999999686e-05, 4.304200000000008e-05, 4.3833000000000066e-05, 4.3153000000000635e-05, 4.343000000000055e-05, 4.322200000000248e-05, 4.3167000000000205e-05, 4.329199999999686e-05, 4.3417000000000455e-05, 4.38060000000004e-05, 4.338799999999837e-05, 4.380499999999746e-05, 4.294400000000309e-05, 4.3139000000001065e-05, 4.3833000000000066e-05, 4.3111000000001926e-05, 4.3653000000001135e-05, 4.3110999999998456e-05, 4.348599999999883e-05, 4.3305000000000426e-05, 4.323599999999858e-05, 4.3417000000000455e-05]</msg>
<status status="PASS" starttime="20201030 18:38:58.408" endtime="20201030 18:38:58.410"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:58.403" endtime="20201030 18:38:58.411"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:38:58.414" endtime="20201030 18:38:58.434"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:58.413" endtime="20201030 18:38:58.434"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:58.412" endtime="20201030 18:38:58.435"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:58.054" endtime="20201030 18:38:58.435"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:58.053" endtime="20201030 18:38:58.435"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:58.444" endtime="20201030 18:38:58.460"></status>
</kw>
<msg timestamp="20201030 18:38:58.460" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:38:58.442" endtime="20201030 18:38:58.460"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:38:58.462" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:38:58.461" endtime="20201030 18:38:58.463"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:58.463" endtime="20201030 18:38:58.465"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:58.440" endtime="20201030 18:38:58.466"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:58.438" endtime="20201030 18:38:58.466"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:58.472" endtime="20201030 18:38:58.759"></status>
</kw>
<msg timestamp="20201030 18:38:58.762" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019423556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019467806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:38:58.471" endtime="20201030 18:38:58.762"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:38:58.770" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019423556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019467806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:38:58.763" endtime="20201030 18:38:58.770"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:58.771" endtime="20201030 18:38:58.773"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:58.468" endtime="20201030 18:38:58.773"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:58.467" endtime="20201030 18:38:58.774"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:38:58.778" level="INFO">${RESULT} = [{'diff': 4.424999999999915e-05}, {'diff': 4.41120000000024e-05}, {'diff': 4.4417000000001455e-05}, {'diff': 4.4569000000001247e-05}, {'diff': 4.438799999999937e-05}, {'diff': 4.4667000000001705e-05},...</msg>
<status status="PASS" starttime="20201030 18:38:58.774" endtime="20201030 18:38:58.778"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:38:58.782" level="INFO">${ACCURACY} = {'diff': [4.424999999999915e-05, 4.41120000000024e-05, 4.4417000000001455e-05, 4.4569000000001247e-05, 4.438799999999937e-05, 4.4667000000001705e-05, 4.4874999999999776e-05, 4.479200000000183e-05, 4.4...</msg>
<status status="PASS" starttime="20201030 18:38:58.779" endtime="20201030 18:38:58.782"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:38:58.786" level="INFO">NAME: accuracy-TIMER_SET-40-philip</msg>
<status status="PASS" starttime="20201030 18:38:58.785" endtime="20201030 18:38:58.787"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:38:58.789" level="INFO">VALUE: [4.424999999999915e-05, 4.41120000000024e-05, 4.4417000000001455e-05, 4.4569000000001247e-05, 4.438799999999937e-05, 4.4667000000001705e-05, 4.4874999999999776e-05, 4.479200000000183e-05, 4.48329999999976e-05, 4.4111000000002926e-05, 4.4402999999998416e-05, 4.4083000000000316e-05, 4.455599999999768e-05, 4.407000000000022e-05, 4.454199999999811e-05, 4.402800000000151e-05, 4.4347000000000136e-05, 4.4888999999999346e-05, 4.4445000000000595e-05, 4.48060000000014e-05, 4.469400000000137e-05, 4.4610999999999956e-05, 4.4888999999999346e-05, 4.474999999999965e-05, 4.4360999999999706e-05, 4.4819000000001497e-05, 4.473600000000008e-05, 4.4861000000000206e-05, 4.4888999999999346e-05, 4.4333000000000566e-05, 4.401400000000194e-05, 4.4124999999999026e-05, 4.472200000000051e-05, 4.44999999999994e-05, 4.4638999999999096e-05, 4.476400000000269e-05, 4.4610999999999956e-05, 4.407000000000022e-05, 4.39999999999989e-05, 4.4319000000000996e-05, 4.402800000000151e-05, 4.458400000000029e-05, 4.4737000000003024e-05, 4.454099999999864e-05, 4.4583000000000816e-05, 4.495799999999772e-05, 4.4069000000000746e-05, 4.424999999999915e-05, 4.447200000000026e-05, 4.4305000000001427e-05]</msg>
<status status="PASS" starttime="20201030 18:38:58.787" endtime="20201030 18:38:58.789"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:58.783" endtime="20201030 18:38:58.790"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:38:58.794" endtime="20201030 18:38:58.813"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:58.792" endtime="20201030 18:38:58.814"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:58.791" endtime="20201030 18:38:58.814"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:58.436" endtime="20201030 18:38:58.814"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:58.435" endtime="20201030 18:38:58.814"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:58.823" endtime="20201030 18:38:58.840"></status>
</kw>
<msg timestamp="20201030 18:38:58.840" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:38:58.821" endtime="20201030 18:38:58.841"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:38:58.843" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:38:58.841" endtime="20201030 18:38:58.843"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:58.844" endtime="20201030 18:38:58.845"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:58.819" endtime="20201030 18:38:58.846"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:58.817" endtime="20201030 18:38:58.846"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:58.853" endtime="20201030 18:38:59.139"></status>
</kw>
<msg timestamp="20201030 18:38:59.142" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020223625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020269222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:38:58.851" endtime="20201030 18:38:59.143"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:38:59.151" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020223625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020269222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:38:59.144" endtime="20201030 18:38:59.151"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:59.152" endtime="20201030 18:38:59.153"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:58.849" endtime="20201030 18:38:59.154"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:58.847" endtime="20201030 18:38:59.154"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:38:59.158" level="INFO">${RESULT} = [{'diff': 4.5597000000001386e-05}, {'diff': 4.5138999999999596e-05}, {'diff': 4.5625000000000526e-05}, {'diff': 4.5125000000000026e-05}, {'diff': 4.552799999999954e-05}, {'diff': 4.5875000000000776e-0...</msg>
<status status="PASS" starttime="20201030 18:38:59.155" endtime="20201030 18:38:59.159"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:38:59.162" level="INFO">${ACCURACY} = {'diff': [4.5597000000001386e-05, 4.5138999999999596e-05, 4.5625000000000526e-05, 4.5125000000000026e-05, 4.552799999999954e-05, 4.5875000000000776e-05, 4.5347000000001136e-05, 4.501399999999947e-05, ...</msg>
<status status="PASS" starttime="20201030 18:38:59.159" endtime="20201030 18:38:59.163"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:38:59.167" level="INFO">NAME: accuracy-TIMER_SET-41-philip</msg>
<status status="PASS" starttime="20201030 18:38:59.166" endtime="20201030 18:38:59.167"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:38:59.169" level="INFO">VALUE: [4.5597000000001386e-05, 4.5138999999999596e-05, 4.5625000000000526e-05, 4.5125000000000026e-05, 4.552799999999954e-05, 4.5875000000000776e-05, 4.5347000000001136e-05, 4.501399999999947e-05, 4.5652999999999666e-05, 4.5652999999999666e-05, 4.5209000000000915e-05, 4.583399999999807e-05, 4.5445000000001595e-05, 4.5695000000001845e-05, 4.501399999999947e-05, 4.505499999999871e-05, 4.577800000000326e-05, 4.586099999999774e-05, 4.5583000000001817e-05, 4.5333000000001566e-05, 4.517999999999883e-05, 4.5902999999999916e-05, 4.548600000000083e-05, 4.576400000000022e-05, 4.5167000000002205e-05, 4.5583000000001817e-05, 4.504199999999861e-05, 4.505600000000165e-05, 4.5695000000001845e-05, 4.5209000000000915e-05, 4.55000000000004e-05, 4.523599999999711e-05, 4.504199999999861e-05, 4.5083000000001316e-05, 4.576400000000022e-05, 4.544400000000212e-05, 4.502799999999904e-05, 4.592999999999958e-05, 4.570799999999847e-05, 4.523600000000058e-05, 4.570799999999847e-05, 4.5666999999999236e-05, 4.522199999999754e-05, 4.5111000000000456e-05, 4.522200000000101e-05, 4.5138999999999596e-05, 4.5195000000001345e-05, 4.5125000000000026e-05, 4.570800000000194e-05, 4.5138999999999596e-05]</msg>
<status status="PASS" starttime="20201030 18:38:59.168" endtime="20201030 18:38:59.171"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:59.163" endtime="20201030 18:38:59.172"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:38:59.175" endtime="20201030 18:38:59.195"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:59.174" endtime="20201030 18:38:59.195"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:59.173" endtime="20201030 18:38:59.196"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:58.815" endtime="20201030 18:38:59.196"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:58.815" endtime="20201030 18:38:59.196"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:59.205" endtime="20201030 18:38:59.221"></status>
</kw>
<msg timestamp="20201030 18:38:59.222" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:38:59.203" endtime="20201030 18:38:59.222"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:38:59.224" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:38:59.223" endtime="20201030 18:38:59.225"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:59.225" endtime="20201030 18:38:59.227"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:59.201" endtime="20201030 18:38:59.227"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:59.199" endtime="20201030 18:38:59.228"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:59.234" endtime="20201030 18:38:59.520"></status>
</kw>
<msg timestamp="20201030 18:38:59.523" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020319889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020366653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:38:59.233" endtime="20201030 18:38:59.523"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:38:59.531" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020319889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020366653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:38:59.524" endtime="20201030 18:38:59.532"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:59.533" endtime="20201030 18:38:59.534"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:59.230" endtime="20201030 18:38:59.535"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:59.228" endtime="20201030 18:38:59.535"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:38:59.539" level="INFO">${RESULT} = [{'diff': 4.676399999999775e-05}, {'diff': 4.6180999999999306e-05}, {'diff': 4.637499999999781e-05}, {'diff': 4.6194999999998876e-05}, {'diff': 4.643000000000008e-05}, {'diff': 4.609800000000136e-05},...</msg>
<status status="PASS" starttime="20201030 18:38:59.536" endtime="20201030 18:38:59.539"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:38:59.544" level="INFO">${ACCURACY} = {'diff': [4.676399999999775e-05, 4.6180999999999306e-05, 4.637499999999781e-05, 4.6194999999998876e-05, 4.643000000000008e-05, 4.609800000000136e-05, 4.6889000000001346e-05, 4.631899999999953e-05, 4.6...</msg>
<status status="PASS" starttime="20201030 18:38:59.540" endtime="20201030 18:38:59.544"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:38:59.549" level="INFO">NAME: accuracy-TIMER_SET-42-philip</msg>
<status status="PASS" starttime="20201030 18:38:59.548" endtime="20201030 18:38:59.549"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:38:59.551" level="INFO">VALUE: [4.676399999999775e-05, 4.6180999999999306e-05, 4.637499999999781e-05, 4.6194999999998876e-05, 4.643000000000008e-05, 4.609800000000136e-05, 4.6889000000001346e-05, 4.631899999999953e-05, 4.656899999999978e-05, 4.6611000000001956e-05, 4.68329999999996e-05, 4.60000000000009e-05, 4.688899999999788e-05, 4.648599999999836e-05, 4.6139000000000596e-05, 4.672200000000251e-05, 4.6903000000000916e-05, 4.601400000000047e-05, 4.626400000000072e-05, 4.651400000000097e-05, 4.6347000000002136e-05, 4.626400000000072e-05, 4.6653000000000666e-05, 4.6237000000001055e-05, 4.6223000000001485e-05, 4.640299999999695e-05, 4.608299999999885e-05, 4.665200000000119e-05, 4.606899999999928e-05, 4.644399999999965e-05, 4.686099999999874e-05, 4.672199999999904e-05, 4.658299999999935e-05, 4.675000000000165e-05, 4.680499999999699e-05, 4.6195000000002345e-05, 4.640299999999695e-05, 4.602800000000004e-05, 4.6653000000000666e-05, 4.6389000000000846e-05, 4.688899999999788e-05, 4.599999999999743e-05, 4.61939999999994e-05, 4.6680999999999806e-05, 4.659800000000186e-05, 4.617999999999983e-05, 4.638800000000137e-05, 4.652700000000107e-05, 4.6875000000001776e-05, 4.629100000000039e-05]</msg>
<status status="PASS" starttime="20201030 18:38:59.550" endtime="20201030 18:38:59.552"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:59.545" endtime="20201030 18:38:59.552"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:38:59.556" endtime="20201030 18:38:59.576"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:59.554" endtime="20201030 18:38:59.576"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:59.553" endtime="20201030 18:38:59.577"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:59.197" endtime="20201030 18:38:59.577"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:59.196" endtime="20201030 18:38:59.577"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:59.586" endtime="20201030 18:38:59.602"></status>
</kw>
<msg timestamp="20201030 18:38:59.602" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:38:59.584" endtime="20201030 18:38:59.602"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:38:59.605" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:38:59.603" endtime="20201030 18:38:59.605"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:59.606" endtime="20201030 18:38:59.607"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:59.581" endtime="20201030 18:38:59.608"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:59.579" endtime="20201030 18:38:59.608"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:59.615" endtime="20201030 18:38:59.902"></status>
</kw>
<msg timestamp="20201030 18:38:59.905" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019736819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0197845, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:38:59.613" endtime="20201030 18:38:59.905"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:38:59.913" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019736819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0197845, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:38:59.906" endtime="20201030 18:38:59.914"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:59.914" endtime="20201030 18:38:59.916"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:59.611" endtime="20201030 18:38:59.916"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:59.609" endtime="20201030 18:38:59.917"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:38:59.921" level="INFO">${RESULT} = [{'diff': 4.7681000000000806e-05}, {'diff': 4.701400000000147e-05}, {'diff': 4.745800000000022e-05}, {'diff': 4.758300000000035e-05}, {'diff': 4.711099999999899e-05}, {'diff': 4.78200000000005e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:38:59.918" endtime="20201030 18:38:59.921"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:38:59.925" level="INFO">${ACCURACY} = {'diff': [4.7681000000000806e-05, 4.701400000000147e-05, 4.745800000000022e-05, 4.758300000000035e-05, 4.711099999999899e-05, 4.78200000000005e-05, 4.716699999999727e-05, 4.7736999999999086e-05, 4.700...</msg>
<status status="PASS" starttime="20201030 18:38:59.922" endtime="20201030 18:38:59.925"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:38:59.929" level="INFO">NAME: accuracy-TIMER_SET-43-philip</msg>
<status status="PASS" starttime="20201030 18:38:59.928" endtime="20201030 18:38:59.930"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:38:59.932" level="INFO">VALUE: [4.7681000000000806e-05, 4.701400000000147e-05, 4.745800000000022e-05, 4.758300000000035e-05, 4.711099999999899e-05, 4.78200000000005e-05, 4.716699999999727e-05, 4.7736999999999086e-05, 4.70000000000019e-05, 4.705600000000018e-05, 4.7667000000001236e-05, 4.705600000000018e-05, 4.731900000000053e-05, 4.777700000000232e-05, 4.720799999999997e-05, 4.708299999999985e-05, 4.736099999999924e-05, 4.76940000000009e-05, 4.6903000000000916e-05, 4.7167000000000736e-05, 4.7889000000002346e-05, 4.702800000000104e-05, 4.73330000000001e-05, 4.7917000000001486e-05, 4.773599999999961e-05, 4.705600000000018e-05, 4.6972999999998766e-05, 4.7681000000000806e-05, 4.6958999999999196e-05, 4.7694999999996907e-05, 4.772200000000004e-05, 4.749999999999893e-05, 4.71940000000004e-05, 4.779200000000136e-05, 4.70000000000019e-05, 4.698600000000233e-05, 4.732e-05, 4.784700000000017e-05, 4.71940000000004e-05, 4.740299999999795e-05, 4.759699999999992e-05, 4.7167000000000736e-05, 4.783400000000007e-05, 4.712499999999856e-05, 4.763899999999863e-05, 4.7417000000000986e-05, 4.726400000000172e-05, 4.7430999999997087e-05, 4.7208999999999446e-05, 4.756900000000078e-05]</msg>
<status status="PASS" starttime="20201030 18:38:59.930" endtime="20201030 18:38:59.933"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:59.926" endtime="20201030 18:38:59.933"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:38:59.937" endtime="20201030 18:38:59.956"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:59.935" endtime="20201030 18:38:59.957"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:59.934" endtime="20201030 18:38:59.957"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:59.578" endtime="20201030 18:38:59.957"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:59.577" endtime="20201030 18:38:59.958"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:59.966" endtime="20201030 18:38:59.983"></status>
</kw>
<msg timestamp="20201030 18:38:59.983" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:38:59.965" endtime="20201030 18:38:59.983"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:38:59.986" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:38:59.984" endtime="20201030 18:38:59.986"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:59.987" endtime="20201030 18:38:59.988"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:59.962" endtime="20201030 18:38:59.989"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:59.960" endtime="20201030 18:38:59.989"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:38:59.996" endtime="20201030 18:39:00.281"></status>
</kw>
<msg timestamp="20201030 18:39:00.284" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020253403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020302, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:38:59.994" endtime="20201030 18:39:00.285"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:00.292" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020253403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020302, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:39:00.285" endtime="20201030 18:39:00.293"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:00.294" endtime="20201030 18:39:00.295"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:59.992" endtime="20201030 18:39:00.296"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:59.990" endtime="20201030 18:39:00.296"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:39:00.300" level="INFO">${RESULT} = [{'diff': 4.859700000000092e-05}, {'diff': 4.852800000000254e-05}, {'diff': 4.8681000000001806e-05}, {'diff': 4.887500000000031e-05}, {'diff': 4.804199999999814e-05}, {'diff': 4.868099999999834e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:39:00.297" endtime="20201030 18:39:00.300"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:39:00.304" level="INFO">${ACCURACY} = {'diff': [4.859700000000092e-05, 4.852800000000254e-05, 4.8681000000001806e-05, 4.887500000000031e-05, 4.804199999999814e-05, 4.868099999999834e-05, 4.8389000000002846e-05, 4.845799999999775e-05, 4.88...</msg>
<status status="PASS" starttime="20201030 18:39:00.301" endtime="20201030 18:39:00.304"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:39:00.309" level="INFO">NAME: accuracy-TIMER_SET-44-philip</msg>
<status status="PASS" starttime="20201030 18:39:00.308" endtime="20201030 18:39:00.309"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:39:00.311" level="INFO">VALUE: [4.859700000000092e-05, 4.852800000000254e-05, 4.8681000000001806e-05, 4.887500000000031e-05, 4.804199999999814e-05, 4.868099999999834e-05, 4.8389000000002846e-05, 4.845799999999775e-05, 4.887500000000031e-05, 4.876399999999975e-05, 4.841599999999904e-05, 4.875000000000018e-05, 4.836100000000024e-05, 4.791599999999854e-05, 4.858299999999788e-05, 4.836100000000024e-05, 4.890299999999945e-05, 4.890299999999945e-05, 4.836100000000024e-05, 4.875000000000018e-05, 4.88200000000015e-05, 4.802799999999857e-05, 4.883299999999813e-05, 4.847200000000079e-05, 4.876399999999975e-05, 4.879199999999889e-05, 4.811099999999999e-05, 4.862500000000006e-05, 4.867999999999886e-05, 4.865199999999972e-05, 4.855499999999874e-05, 4.866599999999929e-05, 4.880500000000246e-05, 4.840299999999895e-05, 4.820800000000097e-05, 4.794399999999768e-05, 4.879199999999889e-05, 4.86529999999992e-05, 4.8459000000000696e-05, 4.826400000000272e-05, 4.872200000000104e-05, 4.838899999999938e-05, 4.83330000000011e-05, 4.830599999999796e-05, 4.881999999999803e-05, 4.88339999999976e-05, 4.865199999999972e-05, 4.816599999999879e-05, 4.798599999999986e-05, 4.888899999999988e-05]</msg>
<status status="PASS" starttime="20201030 18:39:00.310" endtime="20201030 18:39:00.317"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:00.305" endtime="20201030 18:39:00.317"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:39:00.321" endtime="20201030 18:39:00.341"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:00.320" endtime="20201030 18:39:00.341"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:00.318" endtime="20201030 18:39:00.341"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:59.959" endtime="20201030 18:39:00.342"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:59.958" endtime="20201030 18:39:00.342"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:00.351" endtime="20201030 18:39:00.367"></status>
</kw>
<msg timestamp="20201030 18:39:00.367" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:00.349" endtime="20201030 18:39:00.367"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:00.370" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:00.368" endtime="20201030 18:39:00.370"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:00.371" endtime="20201030 18:39:00.372"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:00.346" endtime="20201030 18:39:00.373"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:00.344" endtime="20201030 18:39:00.373"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:00.380" endtime="20201030 18:39:00.665"></status>
</kw>
<msg timestamp="20201030 18:39:00.668" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019630569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019680333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:00.378" endtime="20201030 18:39:00.668"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:00.676" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019630569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019680333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:00.669" endtime="20201030 18:39:00.677"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:00.677" endtime="20201030 18:39:00.679"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:00.376" endtime="20201030 18:39:00.679"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:00.374" endtime="20201030 18:39:00.680"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:39:00.684" level="INFO">${RESULT} = [{'diff': 4.976400000000075e-05}, {'diff': 4.991700000000002e-05}, {'diff': 4.96530000000002e-05}, {'diff': 4.995800000000272e-05}, {'diff': 4.980499999999999e-05}, {'diff': 4.922199999999807e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:39:00.681" endtime="20201030 18:39:00.684"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:39:00.689" level="INFO">${ACCURACY} = {'diff': [4.976400000000075e-05, 4.991700000000002e-05, 4.96530000000002e-05, 4.995800000000272e-05, 4.980499999999999e-05, 4.922199999999807e-05, 4.9667000000003236e-05, 4.987500000000131e-05, 4.9917...</msg>
<status status="PASS" starttime="20201030 18:39:00.685" endtime="20201030 18:39:00.689"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:39:00.693" level="INFO">NAME: accuracy-TIMER_SET-45-philip</msg>
<status status="PASS" starttime="20201030 18:39:00.692" endtime="20201030 18:39:00.694"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:39:00.696" level="INFO">VALUE: [4.976400000000075e-05, 4.991700000000002e-05, 4.96530000000002e-05, 4.995800000000272e-05, 4.980499999999999e-05, 4.922199999999807e-05, 4.9667000000003236e-05, 4.987500000000131e-05, 4.991700000000002e-05, 4.96530000000002e-05, 4.976400000000075e-05, 4.952800000000007e-05, 4.961100000000149e-05, 4.938900000000038e-05, 4.95140000000005e-05, 4.9887999999997934e-05, 4.909699999999795e-05, 4.958299999999888e-05, 4.915200000000022e-05, 4.975000000000118e-05, 4.95140000000005e-05, 4.908299999999838e-05, 4.990300000000045e-05, 4.96530000000002e-05, 4.993099999999959e-05, 4.962500000000106e-05, 4.961099999999802e-05, 4.9707999999999e-05, 4.8945000000001626e-05, 4.9473000000001266e-05, 4.941699999999952e-05, 4.930599999999896e-05, 4.9014e-05, 4.994399999999968e-05, 4.958299999999888e-05, 4.988900000000088e-05, 4.934700000000167e-05, 4.916599999999979e-05, 4.954100000000017e-05, 4.977800000000032e-05, 4.931900000000253e-05, 4.991700000000002e-05, 4.931900000000253e-05, 4.900000000000043e-05, 4.937500000000081e-05, 4.936100000000124e-05, 4.940299999999995e-05, 4.984800000000164e-05, 4.9723000000001516e-05, 4.970899999999848e-05]</msg>
<status status="PASS" starttime="20201030 18:39:00.694" endtime="20201030 18:39:00.696"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:00.690" endtime="20201030 18:39:00.697"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:39:00.701" endtime="20201030 18:39:00.720"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:00.699" endtime="20201030 18:39:00.721"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:00.698" endtime="20201030 18:39:00.721"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:00.343" endtime="20201030 18:39:00.721"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:00.342" endtime="20201030 18:39:00.721"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:00.730" endtime="20201030 18:39:00.745"></status>
</kw>
<msg timestamp="20201030 18:39:00.746" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:00.728" endtime="20201030 18:39:00.746"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:00.748" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:00.747" endtime="20201030 18:39:00.748"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:00.749" endtime="20201030 18:39:00.751"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:00.726" endtime="20201030 18:39:00.751"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:00.724" endtime="20201030 18:39:00.752"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:00.758" endtime="20201030 18:39:01.045"></status>
</kw>
<msg timestamp="20201030 18:39:01.048" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019383681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019434597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:00.756" endtime="20201030 18:39:01.049"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:01.057" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019383681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019434597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:01.049" endtime="20201030 18:39:01.057"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:01.058" endtime="20201030 18:39:01.059"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:00.754" endtime="20201030 18:39:01.060"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:00.752" endtime="20201030 18:39:01.060"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:39:01.064" level="INFO">${RESULT} = [{'diff': 5.091600000000154e-05}, {'diff': 5.030499999999702e-05}, {'diff': 5.055600000000021e-05}, {'diff': 5.069400000000043e-05}, {'diff': 5.069400000000043e-05}, {'diff': 4.995799999999925e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:39:01.061" endtime="20201030 18:39:01.064"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:39:01.068" level="INFO">${ACCURACY} = {'diff': [5.091600000000154e-05, 5.030499999999702e-05, 5.055600000000021e-05, 5.069400000000043e-05, 5.069400000000043e-05, 4.995799999999925e-05, 5.018099999999984e-05, 5.086099999999927e-05, 5.0597...</msg>
<status status="PASS" starttime="20201030 18:39:01.065" endtime="20201030 18:39:01.069"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:39:01.073" level="INFO">NAME: accuracy-TIMER_SET-46-philip</msg>
<status status="PASS" starttime="20201030 18:39:01.072" endtime="20201030 18:39:01.073"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:39:01.075" level="INFO">VALUE: [5.091600000000154e-05, 5.030499999999702e-05, 5.055600000000021e-05, 5.069400000000043e-05, 5.069400000000043e-05, 4.995799999999925e-05, 5.018099999999984e-05, 5.086099999999927e-05, 5.059799999999892e-05, 5.079200000000089e-05, 5.036100000000224e-05, 5.06530000000012e-05, 4.997199999999882e-05, 4.995899999999873e-05, 5.079100000000142e-05, 5.047199999999932e-05, 5.002800000000057e-05, 5.022199999999907e-05, 5.095800000000025e-05, 5.011099999999852e-05, 4.997199999999882e-05, 5.059699999999945e-05, 5.005599999999971e-05, 5.073599999999914e-05, 5.0014000000001e-05, 5.076400000000175e-05, 5.065299999999773e-05, 5.068100000000034e-05, 5.047199999999932e-05, 5.0320000000003e-05, 5.0652000000001723e-05, 5.088900000000188e-05, 5.004100000000067e-05, 4.994399999999968e-05, 5.094400000000068e-05, 5.0915999999998074e-05, 5.023600000000211e-05, 5.090300000000145e-05, 5.087499999999884e-05, 5.006899999999981e-05, 5.079200000000089e-05, 5.090300000000145e-05, 5.004200000000014e-05, 5.023599999999864e-05, 5.016700000000027e-05, 5.065299999999773e-05, 5.037500000000181e-05, 5.058399999999935e-05, 5.024999999999821e-05, 5.002800000000057e-05]</msg>
<status status="PASS" starttime="20201030 18:39:01.074" endtime="20201030 18:39:01.076"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:01.069" endtime="20201030 18:39:01.077"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:39:01.080" endtime="20201030 18:39:01.100"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:01.079" endtime="20201030 18:39:01.100"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:01.078" endtime="20201030 18:39:01.100"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:00.722" endtime="20201030 18:39:01.101"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:00.722" endtime="20201030 18:39:01.101"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:01.110" endtime="20201030 18:39:01.128"></status>
</kw>
<msg timestamp="20201030 18:39:01.129" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:01.108" endtime="20201030 18:39:01.129"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:01.131" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:01.130" endtime="20201030 18:39:01.132"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:01.132" endtime="20201030 18:39:01.134"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:01.105" endtime="20201030 18:39:01.134"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:01.103" endtime="20201030 18:39:01.135"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:01.141" endtime="20201030 18:39:01.426"></status>
</kw>
<msg timestamp="20201030 18:39:01.429" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020848875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020900292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:01.140" endtime="20201030 18:39:01.429"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:01.437" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020848875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020900292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:01.430" endtime="20201030 18:39:01.437"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:01.438" endtime="20201030 18:39:01.440"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:01.137" endtime="20201030 18:39:01.440"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:01.135" endtime="20201030 18:39:01.441"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:39:01.445" level="INFO">${RESULT} = [{'diff': 5.141700000000152e-05}, {'diff': 5.134800000000314e-05}, {'diff': 5.145800000000075e-05}, {'diff': 5.132000000000053e-05}, {'diff': 5.155499999999827e-05}, {'diff': 5.123600000000311e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:39:01.441" endtime="20201030 18:39:01.445"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:39:01.449" level="INFO">${ACCURACY} = {'diff': [5.141700000000152e-05, 5.134800000000314e-05, 5.145800000000075e-05, 5.132000000000053e-05, 5.155499999999827e-05, 5.123600000000311e-05, 5.109699999999995e-05, 5.1708000000001e-05, 5.183300...</msg>
<status status="PASS" starttime="20201030 18:39:01.446" endtime="20201030 18:39:01.449"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:39:01.453" level="INFO">NAME: accuracy-TIMER_SET-47-philip</msg>
<status status="PASS" starttime="20201030 18:39:01.452" endtime="20201030 18:39:01.453"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:39:01.456" level="INFO">VALUE: [5.141700000000152e-05, 5.134800000000314e-05, 5.145800000000075e-05, 5.132000000000053e-05, 5.155499999999827e-05, 5.123600000000311e-05, 5.109699999999995e-05, 5.1708000000001e-05, 5.183300000000113e-05, 5.097199999999982e-05, 5.115299999999823e-05, 5.16530000000022e-05, 5.118000000000136e-05, 5.158300000000088e-05, 5.113899999999866e-05, 5.136099999999977e-05, 5.098599999999939e-05, 5.123599999999964e-05, 5.129200000000139e-05, 5.107000000000028e-05, 5.1457999999997284e-05, 5.169500000000091e-05, 5.1443999999997714e-05, 5.129099999999845e-05, 5.13470000000002e-05, 5.124999999999921e-05, 5.145800000000075e-05, 5.172200000000057e-05, 5.115299999999823e-05, 5.143100000000109e-05, 5.124999999999921e-05, 5.161100000000002e-05, 5.177799999999885e-05, 5.113900000000213e-05, 5.095899999999973e-05, 5.138899999999891e-05, 5.183300000000113e-05, 5.108400000000332e-05, 5.137499999999934e-05, 5.173600000000014e-05, 5.183300000000113e-05, 5.159700000000045e-05, 5.136099999999977e-05, 5.106900000000081e-05, 5.173600000000014e-05, 5.130500000000149e-05, 5.15279999999986e-05, 5.123599999999964e-05, 5.159699999999698e-05, 5.147200000000032e-05]</msg>
<status status="PASS" starttime="20201030 18:39:01.454" endtime="20201030 18:39:01.457"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:01.450" endtime="20201030 18:39:01.458"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:39:01.461" endtime="20201030 18:39:01.481"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:01.460" endtime="20201030 18:39:01.481"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:01.459" endtime="20201030 18:39:01.482"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:01.102" endtime="20201030 18:39:01.482"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:01.101" endtime="20201030 18:39:01.482"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:01.493" endtime="20201030 18:39:01.511"></status>
</kw>
<msg timestamp="20201030 18:39:01.511" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:01.491" endtime="20201030 18:39:01.511"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:01.515" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:01.512" endtime="20201030 18:39:01.515"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:01.516" endtime="20201030 18:39:01.519"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:01.488" endtime="20201030 18:39:01.520"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:01.485" endtime="20201030 18:39:01.521"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:01.530" endtime="20201030 18:39:01.816"></status>
</kw>
<msg timestamp="20201030 18:39:01.819" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022646931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022699694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:01.528" endtime="20201030 18:39:01.820"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:01.828" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022646931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022699694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:01.821" endtime="20201030 18:39:01.828"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:01.829" endtime="20201030 18:39:01.830"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:01.525" endtime="20201030 18:39:01.831"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:01.522" endtime="20201030 18:39:01.831"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:39:01.835" level="INFO">${RESULT} = [{'diff': 5.276300000000081e-05}, {'diff': 5.219499999999794e-05}, {'diff': 5.223600000000064e-05}, {'diff': 5.229099999999945e-05}, {'diff': 5.230499999999902e-05}, {'diff': 5.2235999999997174e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:39:01.832" endtime="20201030 18:39:01.836"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:39:01.843" level="INFO">${ACCURACY} = {'diff': [5.276300000000081e-05, 5.219499999999794e-05, 5.223600000000064e-05, 5.229099999999945e-05, 5.230499999999902e-05, 5.2235999999997174e-05, 5.251400000000003e-05, 5.281900000000256e-05, 5.277...</msg>
<status status="PASS" starttime="20201030 18:39:01.836" endtime="20201030 18:39:01.843"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:39:01.847" level="INFO">NAME: accuracy-TIMER_SET-48-philip</msg>
<status status="PASS" starttime="20201030 18:39:01.846" endtime="20201030 18:39:01.848"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:39:01.850" level="INFO">VALUE: [5.276300000000081e-05, 5.219499999999794e-05, 5.223600000000064e-05, 5.229099999999945e-05, 5.230499999999902e-05, 5.2235999999997174e-05, 5.251400000000003e-05, 5.281900000000256e-05, 5.277799999999985e-05, 5.248600000000089e-05, 5.261100000000102e-05, 5.215299999999923e-05, 5.229199999999892e-05, 5.291700000000302e-05, 5.209800000000042e-05, 5.261099999999755e-05, 5.261099999999755e-05, 5.277799999999985e-05, 5.275000000000071e-05, 5.205500000000224e-05, 5.250000000000046e-05, 5.28470000000017e-05, 5.206899999999834e-05, 5.206900000000181e-05, 5.215299999999923e-05, 5.195800000000125e-05, 5.281899999999909e-05, 5.293099999999912e-05, 5.270900000000148e-05, 5.222200000000107e-05, 5.258300000000188e-05, 5.254199999999917e-05, 5.21669999999988e-05, 5.252700000000013e-05, 5.230600000000196e-05, 5.236200000000024e-05, 5.255499999999927e-05, 5.226399999999978e-05, 5.230499999999902e-05, 5.2207999999998034e-05, 5.205600000000171e-05, 5.204199999999867e-05, 5.237500000000034e-05, 5.20279999999991e-05, 5.199999999999996e-05, 5.284699999999823e-05, 5.23470000000012e-05, 5.290299999999998e-05, 5.254199999999917e-05, 5.230599999999849e-05]</msg>
<status status="PASS" starttime="20201030 18:39:01.848" endtime="20201030 18:39:01.850"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:01.844" endtime="20201030 18:39:01.851"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:39:01.855" endtime="20201030 18:39:01.874"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:01.853" endtime="20201030 18:39:01.875"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:01.852" endtime="20201030 18:39:01.875"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:01.483" endtime="20201030 18:39:01.875"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:01.482" endtime="20201030 18:39:01.875"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:01.884" endtime="20201030 18:39:01.900"></status>
</kw>
<msg timestamp="20201030 18:39:01.901" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:01.882" endtime="20201030 18:39:01.901"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:01.903" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:01.902" endtime="20201030 18:39:01.903"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:01.904" endtime="20201030 18:39:01.906"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:01.880" endtime="20201030 18:39:01.906"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:01.878" endtime="20201030 18:39:01.907"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:01.913" endtime="20201030 18:39:02.199"></status>
</kw>
<msg timestamp="20201030 18:39:02.202" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019318167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019371833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:01.911" endtime="20201030 18:39:02.202"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:02.210" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019318167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019371833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:02.203" endtime="20201030 18:39:02.210"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:02.211" endtime="20201030 18:39:02.213"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:01.909" endtime="20201030 18:39:02.213"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:01.907" endtime="20201030 18:39:02.214"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:39:02.218" level="INFO">${RESULT} = [{'diff': 5.3666000000000824e-05}, {'diff': 5.4013999999998064e-05}, {'diff': 5.3166000000000324e-05}, {'diff': 5.362499999999812e-05}, {'diff': 5.383299999999966e-05}, {'diff': 5.343100000000309e-05}...</msg>
<status status="PASS" starttime="20201030 18:39:02.214" endtime="20201030 18:39:02.218"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:39:02.222" level="INFO">${ACCURACY} = {'diff': [5.3666000000000824e-05, 5.4013999999998064e-05, 5.3166000000000324e-05, 5.362499999999812e-05, 5.383299999999966e-05, 5.343100000000309e-05, 5.304200000000314e-05, 5.362499999999812e-05, 5.3...</msg>
<status status="PASS" starttime="20201030 18:39:02.219" endtime="20201030 18:39:02.222"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:39:02.226" level="INFO">NAME: accuracy-TIMER_SET-49-philip</msg>
<status status="PASS" starttime="20201030 18:39:02.225" endtime="20201030 18:39:02.227"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:39:02.229" level="INFO">VALUE: [5.3666000000000824e-05, 5.4013999999998064e-05, 5.3166000000000324e-05, 5.362499999999812e-05, 5.383299999999966e-05, 5.343100000000309e-05, 5.304200000000314e-05, 5.362499999999812e-05, 5.358399999999888e-05, 5.311099999999805e-05, 5.309800000000142e-05, 5.355600000000321e-05, 5.369499999999944e-05, 5.358400000000235e-05, 5.301400000000053e-05, 5.352699999999766e-05, 5.302700000000063e-05, 5.3707999999999534e-05, 5.338900000000091e-05, 5.313900000000066e-05, 5.356899999999984e-05, 5.35280000000006e-05, 5.390300000000098e-05, 5.391700000000055e-05, 5.384800000000217e-05, 5.368099999999987e-05, 5.38470000000027e-05, 5.3193999999999464e-05, 5.320900000000198e-05, 5.302700000000063e-05, 5.380500000000052e-05, 5.356899999999984e-05, 5.350000000000146e-05, 5.338900000000091e-05, 5.388900000000141e-05, 5.338900000000091e-05, 5.3527999999997133e-05, 5.388900000000141e-05, 5.334699999999873e-05, 5.2971999999998354e-05, 5.363900000000116e-05, 5.355500000000027e-05, 5.326400000000078e-05, 5.386100000000227e-05, 5.3235999999998174e-05, 5.3916000000001074e-05, 5.390300000000098e-05, 5.294499999999869e-05, 5.3693999999999964e-05, 5.3916000000001074e-05]</msg>
<status status="PASS" starttime="20201030 18:39:02.227" endtime="20201030 18:39:02.229"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:02.223" endtime="20201030 18:39:02.230"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:39:02.234" endtime="20201030 18:39:02.253"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:02.232" endtime="20201030 18:39:02.254"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:02.231" endtime="20201030 18:39:02.254"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:01.876" endtime="20201030 18:39:02.254"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:01.876" endtime="20201030 18:39:02.254"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:02.263" endtime="20201030 18:39:02.281"></status>
</kw>
<msg timestamp="20201030 18:39:02.281" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:02.261" endtime="20201030 18:39:02.282"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:02.284" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:02.282" endtime="20201030 18:39:02.284"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:02.285" endtime="20201030 18:39:02.286"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:02.259" endtime="20201030 18:39:02.287"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:02.257" endtime="20201030 18:39:02.287"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:02.294" endtime="20201030 18:39:02.582"></status>
</kw>
<msg timestamp="20201030 18:39:02.585" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021075861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021130417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:02.292" endtime="20201030 18:39:02.585"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:02.593" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021075861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021130417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:02.586" endtime="20201030 18:39:02.594"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:02.595" endtime="20201030 18:39:02.596"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:02.290" endtime="20201030 18:39:02.597"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:02.288" endtime="20201030 18:39:02.597"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:39:02.601" level="INFO">${RESULT} = [{'diff': 5.455599999999727e-05}, {'diff': 5.394499999999969e-05}, {'diff': 5.418100000000037e-05}, {'diff': 5.394499999999969e-05}, {'diff': 5.463899999999869e-05}, {'diff': 5.483300000000066e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:39:02.598" endtime="20201030 18:39:02.601"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:39:02.605" level="INFO">${ACCURACY} = {'diff': [5.455599999999727e-05, 5.394499999999969e-05, 5.418100000000037e-05, 5.394499999999969e-05, 5.463899999999869e-05, 5.483300000000066e-05, 5.413900000000166e-05, 5.4901999999999035e-05, 5.447...</msg>
<status status="PASS" starttime="20201030 18:39:02.602" endtime="20201030 18:39:02.606"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:39:02.610" level="INFO">NAME: accuracy-TIMER_SET-50-philip</msg>
<status status="PASS" starttime="20201030 18:39:02.609" endtime="20201030 18:39:02.610"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:39:02.612" level="INFO">VALUE: [5.455599999999727e-05, 5.394499999999969e-05, 5.418100000000037e-05, 5.394499999999969e-05, 5.463899999999869e-05, 5.483300000000066e-05, 5.413900000000166e-05, 5.4901999999999035e-05, 5.4471999999999854e-05, 5.411099999999905e-05, 5.458300000000041e-05, 5.4708000000000534e-05, 5.476400000000228e-05, 5.411099999999905e-05, 5.434699999999973e-05, 5.455600000000074e-05, 5.488899999999894e-05, 5.413899999999819e-05, 5.4249999999998744e-05, 5.422300000000255e-05, 5.418100000000037e-05, 5.441699999999758e-05, 5.3985999999998924e-05, 5.451299999999909e-05, 5.463900000000216e-05, 5.456900000000084e-05, 5.4471999999999854e-05, 5.4749999999999244e-05, 5.413900000000166e-05, 5.409699999999948e-05, 5.4208000000000034e-05, 5.476400000000228e-05, 5.4722000000000104e-05, 5.405600000000024e-05, 5.419499999999994e-05, 5.430600000000049e-05, 5.4221999999999604e-05, 5.462499999999912e-05, 5.402699999999816e-05, 5.4263999999998314e-05, 5.4458000000000284e-05, 5.4221999999999604e-05, 5.408299999999991e-05, 5.436100000000277e-05, 5.434699999999973e-05, 5.490299999999851e-05, 5.481900000000109e-05, 5.46670000000013e-05, 5.3971999999999354e-05, 5.426400000000178e-05]</msg>
<status status="PASS" starttime="20201030 18:39:02.611" endtime="20201030 18:39:02.614"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:02.606" endtime="20201030 18:39:02.614"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:39:02.618" endtime="20201030 18:39:02.638"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:02.617" endtime="20201030 18:39:02.638"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:02.615" endtime="20201030 18:39:02.639"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:02.255" endtime="20201030 18:39:02.639"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:02.255" endtime="20201030 18:39:02.639"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:02.648" endtime="20201030 18:39:02.665"></status>
</kw>
<msg timestamp="20201030 18:39:02.665" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:02.646" endtime="20201030 18:39:02.666"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:02.668" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:02.667" endtime="20201030 18:39:02.668"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:02.669" endtime="20201030 18:39:02.671"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:02.643" endtime="20201030 18:39:02.671"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:02.641" endtime="20201030 18:39:02.672"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:02.678" endtime="20201030 18:39:02.963"></status>
</kw>
<msg timestamp="20201030 18:39:02.966" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020108792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020164083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:02.676" endtime="20201030 18:39:02.966"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:02.974" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020108792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020164083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:02.967" endtime="20201030 18:39:02.975"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:02.975" endtime="20201030 18:39:02.977"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:02.674" endtime="20201030 18:39:02.978"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:02.672" endtime="20201030 18:39:02.978"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:39:02.982" level="INFO">${RESULT} = [{'diff': 5.529099999999898e-05}, {'diff': 5.5722000000001104e-05}, {'diff': 5.512499999999962e-05}, {'diff': 5.4972000000000354e-05}, {'diff': 5.506900000000134e-05}, {'diff': 5.508300000000091e-05},...</msg>
<status status="PASS" starttime="20201030 18:39:02.979" endtime="20201030 18:39:02.982"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:39:02.987" level="INFO">${ACCURACY} = {'diff': [5.529099999999898e-05, 5.5722000000001104e-05, 5.512499999999962e-05, 5.4972000000000354e-05, 5.506900000000134e-05, 5.508300000000091e-05, 5.588899999999994e-05, 5.5236000000000174e-05, 5.5...</msg>
<status status="PASS" starttime="20201030 18:39:02.983" endtime="20201030 18:39:02.987"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:39:02.991" level="INFO">NAME: accuracy-TIMER_SET-51-philip</msg>
<status status="PASS" starttime="20201030 18:39:02.990" endtime="20201030 18:39:02.992"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:39:02.994" level="INFO">VALUE: [5.529099999999898e-05, 5.5722000000001104e-05, 5.512499999999962e-05, 5.4972000000000354e-05, 5.506900000000134e-05, 5.508300000000091e-05, 5.588899999999994e-05, 5.5236000000000174e-05, 5.5236000000000174e-05, 5.51809999999979e-05, 5.5249999999999744e-05, 5.5958000000001784e-05, 5.4985999999999924e-05, 5.5915999999999605e-05, 5.577699999999991e-05, 5.5208000000001034e-05, 5.558300000000141e-05, 5.5694000000001964e-05, 5.5735999999997204e-05, 5.530600000000149e-05, 5.511100000000005e-05, 5.541700000000205e-05, 5.5013999999999064e-05, 5.5805999999998523e-05, 5.5305999999998023e-05, 5.557000000000131e-05, 5.5722000000001104e-05, 5.565299999999926e-05, 5.588899999999994e-05, 5.50280000000021e-05, 5.529099999999898e-05, 5.5527999999999134e-05, 5.5750000000000244e-05, 5.556899999999837e-05, 5.55410000000027e-05, 5.5263999999999314e-05, 5.566699999999883e-05, 5.5679999999998925e-05, 5.565300000000273e-05, 5.559700000000098e-05, 5.526400000000278e-05, 5.529200000000192e-05, 5.5777999999999384e-05, 5.532000000000106e-05, 5.5708000000001534e-05, 5.545900000000076e-05, 5.5513999999999564e-05, 5.536199999999977e-05, 5.540299999999901e-05, 5.55549999999988e-05]</msg>
<status status="PASS" starttime="20201030 18:39:02.992" endtime="20201030 18:39:02.994"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:02.988" endtime="20201030 18:39:02.995"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:39:02.999" endtime="20201030 18:39:03.018"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:02.997" endtime="20201030 18:39:03.019"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:02.996" endtime="20201030 18:39:03.019"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:02.640" endtime="20201030 18:39:03.019"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:02.639" endtime="20201030 18:39:03.019"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:03.028" endtime="20201030 18:39:03.045"></status>
</kw>
<msg timestamp="20201030 18:39:03.046" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:03.027" endtime="20201030 18:39:03.046"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:03.048" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:03.047" endtime="20201030 18:39:03.049"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:03.050" endtime="20201030 18:39:03.051"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:03.024" endtime="20201030 18:39:03.052"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:03.022" endtime="20201030 18:39:03.052"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:03.058" endtime="20201030 18:39:03.346"></status>
</kw>
<msg timestamp="20201030 18:39:03.349" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019486833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019543153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:03.057" endtime="20201030 18:39:03.349"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:03.357" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019486833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019543153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:03.350" endtime="20201030 18:39:03.357"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:03.358" endtime="20201030 18:39:03.360"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:03.054" endtime="20201030 18:39:03.360"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:03.053" endtime="20201030 18:39:03.361"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:39:03.365" level="INFO">${RESULT} = [{'diff': 5.632000000000206e-05}, {'diff': 5.661100000000155e-05}, {'diff': 5.672299999999811e-05}, {'diff': 5.595899999999779e-05}, {'diff': 5.602700000000016e-05}, {'diff': 5.658300000000241e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:39:03.362" endtime="20201030 18:39:03.365"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:39:03.369" level="INFO">${ACCURACY} = {'diff': [5.632000000000206e-05, 5.661100000000155e-05, 5.672299999999811e-05, 5.595899999999779e-05, 5.602700000000016e-05, 5.658300000000241e-05, 5.6749999999997774e-05, 5.634699999999826e-05, 5.606...</msg>
<status status="PASS" starttime="20201030 18:39:03.366" endtime="20201030 18:39:03.369"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:39:03.373" level="INFO">NAME: accuracy-TIMER_SET-52-philip</msg>
<status status="PASS" starttime="20201030 18:39:03.372" endtime="20201030 18:39:03.374"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:39:03.376" level="INFO">VALUE: [5.632000000000206e-05, 5.661100000000155e-05, 5.672299999999811e-05, 5.595899999999779e-05, 5.602700000000016e-05, 5.658300000000241e-05, 5.6749999999997774e-05, 5.634699999999826e-05, 5.606900000000234e-05, 5.65549999999998e-05, 5.638900000000044e-05, 5.6764000000000814e-05, 5.659700000000198e-05, 5.6541999999999704e-05, 5.619499999999847e-05, 5.6250000000000744e-05, 5.6236000000001174e-05, 5.662500000000112e-05, 5.595899999999779e-05, 5.659799999999798e-05, 5.659699999999851e-05, 5.6472000000001854e-05, 5.6249999999997274e-05, 5.686099999999833e-05, 5.656899999999937e-05, 5.656900000000284e-05, 5.68749999999979e-05, 5.687500000000137e-05, 5.640300000000001e-05, 5.6264000000000314e-05, 5.644499999999872e-05, 5.6805999999999524e-05, 5.6277999999999884e-05, 5.640300000000001e-05, 5.6055999999998773e-05, 5.6291999999999454e-05, 5.658400000000188e-05, 5.669500000000244e-05, 5.633300000000216e-05, 5.630499999999955e-05, 5.6943999999999745e-05, 5.6165999999999855e-05, 5.609699999999801e-05, 5.641700000000305e-05, 5.6722000000002104e-05, 5.6528000000000134e-05, 5.6277999999999884e-05, 5.658300000000241e-05, 5.6236000000001174e-05, 5.687500000000137e-05]</msg>
<status status="PASS" starttime="20201030 18:39:03.374" endtime="20201030 18:39:03.377"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:03.370" endtime="20201030 18:39:03.377"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:39:03.381" endtime="20201030 18:39:03.400"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:03.379" endtime="20201030 18:39:03.401"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:03.378" endtime="20201030 18:39:03.401"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:03.020" endtime="20201030 18:39:03.401"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:03.020" endtime="20201030 18:39:03.401"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:03.410" endtime="20201030 18:39:03.428"></status>
</kw>
<msg timestamp="20201030 18:39:03.428" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:03.409" endtime="20201030 18:39:03.429"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:03.431" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:03.429" endtime="20201030 18:39:03.431"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:03.432" endtime="20201030 18:39:03.433"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:03.406" endtime="20201030 18:39:03.434"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:03.404" endtime="20201030 18:39:03.434"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:03.441" endtime="20201030 18:39:03.726"></status>
</kw>
<msg timestamp="20201030 18:39:03.729" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020933917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020990958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:03.439" endtime="20201030 18:39:03.729"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:03.737" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020933917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020990958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:03.730" endtime="20201030 18:39:03.738"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:03.739" endtime="20201030 18:39:03.740"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:03.437" endtime="20201030 18:39:03.741"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:03.435" endtime="20201030 18:39:03.741"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:39:03.745" level="INFO">${RESULT} = [{'diff': 5.704100000000073e-05}, {'diff': 5.6971999999998885e-05}, {'diff': 5.7764000000001814e-05}, {'diff': 5.6957999999999315e-05}, {'diff': 5.715299999999729e-05}, {'diff': 5.759699999999951e-05}...</msg>
<status status="PASS" starttime="20201030 18:39:03.742" endtime="20201030 18:39:03.745"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:39:03.749" level="INFO">${ACCURACY} = {'diff': [5.704100000000073e-05, 5.6971999999998885e-05, 5.7764000000001814e-05, 5.6957999999999315e-05, 5.715299999999729e-05, 5.759699999999951e-05, 5.715300000000076e-05, 5.787500000000237e-05, 5.7...</msg>
<status status="PASS" starttime="20201030 18:39:03.746" endtime="20201030 18:39:03.749"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:39:03.754" level="INFO">NAME: accuracy-TIMER_SET-53-philip</msg>
<status status="PASS" starttime="20201030 18:39:03.753" endtime="20201030 18:39:03.754"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:39:03.756" level="INFO">VALUE: [5.704100000000073e-05, 5.6971999999998885e-05, 5.7764000000001814e-05, 5.6957999999999315e-05, 5.715299999999729e-05, 5.759699999999951e-05, 5.715300000000076e-05, 5.787500000000237e-05, 5.737500000000187e-05, 5.723700000000165e-05, 5.793099999999718e-05, 5.738900000000144e-05, 5.695899999999879e-05, 5.7069999999999343e-05, 5.7958000000000315e-05, 5.734699999999926e-05, 5.711100000000205e-05, 5.7694000000000495e-05, 5.730500000000055e-05, 5.7014000000001064e-05, 5.759699999999951e-05, 5.733299999999969e-05, 5.745900000000276e-05, 5.75550000000008e-05, 5.788900000000194e-05, 5.740299999999754e-05, 5.712500000000162e-05, 5.7014000000001064e-05, 5.702700000000116e-05, 5.7000000000001494e-05, 5.730500000000055e-05, 5.712500000000162e-05, 5.784699999999976e-05, 5.709699999999901e-05, 5.737500000000187e-05, 5.715300000000076e-05, 5.7749999999998775e-05, 5.7721999999999635e-05, 5.768099999999693e-05, 5.765300000000126e-05, 5.6985999999998455e-05, 5.6985999999998455e-05, 5.7820000000000094e-05, 5.7306000000000024e-05, 5.7041999999996734e-05, 5.7319999999999593e-05, 5.7138000000001715e-05, 5.709699999999901e-05, 5.7221999999999135e-05, 5.7680000000000925e-05]</msg>
<status status="PASS" starttime="20201030 18:39:03.755" endtime="20201030 18:39:03.758"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:03.750" endtime="20201030 18:39:03.758"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:39:03.762" endtime="20201030 18:39:03.781"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:03.760" endtime="20201030 18:39:03.782"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:03.759" endtime="20201030 18:39:03.782"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:03.402" endtime="20201030 18:39:03.782"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:03.402" endtime="20201030 18:39:03.783"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:03.791" endtime="20201030 18:39:03.809"></status>
</kw>
<msg timestamp="20201030 18:39:03.809" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:03.790" endtime="20201030 18:39:03.809"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:03.811" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:03.810" endtime="20201030 18:39:03.812"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:03.812" endtime="20201030 18:39:03.814"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:03.787" endtime="20201030 18:39:03.815"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:03.785" endtime="20201030 18:39:03.815"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:03.821" endtime="20201030 18:39:04.107"></status>
</kw>
<msg timestamp="20201030 18:39:04.110" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020094361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020152611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:03.820" endtime="20201030 18:39:04.110"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:04.118" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020094361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020152611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:04.111" endtime="20201030 18:39:04.119"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:04.119" endtime="20201030 18:39:04.121"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:03.817" endtime="20201030 18:39:04.122"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:03.816" endtime="20201030 18:39:04.122"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:39:04.126" level="INFO">${RESULT} = [{'diff': 5.8249999999999275e-05}, {'diff': 5.8957999999997845e-05}, {'diff': 5.855499999999833e-05}, {'diff': 5.7958000000000315e-05}, {'diff': 5.819500000000047e-05}, {'diff': 5.838899999999897e-05}...</msg>
<status status="PASS" starttime="20201030 18:39:04.123" endtime="20201030 18:39:04.126"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:39:04.131" level="INFO">${ACCURACY} = {'diff': [5.8249999999999275e-05, 5.8957999999997845e-05, 5.855499999999833e-05, 5.7958000000000315e-05, 5.819500000000047e-05, 5.838899999999897e-05, 5.8764000000002814e-05, 5.888900000000294e-05, 5....</msg>
<status status="PASS" starttime="20201030 18:39:04.127" endtime="20201030 18:39:04.131"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:39:04.136" level="INFO">NAME: accuracy-TIMER_SET-54-philip</msg>
<status status="PASS" starttime="20201030 18:39:04.135" endtime="20201030 18:39:04.136"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:39:04.138" level="INFO">VALUE: [5.8249999999999275e-05, 5.8957999999997845e-05, 5.855499999999833e-05, 5.7958000000000315e-05, 5.819500000000047e-05, 5.838899999999897e-05, 5.8764000000002814e-05, 5.888900000000294e-05, 5.8805999999998054e-05, 5.88749999999999e-05, 5.8056000000000774e-05, 5.812499999999915e-05, 5.883300000000119e-05, 5.8235999999999705e-05, 5.88749999999999e-05, 5.83619999999993e-05, 5.8749999999999775e-05, 5.83749999999994e-05, 5.816699999999786e-05, 5.841700000000158e-05, 5.811099999999958e-05, 5.8194999999997e-05, 5.8584000000000414e-05, 5.797299999999936e-05, 5.866700000000183e-05, 5.816699999999786e-05, 5.8249999999999275e-05, 5.859699999999704e-05, 5.8651999999999316e-05, 5.884700000000076e-05, 5.8014000000002064e-05, 5.8208000000000565e-05, 5.861100000000008e-05, 5.8901999999999566e-05, 5.8263999999998844e-05, 5.859699999999704e-05, 5.8749999999999775e-05, 5.793099999999718e-05, 5.8763999999999345e-05, 5.866700000000183e-05, 5.88749999999999e-05, 5.7999999999999025e-05, 5.8651999999999316e-05, 5.8056000000000774e-05, 5.8179999999997956e-05, 5.883300000000119e-05, 5.812499999999915e-05, 5.809700000000001e-05, 5.7971999999999885e-05, 5.861199999999955e-05]</msg>
<status status="PASS" starttime="20201030 18:39:04.137" endtime="20201030 18:39:04.139"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:04.132" endtime="20201030 18:39:04.139"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:39:04.143" endtime="20201030 18:39:04.163"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:04.141" endtime="20201030 18:39:04.163"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:04.140" endtime="20201030 18:39:04.163"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:03.784" endtime="20201030 18:39:04.164"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:03.783" endtime="20201030 18:39:04.164"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:04.173" endtime="20201030 18:39:04.190"></status>
</kw>
<msg timestamp="20201030 18:39:04.190" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:04.171" endtime="20201030 18:39:04.191"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:04.193" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:04.191" endtime="20201030 18:39:04.193"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:04.194" endtime="20201030 18:39:04.195"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:04.169" endtime="20201030 18:39:04.196"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:04.167" endtime="20201030 18:39:04.197"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:04.203" endtime="20201030 18:39:04.490"></status>
</kw>
<msg timestamp="20201030 18:39:04.493" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020710972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020769972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:04.202" endtime="20201030 18:39:04.493"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:04.501" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020710972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020769972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:04.494" endtime="20201030 18:39:04.501"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:04.502" endtime="20201030 18:39:04.504"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:04.199" endtime="20201030 18:39:04.504"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:04.197" endtime="20201030 18:39:04.505"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:39:04.509" level="INFO">${RESULT} = [{'diff': 5.9000000000000025e-05}, {'diff': 5.963900000000022e-05}, {'diff': 5.909700000000101e-05}, {'diff': 5.9457999999998346e-05}, {'diff': 5.9819999999998624e-05}, {'diff': 5.970899999999807e-05}...</msg>
<status status="PASS" starttime="20201030 18:39:04.505" endtime="20201030 18:39:04.509"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:39:04.513" level="INFO">${ACCURACY} = {'diff': [5.9000000000000025e-05, 5.963900000000022e-05, 5.909700000000101e-05, 5.9457999999998346e-05, 5.9819999999998624e-05, 5.970899999999807e-05, 5.9055999999998304e-05, 5.9320000000001594e-05, 5...</msg>
<status status="PASS" starttime="20201030 18:39:04.510" endtime="20201030 18:39:04.513"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:39:04.517" level="INFO">NAME: accuracy-TIMER_SET-55-philip</msg>
<status status="PASS" starttime="20201030 18:39:04.516" endtime="20201030 18:39:04.518"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:39:04.520" level="INFO">VALUE: [5.9000000000000025e-05, 5.963900000000022e-05, 5.909700000000101e-05, 5.9457999999998346e-05, 5.9819999999998624e-05, 5.970899999999807e-05, 5.9055999999998304e-05, 5.9320000000001594e-05, 5.9277999999999414e-05, 5.944500000000172e-05, 5.945900000000129e-05, 5.9943999999999276e-05, 5.9694000000002495e-05, 5.9443999999998776e-05, 5.981899999999915e-05, 5.9236000000000705e-05, 5.981900000000262e-05, 5.993099999999918e-05, 5.9013999999999595e-05, 5.8971999999997415e-05, 5.9777999999999915e-05, 5.9278000000002884e-05, 5.9472000000001385e-05, 5.93750000000004e-05, 5.988900000000047e-05, 5.965299999999979e-05, 5.9013999999999595e-05, 5.9221999999997665e-05, 5.97629999999974e-05, 5.9652000000000316e-05, 5.9764000000000345e-05, 5.977700000000044e-05, 5.9694000000002495e-05, 5.940299999999954e-05, 5.9750000000000775e-05, 5.913900000000319e-05, 5.9013999999999595e-05, 5.988900000000047e-05, 5.98750000000009e-05, 5.970900000000154e-05, 5.9013999999999595e-05, 5.966700000000283e-05, 5.922300000000061e-05, 5.895900000000079e-05, 5.986099999999786e-05, 5.9165999999999386e-05, 5.905499999999883e-05, 5.913899999999972e-05, 5.940299999999954e-05, 5.938899999999997e-05]</msg>
<status status="PASS" starttime="20201030 18:39:04.518" endtime="20201030 18:39:04.520"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:04.514" endtime="20201030 18:39:04.521"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:39:04.525" endtime="20201030 18:39:04.544"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:04.523" endtime="20201030 18:39:04.545"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:04.522" endtime="20201030 18:39:04.545"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:04.165" endtime="20201030 18:39:04.545"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:04.164" endtime="20201030 18:39:04.545"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:04.554" endtime="20201030 18:39:04.571"></status>
</kw>
<msg timestamp="20201030 18:39:04.571" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:04.552" endtime="20201030 18:39:04.572"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:04.574" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:04.572" endtime="20201030 18:39:04.574"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:04.575" endtime="20201030 18:39:04.577"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:04.550" endtime="20201030 18:39:04.577"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:04.548" endtime="20201030 18:39:04.577"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:04.584" endtime="20201030 18:39:04.869"></status>
</kw>
<msg timestamp="20201030 18:39:04.872" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020360292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020420306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:04.582" endtime="20201030 18:39:04.873"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:04.881" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020360292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020420306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:04.874" endtime="20201030 18:39:04.881"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:04.882" endtime="20201030 18:39:04.883"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:04.580" endtime="20201030 18:39:04.884"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:04.578" endtime="20201030 18:39:04.884"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:39:04.888" level="INFO">${RESULT} = [{'diff': 6.0014000000000595e-05}, {'diff': 6.0069999999998874e-05}, {'diff': 6.0721999999999166e-05}, {'diff': 6.0514000000001095e-05}, {'diff': 6.011099999999811e-05}, {'diff': 6.0014000000000595e-0...</msg>
<status status="PASS" starttime="20201030 18:39:04.885" endtime="20201030 18:39:04.888"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:39:04.892" level="INFO">${ACCURACY} = {'diff': [6.0014000000000595e-05, 6.0069999999998874e-05, 6.0721999999999166e-05, 6.0514000000001095e-05, 6.011099999999811e-05, 6.0014000000000595e-05, 6.030500000000008e-05, 6.0528000000000665e-05, ...</msg>
<status status="PASS" starttime="20201030 18:39:04.889" endtime="20201030 18:39:04.893"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:39:04.897" level="INFO">NAME: accuracy-TIMER_SET-56-philip</msg>
<status status="PASS" starttime="20201030 18:39:04.896" endtime="20201030 18:39:04.897"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:39:04.899" level="INFO">VALUE: [6.0014000000000595e-05, 6.0069999999998874e-05, 6.0721999999999166e-05, 6.0514000000001095e-05, 6.011099999999811e-05, 6.0014000000000595e-05, 6.030500000000008e-05, 6.0528000000000665e-05, 6.03889999999975e-05, 6.0291999999999984e-05, 5.9985999999997985e-05, 6.063899999999775e-05, 6.0291999999999984e-05, 5.9986000000001455e-05, 6.037499999999793e-05, 6.0471999999998916e-05, 6.070900000000254e-05, 5.995900000000179e-05, 6.063900000000122e-05, 6.0250000000001275e-05, 6.011100000000158e-05, 6.0250000000001275e-05, 6.0680000000000456e-05, 5.9957999999998846e-05, 6.0778000000000915e-05, 6.037499999999793e-05, 6.040300000000054e-05, 6.090300000000104e-05, 6.03750000000014e-05, 6.0707999999999596e-05, 6.0778000000000915e-05, 6.037499999999793e-05, 6.0457999999999346e-05, 6.0193999999999526e-05, 6.0348000000001734e-05, 6.0707999999999596e-05, 6.059699999999904e-05, 6.0235999999998235e-05, 6.006900000000287e-05, 6.03750000000014e-05, 6.0513999999997625e-05, 6.018099999999943e-05, 6.03889999999975e-05, 6.0250000000001275e-05, 6.041700000000011e-05, 6.0264000000000845e-05, 6.041700000000011e-05, 6.070899999999907e-05, 6.0778000000000915e-05, 6.0916000000001136e-05]</msg>
<status status="PASS" starttime="20201030 18:39:04.898" endtime="20201030 18:39:04.901"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:04.893" endtime="20201030 18:39:04.901"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:39:04.905" endtime="20201030 18:39:04.924"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:04.904" endtime="20201030 18:39:04.925"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:04.902" endtime="20201030 18:39:04.925"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:04.546" endtime="20201030 18:39:04.926"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:04.546" endtime="20201030 18:39:04.926"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:04.934" endtime="20201030 18:39:04.951"></status>
</kw>
<msg timestamp="20201030 18:39:04.952" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:04.933" endtime="20201030 18:39:04.952"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:04.954" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:04.953" endtime="20201030 18:39:04.955"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:04.955" endtime="20201030 18:39:04.957"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:04.930" endtime="20201030 18:39:04.958"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:04.928" endtime="20201030 18:39:04.958"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:04.964" endtime="20201030 18:39:05.249"></status>
</kw>
<msg timestamp="20201030 18:39:05.252" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0200455, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020106931, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:39:04.963" endtime="20201030 18:39:05.252"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:05.260" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0200455, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020106931, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:39:05.253" endtime="20201030 18:39:05.261"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:05.262" endtime="20201030 18:39:05.263"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:04.960" endtime="20201030 18:39:05.264"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:04.959" endtime="20201030 18:39:05.264"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:39:05.268" level="INFO">${RESULT} = [{'diff': 6.143100000000068e-05}, {'diff': 6.172200000000017e-05}, {'diff': 6.127799999999795e-05}, {'diff': 6.154200000000123e-05}, {'diff': 6.136099999999936e-05}, {'diff': 6.15560000000008e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:39:05.265" endtime="20201030 18:39:05.268"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:39:05.275" level="INFO">${ACCURACY} = {'diff': [6.143100000000068e-05, 6.172200000000017e-05, 6.127799999999795e-05, 6.154200000000123e-05, 6.136099999999936e-05, 6.15560000000008e-05, 6.154099999999829e-05, 6.148700000000243e-05, 6.14999...</msg>
<status status="PASS" starttime="20201030 18:39:05.269" endtime="20201030 18:39:05.276"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:39:05.280" level="INFO">NAME: accuracy-TIMER_SET-57-philip</msg>
<status status="PASS" starttime="20201030 18:39:05.279" endtime="20201030 18:39:05.280"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:39:05.282" level="INFO">VALUE: [6.143100000000068e-05, 6.172200000000017e-05, 6.127799999999795e-05, 6.154200000000123e-05, 6.136099999999936e-05, 6.15560000000008e-05, 6.154099999999829e-05, 6.148700000000243e-05, 6.149999999999906e-05, 6.105500000000083e-05, 6.161099999999961e-05, 6.19300000000017e-05, 6.172200000000017e-05, 6.141600000000164e-05, 6.116700000000086e-05, 6.184700000000029e-05, 6.10560000000003e-05, 6.1028000000001165e-05, 6.136099999999936e-05, 6.118100000000043e-05, 6.166699999999789e-05, 6.17499999999993e-05, 6.0985999999998985e-05, 6.0971999999999416e-05, 6.136100000000283e-05, 6.166699999999789e-05, 6.191600000000214e-05, 6.130499999999761e-05, 6.13889999999985e-05, 6.142999999999774e-05, 6.168100000000093e-05, 6.0986000000002455e-05, 6.177799999999845e-05, 6.166699999999789e-05, 6.111099999999911e-05, 6.152800000000166e-05, 6.191700000000161e-05, 6.144500000000025e-05, 6.129100000000151e-05, 6.181900000000115e-05, 6.186099999999986e-05, 6.104100000000126e-05, 6.147199999999992e-05, 6.147199999999992e-05, 6.13889999999985e-05, 6.187499999999943e-05, 6.116700000000086e-05, 6.127800000000141e-05, 6.17499999999993e-05, 6.18340000000002e-05]</msg>
<status status="PASS" starttime="20201030 18:39:05.281" endtime="20201030 18:39:05.283"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:05.276" endtime="20201030 18:39:05.284"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:39:05.287" endtime="20201030 18:39:05.307"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:05.286" endtime="20201030 18:39:05.307"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:05.285" endtime="20201030 18:39:05.308"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:04.927" endtime="20201030 18:39:05.308"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:04.926" endtime="20201030 18:39:05.308"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:05.317" endtime="20201030 18:39:05.333"></status>
</kw>
<msg timestamp="20201030 18:39:05.333" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:05.315" endtime="20201030 18:39:05.333"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:05.336" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:05.334" endtime="20201030 18:39:05.336"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:05.337" endtime="20201030 18:39:05.338"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:05.313" endtime="20201030 18:39:05.339"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:05.311" endtime="20201030 18:39:05.339"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:05.346" endtime="20201030 18:39:05.634"></status>
</kw>
<msg timestamp="20201030 18:39:05.637" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019429542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019491486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:05.344" endtime="20201030 18:39:05.637"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:05.645" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019429542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019491486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:05.638" endtime="20201030 18:39:05.645"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:05.646" endtime="20201030 18:39:05.648"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:05.341" endtime="20201030 18:39:05.648"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:05.340" endtime="20201030 18:39:05.649"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:39:05.653" level="INFO">${RESULT} = [{'diff': 6.19439999999978e-05}, {'diff': 6.245800000000135e-05}, {'diff': 6.211100000000011e-05}, {'diff': 6.212499999999968e-05}, {'diff': 6.27080000000016e-05}, {'diff': 6.216699999999839e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:39:05.649" endtime="20201030 18:39:05.653"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:39:05.657" level="INFO">${ACCURACY} = {'diff': [6.19439999999978e-05, 6.245800000000135e-05, 6.211100000000011e-05, 6.212499999999968e-05, 6.27080000000016e-05, 6.216699999999839e-05, 6.270900000000107e-05, 6.237499999999993e-05, 6.205499...</msg>
<status status="PASS" starttime="20201030 18:39:05.654" endtime="20201030 18:39:05.657"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:39:05.661" level="INFO">NAME: accuracy-TIMER_SET-58-philip</msg>
<status status="PASS" starttime="20201030 18:39:05.660" endtime="20201030 18:39:05.661"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:39:05.664" level="INFO">VALUE: [6.19439999999978e-05, 6.245800000000135e-05, 6.211100000000011e-05, 6.212499999999968e-05, 6.27080000000016e-05, 6.216699999999839e-05, 6.270900000000107e-05, 6.237499999999993e-05, 6.205499999999836e-05, 6.287500000000043e-05, 6.286100000000086e-05, 6.290299999999957e-05, 6.248600000000049e-05, 6.258300000000147e-05, 6.231899999999818e-05, 6.240300000000254e-05, 6.241699999999864e-05, 6.230599999999809e-05, 6.240300000000254e-05, 6.208400000000044e-05, 6.263899999999975e-05, 6.243099999999821e-05, 6.293099999999871e-05, 6.2889e-05, 6.22499999999998e-05, 6.236100000000036e-05, 6.195799999999738e-05, 6.216599999999892e-05, 6.218000000000196e-05, 6.263899999999975e-05, 6.215300000000229e-05, 6.277799999999945e-05, 6.265299999999932e-05, 6.230600000000155e-05, 6.237499999999993e-05, 6.195800000000085e-05, 6.233399999999722e-05, 6.223599999999677e-05, 6.258400000000094e-05, 6.201299999999965e-05, 6.262500000000018e-05, 6.256899999999843e-05, 6.277699999999997e-05, 6.20829999999975e-05, 6.234700000000079e-05, 6.270900000000107e-05, 6.300000000000056e-05, 6.230600000000155e-05, 6.25560000000018e-05, 6.236100000000036e-05]</msg>
<status status="PASS" starttime="20201030 18:39:05.662" endtime="20201030 18:39:05.664"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:05.658" endtime="20201030 18:39:05.665"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:39:05.669" endtime="20201030 18:39:05.688"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:05.667" endtime="20201030 18:39:05.689"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:05.666" endtime="20201030 18:39:05.689"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:05.309" endtime="20201030 18:39:05.689"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:05.308" endtime="20201030 18:39:05.689"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:05.698" endtime="20201030 18:39:05.716"></status>
</kw>
<msg timestamp="20201030 18:39:05.716" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:05.696" endtime="20201030 18:39:05.717"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:05.719" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:05.718" endtime="20201030 18:39:05.719"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:05.720" endtime="20201030 18:39:05.722"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:05.694" endtime="20201030 18:39:05.722"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:05.692" endtime="20201030 18:39:05.722"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:05.729" endtime="20201030 18:39:06.015"></status>
</kw>
<msg timestamp="20201030 18:39:06.018" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020333111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020396611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:05.727" endtime="20201030 18:39:06.018"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:06.026" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020333111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020396611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:06.019" endtime="20201030 18:39:06.026"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:06.027" endtime="20201030 18:39:06.029"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:05.725" endtime="20201030 18:39:06.029"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:05.723" endtime="20201030 18:39:06.030"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:39:06.034" level="INFO">${RESULT} = [{'diff': 6.349999999999759e-05}, {'diff': 6.318100000000243e-05}, {'diff': 6.329200000000298e-05}, {'diff': 6.301300000000065e-05}, {'diff': 6.309700000000154e-05}, {'diff': 6.336199999999736e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:39:06.030" endtime="20201030 18:39:06.034"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:39:06.038" level="INFO">${ACCURACY} = {'diff': [6.349999999999759e-05, 6.318100000000243e-05, 6.329200000000298e-05, 6.301300000000065e-05, 6.309700000000154e-05, 6.336199999999736e-05, 6.344500000000225e-05, 6.308400000000144e-05, 6.3443...</msg>
<status status="PASS" starttime="20201030 18:39:06.035" endtime="20201030 18:39:06.038"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:39:06.042" level="INFO">NAME: accuracy-TIMER_SET-59-philip</msg>
<status status="PASS" starttime="20201030 18:39:06.041" endtime="20201030 18:39:06.042"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:39:06.044" level="INFO">VALUE: [6.349999999999759e-05, 6.318100000000243e-05, 6.329200000000298e-05, 6.301300000000065e-05, 6.309700000000154e-05, 6.336199999999736e-05, 6.344500000000225e-05, 6.308400000000144e-05, 6.34439999999993e-05, 6.298699999999699e-05, 6.292999999999924e-05, 6.32500000000008e-05, 6.381899999999968e-05, 6.3582999999999e-05, 6.356899999999943e-05, 6.301400000000013e-05, 6.330600000000255e-05, 6.316699999999939e-05, 6.336100000000136e-05, 6.336100000000136e-05, 6.331999999999866e-05, 6.340300000000007e-05, 6.313900000000025e-05, 6.3195000000002e-05, 6.297200000000142e-05, 6.320799999999863e-05, 6.380600000000305e-05, 6.334699999999832e-05, 6.32080000000021e-05, 6.305500000000283e-05, 6.330600000000255e-05, 6.330600000000255e-05, 6.37080000000026e-05, 6.323600000000124e-05, 6.358399999999848e-05, 6.34020000000006e-05, 6.300000000000056e-05, 6.355499999999986e-05, 6.318100000000243e-05, 6.323700000000071e-05, 6.331899999999918e-05, 6.329100000000004e-05, 6.348600000000149e-05, 6.379200000000002e-05, 6.34439999999993e-05, 6.374999999999784e-05, 6.343100000000268e-05, 6.331899999999918e-05, 6.393000000000024e-05, 6.316599999999992e-05]</msg>
<status status="PASS" starttime="20201030 18:39:06.043" endtime="20201030 18:39:06.046"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:06.038" endtime="20201030 18:39:06.047"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:39:06.050" endtime="20201030 18:39:06.070"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:06.049" endtime="20201030 18:39:06.070"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:06.048" endtime="20201030 18:39:06.071"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:05.690" endtime="20201030 18:39:06.071"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:05.690" endtime="20201030 18:39:06.071"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:06.080" endtime="20201030 18:39:06.097"></status>
</kw>
<msg timestamp="20201030 18:39:06.097" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:06.078" endtime="20201030 18:39:06.098"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:06.100" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:06.098" endtime="20201030 18:39:06.100"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:06.101" endtime="20201030 18:39:06.102"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:06.075" endtime="20201030 18:39:06.103"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:06.073" endtime="20201030 18:39:06.103"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:06.110" endtime="20201030 18:39:06.395"></status>
</kw>
<msg timestamp="20201030 18:39:06.398" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019434653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019499028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:06.108" endtime="20201030 18:39:06.399"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:06.406" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019434653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019499028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:06.400" endtime="20201030 18:39:06.407"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:06.408" endtime="20201030 18:39:06.409"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:06.106" endtime="20201030 18:39:06.410"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:06.104" endtime="20201030 18:39:06.410"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:39:06.414" level="INFO">${RESULT} = [{'diff': 6.437500000000193e-05}, {'diff': 6.459799999999905e-05}, {'diff': 6.47089999999996e-05}, {'diff': 6.45280000000012e-05}, {'diff': 6.412499999999821e-05}, {'diff': 6.476400000000188e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:39:06.411" endtime="20201030 18:39:06.414"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:39:06.419" level="INFO">${ACCURACY} = {'diff': [6.437500000000193e-05, 6.459799999999905e-05, 6.47089999999996e-05, 6.45280000000012e-05, 6.412499999999821e-05, 6.476400000000188e-05, 6.411100000000211e-05, 6.445899999999935e-05, 6.430500...</msg>
<status status="PASS" starttime="20201030 18:39:06.415" endtime="20201030 18:39:06.419"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:39:06.423" level="INFO">NAME: accuracy-TIMER_SET-60-philip</msg>
<status status="PASS" starttime="20201030 18:39:06.422" endtime="20201030 18:39:06.424"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:39:06.426" level="INFO">VALUE: [6.437500000000193e-05, 6.459799999999905e-05, 6.47089999999996e-05, 6.45280000000012e-05, 6.412499999999821e-05, 6.476400000000188e-05, 6.411100000000211e-05, 6.445899999999935e-05, 6.430500000000061e-05, 6.39439999999998e-05, 6.434699999999932e-05, 6.445799999999988e-05, 6.4583e-05, 6.488899999999853e-05, 6.418099999999996e-05, 6.458399999999948e-05, 6.426400000000138e-05, 6.420900000000257e-05, 6.466699999999742e-05, 6.47089999999996e-05, 6.402700000000122e-05, 6.477700000000197e-05, 6.408300000000297e-05, 6.401399999999766e-05, 6.426400000000138e-05, 6.493000000000124e-05, 6.462499999999871e-05, 6.412499999999821e-05, 6.437499999999846e-05, 6.433299999999975e-05, 6.47219999999997e-05, 6.411099999999864e-05, 6.473599999999927e-05, 6.473599999999927e-05, 6.431900000000018e-05, 6.487499999999896e-05, 6.416600000000092e-05, 6.430500000000061e-05, 6.45280000000012e-05, 6.4889000000002e-05, 6.459699999999957e-05, 6.456900000000043e-05, 6.483300000000025e-05, 6.470800000000013e-05, 6.433399999999923e-05, 6.488899999999853e-05, 6.486100000000286e-05, 6.47639999999984e-05, 6.40280000000007e-05, 6.400000000000156e-05]</msg>
<status status="PASS" starttime="20201030 18:39:06.425" endtime="20201030 18:39:06.427"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:06.420" endtime="20201030 18:39:06.427"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:39:06.431" endtime="20201030 18:39:06.450"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:06.429" endtime="20201030 18:39:06.451"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:06.428" endtime="20201030 18:39:06.451"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:06.072" endtime="20201030 18:39:06.451"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:06.071" endtime="20201030 18:39:06.452"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:06.460" endtime="20201030 18:39:06.478"></status>
</kw>
<msg timestamp="20201030 18:39:06.478" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:06.459" endtime="20201030 18:39:06.478"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:06.481" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:06.479" endtime="20201030 18:39:06.481"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:06.482" endtime="20201030 18:39:06.483"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:06.456" endtime="20201030 18:39:06.484"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:06.454" endtime="20201030 18:39:06.484"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:06.491" endtime="20201030 18:39:06.777"></status>
</kw>
<msg timestamp="20201030 18:39:06.781" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019350236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019416014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:06.489" endtime="20201030 18:39:06.781"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:06.789" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019350236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019416014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:06.782" endtime="20201030 18:39:06.789"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:06.790" endtime="20201030 18:39:06.791"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:06.487" endtime="20201030 18:39:06.792"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:06.485" endtime="20201030 18:39:06.792"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:39:06.796" level="INFO">${RESULT} = [{'diff': 6.577799999999898e-05}, {'diff': 6.597300000000042e-05}, {'diff': 6.57639999999994e-05}, {'diff': 6.541700000000164e-05}, {'diff': 6.592999999999877e-05}, {'diff': 6.512500000000268e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:39:06.793" endtime="20201030 18:39:06.797"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:39:06.800" level="INFO">${ACCURACY} = {'diff': [6.577799999999898e-05, 6.597300000000042e-05, 6.57639999999994e-05, 6.541700000000164e-05, 6.592999999999877e-05, 6.512500000000268e-05, 6.587499999999996e-05, 6.493100000000071e-05, 6.55269...</msg>
<status status="PASS" starttime="20201030 18:39:06.797" endtime="20201030 18:39:06.801"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:39:06.805" level="INFO">NAME: accuracy-TIMER_SET-61-philip</msg>
<status status="PASS" starttime="20201030 18:39:06.804" endtime="20201030 18:39:06.805"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:39:06.807" level="INFO">VALUE: [6.577799999999898e-05, 6.597300000000042e-05, 6.57639999999994e-05, 6.541700000000164e-05, 6.592999999999877e-05, 6.512500000000268e-05, 6.587499999999996e-05, 6.493100000000071e-05, 6.552699999999925e-05, 6.549999999999959e-05, 6.534700000000032e-05, 6.518000000000149e-05, 6.573600000000027e-05, 6.50419999999978e-05, 6.558299999999753e-05, 6.5583000000001e-05, 6.583399999999726e-05, 6.563899999999928e-05, 6.565299999999885e-05, 6.523599999999977e-05, 6.591699999999867e-05, 6.584700000000082e-05, 6.558400000000048e-05, 6.512499999999921e-05, 6.566699999999842e-05, 6.5583000000001e-05, 6.565300000000232e-05, 6.501399999999866e-05, 6.502799999999823e-05, 6.555599999999787e-05, 6.561100000000014e-05, 6.504200000000127e-05, 6.582000000000116e-05, 6.508399999999998e-05, 6.522299999999967e-05, 6.530599999999762e-05, 6.50700000000004e-05, 6.49440000000008e-05, 6.498599999999952e-05, 6.523599999999977e-05, 6.565300000000232e-05, 6.588899999999953e-05, 6.504200000000127e-05, 6.531899999999771e-05, 6.593100000000171e-05, 6.562499999999971e-05, 6.529200000000152e-05, 6.530600000000109e-05, 6.545800000000088e-05, 6.573699999999974e-05]</msg>
<status status="PASS" starttime="20201030 18:39:06.806" endtime="20201030 18:39:06.808"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:06.801" endtime="20201030 18:39:06.809"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:39:06.812" endtime="20201030 18:39:06.832"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:06.811" endtime="20201030 18:39:06.832"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:06.809" endtime="20201030 18:39:06.832"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:06.453" endtime="20201030 18:39:06.833"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:06.452" endtime="20201030 18:39:06.833"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:06.841" endtime="20201030 18:39:06.860"></status>
</kw>
<msg timestamp="20201030 18:39:06.860" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:06.840" endtime="20201030 18:39:06.860"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:06.862" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:06.861" endtime="20201030 18:39:06.863"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:06.863" endtime="20201030 18:39:06.865"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:06.837" endtime="20201030 18:39:06.866"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:06.835" endtime="20201030 18:39:06.866"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:06.872" endtime="20201030 18:39:07.159"></status>
</kw>
<msg timestamp="20201030 18:39:07.162" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020549236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020615917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:06.871" endtime="20201030 18:39:07.162"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:07.170" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020549236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020615917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:07.163" endtime="20201030 18:39:07.171"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:07.172" endtime="20201030 18:39:07.173"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:06.868" endtime="20201030 18:39:07.174"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:06.867" endtime="20201030 18:39:07.174"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:39:07.178" level="INFO">${RESULT} = [{'diff': 6.668100000000246e-05}, {'diff': 6.682000000000216e-05}, {'diff': 6.659800000000105e-05}, {'diff': 6.616699999999892e-05}, {'diff': 6.679100000000007e-05}, {'diff': 6.65969999999981e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:39:07.175" endtime="20201030 18:39:07.178"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:39:07.182" level="INFO">${ACCURACY} = {'diff': [6.668100000000246e-05, 6.682000000000216e-05, 6.659800000000105e-05, 6.616699999999892e-05, 6.679100000000007e-05, 6.65969999999981e-05, 6.677799999999998e-05, 6.692999999999977e-05, 6.65829...</msg>
<status status="PASS" starttime="20201030 18:39:07.179" endtime="20201030 18:39:07.182"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:39:07.187" level="INFO">NAME: accuracy-TIMER_SET-62-philip</msg>
<status status="PASS" starttime="20201030 18:39:07.185" endtime="20201030 18:39:07.187"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:39:07.189" level="INFO">VALUE: [6.668100000000246e-05, 6.682000000000216e-05, 6.659800000000105e-05, 6.616699999999892e-05, 6.679100000000007e-05, 6.65969999999981e-05, 6.677799999999998e-05, 6.692999999999977e-05, 6.658299999999853e-05, 6.662499999999724e-05, 6.636200000000037e-05, 6.643000000000274e-05, 6.605599999999837e-05, 6.691699999999967e-05, 6.60830000000015e-05, 6.687500000000096e-05, 6.687500000000096e-05, 6.684699999999835e-05, 6.669399999999909e-05, 6.633299999999828e-05, 6.606899999999846e-05, 6.619399999999859e-05, 6.688900000000053e-05, 6.652799999999973e-05, 6.647199999999798e-05, 6.669399999999909e-05, 6.605599999999837e-05, 6.655600000000234e-05, 6.62090000000011e-05, 6.595900000000085e-05, 6.609799999999708e-05, 6.601399999999966e-05, 6.69160000000002e-05, 6.680499999999964e-05, 6.641600000000317e-05, 6.654099999999982e-05, 6.637500000000046e-05, 6.612500000000021e-05, 6.59440000000018e-05, 6.658299999999853e-05, 6.652799999999973e-05, 6.65419999999993e-05, 6.652799999999973e-05, 6.663900000000028e-05, 6.661099999999767e-05, 6.611100000000064e-05, 6.637500000000046e-05, 6.630500000000261e-05, 6.625000000000034e-05, 6.615199999999988e-05]</msg>
<status status="PASS" starttime="20201030 18:39:07.188" endtime="20201030 18:39:07.191"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:07.183" endtime="20201030 18:39:07.191"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:39:07.195" endtime="20201030 18:39:07.215"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:07.193" endtime="20201030 18:39:07.215"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:07.192" endtime="20201030 18:39:07.215"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:06.834" endtime="20201030 18:39:07.216"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:06.833" endtime="20201030 18:39:07.216"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:07.224" endtime="20201030 18:39:07.241"></status>
</kw>
<msg timestamp="20201030 18:39:07.242" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:07.223" endtime="20201030 18:39:07.242"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:07.244" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:07.243" endtime="20201030 18:39:07.244"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:07.245" endtime="20201030 18:39:07.247"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:07.220" endtime="20201030 18:39:07.247"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:07.218" endtime="20201030 18:39:07.248"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:07.255" endtime="20201030 18:39:07.541"></status>
</kw>
<msg timestamp="20201030 18:39:07.544" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019955528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020022556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:07.253" endtime="20201030 18:39:07.544"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:07.552" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019955528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020022556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:07.545" endtime="20201030 18:39:07.553"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:07.553" endtime="20201030 18:39:07.555"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:07.250" endtime="20201030 18:39:07.556"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:07.248" endtime="20201030 18:39:07.556"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:39:07.560" level="INFO">${RESULT} = [{'diff': 6.702800000000023e-05}, {'diff': 6.715299999999688e-05}, {'diff': 6.768000000000052e-05}, {'diff': 6.762499999999824e-05}, {'diff': 6.711099999999817e-05}, {'diff': 6.761200000000162e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:39:07.557" endtime="20201030 18:39:07.560"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:39:07.565" level="INFO">${ACCURACY} = {'diff': [6.702800000000023e-05, 6.715299999999688e-05, 6.768000000000052e-05, 6.762499999999824e-05, 6.711099999999817e-05, 6.761200000000162e-05, 6.783399999999926e-05, 6.748700000000149e-05, 6.7069...</msg>
<status status="PASS" starttime="20201030 18:39:07.561" endtime="20201030 18:39:07.565"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:39:07.569" level="INFO">NAME: accuracy-TIMER_SET-63-philip</msg>
<status status="PASS" starttime="20201030 18:39:07.568" endtime="20201030 18:39:07.570"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:39:07.572" level="INFO">VALUE: [6.702800000000023e-05, 6.715299999999688e-05, 6.768000000000052e-05, 6.762499999999824e-05, 6.711099999999817e-05, 6.761200000000162e-05, 6.783399999999926e-05, 6.748700000000149e-05, 6.706900000000293e-05, 6.766600000000095e-05, 6.766600000000095e-05, 6.763900000000128e-05, 6.758299999999953e-05, 6.725000000000134e-05, 6.743099999999974e-05, 6.769400000000009e-05, 6.70839999999985e-05, 6.698599999999805e-05, 6.716699999999992e-05, 6.72359999999983e-05, 6.697300000000142e-05, 6.702700000000075e-05, 6.731899999999971e-05, 6.787500000000196e-05, 6.719399999999959e-05, 6.77359999999988e-05, 6.762499999999824e-05, 6.720799999999916e-05, 6.779200000000055e-05, 6.701400000000066e-05, 6.756899999999996e-05, 6.715300000000035e-05, 6.774999999999837e-05, 6.711100000000164e-05, 6.745899999999888e-05, 6.725000000000134e-05, 6.788799999999859e-05, 6.729100000000057e-05, 6.709700000000207e-05, 6.720799999999916e-05, 6.775000000000184e-05, 6.702800000000023e-05, 6.762499999999824e-05, 6.70419999999998e-05, 6.727800000000048e-05, 6.701400000000066e-05, 6.705599999999937e-05, 6.738900000000103e-05, 6.72359999999983e-05, 6.758299999999953e-05]</msg>
<status status="PASS" starttime="20201030 18:39:07.571" endtime="20201030 18:39:07.573"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:07.566" endtime="20201030 18:39:07.573"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:39:07.577" endtime="20201030 18:39:07.596"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:07.575" endtime="20201030 18:39:07.597"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:07.574" endtime="20201030 18:39:07.597"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:07.217" endtime="20201030 18:39:07.597"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:07.216" endtime="20201030 18:39:07.598"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:07.606" endtime="20201030 18:39:07.623"></status>
</kw>
<msg timestamp="20201030 18:39:07.624" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:07.605" endtime="20201030 18:39:07.624"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:07.626" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:07.625" endtime="20201030 18:39:07.627"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:07.627" endtime="20201030 18:39:07.629"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:07.602" endtime="20201030 18:39:07.630"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:07.600" endtime="20201030 18:39:07.630"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:07.636" endtime="20201030 18:39:07.923"></status>
</kw>
<msg timestamp="20201030 18:39:07.927" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019503222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019571361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:07.635" endtime="20201030 18:39:07.927"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:07.935" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019503222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019571361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:07.928" endtime="20201030 18:39:07.935"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:07.936" endtime="20201030 18:39:07.938"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:07.632" endtime="20201030 18:39:07.938"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:07.631" endtime="20201030 18:39:07.938"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:39:07.942" level="INFO">${RESULT} = [{'diff': 6.813899999999831e-05}, {'diff': 6.880600000000112e-05}, {'diff': 6.880600000000112e-05}, {'diff': 6.819500000000006e-05}, {'diff': 6.876399999999894e-05}, {'diff': 6.861099999999967e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:39:07.939" endtime="20201030 18:39:07.943"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:39:07.947" level="INFO">${ACCURACY} = {'diff': [6.813899999999831e-05, 6.880600000000112e-05, 6.880600000000112e-05, 6.819500000000006e-05, 6.876399999999894e-05, 6.861099999999967e-05, 6.82359999999993e-05, 6.855500000000139e-05, 6.89310...</msg>
<status status="PASS" starttime="20201030 18:39:07.943" endtime="20201030 18:39:07.947"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:39:07.951" level="INFO">NAME: accuracy-TIMER_SET-64-philip</msg>
<status status="PASS" starttime="20201030 18:39:07.950" endtime="20201030 18:39:07.951"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:39:07.953" level="INFO">VALUE: [6.813899999999831e-05, 6.880600000000112e-05, 6.880600000000112e-05, 6.819500000000006e-05, 6.876399999999894e-05, 6.861099999999967e-05, 6.82359999999993e-05, 6.855500000000139e-05, 6.893100000000124e-05, 6.836099999999942e-05, 6.875000000000284e-05, 6.854100000000182e-05, 6.812499999999874e-05, 6.82359999999993e-05, 6.815299999999788e-05, 6.841700000000117e-05, 6.879200000000155e-05, 6.799999999999862e-05, 6.831999999999672e-05, 6.899999999999962e-05, 6.805600000000037e-05, 6.805600000000037e-05, 6.834799999999933e-05, 6.838899999999856e-05, 6.833300000000028e-05, 6.879200000000155e-05, 6.863899999999881e-05, 6.870800000000066e-05, 6.876399999999894e-05, 6.862499999999924e-05, 6.856900000000096e-05, 6.830600000000062e-05, 6.887500000000296e-05, 6.836099999999942e-05, 6.859799999999958e-05, 6.832000000000019e-05, 6.850000000000259e-05, 6.868100000000099e-05, 6.80839999999995e-05, 6.862499999999924e-05, 6.806900000000046e-05, 6.838899999999856e-05, 6.805500000000089e-05, 6.870799999999719e-05, 6.824999999999887e-05, 6.887499999999949e-05, 6.862500000000271e-05, 6.890299999999863e-05, 6.801399999999819e-05, 6.834699999999985e-05]</msg>
<status status="PASS" starttime="20201030 18:39:07.952" endtime="20201030 18:39:07.954"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:07.947" endtime="20201030 18:39:07.955"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:39:07.958" endtime="20201030 18:39:07.978"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:07.957" endtime="20201030 18:39:07.978"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:07.956" endtime="20201030 18:39:07.979"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:07.599" endtime="20201030 18:39:07.979"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:07.598" endtime="20201030 18:39:07.979"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:07.988" endtime="20201030 18:39:08.007"></status>
</kw>
<msg timestamp="20201030 18:39:08.008" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:07.986" endtime="20201030 18:39:08.008"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:08.010" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:08.009" endtime="20201030 18:39:08.010"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:08.011" endtime="20201030 18:39:08.013"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:07.984" endtime="20201030 18:39:08.013"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:07.982" endtime="20201030 18:39:08.013"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:08.020" endtime="20201030 18:39:08.306"></status>
</kw>
<msg timestamp="20201030 18:39:08.309" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020410611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020480347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:08.018" endtime="20201030 18:39:08.310"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:08.317" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020410611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020480347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:08.310" endtime="20201030 18:39:08.318"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:08.319" endtime="20201030 18:39:08.320"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:08.016" endtime="20201030 18:39:08.321"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:08.014" endtime="20201030 18:39:08.321"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:39:08.325" level="INFO">${RESULT} = [{'diff': 6.97360000000008e-05}, {'diff': 6.932000000000119e-05}, {'diff': 6.898600000000005e-05}, {'diff': 6.894400000000134e-05}, {'diff': 6.954199999999883e-05}, {'diff': 6.92360000000003e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:39:08.322" endtime="20201030 18:39:08.325"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:39:08.329" level="INFO">${ACCURACY} = {'diff': [6.97360000000008e-05, 6.932000000000119e-05, 6.898600000000005e-05, 6.894400000000134e-05, 6.954199999999883e-05, 6.92360000000003e-05, 6.90970000000006e-05, 6.990299999999963e-05, 6.9333000...</msg>
<status status="PASS" starttime="20201030 18:39:08.326" endtime="20201030 18:39:08.329"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:39:08.334" level="INFO">NAME: accuracy-TIMER_SET-65-philip</msg>
<status status="PASS" starttime="20201030 18:39:08.333" endtime="20201030 18:39:08.334"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:39:08.336" level="INFO">VALUE: [6.97360000000008e-05, 6.932000000000119e-05, 6.898600000000005e-05, 6.894400000000134e-05, 6.954199999999883e-05, 6.92360000000003e-05, 6.90970000000006e-05, 6.990299999999963e-05, 6.933300000000128e-05, 6.895900000000038e-05, 6.948600000000055e-05, 6.983299999999831e-05, 6.924999999999987e-05, 6.895800000000091e-05, 6.95970000000011e-05, 6.976399999999994e-05, 6.894399999999787e-05, 6.958300000000153e-05, 6.918099999999802e-05, 6.919500000000106e-05, 6.922200000000073e-05, 6.979199999999908e-05, 6.898600000000005e-05, 6.931899999999824e-05, 6.918000000000202e-05, 6.994399999999887e-05, 6.945799999999794e-05, 6.916599999999898e-05, 6.988900000000006e-05, 6.977700000000003e-05, 6.944400000000184e-05, 6.959699999999763e-05, 6.995900000000138e-05, 6.962500000000024e-05, 6.983400000000126e-05, 6.924999999999987e-05, 6.954199999999883e-05, 6.930599999999815e-05, 6.930499999999867e-05, 6.937499999999999e-05, 6.926399999999944e-05, 6.95970000000011e-05, 6.933299999999781e-05, 6.918099999999802e-05, 6.980599999999865e-05, 6.958299999999806e-05, 6.905600000000137e-05, 6.930600000000162e-05, 6.959800000000058e-05, 6.901399999999919e-05]</msg>
<status status="PASS" starttime="20201030 18:39:08.335" endtime="20201030 18:39:08.338"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:08.330" endtime="20201030 18:39:08.338"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:39:08.342" endtime="20201030 18:39:08.361"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:08.340" endtime="20201030 18:39:08.362"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:08.339" endtime="20201030 18:39:08.362"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:07.980" endtime="20201030 18:39:08.362"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:07.979" endtime="20201030 18:39:08.363"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:08.371" endtime="20201030 18:39:08.389"></status>
</kw>
<msg timestamp="20201030 18:39:08.389" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:08.370" endtime="20201030 18:39:08.389"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:08.392" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:08.390" endtime="20201030 18:39:08.392"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:08.393" endtime="20201030 18:39:08.394"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:08.367" endtime="20201030 18:39:08.395"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:08.365" endtime="20201030 18:39:08.395"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:08.402" endtime="20201030 18:39:08.687"></status>
</kw>
<msg timestamp="20201030 18:39:08.690" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019465653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019535833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:08.400" endtime="20201030 18:39:08.690"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:08.698" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019465653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019535833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:08.691" endtime="20201030 18:39:08.699"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:08.700" endtime="20201030 18:39:08.701"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:08.398" endtime="20201030 18:39:08.702"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:08.396" endtime="20201030 18:39:08.702"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:39:08.706" level="INFO">${RESULT} = [{'diff': 7.017999999999955e-05}, {'diff': 7.065200000000091e-05}, {'diff': 7.077700000000103e-05}, {'diff': 6.997200000000148e-05}, {'diff': 7.058299999999906e-05}, {'diff': 7.070799999999919e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:39:08.703" endtime="20201030 18:39:08.706"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:39:08.713" level="INFO">${ACCURACY} = {'diff': [7.017999999999955e-05, 7.065200000000091e-05, 7.077700000000103e-05, 6.997200000000148e-05, 7.058299999999906e-05, 7.070799999999919e-05, 7.066699999999995e-05, 7.016699999999945e-05, 7.0860...</msg>
<status status="PASS" starttime="20201030 18:39:08.707" endtime="20201030 18:39:08.714"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:39:08.718" level="INFO">NAME: accuracy-TIMER_SET-66-philip</msg>
<status status="PASS" starttime="20201030 18:39:08.717" endtime="20201030 18:39:08.718"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:39:08.720" level="INFO">VALUE: [7.017999999999955e-05, 7.065200000000091e-05, 7.077700000000103e-05, 6.997200000000148e-05, 7.058299999999906e-05, 7.070799999999919e-05, 7.066699999999995e-05, 7.016699999999945e-05, 7.086099999999845e-05, 7.088899999999759e-05, 7.050000000000112e-05, 7.054199999999983e-05, 6.994499999999834e-05, 7.030499999999967e-05, 7.001299999999724e-05, 7.00970000000016e-05, 7.012500000000074e-05, 7.081899999999974e-05, 7.086100000000192e-05, 7.069399999999962e-05, 7.088900000000106e-05, 7.048600000000155e-05, 7.011200000000065e-05, 7.040300000000013e-05, 7.031999999999872e-05, 7.002799999999976e-05, 7.034800000000133e-05, 7.030599999999915e-05, 6.997300000000095e-05, 7.076300000000146e-05, 7.006899999999899e-05, 6.987500000000049e-05, 7.030499999999967e-05, 7.007000000000194e-05, 7.054199999999983e-05, 7.013899999999684e-05, 7.077799999999704e-05, 7.040200000000066e-05, 7.077799999999704e-05, 7.018099999999902e-05, 7.027800000000001e-05, 7.048699999999755e-05, 7.083299999999931e-05, 6.995800000000191e-05, 7.004099999999985e-05, 7.081999999999922e-05, 7.020800000000216e-05, 7.088900000000106e-05, 7.080599999999965e-05, 7.059699999999863e-05]</msg>
<status status="PASS" starttime="20201030 18:39:08.719" endtime="20201030 18:39:08.721"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:08.714" endtime="20201030 18:39:08.722"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:39:08.725" endtime="20201030 18:39:08.745"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:08.724" endtime="20201030 18:39:08.745"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:08.723" endtime="20201030 18:39:08.746"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:08.363" endtime="20201030 18:39:08.746"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:08.363" endtime="20201030 18:39:08.746"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:08.755" endtime="20201030 18:39:08.773"></status>
</kw>
<msg timestamp="20201030 18:39:08.773" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:08.753" endtime="20201030 18:39:08.773"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:08.776" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:08.774" endtime="20201030 18:39:08.776"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:08.777" endtime="20201030 18:39:08.778"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:08.751" endtime="20201030 18:39:08.779"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:08.748" endtime="20201030 18:39:08.779"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:08.786" endtime="20201030 18:39:09.072"></status>
</kw>
<msg timestamp="20201030 18:39:09.075" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019474486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019545722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:08.784" endtime="20201030 18:39:09.075"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:09.083" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019474486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019545722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:09.076" endtime="20201030 18:39:09.083"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:09.084" endtime="20201030 18:39:09.086"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:08.782" endtime="20201030 18:39:09.086"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:08.780" endtime="20201030 18:39:09.087"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:39:09.091" level="INFO">${RESULT} = [{'diff': 7.12360000000023e-05}, {'diff': 7.184699999999988e-05}, {'diff': 7.17360000000028e-05}, {'diff': 7.094399999999987e-05}, {'diff': 7.158399999999954e-05}, {'diff': 7.099999999999815e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:39:09.088" endtime="20201030 18:39:09.091"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:39:09.095" level="INFO">${ACCURACY} = {'diff': [7.12360000000023e-05, 7.184699999999988e-05, 7.17360000000028e-05, 7.094399999999987e-05, 7.158399999999954e-05, 7.099999999999815e-05, 7.138799999999862e-05, 7.168100000000052e-05, 7.101400...</msg>
<status status="PASS" starttime="20201030 18:39:09.092" endtime="20201030 18:39:09.095"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:39:09.099" level="INFO">NAME: accuracy-TIMER_SET-67-philip</msg>
<status status="PASS" starttime="20201030 18:39:09.098" endtime="20201030 18:39:09.100"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:39:09.102" level="INFO">VALUE: [7.12360000000023e-05, 7.184699999999988e-05, 7.17360000000028e-05, 7.094399999999987e-05, 7.158399999999954e-05, 7.099999999999815e-05, 7.138799999999862e-05, 7.168100000000052e-05, 7.101400000000119e-05, 7.140299999999766e-05, 7.137499999999852e-05, 7.137499999999852e-05, 7.140200000000166e-05, 7.12499999999984e-05, 7.123599999999883e-05, 7.186099999999945e-05, 7.145799999999994e-05, 7.120799999999969e-05, 7.172299999999923e-05, 7.137499999999852e-05, 7.17360000000028e-05, 7.187499999999902e-05, 7.14300000000008e-05, 7.176399999999847e-05, 7.109699999999913e-05, 7.195800000000044e-05, 7.188900000000206e-05, 7.119400000000012e-05, 7.147199999999951e-05, 7.140299999999766e-05, 7.168100000000052e-05, 7.100000000000162e-05, 7.116700000000045e-05, 7.190299999999816e-05, 7.183399999999979e-05, 7.193100000000077e-05, 7.163799999999887e-05, 7.120799999999969e-05, 7.126400000000144e-05, 7.123599999999883e-05, 7.17360000000028e-05, 7.143100000000027e-05, 7.137500000000199e-05, 7.102800000000076e-05, 7.166700000000095e-05, 7.182000000000022e-05, 7.115300000000088e-05, 7.151400000000169e-05, 7.156999999999997e-05, 7.145899999999941e-05]</msg>
<status status="PASS" starttime="20201030 18:39:09.100" endtime="20201030 18:39:09.102"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:09.096" endtime="20201030 18:39:09.103"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:39:09.107" endtime="20201030 18:39:09.126"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:09.105" endtime="20201030 18:39:09.127"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:09.104" endtime="20201030 18:39:09.127"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:08.747" endtime="20201030 18:39:09.127"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:08.746" endtime="20201030 18:39:09.127"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:09.136" endtime="20201030 18:39:09.157"></status>
</kw>
<msg timestamp="20201030 18:39:09.157" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:09.135" endtime="20201030 18:39:09.158"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:09.160" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:09.159" endtime="20201030 18:39:09.160"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:09.161" endtime="20201030 18:39:09.163"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:09.132" endtime="20201030 18:39:09.163"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:09.130" endtime="20201030 18:39:09.163"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:09.170" endtime="20201030 18:39:09.455"></status>
</kw>
<msg timestamp="20201030 18:39:09.458" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021621597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021693583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:09.168" endtime="20201030 18:39:09.458"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:09.466" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021621597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021693583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:09.459" endtime="20201030 18:39:09.467"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:09.468" endtime="20201030 18:39:09.469"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:09.166" endtime="20201030 18:39:09.470"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:09.164" endtime="20201030 18:39:09.470"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:39:09.474" level="INFO">${RESULT} = [{'diff': 7.198599999999958e-05}, {'diff': 7.208300000000056e-05}, {'diff': 7.222200000000026e-05}, {'diff': 7.26110000000002e-05}, {'diff': 7.279200000000208e-05}, {'diff': 7.223599999999983e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:39:09.471" endtime="20201030 18:39:09.474"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:39:09.478" level="INFO">${ACCURACY} = {'diff': [7.198599999999958e-05, 7.208300000000056e-05, 7.222200000000026e-05, 7.26110000000002e-05, 7.279200000000208e-05, 7.223599999999983e-05, 7.277799999999904e-05, 7.237499999999952e-05, 7.23190...</msg>
<status status="PASS" starttime="20201030 18:39:09.475" endtime="20201030 18:39:09.478"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:39:09.482" level="INFO">NAME: accuracy-TIMER_SET-68-philip</msg>
<status status="PASS" starttime="20201030 18:39:09.481" endtime="20201030 18:39:09.483"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:39:09.485" level="INFO">VALUE: [7.198599999999958e-05, 7.208300000000056e-05, 7.222200000000026e-05, 7.26110000000002e-05, 7.279200000000208e-05, 7.223599999999983e-05, 7.277799999999904e-05, 7.237499999999952e-05, 7.231900000000124e-05, 7.280600000000165e-05, 7.195800000000044e-05, 7.277699999999956e-05, 7.288800000000012e-05, 7.240299999999866e-05, 7.226399999999897e-05, 7.204099999999838e-05, 7.194400000000087e-05, 7.21109999999997e-05, 7.197200000000001e-05, 7.280599999999818e-05, 7.265299999999891e-05, 7.263899999999934e-05, 7.248600000000008e-05, 7.232000000000072e-05, 7.247199999999704e-05, 7.290199999999969e-05, 7.259700000000063e-05, 7.205500000000142e-05, 7.212499999999927e-05, 7.21109999999997e-05, 7.263899999999934e-05, 7.280599999999818e-05, 7.27499999999999e-05, 7.236099999999995e-05, 7.252799999999879e-05, 7.199999999999915e-05, 7.268100000000152e-05, 7.291599999999926e-05, 7.201400000000219e-05, 7.263899999999934e-05, 7.279099999999913e-05, 7.229099999999863e-05, 7.237500000000299e-05, 7.273600000000033e-05, 7.281899999999827e-05, 7.283400000000079e-05, 7.265299999999891e-05, 7.212500000000274e-05, 7.266699999999848e-05, 7.294499999999787e-05]</msg>
<status status="PASS" starttime="20201030 18:39:09.484" endtime="20201030 18:39:09.487"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:09.479" endtime="20201030 18:39:09.487"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:39:09.491" endtime="20201030 18:39:09.510"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:09.489" endtime="20201030 18:39:09.511"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:09.488" endtime="20201030 18:39:09.511"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:09.128" endtime="20201030 18:39:09.511"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:09.128" endtime="20201030 18:39:09.512"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:09.520" endtime="20201030 18:39:09.538"></status>
</kw>
<msg timestamp="20201030 18:39:09.539" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:09.519" endtime="20201030 18:39:09.539"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:09.541" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:09.540" endtime="20201030 18:39:09.542"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:09.542" endtime="20201030 18:39:09.544"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:09.516" endtime="20201030 18:39:09.545"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:09.514" endtime="20201030 18:39:09.545"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:09.551" endtime="20201030 18:39:09.837"></status>
</kw>
<msg timestamp="20201030 18:39:09.840" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019440514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019513583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:09.550" endtime="20201030 18:39:09.840"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:09.848" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019440514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019513583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:09.841" endtime="20201030 18:39:09.848"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:09.849" endtime="20201030 18:39:09.851"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:09.547" endtime="20201030 18:39:09.851"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:09.546" endtime="20201030 18:39:09.852"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:39:09.856" level="INFO">${RESULT} = [{'diff': 7.3069000000002e-05}, {'diff': 7.377700000000056e-05}, {'diff': 7.359700000000163e-05}, {'diff': 7.316599999999951e-05}, {'diff': 7.306899999999852e-05}, {'diff': 7.383299999999884e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:39:09.852" endtime="20201030 18:39:09.856"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:39:09.861" level="INFO">${ACCURACY} = {'diff': [7.3069000000002e-05, 7.377700000000056e-05, 7.359700000000163e-05, 7.316599999999951e-05, 7.306899999999852e-05, 7.383299999999884e-05, 7.304199999999886e-05, 7.308400000000104e-05, 7.372299...</msg>
<status status="PASS" starttime="20201030 18:39:09.857" endtime="20201030 18:39:09.861"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:39:09.865" level="INFO">NAME: accuracy-TIMER_SET-69-philip</msg>
<status status="PASS" starttime="20201030 18:39:09.864" endtime="20201030 18:39:09.865"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:39:09.868" level="INFO">VALUE: [7.3069000000002e-05, 7.377700000000056e-05, 7.359700000000163e-05, 7.316599999999951e-05, 7.306899999999852e-05, 7.383299999999884e-05, 7.304199999999886e-05, 7.308400000000104e-05, 7.372299999999776e-05, 7.348700000000055e-05, 7.35560000000024e-05, 7.388900000000059e-05, 7.305500000000242e-05, 7.377800000000004e-05, 7.301399999999972e-05, 7.366699999999948e-05, 7.327799999999954e-05, 7.32500000000004e-05, 7.377800000000004e-05, 7.365299999999991e-05, 7.39309999999993e-05, 7.309700000000113e-05, 7.340299999999966e-05, 7.336100000000095e-05, 7.359800000000111e-05, 7.37500000000009e-05, 7.390200000000069e-05, 7.390200000000069e-05, 7.309699999999766e-05, 7.327799999999954e-05, 7.31110000000007e-05, 7.387499999999755e-05, 7.391699999999973e-05, 7.36110000000012e-05, 7.334700000000138e-05, 7.359800000000111e-05, 7.307000000000147e-05, 7.302799999999929e-05, 7.320899999999769e-05, 7.3069000000002e-05, 7.345799999999847e-05, 7.370800000000219e-05, 7.394499999999887e-05, 7.316699999999898e-05, 7.331899999999877e-05, 7.377800000000004e-05, 7.294500000000134e-05, 7.377800000000004e-05, 7.387500000000102e-05, 7.300000000000015e-05]</msg>
<status status="PASS" starttime="20201030 18:39:09.866" endtime="20201030 18:39:09.868"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:09.861" endtime="20201030 18:39:09.869"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:39:09.873" endtime="20201030 18:39:09.892"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:09.871" endtime="20201030 18:39:09.893"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:09.870" endtime="20201030 18:39:09.893"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:09.512" endtime="20201030 18:39:09.893"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:09.512" endtime="20201030 18:39:09.893"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:09.902" endtime="20201030 18:39:09.920"></status>
</kw>
<msg timestamp="20201030 18:39:09.920" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:09.900" endtime="20201030 18:39:09.921"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:09.923" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:09.921" endtime="20201030 18:39:09.923"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:09.924" endtime="20201030 18:39:09.925"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:09.898" endtime="20201030 18:39:09.926"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:09.896" endtime="20201030 18:39:09.926"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:09.933" endtime="20201030 18:39:10.220"></status>
</kw>
<msg timestamp="20201030 18:39:10.223" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01940925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019483389, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:39:09.931" endtime="20201030 18:39:10.223"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:10.231" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01940925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019483389, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:39:10.224" endtime="20201030 18:39:10.232"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:10.232" endtime="20201030 18:39:10.234"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:09.929" endtime="20201030 18:39:10.234"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:09.927" endtime="20201030 18:39:10.235"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:39:10.239" level="INFO">${RESULT} = [{'diff': 7.413900000000084e-05}, {'diff': 7.457000000000297e-05}, {'diff': 7.462500000000177e-05}, {'diff': 7.451399999999775e-05}, {'diff': 7.431899999999977e-05}, {'diff': 7.423599999999836e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:39:10.236" endtime="20201030 18:39:10.239"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:39:10.243" level="INFO">${ACCURACY} = {'diff': [7.413900000000084e-05, 7.457000000000297e-05, 7.462500000000177e-05, 7.451399999999775e-05, 7.431899999999977e-05, 7.423599999999836e-05, 7.445799999999947e-05, 7.45829999999996e-05, 7.46389...</msg>
<status status="PASS" starttime="20201030 18:39:10.240" endtime="20201030 18:39:10.244"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:39:10.248" level="INFO">NAME: accuracy-TIMER_SET-70-philip</msg>
<status status="PASS" starttime="20201030 18:39:10.247" endtime="20201030 18:39:10.249"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:39:10.251" level="INFO">VALUE: [7.413900000000084e-05, 7.457000000000297e-05, 7.462500000000177e-05, 7.451399999999775e-05, 7.431899999999977e-05, 7.423599999999836e-05, 7.445799999999947e-05, 7.45829999999996e-05, 7.463899999999787e-05, 7.45829999999996e-05, 7.402800000000029e-05, 7.463900000000134e-05, 7.488899999999812e-05, 7.466700000000048e-05, 7.413899999999737e-05, 7.404199999999986e-05, 7.401399999999725e-05, 7.418000000000008e-05, 7.452700000000131e-05, 7.437499999999805e-05, 7.46110000000022e-05, 7.486100000000245e-05, 7.411099999999823e-05, 7.437499999999805e-05, 7.474999999999843e-05, 7.444499999999937e-05, 7.394499999999887e-05, 7.420899999999869e-05, 7.430599999999968e-05, 7.416699999999998e-05, 7.433400000000229e-05, 7.470799999999972e-05, 7.431899999999977e-05, 7.474999999999843e-05, 7.477800000000104e-05, 7.418000000000008e-05, 7.49310000000003e-05, 7.434699999999891e-05, 7.463899999999787e-05, 7.397300000000148e-05, 7.486099999999898e-05, 7.430599999999968e-05, 7.470899999999919e-05, 7.415200000000094e-05, 7.405499999999995e-05, 7.416600000000051e-05, 7.454100000000088e-05, 7.419399999999965e-05, 7.455599999999993e-05, 7.466700000000048e-05]</msg>
<status status="PASS" starttime="20201030 18:39:10.249" endtime="20201030 18:39:10.252"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:10.244" endtime="20201030 18:39:10.253"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:39:10.256" endtime="20201030 18:39:10.276"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:10.255" endtime="20201030 18:39:10.276"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:10.254" endtime="20201030 18:39:10.277"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:09.894" endtime="20201030 18:39:10.277"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:09.894" endtime="20201030 18:39:10.277"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:10.286" endtime="20201030 18:39:10.305"></status>
</kw>
<msg timestamp="20201030 18:39:10.305" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:10.284" endtime="20201030 18:39:10.305"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:10.308" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:10.306" endtime="20201030 18:39:10.308"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:10.309" endtime="20201030 18:39:10.310"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:10.282" endtime="20201030 18:39:10.311"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:10.279" endtime="20201030 18:39:10.311"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:10.318" endtime="20201030 18:39:10.603"></status>
</kw>
<msg timestamp="20201030 18:39:10.606" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020372403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020448292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:10.316" endtime="20201030 18:39:10.607"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:10.614" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020372403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020448292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:10.607" endtime="20201030 18:39:10.615"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:10.616" endtime="20201030 18:39:10.617"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:10.313" endtime="20201030 18:39:10.618"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:10.312" endtime="20201030 18:39:10.618"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:39:10.622" level="INFO">${RESULT} = [{'diff': 7.588899999999912e-05}, {'diff': 7.516700000000098e-05}, {'diff': 7.50830000000001e-05}, {'diff': 7.548599999999961e-05}, {'diff': 7.50830000000001e-05}, {'diff': 7.527799999999807e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:39:10.619" endtime="20201030 18:39:10.622"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:39:10.626" level="INFO">${ACCURACY} = {'diff': [7.588899999999912e-05, 7.516700000000098e-05, 7.50830000000001e-05, 7.548599999999961e-05, 7.50830000000001e-05, 7.527799999999807e-05, 7.59440000000014e-05, 7.522199999999979e-05, 7.5653000...</msg>
<status status="PASS" starttime="20201030 18:39:10.623" endtime="20201030 18:39:10.627"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:39:10.631" level="INFO">NAME: accuracy-TIMER_SET-71-philip</msg>
<status status="PASS" starttime="20201030 18:39:10.630" endtime="20201030 18:39:10.631"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:39:10.633" level="INFO">VALUE: [7.588899999999912e-05, 7.516700000000098e-05, 7.50830000000001e-05, 7.548599999999961e-05, 7.50830000000001e-05, 7.527799999999807e-05, 7.59440000000014e-05, 7.522199999999979e-05, 7.565300000000191e-05, 7.536099999999948e-05, 7.507e-05, 7.559799999999964e-05, 7.559799999999964e-05, 7.511199999999871e-05, 7.559700000000016e-05, 7.5457999999997e-05, 7.527800000000154e-05, 7.563900000000234e-05, 7.519500000000012e-05, 7.538899999999862e-05, 7.55830000000006e-05, 7.505600000000043e-05, 7.58890000000026e-05, 7.519500000000012e-05, 7.518100000000055e-05, 7.566700000000148e-05, 7.587499999999955e-05, 7.573599999999986e-05, 7.552699999999885e-05, 7.540300000000166e-05, 7.53050000000012e-05, 7.576400000000247e-05, 7.54029999999982e-05, 7.579200000000161e-05, 7.569400000000115e-05, 7.548599999999961e-05, 7.584799999999989e-05, 7.541700000000123e-05, 7.584799999999989e-05, 7.520800000000022e-05, 7.51249999999988e-05, 7.569399999999768e-05, 7.522199999999979e-05, 7.537499999999905e-05, 7.593000000000183e-05, 7.534699999999991e-05, 7.502799999999782e-05, 7.581900000000127e-05, 7.59310000000013e-05, 7.543099999999733e-05]</msg>
<status status="PASS" starttime="20201030 18:39:10.632" endtime="20201030 18:39:10.635"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:10.627" endtime="20201030 18:39:10.635"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:39:10.639" endtime="20201030 18:39:10.658"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:10.638" endtime="20201030 18:39:10.659"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:10.636" endtime="20201030 18:39:10.659"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:10.278" endtime="20201030 18:39:10.660"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:10.277" endtime="20201030 18:39:10.660"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:10.668" endtime="20201030 18:39:10.686"></status>
</kw>
<msg timestamp="20201030 18:39:10.687" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:10.667" endtime="20201030 18:39:10.687"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:10.689" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:10.688" endtime="20201030 18:39:10.690"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:10.690" endtime="20201030 18:39:10.692"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:10.664" endtime="20201030 18:39:10.692"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:10.662" endtime="20201030 18:39:10.693"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:10.699" endtime="20201030 18:39:10.985"></status>
</kw>
<msg timestamp="20201030 18:39:10.988" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020254125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020330222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:10.698" endtime="20201030 18:39:10.988"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:10.996" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020254125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020330222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:10.989" endtime="20201030 18:39:10.996"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:10.997" endtime="20201030 18:39:10.998"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:10.695" endtime="20201030 18:39:10.999"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:10.693" endtime="20201030 18:39:10.999"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:39:11.003" level="INFO">${RESULT} = [{'diff': 7.60969999999972e-05}, {'diff': 7.631900000000177e-05}, {'diff': 7.613900000000284e-05}, {'diff': 7.647200000000104e-05}, {'diff': 7.624999999999993e-05}, {'diff': 7.608400000000057e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:39:11.000" endtime="20201030 18:39:11.004"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:39:11.008" level="INFO">${ACCURACY} = {'diff': [7.60969999999972e-05, 7.631900000000177e-05, 7.613900000000284e-05, 7.647200000000104e-05, 7.624999999999993e-05, 7.608400000000057e-05, 7.597200000000054e-05, 7.65700000000015e-05, 7.643099...</msg>
<status status="PASS" starttime="20201030 18:39:11.004" endtime="20201030 18:39:11.009"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:39:11.013" level="INFO">NAME: accuracy-TIMER_SET-72-philip</msg>
<status status="PASS" starttime="20201030 18:39:11.012" endtime="20201030 18:39:11.013"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:39:11.015" level="INFO">VALUE: [7.60969999999972e-05, 7.631900000000177e-05, 7.613900000000284e-05, 7.647200000000104e-05, 7.624999999999993e-05, 7.608400000000057e-05, 7.597200000000054e-05, 7.65700000000015e-05, 7.643099999999833e-05, 7.598600000000011e-05, 7.622200000000079e-05, 7.663899999999987e-05, 7.619400000000165e-05, 7.672200000000129e-05, 7.642999999999886e-05, 7.633300000000134e-05, 7.60830000000011e-05, 7.665299999999944e-05, 7.694399999999893e-05, 7.638899999999962e-05, 7.691699999999926e-05, 7.66250000000003e-05, 7.687500000000055e-05, 7.680499999999923e-05, 7.66250000000003e-05, 7.615299999999894e-05, 7.655599999999846e-05, 7.613900000000284e-05, 7.616699999999851e-05, 7.690300000000316e-05, 7.616699999999851e-05, 7.615300000000241e-05, 7.643099999999833e-05, 7.677799999999957e-05, 7.594500000000087e-05, 7.666699999999901e-05, 7.6764e-05, 7.665300000000291e-05, 7.616600000000251e-05, 7.679199999999914e-05, 7.593099999999783e-05, 7.604199999999839e-05, 7.608400000000057e-05, 7.672300000000076e-05, 7.619499999999765e-05, 7.644500000000137e-05, 7.645900000000094e-05, 7.640199999999972e-05, 7.59440000000014e-05, 7.651399999999975e-05]</msg>
<status status="PASS" starttime="20201030 18:39:11.014" endtime="20201030 18:39:11.016"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:11.009" endtime="20201030 18:39:11.017"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:39:11.021" endtime="20201030 18:39:11.040"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:11.019" endtime="20201030 18:39:11.041"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:11.018" endtime="20201030 18:39:11.041"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:10.661" endtime="20201030 18:39:11.041"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:10.660" endtime="20201030 18:39:11.042"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:11.050" endtime="20201030 18:39:11.070"></status>
</kw>
<msg timestamp="20201030 18:39:11.070" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:11.049" endtime="20201030 18:39:11.070"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:11.073" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:11.071" endtime="20201030 18:39:11.073"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:11.074" endtime="20201030 18:39:11.075"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:11.046" endtime="20201030 18:39:11.076"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:11.044" endtime="20201030 18:39:11.076"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:11.083" endtime="20201030 18:39:11.370"></status>
</kw>
<msg timestamp="20201030 18:39:11.373" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020183333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020260472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:11.081" endtime="20201030 18:39:11.373"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:11.381" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020183333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020260472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:11.374" endtime="20201030 18:39:11.381"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:11.382" endtime="20201030 18:39:11.384"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:11.079" endtime="20201030 18:39:11.384"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:11.077" endtime="20201030 18:39:11.385"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:39:11.389" level="INFO">${RESULT} = [{'diff': 7.713900000000037e-05}, {'diff': 7.723599999999789e-05}, {'diff': 7.72640000000005e-05}, {'diff': 7.775000000000143e-05}, {'diff': 7.788900000000112e-05}, {'diff': 7.781999999999928e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:39:11.385" endtime="20201030 18:39:11.389"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:39:11.393" level="INFO">${ACCURACY} = {'diff': [7.713900000000037e-05, 7.723599999999789e-05, 7.72640000000005e-05, 7.775000000000143e-05, 7.788900000000112e-05, 7.781999999999928e-05, 7.781999999999928e-05, 7.730599999999921e-05, 7.69169...</msg>
<status status="PASS" starttime="20201030 18:39:11.390" endtime="20201030 18:39:11.393"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:39:11.397" level="INFO">NAME: accuracy-TIMER_SET-73-philip</msg>
<status status="PASS" starttime="20201030 18:39:11.396" endtime="20201030 18:39:11.398"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:39:11.400" level="INFO">VALUE: [7.713900000000037e-05, 7.723599999999789e-05, 7.72640000000005e-05, 7.775000000000143e-05, 7.788900000000112e-05, 7.781999999999928e-05, 7.781999999999928e-05, 7.730599999999921e-05, 7.691699999999926e-05, 7.766600000000054e-05, 7.765200000000097e-05, 7.772199999999882e-05, 7.708299999999862e-05, 7.763900000000087e-05, 7.75969999999987e-05, 7.730499999999974e-05, 7.698599999999764e-05, 7.788900000000112e-05, 7.724999999999746e-05, 7.72229999999978e-05, 7.74030000000002e-05, 7.72770000000006e-05, 7.76519999999975e-05, 7.738900000000062e-05, 7.787500000000155e-05, 7.759700000000216e-05, 7.754199999999989e-05, 7.775000000000143e-05, 7.69579999999985e-05, 7.749999999999771e-05, 7.74030000000002e-05, 7.737500000000105e-05, 7.795800000000297e-05, 7.774999999999796e-05, 7.729100000000017e-05, 7.719399999999918e-05, 7.745800000000247e-05, 7.78189999999998e-05, 7.780500000000024e-05, 7.791700000000026e-05, 7.7457999999999e-05, 7.763900000000087e-05, 7.720799999999875e-05, 7.737500000000105e-05, 7.719499999999865e-05, 7.706999999999853e-05, 7.711100000000123e-05, 7.787499999999808e-05, 7.730599999999921e-05, 7.720799999999875e-05]</msg>
<status status="PASS" starttime="20201030 18:39:11.398" endtime="20201030 18:39:11.400"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:11.394" endtime="20201030 18:39:11.401"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:39:11.405" endtime="20201030 18:39:11.424"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:11.403" endtime="20201030 18:39:11.425"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:11.402" endtime="20201030 18:39:11.425"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:11.042" endtime="20201030 18:39:11.425"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:11.042" endtime="20201030 18:39:11.425"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:11.434" endtime="20201030 18:39:11.453"></status>
</kw>
<msg timestamp="20201030 18:39:11.453" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:11.432" endtime="20201030 18:39:11.453"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:11.456" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:11.454" endtime="20201030 18:39:11.456"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:11.457" endtime="20201030 18:39:11.458"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:11.430" endtime="20201030 18:39:11.459"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:11.428" endtime="20201030 18:39:11.459"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:11.466" endtime="20201030 18:39:11.752"></status>
</kw>
<msg timestamp="20201030 18:39:11.755" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021212139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021291014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:11.464" endtime="20201030 18:39:11.755"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:11.763" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021212139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021291014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:11.756" endtime="20201030 18:39:11.763"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:11.764" endtime="20201030 18:39:11.766"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:11.462" endtime="20201030 18:39:11.766"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:11.460" endtime="20201030 18:39:11.767"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:39:11.771" level="INFO">${RESULT} = [{'diff': 7.887499999999908e-05}, {'diff': 7.854200000000089e-05}, {'diff': 7.883399999999985e-05}, {'diff': 7.859800000000264e-05}, {'diff': 7.858300000000012e-05}, {'diff': 7.816699999999704e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:39:11.768" endtime="20201030 18:39:11.771"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:39:11.775" level="INFO">${ACCURACY} = {'diff': [7.887499999999908e-05, 7.854200000000089e-05, 7.883399999999985e-05, 7.859800000000264e-05, 7.858300000000012e-05, 7.816699999999704e-05, 7.862499999999883e-05, 7.808299999999962e-05, 7.8929...</msg>
<status status="PASS" starttime="20201030 18:39:11.772" endtime="20201030 18:39:11.775"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:39:11.779" level="INFO">NAME: accuracy-TIMER_SET-74-philip</msg>
<status status="PASS" starttime="20201030 18:39:11.778" endtime="20201030 18:39:11.779"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:39:11.782" level="INFO">VALUE: [7.887499999999908e-05, 7.854200000000089e-05, 7.883399999999985e-05, 7.859800000000264e-05, 7.858300000000012e-05, 7.816699999999704e-05, 7.862499999999883e-05, 7.808299999999962e-05, 7.892999999999789e-05, 7.8458e-05, 7.799999999999821e-05, 7.797199999999907e-05, 7.879199999999767e-05, 7.79449999999994e-05, 7.81250000000018e-05, 7.827800000000107e-05, 7.831999999999978e-05, 7.830500000000074e-05, 7.798600000000211e-05, 7.873599999999939e-05, 7.88190000000008e-05, 7.829100000000117e-05, 7.873599999999939e-05, 7.841700000000076e-05, 7.877699999999863e-05, 7.830500000000074e-05, 7.797300000000201e-05, 7.804199999999692e-05, 7.820899999999922e-05, 7.872300000000276e-05, 7.811100000000223e-05, 7.894399999999746e-05, 7.875000000000243e-05, 7.816600000000104e-05, 7.804200000000039e-05, 7.844400000000043e-05, 7.848599999999914e-05, 7.823599999999889e-05, 7.873599999999939e-05, 7.870899999999972e-05, 7.873699999999886e-05, 7.877800000000157e-05, 7.890299999999822e-05, 7.80969999999992e-05, 7.851300000000228e-05, 7.82909999999977e-05, 7.79579999999995e-05, 7.822200000000279e-05, 7.849999999999871e-05, 7.879200000000114e-05]</msg>
<status status="PASS" starttime="20201030 18:39:11.780" endtime="20201030 18:39:11.783"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:11.776" endtime="20201030 18:39:11.784"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:39:11.787" endtime="20201030 18:39:11.807"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:11.786" endtime="20201030 18:39:11.807"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:11.785" endtime="20201030 18:39:11.808"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:11.426" endtime="20201030 18:39:11.808"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:11.426" endtime="20201030 18:39:11.808"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:11.817" endtime="20201030 18:39:11.836"></status>
</kw>
<msg timestamp="20201030 18:39:11.836" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:11.815" endtime="20201030 18:39:11.836"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:11.839" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:11.837" endtime="20201030 18:39:11.839"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:11.840" endtime="20201030 18:39:11.841"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:11.813" endtime="20201030 18:39:11.842"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:11.811" endtime="20201030 18:39:11.842"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:11.849" endtime="20201030 18:39:12.135"></status>
</kw>
<msg timestamp="20201030 18:39:12.138" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019427222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019506472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:11.847" endtime="20201030 18:39:12.138"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:12.146" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019427222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019506472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:12.139" endtime="20201030 18:39:12.146"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:12.147" endtime="20201030 18:39:12.149"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:11.845" endtime="20201030 18:39:12.149"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:11.843" endtime="20201030 18:39:12.150"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:39:12.154" level="INFO">${RESULT} = [{'diff': 7.924999999999946e-05}, {'diff': 7.940299999999872e-05}, {'diff': 7.944399999999796e-05}, {'diff': 7.940299999999872e-05}, {'diff': 7.987500000000008e-05}, {'diff': 7.911099999999976e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:39:12.151" endtime="20201030 18:39:12.154"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:39:12.161" level="INFO">${ACCURACY} = {'diff': [7.924999999999946e-05, 7.940299999999872e-05, 7.944399999999796e-05, 7.940299999999872e-05, 7.987500000000008e-05, 7.911099999999976e-05, 7.912499999999933e-05, 7.924999999999946e-05, 7.9361...</msg>
<status status="PASS" starttime="20201030 18:39:12.155" endtime="20201030 18:39:12.161"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:39:12.166" level="INFO">NAME: accuracy-TIMER_SET-75-philip</msg>
<status status="PASS" starttime="20201030 18:39:12.165" endtime="20201030 18:39:12.166"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:39:12.168" level="INFO">VALUE: [7.924999999999946e-05, 7.940299999999872e-05, 7.944399999999796e-05, 7.940299999999872e-05, 7.987500000000008e-05, 7.911099999999976e-05, 7.912499999999933e-05, 7.924999999999946e-05, 7.936100000000001e-05, 7.900000000000268e-05, 7.970800000000125e-05, 7.897200000000007e-05, 7.983300000000138e-05, 7.909699999999673e-05, 7.974999999999996e-05, 7.902799999999835e-05, 7.959699999999723e-05, 7.901399999999878e-05, 7.924999999999946e-05, 7.970900000000072e-05, 7.970900000000072e-05, 7.988899999999965e-05, 7.944499999999743e-05, 7.969400000000168e-05, 7.937499999999958e-05, 7.966700000000201e-05, 7.934700000000044e-05, 7.982000000000128e-05, 7.907000000000053e-05, 7.923599999999989e-05, 7.988899999999965e-05, 7.986100000000051e-05, 7.951400000000275e-05, 7.89580000000005e-05, 7.952699999999938e-05, 7.941700000000176e-05, 7.904100000000192e-05, 7.937500000000305e-05, 7.923599999999989e-05, 7.988899999999965e-05, 7.988799999999671e-05, 7.90840000000001e-05, 7.937499999999958e-05, 7.980599999999824e-05, 7.89450000000004e-05, 7.936100000000001e-05, 7.963900000000287e-05, 7.973600000000039e-05, 7.897200000000007e-05, 7.955500000000199e-05]</msg>
<status status="PASS" starttime="20201030 18:39:12.167" endtime="20201030 18:39:12.169"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:12.162" endtime="20201030 18:39:12.169"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:39:12.173" endtime="20201030 18:39:12.192"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:12.172" endtime="20201030 18:39:12.193"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:12.170" endtime="20201030 18:39:12.193"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:11.809" endtime="20201030 18:39:12.194"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:11.809" endtime="20201030 18:39:12.194"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:12.203" endtime="20201030 18:39:12.221"></status>
</kw>
<msg timestamp="20201030 18:39:12.221" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:12.201" endtime="20201030 18:39:12.222"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:12.224" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:12.222" endtime="20201030 18:39:12.224"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:12.225" endtime="20201030 18:39:12.226"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:12.198" endtime="20201030 18:39:12.227"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:12.196" endtime="20201030 18:39:12.227"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:12.234" endtime="20201030 18:39:12.521"></status>
</kw>
<msg timestamp="20201030 18:39:12.524" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019584708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019664847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:12.232" endtime="20201030 18:39:12.524"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:12.532" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019584708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019664847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:12.525" endtime="20201030 18:39:12.533"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:12.533" endtime="20201030 18:39:12.535"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:12.230" endtime="20201030 18:39:12.536"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:12.228" endtime="20201030 18:39:12.536"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:39:12.540" level="INFO">${RESULT} = [{'diff': 8.01389999999999e-05}, {'diff': 8.04719999999981e-05}, {'diff': 8.020800000000175e-05}, {'diff': 8.005499999999902e-05}, {'diff': 8.009699999999773e-05}, {'diff': 8.088900000000065e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:39:12.537" endtime="20201030 18:39:12.540"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:39:12.544" level="INFO">${ACCURACY} = {'diff': [8.01389999999999e-05, 8.04719999999981e-05, 8.020800000000175e-05, 8.005499999999902e-05, 8.009699999999773e-05, 8.088900000000065e-05, 8.066699999999954e-05, 8.002799999999935e-05, 8.000000...</msg>
<status status="PASS" starttime="20201030 18:39:12.541" endtime="20201030 18:39:12.544"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:39:12.549" level="INFO">NAME: accuracy-TIMER_SET-76-philip</msg>
<status status="PASS" starttime="20201030 18:39:12.548" endtime="20201030 18:39:12.549"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:39:12.551" level="INFO">VALUE: [8.01389999999999e-05, 8.04719999999981e-05, 8.020800000000175e-05, 8.005499999999902e-05, 8.009699999999773e-05, 8.088900000000065e-05, 8.066699999999954e-05, 8.002799999999935e-05, 8.000000000000021e-05, 8.080599999999924e-05, 8.055499999999952e-05, 8.072200000000182e-05, 8.015299999999947e-05, 8.001399999999978e-05, 8.050000000000071e-05, 8.084699999999848e-05, 8.095799999999903e-05, 8.036099999999755e-05, 8.075000000000096e-05, 8.080599999999924e-05, 8.015299999999947e-05, 8.059800000000117e-05, 8.040299999999972e-05, 8.069400000000268e-05, 8.088800000000118e-05, 8.022200000000132e-05, 8.076400000000053e-05, 8.088900000000065e-05, 8.01389999999999e-05, 8.08190000000028e-05, 8.069399999999921e-05, 8.02230000000008e-05, 8.084700000000195e-05, 8.002800000000282e-05, 8.041700000000276e-05, 8.013800000000043e-05, 8.001399999999978e-05, 8.011100000000076e-05, 8.079199999999967e-05, 8.01389999999999e-05, 8.068099999999911e-05, 8.069499999999868e-05, 8.026400000000003e-05, 8.087499999999762e-05, 8.056999999999856e-05, 8.019500000000165e-05, 8.079199999999967e-05, 8.012500000000033e-05, 8.087499999999762e-05, 8.011100000000076e-05]</msg>
<status status="PASS" starttime="20201030 18:39:12.550" endtime="20201030 18:39:12.552"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:12.545" endtime="20201030 18:39:12.552"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:39:12.556" endtime="20201030 18:39:12.575"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:12.554" endtime="20201030 18:39:12.576"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:12.553" endtime="20201030 18:39:12.576"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:12.195" endtime="20201030 18:39:12.577"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:12.194" endtime="20201030 18:39:12.577"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:12.585" endtime="20201030 18:39:12.606"></status>
</kw>
<msg timestamp="20201030 18:39:12.606" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:12.584" endtime="20201030 18:39:12.606"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:12.609" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:12.607" endtime="20201030 18:39:12.609"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:12.610" endtime="20201030 18:39:12.611"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:12.581" endtime="20201030 18:39:12.612"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:12.579" endtime="20201030 18:39:12.612"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:12.619" endtime="20201030 18:39:12.903"></status>
</kw>
<msg timestamp="20201030 18:39:12.906" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020878514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020960153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:12.617" endtime="20201030 18:39:12.907"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:12.914" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020878514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020960153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:12.907" endtime="20201030 18:39:12.915"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:12.916" endtime="20201030 18:39:12.917"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:12.614" endtime="20201030 18:39:12.918"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:12.613" endtime="20201030 18:39:12.918"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:39:12.922" level="INFO">${RESULT} = [{'diff': 8.163899999999794e-05}, {'diff': 8.162499999999837e-05}, {'diff': 8.138900000000115e-05}, {'diff': 8.148600000000214e-05}, {'diff': 8.09580000000025e-05}, {'diff': 8.16520000000015e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:39:12.919" endtime="20201030 18:39:12.922"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:39:12.926" level="INFO">${ACCURACY} = {'diff': [8.163899999999794e-05, 8.162499999999837e-05, 8.138900000000115e-05, 8.148600000000214e-05, 8.09580000000025e-05, 8.16520000000015e-05, 8.138900000000115e-05, 8.101400000000078e-05, 8.094399...</msg>
<status status="PASS" starttime="20201030 18:39:12.923" endtime="20201030 18:39:12.927"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:39:12.931" level="INFO">NAME: accuracy-TIMER_SET-77-philip</msg>
<status status="PASS" starttime="20201030 18:39:12.930" endtime="20201030 18:39:12.931"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:39:12.933" level="INFO">VALUE: [8.163899999999794e-05, 8.162499999999837e-05, 8.138900000000115e-05, 8.148600000000214e-05, 8.09580000000025e-05, 8.16520000000015e-05, 8.138900000000115e-05, 8.101400000000078e-05, 8.094399999999946e-05, 8.172199999999935e-05, 8.129200000000017e-05, 8.102800000000035e-05, 8.142999999999692e-05, 8.10840000000021e-05, 8.169499999999968e-05, 8.177700000000163e-05, 8.095799999999903e-05, 8.11109999999983e-05, 8.112499999999787e-05, 8.172199999999935e-05, 8.162500000000183e-05, 8.125000000000146e-05, 8.115300000000047e-05, 8.133399999999888e-05, 8.162500000000183e-05, 8.137500000000158e-05, 8.116700000000004e-05, 8.134699999999898e-05, 8.124999999999799e-05, 8.13329999999994e-05, 8.097200000000207e-05, 8.120799999999928e-05, 8.152800000000085e-05, 8.119399999999971e-05, 8.154200000000042e-05, 8.116700000000004e-05, 8.186099999999905e-05, 8.169499999999968e-05, 8.179200000000067e-05, 8.138800000000168e-05, 8.112500000000133e-05, 8.156999999999956e-05, 8.147200000000257e-05, 8.126399999999756e-05, 8.16529999999975e-05, 8.181900000000034e-05, 8.105599999999949e-05, 8.14719999999991e-05, 8.162500000000183e-05, 8.111200000000124e-05]</msg>
<status status="PASS" starttime="20201030 18:39:12.932" endtime="20201030 18:39:12.935"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:12.927" endtime="20201030 18:39:12.935"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:39:12.939" endtime="20201030 18:39:12.959"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:12.938" endtime="20201030 18:39:12.959"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:12.936" endtime="20201030 18:39:12.959"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:12.578" endtime="20201030 18:39:12.960"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:12.577" endtime="20201030 18:39:12.960"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:12.968" endtime="20201030 18:39:12.987"></status>
</kw>
<msg timestamp="20201030 18:39:12.987" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:12.967" endtime="20201030 18:39:12.988"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:12.991" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:12.989" endtime="20201030 18:39:12.992"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:12.993" endtime="20201030 18:39:12.995"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:12.964" endtime="20201030 18:39:12.995"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:12.962" endtime="20201030 18:39:12.996"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:13.013" endtime="20201030 18:39:13.314"></status>
</kw>
<msg timestamp="20201030 18:39:13.317" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019397181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019479597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:13.009" endtime="20201030 18:39:13.318"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:13.325" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019397181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019479597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:13.318" endtime="20201030 18:39:13.326"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:13.327" endtime="20201030 18:39:13.328"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:13.003" endtime="20201030 18:39:13.329"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:12.997" endtime="20201030 18:39:13.329"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:39:13.333" level="INFO">${RESULT} = [{'diff': 8.241600000000182e-05}, {'diff': 8.28330000000009e-05}, {'diff': 8.274999999999949e-05}, {'diff': 8.282000000000081e-05}, {'diff': 8.223599999999942e-05}, {'diff': 8.207000000000006e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:39:13.330" endtime="20201030 18:39:13.333"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:39:13.338" level="INFO">${ACCURACY} = {'diff': [8.241600000000182e-05, 8.28330000000009e-05, 8.274999999999949e-05, 8.282000000000081e-05, 8.223599999999942e-05, 8.207000000000006e-05, 8.2459e-05, 8.262500000000284e-05, 8.279099999999873e...</msg>
<status status="PASS" starttime="20201030 18:39:13.334" endtime="20201030 18:39:13.338"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:39:13.343" level="INFO">NAME: accuracy-TIMER_SET-78-philip</msg>
<status status="PASS" starttime="20201030 18:39:13.342" endtime="20201030 18:39:13.343"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:39:13.345" level="INFO">VALUE: [8.241600000000182e-05, 8.28330000000009e-05, 8.274999999999949e-05, 8.282000000000081e-05, 8.223599999999942e-05, 8.207000000000006e-05, 8.2459e-05, 8.262500000000284e-05, 8.279099999999873e-05, 8.24720000000001e-05, 8.218000000000114e-05, 8.202800000000135e-05, 8.218000000000114e-05, 8.229200000000117e-05, 8.256999999999709e-05, 8.236100000000302e-05, 8.258300000000066e-05, 8.230600000000074e-05, 8.259700000000023e-05, 8.283400000000038e-05, 8.19589999999995e-05, 8.263899999999894e-05, 8.20269999999984e-05, 8.212499999999887e-05, 8.227799999999813e-05, 8.277799999999863e-05, 8.281899999999787e-05, 8.270800000000078e-05, 8.277799999999863e-05, 8.236099999999955e-05, 8.249999999999924e-05, 8.211199999999877e-05, 8.249999999999924e-05, 8.258300000000066e-05, 8.231899999999737e-05, 8.218000000000114e-05, 8.290299999999876e-05, 8.218000000000114e-05, 8.252800000000185e-05, 8.251399999999881e-05, 8.232000000000031e-05, 8.283399999999691e-05, 8.282000000000081e-05, 8.224999999999899e-05, 8.26529999999985e-05, 8.206900000000059e-05, 8.23049999999978e-05, 8.237499999999912e-05, 8.251400000000228e-05, 8.21390000000019e-05]</msg>
<status status="PASS" starttime="20201030 18:39:13.344" endtime="20201030 18:39:13.346"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:13.339" endtime="20201030 18:39:13.346"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:39:13.350" endtime="20201030 18:39:13.369"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:13.349" endtime="20201030 18:39:13.370"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:13.347" endtime="20201030 18:39:13.370"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:12.961" endtime="20201030 18:39:13.371"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:12.960" endtime="20201030 18:39:13.371"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:13.379" endtime="20201030 18:39:13.397"></status>
</kw>
<msg timestamp="20201030 18:39:13.398" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:13.378" endtime="20201030 18:39:13.398"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:13.400" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:13.399" endtime="20201030 18:39:13.401"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:13.401" endtime="20201030 18:39:13.403"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:13.375" endtime="20201030 18:39:13.403"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:13.373" endtime="20201030 18:39:13.404"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:13.410" endtime="20201030 18:39:13.697"></status>
</kw>
<msg timestamp="20201030 18:39:13.700" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019405736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019489583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:13.409" endtime="20201030 18:39:13.700"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:13.708" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019405736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019489583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:13.701" endtime="20201030 18:39:13.709"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:13.710" endtime="20201030 18:39:13.711"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:13.406" endtime="20201030 18:39:13.712"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:13.404" endtime="20201030 18:39:13.712"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:39:13.716" level="INFO">${RESULT} = [{'diff': 8.384700000000148e-05}, {'diff': 8.337500000000012e-05}, {'diff': 8.31110000000003e-05}, {'diff': 8.318100000000161e-05}, {'diff': 8.388900000000019e-05}, {'diff': 8.394499999999847e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:39:13.713" endtime="20201030 18:39:13.716"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:39:13.720" level="INFO">${ACCURACY} = {'diff': [8.384700000000148e-05, 8.337500000000012e-05, 8.31110000000003e-05, 8.318100000000161e-05, 8.388900000000019e-05, 8.394499999999847e-05, 8.381999999999834e-05, 8.377799999999963e-05, 8.38200...</msg>
<status status="PASS" starttime="20201030 18:39:13.717" endtime="20201030 18:39:13.720"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:39:13.725" level="INFO">NAME: accuracy-TIMER_SET-79-philip</msg>
<status status="PASS" starttime="20201030 18:39:13.724" endtime="20201030 18:39:13.725"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:39:13.727" level="INFO">VALUE: [8.384700000000148e-05, 8.337500000000012e-05, 8.31110000000003e-05, 8.318100000000161e-05, 8.388900000000019e-05, 8.394499999999847e-05, 8.381999999999834e-05, 8.377799999999963e-05, 8.382000000000181e-05, 8.369399999999874e-05, 8.352799999999938e-05, 8.345799999999806e-05, 8.337500000000012e-05, 8.359700000000123e-05, 8.324999999999999e-05, 8.356899999999862e-05, 8.388900000000019e-05, 8.388900000000019e-05, 8.305499999999855e-05, 8.340299999999926e-05, 8.312499999999987e-05, 8.301299999999984e-05, 8.308300000000116e-05, 8.379099999999973e-05, 8.376400000000006e-05, 8.38049999999993e-05, 8.330599999999827e-05, 8.345800000000153e-05, 8.333399999999741e-05, 8.330600000000174e-05, 8.366700000000254e-05, 8.348600000000067e-05, 8.386099999999758e-05, 8.306899999999812e-05, 8.31110000000003e-05, 8.367999999999917e-05, 8.320800000000128e-05, 8.394499999999847e-05, 8.373599999999745e-05, 8.368099999999865e-05, 8.309699999999726e-05, 8.305600000000149e-05, 8.352799999999938e-05, 8.383400000000138e-05, 8.390200000000028e-05, 8.363899999999994e-05, 8.32910000000027e-05, 8.327699999999966e-05, 8.36529999999995e-05, 8.37919999999992e-05]</msg>
<status status="PASS" starttime="20201030 18:39:13.726" endtime="20201030 18:39:13.728"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:13.721" endtime="20201030 18:39:13.728"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:39:13.732" endtime="20201030 18:39:13.751"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:13.730" endtime="20201030 18:39:13.752"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:13.729" endtime="20201030 18:39:13.752"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:13.372" endtime="20201030 18:39:13.753"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:13.371" endtime="20201030 18:39:13.753"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:13.761" endtime="20201030 18:39:13.781"></status>
</kw>
<msg timestamp="20201030 18:39:13.782" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:13.760" endtime="20201030 18:39:13.782"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:13.784" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:13.783" endtime="20201030 18:39:13.784"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:13.785" endtime="20201030 18:39:13.787"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:13.757" endtime="20201030 18:39:13.787"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:13.755" endtime="20201030 18:39:13.788"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:13.794" endtime="20201030 18:39:14.080"></status>
</kw>
<msg timestamp="20201030 18:39:14.083" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020425861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020510458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:13.793" endtime="20201030 18:39:14.083"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:14.091" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020425861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020510458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:14.084" endtime="20201030 18:39:14.091"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:14.092" endtime="20201030 18:39:14.093"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:13.790" endtime="20201030 18:39:14.094"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:13.788" endtime="20201030 18:39:14.094"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:39:14.098" level="INFO">${RESULT} = [{'diff': 8.459699999999876e-05}, {'diff': 8.465199999999756e-05}, {'diff': 8.48050000000003e-05}, {'diff': 8.46660000000006e-05}, {'diff': 8.488899999999772e-05}, {'diff': 8.422199999999838e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:39:14.095" endtime="20201030 18:39:14.099"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:39:14.102" level="INFO">${ACCURACY} = {'diff': [8.459699999999876e-05, 8.465199999999756e-05, 8.48050000000003e-05, 8.46660000000006e-05, 8.488899999999772e-05, 8.422199999999838e-05, 8.440300000000026e-05, 8.412500000000087e-05, 8.423600...</msg>
<status status="PASS" starttime="20201030 18:39:14.099" endtime="20201030 18:39:14.103"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:39:14.107" level="INFO">NAME: accuracy-TIMER_SET-80-philip</msg>
<status status="PASS" starttime="20201030 18:39:14.106" endtime="20201030 18:39:14.108"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:39:14.110" level="INFO">VALUE: [8.459699999999876e-05, 8.465199999999756e-05, 8.48050000000003e-05, 8.46660000000006e-05, 8.488899999999772e-05, 8.422199999999838e-05, 8.440300000000026e-05, 8.412500000000087e-05, 8.423600000000142e-05, 8.447300000000157e-05, 8.46530000000005e-05, 8.462500000000137e-05, 8.465199999999756e-05, 8.472199999999888e-05, 8.46249999999979e-05, 8.424999999999752e-05, 8.470799999999931e-05, 8.490299999999729e-05, 8.470799999999931e-05, 8.46530000000005e-05, 8.46530000000005e-05, 8.406899999999912e-05, 8.440300000000026e-05, 8.438800000000121e-05, 8.468000000000017e-05, 8.48050000000003e-05, 8.404199999999945e-05, 8.394399999999899e-05, 8.411099999999783e-05, 8.472199999999888e-05, 8.458299999999919e-05, 8.424999999999752e-05, 8.413900000000044e-05, 8.433299999999894e-05, 8.399999999999727e-05, 8.44859999999982e-05, 8.487499999999815e-05, 8.41110000000013e-05, 8.469399999999974e-05, 8.419399999999924e-05, 8.445799999999906e-05, 8.456999999999909e-05, 8.477799999999716e-05, 8.4846999999999e-05, 8.394500000000193e-05, 8.400000000000074e-05, 8.39309999999989e-05, 8.494399999999999e-05, 8.417999999999967e-05, 8.408299999999869e-05]</msg>
<status status="PASS" starttime="20201030 18:39:14.108" endtime="20201030 18:39:14.111"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:14.103" endtime="20201030 18:39:14.112"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:39:14.115" endtime="20201030 18:39:14.135"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:14.114" endtime="20201030 18:39:14.135"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:14.113" endtime="20201030 18:39:14.136"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:13.754" endtime="20201030 18:39:14.136"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:13.753" endtime="20201030 18:39:14.136"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:14.145" endtime="20201030 18:39:14.163"></status>
</kw>
<msg timestamp="20201030 18:39:14.163" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:14.143" endtime="20201030 18:39:14.163"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:14.165" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:14.164" endtime="20201030 18:39:14.166"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:14.167" endtime="20201030 18:39:14.168"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:14.141" endtime="20201030 18:39:14.169"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:14.139" endtime="20201030 18:39:14.169"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:14.176" endtime="20201030 18:39:14.472"></status>
</kw>
<msg timestamp="20201030 18:39:14.475" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019347014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019432458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:14.174" endtime="20201030 18:39:14.475"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:14.483" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019347014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019432458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:14.476" endtime="20201030 18:39:14.484"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:14.484" endtime="20201030 18:39:14.486"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:14.171" endtime="20201030 18:39:14.487"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:14.170" endtime="20201030 18:39:14.487"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:39:14.491" level="INFO">${RESULT} = [{'diff': 8.544400000000049e-05}, {'diff': 8.56660000000016e-05}, {'diff': 8.577799999999816e-05}, {'diff': 8.572299999999936e-05}, {'diff': 8.524999999999852e-05}, {'diff': 8.570800000000031e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:39:14.488" endtime="20201030 18:39:14.491"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:39:14.496" level="INFO">${ACCURACY} = {'diff': [8.544400000000049e-05, 8.56660000000016e-05, 8.577799999999816e-05, 8.572299999999936e-05, 8.524999999999852e-05, 8.570800000000031e-05, 8.530600000000027e-05, 8.53469999999995e-05, 8.590300...</msg>
<status status="PASS" starttime="20201030 18:39:14.492" endtime="20201030 18:39:14.496"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:39:14.501" level="INFO">NAME: accuracy-TIMER_SET-81-philip</msg>
<status status="PASS" starttime="20201030 18:39:14.500" endtime="20201030 18:39:14.501"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:39:14.503" level="INFO">VALUE: [8.544400000000049e-05, 8.56660000000016e-05, 8.577799999999816e-05, 8.572299999999936e-05, 8.524999999999852e-05, 8.570800000000031e-05, 8.530600000000027e-05, 8.53469999999995e-05, 8.590300000000176e-05, 8.502800000000088e-05, 8.49729999999986e-05, 8.590300000000176e-05, 8.545800000000006e-05, 8.563900000000194e-05, 8.536099999999908e-05, 8.52920000000007e-05, 8.588899999999872e-05, 8.562500000000237e-05, 8.509699999999926e-05, 8.552799999999791e-05, 8.59310000000009e-05, 8.509700000000273e-05, 8.557000000000009e-05, 8.555500000000105e-05, 8.520799999999981e-05, 8.531900000000037e-05, 8.531900000000037e-05, 8.570800000000031e-05, 8.513900000000144e-05, 8.54310000000004e-05, 8.572199999999988e-05, 8.519500000000318e-05, 8.566599999999813e-05, 8.498700000000164e-05, 8.559699999999976e-05, 8.547199999999963e-05, 8.518000000000067e-05, 8.540299999999779e-05, 8.509700000000273e-05, 8.498600000000217e-05, 8.494399999999999e-05, 8.530600000000027e-05, 8.581900000000087e-05, 8.579199999999773e-05, 8.491700000000033e-05, 8.51110000000023e-05, 8.51249999999984e-05, 8.550000000000224e-05, 8.53469999999995e-05, 8.500000000000174e-05]</msg>
<status status="PASS" starttime="20201030 18:39:14.502" endtime="20201030 18:39:14.504"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:14.497" endtime="20201030 18:39:14.504"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:39:14.508" endtime="20201030 18:39:14.527"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:14.507" endtime="20201030 18:39:14.528"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:14.505" endtime="20201030 18:39:14.528"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:14.137" endtime="20201030 18:39:14.529"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:14.137" endtime="20201030 18:39:14.529"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:14.540" endtime="20201030 18:39:14.563"></status>
</kw>
<msg timestamp="20201030 18:39:14.564" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:14.537" endtime="20201030 18:39:14.564"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:14.569" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:14.566" endtime="20201030 18:39:14.569"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:14.571" endtime="20201030 18:39:14.574"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:14.533" endtime="20201030 18:39:14.575"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:14.531" endtime="20201030 18:39:14.576"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:14.590" endtime="20201030 18:39:14.885"></status>
</kw>
<msg timestamp="20201030 18:39:14.889" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023192875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023279236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:14.586" endtime="20201030 18:39:14.889"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:14.897" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023192875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023279236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:14.890" endtime="20201030 18:39:14.897"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:14.898" endtime="20201030 18:39:14.900"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:14.581" endtime="20201030 18:39:14.900"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:14.578" endtime="20201030 18:39:14.901"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:39:14.905" level="INFO">${RESULT} = [{'diff': 8.636099999999661e-05}, {'diff': 8.651399999999934e-05}, {'diff': 8.676399999999959e-05}, {'diff': 8.630600000000127e-05}, {'diff': 8.591700000000133e-05}, {'diff': 8.59859999999997e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:39:14.901" endtime="20201030 18:39:14.905"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:39:14.909" level="INFO">${ACCURACY} = {'diff': [8.636099999999661e-05, 8.651399999999934e-05, 8.676399999999959e-05, 8.630600000000127e-05, 8.591700000000133e-05, 8.59859999999997e-05, 8.659800000000023e-05, 8.658400000000066e-05, 8.59580...</msg>
<status status="PASS" starttime="20201030 18:39:14.906" endtime="20201030 18:39:14.909"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:39:14.913" level="INFO">NAME: accuracy-TIMER_SET-82-philip</msg>
<status status="PASS" starttime="20201030 18:39:14.912" endtime="20201030 18:39:14.914"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:39:14.916" level="INFO">VALUE: [8.636099999999661e-05, 8.651399999999934e-05, 8.676399999999959e-05, 8.630600000000127e-05, 8.591700000000133e-05, 8.59859999999997e-05, 8.659800000000023e-05, 8.658400000000066e-05, 8.595800000000056e-05, 8.631900000000137e-05, 8.630499999999833e-05, 8.659700000000076e-05, 8.687500000000015e-05, 8.658300000000119e-05, 8.61669999999981e-05, 8.613899999999897e-05, 8.601399999999884e-05, 8.633400000000041e-05, 8.622299999999986e-05, 8.67920000000022e-05, 8.607000000000059e-05, 8.626299999999962e-05, 8.670800000000131e-05, 8.651399999999934e-05, 8.673599999999698e-05, 8.687500000000015e-05, 8.627799999999866e-05, 8.691699999999886e-05, 8.677800000000263e-05, 8.605600000000102e-05, 8.690299999999929e-05, 8.644400000000149e-05, 8.675000000000002e-05, 8.665299999999904e-05, 8.688900000000319e-05, 8.624999999999952e-05, 8.66530000000025e-05, 8.659700000000076e-05, 8.659800000000023e-05, 8.661099999999686e-05, 8.616700000000158e-05, 8.688899999999972e-05, 8.63050000000018e-05, 8.61249999999994e-05, 8.680499999999883e-05, 8.683300000000144e-05, 8.626399999999909e-05, 8.604200000000145e-05, 8.595800000000056e-05, 8.619400000000124e-05]</msg>
<status status="PASS" starttime="20201030 18:39:14.914" endtime="20201030 18:39:14.917"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:14.910" endtime="20201030 18:39:14.917"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:39:14.921" endtime="20201030 18:39:14.940"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:14.919" endtime="20201030 18:39:14.941"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:14.918" endtime="20201030 18:39:14.941"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:14.530" endtime="20201030 18:39:14.941"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:14.529" endtime="20201030 18:39:14.942"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:14.950" endtime="20201030 18:39:14.971"></status>
</kw>
<msg timestamp="20201030 18:39:14.971" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:14.949" endtime="20201030 18:39:14.971"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:14.973" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:14.972" endtime="20201030 18:39:14.974"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:14.975" endtime="20201030 18:39:14.976"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:14.946" endtime="20201030 18:39:14.977"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:14.944" endtime="20201030 18:39:14.977"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:14.984" endtime="20201030 18:39:15.270"></status>
</kw>
<msg timestamp="20201030 18:39:15.273" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020573347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020660319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:14.982" endtime="20201030 18:39:15.273"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:15.281" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020573347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020660319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:15.274" endtime="20201030 18:39:15.282"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:15.282" endtime="20201030 18:39:15.284"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:14.980" endtime="20201030 18:39:15.284"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:14.978" endtime="20201030 18:39:15.285"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:39:15.289" level="INFO">${RESULT} = [{'diff': 8.697200000000113e-05}, {'diff': 8.733300000000194e-05}, {'diff': 8.704199999999898e-05}, {'diff': 8.725000000000052e-05}, {'diff': 8.788900000000072e-05}, {'diff': 8.76250000000009e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:39:15.286" endtime="20201030 18:39:15.289"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:39:15.293" level="INFO">${ACCURACY} = {'diff': [8.697200000000113e-05, 8.733300000000194e-05, 8.704199999999898e-05, 8.725000000000052e-05, 8.788900000000072e-05, 8.76250000000009e-05, 8.780600000000277e-05, 8.73059999999988e-05, 8.738900...</msg>
<status status="PASS" starttime="20201030 18:39:15.290" endtime="20201030 18:39:15.293"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:39:15.297" level="INFO">NAME: accuracy-TIMER_SET-83-philip</msg>
<status status="PASS" starttime="20201030 18:39:15.296" endtime="20201030 18:39:15.298"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:39:15.300" level="INFO">VALUE: [8.697200000000113e-05, 8.733300000000194e-05, 8.704199999999898e-05, 8.725000000000052e-05, 8.788900000000072e-05, 8.76250000000009e-05, 8.780600000000277e-05, 8.73059999999988e-05, 8.738900000000022e-05, 8.769499999999875e-05, 8.718099999999868e-05, 8.701399999999984e-05, 8.774999999999755e-05, 8.738900000000022e-05, 8.78189999999994e-05, 8.795899999999857e-05, 8.724999999999705e-05, 8.69860000000007e-05, 8.793099999999943e-05, 8.69310000000019e-05, 8.759699999999829e-05, 8.729199999999923e-05, 8.755500000000305e-05, 8.763900000000047e-05, 8.783299999999897e-05, 8.711099999999736e-05, 8.776400000000059e-05, 8.738900000000022e-05, 8.772199999999841e-05, 8.745900000000154e-05, 8.723600000000095e-05, 8.727799999999966e-05, 8.720799999999834e-05, 8.766600000000013e-05, 8.715200000000006e-05, 8.705500000000255e-05, 8.725000000000052e-05, 8.76669999999996e-05, 8.730499999999933e-05, 8.756999999999862e-05, 8.726400000000009e-05, 8.713899999999997e-05, 8.754199999999948e-05, 8.709800000000073e-05, 8.773700000000093e-05, 8.740200000000031e-05, 8.747199999999816e-05, 8.786099999999811e-05, 8.769399999999927e-05, 8.758399999999819e-05]</msg>
<status status="PASS" starttime="20201030 18:39:15.299" endtime="20201030 18:39:15.302"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:15.294" endtime="20201030 18:39:15.302"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:39:15.306" endtime="20201030 18:39:15.325"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:15.304" endtime="20201030 18:39:15.326"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:15.303" endtime="20201030 18:39:15.326"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:14.943" endtime="20201030 18:39:15.327"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:14.942" endtime="20201030 18:39:15.327"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:15.336" endtime="20201030 18:39:15.357"></status>
</kw>
<msg timestamp="20201030 18:39:15.358" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:15.334" endtime="20201030 18:39:15.358"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:15.363" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:15.360" endtime="20201030 18:39:15.364"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:15.365" endtime="20201030 18:39:15.369"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:15.332" endtime="20201030 18:39:15.370"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:15.330" endtime="20201030 18:39:15.371"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:15.385" endtime="20201030 18:39:15.678"></status>
</kw>
<msg timestamp="20201030 18:39:15.681" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020269222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020357889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:15.381" endtime="20201030 18:39:15.681"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:15.689" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020269222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020357889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:15.682" endtime="20201030 18:39:15.689"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:15.690" endtime="20201030 18:39:15.692"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:15.376" endtime="20201030 18:39:15.692"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:15.372" endtime="20201030 18:39:15.693"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:39:15.697" level="INFO">${RESULT} = [{'diff': 8.86670000000006e-05}, {'diff': 8.888900000000172e-05}, {'diff': 8.863900000000147e-05}, {'diff': 8.859800000000223e-05}, {'diff': 8.819399999999977e-05}, {'diff': 8.824999999999805e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:39:15.693" endtime="20201030 18:39:15.697"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:39:15.704" level="INFO">${ACCURACY} = {'diff': [8.86670000000006e-05, 8.888900000000172e-05, 8.863900000000147e-05, 8.859800000000223e-05, 8.819399999999977e-05, 8.824999999999805e-05, 8.872199999999941e-05, 8.876400000000159e-05, 8.87360...</msg>
<status status="PASS" starttime="20201030 18:39:15.698" endtime="20201030 18:39:15.705"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:39:15.709" level="INFO">NAME: accuracy-TIMER_SET-84-philip</msg>
<status status="PASS" starttime="20201030 18:39:15.708" endtime="20201030 18:39:15.709"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:39:15.711" level="INFO">VALUE: [8.86670000000006e-05, 8.888900000000172e-05, 8.863900000000147e-05, 8.859800000000223e-05, 8.819399999999977e-05, 8.824999999999805e-05, 8.872199999999941e-05, 8.876400000000159e-05, 8.873600000000245e-05, 8.833299999999947e-05, 8.818099999999968e-05, 8.845899999999907e-05, 8.887500000000215e-05, 8.823599999999848e-05, 8.7944999999999e-05, 8.870799999999984e-05, 8.805500000000008e-05, 8.876399999999812e-05, 8.83189999999999e-05, 8.869400000000027e-05, 8.861099999999886e-05, 8.807000000000259e-05, 8.801399999999737e-05, 8.818099999999968e-05, 8.84999999999983e-05, 8.801400000000084e-05, 8.877700000000169e-05, 8.81250000000014e-05, 8.844400000000002e-05, 8.851400000000134e-05, 8.806899999999965e-05, 8.852800000000091e-05, 8.859699999999929e-05, 8.881999999999987e-05, 8.797200000000213e-05, 8.837500000000165e-05, 8.887500000000215e-05, 8.830499999999686e-05, 8.817999999999673e-05, 8.805599999999955e-05, 8.822200000000238e-05, 8.837499999999818e-05, 8.854200000000048e-05, 8.808299999999922e-05, 8.822199999999891e-05, 8.868100000000018e-05, 8.872299999999889e-05, 8.795900000000204e-05, 8.820899999999882e-05, 8.802700000000094e-05]</msg>
<status status="PASS" starttime="20201030 18:39:15.710" endtime="20201030 18:39:15.712"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:15.705" endtime="20201030 18:39:15.713"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:39:15.716" endtime="20201030 18:39:15.736"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:15.715" endtime="20201030 18:39:15.737"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:15.714" endtime="20201030 18:39:15.737"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:15.328" endtime="20201030 18:39:15.737"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:15.327" endtime="20201030 18:39:15.737"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:15.746" endtime="20201030 18:39:15.765"></status>
</kw>
<msg timestamp="20201030 18:39:15.765" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:15.744" endtime="20201030 18:39:15.765"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:15.768" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:15.766" endtime="20201030 18:39:15.768"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:15.769" endtime="20201030 18:39:15.770"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:15.742" endtime="20201030 18:39:15.771"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:15.740" endtime="20201030 18:39:15.771"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:15.778" endtime="20201030 18:39:16.064"></status>
</kw>
<msg timestamp="20201030 18:39:16.067" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019600417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019689431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:15.776" endtime="20201030 18:39:16.067"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:16.075" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019600417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019689431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:16.068" endtime="20201030 18:39:16.076"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:16.076" endtime="20201030 18:39:16.078"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:15.774" endtime="20201030 18:39:16.079"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:15.772" endtime="20201030 18:39:16.079"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:39:16.083" level="INFO">${RESULT} = [{'diff': 8.901400000000184e-05}, {'diff': 8.907000000000012e-05}, {'diff': 8.987499999999968e-05}, {'diff': 8.962499999999943e-05}, {'diff': 8.988900000000272e-05}, {'diff': 8.925000000000252e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:39:16.080" endtime="20201030 18:39:16.083"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:39:16.087" level="INFO">${ACCURACY} = {'diff': [8.901400000000184e-05, 8.907000000000012e-05, 8.987499999999968e-05, 8.962499999999943e-05, 8.988900000000272e-05, 8.925000000000252e-05, 8.911099999999936e-05, 8.977799999999869e-05, 8.8945...</msg>
<status status="PASS" starttime="20201030 18:39:16.084" endtime="20201030 18:39:16.087"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:39:16.092" level="INFO">NAME: accuracy-TIMER_SET-85-philip</msg>
<status status="PASS" starttime="20201030 18:39:16.091" endtime="20201030 18:39:16.092"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:39:16.094" level="INFO">VALUE: [8.901400000000184e-05, 8.907000000000012e-05, 8.987499999999968e-05, 8.962499999999943e-05, 8.988900000000272e-05, 8.925000000000252e-05, 8.911099999999936e-05, 8.977799999999869e-05, 8.8945e-05, 8.93060000000008e-05, 8.911099999999936e-05, 8.918100000000068e-05, 8.991599999999891e-05, 8.992999999999848e-05, 8.96800000000017e-05, 8.980500000000183e-05, 8.911100000000283e-05, 8.98190000000014e-05, 8.990299999999882e-05, 8.8945e-05, 8.972200000000041e-05, 8.94999999999993e-05, 8.920899999999982e-05, 8.954199999999801e-05, 8.920800000000034e-05, 8.913900000000197e-05, 8.898599999999923e-05, 8.974999999999955e-05, 8.934700000000004e-05, 8.961099999999986e-05, 8.898599999999923e-05, 8.958300000000072e-05, 8.990300000000229e-05, 8.912499999999893e-05, 8.919500000000025e-05, 8.908300000000022e-05, 8.96519999999991e-05, 8.895800000000009e-05, 8.894400000000052e-05, 8.895800000000009e-05, 8.897199999999966e-05, 8.919500000000025e-05, 8.8945e-05, 8.984800000000001e-05, 8.950000000000277e-05, 8.908300000000022e-05, 8.926299999999915e-05, 8.98190000000014e-05, 8.925000000000252e-05, 8.933300000000047e-05]</msg>
<status status="PASS" starttime="20201030 18:39:16.093" endtime="20201030 18:39:16.099"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:16.088" endtime="20201030 18:39:16.100"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:39:16.104" endtime="20201030 18:39:16.123"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:16.102" endtime="20201030 18:39:16.124"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:16.101" endtime="20201030 18:39:16.124"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:15.738" endtime="20201030 18:39:16.124"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:15.738" endtime="20201030 18:39:16.124"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:16.134" endtime="20201030 18:39:16.154"></status>
</kw>
<msg timestamp="20201030 18:39:16.154" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:16.132" endtime="20201030 18:39:16.155"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:16.157" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:16.156" endtime="20201030 18:39:16.157"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:16.158" endtime="20201030 18:39:16.160"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:16.129" endtime="20201030 18:39:16.160"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:16.127" endtime="20201030 18:39:16.161"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:16.167" endtime="20201030 18:39:16.454"></status>
</kw>
<msg timestamp="20201030 18:39:16.458" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021355806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021446653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:16.166" endtime="20201030 18:39:16.458"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:16.466" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021355806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021446653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:16.459" endtime="20201030 18:39:16.466"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:16.467" endtime="20201030 18:39:16.469"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:16.163" endtime="20201030 18:39:16.469"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:16.161" endtime="20201030 18:39:16.470"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:39:16.474" level="INFO">${RESULT} = [{'diff': 9.084699999999807e-05}, {'diff': 9.005600000000155e-05}, {'diff': 9.009800000000026e-05}, {'diff': 9.073600000000098e-05}, {'diff': 8.988799999999977e-05}, {'diff': 9.004199999999851e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:39:16.470" endtime="20201030 18:39:16.474"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:39:16.478" level="INFO">${ACCURACY} = {'diff': [9.084699999999807e-05, 9.005600000000155e-05, 9.009800000000026e-05, 9.073600000000098e-05, 8.988799999999977e-05, 9.004199999999851e-05, 9.088900000000025e-05, 9.040300000000279e-05, 9.0416...</msg>
<status status="PASS" starttime="20201030 18:39:16.475" endtime="20201030 18:39:16.478"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:39:16.482" level="INFO">NAME: accuracy-TIMER_SET-86-philip</msg>
<status status="PASS" starttime="20201030 18:39:16.481" endtime="20201030 18:39:16.482"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:39:16.485" level="INFO">VALUE: [9.084699999999807e-05, 9.005600000000155e-05, 9.009800000000026e-05, 9.073600000000098e-05, 8.988799999999977e-05, 9.004199999999851e-05, 9.088900000000025e-05, 9.040300000000279e-05, 9.041699999999889e-05, 9.090299999999982e-05, 8.997199999999719e-05, 9.016699999999864e-05, 8.995900000000057e-05, 9.043099999999846e-05, 9.088900000000025e-05, 9.008300000000122e-05, 9.029099999999929e-05, 8.997200000000066e-05, 9.077799999999969e-05, 9.040300000000279e-05, 9.070799999999837e-05, 9.007000000000112e-05, 9.020900000000082e-05, 9.025000000000005e-05, 9.018099999999821e-05, 9.045900000000107e-05, 8.993099999999796e-05, 9.0639e-05, 9.009700000000079e-05, 8.998600000000023e-05, 9.05000000000003e-05, 9.073600000000098e-05, 9.051399999999987e-05, 9.0639e-05, 8.995900000000057e-05, 9.083400000000144e-05, 9.00129999999999e-05, 9.083400000000144e-05, 9.073599999999751e-05, 9.052699999999997e-05, 9.093099999999896e-05, 9.0639e-05, 9.026399999999962e-05, 9.001399999999937e-05, 9.01670000000021e-05, 9.03199999999979e-05, 9.016699999999864e-05, 9.080599999999883e-05, 9.069500000000175e-05, 9.040199999999984e-05]</msg>
<status status="PASS" starttime="20201030 18:39:16.483" endtime="20201030 18:39:16.486"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:16.479" endtime="20201030 18:39:16.487"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:39:16.491" endtime="20201030 18:39:16.510"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:16.489" endtime="20201030 18:39:16.511"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:16.488" endtime="20201030 18:39:16.511"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:16.125" endtime="20201030 18:39:16.511"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:16.125" endtime="20201030 18:39:16.511"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:16.520" endtime="20201030 18:39:16.539"></status>
</kw>
<msg timestamp="20201030 18:39:16.539" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:16.518" endtime="20201030 18:39:16.539"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:16.542" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:16.540" endtime="20201030 18:39:16.542"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:16.543" endtime="20201030 18:39:16.544"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:16.516" endtime="20201030 18:39:16.545"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:16.514" endtime="20201030 18:39:16.545"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:16.552" endtime="20201030 18:39:16.837"></status>
</kw>
<msg timestamp="20201030 18:39:16.840" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019634222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019725583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:16.550" endtime="20201030 18:39:16.840"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:16.848" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019634222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019725583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:16.841" endtime="20201030 18:39:16.848"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:16.849" endtime="20201030 18:39:16.851"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:16.548" endtime="20201030 18:39:16.851"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:16.546" endtime="20201030 18:39:16.852"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:39:16.856" level="INFO">${RESULT} = [{'diff': 9.136100000000161e-05}, {'diff': 9.159699999999882e-05}, {'diff': 9.127800000000019e-05}, {'diff': 9.145800000000259e-05}, {'diff': 9.18199999999994e-05}, {'diff': 9.191700000000039e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:39:16.852" endtime="20201030 18:39:16.856"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:39:16.861" level="INFO">${ACCURACY} = {'diff': [9.136100000000161e-05, 9.159699999999882e-05, 9.127800000000019e-05, 9.145800000000259e-05, 9.18199999999994e-05, 9.191700000000039e-05, 9.170900000000232e-05, 9.191700000000039e-05, 9.12360...</msg>
<status status="PASS" starttime="20201030 18:39:16.857" endtime="20201030 18:39:16.861"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:39:16.865" level="INFO">NAME: accuracy-TIMER_SET-87-philip</msg>
<status status="PASS" starttime="20201030 18:39:16.864" endtime="20201030 18:39:16.866"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:39:16.868" level="INFO">VALUE: [9.136100000000161e-05, 9.159699999999882e-05, 9.127800000000019e-05, 9.145800000000259e-05, 9.18199999999994e-05, 9.191700000000039e-05, 9.170900000000232e-05, 9.191700000000039e-05, 9.123600000000148e-05, 9.152700000000097e-05, 9.104100000000004e-05, 9.194400000000005e-05, 9.138900000000075e-05, 9.106899999999918e-05, 9.184699999999907e-05, 9.118099999999921e-05, 9.137500000000118e-05, 9.147200000000216e-05, 9.148600000000173e-05, 9.170899999999885e-05, 9.108299999999875e-05, 9.131899999999943e-05, 9.116600000000016e-05, 9.162499999999796e-05, 9.190300000000082e-05, 9.122199999999844e-05, 9.175000000000155e-05, 9.176400000000112e-05, 9.125000000000105e-05, 9.188900000000125e-05, 9.154200000000001e-05, 9.116600000000016e-05, 9.159699999999882e-05, 9.108299999999875e-05, 9.16659999999972e-05, 9.188899999999778e-05, 9.134700000000204e-05, 9.109699999999832e-05, 9.123599999999801e-05, 9.097300000000114e-05, 9.11390000000005e-05, 9.1332999999999e-05, 9.175000000000155e-05, 9.130499999999986e-05, 9.159699999999882e-05, 9.105499999999961e-05, 9.105600000000255e-05, 9.173599999999851e-05, 9.131899999999943e-05, 9.143099999999946e-05]</msg>
<status status="PASS" starttime="20201030 18:39:16.866" endtime="20201030 18:39:16.869"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:16.862" endtime="20201030 18:39:16.869"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:39:16.873" endtime="20201030 18:39:16.892"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:16.871" endtime="20201030 18:39:16.893"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:16.870" endtime="20201030 18:39:16.893"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:16.512" endtime="20201030 18:39:16.893"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:16.512" endtime="20201030 18:39:16.893"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:16.902" endtime="20201030 18:39:16.921"></status>
</kw>
<msg timestamp="20201030 18:39:16.921" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:16.901" endtime="20201030 18:39:16.921"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:16.923" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:16.922" endtime="20201030 18:39:16.924"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:16.925" endtime="20201030 18:39:16.926"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:16.898" endtime="20201030 18:39:16.927"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:16.896" endtime="20201030 18:39:16.927"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:16.934" endtime="20201030 18:39:17.221"></status>
</kw>
<msg timestamp="20201030 18:39:17.224" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020167611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020259681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:16.932" endtime="20201030 18:39:17.224"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:17.232" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020167611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020259681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:17.225" endtime="20201030 18:39:17.232"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:17.233" endtime="20201030 18:39:17.235"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:16.930" endtime="20201030 18:39:17.235"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:16.928" endtime="20201030 18:39:17.236"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:39:17.240" level="INFO">${RESULT} = [{'diff': 9.207000000000312e-05}, {'diff': 9.218000000000073e-05}, {'diff': 9.224999999999858e-05}, {'diff': 9.238899999999828e-05}, {'diff': 9.259699999999982e-05}, {'diff': 9.223600000000248e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:39:17.237" endtime="20201030 18:39:17.240"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:39:17.244" level="INFO">${ACCURACY} = {'diff': [9.207000000000312e-05, 9.218000000000073e-05, 9.224999999999858e-05, 9.238899999999828e-05, 9.259699999999982e-05, 9.223600000000248e-05, 9.227800000000119e-05, 9.202800000000094e-05, 9.2222...</msg>
<status status="PASS" starttime="20201030 18:39:17.241" endtime="20201030 18:39:17.244"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:39:17.248" level="INFO">NAME: accuracy-TIMER_SET-88-philip</msg>
<status status="PASS" starttime="20201030 18:39:17.247" endtime="20201030 18:39:17.249"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:39:17.251" level="INFO">VALUE: [9.207000000000312e-05, 9.218000000000073e-05, 9.224999999999858e-05, 9.238899999999828e-05, 9.259699999999982e-05, 9.223600000000248e-05, 9.227800000000119e-05, 9.202800000000094e-05, 9.222299999999892e-05, 9.211099999999889e-05, 9.20139999999979e-05, 9.287500000000268e-05, 9.21940000000003e-05, 9.220799999999987e-05, 9.223599999999901e-05, 9.280500000000136e-05, 9.219499999999978e-05, 9.280600000000083e-05, 9.272199999999994e-05, 9.243100000000046e-05, 9.288900000000225e-05, 9.204199999999704e-05, 9.220799999999987e-05, 9.290200000000234e-05, 9.269399999999733e-05, 9.212499999999846e-05, 9.230500000000086e-05, 9.219499999999978e-05, 9.293100000000096e-05, 9.236099999999914e-05, 9.21390000000015e-05, 9.244500000000003e-05, 9.225000000000205e-05, 9.291599999999844e-05, 9.280500000000136e-05, 9.266700000000114e-05, 9.209700000000279e-05, 9.262499999999896e-05, 9.248600000000273e-05, 9.244500000000003e-05, 9.273599999999951e-05, 9.247299999999917e-05, 9.215300000000107e-05, 9.25139999999984e-05, 9.24719999999997e-05, 9.288899999999878e-05, 9.223599999999901e-05, 9.219499999999978e-05, 9.230500000000086e-05, 9.230600000000033e-05]</msg>
<status status="PASS" starttime="20201030 18:39:17.250" endtime="20201030 18:39:17.252"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:17.245" endtime="20201030 18:39:17.252"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:39:17.256" endtime="20201030 18:39:17.275"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:17.254" endtime="20201030 18:39:17.276"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:17.253" endtime="20201030 18:39:17.276"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:16.894" endtime="20201030 18:39:17.277"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:16.894" endtime="20201030 18:39:17.277"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:17.285" endtime="20201030 18:39:17.305"></status>
</kw>
<msg timestamp="20201030 18:39:17.305" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:17.284" endtime="20201030 18:39:17.305"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:17.308" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:17.306" endtime="20201030 18:39:17.308"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:17.309" endtime="20201030 18:39:17.310"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:17.281" endtime="20201030 18:39:17.311"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:17.279" endtime="20201030 18:39:17.311"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:17.318" endtime="20201030 18:39:17.604"></status>
</kw>
<msg timestamp="20201030 18:39:17.607" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020652139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020745792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:17.316" endtime="20201030 18:39:17.607"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:17.616" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020652139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020745792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:17.608" endtime="20201030 18:39:17.617"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:17.618" endtime="20201030 18:39:17.619"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:17.314" endtime="20201030 18:39:17.620"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:17.312" endtime="20201030 18:39:17.620"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:39:17.624" level="INFO">${RESULT} = [{'diff': 9.36529999999991e-05}, {'diff': 9.29870000000027e-05}, {'diff': 9.367999999999876e-05}, {'diff': 9.316600000000216e-05}, {'diff': 9.388899999999978e-05}, {'diff': 9.311099999999989e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:39:17.621" endtime="20201030 18:39:17.624"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:39:17.628" level="INFO">${ACCURACY} = {'diff': [9.36529999999991e-05, 9.29870000000027e-05, 9.367999999999876e-05, 9.316600000000216e-05, 9.388899999999978e-05, 9.311099999999989e-05, 9.372200000000094e-05, 9.312500000000293e-05, 9.323600...</msg>
<status status="PASS" starttime="20201030 18:39:17.625" endtime="20201030 18:39:17.629"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:39:17.633" level="INFO">NAME: accuracy-TIMER_SET-89-philip</msg>
<status status="PASS" starttime="20201030 18:39:17.632" endtime="20201030 18:39:17.633"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:39:17.635" level="INFO">VALUE: [9.36529999999991e-05, 9.29870000000027e-05, 9.367999999999876e-05, 9.316600000000216e-05, 9.388899999999978e-05, 9.311099999999989e-05, 9.372200000000094e-05, 9.312500000000293e-05, 9.323600000000001e-05, 9.345799999999765e-05, 9.368100000000171e-05, 9.327799999999872e-05, 9.31529999999986e-05, 9.349999999999983e-05, 9.391599999999944e-05, 9.342999999999851e-05, 9.315300000000207e-05, 9.337499999999971e-05, 9.370800000000137e-05, 9.347300000000017e-05, 9.397300000000067e-05, 9.334800000000004e-05, 9.337499999999971e-05, 9.319399999999783e-05, 9.311099999999989e-05, 9.320800000000087e-05, 9.386099999999717e-05, 9.29720000000002e-05, 9.341699999999842e-05, 9.3333000000001e-05, 9.376399999999965e-05, 9.324999999999958e-05, 9.387500000000021e-05, 9.363800000000005e-05, 9.3026999999999e-05, 9.36940000000018e-05, 9.367999999999876e-05, 9.338899999999928e-05, 9.35139999999994e-05, 9.327800000000219e-05, 9.311099999999989e-05, 9.316699999999817e-05, 9.320900000000035e-05, 9.304200000000151e-05, 9.354099999999907e-05, 9.3333000000001e-05, 9.377800000000269e-05, 9.318000000000173e-05, 9.311099999999989e-05, 9.336100000000014e-05]</msg>
<status status="PASS" starttime="20201030 18:39:17.634" endtime="20201030 18:39:17.637"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:17.629" endtime="20201030 18:39:17.638"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:39:17.641" endtime="20201030 18:39:17.661"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:17.640" endtime="20201030 18:39:17.661"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:17.639" endtime="20201030 18:39:17.662"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:17.278" endtime="20201030 18:39:17.662"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:17.277" endtime="20201030 18:39:17.662"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:17.671" endtime="20201030 18:39:17.690"></status>
</kw>
<msg timestamp="20201030 18:39:17.691" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:17.669" endtime="20201030 18:39:17.691"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:17.693" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:17.692" endtime="20201030 18:39:17.693"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:17.694" endtime="20201030 18:39:17.696"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:17.667" endtime="20201030 18:39:17.696"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:17.664" endtime="20201030 18:39:17.697"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:17.703" endtime="20201030 18:39:17.988"></status>
</kw>
<msg timestamp="20201030 18:39:17.991" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019669292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019763569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:17.702" endtime="20201030 18:39:17.992"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:18.000" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019669292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019763569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:17.992" endtime="20201030 18:39:18.000"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:18.001" endtime="20201030 18:39:18.002"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:17.699" endtime="20201030 18:39:18.003"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:17.697" endtime="20201030 18:39:18.003"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:39:18.007" level="INFO">${RESULT} = [{'diff': 9.427700000000025e-05}, {'diff': 9.463899999999706e-05}, {'diff': 9.487500000000121e-05}, {'diff': 9.423600000000101e-05}, {'diff': 9.481999999999893e-05}, {'diff': 9.416699999999917e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:39:18.004" endtime="20201030 18:39:18.008"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:39:18.012" level="INFO">${ACCURACY} = {'diff': [9.427700000000025e-05, 9.463899999999706e-05, 9.487500000000121e-05, 9.423600000000101e-05, 9.481999999999893e-05, 9.416699999999917e-05, 9.408400000000122e-05, 9.491699999999992e-05, 9.4209...</msg>
<status status="PASS" starttime="20201030 18:39:18.008" endtime="20201030 18:39:18.013"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:39:18.017" level="INFO">NAME: accuracy-TIMER_SET-90-philip</msg>
<status status="PASS" starttime="20201030 18:39:18.016" endtime="20201030 18:39:18.017"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:39:18.020" level="INFO">VALUE: [9.427700000000025e-05, 9.463899999999706e-05, 9.487500000000121e-05, 9.423600000000101e-05, 9.481999999999893e-05, 9.416699999999917e-05, 9.408400000000122e-05, 9.491699999999992e-05, 9.420900000000135e-05, 9.477800000000022e-05, 9.455499999999964e-05, 9.406899999999871e-05, 9.495799999999915e-05, 9.452799999999997e-05, 9.494400000000305e-05, 9.494399999999958e-05, 9.394400000000205e-05, 9.394499999999806e-05, 9.405600000000208e-05, 9.425000000000058e-05, 9.455599999999911e-05, 9.419500000000178e-05, 9.417999999999926e-05, 9.423600000000101e-05, 9.483299999999903e-05, 9.474999999999761e-05, 9.423599999999754e-05, 9.474999999999761e-05, 9.500000000000133e-05, 9.452799999999997e-05, 9.411100000000089e-05, 9.486100000000164e-05, 9.42079999999984e-05, 9.472199999999847e-05, 9.409699999999785e-05, 9.423599999999754e-05, 9.4333999999998e-05, 9.45140000000004e-05, 9.412500000000046e-05, 9.420899999999788e-05, 9.405600000000208e-05, 9.490299999999688e-05, 9.417999999999926e-05, 9.486100000000164e-05, 9.455499999999964e-05, 9.477800000000022e-05, 9.406899999999871e-05, 9.441699999999942e-05, 9.438900000000028e-05, 9.416699999999917e-05]</msg>
<status status="PASS" starttime="20201030 18:39:18.018" endtime="20201030 18:39:18.020"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:18.013" endtime="20201030 18:39:18.021"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:39:18.025" endtime="20201030 18:39:18.044"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:18.023" endtime="20201030 18:39:18.045"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:18.022" endtime="20201030 18:39:18.045"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:17.663" endtime="20201030 18:39:18.045"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:17.662" endtime="20201030 18:39:18.045"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:18.054" endtime="20201030 18:39:18.072"></status>
</kw>
<msg timestamp="20201030 18:39:18.073" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:18.052" endtime="20201030 18:39:18.073"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:18.075" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:18.074" endtime="20201030 18:39:18.075"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:18.076" endtime="20201030 18:39:18.078"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:18.050" endtime="20201030 18:39:18.078"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:18.048" endtime="20201030 18:39:18.079"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:18.085" endtime="20201030 18:39:18.372"></status>
</kw>
<msg timestamp="20201030 18:39:18.375" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019540444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019636222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:18.084" endtime="20201030 18:39:18.376"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:18.384" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019540444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019636222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:18.377" endtime="20201030 18:39:18.384"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:18.385" endtime="20201030 18:39:18.386"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:18.081" endtime="20201030 18:39:18.387"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:18.079" endtime="20201030 18:39:18.387"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:39:18.391" level="INFO">${RESULT} = [{'diff': 9.577799999999775e-05}, {'diff': 9.590299999999788e-05}, {'diff': 9.531999999999943e-05}, {'diff': 9.54729999999987e-05}, {'diff': 9.533299999999953e-05}, {'diff': 9.537500000000171e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:39:18.388" endtime="20201030 18:39:18.392"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:39:18.396" level="INFO">${ACCURACY} = {'diff': [9.577799999999775e-05, 9.590299999999788e-05, 9.531999999999943e-05, 9.54729999999987e-05, 9.533299999999953e-05, 9.537500000000171e-05, 9.569500000000328e-05, 9.502699999999753e-05, 9.49579...</msg>
<status status="PASS" starttime="20201030 18:39:18.392" endtime="20201030 18:39:18.396"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:39:18.400" level="INFO">NAME: accuracy-TIMER_SET-91-philip</msg>
<status status="PASS" starttime="20201030 18:39:18.399" endtime="20201030 18:39:18.400"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:39:18.403" level="INFO">VALUE: [9.577799999999775e-05, 9.590299999999788e-05, 9.531999999999943e-05, 9.54729999999987e-05, 9.533299999999953e-05, 9.537500000000171e-05, 9.569500000000328e-05, 9.502699999999753e-05, 9.495799999999915e-05, 9.519399999999983e-05, 9.568000000000076e-05, 9.508299999999928e-05, 9.530599999999986e-05, 9.575000000000208e-05, 9.556999999999968e-05, 9.587499999999874e-05, 9.51660000000007e-05, 9.497199999999872e-05, 9.527800000000072e-05, 9.516599999999723e-05, 9.554199999999707e-05, 9.501399999999743e-05, 9.493000000000001e-05, 9.587499999999874e-05, 9.55279999999975e-05, 9.576400000000165e-05, 9.509799999999832e-05, 9.502699999999753e-05, 9.576400000000165e-05, 9.505500000000014e-05, 9.559699999999935e-05, 9.520800000000287e-05, 9.536099999999867e-05, 9.495799999999915e-05, 9.572199999999947e-05, 9.562500000000196e-05, 9.526400000000115e-05, 9.57079999999999e-05, 9.588900000000178e-05, 9.565200000000162e-05, 9.583300000000003e-05, 9.506899999999971e-05, 9.57079999999999e-05, 9.552800000000097e-05, 9.57079999999999e-05, 9.569499999999981e-05, 9.538900000000128e-05, 9.572299999999895e-05, 9.541700000000042e-05, 9.586099999999917e-05]</msg>
<status status="PASS" starttime="20201030 18:39:18.401" endtime="20201030 18:39:18.403"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:18.396" endtime="20201030 18:39:18.404"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:39:18.408" endtime="20201030 18:39:18.427"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:18.406" endtime="20201030 18:39:18.428"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:18.405" endtime="20201030 18:39:18.428"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:18.046" endtime="20201030 18:39:18.428"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:18.046" endtime="20201030 18:39:18.429"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:18.437" endtime="20201030 18:39:18.457"></status>
</kw>
<msg timestamp="20201030 18:39:18.457" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:18.436" endtime="20201030 18:39:18.457"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:18.460" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:18.458" endtime="20201030 18:39:18.460"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:18.461" endtime="20201030 18:39:18.462"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:18.433" endtime="20201030 18:39:18.463"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:18.431" endtime="20201030 18:39:18.463"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:18.470" endtime="20201030 18:39:18.756"></status>
</kw>
<msg timestamp="20201030 18:39:18.759" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021186403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021282972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:18.468" endtime="20201030 18:39:18.759"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:18.767" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021186403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021282972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:18.760" endtime="20201030 18:39:18.768"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:18.768" endtime="20201030 18:39:18.770"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:18.466" endtime="20201030 18:39:18.771"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:18.464" endtime="20201030 18:39:18.771"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:39:18.775" level="INFO">${RESULT} = [{'diff': 9.656900000000121e-05}, {'diff': 9.61530000000016e-05}, {'diff': 9.656999999999721e-05}, {'diff': 9.637499999999924e-05}, {'diff': 9.605600000000061e-05}, {'diff': 9.665299999999863e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:39:18.772" endtime="20201030 18:39:18.775"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:39:18.779" level="INFO">${ACCURACY} = {'diff': [9.656900000000121e-05, 9.61530000000016e-05, 9.656999999999721e-05, 9.637499999999924e-05, 9.605600000000061e-05, 9.665299999999863e-05, 9.643100000000099e-05, 9.644399999999761e-05, 9.66940...</msg>
<status status="PASS" starttime="20201030 18:39:18.776" endtime="20201030 18:39:18.779"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:39:18.784" level="INFO">NAME: accuracy-TIMER_SET-92-philip</msg>
<status status="PASS" starttime="20201030 18:39:18.783" endtime="20201030 18:39:18.784"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:39:18.786" level="INFO">VALUE: [9.656900000000121e-05, 9.61530000000016e-05, 9.656999999999721e-05, 9.637499999999924e-05, 9.605600000000061e-05, 9.665299999999863e-05, 9.643100000000099e-05, 9.644399999999761e-05, 9.669400000000133e-05, 9.629099999999835e-05, 9.654100000000207e-05, 9.606900000000071e-05, 9.602800000000147e-05, 9.636099999999967e-05, 9.654200000000154e-05, 9.61669999999977e-05, 9.654200000000154e-05, 9.616700000000117e-05, 9.634699999999663e-05, 9.60409999999981e-05, 9.629099999999835e-05, 9.606900000000071e-05, 9.655500000000164e-05, 9.687499999999974e-05, 9.691700000000192e-05, 9.67080000000009e-05, 9.694500000000106e-05, 9.611199999999889e-05, 9.68340000000005e-05, 9.613899999999856e-05, 9.608300000000028e-05, 9.611100000000289e-05, 9.661099999999992e-05, 9.623599999999954e-05, 9.659699999999688e-05, 9.595899999999963e-05, 9.651399999999893e-05, 9.636099999999967e-05, 9.668000000000176e-05, 9.629099999999835e-05, 9.672200000000047e-05, 9.679099999999885e-05, 9.687499999999974e-05, 9.666700000000167e-05, 9.676399999999918e-05, 9.67080000000009e-05, 9.665299999999863e-05, 9.612500000000246e-05, 9.595899999999963e-05, 9.645900000000013e-05]</msg>
<status status="PASS" starttime="20201030 18:39:18.785" endtime="20201030 18:39:18.788"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:18.780" endtime="20201030 18:39:18.788"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:39:18.792" endtime="20201030 18:39:18.812"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:18.791" endtime="20201030 18:39:18.812"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:18.789" endtime="20201030 18:39:18.812"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:18.429" endtime="20201030 18:39:18.813"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:18.429" endtime="20201030 18:39:18.813"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:18.822" endtime="20201030 18:39:18.840"></status>
</kw>
<msg timestamp="20201030 18:39:18.841" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:18.820" endtime="20201030 18:39:18.841"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:18.843" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:18.842" endtime="20201030 18:39:18.843"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:18.844" endtime="20201030 18:39:18.846"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:18.817" endtime="20201030 18:39:18.846"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:18.815" endtime="20201030 18:39:18.847"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:18.853" endtime="20201030 18:39:19.140"></status>
</kw>
<msg timestamp="20201030 18:39:19.143" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019602389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019700278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:18.852" endtime="20201030 18:39:19.143"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:19.151" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019602389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019700278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:19.144" endtime="20201030 18:39:19.151"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:19.152" endtime="20201030 18:39:19.154"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:18.849" endtime="20201030 18:39:19.154"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:18.847" endtime="20201030 18:39:19.155"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:39:19.159" level="INFO">${RESULT} = [{'diff': 9.788900000000031e-05}, {'diff': 9.708300000000128e-05}, {'diff': 9.779199999999932e-05}, {'diff': 9.713899999999956e-05}, {'diff': 9.791599999999998e-05}, {'diff': 9.701299999999996e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:39:19.155" endtime="20201030 18:39:19.159"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:39:19.166" level="INFO">${ACCURACY} = {'diff': [9.788900000000031e-05, 9.708300000000128e-05, 9.779199999999932e-05, 9.713899999999956e-05, 9.791599999999998e-05, 9.701299999999996e-05, 9.738899999999981e-05, 9.708400000000075e-05, 9.7027...</msg>
<status status="PASS" starttime="20201030 18:39:19.160" endtime="20201030 18:39:19.167"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:39:19.171" level="INFO">NAME: accuracy-TIMER_SET-93-philip</msg>
<status status="PASS" starttime="20201030 18:39:19.170" endtime="20201030 18:39:19.171"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:39:19.173" level="INFO">VALUE: [9.788900000000031e-05, 9.708300000000128e-05, 9.779199999999932e-05, 9.713899999999956e-05, 9.791599999999998e-05, 9.701299999999996e-05, 9.738899999999981e-05, 9.708400000000075e-05, 9.7027999999999e-05, 9.713899999999956e-05, 9.69860000000003e-05, 9.724999999999664e-05, 9.79860000000013e-05, 9.69860000000003e-05, 9.790299999999988e-05, 9.762500000000049e-05, 9.758299999999831e-05, 9.694400000000158e-05, 9.720799999999793e-05, 9.777799999999975e-05, 9.695800000000115e-05, 9.759700000000135e-05, 9.775000000000061e-05, 9.733299999999806e-05, 9.723700000000002e-05, 9.769400000000233e-05, 9.70409999999991e-05, 9.79860000000013e-05, 9.797200000000172e-05, 9.788900000000031e-05, 9.7334000000001e-05, 9.69860000000003e-05, 9.695900000000063e-05, 9.770900000000138e-05, 9.70140000000029e-05, 9.777700000000028e-05, 9.78609999999977e-05, 9.779099999999985e-05, 9.783300000000203e-05, 9.713899999999956e-05, 9.76669999999992e-05, 9.73470000000011e-05, 9.74860000000008e-05, 9.712499999999999e-05, 9.711100000000042e-05, 9.730600000000186e-05, 9.795799999999869e-05, 9.731900000000196e-05, 9.705499999999867e-05, 9.731900000000196e-05]</msg>
<status status="PASS" starttime="20201030 18:39:19.172" endtime="20201030 18:39:19.174"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:19.167" endtime="20201030 18:39:19.175"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:39:19.178" endtime="20201030 18:39:19.198"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:19.177" endtime="20201030 18:39:19.198"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:19.176" endtime="20201030 18:39:19.199"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:18.814" endtime="20201030 18:39:19.199"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:18.813" endtime="20201030 18:39:19.199"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:19.208" endtime="20201030 18:39:19.227"></status>
</kw>
<msg timestamp="20201030 18:39:19.227" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:19.206" endtime="20201030 18:39:19.227"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:19.230" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:19.228" endtime="20201030 18:39:19.230"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:19.231" endtime="20201030 18:39:19.232"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:19.204" endtime="20201030 18:39:19.233"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:19.201" endtime="20201030 18:39:19.233"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:19.240" endtime="20201030 18:39:19.527"></status>
</kw>
<msg timestamp="20201030 18:39:19.530" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01960875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019706722, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:39:19.238" endtime="20201030 18:39:19.530"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:19.538" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01960875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019706722, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:39:19.531" endtime="20201030 18:39:19.538"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:19.539" endtime="20201030 18:39:19.541"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:19.236" endtime="20201030 18:39:19.541"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:19.234" endtime="20201030 18:39:19.542"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:39:19.546" level="INFO">${RESULT} = [{'diff': 9.797199999999825e-05}, {'diff': 9.787500000000074e-05}, {'diff': 9.858399999999878e-05}, {'diff': 9.865300000000063e-05}, {'diff': 9.797200000000172e-05}, {'diff': 9.882000000000293e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:39:19.542" endtime="20201030 18:39:19.546"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:39:19.550" level="INFO">${ACCURACY} = {'diff': [9.797199999999825e-05, 9.787500000000074e-05, 9.858399999999878e-05, 9.865300000000063e-05, 9.797200000000172e-05, 9.882000000000293e-05, 9.83059999999994e-05, 9.801300000000096e-05, 9.82359...</msg>
<status status="PASS" starttime="20201030 18:39:19.547" endtime="20201030 18:39:19.550"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:39:19.554" level="INFO">NAME: accuracy-TIMER_SET-94-philip</msg>
<status status="PASS" starttime="20201030 18:39:19.553" endtime="20201030 18:39:19.555"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:39:19.557" level="INFO">VALUE: [9.797199999999825e-05, 9.787500000000074e-05, 9.858399999999878e-05, 9.865300000000063e-05, 9.797200000000172e-05, 9.882000000000293e-05, 9.83059999999994e-05, 9.801300000000096e-05, 9.823599999999807e-05, 9.830499999999992e-05, 9.830499999999992e-05, 9.805499999999967e-05, 9.884699999999913e-05, 9.8028e-05, 9.86670000000002e-05, 9.845799999999919e-05, 9.794499999999859e-05, 9.823700000000102e-05, 9.877700000000128e-05, 9.795800000000215e-05, 9.851399999999746e-05, 9.8721999999999e-05, 9.808300000000228e-05, 9.862499999999802e-05, 9.883299999999956e-05, 9.858399999999878e-05, 9.83479999999981e-05, 9.820799999999894e-05, 9.806899999999924e-05, 9.838900000000081e-05, 9.813900000000056e-05, 9.797200000000172e-05, 9.82219999999985e-05, 9.859700000000235e-05, 9.851400000000093e-05, 9.886200000000164e-05, 9.819500000000231e-05, 9.879200000000032e-05, 9.837500000000124e-05, 9.831899999999949e-05, 9.812500000000099e-05, 9.84999999999979e-05, 9.825000000000111e-05, 9.823599999999807e-05, 9.811099999999795e-05, 9.85280000000005e-05, 9.881999999999946e-05, 9.85280000000005e-05, 9.822200000000197e-05, 9.813900000000056e-05]</msg>
<status status="PASS" starttime="20201030 18:39:19.555" endtime="20201030 18:39:19.558"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:19.551" endtime="20201030 18:39:19.558"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:39:19.562" endtime="20201030 18:39:19.581"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:19.560" endtime="20201030 18:39:19.582"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:19.559" endtime="20201030 18:39:19.582"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:19.200" endtime="20201030 18:39:19.582"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:19.199" endtime="20201030 18:39:19.583"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:19.591" endtime="20201030 18:39:19.611"></status>
</kw>
<msg timestamp="20201030 18:39:19.611" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:19.590" endtime="20201030 18:39:19.612"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:19.614" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:19.612" endtime="20201030 18:39:19.614"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:19.615" endtime="20201030 18:39:19.617"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:19.587" endtime="20201030 18:39:19.617"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:19.585" endtime="20201030 18:39:19.618"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:19.624" endtime="20201030 18:39:19.912"></status>
</kw>
<msg timestamp="20201030 18:39:19.915" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020539611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020639292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:19.623" endtime="20201030 18:39:19.915"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:19.923" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020539611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020639292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:19.916" endtime="20201030 18:39:19.924"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:19.924" endtime="20201030 18:39:19.926"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:19.620" endtime="20201030 18:39:19.927"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:19.618" endtime="20201030 18:39:19.927"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:39:19.931" level="INFO">${RESULT} = [{'diff': 9.968100000000077e-05}, {'diff': 9.965300000000163e-05}, {'diff': 9.983300000000056e-05}, {'diff': 9.945800000000019e-05}, {'diff': 9.965299999999816e-05}, {'diff': 9.995900000000016e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:39:19.928" endtime="20201030 18:39:19.931"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:39:19.935" level="INFO">${ACCURACY} = {'diff': [9.968100000000077e-05, 9.965300000000163e-05, 9.983300000000056e-05, 9.945800000000019e-05, 9.965299999999816e-05, 9.995900000000016e-05, 9.9722e-05, 9.983300000000056e-05, 9.951399999999846...</msg>
<status status="PASS" starttime="20201030 18:39:19.932" endtime="20201030 18:39:19.935"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:39:19.940" level="INFO">NAME: accuracy-TIMER_SET-95-philip</msg>
<status status="PASS" starttime="20201030 18:39:19.939" endtime="20201030 18:39:19.940"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:39:19.942" level="INFO">VALUE: [9.968100000000077e-05, 9.965300000000163e-05, 9.983300000000056e-05, 9.945800000000019e-05, 9.965299999999816e-05, 9.995900000000016e-05, 9.9722e-05, 9.983300000000056e-05, 9.951399999999846e-05, 9.990299999999841e-05, 9.940199999999844e-05, 9.936200000000214e-05, 9.905600000000014e-05, 9.897200000000272e-05, 9.89999999999984e-05, 9.938899999999834e-05, 9.976400000000218e-05, 9.979200000000132e-05, 9.93060000000004e-05, 9.95280000000015e-05, 9.948599999999932e-05, 9.909699999999938e-05, 9.9722e-05, 9.988799999999937e-05, 9.991600000000198e-05, 9.925000000000211e-05, 9.927800000000125e-05, 9.948599999999932e-05, 9.991700000000145e-05, 9.987499999999927e-05, 9.974999999999914e-05, 9.91670000000007e-05, 9.961100000000292e-05, 9.983300000000056e-05, 9.998599999999983e-05, 9.930499999999745e-05, 9.965299999999816e-05, 9.895799999999969e-05, 9.919499999999984e-05, 9.930599999999692e-05, 9.952799999999803e-05, 9.977800000000175e-05, 9.975000000000261e-05, 9.930499999999745e-05, 9.969400000000087e-05, 9.931900000000049e-05, 9.950000000000236e-05, 9.93609999999992e-05, 9.924999999999864e-05, 9.962499999999902e-05]</msg>
<status status="PASS" starttime="20201030 18:39:19.941" endtime="20201030 18:39:19.944"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:19.936" endtime="20201030 18:39:19.944"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:39:19.948" endtime="20201030 18:39:19.967"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:19.946" endtime="20201030 18:39:19.968"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:19.945" endtime="20201030 18:39:19.968"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:19.583" endtime="20201030 18:39:19.969"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:19.583" endtime="20201030 18:39:19.969"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:19.978" endtime="20201030 18:39:19.997"></status>
</kw>
<msg timestamp="20201030 18:39:19.997" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:19.976" endtime="20201030 18:39:19.998"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:20.000" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:19.998" endtime="20201030 18:39:20.000"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:20.001" endtime="20201030 18:39:20.003"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:19.973" endtime="20201030 18:39:20.003"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:19.971" endtime="20201030 18:39:20.004"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:20.010" endtime="20201030 18:39:20.296"></status>
</kw>
<msg timestamp="20201030 18:39:20.299" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019644486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019744639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:20.009" endtime="20201030 18:39:20.299"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:20.306" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019644486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019744639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:20.300" endtime="20201030 18:39:20.307"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:20.308" endtime="20201030 18:39:20.309"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:20.006" endtime="20201030 18:39:20.310"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:20.004" endtime="20201030 18:39:20.310"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:39:20.314" level="INFO">${RESULT} = [{'diff': 0.00010015300000000213}, {'diff': 0.00010033300000000106}, {'diff': 0.0001005280000000025}, {'diff': 9.994500000000059e-05}, {'diff': 0.00010090199999999994}, {'diff': 0.00010065300000000263...</msg>
<status status="PASS" starttime="20201030 18:39:20.311" endtime="20201030 18:39:20.314"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:39:20.319" level="INFO">${ACCURACY} = {'diff': [0.00010015300000000213, 0.00010033300000000106, 0.0001005280000000025, 9.994500000000059e-05, 0.00010090199999999994, 0.00010065300000000263, 0.00010062500000000002, 0.00010037500000000324, ...</msg>
<status status="PASS" starttime="20201030 18:39:20.315" endtime="20201030 18:39:20.319"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:39:20.324" level="INFO">NAME: accuracy-TIMER_SET-96-philip</msg>
<status status="PASS" starttime="20201030 18:39:20.323" endtime="20201030 18:39:20.324"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:39:20.326" level="INFO">VALUE: [0.00010015300000000213, 0.00010033300000000106, 0.0001005280000000025, 9.994500000000059e-05, 0.00010090199999999994, 0.00010065300000000263, 0.00010062500000000002, 0.00010037500000000324, 0.00010065299999999916, 0.00010023600000000008, 0.00010088899999999984, 0.00010006999999999724, 0.00010076399999999971, 0.00010045799999999772, 0.00010080599999999842, 0.00010063800000000012, 0.00010081899999999852, 0.00010019400000000137, 0.00010066699999999873, 0.00010012499999999952, 0.00010040299999999891, 0.00010069500000000134, 0.0001010000000000004, 0.00010065300000000263, 0.0001003610000000002, 0.00010076300000000024, 0.00010040299999999891, 0.00010087500000000027, 0.00010034699999999716, 0.0001003060000000014, 0.00010070799999999797, 0.00010058400000000078, 0.00010065299999999916, 0.00010077799999999928, 0.0001006939999999984, 0.00010059699999999741, 0.0001009159999999995, 0.00010012499999999952, 9.994400000000112e-05, 0.00010070800000000144, 0.00010005600000000114, 0.00010013899999999909, 0.00010012499999999952, 0.00010055600000000164, 0.00010058400000000078, 0.00010061100000000045, 0.0001002220000000005, 0.00010080499999999895, 0.00010045900000000066, 0.00010037499999999977]</msg>
<status status="PASS" starttime="20201030 18:39:20.325" endtime="20201030 18:39:20.327"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:20.320" endtime="20201030 18:39:20.327"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:39:20.331" endtime="20201030 18:39:20.351"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:20.330" endtime="20201030 18:39:20.351"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:20.328" endtime="20201030 18:39:20.351"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:19.970" endtime="20201030 18:39:20.352"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:19.969" endtime="20201030 18:39:20.352"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:20.361" endtime="20201030 18:39:20.381"></status>
</kw>
<msg timestamp="20201030 18:39:20.381" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:20.359" endtime="20201030 18:39:20.382"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:20.384" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:20.382" endtime="20201030 18:39:20.384"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:20.385" endtime="20201030 18:39:20.387"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:20.356" endtime="20201030 18:39:20.387"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:20.354" endtime="20201030 18:39:20.388"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:20.395" endtime="20201030 18:39:20.682"></status>
</kw>
<msg timestamp="20201030 18:39:20.685" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019591569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019692764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:20.393" endtime="20201030 18:39:20.685"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:20.693" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019591569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019692764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:20.686" endtime="20201030 18:39:20.694"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:20.694" endtime="20201030 18:39:20.696"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:20.390" endtime="20201030 18:39:20.697"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:20.389" endtime="20201030 18:39:20.697"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:39:20.701" level="INFO">${RESULT} = [{'diff': 0.00010119500000000184}, {'diff': 0.00010138900000000034}, {'diff': 0.0001018610000000017}, {'diff': 0.0001012359999999976}, {'diff': 0.00010140299999999991}, {'diff': 0.00010127799999999978...</msg>
<status status="PASS" starttime="20201030 18:39:20.698" endtime="20201030 18:39:20.701"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:39:20.705" level="INFO">${ACCURACY} = {'diff': [0.00010119500000000184, 0.00010138900000000034, 0.0001018610000000017, 0.0001012359999999976, 0.00010140299999999991, 0.00010127799999999978, 0.0001011939999999989, 0.00010104099999999963, 0...</msg>
<status status="PASS" starttime="20201030 18:39:20.702" endtime="20201030 18:39:20.705"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:39:20.709" level="INFO">NAME: accuracy-TIMER_SET-97-philip</msg>
<status status="PASS" starttime="20201030 18:39:20.708" endtime="20201030 18:39:20.710"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:39:20.712" level="INFO">VALUE: [0.00010119500000000184, 0.00010138900000000034, 0.0001018610000000017, 0.0001012359999999976, 0.00010140299999999991, 0.00010127799999999978, 0.0001011939999999989, 0.00010104099999999963, 0.00010119400000000237, 0.00010112500000000052, 0.00010116699999999923, 0.00010095799999999822, 0.00010158299999999884, 0.00010098600000000083, 0.00010177800000000028, 0.00010138900000000034, 0.00010141699999999948, 0.00010106900000000224, 0.00010137500000000077, 0.0001015549999999997, 0.00010162499999999755, 0.00010097199999999779, 0.00010188899999999737, 0.0001013610000000012, 0.00010108400000000128, 0.00010148600000000133, 0.00010190300000000041, 0.0001011939999999989, 0.00010158300000000231, 0.00010129199999999935, 0.00010134700000000163, 0.00010106999999999824, 0.00010118100000000227, 0.00010129199999999935, 0.00010123700000000055, 0.00010133299999999859, 0.00010152800000000003, 0.00010158299999999884, 0.00010176400000000071, 0.00010166699999999973, 0.00010156999999999874, 0.0001016939999999994, 0.00010138899999999687, 0.0001015419999999996, 0.00010172299999999801, 0.0001013879999999974, 0.00010126400000000021, 0.00010101399999999996, 0.00010134699999999816, 0.00010176400000000071]</msg>
<status status="PASS" starttime="20201030 18:39:20.711" endtime="20201030 18:39:20.713"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:20.706" endtime="20201030 18:39:20.713"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:39:20.717" endtime="20201030 18:39:20.736"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:20.715" endtime="20201030 18:39:20.737"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:20.714" endtime="20201030 18:39:20.737"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:20.353" endtime="20201030 18:39:20.738"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:20.352" endtime="20201030 18:39:20.738"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:20.746" endtime="20201030 18:39:20.766"></status>
</kw>
<msg timestamp="20201030 18:39:20.767" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:20.745" endtime="20201030 18:39:20.767"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:20.769" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:20.768" endtime="20201030 18:39:20.770"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:20.770" endtime="20201030 18:39:20.772"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:20.742" endtime="20201030 18:39:20.772"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:20.740" endtime="20201030 18:39:20.773"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:20.779" endtime="20201030 18:39:21.066"></status>
</kw>
<msg timestamp="20201030 18:39:21.069" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020636597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020738972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:20.778" endtime="20201030 18:39:21.069"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:21.077" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020636597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020738972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:21.070" endtime="20201030 18:39:21.077"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:21.078" endtime="20201030 18:39:21.080"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:20.775" endtime="20201030 18:39:21.080"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:20.774" endtime="20201030 18:39:21.081"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:39:21.085" level="INFO">${RESULT} = [{'diff': 0.00010237500000000177}, {'diff': 0.00010202799999999707}, {'diff': 0.00010283300000000009}, {'diff': 0.00010274999999999868}, {'diff': 0.00010227799999999732}, {'diff': 0.000102778000000001...</msg>
<status status="PASS" starttime="20201030 18:39:21.082" endtime="20201030 18:39:21.085"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:39:21.089" level="INFO">${ACCURACY} = {'diff': [0.00010237500000000177, 0.00010202799999999707, 0.00010283300000000009, 0.00010274999999999868, 0.00010227799999999732, 0.00010277800000000128, 0.00010247300000000223, 0.00010245799999999972...</msg>
<status status="PASS" starttime="20201030 18:39:21.086" endtime="20201030 18:39:21.089"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:39:21.093" level="INFO">NAME: accuracy-TIMER_SET-98-philip</msg>
<status status="PASS" starttime="20201030 18:39:21.092" endtime="20201030 18:39:21.094"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:39:21.096" level="INFO">VALUE: [0.00010237500000000177, 0.00010202799999999707, 0.00010283300000000009, 0.00010274999999999868, 0.00010227799999999732, 0.00010277800000000128, 0.00010247300000000223, 0.00010245799999999972, 0.00010274999999999868, 0.00010283300000000009, 0.0001022359999999986, 0.00010261099999999898, 0.00010211100000000195, 0.00010293099999999708, 0.00010255600000000017, 0.00010190300000000041, 0.00010277699999999834, 0.0001020550000000002, 0.0001026940000000004, 0.00010263899999999812, 0.00010283300000000009, 0.00010265299999999769, 0.00010208399999999881, 0.00010212499999999805, 0.0001026810000000003, 0.00010234799999999863, 0.00010259799999999888, 0.000102416000000001, 0.00010283399999999956, 0.00010226400000000122, 0.00010266700000000073, 0.00010240300000000091, 0.00010269499999999987, 0.00010230599999999992, 0.00010240299999999744, 0.00010215300000000066, 0.00010274999999999868, 0.00010233299999999959, 0.0001020139999999975, 0.0001028749999999988, 0.00010212500000000152, 0.00010277800000000128, 0.00010283300000000009, 0.00010205599999999967, 0.0001029299999999976, 0.00010220799999999947, 0.00010288900000000184, 0.00010294400000000065, 0.00010230500000000045, 0.000102513999999998]</msg>
<status status="PASS" starttime="20201030 18:39:21.094" endtime="20201030 18:39:21.102"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:21.090" endtime="20201030 18:39:21.102"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:39:21.106" endtime="20201030 18:39:21.126"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:21.105" endtime="20201030 18:39:21.126"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:21.103" endtime="20201030 18:39:21.127"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:20.739" endtime="20201030 18:39:21.127"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:20.738" endtime="20201030 18:39:21.127"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:21.136" endtime="20201030 18:39:21.155"></status>
</kw>
<msg timestamp="20201030 18:39:21.156" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:21.134" endtime="20201030 18:39:21.156"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:21.158" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:21.157" endtime="20201030 18:39:21.159"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:21.160" endtime="20201030 18:39:21.161"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:21.132" endtime="20201030 18:39:21.162"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:21.129" endtime="20201030 18:39:21.162"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:21.169" endtime="20201030 18:39:21.456"></status>
</kw>
<msg timestamp="20201030 18:39:21.459" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019746681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01985025, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:39:21.167" endtime="20201030 18:39:21.459"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:21.467" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019746681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01985025, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:39:21.460" endtime="20201030 18:39:21.467"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:21.468" endtime="20201030 18:39:21.470"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:21.164" endtime="20201030 18:39:21.470"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:21.163" endtime="20201030 18:39:21.471"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:39:21.475" level="INFO">${RESULT} = [{'diff': 0.00010356900000000127}, {'diff': 0.00010343100000000105}, {'diff': 0.00010333300000000059}, {'diff': 0.00010394399999999818}, {'diff': 0.0001030420000000011}, {'diff': 0.0001038610000000002...</msg>
<status status="PASS" starttime="20201030 18:39:21.471" endtime="20201030 18:39:21.475"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:39:21.480" level="INFO">${ACCURACY} = {'diff': [0.00010356900000000127, 0.00010343100000000105, 0.00010333300000000059, 0.00010394399999999818, 0.0001030420000000011, 0.00010386100000000023, 0.00010341700000000148, 0.00010354099999999866,...</msg>
<status status="PASS" starttime="20201030 18:39:21.476" endtime="20201030 18:39:21.480"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:39:21.484" level="INFO">NAME: accuracy-TIMER_SET-99-philip</msg>
<status status="PASS" starttime="20201030 18:39:21.483" endtime="20201030 18:39:21.484"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:39:21.487" level="INFO">VALUE: [0.00010356900000000127, 0.00010343100000000105, 0.00010333300000000059, 0.00010394399999999818, 0.0001030420000000011, 0.00010386100000000023, 0.00010341700000000148, 0.00010354099999999866, 0.00010384800000000013, 0.00010379099999999891, 0.00010354100000000213, 0.00010342999999999811, 0.00010322200000000004, 0.00010309699999999991, 0.00010326399999999875, 0.00010334700000000016, 0.00010295899999999969, 0.00010336099999999973, 0.00010333300000000059, 0.00010322200000000004, 0.00010345800000000072, 0.00010393000000000208, 0.00010302799999999807, 0.00010322200000000004, 0.00010361099999999998, 0.00010297199999999979, 0.00010374999999999968, 0.00010388899999999937, 0.00010373699999999958, 0.00010324999999999918, 0.00010331900000000102, 0.00010361099999999998, 0.00010309699999999991, 0.00010388899999999937, 0.00010311100000000295, 0.00010365299999999869, 0.00010344499999999715, 0.0001033619999999992, 0.00010297199999999979, 0.00010344400000000115, 0.00010356900000000127, 0.00010348599999999986, 0.00010324999999999918, 0.00010324999999999918, 0.0001033200000000005, 0.00010309699999999991, 0.00010377799999999882, 0.00010312499999999905, 0.00010377799999999882, 0.00010309699999999991]</msg>
<status status="PASS" starttime="20201030 18:39:21.485" endtime="20201030 18:39:21.487"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:21.480" endtime="20201030 18:39:21.488"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:39:21.492" endtime="20201030 18:39:21.511"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:21.490" endtime="20201030 18:39:21.512"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:21.489" endtime="20201030 18:39:21.512"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:21.128" endtime="20201030 18:39:21.512"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:21.127" endtime="20201030 18:39:21.512"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:21.521" endtime="20201030 18:39:21.540"></status>
</kw>
<msg timestamp="20201030 18:39:21.541" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:21.519" endtime="20201030 18:39:21.541"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:21.543" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:21.542" endtime="20201030 18:39:21.543"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:21.544" endtime="20201030 18:39:21.546"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:21.517" endtime="20201030 18:39:21.546"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:21.515" endtime="20201030 18:39:21.547"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:21.553" endtime="20201030 18:39:21.840"></status>
</kw>
<msg timestamp="20201030 18:39:21.843" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019682569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019787153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:21.552" endtime="20201030 18:39:21.843"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:21.851" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019682569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019787153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:21.844" endtime="20201030 18:39:21.852"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:21.852" endtime="20201030 18:39:21.854"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:21.549" endtime="20201030 18:39:21.855"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:21.547" endtime="20201030 18:39:21.855"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:39:21.859" level="INFO">${RESULT} = [{'diff': 0.00010458399999999785}, {'diff': 0.00010461100000000098}, {'diff': 0.00010429099999999941}, {'diff': 0.00010447199999999782}, {'diff': 0.00010477800000000329}, {'diff': 0.000104083000000001...</msg>
<status status="PASS" starttime="20201030 18:39:21.856" endtime="20201030 18:39:21.859"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:39:21.863" level="INFO">${ACCURACY} = {'diff': [0.00010458399999999785, 0.00010461100000000098, 0.00010429099999999941, 0.00010447199999999782, 0.00010477800000000329, 0.00010408300000000134, 0.00010475000000000068, 0.00010494399999999918...</msg>
<status status="PASS" starttime="20201030 18:39:21.860" endtime="20201030 18:39:21.863"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:39:21.867" level="INFO">NAME: accuracy-TIMER_SET-100-philip</msg>
<status status="PASS" starttime="20201030 18:39:21.866" endtime="20201030 18:39:21.868"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:39:21.870" level="INFO">VALUE: [0.00010458399999999785, 0.00010461100000000098, 0.00010429099999999941, 0.00010447199999999782, 0.00010477800000000329, 0.00010408300000000134, 0.00010475000000000068, 0.00010494399999999918, 0.00010465299999999969, 0.0001040139999999995, 0.0001043750000000003, 0.00010433400000000106, 0.00010443099999999858, 0.00010479099999999991, 0.00010438899999999987, 0.00010440299999999944, 0.00010434700000000116, 0.00010433299999999812, 0.00010408400000000081, 0.00010466699999999926, 0.00010477799999999982, 0.00010415200000000319, 0.00010426399999999975, 0.00010459700000000141, 0.00010486099999999776, 0.00010406900000000177, 0.0001043200000000015, 0.000104207999999998, 0.00010430599999999846, 0.00010465299999999969, 0.00010409800000000038, 0.00010425000000000018, 0.00010455499999999923, 0.00010431900000000202, 0.00010409699999999744, 0.00010475000000000068, 0.00010422200000000104, 0.0001040139999999995, 0.00010458300000000184, 0.00010441699999999901, 0.00010407000000000124, 0.00010441599999999954, 0.00010411100000000048, 0.0001043750000000003, 0.00010469399999999893, 0.00010440299999999944, 0.00010422200000000104, 0.00010454199999999914, 0.00010441699999999901, 0.00010418099999999833]</msg>
<status status="PASS" starttime="20201030 18:39:21.868" endtime="20201030 18:39:21.871"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:21.864" endtime="20201030 18:39:21.871"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:39:21.875" endtime="20201030 18:39:21.894"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:21.873" endtime="20201030 18:39:21.895"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:21.872" endtime="20201030 18:39:21.895"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:21.513" endtime="20201030 18:39:21.895"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:21.513" endtime="20201030 18:39:21.896"></status>
</kw>
<status status="PASS" starttime="20201030 18:38:43.202" endtime="20201030 18:39:21.896"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:39:21.900" endtime="20201030 18:39:21.919"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:21.898" endtime="20201030 18:39:21.920"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:21.897" endtime="20201030 18:39:21.920"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
</tags>
<status status="PASS" starttime="20201030 18:38:40.076" endtime="20201030 18:39:21.920" critical="yes"></status>
</test>
<test id="s1-s3-t2" name="Measure TIMER_SLEEP Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:39:21.927" endtime="20201030 18:39:21.947"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:21.926" endtime="20201030 18:39:21.947"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:21.961" endtime="20201030 18:39:24.983"></status>
</kw>
<msg timestamp="20201030 18:39:24.984" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:21.960" endtime="20201030 18:39:24.984"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:24.989" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:24.986" endtime="20201030 18:39:24.990"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:39:24.995" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:39:24.991" endtime="20201030 18:39:24.996"></status>
</kw>
<status status="FAIL" starttime="20201030 18:39:21.957" endtime="20201030 18:39:24.998"></status>
</kw>
<status status="FAIL" starttime="20201030 18:39:21.955" endtime="20201030 18:39:24.999"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:21.954" endtime="20201030 18:39:25.000"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:39:25.008" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:39:25.007" endtime="20201030 18:39:25.009"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:25.002" endtime="20201030 18:39:25.010"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:21.953" endtime="20201030 18:39:25.010"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:21.952" endtime="20201030 18:39:25.011"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:25.012" endtime="20201030 18:39:25.015"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:21.950" endtime="20201030 18:39:25.017"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:21.948" endtime="20201030 18:39:25.018"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:21.924" endtime="20201030 18:39:25.018"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:25.039" endtime="20201030 18:39:25.059"></status>
</kw>
<msg timestamp="20201030 18:39:25.060" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:25.036" endtime="20201030 18:39:25.061"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:25.066" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:25.063" endtime="20201030 18:39:25.067"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:25.068" endtime="20201030 18:39:25.072"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:25.030" endtime="20201030 18:39:25.073"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:25.025" endtime="20201030 18:39:25.074"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:25.091" endtime="20201030 18:39:25.393"></status>
</kw>
<msg timestamp="20201030 18:39:25.397" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.104617847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.104640167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:25.087" endtime="20201030 18:39:25.397"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:25.405" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.104617847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.104640167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:25.398" endtime="20201030 18:39:25.405"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:25.406" endtime="20201030 18:39:25.408"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:25.079" endtime="20201030 18:39:25.408"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:25.075" endtime="20201030 18:39:25.409"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:39:25.413" level="INFO">${RESULT} = [{'diff': 2.2319999999798057e-05}, {'diff': 2.2041999999888873e-05}, {'diff': 2.20969999999987e-05}, {'diff': 2.2513999999862477e-05}, {'diff': 2.1666999999947478e-05}, {'diff': 2.215299999974718e-05}...</msg>
<status status="PASS" starttime="20201030 18:39:25.410" endtime="20201030 18:39:25.413"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:39:25.417" level="INFO">${ACCURACY} = {'diff': [2.2319999999798057e-05, 2.2041999999888873e-05, 2.20969999999987e-05, 2.2513999999862477e-05, 2.1666999999947478e-05, 2.215299999974718e-05, 2.1736000000327493e-05, 2.2374999999907885e-05, 2...</msg>
<status status="PASS" starttime="20201030 18:39:25.414" endtime="20201030 18:39:25.418"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:39:25.422" level="INFO">NAME: accuracy-TIMER_SLEEP-1-philip</msg>
<status status="PASS" starttime="20201030 18:39:25.421" endtime="20201030 18:39:25.422"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:39:25.425" level="INFO">VALUE: [2.2319999999798057e-05, 2.2041999999888873e-05, 2.20969999999987e-05, 2.2513999999862477e-05, 2.1666999999947478e-05, 2.215299999974718e-05, 2.1736000000327493e-05, 2.2374999999907885e-05, 2.1931000000030565e-05, 2.2222999999765847e-05, 2.2277999999875675e-05, 2.23469999998116e-05, 2.2512999999779737e-05, 2.2179999999760724e-05, 2.240199999992143e-05, 2.2430000000017714e-05, 2.2138999999921083e-05, 2.2264000000049577e-05, 2.1874999999837996e-05, 2.255499999970212e-05, 2.201399999979259e-05, 2.1819000000089517e-05, 2.2610999999894688e-05, 2.1736000000327493e-05, 2.195800000004411e-05, 2.21109999998248e-05, 2.2416999999830267e-05, 2.180599999990207e-05, 2.175000000015359e-05, 2.180599999990207e-05, 2.20969999999987e-05, 2.170899999986986e-05, 2.2208000000301098e-05, 2.2167000000017367e-05, 2.2277999999875675e-05, 2.1917000000204467e-05, 2.2235999999953293e-05, 2.225000000022348e-05, 2.2569999999610957e-05, 2.1971999999870206e-05, 2.205600000015906e-05, 2.1596999999928812e-05, 2.180599999990207e-05, 2.2125000000094985e-05, 2.2638999999990972e-05, 2.199999999996649e-05, 2.236199999972044e-05, 2.2223000000209936e-05, 2.1847999999824452e-05, 2.2638999999990972e-05]</msg>
<status status="PASS" starttime="20201030 18:39:25.423" endtime="20201030 18:39:25.425"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:25.418" endtime="20201030 18:39:25.426"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:39:25.429" endtime="20201030 18:39:25.449"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:25.428" endtime="20201030 18:39:25.450"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:25.427" endtime="20201030 18:39:25.450"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:25.022" endtime="20201030 18:39:25.450"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:25.020" endtime="20201030 18:39:25.450"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:25.463" endtime="20201030 18:39:25.478"></status>
</kw>
<msg timestamp="20201030 18:39:25.479" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:25.461" endtime="20201030 18:39:25.479"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:25.481" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:25.480" endtime="20201030 18:39:25.482"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:25.482" endtime="20201030 18:39:25.484"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:25.459" endtime="20201030 18:39:25.485"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:25.453" endtime="20201030 18:39:25.485"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:25.492" endtime="20201030 18:39:25.779"></status>
</kw>
<msg timestamp="20201030 18:39:25.782" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023903472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023925264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:25.490" endtime="20201030 18:39:25.783"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:25.791" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023903472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023925264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:25.783" endtime="20201030 18:39:25.791"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:25.792" endtime="20201030 18:39:25.794"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:25.488" endtime="20201030 18:39:25.794"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:25.486" endtime="20201030 18:39:25.795"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:39:25.799" level="INFO">${RESULT} = [{'diff': 2.1792000000003114e-05}, {'diff': 2.234700000000242e-05}, {'diff': 2.2055999999999465e-05}, {'diff': 2.216700000000002e-05}, {'diff': 2.2180000000000116e-05}, {'diff': 2.218099999999959e-05}...</msg>
<status status="PASS" starttime="20201030 18:39:25.796" endtime="20201030 18:39:25.799"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:39:25.803" level="INFO">${ACCURACY} = {'diff': [2.1792000000003114e-05, 2.234700000000242e-05, 2.2055999999999465e-05, 2.216700000000002e-05, 2.2180000000000116e-05, 2.218099999999959e-05, 2.211099999999827e-05, 2.2235999999998396e-05, 2....</msg>
<status status="PASS" starttime="20201030 18:39:25.800" endtime="20201030 18:39:25.804"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:39:25.808" level="INFO">NAME: accuracy-TIMER_SLEEP-2-philip</msg>
<status status="PASS" starttime="20201030 18:39:25.807" endtime="20201030 18:39:25.808"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:39:25.811" level="INFO">VALUE: [2.1792000000003114e-05, 2.234700000000242e-05, 2.2055999999999465e-05, 2.216700000000002e-05, 2.2180000000000116e-05, 2.218099999999959e-05, 2.211099999999827e-05, 2.2235999999998396e-05, 2.2513999999997786e-05, 2.2098000000001644e-05, 2.222300000000177e-05, 2.220899999999873e-05, 2.187499999999759e-05, 2.211099999999827e-05, 2.1957999999999006e-05, 2.1930000000003336e-05, 2.25969999999992e-05, 2.2026999999997382e-05, 2.236100000000199e-05, 2.1764000000000505e-05, 2.20830000000026e-05, 2.2500000000001685e-05, 2.1750000000000935e-05, 2.1972000000002045e-05, 2.183299999999888e-05, 2.2292000000000145e-05, 2.2235999999998396e-05, 2.2207999999999256e-05, 2.2221999999998826e-05, 2.2042000000003364e-05, 2.2236000000001865e-05, 2.2278000000000575e-05, 2.2264000000001005e-05, 2.2513999999997786e-05, 2.194500000000238e-05, 2.241700000000027e-05, 2.241700000000027e-05, 2.187499999999759e-05, 2.1971999999998576e-05, 2.1735999999997896e-05, 2.234700000000242e-05, 2.2236000000001865e-05, 2.2055999999999465e-05, 2.2333999999998855e-05, 2.170899999999823e-05, 2.191699999999977e-05, 2.2028000000000325e-05, 2.2527999999997356e-05, 2.238900000000113e-05, 2.166699999999952e-05]</msg>
<status status="PASS" starttime="20201030 18:39:25.809" endtime="20201030 18:39:25.812"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:25.804" endtime="20201030 18:39:25.812"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:39:25.816" endtime="20201030 18:39:25.836"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:25.815" endtime="20201030 18:39:25.837"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:25.813" endtime="20201030 18:39:25.837"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:25.451" endtime="20201030 18:39:25.838"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:25.451" endtime="20201030 18:39:25.838"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:25.847" endtime="20201030 18:39:25.862"></status>
</kw>
<msg timestamp="20201030 18:39:25.862" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:25.845" endtime="20201030 18:39:25.863"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:25.865" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:25.864" endtime="20201030 18:39:25.865"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:25.866" endtime="20201030 18:39:25.868"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:25.842" endtime="20201030 18:39:25.868"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:25.840" endtime="20201030 18:39:25.869"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:25.875" endtime="20201030 18:39:26.162"></status>
</kw>
<msg timestamp="20201030 18:39:26.165" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020659986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020682583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:25.874" endtime="20201030 18:39:26.165"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:26.174" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020659986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020682583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:26.166" endtime="20201030 18:39:26.174"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:26.175" endtime="20201030 18:39:26.177"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:25.871" endtime="20201030 18:39:26.177"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:25.869" endtime="20201030 18:39:26.178"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:39:26.182" level="INFO">${RESULT} = [{'diff': 2.25969999999992e-05}, {'diff': 2.209700000000217e-05}, {'diff': 2.1943999999999436e-05}, {'diff': 2.256900000000006e-05}, {'diff': 2.255500000000049e-05}, {'diff': 2.262499999999834e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:39:26.179" endtime="20201030 18:39:26.182"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:39:26.187" level="INFO">${ACCURACY} = {'diff': [2.25969999999992e-05, 2.209700000000217e-05, 2.1943999999999436e-05, 2.256900000000006e-05, 2.255500000000049e-05, 2.262499999999834e-05, 2.263900000000138e-05, 2.2528000000000825e-05, 2.209...</msg>
<status status="PASS" starttime="20201030 18:39:26.183" endtime="20201030 18:39:26.187"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:39:26.192" level="INFO">NAME: accuracy-TIMER_SLEEP-3-philip</msg>
<status status="PASS" starttime="20201030 18:39:26.191" endtime="20201030 18:39:26.192"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:39:26.194" level="INFO">VALUE: [2.25969999999992e-05, 2.209700000000217e-05, 2.1943999999999436e-05, 2.256900000000006e-05, 2.255500000000049e-05, 2.262499999999834e-05, 2.263900000000138e-05, 2.2528000000000825e-05, 2.209700000000217e-05, 2.255500000000049e-05, 2.2014000000000755e-05, 2.20830000000026e-05, 2.256900000000006e-05, 2.240299999999723e-05, 2.258299999999963e-05, 2.193100000000281e-05, 2.237500000000156e-05, 2.266700000000052e-05, 2.2292000000000145e-05, 2.263899999999791e-05, 2.2569999999999535e-05, 2.2069999999999035e-05, 2.1971999999998576e-05, 2.262500000000181e-05, 2.2694000000000186e-05, 2.2333999999998855e-05, 2.17090000000017e-05, 2.2278000000000575e-05, 2.2305999999999715e-05, 2.2000000000001185e-05, 2.2014000000000755e-05, 2.1736000000001365e-05, 2.2333999999998855e-05, 2.2569999999999535e-05, 2.1791999999999645e-05, 2.1679999999999616e-05, 2.230500000000024e-05, 2.1707999999998756e-05, 2.236100000000199e-05, 2.2222000000002295e-05, 2.2443999999999936e-05, 2.2457999999999506e-05, 2.1736000000001365e-05, 2.187500000000106e-05, 2.262500000000181e-05, 2.24030000000007e-05, 2.1707999999998756e-05, 2.1986000000001615e-05, 2.204100000000042e-05, 2.20969999999987e-05]</msg>
<status status="PASS" starttime="20201030 18:39:26.193" endtime="20201030 18:39:26.195"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:26.188" endtime="20201030 18:39:26.196"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:39:26.200" endtime="20201030 18:39:26.219"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:26.198" endtime="20201030 18:39:26.220"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:26.197" endtime="20201030 18:39:26.220"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:25.839" endtime="20201030 18:39:26.220"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:25.838" endtime="20201030 18:39:26.221"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:26.230" endtime="20201030 18:39:26.246"></status>
</kw>
<msg timestamp="20201030 18:39:26.246" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:26.228" endtime="20201030 18:39:26.247"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:26.249" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:26.248" endtime="20201030 18:39:26.249"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:26.250" endtime="20201030 18:39:26.252"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:26.225" endtime="20201030 18:39:26.252"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:26.223" endtime="20201030 18:39:26.253"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:26.260" endtime="20201030 18:39:26.545"></status>
</kw>
<msg timestamp="20201030 18:39:26.548" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020644306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020666417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:26.258" endtime="20201030 18:39:26.548"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:26.557" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020644306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020666417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:26.549" endtime="20201030 18:39:26.557"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:26.558" endtime="20201030 18:39:26.560"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:26.255" endtime="20201030 18:39:26.560"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:26.253" endtime="20201030 18:39:26.561"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:39:26.565" level="INFO">${RESULT} = [{'diff': 2.211099999999827e-05}, {'diff': 2.169499999999866e-05}, {'diff': 2.2041999999999895e-05}, {'diff': 2.265300000000095e-05}, {'diff': 2.2305999999999715e-05}, {'diff': 2.2055999999999465e-05}...</msg>
<status status="PASS" starttime="20201030 18:39:26.561" endtime="20201030 18:39:26.565"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:39:26.569" level="INFO">${ACCURACY} = {'diff': [2.211099999999827e-05, 2.169499999999866e-05, 2.2041999999999895e-05, 2.265300000000095e-05, 2.2305999999999715e-05, 2.2055999999999465e-05, 2.237500000000156e-05, 2.1750000000000935e-05, 2....</msg>
<status status="PASS" starttime="20201030 18:39:26.566" endtime="20201030 18:39:26.569"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:39:26.574" level="INFO">NAME: accuracy-TIMER_SLEEP-4-philip</msg>
<status status="PASS" starttime="20201030 18:39:26.572" endtime="20201030 18:39:26.574"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:39:26.576" level="INFO">VALUE: [2.211099999999827e-05, 2.169499999999866e-05, 2.2041999999999895e-05, 2.265300000000095e-05, 2.2305999999999715e-05, 2.2055999999999465e-05, 2.237500000000156e-05, 2.1750000000000935e-05, 2.2250000000001435e-05, 2.22229999999983e-05, 2.179100000000017e-05, 2.181899999999931e-05, 2.262499999999834e-05, 2.2250000000001435e-05, 2.212500000000131e-05, 2.236100000000199e-05, 2.1708000000002226e-05, 2.263899999999791e-05, 2.2416000000000796e-05, 2.2235999999998396e-05, 2.186099999999802e-05, 2.265299999999748e-05, 2.2000000000001185e-05, 2.255500000000049e-05, 2.2207999999999256e-05, 2.205499999999999e-05, 2.1986000000001615e-05, 2.1736000000001365e-05, 2.1708000000002226e-05, 2.2499999999998216e-05, 2.193099999999934e-05, 2.1805999999999215e-05, 2.2222000000002295e-05, 2.2264000000001005e-05, 2.2070000000002504e-05, 2.2041999999999895e-05, 2.195900000000195e-05, 2.2041999999999895e-05, 2.237499999999809e-05, 2.2319999999999285e-05, 2.2333999999998855e-05, 2.2098000000001644e-05, 2.1778000000000075e-05, 2.183299999999888e-05, 2.2514000000001255e-05, 2.2028000000000325e-05, 2.17090000000017e-05, 2.2430000000000366e-05, 2.211099999999827e-05, 2.222300000000177e-05]</msg>
<status status="PASS" starttime="20201030 18:39:26.575" endtime="20201030 18:39:26.577"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:26.570" endtime="20201030 18:39:26.578"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:39:26.581" endtime="20201030 18:39:26.601"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:26.580" endtime="20201030 18:39:26.602"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:26.579" endtime="20201030 18:39:26.602"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:26.222" endtime="20201030 18:39:26.602"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:26.221" endtime="20201030 18:39:26.602"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:26.611" endtime="20201030 18:39:26.627"></status>
</kw>
<msg timestamp="20201030 18:39:26.628" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:26.610" endtime="20201030 18:39:26.628"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:26.630" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:26.629" endtime="20201030 18:39:26.631"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:26.632" endtime="20201030 18:39:26.635"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:26.607" endtime="20201030 18:39:26.636"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:26.605" endtime="20201030 18:39:26.637"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:26.643" endtime="20201030 18:39:26.929"></status>
</kw>
<msg timestamp="20201030 18:39:26.932" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021122847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021145528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:26.642" endtime="20201030 18:39:26.933"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:26.941" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021122847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021145528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:26.933" endtime="20201030 18:39:26.941"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:26.942" endtime="20201030 18:39:26.944"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:26.639" endtime="20201030 18:39:26.944"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:26.637" endtime="20201030 18:39:26.945"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:39:26.949" level="INFO">${RESULT} = [{'diff': 2.268100000000009e-05}, {'diff': 2.262500000000181e-05}, {'diff': 2.1819999999998785e-05}, {'diff': 2.238900000000113e-05}, {'diff': 2.2637999999998437e-05}, {'diff': 2.24030000000007e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:39:26.946" endtime="20201030 18:39:26.949"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:39:26.953" level="INFO">${ACCURACY} = {'diff': [2.268100000000009e-05, 2.262500000000181e-05, 2.1819999999998785e-05, 2.238900000000113e-05, 2.2637999999998437e-05, 2.24030000000007e-05, 2.247299999999855e-05, 2.161099999999777e-05, 2.198...</msg>
<status status="PASS" starttime="20201030 18:39:26.950" endtime="20201030 18:39:26.953"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:39:26.958" level="INFO">NAME: accuracy-TIMER_SLEEP-5-philip</msg>
<status status="PASS" starttime="20201030 18:39:26.957" endtime="20201030 18:39:26.958"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:39:26.960" level="INFO">VALUE: [2.268100000000009e-05, 2.262500000000181e-05, 2.1819999999998785e-05, 2.238900000000113e-05, 2.2637999999998437e-05, 2.24030000000007e-05, 2.247299999999855e-05, 2.161099999999777e-05, 2.198699999999762e-05, 2.1806000000002684e-05, 2.216700000000002e-05, 2.2569999999999535e-05, 2.25830000000031e-05, 2.258299999999963e-05, 2.2387999999998187e-05, 2.236099999999852e-05, 2.2222000000002295e-05, 2.2278000000000575e-05, 2.1929999999999866e-05, 2.255500000000049e-05, 2.183300000000235e-05, 2.262500000000181e-05, 2.1735999999997896e-05, 2.256900000000006e-05, 2.1707999999998756e-05, 2.1764000000000505e-05, 2.187500000000106e-05, 2.1985999999998146e-05, 2.211100000000174e-05, 2.238900000000113e-05, 2.261099999999877e-05, 2.1806000000002684e-05, 2.1750000000000935e-05, 2.2056000000002934e-05, 2.169500000000213e-05, 2.2263999999997536e-05, 2.2528000000000825e-05, 2.2055999999999465e-05, 2.2000000000001185e-05, 2.1986000000001615e-05, 2.244500000000288e-05, 2.2014000000000755e-05, 2.187500000000106e-05, 2.245899999999898e-05, 2.197300000000152e-05, 2.169499999999866e-05, 2.2612000000001714e-05, 2.2485999999998646e-05, 2.1750000000000935e-05, 2.1805999999999215e-05]</msg>
<status status="PASS" starttime="20201030 18:39:26.959" endtime="20201030 18:39:26.962"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:26.954" endtime="20201030 18:39:26.963"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:39:26.967" endtime="20201030 18:39:26.986"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:26.965" endtime="20201030 18:39:26.987"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:26.964" endtime="20201030 18:39:26.987"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:26.603" endtime="20201030 18:39:26.987"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:26.603" endtime="20201030 18:39:26.988"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:26.996" endtime="20201030 18:39:27.013"></status>
</kw>
<msg timestamp="20201030 18:39:27.013" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:26.995" endtime="20201030 18:39:27.013"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:27.016" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:27.014" endtime="20201030 18:39:27.016"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:27.017" endtime="20201030 18:39:27.019"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:26.992" endtime="20201030 18:39:27.019"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:26.990" endtime="20201030 18:39:27.020"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:27.026" endtime="20201030 18:39:27.312"></status>
</kw>
<msg timestamp="20201030 18:39:27.315" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020165306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020187319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:27.025" endtime="20201030 18:39:27.316"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:27.324" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020165306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020187319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:27.317" endtime="20201030 18:39:27.324"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:27.325" endtime="20201030 18:39:27.327"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:27.022" endtime="20201030 18:39:27.327"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:27.020" endtime="20201030 18:39:27.328"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:39:27.332" level="INFO">${RESULT} = [{'diff': 2.2012999999997812e-05}, {'diff': 2.2276999999997632e-05}, {'diff': 2.206900000000303e-05}, {'diff': 2.236100000000199e-05}, {'diff': 2.230500000000024e-05}, {'diff': 2.234699999999895e-05},...</msg>
<status status="PASS" starttime="20201030 18:39:27.329" endtime="20201030 18:39:27.332"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:39:27.337" level="INFO">${ACCURACY} = {'diff': [2.2012999999997812e-05, 2.2276999999997632e-05, 2.206900000000303e-05, 2.236100000000199e-05, 2.230500000000024e-05, 2.234699999999895e-05, 2.2235999999998396e-05, 2.2000000000001185e-05, 2....</msg>
<status status="PASS" starttime="20201030 18:39:27.333" endtime="20201030 18:39:27.337"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:39:27.342" level="INFO">NAME: accuracy-TIMER_SLEEP-6-philip</msg>
<status status="PASS" starttime="20201030 18:39:27.341" endtime="20201030 18:39:27.342"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:39:27.344" level="INFO">VALUE: [2.2012999999997812e-05, 2.2276999999997632e-05, 2.206900000000303e-05, 2.236100000000199e-05, 2.230500000000024e-05, 2.234699999999895e-05, 2.2235999999998396e-05, 2.2000000000001185e-05, 2.2514000000001255e-05, 2.205499999999999e-05, 2.186099999999802e-05, 2.238900000000113e-05, 2.2457999999999506e-05, 2.1763999999997036e-05, 2.208299999999913e-05, 2.231900000000328e-05, 2.2000000000001185e-05, 2.194500000000238e-05, 2.191699999999977e-05, 2.241700000000027e-05, 2.1707999999998756e-05, 2.216700000000002e-05, 2.2069999999999035e-05, 2.24169999999968e-05, 2.187499999999759e-05, 2.2513999999997786e-05, 2.211099999999827e-05, 2.1943999999999436e-05, 2.186099999999802e-05, 2.1985999999998146e-05, 2.191700000000324e-05, 2.197299999999805e-05, 2.2333999999998855e-05, 2.2236000000001865e-05, 2.168100000000256e-05, 2.2098000000001644e-05, 2.2416000000000796e-05, 2.262500000000181e-05, 2.2207999999999256e-05, 2.2152000000000976e-05, 2.204100000000042e-05, 2.2152000000000976e-05, 2.1736000000001365e-05, 2.2028000000000325e-05, 2.1916000000000296e-05, 2.2180000000000116e-05, 2.265299999999748e-05, 2.2180000000000116e-05, 2.262499999999834e-05, 2.2056000000002934e-05]</msg>
<status status="PASS" starttime="20201030 18:39:27.343" endtime="20201030 18:39:27.345"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:27.338" endtime="20201030 18:39:27.346"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:39:27.350" endtime="20201030 18:39:27.369"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:27.348" endtime="20201030 18:39:27.370"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:27.347" endtime="20201030 18:39:27.370"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:26.988" endtime="20201030 18:39:27.370"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:26.988" endtime="20201030 18:39:27.371"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:27.380" endtime="20201030 18:39:27.394"></status>
</kw>
<msg timestamp="20201030 18:39:27.395" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:27.378" endtime="20201030 18:39:27.395"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:27.398" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:27.396" endtime="20201030 18:39:27.398"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:27.399" endtime="20201030 18:39:27.400"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:27.375" endtime="20201030 18:39:27.401"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:27.373" endtime="20201030 18:39:27.401"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:27.408" endtime="20201030 18:39:27.695"></status>
</kw>
<msg timestamp="20201030 18:39:27.698" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020182111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020204403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:27.407" endtime="20201030 18:39:27.698"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:27.707" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020182111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020204403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:27.699" endtime="20201030 18:39:27.707"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:27.708" endtime="20201030 18:39:27.710"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:27.404" endtime="20201030 18:39:27.710"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:27.402" endtime="20201030 18:39:27.710"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:39:27.715" level="INFO">${RESULT} = [{'diff': 2.2292000000000145e-05}, {'diff': 2.187499999999759e-05}, {'diff': 2.1986000000001615e-05}, {'diff': 2.2584000000002574e-05}, {'diff': 2.2348000000001894e-05}, {'diff': 2.2292000000000145e-0...</msg>
<status status="PASS" starttime="20201030 18:39:27.711" endtime="20201030 18:39:27.715"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:39:27.719" level="INFO">${ACCURACY} = {'diff': [2.2292000000000145e-05, 2.187499999999759e-05, 2.1986000000001615e-05, 2.2584000000002574e-05, 2.2348000000001894e-05, 2.2292000000000145e-05, 2.2570000000003004e-05, 2.2278000000000575e-05,...</msg>
<status status="PASS" starttime="20201030 18:39:27.716" endtime="20201030 18:39:27.719"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:39:27.724" level="INFO">NAME: accuracy-TIMER_SLEEP-7-philip</msg>
<status status="PASS" starttime="20201030 18:39:27.722" endtime="20201030 18:39:27.724"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:39:27.726" level="INFO">VALUE: [2.2292000000000145e-05, 2.187499999999759e-05, 2.1986000000001615e-05, 2.2584000000002574e-05, 2.2348000000001894e-05, 2.2292000000000145e-05, 2.2570000000003004e-05, 2.2278000000000575e-05, 2.2333999999998855e-05, 2.2278000000000575e-05, 2.2292000000000145e-05, 2.262500000000181e-05, 2.20969999999987e-05, 2.1707999999998756e-05, 2.2402000000001226e-05, 2.20969999999987e-05, 2.213899999999741e-05, 2.233299999999938e-05, 2.1986000000001615e-05, 2.188899999999716e-05, 2.2513999999997786e-05, 2.1763999999997036e-05, 2.236100000000199e-05, 2.2278000000000575e-05, 2.1694000000002656e-05, 2.2528000000000825e-05, 2.183300000000235e-05, 2.180499999999974e-05, 2.2638000000001907e-05, 2.2292000000000145e-05, 2.24030000000007e-05, 2.2000000000001185e-05, 2.25969999999992e-05, 2.168099999999909e-05, 2.2292000000000145e-05, 2.2513999999997786e-05, 2.233299999999938e-05, 2.168099999999909e-05, 2.2292000000000145e-05, 2.19030000000002e-05, 2.168099999999909e-05, 2.2264000000001005e-05, 2.1805999999999215e-05, 2.2292000000000145e-05, 2.1986000000001615e-05, 2.1819999999998785e-05, 2.243099999999984e-05, 2.2000000000001185e-05, 2.2569999999999535e-05, 2.263900000000138e-05]</msg>
<status status="PASS" starttime="20201030 18:39:27.725" endtime="20201030 18:39:27.727"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:27.720" endtime="20201030 18:39:27.728"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:39:27.731" endtime="20201030 18:39:27.751"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:27.730" endtime="20201030 18:39:27.752"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:27.729" endtime="20201030 18:39:27.752"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:27.371" endtime="20201030 18:39:27.752"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:27.371" endtime="20201030 18:39:27.752"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:27.761" endtime="20201030 18:39:27.778"></status>
</kw>
<msg timestamp="20201030 18:39:27.779" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:27.760" endtime="20201030 18:39:27.779"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:27.781" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:27.780" endtime="20201030 18:39:27.782"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:27.782" endtime="20201030 18:39:27.784"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:27.757" endtime="20201030 18:39:27.785"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:27.755" endtime="20201030 18:39:27.785"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:27.792" endtime="20201030 18:39:28.078"></status>
</kw>
<msg timestamp="20201030 18:39:28.081" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021638444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021661014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:27.790" endtime="20201030 18:39:28.081"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:28.089" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021638444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021661014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:28.082" endtime="20201030 18:39:28.089"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:28.090" endtime="20201030 18:39:28.092"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:27.788" endtime="20201030 18:39:28.092"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:27.786" endtime="20201030 18:39:28.093"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:39:28.097" level="INFO">${RESULT} = [{'diff': 2.2569999999999535e-05}, {'diff': 2.2583999999999105e-05}, {'diff': 2.1735999999997896e-05}, {'diff': 2.2513999999997786e-05}, {'diff': 2.188900000000063e-05}, {'diff': 2.1778000000000075e-0...</msg>
<status status="PASS" starttime="20201030 18:39:28.093" endtime="20201030 18:39:28.097"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:39:28.101" level="INFO">${ACCURACY} = {'diff': [2.2569999999999535e-05, 2.2583999999999105e-05, 2.1735999999997896e-05, 2.2513999999997786e-05, 2.188900000000063e-05, 2.1778000000000075e-05, 2.193100000000281e-05, 2.2569999999999535e-05, ...</msg>
<status status="PASS" starttime="20201030 18:39:28.098" endtime="20201030 18:39:28.101"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:39:28.105" level="INFO">NAME: accuracy-TIMER_SLEEP-8-philip</msg>
<status status="PASS" starttime="20201030 18:39:28.104" endtime="20201030 18:39:28.105"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:39:28.108" level="INFO">VALUE: [2.2569999999999535e-05, 2.2583999999999105e-05, 2.1735999999997896e-05, 2.2513999999997786e-05, 2.188900000000063e-05, 2.1778000000000075e-05, 2.193100000000281e-05, 2.2569999999999535e-05, 2.168099999999909e-05, 2.2569999999999535e-05, 2.2583999999999105e-05, 2.245899999999898e-05, 2.215300000000045e-05, 2.179100000000017e-05, 2.263900000000138e-05, 2.2276999999997632e-05, 2.2152000000000976e-05, 2.255500000000049e-05, 2.208299999999913e-05, 2.212499999999784e-05, 2.2471999999999076e-05, 2.183299999999888e-05, 2.237500000000156e-05, 2.240299999999723e-05, 2.2000000000001185e-05, 2.2235999999998396e-05, 2.1693999999999186e-05, 2.24169999999968e-05, 2.181899999999931e-05, 2.2041999999999895e-05, 2.262499999999834e-05, 2.2028000000000325e-05, 2.2222000000002295e-05, 2.212500000000131e-05, 2.2055999999999465e-05, 2.233299999999938e-05, 2.2000000000001185e-05, 2.209700000000217e-05, 2.193099999999934e-05, 2.211099999999827e-05, 2.193099999999934e-05, 2.216700000000002e-05, 2.184699999999845e-05, 2.1735999999997896e-05, 2.1763999999997036e-05, 2.2097999999998175e-05, 2.163900000000038e-05, 2.22090000000022e-05, 2.2485999999998646e-05, 2.194500000000238e-05]</msg>
<status status="PASS" starttime="20201030 18:39:28.106" endtime="20201030 18:39:28.109"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:28.101" endtime="20201030 18:39:28.110"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:39:28.113" endtime="20201030 18:39:28.133"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:28.112" endtime="20201030 18:39:28.133"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:28.111" endtime="20201030 18:39:28.134"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:27.753" endtime="20201030 18:39:28.134"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:27.753" endtime="20201030 18:39:28.134"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:28.143" endtime="20201030 18:39:28.159"></status>
</kw>
<msg timestamp="20201030 18:39:28.159" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:28.141" endtime="20201030 18:39:28.159"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:28.162" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:28.160" endtime="20201030 18:39:28.162"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:28.163" endtime="20201030 18:39:28.164"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:28.139" endtime="20201030 18:39:28.165"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:28.136" endtime="20201030 18:39:28.165"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:28.172" endtime="20201030 18:39:28.458"></status>
</kw>
<msg timestamp="20201030 18:39:28.461" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020220361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020242639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:28.170" endtime="20201030 18:39:28.461"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:28.469" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020220361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020242639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:28.462" endtime="20201030 18:39:28.469"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:28.470" endtime="20201030 18:39:28.472"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:28.168" endtime="20201030 18:39:28.472"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:28.166" endtime="20201030 18:39:28.473"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:39:28.477" level="INFO">${RESULT} = [{'diff': 2.2278000000000575e-05}, {'diff': 2.2041999999999895e-05}, {'diff': 2.2042000000003364e-05}, {'diff': 2.193100000000281e-05}, {'diff': 2.2292000000000145e-05}, {'diff': 2.247300000000202e-05...</msg>
<status status="PASS" starttime="20201030 18:39:28.473" endtime="20201030 18:39:28.477"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:39:28.482" level="INFO">${ACCURACY} = {'diff': [2.2278000000000575e-05, 2.2041999999999895e-05, 2.2042000000003364e-05, 2.193100000000281e-05, 2.2292000000000145e-05, 2.247300000000202e-05, 2.24030000000007e-05, 2.187500000000106e-05, 2.1...</msg>
<status status="PASS" starttime="20201030 18:39:28.478" endtime="20201030 18:39:28.482"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:39:28.486" level="INFO">NAME: accuracy-TIMER_SLEEP-9-philip</msg>
<status status="PASS" starttime="20201030 18:39:28.485" endtime="20201030 18:39:28.486"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:39:28.489" level="INFO">VALUE: [2.2278000000000575e-05, 2.2041999999999895e-05, 2.2042000000003364e-05, 2.193100000000281e-05, 2.2292000000000145e-05, 2.247300000000202e-05, 2.24030000000007e-05, 2.187500000000106e-05, 2.186100000000149e-05, 2.2499999999998216e-05, 2.211099999999827e-05, 2.198700000000109e-05, 2.2528000000000825e-05, 2.205499999999999e-05, 2.181899999999931e-05, 2.2334000000002324e-05, 2.198700000000109e-05, 2.213900000000088e-05, 2.2430000000000366e-05, 2.186100000000149e-05, 2.1736000000001365e-05, 2.1929999999999866e-05, 2.1721999999998326e-05, 2.262499999999834e-05, 2.233299999999938e-05, 2.1916000000000296e-05, 2.2235999999998396e-05, 2.2443999999999936e-05, 2.2457999999999506e-05, 2.184700000000192e-05, 2.2222000000002295e-05, 2.191699999999977e-05, 2.256900000000006e-05, 2.2554999999997022e-05, 2.1986000000001615e-05, 2.213900000000088e-05, 2.168099999999909e-05, 2.238900000000113e-05, 2.2292000000000145e-05, 2.211099999999827e-05, 2.2569999999999535e-05, 2.1847999999997925e-05, 2.2278000000000575e-05, 2.2444000000003406e-05, 2.2236000000001865e-05, 2.2250000000001435e-05, 2.2041999999999895e-05, 2.234699999999895e-05, 2.237499999999809e-05, 2.2055999999999465e-05]</msg>
<status status="PASS" starttime="20201030 18:39:28.487" endtime="20201030 18:39:28.489"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:28.482" endtime="20201030 18:39:28.490"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:39:28.494" endtime="20201030 18:39:28.513"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:28.492" endtime="20201030 18:39:28.514"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:28.491" endtime="20201030 18:39:28.514"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:28.135" endtime="20201030 18:39:28.514"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:28.134" endtime="20201030 18:39:28.514"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:28.523" endtime="20201030 18:39:28.540"></status>
</kw>
<msg timestamp="20201030 18:39:28.540" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:28.521" endtime="20201030 18:39:28.540"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:28.543" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:28.541" endtime="20201030 18:39:28.543"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:28.544" endtime="20201030 18:39:28.546"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:28.519" endtime="20201030 18:39:28.546"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:28.517" endtime="20201030 18:39:28.547"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:28.554" endtime="20201030 18:39:28.842"></status>
</kw>
<msg timestamp="20201030 18:39:28.845" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020324722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020346889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:28.552" endtime="20201030 18:39:28.845"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:28.853" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020324722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020346889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:28.846" endtime="20201030 18:39:28.854"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:28.854" endtime="20201030 18:39:28.856"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:28.549" endtime="20201030 18:39:28.856"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:28.548" endtime="20201030 18:39:28.857"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:39:28.861" level="INFO">${RESULT} = [{'diff': 2.216700000000002e-05}, {'diff': 2.2221999999998826e-05}, {'diff': 2.215300000000045e-05}, {'diff': 2.2569999999999535e-05}, {'diff': 2.1999999999997716e-05}, {'diff': 2.24030000000007e-05},...</msg>
<status status="PASS" starttime="20201030 18:39:28.858" endtime="20201030 18:39:28.861"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:39:28.865" level="INFO">${ACCURACY} = {'diff': [2.216700000000002e-05, 2.2221999999998826e-05, 2.215300000000045e-05, 2.2569999999999535e-05, 2.1999999999997716e-05, 2.24030000000007e-05, 2.193099999999934e-05, 2.212500000000131e-05, 2.20...</msg>
<status status="PASS" starttime="20201030 18:39:28.862" endtime="20201030 18:39:28.865"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:39:28.869" level="INFO">NAME: accuracy-TIMER_SLEEP-10-philip</msg>
<status status="PASS" starttime="20201030 18:39:28.868" endtime="20201030 18:39:28.870"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:39:28.872" level="INFO">VALUE: [2.216700000000002e-05, 2.2221999999998826e-05, 2.215300000000045e-05, 2.2569999999999535e-05, 2.1999999999997716e-05, 2.24030000000007e-05, 2.193099999999934e-05, 2.212500000000131e-05, 2.2055999999999465e-05, 2.191700000000324e-05, 2.190299999999673e-05, 2.218099999999959e-05, 2.234699999999895e-05, 2.216700000000002e-05, 2.2513999999997786e-05, 2.241700000000027e-05, 2.188900000000063e-05, 2.265300000000095e-05, 2.2056000000002934e-05, 2.1806000000002684e-05, 2.2221999999998826e-05, 2.2458000000002976e-05, 2.184700000000192e-05, 2.212500000000131e-05, 2.188900000000063e-05, 2.2236000000001865e-05, 2.1735999999997896e-05, 2.1707999999998756e-05, 2.22770000000011e-05, 2.1750000000000935e-05, 2.2430000000000366e-05, 2.2264000000001005e-05, 2.20969999999987e-05, 2.1916000000000296e-05, 2.211100000000174e-05, 2.1778000000000075e-05, 2.2221999999998826e-05, 2.2513999999997786e-05, 2.215300000000045e-05, 2.261099999999877e-05, 2.2041999999999895e-05, 2.180499999999974e-05, 2.2277999999997106e-05, 2.236100000000199e-05, 2.19030000000002e-05, 2.2472000000002545e-05, 2.1805999999999215e-05, 2.234699999999895e-05, 2.1985999999998146e-05, 2.2569999999999535e-05]</msg>
<status status="PASS" starttime="20201030 18:39:28.870" endtime="20201030 18:39:28.873"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:28.866" endtime="20201030 18:39:28.873"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:39:28.877" endtime="20201030 18:39:28.896"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:28.875" endtime="20201030 18:39:28.897"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:28.874" endtime="20201030 18:39:28.897"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:28.515" endtime="20201030 18:39:28.898"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:28.515" endtime="20201030 18:39:28.898"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:28.906" endtime="20201030 18:39:28.925"></status>
</kw>
<msg timestamp="20201030 18:39:28.925" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:28.905" endtime="20201030 18:39:28.926"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:28.928" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:28.927" endtime="20201030 18:39:28.928"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:28.929" endtime="20201030 18:39:28.931"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:28.902" endtime="20201030 18:39:28.931"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:28.900" endtime="20201030 18:39:28.932"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:28.938" endtime="20201030 18:39:29.225"></status>
</kw>
<msg timestamp="20201030 18:39:29.228" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023159111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023182694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:28.936" endtime="20201030 18:39:29.228"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:29.236" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023159111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023182694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:29.229" endtime="20201030 18:39:29.236"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:29.237" endtime="20201030 18:39:29.239"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:28.934" endtime="20201030 18:39:29.239"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:28.932" endtime="20201030 18:39:29.240"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:39:29.244" level="INFO">${RESULT} = [{'diff': 2.358300000000063e-05}, {'diff': 2.2930000000000866e-05}, {'diff': 2.368100000000109e-05}, {'diff': 2.30969999999997e-05}, {'diff': 2.2971999999999576e-05}, {'diff': 2.2930000000000866e-05},...</msg>
<status status="PASS" starttime="20201030 18:39:29.240" endtime="20201030 18:39:29.244"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:39:29.248" level="INFO">${ACCURACY} = {'diff': [2.358300000000063e-05, 2.2930000000000866e-05, 2.368100000000109e-05, 2.30969999999997e-05, 2.2971999999999576e-05, 2.2930000000000866e-05, 2.363899999999891e-05, 2.2958000000000006e-05, 2.3...</msg>
<status status="PASS" starttime="20201030 18:39:29.245" endtime="20201030 18:39:29.248"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:39:29.252" level="INFO">NAME: accuracy-TIMER_SLEEP-11-philip</msg>
<status status="PASS" starttime="20201030 18:39:29.251" endtime="20201030 18:39:29.253"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:39:29.255" level="INFO">VALUE: [2.358300000000063e-05, 2.2930000000000866e-05, 2.368100000000109e-05, 2.30969999999997e-05, 2.2971999999999576e-05, 2.2930000000000866e-05, 2.363899999999891e-05, 2.2958000000000006e-05, 2.358300000000063e-05, 2.333300000000038e-05, 2.284699999999945e-05, 2.291700000000077e-05, 2.3221999999999826e-05, 2.2694000000000186e-05, 2.3235999999999396e-05, 2.318100000000059e-05, 2.2763999999998036e-05, 2.319500000000016e-05, 2.3208000000000256e-05, 2.311099999999927e-05, 2.340299999999823e-05, 2.2985999999999146e-05, 2.308300000000013e-05, 2.266700000000052e-05, 2.297300000000252e-05, 2.3083999999999605e-05, 2.3291999999997676e-05, 2.3026999999998382e-05, 2.3680000000001616e-05, 2.3458000000000506e-05, 2.3611999999999245e-05, 2.3000000000002185e-05, 2.32229999999993e-05, 2.2806000000000215e-05, 2.3402000000002227e-05, 2.2749999999998466e-05, 2.3528000000001825e-05, 2.3472000000000076e-05, 2.352700000000235e-05, 2.30969999999997e-05, 2.356900000000106e-05, 2.3402000000002227e-05, 2.286100000000249e-05, 2.3347999999999425e-05, 2.3250000000002435e-05, 2.3235999999999396e-05, 2.3222000000003296e-05, 2.287499999999859e-05, 2.2736000000002365e-05, 2.291700000000077e-05]</msg>
<status status="PASS" starttime="20201030 18:39:29.253" endtime="20201030 18:39:29.256"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:29.249" endtime="20201030 18:39:29.257"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:39:29.260" endtime="20201030 18:39:29.280"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:29.259" endtime="20201030 18:39:29.280"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:29.258" endtime="20201030 18:39:29.281"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:28.899" endtime="20201030 18:39:29.281"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:28.898" endtime="20201030 18:39:29.281"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:29.290" endtime="20201030 18:39:29.306"></status>
</kw>
<msg timestamp="20201030 18:39:29.306" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:29.288" endtime="20201030 18:39:29.307"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:29.309" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:29.307" endtime="20201030 18:39:29.309"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:29.310" endtime="20201030 18:39:29.311"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:29.286" endtime="20201030 18:39:29.312"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:29.284" endtime="20201030 18:39:29.312"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:29.319" endtime="20201030 18:39:29.605"></status>
</kw>
<msg timestamp="20201030 18:39:29.608" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020110708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020134667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:29.317" endtime="20201030 18:39:29.608"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:29.616" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020110708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020134667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:29.609" endtime="20201030 18:39:29.616"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:29.617" endtime="20201030 18:39:29.619"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:29.315" endtime="20201030 18:39:29.619"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:29.313" endtime="20201030 18:39:29.620"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:39:29.624" level="INFO">${RESULT} = [{'diff': 2.395899999999701e-05}, {'diff': 2.415299999999898e-05}, {'diff': 2.415299999999898e-05}, {'diff': 2.393100000000134e-05}, {'diff': 2.463899999999991e-05}, {'diff': 2.4236000000000396e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:39:29.620" endtime="20201030 18:39:29.624"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:39:29.629" level="INFO">${ACCURACY} = {'diff': [2.395899999999701e-05, 2.415299999999898e-05, 2.415299999999898e-05, 2.393100000000134e-05, 2.463899999999991e-05, 2.4236000000000396e-05, 2.391700000000177e-05, 2.4098000000000175e-05, 2.42...</msg>
<status status="PASS" starttime="20201030 18:39:29.624" endtime="20201030 18:39:29.629"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:39:29.633" level="INFO">NAME: accuracy-TIMER_SLEEP-12-philip</msg>
<status status="PASS" starttime="20201030 18:39:29.632" endtime="20201030 18:39:29.633"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:39:29.635" level="INFO">VALUE: [2.395899999999701e-05, 2.415299999999898e-05, 2.415299999999898e-05, 2.393100000000134e-05, 2.463899999999991e-05, 2.4236000000000396e-05, 2.391700000000177e-05, 2.4098000000000175e-05, 2.429100000000267e-05, 2.4263000000000062e-05, 2.4180000000002116e-05, 2.4054999999998522e-05, 2.3915999999998827e-05, 2.3764000000002505e-05, 2.4401999999999757e-05, 2.386100000000002e-05, 2.4568999999998592e-05, 2.386100000000002e-05, 2.4207999999997787e-05, 2.4028000000002325e-05, 2.3735999999999896e-05, 2.4208000000001256e-05, 2.4221999999997357e-05, 2.387499999999959e-05, 2.462500000000034e-05, 2.4278000000002575e-05, 2.456900000000206e-05, 2.3777999999998606e-05, 2.437500000000009e-05, 2.39169999999983e-05, 2.393100000000134e-05, 2.4569999999998066e-05, 2.4584000000001105e-05, 2.384700000000045e-05, 2.4000000000003185e-05, 2.4151999999999507e-05, 2.411100000000027e-05, 2.3806000000001215e-05, 2.393100000000134e-05, 2.387499999999959e-05, 2.4069999999997566e-05, 2.4263999999999536e-05, 2.4415999999999327e-05, 2.3749999999999466e-05, 2.368100000000109e-05, 2.4026999999999382e-05, 2.431900000000181e-05, 2.4513999999999786e-05, 2.3958000000001006e-05, 2.3749999999999466e-05]</msg>
<status status="PASS" starttime="20201030 18:39:29.634" endtime="20201030 18:39:29.636"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:29.629" endtime="20201030 18:39:29.638"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:39:29.643" endtime="20201030 18:39:29.663"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:29.641" endtime="20201030 18:39:29.663"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:29.639" endtime="20201030 18:39:29.664"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:29.282" endtime="20201030 18:39:29.664"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:29.281" endtime="20201030 18:39:29.664"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:29.673" endtime="20201030 18:39:29.687"></status>
</kw>
<msg timestamp="20201030 18:39:29.688" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:29.671" endtime="20201030 18:39:29.688"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:29.690" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:29.689" endtime="20201030 18:39:29.690"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:29.691" endtime="20201030 18:39:29.693"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:29.669" endtime="20201030 18:39:29.693"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:29.666" endtime="20201030 18:39:29.694"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:29.700" endtime="20201030 18:39:29.988"></status>
</kw>
<msg timestamp="20201030 18:39:29.991" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019659847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019685056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:29.699" endtime="20201030 18:39:29.991"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:30.000" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019659847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019685056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:29.992" endtime="20201030 18:39:30.001"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:30.001" endtime="20201030 18:39:30.003"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:29.696" endtime="20201030 18:39:30.004"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:29.694" endtime="20201030 18:39:30.004"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:39:30.008" level="INFO">${RESULT} = [{'diff': 2.520899999999826e-05}, {'diff': 2.5555999999999496e-05}, {'diff': 2.5556000000002965e-05}, {'diff': 2.563900000000091e-05}, {'diff': 2.4736000000000896e-05}, {'diff': 2.540300000000023e-05}...</msg>
<status status="PASS" starttime="20201030 18:39:30.005" endtime="20201030 18:39:30.008"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:39:30.012" level="INFO">${ACCURACY} = {'diff': [2.520899999999826e-05, 2.5555999999999496e-05, 2.5556000000002965e-05, 2.563900000000091e-05, 2.4736000000000896e-05, 2.540300000000023e-05, 2.5318999999999342e-05, 2.4971999999998107e-05, 2...</msg>
<status status="PASS" starttime="20201030 18:39:30.009" endtime="20201030 18:39:30.012"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:39:30.017" level="INFO">NAME: accuracy-TIMER_SLEEP-13-philip</msg>
<status status="PASS" starttime="20201030 18:39:30.016" endtime="20201030 18:39:30.017"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:39:30.019" level="INFO">VALUE: [2.520899999999826e-05, 2.5555999999999496e-05, 2.5556000000002965e-05, 2.563900000000091e-05, 2.4736000000000896e-05, 2.540300000000023e-05, 2.5318999999999342e-05, 2.4971999999998107e-05, 2.4958000000002006e-05, 2.5166000000000077e-05, 2.5568999999999592e-05, 2.5263000000001062e-05, 2.4943999999998967e-05, 2.5568999999999592e-05, 2.565300000000048e-05, 2.4764000000000036e-05, 2.5236000000001396e-05, 2.5541999999999926e-05, 2.5054999999999522e-05, 2.5555000000000022e-05, 2.480500000000274e-05, 2.5000000000000716e-05, 2.5166000000000077e-05, 2.5541999999999926e-05, 2.513900000000041e-05, 2.5528000000000356e-05, 2.5096999999998232e-05, 2.538900000000066e-05, 2.5221999999998357e-05, 2.4971999999998107e-05, 2.543099999999937e-05, 2.49169999999993e-05, 2.4750000000000466e-05, 2.490299999999973e-05, 2.469500000000166e-05, 2.4722000000001326e-05, 2.49169999999993e-05, 2.516699999999955e-05, 2.5556000000002965e-05, 2.5014000000000286e-05, 2.5304999999999772e-05, 2.5638000000001437e-05, 2.4943999999998967e-05, 2.468100000000209e-05, 2.5068999999999092e-05, 2.4818999999998842e-05, 2.5527000000000882e-05, 2.5054999999999522e-05, 2.5401999999997288e-05, 2.5304999999999772e-05]</msg>
<status status="PASS" starttime="20201030 18:39:30.018" endtime="20201030 18:39:30.020"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:30.013" endtime="20201030 18:39:30.021"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:39:30.024" endtime="20201030 18:39:30.044"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:30.023" endtime="20201030 18:39:30.044"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:30.022" endtime="20201030 18:39:30.045"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:29.665" endtime="20201030 18:39:30.045"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:29.664" endtime="20201030 18:39:30.045"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:30.054" endtime="20201030 18:39:30.070"></status>
</kw>
<msg timestamp="20201030 18:39:30.070" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:30.052" endtime="20201030 18:39:30.071"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:30.073" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:30.071" endtime="20201030 18:39:30.073"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:30.074" endtime="20201030 18:39:30.075"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:30.050" endtime="20201030 18:39:30.076"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:30.047" endtime="20201030 18:39:30.077"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:30.084" endtime="20201030 18:39:30.388"></status>
</kw>
<msg timestamp="20201030 18:39:30.391" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020692028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020717944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:30.081" endtime="20201030 18:39:30.391"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:30.399" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020692028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020717944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:30.392" endtime="20201030 18:39:30.400"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:30.400" endtime="20201030 18:39:30.402"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:30.079" endtime="20201030 18:39:30.403"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:30.077" endtime="20201030 18:39:30.403"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:39:30.407" level="INFO">${RESULT} = [{'diff': 2.5915999999997358e-05}, {'diff': 2.6305000000000772e-05}, {'diff': 2.5972000000002576e-05}, {'diff': 2.5860999999998552e-05}, {'diff': 2.5791000000000702e-05}, {'diff': 2.587500000000159e-0...</msg>
<status status="PASS" starttime="20201030 18:39:30.404" endtime="20201030 18:39:30.407"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:39:30.411" level="INFO">${ACCURACY} = {'diff': [2.5915999999997358e-05, 2.6305000000000772e-05, 2.5972000000002576e-05, 2.5860999999998552e-05, 2.5791000000000702e-05, 2.587500000000159e-05, 2.6276999999998163e-05, 2.6346999999999482e-05,...</msg>
<status status="PASS" starttime="20201030 18:39:30.408" endtime="20201030 18:39:30.411"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:39:30.415" level="INFO">NAME: accuracy-TIMER_SLEEP-14-philip</msg>
<status status="PASS" starttime="20201030 18:39:30.414" endtime="20201030 18:39:30.416"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:39:30.418" level="INFO">VALUE: [2.5915999999997358e-05, 2.6305000000000772e-05, 2.5972000000002576e-05, 2.5860999999998552e-05, 2.5791000000000702e-05, 2.587500000000159e-05, 2.6276999999998163e-05, 2.6346999999999482e-05, 2.5693999999999717e-05, 2.6374999999998622e-05, 2.6096999999999232e-05, 2.5999999999998247e-05, 2.641699999999733e-05, 2.6624999999998872e-05, 2.5985999999998677e-05, 2.6055999999999996e-05, 2.6098000000002175e-05, 2.6207999999999787e-05, 2.5792000000000176e-05, 2.6278000000001106e-05, 2.6110999999998802e-05, 2.6055999999999996e-05, 2.587500000000159e-05, 2.593099999999987e-05, 2.5806000000003215e-05, 2.595899999999901e-05, 2.6042000000000426e-05, 2.64170000000008e-05, 2.64170000000008e-05, 2.586100000000202e-05, 2.645900000000298e-05, 2.6000000000001716e-05, 2.6264000000001536e-05, 2.6028000000000856e-05, 2.6527000000001882e-05, 2.6458000000000037e-05, 2.5680000000000147e-05, 2.6124999999998372e-05, 2.6583000000000162e-05, 2.6458000000000037e-05, 2.586100000000202e-05, 2.5680000000000147e-05, 2.6054999999997053e-05, 2.6290999999997733e-05, 2.6346999999999482e-05, 2.6110999999998802e-05, 2.6042000000000426e-05, 2.5999999999998247e-05, 2.663900000000191e-05, 2.6055999999999996e-05]</msg>
<status status="PASS" starttime="20201030 18:39:30.417" endtime="20201030 18:39:30.420"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:30.412" endtime="20201030 18:39:30.420"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:39:30.424" endtime="20201030 18:39:30.443"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:30.422" endtime="20201030 18:39:30.444"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:30.421" endtime="20201030 18:39:30.444"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:30.046" endtime="20201030 18:39:30.444"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:30.045" endtime="20201030 18:39:30.444"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:30.453" endtime="20201030 18:39:30.470"></status>
</kw>
<msg timestamp="20201030 18:39:30.470" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:30.452" endtime="20201030 18:39:30.471"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:30.473" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:30.471" endtime="20201030 18:39:30.473"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:30.474" endtime="20201030 18:39:30.475"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:30.449" endtime="20201030 18:39:30.476"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:30.447" endtime="20201030 18:39:30.477"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:30.483" endtime="20201030 18:39:30.769"></status>
</kw>
<msg timestamp="20201030 18:39:30.772" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020626194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020652958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:30.481" endtime="20201030 18:39:30.772"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:30.780" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020626194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020652958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:30.773" endtime="20201030 18:39:30.780"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:30.781" endtime="20201030 18:39:30.783"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:30.479" endtime="20201030 18:39:30.783"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:30.477" endtime="20201030 18:39:30.784"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:39:30.788" level="INFO">${RESULT} = [{'diff': 2.6763999999998567e-05}, {'diff': 2.7110999999999802e-05}, {'diff': 2.7180000000001647e-05}, {'diff': 2.6833000000000412e-05}, {'diff': 2.6736000000002896e-05}, {'diff': 2.740299999999876e-0...</msg>
<status status="PASS" starttime="20201030 18:39:30.784" endtime="20201030 18:39:30.788"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:39:30.793" level="INFO">${ACCURACY} = {'diff': [2.6763999999998567e-05, 2.7110999999999802e-05, 2.7180000000001647e-05, 2.6833000000000412e-05, 2.6736000000002896e-05, 2.740299999999876e-05, 2.7222000000000357e-05, 2.740300000000223e-05, ...</msg>
<status status="PASS" starttime="20201030 18:39:30.789" endtime="20201030 18:39:30.793"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:39:30.798" level="INFO">NAME: accuracy-TIMER_SLEEP-15-philip</msg>
<status status="PASS" starttime="20201030 18:39:30.797" endtime="20201030 18:39:30.799"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:39:30.801" level="INFO">VALUE: [2.6763999999998567e-05, 2.7110999999999802e-05, 2.7180000000001647e-05, 2.6833000000000412e-05, 2.6736000000002896e-05, 2.740299999999876e-05, 2.7222000000000357e-05, 2.740300000000223e-05, 2.6763999999998567e-05, 2.6749999999998997e-05, 2.686100000000302e-05, 2.7291999999998207e-05, 2.6735999999999427e-05, 2.7320000000000816e-05, 2.7624999999999872e-05, 2.6735999999999427e-05, 2.744500000000094e-05, 2.7235999999999927e-05, 2.7528000000002356e-05, 2.7570000000001066e-05, 2.7499999999999747e-05, 2.7624999999999872e-05, 2.6999999999999247e-05, 2.7278000000002106e-05, 2.7111999999999276e-05, 2.6833999999999886e-05, 2.7387999999999718e-05, 2.7110999999999802e-05, 2.713900000000241e-05, 2.6985999999999677e-05, 2.6888999999998692e-05, 2.7555000000002022e-05, 2.6805000000001272e-05, 2.7568999999998123e-05, 2.7277999999998637e-05, 2.7166000000002077e-05, 2.6916000000001827e-05, 2.688900000000216e-05, 2.715299999999851e-05, 2.687500000000259e-05, 2.6750000000002466e-05, 2.665300000000148e-05, 2.7541999999998457e-05, 2.7110999999999802e-05, 2.7278000000002106e-05, 2.6693999999997248e-05, 2.6763999999998567e-05, 2.6860999999999552e-05, 2.7570000000001066e-05, 2.7207999999997318e-05]</msg>
<status status="PASS" starttime="20201030 18:39:30.800" endtime="20201030 18:39:30.802"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:30.794" endtime="20201030 18:39:30.802"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:39:30.806" endtime="20201030 18:39:30.825"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:30.804" endtime="20201030 18:39:30.826"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:30.803" endtime="20201030 18:39:30.826"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:30.445" endtime="20201030 18:39:30.827"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:30.445" endtime="20201030 18:39:30.827"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:30.836" endtime="20201030 18:39:30.851"></status>
</kw>
<msg timestamp="20201030 18:39:30.852" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:30.834" endtime="20201030 18:39:30.852"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:30.854" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:30.853" endtime="20201030 18:39:30.854"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:30.855" endtime="20201030 18:39:30.857"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:30.831" endtime="20201030 18:39:30.857"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:30.829" endtime="20201030 18:39:30.858"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:30.864" endtime="20201030 18:39:31.166"></status>
</kw>
<msg timestamp="20201030 18:39:31.169" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019871153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019899097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:30.863" endtime="20201030 18:39:31.169"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:31.177" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019871153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019899097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:31.170" endtime="20201030 18:39:31.178"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:31.178" endtime="20201030 18:39:31.180"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:30.860" endtime="20201030 18:39:31.180"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:30.858" endtime="20201030 18:39:31.181"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:39:31.185" level="INFO">${RESULT} = [{'diff': 2.7944000000001967e-05}, {'diff': 2.8277999999999637e-05}, {'diff': 2.847300000000108e-05}, {'diff': 2.8653000000000012e-05}, {'diff': 2.8430000000002897e-05}, {'diff': 2.7820000000001316e-0...</msg>
<status status="PASS" starttime="20201030 18:39:31.182" endtime="20201030 18:39:31.185"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:39:31.189" level="INFO">${ACCURACY} = {'diff': [2.7944000000001967e-05, 2.8277999999999637e-05, 2.847300000000108e-05, 2.8653000000000012e-05, 2.8430000000002897e-05, 2.7820000000001316e-05, 2.8138999999999942e-05, 2.79309999999984e-05, 2...</msg>
<status status="PASS" starttime="20201030 18:39:31.186" endtime="20201030 18:39:31.189"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:39:31.194" level="INFO">NAME: accuracy-TIMER_SLEEP-16-philip</msg>
<status status="PASS" starttime="20201030 18:39:31.193" endtime="20201030 18:39:31.194"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:39:31.197" level="INFO">VALUE: [2.7944000000001967e-05, 2.8277999999999637e-05, 2.847300000000108e-05, 2.8653000000000012e-05, 2.8430000000002897e-05, 2.7820000000001316e-05, 2.8138999999999942e-05, 2.79309999999984e-05, 2.793100000000187e-05, 2.8612000000000776e-05, 2.8096999999997763e-05, 2.8527000000000413e-05, 2.8165999999999608e-05, 2.7901999999999788e-05, 2.8347000000001482e-05, 2.8180000000002647e-05, 2.7916000000002827e-05, 2.8625000000000872e-05, 2.8639000000000442e-05, 2.8306000000002246e-05, 2.8054999999999053e-05, 2.8054999999999053e-05, 2.8625000000000872e-05, 2.8402999999999762e-05, 2.7861000000000552e-05, 2.8222000000001357e-05, 2.7943999999998498e-05, 2.816699999999908e-05, 2.7971999999997638e-05, 2.8055999999998527e-05, 2.7986000000000677e-05, 2.7848000000000456e-05, 2.8041999999998957e-05, 2.8027999999999387e-05, 2.7833999999997416e-05, 2.7805999999998277e-05, 2.7777999999999137e-05, 2.7749999999999997e-05, 2.8625000000000872e-05, 2.7749999999999997e-05, 2.8429999999999428e-05, 2.7888000000000218e-05, 2.77369999999999e-05, 2.7958000000001537e-05, 2.8638000000000968e-05, 2.8110999999997333e-05, 2.8040999999999483e-05, 2.8180000000002647e-05, 2.7902999999999262e-05, 2.8625000000000872e-05]</msg>
<status status="PASS" starttime="20201030 18:39:31.195" endtime="20201030 18:39:31.202"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:31.190" endtime="20201030 18:39:31.202"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:39:31.206" endtime="20201030 18:39:31.225"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:31.204" endtime="20201030 18:39:31.226"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:31.203" endtime="20201030 18:39:31.226"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:30.828" endtime="20201030 18:39:31.227"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:30.827" endtime="20201030 18:39:31.227"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:31.235" endtime="20201030 18:39:31.251"></status>
</kw>
<msg timestamp="20201030 18:39:31.252" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:31.234" endtime="20201030 18:39:31.252"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:31.254" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:31.253" endtime="20201030 18:39:31.255"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:31.255" endtime="20201030 18:39:31.257"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:31.231" endtime="20201030 18:39:31.258"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:31.229" endtime="20201030 18:39:31.258"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:31.265" endtime="20201030 18:39:31.550"></status>
</kw>
<msg timestamp="20201030 18:39:31.553" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020718458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0207475, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:39:31.263" endtime="20201030 18:39:31.553"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:31.562" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020718458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0207475, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:39:31.554" endtime="20201030 18:39:31.562"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:31.563" endtime="20201030 18:39:31.564"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:31.260" endtime="20201030 18:39:31.565"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:31.259" endtime="20201030 18:39:31.565"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:39:31.569" level="INFO">${RESULT} = [{'diff': 2.9041999999999957e-05}, {'diff': 2.8653000000000012e-05}, {'diff': 2.8763999999997097e-05}, {'diff': 2.9125000000001372e-05}, {'diff': 2.9167000000000082e-05}, {'diff': 2.9277999999997167e-...</msg>
<status status="PASS" starttime="20201030 18:39:31.566" endtime="20201030 18:39:31.570"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:39:31.573" level="INFO">${ACCURACY} = {'diff': [2.9041999999999957e-05, 2.8653000000000012e-05, 2.8763999999997097e-05, 2.9125000000001372e-05, 2.9167000000000082e-05, 2.9277999999997167e-05, 2.8889000000000692e-05, 2.8736000000001427e-05...</msg>
<status status="PASS" starttime="20201030 18:39:31.570" endtime="20201030 18:39:31.574"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:39:31.578" level="INFO">NAME: accuracy-TIMER_SLEEP-17-philip</msg>
<status status="PASS" starttime="20201030 18:39:31.577" endtime="20201030 18:39:31.578"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:39:31.580" level="INFO">VALUE: [2.9041999999999957e-05, 2.8653000000000012e-05, 2.8763999999997097e-05, 2.9125000000001372e-05, 2.9167000000000082e-05, 2.9277999999997167e-05, 2.8889000000000692e-05, 2.8736000000001427e-05, 2.9457999999999568e-05, 2.94309999999999e-05, 2.870900000000176e-05, 2.9249999999998028e-05, 2.9069999999999097e-05, 2.9068999999999623e-05, 2.922299999999836e-05, 2.9055999999999527e-05, 2.8916999999999832e-05, 2.8861999999997556e-05, 2.9457999999999568e-05, 2.9417000000000332e-05, 2.9041000000000483e-05, 2.9207999999999318e-05, 2.8638999999996972e-05, 2.9125000000001372e-05, 2.9111000000001802e-05, 2.9249999999998028e-05, 2.9346999999999013e-05, 2.9556000000000027e-05, 2.969499999999972e-05, 2.9277999999997167e-05, 2.9486000000002177e-05, 2.9153000000000512e-05, 2.9361000000002052e-05, 2.9582999999999693e-05, 2.8721999999998388e-05, 2.868100000000262e-05, 2.8875000000001122e-05, 2.9014000000000817e-05, 2.868100000000262e-05, 2.9541999999996987e-05, 2.9292000000000207e-05, 2.8861000000001552e-05, 2.9070000000002566e-05, 2.9041999999999957e-05, 2.9041999999999957e-05, 2.919499999999922e-05, 2.8874999999997653e-05, 2.8791000000000233e-05, 2.9097999999998236e-05, 2.868099999999915e-05]</msg>
<status status="PASS" starttime="20201030 18:39:31.579" endtime="20201030 18:39:31.582"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:31.574" endtime="20201030 18:39:31.583"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:39:31.587" endtime="20201030 18:39:31.607"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:31.585" endtime="20201030 18:39:31.607"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:31.584" endtime="20201030 18:39:31.608"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:31.228" endtime="20201030 18:39:31.608"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:31.227" endtime="20201030 18:39:31.608"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:31.617" endtime="20201030 18:39:31.632"></status>
</kw>
<msg timestamp="20201030 18:39:31.633" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:31.615" endtime="20201030 18:39:31.633"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:31.635" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:31.634" endtime="20201030 18:39:31.636"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:31.637" endtime="20201030 18:39:31.638"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:31.613" endtime="20201030 18:39:31.639"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:31.611" endtime="20201030 18:39:31.639"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:31.646" endtime="20201030 18:39:31.931"></status>
</kw>
<msg timestamp="20201030 18:39:31.934" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020191792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020221681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:31.644" endtime="20201030 18:39:31.934"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:31.942" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020191792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020221681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:31.935" endtime="20201030 18:39:31.943"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:31.944" endtime="20201030 18:39:31.945"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:31.641" endtime="20201030 18:39:31.946"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:31.640" endtime="20201030 18:39:31.946"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:39:31.950" level="INFO">${RESULT} = [{'diff': 2.9888999999998223e-05}, {'diff': 2.9736000000002427e-05}, {'diff': 3.065299999999854e-05}, {'diff': 2.9985999999999208e-05}, {'diff': 3.0221999999999888e-05}, {'diff': 2.9916999999997362e-0...</msg>
<status status="PASS" starttime="20201030 18:39:31.947" endtime="20201030 18:39:31.950"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:39:31.955" level="INFO">${ACCURACY} = {'diff': [2.9888999999998223e-05, 2.9736000000002427e-05, 3.065299999999854e-05, 2.9985999999999208e-05, 3.0221999999999888e-05, 2.9916999999997362e-05, 3.0042000000000957e-05, 3.063899999999897e-05, ...</msg>
<status status="PASS" starttime="20201030 18:39:31.951" endtime="20201030 18:39:31.955"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:39:31.960" level="INFO">NAME: accuracy-TIMER_SLEEP-18-philip</msg>
<status status="PASS" starttime="20201030 18:39:31.959" endtime="20201030 18:39:31.960"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:39:31.962" level="INFO">VALUE: [2.9888999999998223e-05, 2.9736000000002427e-05, 3.065299999999854e-05, 2.9985999999999208e-05, 3.0221999999999888e-05, 2.9916999999997362e-05, 3.0042000000000957e-05, 3.063899999999897e-05, 3.06249999999994e-05, 3.05700000000006e-05, 2.9806000000000277e-05, 2.9916999999997362e-05, 3.0402999999998293e-05, 2.998699999999868e-05, 2.9750000000001997e-05, 3.0112000000002276e-05, 3.0167000000001082e-05, 2.9707999999999818e-05, 3.0028000000001387e-05, 3.0290999999998264e-05, 2.9860999999999083e-05, 3.0040999999998014e-05, 3.06249999999994e-05, 3.0235999999999458e-05, 3.058300000000069e-05, 2.9985999999999208e-05, 2.9846999999999513e-05, 3.052800000000189e-05, 3.0056000000000527e-05, 3.0431000000000902e-05, 3.06249999999994e-05, 2.9681000000000152e-05, 2.9736000000002427e-05, 3.0208000000000318e-05, 2.9902999999997792e-05, 2.9860999999999083e-05, 3.0124999999998903e-05, 3.0347999999999486e-05, 3.0041999999997487e-05, 2.969499999999972e-05, 2.9763999999998098e-05, 3.023699999999893e-05, 3.0584000000000167e-05, 2.9792000000000707e-05, 2.9681000000000152e-05, 2.9874999999998653e-05, 2.9749999999998528e-05, 2.9694000000000248e-05, 3.0526999999998944e-05, 3.016599999999814e-05]</msg>
<status status="PASS" starttime="20201030 18:39:31.961" endtime="20201030 18:39:31.963"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:31.956" endtime="20201030 18:39:31.964"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:39:31.967" endtime="20201030 18:39:31.987"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:31.966" endtime="20201030 18:39:31.988"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:31.965" endtime="20201030 18:39:31.988"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:31.609" endtime="20201030 18:39:31.988"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:31.608" endtime="20201030 18:39:31.988"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:31.998" endtime="20201030 18:39:32.014"></status>
</kw>
<msg timestamp="20201030 18:39:32.015" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:31.995" endtime="20201030 18:39:32.015"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:32.018" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:32.016" endtime="20201030 18:39:32.018"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:32.019" endtime="20201030 18:39:32.020"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:31.993" endtime="20201030 18:39:32.021"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:31.991" endtime="20201030 18:39:32.021"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:32.028" endtime="20201030 18:39:32.315"></status>
</kw>
<msg timestamp="20201030 18:39:32.320" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020916458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020947403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:32.026" endtime="20201030 18:39:32.320"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:32.331" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020916458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020947403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:32.321" endtime="20201030 18:39:32.331"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:32.332" endtime="20201030 18:39:32.334"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:32.024" endtime="20201030 18:39:32.335"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:32.022" endtime="20201030 18:39:32.337"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:39:32.342" level="INFO">${RESULT} = [{'diff': 3.094500000000097e-05}, {'diff': 3.087499999999965e-05}, {'diff': 3.116699999999861e-05}, {'diff': 3.087499999999965e-05}, {'diff': 3.144500000000147e-05}, {'diff': 3.1540999999999514e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:39:32.339" endtime="20201030 18:39:32.342"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:39:32.346" level="INFO">${ACCURACY} = {'diff': [3.094500000000097e-05, 3.087499999999965e-05, 3.116699999999861e-05, 3.087499999999965e-05, 3.144500000000147e-05, 3.1540999999999514e-05, 3.138899999999972e-05, 3.065199999999907e-05, 3.087...</msg>
<status status="PASS" starttime="20201030 18:39:32.343" endtime="20201030 18:39:32.346"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:39:32.351" level="INFO">NAME: accuracy-TIMER_SLEEP-19-philip</msg>
<status status="PASS" starttime="20201030 18:39:32.350" endtime="20201030 18:39:32.351"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:39:32.353" level="INFO">VALUE: [3.094500000000097e-05, 3.087499999999965e-05, 3.116699999999861e-05, 3.087499999999965e-05, 3.144500000000147e-05, 3.1540999999999514e-05, 3.138899999999972e-05, 3.065199999999907e-05, 3.087500000000312e-05, 3.1026999999999444e-05, 3.163899999999997e-05, 3.1526999999999944e-05, 3.116599999999914e-05, 3.086100000000008e-05, 3.14579999999981e-05, 3.095900000000054e-05, 3.079200000000171e-05, 3.145800000000157e-05, 3.140299999999929e-05, 3.0804999999998334e-05, 3.129199999999874e-05, 3.1582999999998224e-05, 3.1540999999999514e-05, 3.095800000000107e-05, 3.104199999999849e-05, 3.1568999999998654e-05, 3.129199999999874e-05, 3.116699999999861e-05, 3.141600000000286e-05, 3.068100000000115e-05, 3.127799999999917e-05, 3.118100000000165e-05, 3.15700000000016e-05, 3.145899999999757e-05, 3.07639999999991e-05, 3.0861999999999556e-05, 3.111100000000033e-05, 3.145800000000157e-05, 3.099999999999978e-05, 3.088899999999922e-05, 3.115199999999957e-05, 3.111100000000033e-05, 3.073599999999996e-05, 3.133300000000144e-05, 3.099999999999978e-05, 3.092999999999846e-05, 3.098600000000021e-05, 3.169499999999825e-05, 3.104199999999849e-05, 3.093000000000193e-05]</msg>
<status status="PASS" starttime="20201030 18:39:32.352" endtime="20201030 18:39:32.354"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:32.347" endtime="20201030 18:39:32.355"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:39:32.358" endtime="20201030 18:39:32.378"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:32.357" endtime="20201030 18:39:32.378"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:32.355" endtime="20201030 18:39:32.379"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:31.989" endtime="20201030 18:39:32.379"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:31.989" endtime="20201030 18:39:32.379"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:32.388" endtime="20201030 18:39:32.408"></status>
</kw>
<msg timestamp="20201030 18:39:32.409" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:32.386" endtime="20201030 18:39:32.409"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:32.414" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:32.411" endtime="20201030 18:39:32.415"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:32.416" endtime="20201030 18:39:32.420"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:32.383" endtime="20201030 18:39:32.421"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:32.381" endtime="20201030 18:39:32.422"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:32.435" endtime="20201030 18:39:32.727"></status>
</kw>
<msg timestamp="20201030 18:39:32.730" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023024264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023056917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:32.432" endtime="20201030 18:39:32.731"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:32.738" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023024264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023056917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:32.731" endtime="20201030 18:39:32.739"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:32.740" endtime="20201030 18:39:32.741"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:32.426" endtime="20201030 18:39:32.742"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:32.423" endtime="20201030 18:39:32.742"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:39:32.746" level="INFO">${RESULT} = [{'diff': 3.265300000000054e-05}, {'diff': 3.222299999999789e-05}, {'diff': 3.17640000000001e-05}, {'diff': 3.216699999999961e-05}, {'diff': 3.220799999999885e-05}, {'diff': 3.229199999999974e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:39:32.743" endtime="20201030 18:39:32.747"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:39:32.751" level="INFO">${ACCURACY} = {'diff': [3.265300000000054e-05, 3.222299999999789e-05, 3.17640000000001e-05, 3.216699999999961e-05, 3.220799999999885e-05, 3.229199999999974e-05, 3.222299999999789e-05, 3.236100000000158e-05, 3.26390...</msg>
<status status="PASS" starttime="20201030 18:39:32.747" endtime="20201030 18:39:32.751"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:39:32.755" level="INFO">NAME: accuracy-TIMER_SLEEP-20-philip</msg>
<status status="PASS" starttime="20201030 18:39:32.754" endtime="20201030 18:39:32.755"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:39:32.758" level="INFO">VALUE: [3.265300000000054e-05, 3.222299999999789e-05, 3.17640000000001e-05, 3.216699999999961e-05, 3.220799999999885e-05, 3.229199999999974e-05, 3.222299999999789e-05, 3.236100000000158e-05, 3.263900000000097e-05, 3.169400000000225e-05, 3.172199999999792e-05, 3.1804999999999334e-05, 3.2276999999997225e-05, 3.169400000000225e-05, 3.1790999999999764e-05, 3.2332999999998974e-05, 3.170799999999835e-05, 3.22779999999967e-05, 3.222200000000189e-05, 3.187500000000065e-05, 3.176399999999663e-05, 3.175000000000053e-05, 3.2332999999998974e-05, 3.180599999999881e-05, 3.177799999999967e-05, 3.234700000000201e-05, 3.202799999999992e-05, 3.229199999999974e-05, 3.204199999999949e-05, 3.186100000000108e-05, 3.254199999999999e-05, 3.169399999999878e-05, 3.193099999999893e-05, 3.240300000000029e-05, 3.190299999999979e-05, 3.187500000000065e-05, 3.2110999999997863e-05, 3.2290999999996794e-05, 3.249999999999781e-05, 3.24579999999991e-05, 3.217999999999971e-05, 3.241699999999986e-05, 3.22640000000006e-05, 3.2624999999997933e-05, 3.227800000000017e-05, 3.2096999999998294e-05, 3.1818999999998904e-05, 3.240300000000029e-05, 3.26250000000014e-05, 3.216699999999961e-05]</msg>
<status status="PASS" starttime="20201030 18:39:32.756" endtime="20201030 18:39:32.759"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:32.751" endtime="20201030 18:39:32.760"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:39:32.763" endtime="20201030 18:39:32.783"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:32.762" endtime="20201030 18:39:32.783"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:32.761" endtime="20201030 18:39:32.784"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:32.380" endtime="20201030 18:39:32.784"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:32.379" endtime="20201030 18:39:32.784"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:32.793" endtime="20201030 18:39:32.809"></status>
</kw>
<msg timestamp="20201030 18:39:32.809" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:32.791" endtime="20201030 18:39:32.809"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:32.812" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:32.810" endtime="20201030 18:39:32.812"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:32.813" endtime="20201030 18:39:32.814"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:32.789" endtime="20201030 18:39:32.815"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:32.787" endtime="20201030 18:39:32.815"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:32.822" endtime="20201030 18:39:33.108"></status>
</kw>
<msg timestamp="20201030 18:39:33.111" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01975225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019785694, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:39:32.820" endtime="20201030 18:39:33.112"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:33.120" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01975225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019785694, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:39:33.113" endtime="20201030 18:39:33.120"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:33.121" endtime="20201030 18:39:33.122"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:32.818" endtime="20201030 18:39:33.123"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:32.816" endtime="20201030 18:39:33.123"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:39:33.127" level="INFO">${RESULT} = [{'diff': 3.344400000000053e-05}, {'diff': 3.357000000000013e-05}, {'diff': 3.280599999999981e-05}, {'diff': 3.297299999999864e-05}, {'diff': 3.3624999999998934e-05}, {'diff': 3.323600000000246e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:39:33.124" endtime="20201030 18:39:33.128"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:39:33.133" level="INFO">${ACCURACY} = {'diff': [3.344400000000053e-05, 3.357000000000013e-05, 3.280599999999981e-05, 3.297299999999864e-05, 3.3624999999998934e-05, 3.323600000000246e-05, 3.3040999999997545e-05, 3.274999999999806e-05, 3.29...</msg>
<status status="PASS" starttime="20201030 18:39:33.128" endtime="20201030 18:39:33.133"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:39:33.137" level="INFO">NAME: accuracy-TIMER_SLEEP-21-philip</msg>
<status status="PASS" starttime="20201030 18:39:33.136" endtime="20201030 18:39:33.137"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:39:33.140" level="INFO">VALUE: [3.344400000000053e-05, 3.357000000000013e-05, 3.280599999999981e-05, 3.297299999999864e-05, 3.3624999999998934e-05, 3.323600000000246e-05, 3.3040999999997545e-05, 3.274999999999806e-05, 3.299999999999831e-05, 3.3332999999999974e-05, 3.318000000000071e-05, 3.32640000000016e-05, 3.313900000000147e-05, 3.340300000000129e-05, 3.319400000000028e-05, 3.3069000000000154e-05, 3.311100000000233e-05, 3.293099999999993e-05, 3.316700000000061e-05, 3.268099999999968e-05, 3.351399999999838e-05, 3.304200000000049e-05, 3.357000000000013e-05, 3.338800000000225e-05, 3.282000000000285e-05, 3.293099999999993e-05, 3.318100000000018e-05, 3.280599999999981e-05, 3.300000000000178e-05, 3.3596999999999794e-05, 3.3596999999999794e-05, 3.305600000000006e-05, 3.3026999999997975e-05, 3.323599999999899e-05, 3.266600000000064e-05, 3.318000000000071e-05, 3.3569000000000654e-05, 3.294400000000003e-05, 3.365299999999807e-05, 3.300000000000178e-05, 3.3319000000000404e-05, 3.291700000000036e-05, 3.268000000000021e-05, 3.340299999999782e-05, 3.3082999999999724e-05, 3.365299999999807e-05, 3.315300000000104e-05, 3.347199999999967e-05, 3.298599999999874e-05, 3.273700000000143e-05]</msg>
<status status="PASS" starttime="20201030 18:39:33.138" endtime="20201030 18:39:33.140"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:33.133" endtime="20201030 18:39:33.141"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:39:33.145" endtime="20201030 18:39:33.164"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:33.143" endtime="20201030 18:39:33.165"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:33.142" endtime="20201030 18:39:33.165"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:32.785" endtime="20201030 18:39:33.165"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:32.785" endtime="20201030 18:39:33.165"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:33.174" endtime="20201030 18:39:33.190"></status>
</kw>
<msg timestamp="20201030 18:39:33.190" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:33.172" endtime="20201030 18:39:33.190"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:33.193" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:33.191" endtime="20201030 18:39:33.193"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:33.194" endtime="20201030 18:39:33.195"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:33.170" endtime="20201030 18:39:33.196"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:33.168" endtime="20201030 18:39:33.197"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:33.204" endtime="20201030 18:39:33.511"></status>
</kw>
<msg timestamp="20201030 18:39:33.514" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019724542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019758972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:33.202" endtime="20201030 18:39:33.515"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:33.522" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019724542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019758972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:33.515" endtime="20201030 18:39:33.523"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:33.524" endtime="20201030 18:39:33.525"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:33.200" endtime="20201030 18:39:33.526"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:33.198" endtime="20201030 18:39:33.526"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:39:33.530" level="INFO">${RESULT} = [{'diff': 3.442999999999849e-05}, {'diff': 3.427800000000217e-05}, {'diff': 3.369500000000025e-05}, {'diff': 3.3847000000000044e-05}, {'diff': 3.39580000000006e-05}, {'diff': 3.374999999999906e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:39:33.527" endtime="20201030 18:39:33.530"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:39:33.534" level="INFO">${ACCURACY} = {'diff': [3.442999999999849e-05, 3.427800000000217e-05, 3.369500000000025e-05, 3.3847000000000044e-05, 3.39580000000006e-05, 3.374999999999906e-05, 3.387500000000265e-05, 3.405599999999759e-05, 3.3820...</msg>
<status status="PASS" starttime="20201030 18:39:33.531" endtime="20201030 18:39:33.534"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:39:33.539" level="INFO">NAME: accuracy-TIMER_SLEEP-22-philip</msg>
<status status="PASS" starttime="20201030 18:39:33.538" endtime="20201030 18:39:33.539"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:39:33.541" level="INFO">VALUE: [3.442999999999849e-05, 3.427800000000217e-05, 3.369500000000025e-05, 3.3847000000000044e-05, 3.39580000000006e-05, 3.374999999999906e-05, 3.387500000000265e-05, 3.405599999999759e-05, 3.382000000000038e-05, 3.379200000000124e-05, 3.4402999999998823e-05, 3.427800000000217e-05, 3.4152999999998573e-05, 3.441699999999839e-05, 3.380599999999734e-05, 3.393100000000093e-05, 3.382000000000038e-05, 3.391699999999789e-05, 3.455599999999809e-05, 3.3860999999999614e-05, 3.4624999999999934e-05, 3.4554999999998615e-05, 3.4624999999999934e-05, 3.447200000000067e-05, 3.419399999999781e-05, 3.4138999999999003e-05, 3.4110999999999864e-05, 3.377800000000167e-05, 3.443099999999796e-05, 3.441700000000186e-05, 3.4388999999999253e-05, 3.391700000000136e-05, 3.4124999999999434e-05, 3.455600000000156e-05, 3.416700000000161e-05, 3.386199999999909e-05, 3.416699999999814e-05, 3.4611000000000364e-05, 3.402799999999845e-05, 3.3776999999998725e-05, 3.3874999999999184e-05, 3.456999999999766e-05, 3.373599999999949e-05, 3.4374999999999684e-05, 3.369500000000025e-05, 3.433400000000045e-05, 3.4290999999998795e-05, 3.4583000000001224e-05, 3.3819000000000904e-05, 3.4305000000001834e-05]</msg>
<status status="PASS" starttime="20201030 18:39:33.540" endtime="20201030 18:39:33.542"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:33.535" endtime="20201030 18:39:33.542"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:39:33.546" endtime="20201030 18:39:33.565"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:33.544" endtime="20201030 18:39:33.566"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:33.543" endtime="20201030 18:39:33.566"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:33.166" endtime="20201030 18:39:33.567"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:33.166" endtime="20201030 18:39:33.567"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:33.575" endtime="20201030 18:39:33.592"></status>
</kw>
<msg timestamp="20201030 18:39:33.593" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:33.574" endtime="20201030 18:39:33.593"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:33.595" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:33.594" endtime="20201030 18:39:33.595"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:33.596" endtime="20201030 18:39:33.598"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:33.571" endtime="20201030 18:39:33.598"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:33.569" endtime="20201030 18:39:33.599"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:33.605" endtime="20201030 18:39:33.891"></status>
</kw>
<msg timestamp="20201030 18:39:33.894" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020628, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020663014, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:39:33.604" endtime="20201030 18:39:33.894"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:33.902" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020628, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020663014, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:39:33.895" endtime="20201030 18:39:33.903"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:33.903" endtime="20201030 18:39:33.905"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:33.601" endtime="20201030 18:39:33.906"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:33.599" endtime="20201030 18:39:33.906"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:39:33.910" level="INFO">${RESULT} = [{'diff': 3.501399999999988e-05}, {'diff': 3.493099999999846e-05}, {'diff': 3.482000000000138e-05}, {'diff': 3.475000000000006e-05}, {'diff': 3.493099999999846e-05}, {'diff': 3.529199999999927e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:39:33.907" endtime="20201030 18:39:33.910"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:39:33.914" level="INFO">${ACCURACY} = {'diff': [3.501399999999988e-05, 3.493099999999846e-05, 3.482000000000138e-05, 3.475000000000006e-05, 3.493099999999846e-05, 3.529199999999927e-05, 3.5360999999997644e-05, 3.4875000000000184e-05, 3.51...</msg>
<status status="PASS" starttime="20201030 18:39:33.911" endtime="20201030 18:39:33.914"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:39:33.919" level="INFO">NAME: accuracy-TIMER_SLEEP-23-philip</msg>
<status status="PASS" starttime="20201030 18:39:33.918" endtime="20201030 18:39:33.919"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:39:33.921" level="INFO">VALUE: [3.501399999999988e-05, 3.493099999999846e-05, 3.482000000000138e-05, 3.475000000000006e-05, 3.493099999999846e-05, 3.529199999999927e-05, 3.5360999999997644e-05, 3.4875000000000184e-05, 3.5166999999999143e-05, 3.504199999999902e-05, 3.468100000000168e-05, 3.550000000000081e-05, 3.4804999999998865e-05, 3.469399999999831e-05, 3.472200000000092e-05, 3.522199999999795e-05, 3.522200000000142e-05, 3.5569000000002654e-05, 3.5360999999997644e-05, 3.541700000000286e-05, 3.5639000000000504e-05, 3.491699999999889e-05, 3.4804999999998865e-05, 3.518100000000218e-05, 3.5596999999998324e-05, 3.47779999999992e-05, 3.518099999999871e-05, 3.526400000000013e-05, 3.522199999999795e-05, 3.559800000000127e-05, 3.557000000000213e-05, 3.500000000000031e-05, 3.518100000000218e-05, 3.494499999999803e-05, 3.498700000000021e-05, 3.472200000000092e-05, 3.529199999999927e-05, 3.468100000000168e-05, 3.520800000000185e-05, 3.473600000000049e-05, 3.526400000000013e-05, 3.526399999999666e-05, 3.4819000000001904e-05, 3.4861000000000614e-05, 3.523600000000099e-05, 3.522199999999795e-05, 3.5402999999999823e-05, 3.502799999999945e-05, 3.475000000000006e-05, 3.5111000000000864e-05]</msg>
<status status="PASS" starttime="20201030 18:39:33.920" endtime="20201030 18:39:33.923"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:33.915" endtime="20201030 18:39:33.923"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:39:33.927" endtime="20201030 18:39:33.946"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:33.925" endtime="20201030 18:39:33.947"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:33.924" endtime="20201030 18:39:33.947"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:33.568" endtime="20201030 18:39:33.948"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:33.567" endtime="20201030 18:39:33.948"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:33.956" endtime="20201030 18:39:33.972"></status>
</kw>
<msg timestamp="20201030 18:39:33.973" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:33.955" endtime="20201030 18:39:33.973"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:33.975" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:33.974" endtime="20201030 18:39:33.976"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:33.976" endtime="20201030 18:39:33.978"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:33.952" endtime="20201030 18:39:33.979"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:33.950" endtime="20201030 18:39:33.979"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:33.985" endtime="20201030 18:39:34.289"></status>
</kw>
<msg timestamp="20201030 18:39:34.293" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019613875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019649764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:33.984" endtime="20201030 18:39:34.293"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:34.302" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019613875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019649764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:34.294" endtime="20201030 18:39:34.303"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:34.303" endtime="20201030 18:39:34.305"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:33.981" endtime="20201030 18:39:34.306"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:33.980" endtime="20201030 18:39:34.306"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:39:34.311" level="INFO">${RESULT} = [{'diff': 3.5889000000000754e-05}, {'diff': 3.593099999999946e-05}, {'diff': 3.656999999999966e-05}, {'diff': 3.6167000000000143e-05}, {'diff': 3.580599999999934e-05}, {'diff': 3.595900000000207e-05},...</msg>
<status status="PASS" starttime="20201030 18:39:34.307" endtime="20201030 18:39:34.311"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:39:34.317" level="INFO">${ACCURACY} = {'diff': [3.5889000000000754e-05, 3.593099999999946e-05, 3.656999999999966e-05, 3.6167000000000143e-05, 3.580599999999934e-05, 3.595900000000207e-05, 3.6374999999998214e-05, 3.6375000000001684e-05, 3....</msg>
<status status="PASS" starttime="20201030 18:39:34.312" endtime="20201030 18:39:34.317"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:39:34.322" level="INFO">NAME: accuracy-TIMER_SLEEP-24-philip</msg>
<status status="PASS" starttime="20201030 18:39:34.321" endtime="20201030 18:39:34.322"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:39:34.325" level="INFO">VALUE: [3.5889000000000754e-05, 3.593099999999946e-05, 3.656999999999966e-05, 3.6167000000000143e-05, 3.580599999999934e-05, 3.595900000000207e-05, 3.6374999999998214e-05, 3.6375000000001684e-05, 3.570900000000182e-05, 3.5875000000001184e-05, 3.576400000000063e-05, 3.6276999999997755e-05, 3.611199999999787e-05, 3.629200000000027e-05, 3.570800000000235e-05, 3.616600000000067e-05, 3.61520000000011e-05, 3.6639000000001504e-05, 3.652800000000095e-05, 3.6596999999999325e-05, 3.6055000000000115e-05, 3.627799999999723e-05, 3.57780000000002e-05, 3.567999999999974e-05, 3.6430999999999963e-05, 3.626400000000113e-05, 3.580599999999934e-05, 3.655600000000009e-05, 3.593099999999946e-05, 3.620799999999938e-05, 3.6375000000001684e-05, 3.59589999999986e-05, 3.6624999999998464e-05, 3.573599999999802e-05, 3.581999999999891e-05, 3.6152999999997104e-05, 3.5804999999999865e-05, 3.6403000000000824e-05, 3.6526999999998006e-05, 3.6625000000001934e-05, 3.6276999999997755e-05, 3.5818999999999435e-05, 3.6110999999998394e-05, 3.569399999999931e-05, 3.6083000000002724e-05, 3.619399999999981e-05, 3.573600000000149e-05, 3.620799999999938e-05, 3.6638999999998034e-05, 3.5861000000001614e-05]</msg>
<status status="PASS" starttime="20201030 18:39:34.323" endtime="20201030 18:39:34.326"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:34.318" endtime="20201030 18:39:34.326"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:39:34.330" endtime="20201030 18:39:34.350"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:34.329" endtime="20201030 18:39:34.351"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:34.328" endtime="20201030 18:39:34.351"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:33.949" endtime="20201030 18:39:34.351"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:33.948" endtime="20201030 18:39:34.352"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:34.360" endtime="20201030 18:39:34.377"></status>
</kw>
<msg timestamp="20201030 18:39:34.377" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:34.359" endtime="20201030 18:39:34.377"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:34.380" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:34.378" endtime="20201030 18:39:34.380"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:34.381" endtime="20201030 18:39:34.382"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:34.356" endtime="20201030 18:39:34.383"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:34.354" endtime="20201030 18:39:34.383"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:34.390" endtime="20201030 18:39:34.678"></status>
</kw>
<msg timestamp="20201030 18:39:34.682" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020595208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020632847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:34.388" endtime="20201030 18:39:34.682"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:34.690" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020595208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020632847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:34.683" endtime="20201030 18:39:34.690"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:34.691" endtime="20201030 18:39:34.693"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:34.385" endtime="20201030 18:39:34.693"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:34.384" endtime="20201030 18:39:34.694"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:39:34.698" level="INFO">${RESULT} = [{'diff': 3.7638999999999034e-05}, {'diff': 3.7569000000001185e-05}, {'diff': 3.7152999999998104e-05}, {'diff': 3.7624999999999464e-05}, {'diff': 3.7568999999997715e-05}, {'diff': 3.7333000000000505e-...</msg>
<status status="PASS" starttime="20201030 18:39:34.694" endtime="20201030 18:39:34.698"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:39:34.702" level="INFO">${ACCURACY} = {'diff': [3.7638999999999034e-05, 3.7569000000001185e-05, 3.7152999999998104e-05, 3.7624999999999464e-05, 3.7568999999997715e-05, 3.7333000000000505e-05, 3.67780000000012e-05, 3.74720000000002e-05, 3....</msg>
<status status="PASS" starttime="20201030 18:39:34.699" endtime="20201030 18:39:34.703"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:39:34.708" level="INFO">NAME: accuracy-TIMER_SLEEP-25-philip</msg>
<status status="PASS" starttime="20201030 18:39:34.706" endtime="20201030 18:39:34.708"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:39:34.711" level="INFO">VALUE: [3.7638999999999034e-05, 3.7569000000001185e-05, 3.7152999999998104e-05, 3.7624999999999464e-05, 3.7568999999997715e-05, 3.7333000000000505e-05, 3.67780000000012e-05, 3.74720000000002e-05, 3.673599999999902e-05, 3.72919999999978e-05, 3.74720000000002e-05, 3.757000000000066e-05, 3.757000000000066e-05, 3.74590000000001e-05, 3.7653000000002074e-05, 3.723599999999952e-05, 3.7360999999999644e-05, 3.74590000000001e-05, 3.736200000000259e-05, 3.749999999999934e-05, 3.686199999999862e-05, 3.7124999999998964e-05, 3.7069000000000685e-05, 3.7554999999998145e-05, 3.6833000000000005e-05, 3.722199999999995e-05, 3.7291000000001795e-05, 3.673599999999902e-05, 3.7416999999997924e-05, 3.7096999999999825e-05, 3.7403000000001824e-05, 3.7055000000001115e-05, 3.7111000000002864e-05, 3.704199999999755e-05, 3.752799999999848e-05, 3.680600000000034e-05, 3.7110999999999394e-05, 3.698600000000274e-05, 3.75979999999998e-05, 3.74590000000001e-05, 3.7096999999999825e-05, 3.7389000000002254e-05, 3.74590000000001e-05, 3.704200000000102e-05, 3.722199999999995e-05, 3.748699999999924e-05, 3.7374999999999214e-05, 3.69719999999997e-05, 3.7097000000003294e-05, 3.7305000000001365e-05]</msg>
<status status="PASS" starttime="20201030 18:39:34.709" endtime="20201030 18:39:34.712"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:34.703" endtime="20201030 18:39:34.712"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:39:34.716" endtime="20201030 18:39:34.736"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:34.715" endtime="20201030 18:39:34.737"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:34.713" endtime="20201030 18:39:34.738"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:34.353" endtime="20201030 18:39:34.738"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:34.352" endtime="20201030 18:39:34.739"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:34.751" endtime="20201030 18:39:34.770"></status>
</kw>
<msg timestamp="20201030 18:39:34.771" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:34.749" endtime="20201030 18:39:34.771"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:34.773" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:34.772" endtime="20201030 18:39:34.773"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:34.774" endtime="20201030 18:39:34.776"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:34.745" endtime="20201030 18:39:34.776"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:34.742" endtime="20201030 18:39:34.777"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:34.783" endtime="20201030 18:39:35.089"></status>
</kw>
<msg timestamp="20201030 18:39:35.092" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027264694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027303222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:34.782" endtime="20201030 18:39:35.092"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:35.100" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027264694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027303222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:35.093" endtime="20201030 18:39:35.100"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:35.101" endtime="20201030 18:39:35.103"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:34.779" endtime="20201030 18:39:35.103"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:34.777" endtime="20201030 18:39:35.104"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:39:35.108" level="INFO">${RESULT} = [{'diff': 3.852799999999948e-05}, {'diff': 3.7791000000002295e-05}, {'diff': 3.7790999999998826e-05}, {'diff': 3.7874999999999714e-05}, {'diff': 3.79720000000007e-05}, {'diff': 3.8361000000000645e-05}...</msg>
<status status="PASS" starttime="20201030 18:39:35.104" endtime="20201030 18:39:35.108"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:39:35.112" level="INFO">${ACCURACY} = {'diff': [3.852799999999948e-05, 3.7791000000002295e-05, 3.7790999999998826e-05, 3.7874999999999714e-05, 3.79720000000007e-05, 3.8361000000000645e-05, 3.822200000000095e-05, 3.822199999999748e-05, 3.8...</msg>
<status status="PASS" starttime="20201030 18:39:35.109" endtime="20201030 18:39:35.112"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:39:35.116" level="INFO">NAME: accuracy-TIMER_SLEEP-26-philip</msg>
<status status="PASS" starttime="20201030 18:39:35.115" endtime="20201030 18:39:35.117"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:39:35.119" level="INFO">VALUE: [3.852799999999948e-05, 3.7791000000002295e-05, 3.7790999999998826e-05, 3.7874999999999714e-05, 3.79720000000007e-05, 3.8361000000000645e-05, 3.822200000000095e-05, 3.822199999999748e-05, 3.822200000000095e-05, 3.8416999999998924e-05, 3.8110999999996925e-05, 3.8347000000001075e-05, 3.808400000000073e-05, 3.852800000000295e-05, 3.8416999999998924e-05, 3.782000000000091e-05, 3.8444999999998064e-05, 3.8069000000001685e-05, 3.81659999999992e-05, 3.840199999999988e-05, 3.825000000000009e-05, 3.8347000000001075e-05, 3.7818999999997965e-05, 3.8290999999999326e-05, 3.8625000000000465e-05, 3.7945000000001033e-05, 3.8054999999998645e-05, 3.792999999999852e-05, 3.8624999999996995e-05, 3.8402999999999354e-05, 3.842999999999902e-05, 3.804200000000202e-05, 3.776400000000263e-05, 3.8639000000000034e-05, 3.8347000000001075e-05, 3.773600000000002e-05, 3.858400000000123e-05, 3.852799999999948e-05, 3.7889000000002754e-05, 3.834800000000055e-05, 3.773600000000002e-05, 3.7861000000000145e-05, 3.788799999999981e-05, 3.8625000000000465e-05, 3.817999999999877e-05, 3.79720000000007e-05, 3.791599999999895e-05, 3.769400000000131e-05, 3.8568999999998715e-05, 3.794400000000156e-05]</msg>
<status status="PASS" starttime="20201030 18:39:35.118" endtime="20201030 18:39:35.121"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:35.113" endtime="20201030 18:39:35.121"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:39:35.125" endtime="20201030 18:39:35.144"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:35.123" endtime="20201030 18:39:35.145"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:35.122" endtime="20201030 18:39:35.145"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:34.740" endtime="20201030 18:39:35.146"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:34.739" endtime="20201030 18:39:35.146"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:35.154" endtime="20201030 18:39:35.171"></status>
</kw>
<msg timestamp="20201030 18:39:35.171" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:35.153" endtime="20201030 18:39:35.171"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:35.174" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:35.172" endtime="20201030 18:39:35.174"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:35.175" endtime="20201030 18:39:35.176"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:35.150" endtime="20201030 18:39:35.177"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:35.148" endtime="20201030 18:39:35.177"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:35.184" endtime="20201030 18:39:35.470"></status>
</kw>
<msg timestamp="20201030 18:39:35.473" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019877194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019916153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:35.182" endtime="20201030 18:39:35.473"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:35.481" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019877194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019916153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:35.474" endtime="20201030 18:39:35.482"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:35.482" endtime="20201030 18:39:35.484"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:35.180" endtime="20201030 18:39:35.485"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:35.178" endtime="20201030 18:39:35.485"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:39:35.489" level="INFO">${RESULT} = [{'diff': 3.8958999999998134e-05}, {'diff': 3.875000000000059e-05}, {'diff': 3.898600000000127e-05}, {'diff': 3.876400000000016e-05}, {'diff': 3.8875000000000715e-05}, {'diff': 3.927800000000023e-05},...</msg>
<status status="PASS" starttime="20201030 18:39:35.486" endtime="20201030 18:39:35.489"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:39:35.494" level="INFO">${ACCURACY} = {'diff': [3.8958999999998134e-05, 3.875000000000059e-05, 3.898600000000127e-05, 3.876400000000016e-05, 3.8875000000000715e-05, 3.927800000000023e-05, 3.9041000000000076e-05, 3.9582999999999285e-05, 3....</msg>
<status status="PASS" starttime="20201030 18:39:35.490" endtime="20201030 18:39:35.494"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:39:35.499" level="INFO">NAME: accuracy-TIMER_SLEEP-27-philip</msg>
<status status="PASS" starttime="20201030 18:39:35.498" endtime="20201030 18:39:35.499"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:39:35.501" level="INFO">VALUE: [3.8958999999998134e-05, 3.875000000000059e-05, 3.898600000000127e-05, 3.876400000000016e-05, 3.8875000000000715e-05, 3.927800000000023e-05, 3.9041000000000076e-05, 3.9582999999999285e-05, 3.892999999999952e-05, 3.872200000000145e-05, 3.9111000000001395e-05, 3.9582999999999285e-05, 3.8902999999999854e-05, 3.872200000000145e-05, 3.869399999999884e-05, 3.9639000000001035e-05, 3.9680999999999744e-05, 3.904199999999955e-05, 3.970799999999941e-05, 3.8861000000001145e-05, 3.8889000000000284e-05, 3.880600000000234e-05, 3.8930999999998994e-05, 3.8875000000000715e-05, 3.8680999999998744e-05, 3.908399999999826e-05, 3.8695000000001784e-05, 3.9431000000002964e-05, 3.886200000000062e-05, 3.911200000000087e-05, 3.945799999999916e-05, 3.893000000000299e-05, 3.9319000000002935e-05, 3.8889000000000284e-05, 3.9027000000000506e-05, 3.9639000000001035e-05, 3.952800000000048e-05, 3.8804999999999396e-05, 3.9416999999999924e-05, 3.9347000000002075e-05, 3.92919999999998e-05, 3.8930999999998994e-05, 3.8916999999999424e-05, 3.905599999999912e-05, 3.927800000000023e-05, 3.8681000000002214e-05, 3.8861000000001145e-05, 3.8639000000000034e-05, 3.8861000000001145e-05, 3.8861000000001145e-05]</msg>
<status status="PASS" starttime="20201030 18:39:35.500" endtime="20201030 18:39:35.502"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:35.495" endtime="20201030 18:39:35.502"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:39:35.506" endtime="20201030 18:39:35.526"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:35.505" endtime="20201030 18:39:35.526"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:35.503" endtime="20201030 18:39:35.527"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:35.147" endtime="20201030 18:39:35.527"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:35.146" endtime="20201030 18:39:35.527"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:35.536" endtime="20201030 18:39:35.552"></status>
</kw>
<msg timestamp="20201030 18:39:35.552" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:35.534" endtime="20201030 18:39:35.553"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:35.555" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:35.553" endtime="20201030 18:39:35.555"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:35.556" endtime="20201030 18:39:35.558"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:35.532" endtime="20201030 18:39:35.558"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:35.529" endtime="20201030 18:39:35.559"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:35.565" endtime="20201030 18:39:35.851"></status>
</kw>
<msg timestamp="20201030 18:39:35.855" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020022542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020062764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:35.564" endtime="20201030 18:39:35.855"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:35.863" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020022542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020062764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:35.856" endtime="20201030 18:39:35.863"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:35.864" endtime="20201030 18:39:35.866"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:35.561" endtime="20201030 18:39:35.866"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:35.559" endtime="20201030 18:39:35.867"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:39:35.871" level="INFO">${RESULT} = [{'diff': 4.022199999999948e-05}, {'diff': 4.0181000000000244e-05}, {'diff': 4.0110999999998925e-05}, {'diff': 4.0124999999998495e-05}, {'diff': 3.975000000000159e-05}, {'diff': 3.9973000000002173e-05...</msg>
<status status="PASS" starttime="20201030 18:39:35.867" endtime="20201030 18:39:35.871"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:39:35.875" level="INFO">${ACCURACY} = {'diff': [4.022199999999948e-05, 4.0181000000000244e-05, 4.0110999999998925e-05, 4.0124999999998495e-05, 3.975000000000159e-05, 3.9973000000002173e-05, 4.011200000000187e-05, 4.0290999999997856e-05, 3...</msg>
<status status="PASS" starttime="20201030 18:39:35.872" endtime="20201030 18:39:35.875"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:39:35.879" level="INFO">NAME: accuracy-TIMER_SLEEP-28-philip</msg>
<status status="PASS" starttime="20201030 18:39:35.878" endtime="20201030 18:39:35.880"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:39:35.882" level="INFO">VALUE: [4.022199999999948e-05, 4.0181000000000244e-05, 4.0110999999998925e-05, 4.0124999999998495e-05, 3.975000000000159e-05, 3.9973000000002173e-05, 4.011200000000187e-05, 4.0290999999997856e-05, 3.968000000000027e-05, 4.0402999999997885e-05, 4.0346999999999605e-05, 4.0041000000001076e-05, 4.0653000000001605e-05, 4.0388999999998315e-05, 4.0402999999997885e-05, 3.9930999999999994e-05, 4.0638999999998565e-05, 3.993000000000052e-05, 4.0333000000000035e-05, 3.999999999999837e-05, 4.051400000000191e-05, 3.980599999999987e-05, 3.9958999999999134e-05, 4.0403000000001354e-05, 3.9833000000003005e-05, 4.000000000000184e-05, 4.0624999999998995e-05, 3.9875000000001715e-05, 4.0431000000000494e-05, 4.0167000000000674e-05, 4.065200000000213e-05, 4.00980000000023e-05, 3.9930999999999994e-05, 4.018000000000077e-05, 3.974999999999812e-05, 4.0360999999999175e-05, 3.975000000000159e-05, 3.9861000000002145e-05, 4.023599999999905e-05, 4.02920000000008e-05, 4.044400000000059e-05, 3.972199999999898e-05, 3.99720000000027e-05, 4.048600000000277e-05, 3.9874999999998245e-05, 3.995800000000313e-05, 4.0625000000002465e-05, 4.0167000000000674e-05, 4.0360999999999175e-05, 4.007000000000316e-05]</msg>
<status status="PASS" starttime="20201030 18:39:35.880" endtime="20201030 18:39:35.883"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:35.876" endtime="20201030 18:39:35.883"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:39:35.887" endtime="20201030 18:39:35.906"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:35.885" endtime="20201030 18:39:35.907"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:35.884" endtime="20201030 18:39:35.907"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:35.528" endtime="20201030 18:39:35.908"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:35.527" endtime="20201030 18:39:35.908"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:35.916" endtime="20201030 18:39:35.935"></status>
</kw>
<msg timestamp="20201030 18:39:35.936" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:35.915" endtime="20201030 18:39:35.936"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:35.939" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:35.937" endtime="20201030 18:39:35.939"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:35.940" endtime="20201030 18:39:35.941"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:35.912" endtime="20201030 18:39:35.942"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:35.910" endtime="20201030 18:39:35.942"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:35.949" endtime="20201030 18:39:36.235"></status>
</kw>
<msg timestamp="20201030 18:39:36.239" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0231505, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023192042, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:39:35.947" endtime="20201030 18:39:36.239"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:36.247" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0231505, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023192042, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:39:36.240" endtime="20201030 18:39:36.247"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:36.248" endtime="20201030 18:39:36.249"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:35.945" endtime="20201030 18:39:36.250"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:35.943" endtime="20201030 18:39:36.250"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:39:36.254" level="INFO">${RESULT} = [{'diff': 4.154199999999858e-05}, {'diff': 4.070800000000041e-05}, {'diff': 4.1624999999999995e-05}, {'diff': 4.116599999999873e-05}, {'diff': 4.104199999999808e-05}, {'diff': 4.1611000000000425e-05},...</msg>
<status status="PASS" starttime="20201030 18:39:36.251" endtime="20201030 18:39:36.255"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:39:36.259" level="INFO">${ACCURACY} = {'diff': [4.154199999999858e-05, 4.070800000000041e-05, 4.1624999999999995e-05, 4.116599999999873e-05, 4.104199999999808e-05, 4.1611000000000425e-05, 4.0987000000002743e-05, 4.104199999999808e-05, 4.1...</msg>
<status status="PASS" starttime="20201030 18:39:36.255" endtime="20201030 18:39:36.259"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:39:36.263" level="INFO">NAME: accuracy-TIMER_SLEEP-29-philip</msg>
<status status="PASS" starttime="20201030 18:39:36.262" endtime="20201030 18:39:36.263"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:39:36.266" level="INFO">VALUE: [4.154199999999858e-05, 4.070800000000041e-05, 4.1624999999999995e-05, 4.116599999999873e-05, 4.104199999999808e-05, 4.1611000000000425e-05, 4.0987000000002743e-05, 4.104199999999808e-05, 4.145800000000116e-05, 4.0875000000002715e-05, 4.119399999999787e-05, 4.074999999999912e-05, 4.122199999999701e-05, 4.1110999999999925e-05, 4.1069000000001216e-05, 4.0916999999997955e-05, 4.076399999999869e-05, 4.104200000000155e-05, 4.124999999999962e-05, 4.1209000000000384e-05, 4.1402999999998885e-05, 4.068000000000127e-05, 4.118000000000177e-05, 4.1054999999998176e-05, 4.075000000000259e-05, 4.091599999999848e-05, 4.119400000000134e-05, 4.0861000000003145e-05, 4.1611000000000425e-05, 4.104200000000155e-05, 4.06799999999978e-05, 4.12920000000018e-05, 4.147200000000073e-05, 4.104199999999808e-05, 4.0959000000000134e-05, 4.122200000000048e-05, 4.104199999999808e-05, 4.1124999999999495e-05, 4.073599999999955e-05, 4.123600000000005e-05, 4.1445000000001064e-05, 4.1611000000000425e-05, 4.0805000000001396e-05, 4.0818999999997496e-05, 4.099999999999937e-05, 4.1624999999999995e-05, 4.1638999999999565e-05, 4.1054999999998176e-05, 4.1055000000001646e-05, 4.115200000000263e-05]</msg>
<status status="PASS" starttime="20201030 18:39:36.264" endtime="20201030 18:39:36.271"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:36.259" endtime="20201030 18:39:36.272"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:39:36.276" endtime="20201030 18:39:36.295"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:36.274" endtime="20201030 18:39:36.296"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:36.273" endtime="20201030 18:39:36.296"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:35.909" endtime="20201030 18:39:36.296"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:35.908" endtime="20201030 18:39:36.297"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:36.305" endtime="20201030 18:39:36.323"></status>
</kw>
<msg timestamp="20201030 18:39:36.323" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:36.304" endtime="20201030 18:39:36.323"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:36.326" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:36.324" endtime="20201030 18:39:36.326"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:36.328" endtime="20201030 18:39:36.330"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:36.301" endtime="20201030 18:39:36.331"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:36.299" endtime="20201030 18:39:36.331"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:36.340" endtime="20201030 18:39:36.628"></status>
</kw>
<msg timestamp="20201030 18:39:36.631" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020433222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02047525, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:39:36.338" endtime="20201030 18:39:36.631"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:36.639" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020433222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02047525, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:39:36.632" endtime="20201030 18:39:36.639"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:36.640" endtime="20201030 18:39:36.642"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:36.334" endtime="20201030 18:39:36.642"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:36.332" endtime="20201030 18:39:36.643"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:39:36.647" level="INFO">${RESULT} = [{'diff': 4.202799999999951e-05}, {'diff': 4.2653000000000135e-05}, {'diff': 4.177799999999926e-05}, {'diff': 4.257000000000219e-05}, {'diff': 4.19860000000008e-05}, {'diff': 4.1861000000000675e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:39:36.643" endtime="20201030 18:39:36.647"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:39:36.652" level="INFO">${ACCURACY} = {'diff': [4.202799999999951e-05, 4.2653000000000135e-05, 4.177799999999926e-05, 4.257000000000219e-05, 4.19860000000008e-05, 4.1861000000000675e-05, 4.1680999999998275e-05, 4.2361000000001175e-05, 4.1...</msg>
<status status="PASS" starttime="20201030 18:39:36.648" endtime="20201030 18:39:36.652"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:39:36.657" level="INFO">NAME: accuracy-TIMER_SLEEP-30-philip</msg>
<status status="PASS" starttime="20201030 18:39:36.655" endtime="20201030 18:39:36.657"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:39:36.659" level="INFO">VALUE: [4.202799999999951e-05, 4.2653000000000135e-05, 4.177799999999926e-05, 4.257000000000219e-05, 4.19860000000008e-05, 4.1861000000000675e-05, 4.1680999999998275e-05, 4.2361000000001175e-05, 4.1875000000000245e-05, 4.173600000000055e-05, 4.2347000000001606e-05, 4.2625000000000995e-05, 4.226400000000019e-05, 4.1804999999998926e-05, 4.2597000000001856e-05, 4.241599999999998e-05, 4.2304999999999426e-05, 4.2347000000001606e-05, 4.222199999999801e-05, 4.166599999999923e-05, 4.169400000000184e-05, 4.2653000000000135e-05, 4.2360999999997706e-05, 4.223600000000105e-05, 4.223599999999758e-05, 4.173599999999708e-05, 4.204199999999908e-05, 4.173600000000055e-05, 4.2152999999999635e-05, 4.2458999999998165e-05, 4.1875000000000245e-05, 4.1680999999998275e-05, 4.18059999999984e-05, 4.169400000000184e-05, 4.182000000000144e-05, 4.2054999999999176e-05, 4.223600000000105e-05, 4.21799999999993e-05, 4.1805000000002396e-05, 4.19860000000008e-05, 4.1776999999999787e-05, 4.1680999999998275e-05, 4.222200000000148e-05, 4.170800000000141e-05, 4.195800000000166e-05, 4.1818999999998496e-05, 4.204200000000255e-05, 4.1931000000001994e-05, 4.173600000000055e-05, 4.204199999999908e-05]</msg>
<status status="PASS" starttime="20201030 18:39:36.658" endtime="20201030 18:39:36.660"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:36.652" endtime="20201030 18:39:36.661"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:39:36.665" endtime="20201030 18:39:36.685"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:36.663" endtime="20201030 18:39:36.685"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:36.662" endtime="20201030 18:39:36.685"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:36.297" endtime="20201030 18:39:36.686"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:36.297" endtime="20201030 18:39:36.686"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:36.695" endtime="20201030 18:39:36.712"></status>
</kw>
<msg timestamp="20201030 18:39:36.713" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:36.693" endtime="20201030 18:39:36.713"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:36.715" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:36.714" endtime="20201030 18:39:36.715"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:36.716" endtime="20201030 18:39:36.718"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:36.691" endtime="20201030 18:39:36.718"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:36.688" endtime="20201030 18:39:36.719"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:36.725" endtime="20201030 18:39:37.012"></status>
</kw>
<msg timestamp="20201030 18:39:37.015" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01980575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019849208, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:39:36.724" endtime="20201030 18:39:37.015"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:37.023" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01980575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019849208, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:39:37.016" endtime="20201030 18:39:37.024"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:37.025" endtime="20201030 18:39:37.026"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:36.721" endtime="20201030 18:39:37.027"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:36.719" endtime="20201030 18:39:37.027"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:39:37.031" level="INFO">${RESULT} = [{'diff': 4.345799999999969e-05}, {'diff': 4.2818999999999496e-05}, {'diff': 4.29999999999979e-05}, {'diff': 4.3041000000000607e-05}, {'diff': 4.294399999999962e-05}, {'diff': 4.2930999999999525e-05},...</msg>
<status status="PASS" starttime="20201030 18:39:37.028" endtime="20201030 18:39:37.031"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:39:37.035" level="INFO">${ACCURACY} = {'diff': [4.345799999999969e-05, 4.2818999999999496e-05, 4.29999999999979e-05, 4.3041000000000607e-05, 4.294399999999962e-05, 4.2930999999999525e-05, 4.3375000000001745e-05, 4.3318999999999996e-05, 4....</msg>
<status status="PASS" starttime="20201030 18:39:37.032" endtime="20201030 18:39:37.036"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:39:37.040" level="INFO">NAME: accuracy-TIMER_SLEEP-31-philip</msg>
<status status="PASS" starttime="20201030 18:39:37.039" endtime="20201030 18:39:37.040"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:39:37.042" level="INFO">VALUE: [4.345799999999969e-05, 4.2818999999999496e-05, 4.29999999999979e-05, 4.3041000000000607e-05, 4.294399999999962e-05, 4.2930999999999525e-05, 4.3375000000001745e-05, 4.3318999999999996e-05, 4.282000000000244e-05, 4.3152999999997166e-05, 4.2804999999999926e-05, 4.3431000000000025e-05, 4.3291000000000857e-05, 4.3096999999998886e-05, 4.359800000000233e-05, 4.300000000000137e-05, 4.2903000000000385e-05, 4.270800000000241e-05, 4.355600000000015e-05, 4.275000000000112e-05, 4.3096999999998886e-05, 4.3096999999998886e-05, 4.3110999999998456e-05, 4.34999999999984e-05, 4.3096999999998886e-05, 4.3639000000001565e-05, 4.3610999999998956e-05, 4.322199999999901e-05, 4.3110999999998456e-05, 4.3639000000001565e-05, 4.3111000000001926e-05, 4.2889000000000815e-05, 4.276400000000069e-05, 4.2930999999999525e-05, 4.2694999999998845e-05, 4.326299999999825e-05, 4.297199999999876e-05, 4.2832999999999066e-05, 4.2874999999997776e-05, 4.28059999999994e-05, 4.3389000000001315e-05, 4.3360999999998706e-05, 4.2818999999999496e-05, 4.297199999999876e-05, 4.297200000000223e-05, 4.322199999999901e-05, 4.327800000000076e-05, 4.341600000000098e-05, 4.272199999999851e-05, 4.329199999999686e-05]</msg>
<status status="PASS" starttime="20201030 18:39:37.041" endtime="20201030 18:39:37.043"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:37.036" endtime="20201030 18:39:37.044"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:39:37.048" endtime="20201030 18:39:37.067"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:37.046" endtime="20201030 18:39:37.068"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:37.045" endtime="20201030 18:39:37.068"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:36.687" endtime="20201030 18:39:37.068"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:36.686" endtime="20201030 18:39:37.068"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:37.077" endtime="20201030 18:39:37.094"></status>
</kw>
<msg timestamp="20201030 18:39:37.095" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:37.075" endtime="20201030 18:39:37.095"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:37.097" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:37.096" endtime="20201030 18:39:37.097"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:37.098" endtime="20201030 18:39:37.100"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:37.073" endtime="20201030 18:39:37.100"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:37.071" endtime="20201030 18:39:37.101"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:37.107" endtime="20201030 18:39:37.393"></status>
</kw>
<msg timestamp="20201030 18:39:37.397" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020654597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020698861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:37.106" endtime="20201030 18:39:37.397"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:37.405" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020654597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020698861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:37.398" endtime="20201030 18:39:37.405"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:37.406" endtime="20201030 18:39:37.408"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:37.103" endtime="20201030 18:39:37.408"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:37.101" endtime="20201030 18:39:37.409"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:39:37.413" level="INFO">${RESULT} = [{'diff': 4.426399999999872e-05}, {'diff': 4.416600000000173e-05}, {'diff': 4.405499999999771e-05}, {'diff': 4.422200000000001e-05}, {'diff': 4.423599999999958e-05}, {'diff': 4.4569000000001247e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:39:37.410" endtime="20201030 18:39:37.413"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:39:37.417" level="INFO">${ACCURACY} = {'diff': [4.426399999999872e-05, 4.416600000000173e-05, 4.405499999999771e-05, 4.422200000000001e-05, 4.423599999999958e-05, 4.4569000000001247e-05, 4.39860000000028e-05, 4.420800000000044e-05, 4.3777...</msg>
<status status="PASS" starttime="20201030 18:39:37.414" endtime="20201030 18:39:37.417"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:39:37.422" level="INFO">NAME: accuracy-TIMER_SLEEP-32-philip</msg>
<status status="PASS" starttime="20201030 18:39:37.421" endtime="20201030 18:39:37.422"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:39:37.424" level="INFO">VALUE: [4.426399999999872e-05, 4.416600000000173e-05, 4.405499999999771e-05, 4.422200000000001e-05, 4.423599999999958e-05, 4.4569000000001247e-05, 4.39860000000028e-05, 4.420800000000044e-05, 4.377799999999779e-05, 4.457000000000072e-05, 4.376400000000169e-05, 4.423600000000305e-05, 4.3874999999998776e-05, 4.377799999999779e-05, 4.4417000000001455e-05, 4.386200000000215e-05, 4.4222999999999485e-05, 4.426399999999872e-05, 4.3860999999999206e-05, 4.369400000000037e-05, 4.416600000000173e-05, 4.423600000000305e-05, 4.427800000000176e-05, 4.3874999999998776e-05, 4.4110999999999456e-05, 4.456899999999778e-05, 4.3819000000000496e-05, 4.4181000000000775e-05, 4.427800000000176e-05, 4.4195000000000345e-05, 4.4208999999999915e-05, 4.4403000000001885e-05, 4.4638999999999096e-05, 4.458400000000029e-05, 4.4166999999997736e-05, 4.4624999999999526e-05, 4.433399999999657e-05, 4.429199999999786e-05, 4.4402999999998416e-05, 4.3917000000000955e-05, 4.4624999999999526e-05, 4.395800000000019e-05, 4.4347000000000136e-05, 4.4583000000000816e-05, 4.4403000000001885e-05, 4.3902999999997916e-05, 4.398599999999933e-05, 4.379200000000083e-05, 4.380499999999746e-05, 4.4610999999999956e-05]</msg>
<status status="PASS" starttime="20201030 18:39:37.423" endtime="20201030 18:39:37.426"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:37.418" endtime="20201030 18:39:37.426"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:39:37.430" endtime="20201030 18:39:37.449"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:37.429" endtime="20201030 18:39:37.450"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:37.427" endtime="20201030 18:39:37.450"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:37.069" endtime="20201030 18:39:37.451"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:37.069" endtime="20201030 18:39:37.451"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:37.459" endtime="20201030 18:39:37.475"></status>
</kw>
<msg timestamp="20201030 18:39:37.476" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:37.458" endtime="20201030 18:39:37.476"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:37.478" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:37.477" endtime="20201030 18:39:37.479"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:37.479" endtime="20201030 18:39:37.481"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:37.455" endtime="20201030 18:39:37.481"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:37.453" endtime="20201030 18:39:37.482"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:37.488" endtime="20201030 18:39:37.775"></status>
</kw>
<msg timestamp="20201030 18:39:37.778" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019707931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019752681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:37.487" endtime="20201030 18:39:37.778"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:37.786" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019707931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019752681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:37.779" endtime="20201030 18:39:37.786"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:37.787" endtime="20201030 18:39:37.789"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:37.484" endtime="20201030 18:39:37.789"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:37.482" endtime="20201030 18:39:37.790"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:39:37.794" level="INFO">${RESULT} = [{'diff': 4.474999999999965e-05}, {'diff': 4.529099999999939e-05}, {'diff': 4.463799999999962e-05}, {'diff': 4.545799999999822e-05}, {'diff': 4.493000000000205e-05}, {'diff': 4.5111000000000456e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:39:37.790" endtime="20201030 18:39:37.794"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:39:37.800" level="INFO">${ACCURACY} = {'diff': [4.474999999999965e-05, 4.529099999999939e-05, 4.463799999999962e-05, 4.545799999999822e-05, 4.493000000000205e-05, 4.5111000000000456e-05, 4.4819000000001497e-05, 4.547199999999779e-05, 4.52...</msg>
<status status="PASS" starttime="20201030 18:39:37.795" endtime="20201030 18:39:37.800"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:39:37.804" level="INFO">NAME: accuracy-TIMER_SLEEP-33-philip</msg>
<status status="PASS" starttime="20201030 18:39:37.803" endtime="20201030 18:39:37.805"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:39:37.807" level="INFO">VALUE: [4.474999999999965e-05, 4.529099999999939e-05, 4.463799999999962e-05, 4.545799999999822e-05, 4.493000000000205e-05, 4.5111000000000456e-05, 4.4819000000001497e-05, 4.547199999999779e-05, 4.526399999999972e-05, 4.555599999999868e-05, 4.5138999999999596e-05, 4.482000000000097e-05, 4.536099999999724e-05, 4.5639000000000096e-05, 4.4695000000000845e-05, 4.49999999999999e-05, 4.533400000000104e-05, 4.534699999999767e-05, 4.534800000000061e-05, 4.475000000000312e-05, 4.558400000000129e-05, 4.558299999999835e-05, 4.548599999999736e-05, 4.523600000000058e-05, 4.525000000000015e-05, 4.483400000000054e-05, 4.5083000000001316e-05, 4.476399999999922e-05, 4.5361000000000706e-05, 4.474999999999965e-05, 4.526399999999972e-05, 4.4722999999999985e-05, 4.5388999999999846e-05, 4.529200000000233e-05, 4.5181000000001775e-05, 4.529199999999886e-05, 4.4945000000001095e-05, 4.5458999999997696e-05, 4.523600000000058e-05, 4.529199999999886e-05, 4.504199999999861e-05, 4.55000000000004e-05, 4.525000000000015e-05, 4.541599999999951e-05, 4.517999999999883e-05, 4.470800000000094e-05, 4.5695000000001845e-05, 4.505499999999871e-05, 4.5569000000002247e-05, 4.536099999999724e-05]</msg>
<status status="PASS" starttime="20201030 18:39:37.805" endtime="20201030 18:39:37.807"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:37.801" endtime="20201030 18:39:37.808"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:39:37.812" endtime="20201030 18:39:37.831"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:37.810" endtime="20201030 18:39:37.832"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:37.809" endtime="20201030 18:39:37.832"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:37.452" endtime="20201030 18:39:37.832"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:37.451" endtime="20201030 18:39:37.833"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:37.841" endtime="20201030 18:39:37.859"></status>
</kw>
<msg timestamp="20201030 18:39:37.859" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:37.840" endtime="20201030 18:39:37.859"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:37.861" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:37.860" endtime="20201030 18:39:37.862"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:37.863" endtime="20201030 18:39:37.864"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:37.837" endtime="20201030 18:39:37.865"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:37.835" endtime="20201030 18:39:37.865"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:37.872" endtime="20201030 18:39:38.159"></status>
</kw>
<msg timestamp="20201030 18:39:38.162" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020433528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020479778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:37.870" endtime="20201030 18:39:38.162"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:38.170" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020433528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020479778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:38.163" endtime="20201030 18:39:38.170"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:38.171" endtime="20201030 18:39:38.173"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:37.868" endtime="20201030 18:39:38.173"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:37.866" endtime="20201030 18:39:38.174"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:39:38.178" level="INFO">${RESULT} = [{'diff': 4.625000000000115e-05}, {'diff': 4.652800000000054e-05}, {'diff': 4.6430999999999556e-05}, {'diff': 4.575000000000065e-05}, {'diff': 4.5695000000001845e-05}, {'diff': 4.5875000000000776e-05}...</msg>
<status status="PASS" starttime="20201030 18:39:38.174" endtime="20201030 18:39:38.178"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:39:38.182" level="INFO">${ACCURACY} = {'diff': [4.625000000000115e-05, 4.652800000000054e-05, 4.6430999999999556e-05, 4.575000000000065e-05, 4.5695000000001845e-05, 4.5875000000000776e-05, 4.626400000000072e-05, 4.634699999999867e-05, 4.6...</msg>
<status status="PASS" starttime="20201030 18:39:38.179" endtime="20201030 18:39:38.182"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:39:38.186" level="INFO">NAME: accuracy-TIMER_SLEEP-34-philip</msg>
<status status="PASS" starttime="20201030 18:39:38.185" endtime="20201030 18:39:38.187"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:39:38.189" level="INFO">VALUE: [4.625000000000115e-05, 4.652800000000054e-05, 4.6430999999999556e-05, 4.575000000000065e-05, 4.5695000000001845e-05, 4.5875000000000776e-05, 4.626400000000072e-05, 4.634699999999867e-05, 4.605500000000318e-05, 4.622200000000201e-05, 4.567999999999933e-05, 4.624999999999768e-05, 4.662499999999806e-05, 4.6430999999999556e-05, 4.663899999999763e-05, 4.6639000000001096e-05, 4.63329999999991e-05, 4.58190000000025e-05, 4.577799999999979e-05, 4.629199999999986e-05, 4.63329999999991e-05, 4.583400000000154e-05, 4.583399999999807e-05, 4.6403000000000416e-05, 4.6153000000000166e-05, 4.605599999999918e-05, 4.658399999999882e-05, 4.5875000000000776e-05, 4.661099999999849e-05, 4.658299999999935e-05, 4.604100000000014e-05, 4.605499999999971e-05, 4.630499999999996e-05, 4.647199999999879e-05, 4.6139000000000596e-05, 4.629199999999986e-05, 4.6166999999999736e-05, 4.658299999999935e-05, 4.608400000000179e-05, 4.63329999999991e-05, 4.583400000000154e-05, 4.651400000000097e-05, 4.622199999999854e-05, 4.634800000000161e-05, 4.633400000000204e-05, 4.580599999999893e-05, 4.5680999999998806e-05, 4.623599999999811e-05, 4.6222999999998016e-05, 4.604100000000014e-05]</msg>
<status status="PASS" starttime="20201030 18:39:38.188" endtime="20201030 18:39:38.190"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:38.183" endtime="20201030 18:39:38.190"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:39:38.194" endtime="20201030 18:39:38.214"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:38.192" endtime="20201030 18:39:38.214"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:38.191" endtime="20201030 18:39:38.215"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:37.833" endtime="20201030 18:39:38.215"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:37.833" endtime="20201030 18:39:38.215"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:38.227" endtime="20201030 18:39:38.247"></status>
</kw>
<msg timestamp="20201030 18:39:38.247" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:38.225" endtime="20201030 18:39:38.248"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:38.250" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:38.248" endtime="20201030 18:39:38.250"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:38.251" endtime="20201030 18:39:38.253"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:38.221" endtime="20201030 18:39:38.253"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:38.218" endtime="20201030 18:39:38.254"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:38.260" endtime="20201030 18:39:38.562"></status>
</kw>
<msg timestamp="20201030 18:39:38.565" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025536681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025583806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:38.259" endtime="20201030 18:39:38.565"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:38.573" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025536681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025583806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:38.566" endtime="20201030 18:39:38.574"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:38.574" endtime="20201030 18:39:38.576"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:38.256" endtime="20201030 18:39:38.577"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:38.254" endtime="20201030 18:39:38.577"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:39:38.581" level="INFO">${RESULT} = [{'diff': 4.7125000000002026e-05}, {'diff': 4.68199999999995e-05}, {'diff': 4.732e-05}, {'diff': 4.694400000000015e-05}, {'diff': 4.75269999999986e-05}, {'diff': 4.693000000000058e-05}, {'diff': 4.747...</msg>
<status status="PASS" starttime="20201030 18:39:38.578" endtime="20201030 18:39:38.581"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:39:38.585" level="INFO">${ACCURACY} = {'diff': [4.7125000000002026e-05, 4.68199999999995e-05, 4.732e-05, 4.694400000000015e-05, 4.75269999999986e-05, 4.693000000000058e-05, 4.747199999999979e-05, 4.758300000000035e-05, 4.687499999999831e-...</msg>
<status status="PASS" starttime="20201030 18:39:38.582" endtime="20201030 18:39:38.585"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:39:38.589" level="INFO">NAME: accuracy-TIMER_SLEEP-35-philip</msg>
<status status="PASS" starttime="20201030 18:39:38.588" endtime="20201030 18:39:38.590"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:39:38.592" level="INFO">VALUE: [4.7125000000002026e-05, 4.68199999999995e-05, 4.732e-05, 4.694400000000015e-05, 4.75269999999986e-05, 4.693000000000058e-05, 4.747199999999979e-05, 4.758300000000035e-05, 4.687499999999831e-05, 4.752799999999807e-05, 4.7167000000000736e-05, 4.7389000000001846e-05, 4.726400000000172e-05, 4.7139000000001596e-05, 4.682000000000297e-05, 4.709699999999942e-05, 4.686099999999874e-05, 4.752799999999807e-05, 4.734799999999914e-05, 4.680599999999993e-05, 4.6723000000001985e-05, 4.729200000000086e-05, 4.686199999999821e-05, 4.741599999999804e-05, 4.737499999999881e-05, 4.675000000000165e-05, 4.694400000000015e-05, 4.7139000000001596e-05, 4.670799999999947e-05, 4.723599999999911e-05, 4.722199999999954e-05, 4.6931000000000056e-05, 4.724999999999868e-05, 4.745800000000022e-05, 4.730600000000043e-05, 4.6889000000001346e-05, 4.745800000000022e-05, 4.6694999999999376e-05, 4.705600000000018e-05, 4.7236999999998586e-05, 4.705600000000018e-05, 4.75269999999986e-05, 4.7236999999998586e-05, 4.709699999999942e-05, 4.715200000000169e-05, 4.681900000000003e-05, 4.705500000000071e-05, 4.741599999999804e-05, 4.709699999999942e-05, 4.675000000000165e-05]</msg>
<status status="PASS" starttime="20201030 18:39:38.590" endtime="20201030 18:39:38.593"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:38.586" endtime="20201030 18:39:38.594"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:39:38.598" endtime="20201030 18:39:38.617"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:38.596" endtime="20201030 18:39:38.618"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:38.595" endtime="20201030 18:39:38.618"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:38.216" endtime="20201030 18:39:38.618"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:38.216" endtime="20201030 18:39:38.618"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:38.627" endtime="20201030 18:39:38.643"></status>
</kw>
<msg timestamp="20201030 18:39:38.643" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:38.626" endtime="20201030 18:39:38.644"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:38.646" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:38.644" endtime="20201030 18:39:38.646"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:38.647" endtime="20201030 18:39:38.649"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:38.623" endtime="20201030 18:39:38.649"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:38.621" endtime="20201030 18:39:38.650"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:38.657" endtime="20201030 18:39:38.943"></status>
</kw>
<msg timestamp="20201030 18:39:38.946" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019836972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019884972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:38.655" endtime="20201030 18:39:38.947"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:38.955" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019836972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019884972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:38.947" endtime="20201030 18:39:38.955"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:38.956" endtime="20201030 18:39:38.957"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:38.652" endtime="20201030 18:39:38.958"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:38.650" endtime="20201030 18:39:38.958"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:39:38.962" level="INFO">${RESULT} = [{'diff': 4.799999999999943e-05}, {'diff': 4.791599999999854e-05}, {'diff': 4.809700000000042e-05}, {'diff': 4.838899999999938e-05}, {'diff': 4.856900000000178e-05}, {'diff': 4.8153000000002166e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:39:38.959" endtime="20201030 18:39:38.963"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:39:38.967" level="INFO">${ACCURACY} = {'diff': [4.799999999999943e-05, 4.791599999999854e-05, 4.809700000000042e-05, 4.838899999999938e-05, 4.856900000000178e-05, 4.8153000000002166e-05, 4.862500000000006e-05, 4.8013999999999e-05, 4.86389...</msg>
<status status="PASS" starttime="20201030 18:39:38.963" endtime="20201030 18:39:38.968"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:39:38.972" level="INFO">NAME: accuracy-TIMER_SLEEP-36-philip</msg>
<status status="PASS" starttime="20201030 18:39:38.971" endtime="20201030 18:39:38.972"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:39:38.974" level="INFO">VALUE: [4.799999999999943e-05, 4.791599999999854e-05, 4.809700000000042e-05, 4.838899999999938e-05, 4.856900000000178e-05, 4.8153000000002166e-05, 4.862500000000006e-05, 4.8013999999999e-05, 4.863899999999963e-05, 4.791599999999854e-05, 4.863899999999963e-05, 4.811099999999999e-05, 4.809799999999989e-05, 4.8236999999999586e-05, 4.857000000000125e-05, 4.787499999999931e-05, 4.861199999999996e-05, 4.822200000000054e-05, 4.772200000000004e-05, 4.76940000000009e-05, 4.812499999999956e-05, 4.852799999999907e-05, 4.775000000000265e-05, 4.811099999999999e-05, 4.781900000000103e-05, 4.829199999999839e-05, 4.862500000000006e-05, 4.822200000000054e-05, 4.787499999999931e-05, 4.7722999999999516e-05, 4.774999999999918e-05, 4.824999999999968e-05, 4.807000000000075e-05, 4.804199999999814e-05, 4.8153000000002166e-05, 4.813799999999965e-05, 4.811099999999999e-05, 4.776400000000222e-05, 4.826299999999978e-05, 4.804100000000214e-05, 4.823600000000011e-05, 4.76940000000009e-05, 4.780499999999799e-05, 4.834700000000067e-05, 4.7917000000001486e-05, 4.863899999999963e-05, 4.7681000000000806e-05, 4.838899999999938e-05, 4.823600000000011e-05, 4.8375000000003276e-05]</msg>
<status status="PASS" starttime="20201030 18:39:38.973" endtime="20201030 18:39:38.975"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:38.968" endtime="20201030 18:39:38.976"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:39:38.980" endtime="20201030 18:39:38.999"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:38.978" endtime="20201030 18:39:39.000"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:38.977" endtime="20201030 18:39:39.000"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:38.619" endtime="20201030 18:39:39.000"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:38.619" endtime="20201030 18:39:39.000"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:39.009" endtime="20201030 18:39:39.027"></status>
</kw>
<msg timestamp="20201030 18:39:39.027" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:39.008" endtime="20201030 18:39:39.028"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:39.030" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:39.028" endtime="20201030 18:39:39.030"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:39.031" endtime="20201030 18:39:39.032"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:39.005" endtime="20201030 18:39:39.033"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:39.003" endtime="20201030 18:39:39.033"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:39.040" endtime="20201030 18:39:39.343"></status>
</kw>
<msg timestamp="20201030 18:39:39.350" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020808639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020857972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:39.038" endtime="20201030 18:39:39.351"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:39.368" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020808639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020857972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:39.353" endtime="20201030 18:39:39.369"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:39.370" endtime="20201030 18:39:39.371"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:39.036" endtime="20201030 18:39:39.372"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:39.034" endtime="20201030 18:39:39.372"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:39:39.376" level="INFO">${RESULT} = [{'diff': 4.933299999999863e-05}, {'diff': 4.938900000000038e-05}, {'diff': 4.947199999999832e-05}, {'diff': 4.956899999999931e-05}, {'diff': 4.95270000000006e-05}, {'diff': 4.867999999999886e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:39:39.373" endtime="20201030 18:39:39.377"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:39:39.381" level="INFO">${ACCURACY} = {'diff': [4.933299999999863e-05, 4.938900000000038e-05, 4.947199999999832e-05, 4.956899999999931e-05, 4.95270000000006e-05, 4.867999999999886e-05, 4.962499999999759e-05, 4.875000000000018e-05, 4.90970...</msg>
<status status="PASS" starttime="20201030 18:39:39.377" endtime="20201030 18:39:39.381"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:39:39.385" level="INFO">NAME: accuracy-TIMER_SLEEP-37-philip</msg>
<status status="PASS" starttime="20201030 18:39:39.384" endtime="20201030 18:39:39.385"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:39:39.388" level="INFO">VALUE: [4.933299999999863e-05, 4.938900000000038e-05, 4.947199999999832e-05, 4.956899999999931e-05, 4.95270000000006e-05, 4.867999999999886e-05, 4.962499999999759e-05, 4.875000000000018e-05, 4.909700000000142e-05, 4.9014e-05, 4.95140000000005e-05, 4.927800000000329e-05, 4.900000000000043e-05, 4.9181000000002306e-05, 4.8723000000000516e-05, 4.908300000000185e-05, 4.8945000000001626e-05, 4.930599999999896e-05, 4.9181000000002306e-05, 4.909800000000089e-05, 4.906899999999881e-05, 4.906999999999828e-05, 4.940200000000047e-05, 4.927700000000035e-05, 4.887500000000031e-05, 4.919399999999893e-05, 4.955600000000268e-05, 4.894499999999816e-05, 4.945800000000222e-05, 4.916699999999927e-05, 4.949999999999746e-05, 4.950000000000093e-05, 4.8681000000001806e-05, 4.891699999999902e-05, 4.923600000000111e-05, 4.923600000000111e-05, 4.884700000000117e-05, 4.8695000000001376e-05, 4.929199999999939e-05, 4.955599999999921e-05, 4.86940000000019e-05, 4.957000000000225e-05, 4.962500000000106e-05, 4.897199999999782e-05, 4.956899999999931e-05, 4.904099999999967e-05, 4.936100000000124e-05, 4.927799999999982e-05, 4.900000000000043e-05, 4.916699999999927e-05]</msg>
<status status="PASS" starttime="20201030 18:39:39.386" endtime="20201030 18:39:39.388"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:39.381" endtime="20201030 18:39:39.389"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:39:39.392" endtime="20201030 18:39:39.412"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:39.391" endtime="20201030 18:39:39.413"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:39.390" endtime="20201030 18:39:39.413"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:39.001" endtime="20201030 18:39:39.413"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:39.001" endtime="20201030 18:39:39.413"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:39.422" endtime="20201030 18:39:39.441"></status>
</kw>
<msg timestamp="20201030 18:39:39.441" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:39.420" endtime="20201030 18:39:39.441"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:39.444" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:39.442" endtime="20201030 18:39:39.444"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:39.445" endtime="20201030 18:39:39.447"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:39.418" endtime="20201030 18:39:39.447"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:39.416" endtime="20201030 18:39:39.448"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:39.454" endtime="20201030 18:39:39.740"></status>
</kw>
<msg timestamp="20201030 18:39:39.743" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022978986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023029486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:39.452" endtime="20201030 18:39:39.743"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:39.751" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022978986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023029486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:39.744" endtime="20201030 18:39:39.752"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:39.753" endtime="20201030 18:39:39.754"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:39.450" endtime="20201030 18:39:39.755"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:39.448" endtime="20201030 18:39:39.755"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:39:39.759" level="INFO">${RESULT} = [{'diff': 5.049999999999846e-05}, {'diff': 5.038900000000138e-05}, {'diff': 5.029200000000039e-05}, {'diff': 5.016700000000027e-05}, {'diff': 5.027800000000082e-05}, {'diff': 4.974999999999771e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:39:39.756" endtime="20201030 18:39:39.759"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:39:39.763" level="INFO">${ACCURACY} = {'diff': [5.049999999999846e-05, 5.038900000000138e-05, 5.029200000000039e-05, 5.016700000000027e-05, 5.027800000000082e-05, 4.974999999999771e-05, 5.022199999999907e-05, 5.061099999999902e-05, 5.0458...</msg>
<status status="PASS" starttime="20201030 18:39:39.760" endtime="20201030 18:39:39.764"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:39:39.768" level="INFO">NAME: accuracy-TIMER_SLEEP-38-philip</msg>
<status status="PASS" starttime="20201030 18:39:39.767" endtime="20201030 18:39:39.768"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:39:39.770" level="INFO">VALUE: [5.049999999999846e-05, 5.038900000000138e-05, 5.029200000000039e-05, 5.016700000000027e-05, 5.027800000000082e-05, 4.974999999999771e-05, 5.022199999999907e-05, 5.061099999999902e-05, 5.045899999999923e-05, 5.045899999999923e-05, 4.975000000000118e-05, 4.994399999999968e-05, 5.011199999999799e-05, 5.006899999999981e-05, 5.056900000000031e-05, 4.965200000000072e-05, 4.987499999999784e-05, 5.062499999999859e-05, 5.058299999999988e-05, 4.983299999999913e-05, 4.976400000000075e-05, 5.005599999999971e-05, 5.018099999999984e-05, 4.974999999999771e-05, 4.999999999999796e-05, 4.997199999999882e-05, 4.980600000000293e-05, 4.9931000000003056e-05, 5.004200000000014e-05, 5.033400000000257e-05, 5.031900000000006e-05, 5.041700000000052e-05, 5.0638000000002154e-05, 5.036100000000224e-05, 5.019399999999993e-05, 4.977800000000032e-05, 5.023600000000211e-05, 5.004100000000067e-05, 5.016600000000079e-05, 5.026400000000125e-05, 5.009699999999895e-05, 5.066700000000077e-05, 5.061099999999902e-05, 5.040299999999748e-05, 4.998599999999839e-05, 5.0209000000002446e-05, 4.984700000000217e-05, 5.034700000000267e-05, 4.970899999999848e-05, 4.993099999999959e-05]</msg>
<status status="PASS" starttime="20201030 18:39:39.769" endtime="20201030 18:39:39.772"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:39.764" endtime="20201030 18:39:39.773"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:39:39.776" endtime="20201030 18:39:39.796"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:39.775" endtime="20201030 18:39:39.796"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:39.774" endtime="20201030 18:39:39.797"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:39.414" endtime="20201030 18:39:39.797"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:39.414" endtime="20201030 18:39:39.797"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:39.806" endtime="20201030 18:39:39.821"></status>
</kw>
<msg timestamp="20201030 18:39:39.822" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:39.804" endtime="20201030 18:39:39.822"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:39.824" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:39.823" endtime="20201030 18:39:39.825"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:39.825" endtime="20201030 18:39:39.827"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:39.802" endtime="20201030 18:39:39.828"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:39.800" endtime="20201030 18:39:39.828"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:39.834" endtime="20201030 18:39:40.121"></status>
</kw>
<msg timestamp="20201030 18:39:40.124" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019729097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019780319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:39.833" endtime="20201030 18:39:40.124"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:40.132" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019729097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019780319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:40.125" endtime="20201030 18:39:40.132"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:40.133" endtime="20201030 18:39:40.135"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:39.830" endtime="20201030 18:39:40.135"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:39.829" endtime="20201030 18:39:40.136"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:39:40.140" level="INFO">${RESULT} = [{'diff': 5.122200000000007e-05}, {'diff': 5.10409999999982e-05}, {'diff': 5.12080000000005e-05}, {'diff': 5.1165999999998324e-05}, {'diff': 5.097199999999982e-05}, {'diff': 5.129100000000192e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:39:40.137" endtime="20201030 18:39:40.140"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:39:40.145" level="INFO">${ACCURACY} = {'diff': [5.122200000000007e-05, 5.10409999999982e-05, 5.12080000000005e-05, 5.1165999999998324e-05, 5.097199999999982e-05, 5.129100000000192e-05, 5.086100000000274e-05, 5.144500000000066e-05, 5.10420...</msg>
<status status="PASS" starttime="20201030 18:39:40.141" endtime="20201030 18:39:40.145"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:39:40.149" level="INFO">NAME: accuracy-TIMER_SLEEP-39-philip</msg>
<status status="PASS" starttime="20201030 18:39:40.148" endtime="20201030 18:39:40.150"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:39:40.152" level="INFO">VALUE: [5.122200000000007e-05, 5.10409999999982e-05, 5.12080000000005e-05, 5.1165999999998324e-05, 5.097199999999982e-05, 5.129100000000192e-05, 5.086100000000274e-05, 5.144500000000066e-05, 5.104200000000114e-05, 5.105600000000071e-05, 5.122200000000007e-05, 5.099999999999896e-05, 5.090299999999798e-05, 5.112499999999909e-05, 5.1473000000003266e-05, 5.130600000000096e-05, 5.134799999999967e-05, 5.14729999999998e-05, 5.068100000000034e-05, 5.0987000000002336e-05, 5.087499999999884e-05, 5.076399999999828e-05, 5.129099999999845e-05, 5.105500000000124e-05, 5.0915999999998074e-05, 5.0943999999997214e-05, 5.162499999999959e-05, 5.145800000000075e-05, 5.138899999999891e-05, 5.091699999999755e-05, 5.143100000000109e-05, 5.080500000000099e-05, 5.074999999999871e-05, 5.076400000000175e-05, 5.087500000000231e-05, 5.098599999999939e-05, 5.094499999999669e-05, 5.0736999999998617e-05, 5.119400000000093e-05, 5.15409999999987e-05, 5.119400000000093e-05, 5.086100000000274e-05, 5.0915999999998074e-05, 5.106900000000081e-05, 5.136099999999977e-05, 5.097199999999982e-05, 5.154200000000164e-05, 5.133300000000063e-05, 5.081900000000056e-05, 5.147200000000032e-05]</msg>
<status status="PASS" starttime="20201030 18:39:40.150" endtime="20201030 18:39:40.153"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:40.146" endtime="20201030 18:39:40.153"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:39:40.157" endtime="20201030 18:39:40.176"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:40.155" endtime="20201030 18:39:40.177"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:40.154" endtime="20201030 18:39:40.177"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:39.798" endtime="20201030 18:39:40.178"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:39.797" endtime="20201030 18:39:40.178"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:40.186" endtime="20201030 18:39:40.203"></status>
</kw>
<msg timestamp="20201030 18:39:40.204" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:40.185" endtime="20201030 18:39:40.204"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:40.206" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:40.205" endtime="20201030 18:39:40.207"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:40.207" endtime="20201030 18:39:40.209"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:40.182" endtime="20201030 18:39:40.209"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:40.180" endtime="20201030 18:39:40.210"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:40.216" endtime="20201030 18:39:40.504"></status>
</kw>
<msg timestamp="20201030 18:39:40.507" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019734389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019786917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:40.215" endtime="20201030 18:39:40.507"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:40.515" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019734389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019786917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:40.508" endtime="20201030 18:39:40.515"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:40.516" endtime="20201030 18:39:40.518"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:40.212" endtime="20201030 18:39:40.519"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:40.210" endtime="20201030 18:39:40.519"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:39:40.523" level="INFO">${RESULT} = [{'diff': 5.25279999999996e-05}, {'diff': 5.190300000000245e-05}, {'diff': 5.187499999999984e-05}, {'diff': 5.254199999999917e-05}, {'diff': 5.256900000000231e-05}, {'diff': 5.230599999999849e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:39:40.520" endtime="20201030 18:39:40.523"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:39:40.527" level="INFO">${ACCURACY} = {'diff': [5.25279999999996e-05, 5.190300000000245e-05, 5.187499999999984e-05, 5.254199999999917e-05, 5.256900000000231e-05, 5.230599999999849e-05, 5.218100000000184e-05, 5.172200000000057e-05, 5.21659...</msg>
<status status="PASS" starttime="20201030 18:39:40.524" endtime="20201030 18:39:40.527"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:39:40.532" level="INFO">NAME: accuracy-TIMER_SLEEP-40-philip</msg>
<status status="PASS" starttime="20201030 18:39:40.531" endtime="20201030 18:39:40.532"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:39:40.534" level="INFO">VALUE: [5.25279999999996e-05, 5.190300000000245e-05, 5.187499999999984e-05, 5.254199999999917e-05, 5.256900000000231e-05, 5.230599999999849e-05, 5.218100000000184e-05, 5.172200000000057e-05, 5.2165999999999324e-05, 5.229199999999892e-05, 5.205599999999824e-05, 5.245899999999776e-05, 5.176399999999928e-05, 5.213899999999966e-05, 5.263900000000016e-05, 5.263900000000016e-05, 5.2193999999998464e-05, 5.2416000000003043e-05, 5.237500000000034e-05, 5.187499999999984e-05, 5.215299999999923e-05, 5.1929999999998644e-05, 5.190299999999898e-05, 5.234699999999773e-05, 5.219400000000193e-05, 5.201399999999953e-05, 5.169400000000143e-05, 5.19730000000003e-05, 5.233299999999816e-05, 5.216700000000227e-05, 5.227799999999935e-05, 5.25279999999996e-05, 5.188899999999941e-05, 5.176299999999981e-05, 5.2235999999997174e-05, 5.169400000000143e-05, 5.211099999999705e-05, 5.205499999999877e-05, 5.183300000000113e-05, 5.229099999999945e-05, 5.223600000000064e-05, 5.263900000000016e-05, 5.258299999999841e-05, 5.220900000000098e-05, 5.25279999999996e-05, 5.186100000000027e-05, 5.23470000000012e-05, 5.168099999999787e-05, 5.236100000000077e-05, 5.215299999999923e-05]</msg>
<status status="PASS" starttime="20201030 18:39:40.533" endtime="20201030 18:39:40.535"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:40.528" endtime="20201030 18:39:40.535"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:39:40.539" endtime="20201030 18:39:40.559"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:40.538" endtime="20201030 18:39:40.559"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:40.536" endtime="20201030 18:39:40.560"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:40.179" endtime="20201030 18:39:40.560"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:40.178" endtime="20201030 18:39:40.560"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:40.569" endtime="20201030 18:39:40.588"></status>
</kw>
<msg timestamp="20201030 18:39:40.588" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:40.567" endtime="20201030 18:39:40.588"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:40.591" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:40.589" endtime="20201030 18:39:40.591"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:40.592" endtime="20201030 18:39:40.593"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:40.565" endtime="20201030 18:39:40.594"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:40.562" endtime="20201030 18:39:40.594"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:40.601" endtime="20201030 18:39:40.886"></status>
</kw>
<msg timestamp="20201030 18:39:40.889" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021882431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021935667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:40.599" endtime="20201030 18:39:40.889"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:40.897" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021882431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021935667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:40.890" endtime="20201030 18:39:40.897"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:40.898" endtime="20201030 18:39:40.900"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:40.597" endtime="20201030 18:39:40.900"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:40.595" endtime="20201030 18:39:40.901"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:39:40.905" level="INFO">${RESULT} = [{'diff': 5.3235999999998174e-05}, {'diff': 5.293099999999912e-05}, {'diff': 5.294500000000216e-05}, {'diff': 5.362499999999812e-05}, {'diff': 5.322300000000155e-05}, {'diff': 5.345900000000223e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:39:40.902" endtime="20201030 18:39:40.905"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:39:40.909" level="INFO">${ACCURACY} = {'diff': [5.3235999999998174e-05, 5.293099999999912e-05, 5.294500000000216e-05, 5.362499999999812e-05, 5.322300000000155e-05, 5.345900000000223e-05, 5.362499999999812e-05, 5.305499999999977e-05, 5.358...</msg>
<status status="PASS" starttime="20201030 18:39:40.906" endtime="20201030 18:39:40.909"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:39:40.913" level="INFO">NAME: accuracy-TIMER_SLEEP-41-philip</msg>
<status status="PASS" starttime="20201030 18:39:40.912" endtime="20201030 18:39:40.914"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:39:40.916" level="INFO">VALUE: [5.3235999999998174e-05, 5.293099999999912e-05, 5.294500000000216e-05, 5.362499999999812e-05, 5.322300000000155e-05, 5.345900000000223e-05, 5.362499999999812e-05, 5.305499999999977e-05, 5.358299999999941e-05, 5.2985999999997924e-05, 5.288899999999694e-05, 5.33470000000022e-05, 5.290299999999998e-05, 5.2999999999997494e-05, 5.311100000000152e-05, 5.343099999999962e-05, 5.309700000000195e-05, 5.344500000000266e-05, 5.287500000000084e-05, 5.323600000000164e-05, 5.340300000000048e-05, 5.355599999999974e-05, 5.362500000000159e-05, 5.362500000000159e-05, 5.332000000000253e-05, 5.35410000000007e-05, 5.323600000000164e-05, 5.273600000000114e-05, 5.281899999999909e-05, 5.276400000000028e-05, 5.3165999999996855e-05, 5.290299999999998e-05, 5.2943999999999214e-05, 5.277799999999985e-05, 5.338900000000091e-05, 5.268099999999887e-05, 5.268099999999887e-05, 5.341700000000005e-05, 5.356999999999931e-05, 5.269499999999844e-05, 5.340300000000048e-05, 5.356999999999931e-05, 5.327800000000035e-05, 5.329199999999992e-05, 5.3179999999999894e-05, 5.3179999999999894e-05, 5.3471999999998854e-05, 5.28609999999978e-05, 5.2693999999998964e-05, 5.286100000000127e-05]</msg>
<status status="PASS" starttime="20201030 18:39:40.915" endtime="20201030 18:39:40.918"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:40.910" endtime="20201030 18:39:40.918"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:39:40.922" endtime="20201030 18:39:40.941"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:40.920" endtime="20201030 18:39:40.942"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:40.919" endtime="20201030 18:39:40.942"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:40.561" endtime="20201030 18:39:40.943"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:40.560" endtime="20201030 18:39:40.943"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:40.952" endtime="20201030 18:39:40.969"></status>
</kw>
<msg timestamp="20201030 18:39:40.969" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:40.950" endtime="20201030 18:39:40.969"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:40.972" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:40.970" endtime="20201030 18:39:40.972"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:40.973" endtime="20201030 18:39:40.974"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:40.947" endtime="20201030 18:39:40.975"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:40.945" endtime="20201030 18:39:40.975"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:40.982" endtime="20201030 18:39:41.267"></status>
</kw>
<msg timestamp="20201030 18:39:41.270" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019865153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019919278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:40.980" endtime="20201030 18:39:41.270"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:41.278" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019865153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019919278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:41.271" endtime="20201030 18:39:41.279"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:41.280" endtime="20201030 18:39:41.281"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:40.978" endtime="20201030 18:39:41.282"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:40.976" endtime="20201030 18:39:41.282"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:39:41.286" level="INFO">${RESULT} = [{'diff': 5.412499999999862e-05}, {'diff': 5.441699999999758e-05}, {'diff': 5.463899999999869e-05}, {'diff': 5.393100000000012e-05}, {'diff': 5.390300000000098e-05}, {'diff': 5.4235999999999174e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:39:41.283" endtime="20201030 18:39:41.286"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:39:41.291" level="INFO">${ACCURACY} = {'diff': [5.412499999999862e-05, 5.441699999999758e-05, 5.463899999999869e-05, 5.393100000000012e-05, 5.390300000000098e-05, 5.4235999999999174e-05, 5.3749999999998244e-05, 5.3971999999999354e-05, 5.4...</msg>
<status status="PASS" starttime="20201030 18:39:41.287" endtime="20201030 18:39:41.291"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:39:41.296" level="INFO">NAME: accuracy-TIMER_SLEEP-42-philip</msg>
<status status="PASS" starttime="20201030 18:39:41.295" endtime="20201030 18:39:41.296"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:39:41.298" level="INFO">VALUE: [5.412499999999862e-05, 5.441699999999758e-05, 5.463899999999869e-05, 5.393100000000012e-05, 5.390300000000098e-05, 5.4235999999999174e-05, 5.3749999999998244e-05, 5.3971999999999354e-05, 5.409699999999948e-05, 5.4458000000000284e-05, 5.3930000000000644e-05, 5.3680000000000394e-05, 5.43609999999993e-05, 5.381999999999956e-05, 5.425000000000221e-05, 5.3693999999999964e-05, 5.3985999999998924e-05, 5.440300000000148e-05, 5.370900000000248e-05, 5.404200000000067e-05, 5.386100000000227e-05, 5.425000000000221e-05, 5.388900000000141e-05, 5.423700000000212e-05, 5.375000000000171e-05, 5.373600000000214e-05, 5.387500000000184e-05, 5.4416000000001574e-05, 5.429100000000145e-05, 5.380500000000052e-05, 5.4513999999998564e-05, 5.413900000000166e-05, 5.4541999999997703e-05, 5.4221999999999604e-05, 5.458300000000041e-05, 5.411099999999905e-05, 5.381999999999956e-05, 5.3985999999998924e-05, 5.437499999999887e-05, 5.404200000000067e-05, 5.458300000000041e-05, 5.438900000000191e-05, 5.393100000000012e-05, 5.431900000000059e-05, 5.413899999999819e-05, 5.379100000000095e-05, 5.4416000000001574e-05, 5.4166000000001324e-05, 5.38609999999988e-05, 5.412500000000209e-05]</msg>
<status status="PASS" starttime="20201030 18:39:41.297" endtime="20201030 18:39:41.303"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:41.292" endtime="20201030 18:39:41.303"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:39:41.307" endtime="20201030 18:39:41.327"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:41.306" endtime="20201030 18:39:41.327"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:41.304" endtime="20201030 18:39:41.328"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:40.944" endtime="20201030 18:39:41.328"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:40.943" endtime="20201030 18:39:41.328"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:41.337" endtime="20201030 18:39:41.354"></status>
</kw>
<msg timestamp="20201030 18:39:41.354" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:41.335" endtime="20201030 18:39:41.355"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:41.357" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:41.355" endtime="20201030 18:39:41.357"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:41.358" endtime="20201030 18:39:41.360"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:41.332" endtime="20201030 18:39:41.360"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:41.330" endtime="20201030 18:39:41.361"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:41.367" endtime="20201030 18:39:41.655"></status>
</kw>
<msg timestamp="20201030 18:39:41.658" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020685694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020741319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:41.366" endtime="20201030 18:39:41.658"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:41.669" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020685694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020741319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:41.659" endtime="20201030 18:39:41.669"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:41.670" endtime="20201030 18:39:41.672"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:41.363" endtime="20201030 18:39:41.672"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:41.361" endtime="20201030 18:39:41.672"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:39:41.676" level="INFO">${RESULT} = [{'diff': 5.562500000000012e-05}, {'diff': 5.533399999999716e-05}, {'diff': 5.4985999999999924e-05}, {'diff': 5.5236000000000174e-05}, {'diff': 5.562500000000012e-05}, {'diff': 5.516699999999833e-05},...</msg>
<status status="PASS" starttime="20201030 18:39:41.673" endtime="20201030 18:39:41.677"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:39:41.681" level="INFO">${ACCURACY} = {'diff': [5.562500000000012e-05, 5.533399999999716e-05, 5.4985999999999924e-05, 5.5236000000000174e-05, 5.562500000000012e-05, 5.516699999999833e-05, 5.530500000000202e-05, 5.562500000000012e-05, 5.46...</msg>
<status status="PASS" starttime="20201030 18:39:41.677" endtime="20201030 18:39:41.681"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:39:41.685" level="INFO">NAME: accuracy-TIMER_SLEEP-43-philip</msg>
<status status="PASS" starttime="20201030 18:39:41.684" endtime="20201030 18:39:41.686"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:39:41.688" level="INFO">VALUE: [5.562500000000012e-05, 5.533399999999716e-05, 5.4985999999999924e-05, 5.5236000000000174e-05, 5.562500000000012e-05, 5.516699999999833e-05, 5.530500000000202e-05, 5.562500000000012e-05, 5.4679999999997925e-05, 5.483300000000066e-05, 5.530600000000149e-05, 5.5222000000000604e-05, 5.529200000000192e-05, 5.490299999999851e-05, 5.46670000000013e-05, 5.511100000000005e-05, 5.511199999999952e-05, 5.4999999999999494e-05, 5.5277999999998884e-05, 5.473699999999915e-05, 5.4930000000001644e-05, 5.4722000000000104e-05, 5.479099999999848e-05, 5.563899999999969e-05, 5.4763999999998814e-05, 5.4957999999997315e-05, 5.504200000000167e-05, 5.533299999999769e-05, 5.511100000000005e-05, 5.5222000000000604e-05, 5.4791999999997953e-05, 5.493100000000112e-05, 5.495900000000026e-05, 5.557000000000131e-05, 5.565300000000273e-05, 5.5263999999999314e-05, 5.515300000000223e-05, 5.5513999999999564e-05, 5.5194000000001464e-05, 5.4972000000000354e-05, 5.4958000000000784e-05, 5.4930000000001644e-05, 5.53610000000003e-05, 5.5222000000000604e-05, 5.4930000000001644e-05, 5.4972000000000354e-05, 5.5513999999999564e-05, 5.533299999999769e-05, 5.480600000000099e-05, 5.504200000000167e-05]</msg>
<status status="PASS" starttime="20201030 18:39:41.686" endtime="20201030 18:39:41.689"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:41.682" endtime="20201030 18:39:41.689"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:39:41.693" endtime="20201030 18:39:41.712"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:41.691" endtime="20201030 18:39:41.713"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:41.690" endtime="20201030 18:39:41.713"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:41.329" endtime="20201030 18:39:41.713"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:41.328" endtime="20201030 18:39:41.713"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:41.722" endtime="20201030 18:39:41.739"></status>
</kw>
<msg timestamp="20201030 18:39:41.739" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:41.721" endtime="20201030 18:39:41.740"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:41.742" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:41.740" endtime="20201030 18:39:41.742"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:41.743" endtime="20201030 18:39:41.745"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:41.718" endtime="20201030 18:39:41.745"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:41.716" endtime="20201030 18:39:41.746"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:41.752" endtime="20201030 18:39:42.039"></status>
</kw>
<msg timestamp="20201030 18:39:42.042" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020690764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020746639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:41.751" endtime="20201030 18:39:42.042"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:42.050" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020690764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020746639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:42.043" endtime="20201030 18:39:42.051"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:42.051" endtime="20201030 18:39:42.053"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:41.748" endtime="20201030 18:39:42.054"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:41.746" endtime="20201030 18:39:42.054"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:39:42.058" level="INFO">${RESULT} = [{'diff': 5.587500000000037e-05}, {'diff': 5.6222000000001604e-05}, {'diff': 5.6555999999999274e-05}, {'diff': 5.58480000000007e-05}, {'diff': 5.597300000000083e-05}, {'diff': 5.576300000000034e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:39:42.055" endtime="20201030 18:39:42.058"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:39:42.063" level="INFO">${ACCURACY} = {'diff': [5.587500000000037e-05, 5.6222000000001604e-05, 5.6555999999999274e-05, 5.58480000000007e-05, 5.597300000000083e-05, 5.576300000000034e-05, 5.622300000000108e-05, 5.633299999999869e-05, 5.634...</msg>
<status status="PASS" starttime="20201030 18:39:42.059" endtime="20201030 18:39:42.063"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:39:42.068" level="INFO">NAME: accuracy-TIMER_SLEEP-44-philip</msg>
<status status="PASS" starttime="20201030 18:39:42.067" endtime="20201030 18:39:42.068"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:39:42.070" level="INFO">VALUE: [5.587500000000037e-05, 5.6222000000001604e-05, 5.6555999999999274e-05, 5.58480000000007e-05, 5.597300000000083e-05, 5.576300000000034e-05, 5.622300000000108e-05, 5.633299999999869e-05, 5.634699999999826e-05, 5.6250000000000744e-05, 5.6236000000001174e-05, 5.6471999999998385e-05, 5.6305999999999023e-05, 5.6443999999999245e-05, 5.6236000000001174e-05, 5.658299999999894e-05, 5.5777999999999384e-05, 5.6000000000000494e-05, 5.620900000000151e-05, 5.640300000000001e-05, 5.605600000000224e-05, 5.605600000000224e-05, 5.647300000000133e-05, 5.608299999999844e-05, 5.60549999999993e-05, 5.5750000000000244e-05, 5.630499999999955e-05, 5.656900000000284e-05, 5.5791999999998954e-05, 5.5986000000000924e-05, 5.580499999999905e-05, 5.6291999999999454e-05, 5.662500000000112e-05, 5.5763999999999814e-05, 5.5791999999998954e-05, 5.5763999999999814e-05, 5.6250000000000744e-05, 5.6444000000002714e-05, 5.645900000000176e-05, 5.616699999999933e-05, 5.654100000000023e-05, 5.6000000000000494e-05, 5.5763999999999814e-05, 5.609700000000148e-05, 5.634699999999826e-05, 5.60410000000032e-05, 5.633300000000216e-05, 5.6486000000001424e-05, 5.5985999999997454e-05, 5.5777999999999384e-05]</msg>
<status status="PASS" starttime="20201030 18:39:42.069" endtime="20201030 18:39:42.072"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:42.064" endtime="20201030 18:39:42.072"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:39:42.076" endtime="20201030 18:39:42.096"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:42.075" endtime="20201030 18:39:42.096"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:42.073" endtime="20201030 18:39:42.097"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:41.714" endtime="20201030 18:39:42.097"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:41.714" endtime="20201030 18:39:42.097"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:42.106" endtime="20201030 18:39:42.123"></status>
</kw>
<msg timestamp="20201030 18:39:42.124" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:42.104" endtime="20201030 18:39:42.124"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:42.126" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:42.125" endtime="20201030 18:39:42.127"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:42.127" endtime="20201030 18:39:42.129"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:42.101" endtime="20201030 18:39:42.130"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:42.099" endtime="20201030 18:39:42.130"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:42.137" endtime="20201030 18:39:42.422"></status>
</kw>
<msg timestamp="20201030 18:39:42.425" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019778292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019835833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:42.135" endtime="20201030 18:39:42.425"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:42.433" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019778292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019835833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:42.426" endtime="20201030 18:39:42.434"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:42.434" endtime="20201030 18:39:42.436"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:42.133" endtime="20201030 18:39:42.437"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:42.131" endtime="20201030 18:39:42.437"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:39:42.441" level="INFO">${RESULT} = [{'diff': 5.754100000000123e-05}, {'diff': 5.7236000000002174e-05}, {'diff': 5.709700000000248e-05}, {'diff': 5.736099999999883e-05}, {'diff': 5.736099999999883e-05}, {'diff': 5.68610000000018e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:39:42.438" endtime="20201030 18:39:42.441"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:39:42.446" level="INFO">${ACCURACY} = {'diff': [5.754100000000123e-05, 5.7236000000002174e-05, 5.709700000000248e-05, 5.736099999999883e-05, 5.736099999999883e-05, 5.68610000000018e-05, 5.765299999999779e-05, 5.7485999999998955e-05, 5.682...</msg>
<status status="PASS" starttime="20201030 18:39:42.442" endtime="20201030 18:39:42.446"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:39:42.451" level="INFO">NAME: accuracy-TIMER_SLEEP-45-philip</msg>
<status status="PASS" starttime="20201030 18:39:42.450" endtime="20201030 18:39:42.451"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:39:42.453" level="INFO">VALUE: [5.754100000000123e-05, 5.7236000000002174e-05, 5.709700000000248e-05, 5.736099999999883e-05, 5.736099999999883e-05, 5.68610000000018e-05, 5.765299999999779e-05, 5.7485999999998955e-05, 5.682000000000256e-05, 5.693099999999965e-05, 5.693099999999965e-05, 5.740300000000101e-05, 5.73480000000022e-05, 5.73480000000022e-05, 5.681899999999962e-05, 5.70550000000003e-05, 5.6999999999998024e-05, 5.7402000000001535e-05, 5.7221999999999135e-05, 5.762499999999865e-05, 5.7250000000001744e-05, 5.7514000000001564e-05, 5.758299999999994e-05, 5.756900000000037e-05, 5.7569999999999844e-05, 5.6971999999998885e-05, 5.682000000000256e-05, 5.73749999999984e-05, 5.6763999999997344e-05, 5.68749999999979e-05, 5.6986000000001924e-05, 5.680500000000005e-05, 5.758299999999994e-05, 5.7235999999998705e-05, 5.762499999999865e-05, 5.7179999999996955e-05, 5.6679999999999925e-05, 5.7264000000001314e-05, 5.762500000000212e-05, 5.7055999999999774e-05, 5.68610000000018e-05, 5.6707999999999065e-05, 5.7028000000000634e-05, 5.7221999999999135e-05, 5.738900000000144e-05, 5.740300000000101e-05, 5.669499999999897e-05, 5.7264000000001314e-05, 5.763900000000169e-05, 5.7416000000001105e-05]</msg>
<status status="PASS" starttime="20201030 18:39:42.452" endtime="20201030 18:39:42.454"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:42.447" endtime="20201030 18:39:42.454"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:39:42.458" endtime="20201030 18:39:42.478"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:42.457" endtime="20201030 18:39:42.478"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:42.455" endtime="20201030 18:39:42.478"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:42.098" endtime="20201030 18:39:42.479"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:42.097" endtime="20201030 18:39:42.479"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:42.488" endtime="20201030 18:39:42.505"></status>
</kw>
<msg timestamp="20201030 18:39:42.506" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:42.486" endtime="20201030 18:39:42.506"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:42.508" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:42.507" endtime="20201030 18:39:42.508"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:42.509" endtime="20201030 18:39:42.511"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:42.484" endtime="20201030 18:39:42.511"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:42.481" endtime="20201030 18:39:42.512"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:42.518" endtime="20201030 18:39:42.804"></status>
</kw>
<msg timestamp="20201030 18:39:42.807" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020038972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020097111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:42.517" endtime="20201030 18:39:42.808"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:42.815" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020038972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020097111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:42.808" endtime="20201030 18:39:42.816"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:42.817" endtime="20201030 18:39:42.818"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:42.514" endtime="20201030 18:39:42.819"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:42.512" endtime="20201030 18:39:42.819"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:39:42.823" level="INFO">${RESULT} = [{'diff': 5.813900000000219e-05}, {'diff': 5.781899999999715e-05}, {'diff': 5.808300000000044e-05}, {'diff': 5.8235999999999705e-05}, {'diff': 5.836099999999983e-05}, {'diff': 5.786099999999933e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:39:42.820" endtime="20201030 18:39:42.823"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:39:42.827" level="INFO">${ACCURACY} = {'diff': [5.813900000000219e-05, 5.781899999999715e-05, 5.808300000000044e-05, 5.8235999999999705e-05, 5.836099999999983e-05, 5.786099999999933e-05, 5.791699999999761e-05, 5.840299999999854e-05, 5.793...</msg>
<status status="PASS" starttime="20201030 18:39:42.824" endtime="20201030 18:39:42.828"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:39:42.832" level="INFO">NAME: accuracy-TIMER_SLEEP-46-philip</msg>
<status status="PASS" starttime="20201030 18:39:42.831" endtime="20201030 18:39:42.832"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:39:42.835" level="INFO">VALUE: [5.813900000000219e-05, 5.781899999999715e-05, 5.808300000000044e-05, 5.8235999999999705e-05, 5.836099999999983e-05, 5.786099999999933e-05, 5.791699999999761e-05, 5.840299999999854e-05, 5.793100000000065e-05, 5.7778000000001384e-05, 5.8235999999999705e-05, 5.8347999999999733e-05, 5.813899999999872e-05, 5.786200000000227e-05, 5.8334000000000163e-05, 5.779100000000148e-05, 5.811099999999958e-05, 5.8542000000001704e-05, 5.8151999999998816e-05, 5.8277999999998414e-05, 5.841699999999811e-05, 5.8430000000001675e-05, 5.8056000000000774e-05, 5.8443999999997776e-05, 5.862499999999965e-05, 5.795899999999979e-05, 5.788900000000194e-05, 5.766700000000083e-05, 5.7999999999999025e-05, 5.786099999999933e-05, 5.841700000000158e-05, 5.784799999999923e-05, 5.7915999999998136e-05, 5.8472000000000385e-05, 5.831900000000112e-05, 5.856900000000137e-05, 5.8278000000001884e-05, 5.779099999999801e-05, 5.811099999999958e-05, 5.834700000000026e-05, 5.7750000000002244e-05, 5.7749999999998775e-05, 5.7999999999999025e-05, 5.841700000000158e-05, 5.8235999999999705e-05, 5.838899999999897e-05, 5.76810000000004e-05, 5.80689999999974e-05, 5.8347999999999733e-05, 5.8235999999999705e-05]</msg>
<status status="PASS" starttime="20201030 18:39:42.833" endtime="20201030 18:39:42.835"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:42.828" endtime="20201030 18:39:42.836"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:39:42.840" endtime="20201030 18:39:42.859"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:42.838" endtime="20201030 18:39:42.860"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:42.837" endtime="20201030 18:39:42.860"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:42.480" endtime="20201030 18:39:42.860"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:42.479" endtime="20201030 18:39:42.860"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:42.870" endtime="20201030 18:39:42.890"></status>
</kw>
<msg timestamp="20201030 18:39:42.890" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:42.869" endtime="20201030 18:39:42.891"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:42.893" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:42.891" endtime="20201030 18:39:42.893"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:42.894" endtime="20201030 18:39:42.896"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:42.866" endtime="20201030 18:39:42.896"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:42.864" endtime="20201030 18:39:42.897"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:42.903" endtime="20201030 18:39:43.190"></status>
</kw>
<msg timestamp="20201030 18:39:43.193" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024007597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0240665, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:39:42.902" endtime="20201030 18:39:43.193"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:43.201" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024007597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0240665, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:39:43.194" endtime="20201030 18:39:43.201"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:43.202" endtime="20201030 18:39:43.204"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:42.899" endtime="20201030 18:39:43.204"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:42.897" endtime="20201030 18:39:43.205"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:39:43.209" level="INFO">${RESULT} = [{'diff': 5.890300000000251e-05}, {'diff': 5.962500000000065e-05}, {'diff': 5.918099999999843e-05}, {'diff': 5.8763999999999345e-05}, {'diff': 5.9583999999997944e-05}, {'diff': 5.8749999999999775e-05}...</msg>
<status status="PASS" starttime="20201030 18:39:43.206" endtime="20201030 18:39:43.210"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:39:43.213" level="INFO">${ACCURACY} = {'diff': [5.890300000000251e-05, 5.962500000000065e-05, 5.918099999999843e-05, 5.8763999999999345e-05, 5.9583999999997944e-05, 5.8749999999999775e-05, 5.958299999999847e-05, 5.945899999999782e-05, 5.8...</msg>
<status status="PASS" starttime="20201030 18:39:43.210" endtime="20201030 18:39:43.214"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:39:43.218" level="INFO">NAME: accuracy-TIMER_SLEEP-47-philip</msg>
<status status="PASS" starttime="20201030 18:39:43.217" endtime="20201030 18:39:43.218"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:39:43.220" level="INFO">VALUE: [5.890300000000251e-05, 5.962500000000065e-05, 5.918099999999843e-05, 5.8763999999999345e-05, 5.9583999999997944e-05, 5.8749999999999775e-05, 5.958299999999847e-05, 5.945899999999782e-05, 5.8777999999998914e-05, 5.934700000000126e-05, 5.8721999999997165e-05, 5.8929999999998706e-05, 5.886100000000033e-05, 5.911099999999711e-05, 5.962499999999718e-05, 5.8666000000002355e-05, 5.888899999999947e-05, 5.936100000000083e-05, 5.9306000000002024e-05, 5.88749999999999e-05, 5.8806000000001524e-05, 5.9570000000001844e-05, 5.8819999999997624e-05, 5.9277999999999414e-05, 5.962499999999718e-05, 5.963900000000022e-05, 5.9138000000000246e-05, 5.9222000000001135e-05, 5.9179999999998956e-05, 5.8694000000001495e-05, 5.888899999999947e-05, 5.88749999999999e-05, 5.9179999999998956e-05, 5.9250000000000275e-05, 5.891699999999861e-05, 5.906900000000187e-05, 5.8806000000001524e-05, 5.9541999999999234e-05, 5.8819999999997624e-05, 5.9055999999998304e-05, 5.941700000000258e-05, 5.912500000000015e-05, 5.9597999999997514e-05, 5.8820000000001094e-05, 5.891699999999861e-05, 5.9471999999997915e-05, 5.9165999999999386e-05, 5.9402000000000066e-05, 5.9151999999999816e-05, 5.929099999999951e-05]</msg>
<status status="PASS" starttime="20201030 18:39:43.219" endtime="20201030 18:39:43.222"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:43.214" endtime="20201030 18:39:43.223"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:39:43.226" endtime="20201030 18:39:43.246"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:43.225" endtime="20201030 18:39:43.246"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:43.223" endtime="20201030 18:39:43.247"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:42.862" endtime="20201030 18:39:43.247"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:42.862" endtime="20201030 18:39:43.247"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:43.256" endtime="20201030 18:39:43.273"></status>
</kw>
<msg timestamp="20201030 18:39:43.274" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:43.254" endtime="20201030 18:39:43.274"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:43.276" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:43.275" endtime="20201030 18:39:43.277"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:43.277" endtime="20201030 18:39:43.279"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:43.252" endtime="20201030 18:39:43.280"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:43.249" endtime="20201030 18:39:43.280"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:43.287" endtime="20201030 18:39:43.572"></status>
</kw>
<msg timestamp="20201030 18:39:43.575" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019870681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019930736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:43.285" endtime="20201030 18:39:43.576"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:43.584" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019870681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019930736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:43.577" endtime="20201030 18:39:43.584"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:43.585" endtime="20201030 18:39:43.587"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:43.282" endtime="20201030 18:39:43.587"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:43.281" endtime="20201030 18:39:43.588"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:39:43.591" level="INFO">${RESULT} = [{'diff': 6.005499999999983e-05}, {'diff': 5.9679999999999456e-05}, {'diff': 5.96949999999985e-05}, {'diff': 5.983299999999872e-05}, {'diff': 6.0320000000002594e-05}, {'diff': 6.01810000000029e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:39:43.588" endtime="20201030 18:39:43.592"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:39:43.596" level="INFO">${ACCURACY} = {'diff': [6.005499999999983e-05, 5.9679999999999456e-05, 5.96949999999985e-05, 5.983299999999872e-05, 6.0320000000002594e-05, 6.01810000000029e-05, 6.063900000000122e-05, 6.062499999999818e-05, 5.9792...</msg>
<status status="PASS" starttime="20201030 18:39:43.592" endtime="20201030 18:39:43.597"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:39:43.601" level="INFO">NAME: accuracy-TIMER_SLEEP-48-philip</msg>
<status status="PASS" starttime="20201030 18:39:43.600" endtime="20201030 18:39:43.601"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:39:43.603" level="INFO">VALUE: [6.005499999999983e-05, 5.9679999999999456e-05, 5.96949999999985e-05, 5.983299999999872e-05, 6.0320000000002594e-05, 6.01810000000029e-05, 6.063900000000122e-05, 6.062499999999818e-05, 5.9792000000002954e-05, 6.038900000000097e-05, 5.9764000000000345e-05, 5.9693999999999026e-05, 5.9665999999999886e-05, 6.0236000000001705e-05, 6.0291999999999984e-05, 5.990300000000004e-05, 5.9999999999997555e-05, 5.98750000000009e-05, 6.0056000000002774e-05, 6.038900000000097e-05, 5.9750000000000775e-05, 6.036100000000183e-05, 6.045900000000229e-05, 6.0584000000002414e-05, 6.047300000000186e-05, 6.0000000000001025e-05, 5.981899999999915e-05, 5.97629999999974e-05, 6.058299999999947e-05, 5.9694000000002495e-05, 6.0000000000001025e-05, 5.9736000000001205e-05, 6.055500000000033e-05, 6.005499999999983e-05, 6.0249999999997805e-05, 6.040300000000054e-05, 6.016699999999986e-05, 6.0069999999998874e-05, 6.011100000000158e-05, 6.0069999999998874e-05, 5.986100000000133e-05, 6.041700000000011e-05, 6.0334000000002164e-05, 6.0179999999999956e-05, 6.0084000000001914e-05, 5.994500000000222e-05, 5.980499999999958e-05, 6.029100000000051e-05, 6.0235999999998235e-05, 6.065300000000079e-05]</msg>
<status status="PASS" starttime="20201030 18:39:43.602" endtime="20201030 18:39:43.604"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:43.597" endtime="20201030 18:39:43.605"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:39:43.609" endtime="20201030 18:39:43.628"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:43.607" endtime="20201030 18:39:43.629"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:43.606" endtime="20201030 18:39:43.629"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:43.248" endtime="20201030 18:39:43.629"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:43.247" endtime="20201030 18:39:43.629"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:43.638" endtime="20201030 18:39:43.655"></status>
</kw>
<msg timestamp="20201030 18:39:43.656" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:43.637" endtime="20201030 18:39:43.656"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:43.658" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:43.657" endtime="20201030 18:39:43.659"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:43.660" endtime="20201030 18:39:43.662"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:43.634" endtime="20201030 18:39:43.663"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:43.632" endtime="20201030 18:39:43.663"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:43.670" endtime="20201030 18:39:43.957"></status>
</kw>
<msg timestamp="20201030 18:39:43.960" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020553292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020614806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:43.668" endtime="20201030 18:39:43.960"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:43.968" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020553292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020614806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:43.961" endtime="20201030 18:39:43.968"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:43.969" endtime="20201030 18:39:43.971"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:43.665" endtime="20201030 18:39:43.971"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:43.664" endtime="20201030 18:39:43.972"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:39:43.976" level="INFO">${RESULT} = [{'diff': 6.151399999999863e-05}, {'diff': 6.0763999999997875e-05}, {'diff': 6.112499999999868e-05}, {'diff': 6.104100000000126e-05}, {'diff': 6.087499999999843e-05}, {'diff': 6.13750000000024e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:39:43.973" endtime="20201030 18:39:43.976"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:39:43.980" level="INFO">${ACCURACY} = {'diff': [6.151399999999863e-05, 6.0763999999997875e-05, 6.112499999999868e-05, 6.104100000000126e-05, 6.087499999999843e-05, 6.13750000000024e-05, 6.105500000000083e-05, 6.141700000000111e-05, 6.1277...</msg>
<status status="PASS" starttime="20201030 18:39:43.977" endtime="20201030 18:39:43.980"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:39:43.984" level="INFO">NAME: accuracy-TIMER_SLEEP-49-philip</msg>
<status status="PASS" starttime="20201030 18:39:43.983" endtime="20201030 18:39:43.985"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:39:43.987" level="INFO">VALUE: [6.151399999999863e-05, 6.0763999999997875e-05, 6.112499999999868e-05, 6.104100000000126e-05, 6.087499999999843e-05, 6.13750000000024e-05, 6.105500000000083e-05, 6.141700000000111e-05, 6.127799999999795e-05, 6.12360000000027e-05, 6.093100000000018e-05, 6.12499999999988e-05, 6.136099999999936e-05, 6.087499999999843e-05, 6.0999999999998555e-05, 6.145899999999982e-05, 6.162499999999918e-05, 6.0999999999998555e-05, 6.0819999999999624e-05, 6.0985999999998985e-05, 6.156899999999743e-05, 6.0735999999998735e-05, 6.0957999999999846e-05, 6.087499999999843e-05, 6.0680000000000456e-05, 6.104200000000073e-05, 6.0986000000002455e-05, 6.0764000000001345e-05, 6.129199999999752e-05, 6.113900000000172e-05, 6.109700000000301e-05, 6.0985999999998985e-05, 6.091700000000061e-05, 6.13620000000023e-05, 6.132000000000012e-05, 6.0999999999998555e-05, 6.0735999999998735e-05, 6.147199999999992e-05, 6.0930000000000706e-05, 6.0930000000000706e-05, 6.0750000000001775e-05, 6.105500000000083e-05, 6.0806000000000054e-05, 6.0749999999998305e-05, 6.118100000000043e-05, 6.130600000000055e-05, 6.134699999999979e-05, 6.157000000000037e-05, 6.136199999999883e-05, 6.066700000000036e-05]</msg>
<status status="PASS" starttime="20201030 18:39:43.986" endtime="20201030 18:39:43.988"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:43.981" endtime="20201030 18:39:43.988"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:39:43.992" endtime="20201030 18:39:44.012"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:43.991" endtime="20201030 18:39:44.012"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:43.989" endtime="20201030 18:39:44.012"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:43.630" endtime="20201030 18:39:44.013"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:43.630" endtime="20201030 18:39:44.013"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:44.022" endtime="20201030 18:39:44.040"></status>
</kw>
<msg timestamp="20201030 18:39:44.040" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:44.020" endtime="20201030 18:39:44.040"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:44.043" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:44.041" endtime="20201030 18:39:44.043"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:44.044" endtime="20201030 18:39:44.045"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:44.018" endtime="20201030 18:39:44.046"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:44.015" endtime="20201030 18:39:44.046"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:44.053" endtime="20201030 18:39:44.339"></status>
</kw>
<msg timestamp="20201030 18:39:44.342" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021179667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021241889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:44.051" endtime="20201030 18:39:44.342"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:44.350" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021179667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021241889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:44.343" endtime="20201030 18:39:44.351"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:44.352" endtime="20201030 18:39:44.353"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:44.049" endtime="20201030 18:39:44.354"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:44.047" endtime="20201030 18:39:44.354"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:39:44.358" level="INFO">${RESULT} = [{'diff': 6.222200000000067e-05}, {'diff': 6.241700000000211e-05}, {'diff': 6.191699999999814e-05}, {'diff': 6.209800000000001e-05}, {'diff': 6.206899999999793e-05}, {'diff': 6.254199999999877e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:39:44.355" endtime="20201030 18:39:44.358"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:39:44.362" level="INFO">${ACCURACY} = {'diff': [6.222200000000067e-05, 6.241700000000211e-05, 6.191699999999814e-05, 6.209800000000001e-05, 6.206899999999793e-05, 6.254199999999877e-05, 6.234700000000079e-05, 6.205500000000183e-05, 6.2402...</msg>
<status status="PASS" starttime="20201030 18:39:44.359" endtime="20201030 18:39:44.362"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:39:44.367" level="INFO">NAME: accuracy-TIMER_SLEEP-50-philip</msg>
<status status="PASS" starttime="20201030 18:39:44.366" endtime="20201030 18:39:44.367"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:39:44.369" level="INFO">VALUE: [6.222200000000067e-05, 6.241700000000211e-05, 6.191699999999814e-05, 6.209800000000001e-05, 6.206899999999793e-05, 6.254199999999877e-05, 6.234700000000079e-05, 6.205500000000183e-05, 6.240200000000307e-05, 6.25690000000019e-05, 6.234700000000079e-05, 6.199999999999956e-05, 6.18340000000002e-05, 6.212499999999968e-05, 6.195900000000032e-05, 6.243100000000168e-05, 6.267999999999899e-05, 6.23889999999995e-05, 6.232000000000112e-05, 6.256899999999843e-05, 6.195800000000085e-05, 6.190299999999857e-05, 6.200000000000302e-05, 6.191600000000214e-05, 6.17499999999993e-05, 6.205499999999836e-05, 6.252800000000266e-05, 6.233300000000122e-05, 6.24439999999983e-05, 6.240299999999907e-05, 6.22219999999972e-05, 6.216699999999839e-05, 6.17499999999993e-05, 6.200000000000302e-05, 6.23340000000007e-05, 6.230499999999861e-05, 6.23889999999995e-05, 6.212499999999968e-05, 6.230499999999861e-05, 6.181900000000115e-05, 6.209700000000054e-05, 6.236100000000036e-05, 6.17499999999993e-05, 6.243100000000168e-05, 6.22499999999998e-05, 6.20560000000013e-05, 6.182000000000062e-05, 6.247200000000092e-05, 6.241699999999864e-05, 6.263899999999975e-05]</msg>
<status status="PASS" starttime="20201030 18:39:44.368" endtime="20201030 18:39:44.371"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:44.363" endtime="20201030 18:39:44.371"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:39:44.375" endtime="20201030 18:39:44.394"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:44.374" endtime="20201030 18:39:44.395"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:44.372" endtime="20201030 18:39:44.395"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:44.014" endtime="20201030 18:39:44.396"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:44.013" endtime="20201030 18:39:44.396"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:44.405" endtime="20201030 18:39:44.421"></status>
</kw>
<msg timestamp="20201030 18:39:44.422" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:44.403" endtime="20201030 18:39:44.422"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:44.424" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:44.423" endtime="20201030 18:39:44.425"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:44.425" endtime="20201030 18:39:44.427"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:44.400" endtime="20201030 18:39:44.428"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:44.398" endtime="20201030 18:39:44.428"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:44.434" endtime="20201030 18:39:44.721"></status>
</kw>
<msg timestamp="20201030 18:39:44.724" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020151597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020214958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:44.433" endtime="20201030 18:39:44.724"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:44.732" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020151597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020214958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:44.725" endtime="20201030 18:39:44.732"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:44.733" endtime="20201030 18:39:44.735"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:44.430" endtime="20201030 18:39:44.735"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:44.429" endtime="20201030 18:39:44.736"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:39:44.740" level="INFO">${RESULT} = [{'diff': 6.336100000000136e-05}, {'diff': 6.273600000000074e-05}, {'diff': 6.35280000000002e-05}, {'diff': 6.363900000000075e-05}, {'diff': 6.329200000000298e-05}, {'diff': 6.347200000000192e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:39:44.737" endtime="20201030 18:39:44.740"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:39:44.745" level="INFO">${ACCURACY} = {'diff': [6.336100000000136e-05, 6.273600000000074e-05, 6.35280000000002e-05, 6.363900000000075e-05, 6.329200000000298e-05, 6.347200000000192e-05, 6.2889e-05, 6.347200000000192e-05, 6.304200000000273e...</msg>
<status status="PASS" starttime="20201030 18:39:44.741" endtime="20201030 18:39:44.745"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:39:44.749" level="INFO">NAME: accuracy-TIMER_SLEEP-51-philip</msg>
<status status="PASS" starttime="20201030 18:39:44.748" endtime="20201030 18:39:44.750"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:39:44.752" level="INFO">VALUE: [6.336100000000136e-05, 6.273600000000074e-05, 6.35280000000002e-05, 6.363900000000075e-05, 6.329200000000298e-05, 6.347200000000192e-05, 6.2889e-05, 6.347200000000192e-05, 6.304200000000273e-05, 6.282000000000162e-05, 6.324999999999734e-05, 6.362500000000118e-05, 6.287500000000043e-05, 6.268000000000246e-05, 6.33890000000005e-05, 6.267999999999899e-05, 6.334699999999832e-05, 6.277799999999945e-05, 6.324999999999734e-05, 6.27500000000003e-05, 6.341699999999964e-05, 6.336100000000136e-05, 6.270799999999813e-05, 6.268100000000193e-05, 6.323599999999777e-05, 6.291699999999914e-05, 6.327799999999995e-05, 6.291699999999914e-05, 6.322299999999767e-05, 6.349999999999759e-05, 6.363799999999781e-05, 6.356899999999943e-05, 6.286100000000086e-05, 6.280499999999911e-05, 6.351400000000063e-05, 6.326400000000038e-05, 6.290299999999957e-05, 6.298600000000099e-05, 6.351400000000063e-05, 6.286099999999739e-05, 6.363900000000075e-05, 6.291699999999914e-05, 6.287500000000043e-05, 6.279199999999902e-05, 6.318100000000243e-05, 6.30829999999985e-05, 6.291599999999967e-05, 6.345799999999888e-05, 6.361100000000161e-05, 6.280499999999911e-05]</msg>
<status status="PASS" starttime="20201030 18:39:44.751" endtime="20201030 18:39:44.753"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:44.746" endtime="20201030 18:39:44.753"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:39:44.757" endtime="20201030 18:39:44.777"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:44.755" endtime="20201030 18:39:44.777"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:44.754" endtime="20201030 18:39:44.778"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:44.397" endtime="20201030 18:39:44.778"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:44.396" endtime="20201030 18:39:44.778"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:44.788" endtime="20201030 18:39:44.805"></status>
</kw>
<msg timestamp="20201030 18:39:44.805" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:44.786" endtime="20201030 18:39:44.806"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:44.808" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:44.806" endtime="20201030 18:39:44.808"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:44.809" endtime="20201030 18:39:44.811"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:44.783" endtime="20201030 18:39:44.811"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:44.781" endtime="20201030 18:39:44.812"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:44.818" endtime="20201030 18:39:45.105"></status>
</kw>
<msg timestamp="20201030 18:39:45.108" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020988847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021053167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:44.816" endtime="20201030 18:39:45.108"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:45.116" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020988847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021053167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:45.109" endtime="20201030 18:39:45.117"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:45.117" endtime="20201030 18:39:45.119"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:44.814" endtime="20201030 18:39:45.120"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:44.812" endtime="20201030 18:39:45.120"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:39:45.124" level="INFO">${RESULT} = [{'diff': 6.431999999999966e-05}, {'diff': 6.401300000000165e-05}, {'diff': 6.37500000000013e-05}, {'diff': 6.4583e-05}, {'diff': 6.452699999999825e-05}, {'diff': 6.379100000000054e-05}, {'diff': 6.37...</msg>
<status status="PASS" starttime="20201030 18:39:45.121" endtime="20201030 18:39:45.124"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:39:45.128" level="INFO">${ACCURACY} = {'diff': [6.431999999999966e-05, 6.401300000000165e-05, 6.37500000000013e-05, 6.4583e-05, 6.452699999999825e-05, 6.379100000000054e-05, 6.376400000000088e-05, 6.397200000000242e-05, 6.409699999999907e...</msg>
<status status="PASS" starttime="20201030 18:39:45.125" endtime="20201030 18:39:45.128"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:39:45.133" level="INFO">NAME: accuracy-TIMER_SLEEP-52-philip</msg>
<status status="PASS" starttime="20201030 18:39:45.132" endtime="20201030 18:39:45.134"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:39:45.136" level="INFO">VALUE: [6.431999999999966e-05, 6.401300000000165e-05, 6.37500000000013e-05, 6.4583e-05, 6.452699999999825e-05, 6.379100000000054e-05, 6.376400000000088e-05, 6.397200000000242e-05, 6.409699999999907e-05, 6.386100000000186e-05, 6.386100000000186e-05, 6.441700000000064e-05, 6.373599999999827e-05, 6.433299999999975e-05, 6.408399999999898e-05, 6.454100000000129e-05, 6.390199999999763e-05, 6.462500000000218e-05, 6.441600000000117e-05, 6.411100000000211e-05, 6.377800000000045e-05, 6.393000000000024e-05, 6.404100000000079e-05, 6.37080000000026e-05, 6.434700000000279e-05, 6.380599999999959e-05, 6.373599999999827e-05, 6.397199999999895e-05, 6.45699999999999e-05, 6.423599999999877e-05, 6.423599999999877e-05, 6.422299999999867e-05, 6.461200000000208e-05, 6.431999999999966e-05, 6.426299999999843e-05, 6.430500000000061e-05, 6.44159999999977e-05, 6.434699999999932e-05, 6.438899999999803e-05, 6.434700000000279e-05, 6.433299999999975e-05, 6.368100000000293e-05, 6.422200000000267e-05, 6.387500000000143e-05, 6.395899999999885e-05, 6.386100000000186e-05, 6.37089999999986e-05, 6.42639999999979e-05, 6.412499999999821e-05, 6.401400000000113e-05]</msg>
<status status="PASS" starttime="20201030 18:39:45.135" endtime="20201030 18:39:45.137"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:45.129" endtime="20201030 18:39:45.138"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:39:45.141" endtime="20201030 18:39:45.161"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:45.140" endtime="20201030 18:39:45.161"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:45.139" endtime="20201030 18:39:45.162"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:44.779" endtime="20201030 18:39:45.162"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:44.778" endtime="20201030 18:39:45.162"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:45.171" endtime="20201030 18:39:45.189"></status>
</kw>
<msg timestamp="20201030 18:39:45.189" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:45.169" endtime="20201030 18:39:45.189"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:45.192" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:45.190" endtime="20201030 18:39:45.192"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:45.193" endtime="20201030 18:39:45.194"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:45.167" endtime="20201030 18:39:45.195"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:45.164" endtime="20201030 18:39:45.195"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:45.202" endtime="20201030 18:39:45.486"></status>
</kw>
<msg timestamp="20201030 18:39:45.489" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020856306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020921833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:45.200" endtime="20201030 18:39:45.489"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:45.498" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020856306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020921833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:45.490" endtime="20201030 18:39:45.498"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:45.499" endtime="20201030 18:39:45.500"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:45.198" endtime="20201030 18:39:45.501"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:45.196" endtime="20201030 18:39:45.501"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:39:45.506" level="INFO">${RESULT} = [{'diff': 6.552699999999925e-05}, {'diff': 6.522299999999967e-05}, {'diff': 6.490300000000157e-05}, {'diff': 6.513899999999878e-05}, {'diff': 6.562499999999971e-05}, {'diff': 6.495800000000038e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:39:45.502" endtime="20201030 18:39:45.506"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:39:45.510" level="INFO">${ACCURACY} = {'diff': [6.552699999999925e-05, 6.522299999999967e-05, 6.490300000000157e-05, 6.513899999999878e-05, 6.562499999999971e-05, 6.495800000000038e-05, 6.47500000000023e-05, 6.484699999999982e-05, 6.56249...</msg>
<status status="PASS" starttime="20201030 18:39:45.507" endtime="20201030 18:39:45.510"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:39:45.514" level="INFO">NAME: accuracy-TIMER_SLEEP-53-philip</msg>
<status status="PASS" starttime="20201030 18:39:45.513" endtime="20201030 18:39:45.515"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:39:45.517" level="INFO">VALUE: [6.552699999999925e-05, 6.522299999999967e-05, 6.490300000000157e-05, 6.513899999999878e-05, 6.562499999999971e-05, 6.495800000000038e-05, 6.47500000000023e-05, 6.484699999999982e-05, 6.562499999999971e-05, 6.516599999999845e-05, 6.566699999999842e-05, 6.527799999999848e-05, 6.481900000000068e-05, 6.469500000000003e-05, 6.536099999999989e-05, 6.504200000000127e-05, 6.520800000000063e-05, 6.536099999999989e-05, 6.482000000000016e-05, 6.512499999999921e-05, 6.498600000000299e-05, 6.5276999999999e-05, 6.555499999999839e-05, 6.468000000000099e-05, 6.563900000000275e-05, 6.536099999999989e-05, 6.470800000000013e-05, 6.499999999999909e-05, 6.559700000000057e-05, 6.497199999999995e-05, 6.469500000000003e-05, 6.519500000000053e-05, 6.540300000000207e-05, 6.523700000000271e-05, 6.516700000000139e-05, 6.534700000000032e-05, 6.512499999999921e-05, 6.529099999999857e-05, 6.491600000000167e-05, 6.511099999999964e-05, 6.487499999999896e-05, 6.538899999999903e-05, 6.561100000000014e-05, 6.486099999999939e-05, 6.518100000000096e-05, 6.55700000000009e-05, 6.558400000000048e-05, 6.504200000000127e-05, 6.505600000000084e-05, 6.49440000000008e-05]</msg>
<status status="PASS" starttime="20201030 18:39:45.516" endtime="20201030 18:39:45.519"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:45.511" endtime="20201030 18:39:45.519"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:39:45.523" endtime="20201030 18:39:45.543"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:45.522" endtime="20201030 18:39:45.543"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:45.520" endtime="20201030 18:39:45.544"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:45.163" endtime="20201030 18:39:45.544"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:45.162" endtime="20201030 18:39:45.544"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:45.553" endtime="20201030 18:39:45.571"></status>
</kw>
<msg timestamp="20201030 18:39:45.572" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:45.551" endtime="20201030 18:39:45.572"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:45.574" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:45.573" endtime="20201030 18:39:45.575"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:45.576" endtime="20201030 18:39:45.577"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:45.549" endtime="20201030 18:39:45.578"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:45.547" endtime="20201030 18:39:45.578"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:45.585" endtime="20201030 18:39:45.896"></status>
</kw>
<msg timestamp="20201030 18:39:45.899" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020168208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020234347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:45.583" endtime="20201030 18:39:45.899"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:45.908" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020168208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020234347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:45.900" endtime="20201030 18:39:45.908"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:45.909" endtime="20201030 18:39:45.910"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:45.581" endtime="20201030 18:39:45.911"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:45.579" endtime="20201030 18:39:45.911"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:39:45.915" level="INFO">${RESULT} = [{'diff': 6.613899999999978e-05}, {'diff': 6.663900000000028e-05}, {'diff': 6.634700000000132e-05}, {'diff': 6.577799999999898e-05}, {'diff': 6.64029999999996e-05}, {'diff': 6.594399999999834e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:39:45.912" endtime="20201030 18:39:45.916"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:39:45.921" level="INFO">${ACCURACY} = {'diff': [6.613899999999978e-05, 6.663900000000028e-05, 6.634700000000132e-05, 6.577799999999898e-05, 6.64029999999996e-05, 6.594399999999834e-05, 6.616700000000239e-05, 6.665299999999985e-05, 6.60000...</msg>
<status status="PASS" starttime="20201030 18:39:45.917" endtime="20201030 18:39:45.921"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:39:45.925" level="INFO">NAME: accuracy-TIMER_SLEEP-54-philip</msg>
<status status="PASS" starttime="20201030 18:39:45.924" endtime="20201030 18:39:45.926"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:39:45.928" level="INFO">VALUE: [6.613899999999978e-05, 6.663900000000028e-05, 6.634700000000132e-05, 6.577799999999898e-05, 6.64029999999996e-05, 6.594399999999834e-05, 6.616700000000239e-05, 6.665299999999985e-05, 6.600000000000009e-05, 6.587499999999996e-05, 6.587499999999996e-05, 6.605499999999889e-05, 6.587499999999996e-05, 6.638900000000003e-05, 6.617999999999902e-05, 6.612500000000021e-05, 6.581899999999821e-05, 6.636100000000089e-05, 6.567999999999852e-05, 6.574999999999984e-05, 6.591699999999867e-05, 6.655599999999887e-05, 6.661100000000114e-05, 6.57639999999994e-05, 6.611100000000064e-05, 6.633400000000123e-05, 6.605500000000236e-05, 6.619400000000206e-05, 6.631999999999819e-05, 6.62220000000012e-05, 6.645800000000188e-05, 6.577800000000245e-05, 6.600000000000009e-05, 6.647199999999798e-05, 6.629199999999905e-05, 6.633300000000175e-05, 6.605600000000184e-05, 6.647200000000145e-05, 6.636100000000089e-05, 6.615199999999988e-05, 6.582000000000116e-05, 6.665299999999985e-05, 6.605599999999837e-05, 6.611200000000012e-05, 6.658299999999853e-05, 6.609700000000107e-05, 6.6277e-05, 6.640200000000013e-05, 6.665299999999985e-05, 6.593100000000171e-05]</msg>
<status status="PASS" starttime="20201030 18:39:45.927" endtime="20201030 18:39:45.929"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:45.922" endtime="20201030 18:39:45.929"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:39:45.933" endtime="20201030 18:39:45.953"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:45.932" endtime="20201030 18:39:45.953"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:45.930" endtime="20201030 18:39:45.954"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:45.545" endtime="20201030 18:39:45.954"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:45.544" endtime="20201030 18:39:45.954"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:45.963" endtime="20201030 18:39:45.981"></status>
</kw>
<msg timestamp="20201030 18:39:45.982" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:45.961" endtime="20201030 18:39:45.982"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:45.984" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:45.983" endtime="20201030 18:39:45.985"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:45.986" endtime="20201030 18:39:45.987"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:45.959" endtime="20201030 18:39:45.988"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:45.957" endtime="20201030 18:39:45.988"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:45.995" endtime="20201030 18:39:46.282"></status>
</kw>
<msg timestamp="20201030 18:39:46.285" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020233861, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:39:45.993" endtime="20201030 18:39:46.285"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:46.293" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020233861, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:39:46.286" endtime="20201030 18:39:46.294"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:46.294" endtime="20201030 18:39:46.296"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:45.991" endtime="20201030 18:39:46.297"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:45.989" endtime="20201030 18:39:46.297"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:39:46.301" level="INFO">${RESULT} = [{'diff': 6.686099999999792e-05}, {'diff': 6.683400000000173e-05}, {'diff': 6.729200000000005e-05}, {'diff': 6.700000000000109e-05}, {'diff': 6.67640000000004e-05}, {'diff': 6.741700000000017e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:39:46.298" endtime="20201030 18:39:46.302"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:39:46.306" level="INFO">${ACCURACY} = {'diff': [6.686099999999792e-05, 6.683400000000173e-05, 6.729200000000005e-05, 6.700000000000109e-05, 6.67640000000004e-05, 6.741700000000017e-05, 6.755500000000039e-05, 6.747299999999845e-05, 6.70559...</msg>
<status status="PASS" starttime="20201030 18:39:46.302" endtime="20201030 18:39:46.306"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:39:46.310" level="INFO">NAME: accuracy-TIMER_SLEEP-55-philip</msg>
<status status="PASS" starttime="20201030 18:39:46.309" endtime="20201030 18:39:46.311"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:39:46.313" level="INFO">VALUE: [6.686099999999792e-05, 6.683400000000173e-05, 6.729200000000005e-05, 6.700000000000109e-05, 6.67640000000004e-05, 6.741700000000017e-05, 6.755500000000039e-05, 6.747299999999845e-05, 6.705599999999937e-05, 6.720799999999916e-05, 6.701399999999719e-05, 6.690199999999716e-05, 6.704099999999685e-05, 6.698599999999805e-05, 6.708299999999903e-05, 6.733300000000275e-05, 6.694399999999934e-05, 6.733299999999928e-05, 6.688899999999706e-05, 6.672199999999823e-05, 6.669500000000203e-05, 6.693100000000271e-05, 6.748600000000202e-05, 6.681999999999869e-05, 6.668099999999899e-05, 6.761100000000214e-05, 6.675000000000084e-05, 6.675000000000084e-05, 6.669399999999909e-05, 6.666600000000342e-05, 6.736099999999842e-05, 6.712499999999774e-05, 6.674999999999737e-05, 6.700000000000109e-05, 6.686100000000139e-05, 6.681999999999869e-05, 6.748699999999802e-05, 6.668099999999899e-05, 6.688800000000106e-05, 6.683400000000173e-05, 6.754099999999735e-05, 6.706899999999946e-05, 6.711099999999817e-05, 6.692999999999977e-05, 6.700000000000109e-05, 6.729200000000005e-05, 6.712500000000121e-05, 6.698599999999805e-05, 6.762499999999824e-05, 6.722199999999873e-05]</msg>
<status status="PASS" starttime="20201030 18:39:46.311" endtime="20201030 18:39:46.318"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:46.306" endtime="20201030 18:39:46.319"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:39:46.323" endtime="20201030 18:39:46.343"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:46.321" endtime="20201030 18:39:46.343"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:46.320" endtime="20201030 18:39:46.343"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:45.955" endtime="20201030 18:39:46.344"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:45.954" endtime="20201030 18:39:46.344"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:46.353" endtime="20201030 18:39:46.375"></status>
</kw>
<msg timestamp="20201030 18:39:46.376" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:46.351" endtime="20201030 18:39:46.376"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:46.378" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:46.377" endtime="20201030 18:39:46.378"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:46.379" endtime="20201030 18:39:46.381"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:46.349" endtime="20201030 18:39:46.381"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:46.346" endtime="20201030 18:39:46.382"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:46.389" endtime="20201030 18:39:46.675"></status>
</kw>
<msg timestamp="20201030 18:39:46.678" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023607569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023675667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:46.387" endtime="20201030 18:39:46.679"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:46.686" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023607569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023675667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:46.679" endtime="20201030 18:39:46.687"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:46.688" endtime="20201030 18:39:46.689"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:46.384" endtime="20201030 18:39:46.690"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:46.383" endtime="20201030 18:39:46.690"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:39:46.694" level="INFO">${RESULT} = [{'diff': 6.809800000000255e-05}, {'diff': 6.857000000000044e-05}, {'diff': 6.845800000000041e-05}, {'diff': 6.854100000000182e-05}, {'diff': 6.801400000000166e-05}, {'diff': 6.818000000000102e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:39:46.691" endtime="20201030 18:39:46.694"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:39:46.698" level="INFO">${ACCURACY} = {'diff': [6.809800000000255e-05, 6.857000000000044e-05, 6.845800000000041e-05, 6.854100000000182e-05, 6.801400000000166e-05, 6.818000000000102e-05, 6.863899999999881e-05, 6.838899999999856e-05, 6.8042...</msg>
<status status="PASS" starttime="20201030 18:39:46.695" endtime="20201030 18:39:46.698"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:39:46.703" level="INFO">NAME: accuracy-TIMER_SLEEP-56-philip</msg>
<status status="PASS" starttime="20201030 18:39:46.702" endtime="20201030 18:39:46.703"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:39:46.705" level="INFO">VALUE: [6.809800000000255e-05, 6.857000000000044e-05, 6.845800000000041e-05, 6.854100000000182e-05, 6.801400000000166e-05, 6.818000000000102e-05, 6.863899999999881e-05, 6.838899999999856e-05, 6.80420000000008e-05, 6.795799999999991e-05, 6.84030000000016e-05, 6.834699999999985e-05, 6.868000000000152e-05, 6.82640000000019e-05, 6.865299999999838e-05, 6.787499999999849e-05, 6.8584e-05, 6.811199999999865e-05, 6.777699999999803e-05, 6.806900000000046e-05, 6.802699999999828e-05, 6.813899999999831e-05, 6.863900000000228e-05, 6.840299999999813e-05, 6.801399999999819e-05, 6.766700000000042e-05, 6.865300000000185e-05, 6.770899999999913e-05, 6.786099999999892e-05, 6.859799999999958e-05, 6.844500000000031e-05, 6.805499999999742e-05, 6.780600000000012e-05, 6.799999999999862e-05, 6.794400000000034e-05, 6.82359999999993e-05, 6.827800000000148e-05, 6.794400000000034e-05, 6.856899999999749e-05, 6.838900000000203e-05, 6.783299999999978e-05, 6.857000000000044e-05, 6.82359999999993e-05, 6.77359999999988e-05, 6.770899999999913e-05, 6.863900000000228e-05, 6.77640000000014e-05, 6.863899999999881e-05, 6.799999999999862e-05, 6.779100000000107e-05]</msg>
<status status="PASS" starttime="20201030 18:39:46.704" endtime="20201030 18:39:46.707"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:46.699" endtime="20201030 18:39:46.707"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:39:46.711" endtime="20201030 18:39:46.730"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:46.709" endtime="20201030 18:39:46.731"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:46.708" endtime="20201030 18:39:46.731"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:46.345" endtime="20201030 18:39:46.731"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:46.344" endtime="20201030 18:39:46.731"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:46.740" endtime="20201030 18:39:46.757"></status>
</kw>
<msg timestamp="20201030 18:39:46.758" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:46.738" endtime="20201030 18:39:46.758"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:46.760" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:46.759" endtime="20201030 18:39:46.760"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:46.761" endtime="20201030 18:39:46.763"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:46.736" endtime="20201030 18:39:46.763"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:46.734" endtime="20201030 18:39:46.764"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:46.770" endtime="20201030 18:39:47.055"></status>
</kw>
<msg timestamp="20201030 18:39:47.058" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019627889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019696903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:46.768" endtime="20201030 18:39:47.059"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:47.066" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019627889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019696903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:47.059" endtime="20201030 18:39:47.067"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:47.068" endtime="20201030 18:39:47.069"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:46.766" endtime="20201030 18:39:47.070"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:46.764" endtime="20201030 18:39:47.070"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:39:47.074" level="INFO">${RESULT} = [{'diff': 6.901400000000266e-05}, {'diff': 6.968099999999852e-05}, {'diff': 6.893100000000124e-05}, {'diff': 6.893100000000124e-05}, {'diff': 6.927799999999901e-05}, {'diff': 6.880600000000112e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:39:47.071" endtime="20201030 18:39:47.074"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:39:47.079" level="INFO">${ACCURACY} = {'diff': [6.901400000000266e-05, 6.968099999999852e-05, 6.893100000000124e-05, 6.893100000000124e-05, 6.927799999999901e-05, 6.880600000000112e-05, 6.932000000000119e-05, 6.918099999999802e-05, 6.8930...</msg>
<status status="PASS" starttime="20201030 18:39:47.075" endtime="20201030 18:39:47.079"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:39:47.083" level="INFO">NAME: accuracy-TIMER_SLEEP-57-philip</msg>
<status status="PASS" starttime="20201030 18:39:47.082" endtime="20201030 18:39:47.084"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:39:47.086" level="INFO">VALUE: [6.901400000000266e-05, 6.968099999999852e-05, 6.893100000000124e-05, 6.893100000000124e-05, 6.927799999999901e-05, 6.880600000000112e-05, 6.932000000000119e-05, 6.918099999999802e-05, 6.893099999999777e-05, 6.945900000000088e-05, 6.963899999999981e-05, 6.951300000000021e-05, 6.916599999999898e-05, 6.958299999999806e-05, 6.87359999999998e-05, 6.870799999999719e-05, 6.94030000000026e-05, 6.958299999999806e-05, 6.927799999999901e-05, 6.962500000000024e-05, 6.938900000000303e-05, 6.90970000000006e-05, 6.897299999999995e-05, 6.862499999999924e-05, 6.930500000000214e-05, 6.912499999999974e-05, 6.958300000000153e-05, 6.877800000000198e-05, 6.905499999999842e-05, 6.92360000000003e-05, 6.956899999999849e-05, 6.929200000000205e-05, 6.904199999999833e-05, 6.922200000000073e-05, 6.902799999999876e-05, 6.894500000000081e-05, 6.90420000000018e-05, 6.9584000000001e-05, 6.930600000000162e-05, 6.89299999999983e-05, 6.96109999999972e-05, 6.951399999999969e-05, 6.90970000000006e-05, 6.891700000000167e-05, 6.940299999999913e-05, 6.891700000000167e-05, 6.941700000000217e-05, 6.897200000000048e-05, 6.956999999999797e-05, 6.924999999999987e-05]</msg>
<status status="PASS" starttime="20201030 18:39:47.084" endtime="20201030 18:39:47.087"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:47.080" endtime="20201030 18:39:47.087"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:39:47.091" endtime="20201030 18:39:47.110"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:47.089" endtime="20201030 18:39:47.111"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:47.088" endtime="20201030 18:39:47.111"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:46.732" endtime="20201030 18:39:47.111"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:46.732" endtime="20201030 18:39:47.112"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:47.120" endtime="20201030 18:39:47.138"></status>
</kw>
<msg timestamp="20201030 18:39:47.138" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:47.119" endtime="20201030 18:39:47.138"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:47.141" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:47.139" endtime="20201030 18:39:47.141"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:47.142" endtime="20201030 18:39:47.143"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:47.116" endtime="20201030 18:39:47.144"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:47.114" endtime="20201030 18:39:47.144"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:47.151" endtime="20201030 18:39:47.436"></status>
</kw>
<msg timestamp="20201030 18:39:47.440" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019664389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019735042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:47.149" endtime="20201030 18:39:47.440"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:47.448" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019664389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019735042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:47.441" endtime="20201030 18:39:47.448"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:47.449" endtime="20201030 18:39:47.450"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:47.147" endtime="20201030 18:39:47.451"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:47.145" endtime="20201030 18:39:47.451"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:39:47.455" level="INFO">${RESULT} = [{'diff': 7.065300000000038e-05}, {'diff': 7.017999999999955e-05}, {'diff': 7.026400000000044e-05}, {'diff': 6.981899999999874e-05}, {'diff': 7.044399999999937e-05}, {'diff': 6.987499999999702e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:39:47.452" endtime="20201030 18:39:47.455"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:39:47.459" level="INFO">${ACCURACY} = {'diff': [7.065300000000038e-05, 7.017999999999955e-05, 7.026400000000044e-05, 6.981899999999874e-05, 7.044399999999937e-05, 6.987499999999702e-05, 7.000000000000062e-05, 7.006899999999899e-05, 7.0124...</msg>
<status status="PASS" starttime="20201030 18:39:47.456" endtime="20201030 18:39:47.460"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:39:47.464" level="INFO">NAME: accuracy-TIMER_SLEEP-58-philip</msg>
<status status="PASS" starttime="20201030 18:39:47.463" endtime="20201030 18:39:47.464"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:39:47.466" level="INFO">VALUE: [7.065300000000038e-05, 7.017999999999955e-05, 7.026400000000044e-05, 6.981899999999874e-05, 7.044399999999937e-05, 6.987499999999702e-05, 7.000000000000062e-05, 7.006899999999899e-05, 7.012499999999727e-05, 6.966699999999895e-05, 6.980600000000212e-05, 7.063900000000081e-05, 7.062499999999777e-05, 7.015299999999988e-05, 7.051400000000069e-05, 6.998600000000105e-05, 7.023700000000077e-05, 6.975000000000037e-05, 7.041600000000023e-05, 7.036099999999795e-05, 6.988900000000006e-05, 7.047199999999851e-05, 6.997200000000148e-05, 7.058299999999906e-05, 7.058300000000253e-05, 7.034700000000185e-05, 6.993099999999877e-05, 6.993100000000224e-05, 7.025000000000087e-05, 7.033399999999829e-05, 7.058399999999854e-05, 7.017999999999955e-05, 7.045799999999894e-05, 7.040200000000066e-05, 6.972200000000123e-05, 7.02910000000001e-05, 6.99169999999992e-05, 7.065300000000038e-05, 6.993100000000224e-05, 6.984800000000083e-05, 7.051400000000069e-05, 7.001400000000019e-05, 6.998599999999758e-05, 7.03620000000009e-05, 7.034699999999838e-05, 7.026400000000044e-05, 7.056999999999897e-05, 7.040199999999719e-05, 7.020800000000216e-05, 6.99299999999993e-05]</msg>
<status status="PASS" starttime="20201030 18:39:47.465" endtime="20201030 18:39:47.467"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:47.460" endtime="20201030 18:39:47.468"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:39:47.471" endtime="20201030 18:39:47.491"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:47.470" endtime="20201030 18:39:47.491"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:47.469" endtime="20201030 18:39:47.492"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:47.112" endtime="20201030 18:39:47.492"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:47.112" endtime="20201030 18:39:47.492"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:47.501" endtime="20201030 18:39:47.519"></status>
</kw>
<msg timestamp="20201030 18:39:47.519" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:47.499" endtime="20201030 18:39:47.520"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:47.522" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:47.520" endtime="20201030 18:39:47.522"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:47.523" endtime="20201030 18:39:47.524"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:47.497" endtime="20201030 18:39:47.525"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:47.494" endtime="20201030 18:39:47.525"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:47.532" endtime="20201030 18:39:47.817"></status>
</kw>
<msg timestamp="20201030 18:39:47.820" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020474347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020545194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:47.530" endtime="20201030 18:39:47.821"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:47.828" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020474347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020545194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:47.821" endtime="20201030 18:39:47.829"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:47.830" endtime="20201030 18:39:47.831"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:47.528" endtime="20201030 18:39:47.832"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:47.526" endtime="20201030 18:39:47.832"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:39:47.837" level="INFO">${RESULT} = [{'diff': 7.084699999999888e-05}, {'diff': 7.134699999999938e-05}, {'diff': 7.12499999999984e-05}, {'diff': 7.080500000000017e-05}, {'diff': 7.109800000000208e-05}, {'diff': 7.116700000000045e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:39:47.833" endtime="20201030 18:39:47.837"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:39:47.841" level="INFO">${ACCURACY} = {'diff': [7.084699999999888e-05, 7.134699999999938e-05, 7.12499999999984e-05, 7.080500000000017e-05, 7.109800000000208e-05, 7.116700000000045e-05, 7.122199999999926e-05, 7.072199999999876e-05, 7.14030...</msg>
<status status="PASS" starttime="20201030 18:39:47.838" endtime="20201030 18:39:47.841"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:39:47.846" level="INFO">NAME: accuracy-TIMER_SLEEP-59-philip</msg>
<status status="PASS" starttime="20201030 18:39:47.845" endtime="20201030 18:39:47.846"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:39:47.849" level="INFO">VALUE: [7.084699999999888e-05, 7.134699999999938e-05, 7.12499999999984e-05, 7.080500000000017e-05, 7.109800000000208e-05, 7.116700000000045e-05, 7.122199999999926e-05, 7.072199999999876e-05, 7.140300000000113e-05, 7.159799999999911e-05, 7.156999999999997e-05, 7.145900000000288e-05, 7.087500000000149e-05, 7.152800000000126e-05, 7.109699999999913e-05, 7.129099999999763e-05, 7.15690000000005e-05, 7.163899999999834e-05, 7.081999999999922e-05, 7.104199999999686e-05, 7.086100000000192e-05, 7.122299999999873e-05, 7.138899999999809e-05, 7.140300000000113e-05, 7.127800000000101e-05, 7.168000000000105e-05, 7.116700000000045e-05, 7.159699999999963e-05, 7.112499999999827e-05, 7.108299999999956e-05, 7.144400000000037e-05, 7.081899999999974e-05, 7.126399999999797e-05, 7.075000000000137e-05, 7.11109999999987e-05, 7.10559999999999e-05, 7.095799999999944e-05, 7.07499999999979e-05, 7.158399999999954e-05, 7.147199999999951e-05, 7.123700000000177e-05, 7.112500000000174e-05, 7.165199999999844e-05, 7.115199999999794e-05, 7.159699999999963e-05, 7.141600000000123e-05, 7.095799999999944e-05, 7.069399999999962e-05, 7.134699999999938e-05, 7.152800000000126e-05]</msg>
<status status="PASS" starttime="20201030 18:39:47.847" endtime="20201030 18:39:47.850"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:47.842" endtime="20201030 18:39:47.851"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:39:47.854" endtime="20201030 18:39:47.874"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:47.853" endtime="20201030 18:39:47.874"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:47.852" endtime="20201030 18:39:47.875"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:47.493" endtime="20201030 18:39:47.875"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:47.492" endtime="20201030 18:39:47.875"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:47.884" endtime="20201030 18:39:47.902"></status>
</kw>
<msg timestamp="20201030 18:39:47.903" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:47.882" endtime="20201030 18:39:47.903"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:47.905" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:47.904" endtime="20201030 18:39:47.905"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:47.906" endtime="20201030 18:39:47.908"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:47.880" endtime="20201030 18:39:47.908"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:47.878" endtime="20201030 18:39:47.909"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:47.915" endtime="20201030 18:39:48.201"></status>
</kw>
<msg timestamp="20201030 18:39:48.204" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019616597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019689236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:47.914" endtime="20201030 18:39:48.204"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:48.212" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019616597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019689236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:48.205" endtime="20201030 18:39:48.212"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:48.213" endtime="20201030 18:39:48.215"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:47.911" endtime="20201030 18:39:48.215"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:47.909" endtime="20201030 18:39:48.216"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:39:48.220" level="INFO">${RESULT} = [{'diff': 7.263899999999934e-05}, {'diff': 7.265300000000238e-05}, {'diff': 7.19309999999973e-05}, {'diff': 7.267999999999858e-05}, {'diff': 7.25829999999976e-05}, {'diff': 7.25690000000015e-05}, {'di...</msg>
<status status="PASS" starttime="20201030 18:39:48.217" endtime="20201030 18:39:48.220"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:39:48.225" level="INFO">${ACCURACY} = {'diff': [7.263899999999934e-05, 7.265300000000238e-05, 7.19309999999973e-05, 7.267999999999858e-05, 7.25829999999976e-05, 7.25690000000015e-05, 7.226399999999897e-05, 7.263899999999934e-05, 7.1680000...</msg>
<status status="PASS" starttime="20201030 18:39:48.221" endtime="20201030 18:39:48.225"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:39:48.229" level="INFO">NAME: accuracy-TIMER_SLEEP-60-philip</msg>
<status status="PASS" starttime="20201030 18:39:48.228" endtime="20201030 18:39:48.230"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:39:48.232" level="INFO">VALUE: [7.263899999999934e-05, 7.265300000000238e-05, 7.19309999999973e-05, 7.267999999999858e-05, 7.25829999999976e-05, 7.25690000000015e-05, 7.226399999999897e-05, 7.263899999999934e-05, 7.168000000000105e-05, 7.187500000000249e-05, 7.17499999999989e-05, 7.266699999999848e-05, 7.213900000000231e-05, 7.191599999999826e-05, 7.25560000000014e-05, 7.186099999999945e-05, 7.177699999999856e-05, 7.238899999999909e-05, 7.227699999999906e-05, 7.17499999999989e-05, 7.234700000000038e-05, 7.234700000000038e-05, 7.19170000000012e-05, 7.263899999999934e-05, 7.240299999999866e-05, 7.187499999999902e-05, 7.198599999999958e-05, 7.180599999999718e-05, 7.194500000000034e-05, 7.223599999999983e-05, 7.263899999999934e-05, 7.223599999999983e-05, 7.190300000000163e-05, 7.219400000000112e-05, 7.191599999999826e-05, 7.197200000000001e-05, 7.187500000000249e-05, 7.169400000000062e-05, 7.17499999999989e-05, 7.233300000000081e-05, 7.238899999999909e-05, 7.172199999999976e-05, 7.172299999999923e-05, 7.230600000000115e-05, 7.182000000000022e-05, 7.176300000000246e-05, 7.204099999999838e-05, 7.191600000000173e-05, 7.231900000000124e-05, 7.204099999999838e-05]</msg>
<status status="PASS" starttime="20201030 18:39:48.230" endtime="20201030 18:39:48.232"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:48.226" endtime="20201030 18:39:48.233"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:39:48.237" endtime="20201030 18:39:48.256"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:48.235" endtime="20201030 18:39:48.257"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:48.234" endtime="20201030 18:39:48.257"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:47.876" endtime="20201030 18:39:48.257"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:47.875" endtime="20201030 18:39:48.258"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:48.266" endtime="20201030 18:39:48.285"></status>
</kw>
<msg timestamp="20201030 18:39:48.285" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:48.265" endtime="20201030 18:39:48.285"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:48.288" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:48.286" endtime="20201030 18:39:48.288"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:48.289" endtime="20201030 18:39:48.290"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:48.262" endtime="20201030 18:39:48.291"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:48.260" endtime="20201030 18:39:48.291"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:48.298" endtime="20201030 18:39:48.585"></status>
</kw>
<msg timestamp="20201030 18:39:48.588" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020614875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020688361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:48.296" endtime="20201030 18:39:48.588"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:48.596" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020614875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020688361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:48.589" endtime="20201030 18:39:48.597"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:48.597" endtime="20201030 18:39:48.599"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:48.293" endtime="20201030 18:39:48.599"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:48.292" endtime="20201030 18:39:48.600"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:39:48.604" level="INFO">${RESULT} = [{'diff': 7.348599999999761e-05}, {'diff': 7.35560000000024e-05}, {'diff': 7.329199999999911e-05}, {'diff': 7.316699999999898e-05}, {'diff': 7.300000000000015e-05}, {'diff': 7.35699999999985e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:39:48.601" endtime="20201030 18:39:48.604"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:39:48.608" level="INFO">${ACCURACY} = {'diff': [7.348599999999761e-05, 7.35560000000024e-05, 7.329199999999911e-05, 7.316699999999898e-05, 7.300000000000015e-05, 7.35699999999985e-05, 7.291699999999873e-05, 7.308400000000104e-05, 7.300000...</msg>
<status status="PASS" starttime="20201030 18:39:48.605" endtime="20201030 18:39:48.608"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:39:48.612" level="INFO">NAME: accuracy-TIMER_SLEEP-61-philip</msg>
<status status="PASS" starttime="20201030 18:39:48.611" endtime="20201030 18:39:48.613"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:39:48.615" level="INFO">VALUE: [7.348599999999761e-05, 7.35560000000024e-05, 7.329199999999911e-05, 7.316699999999898e-05, 7.300000000000015e-05, 7.35699999999985e-05, 7.291699999999873e-05, 7.308400000000104e-05, 7.300000000000015e-05, 7.323600000000083e-05, 7.356899999999902e-05, 7.273600000000033e-05, 7.327799999999954e-05, 7.316699999999898e-05, 7.265299999999891e-05, 7.329199999999911e-05, 7.288899999999959e-05, 7.308400000000104e-05, 7.334700000000138e-05, 7.288900000000306e-05, 7.365200000000044e-05, 7.323599999999736e-05, 7.268000000000205e-05, 7.362500000000077e-05, 7.340299999999966e-05, 7.366699999999948e-05, 7.304099999999938e-05, 7.31110000000007e-05, 7.323600000000083e-05, 7.29309999999983e-05, 7.282000000000122e-05, 7.31110000000007e-05, 7.363900000000034e-05, 7.304199999999886e-05, 7.323600000000083e-05, 7.358400000000154e-05, 7.301399999999972e-05, 7.267999999999858e-05, 7.319400000000212e-05, 7.327799999999954e-05, 7.29300000000023e-05, 7.290299999999916e-05, 7.347200000000151e-05, 7.341699999999923e-05, 7.279199999999861e-05, 7.334799999999739e-05, 7.269500000000109e-05, 7.286100000000045e-05, 7.27499999999999e-05, 7.361199999999721e-05]</msg>
<status status="PASS" starttime="20201030 18:39:48.613" endtime="20201030 18:39:48.615"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:48.609" endtime="20201030 18:39:48.616"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:39:48.620" endtime="20201030 18:39:48.639"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:48.618" endtime="20201030 18:39:48.640"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:48.617" endtime="20201030 18:39:48.640"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:48.258" endtime="20201030 18:39:48.640"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:48.258" endtime="20201030 18:39:48.640"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:48.649" endtime="20201030 18:39:48.668"></status>
</kw>
<msg timestamp="20201030 18:39:48.669" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:48.648" endtime="20201030 18:39:48.669"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:48.671" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:48.670" endtime="20201030 18:39:48.671"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:48.672" endtime="20201030 18:39:48.674"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:48.645" endtime="20201030 18:39:48.674"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:48.643" endtime="20201030 18:39:48.675"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:48.681" endtime="20201030 18:39:48.968"></status>
</kw>
<msg timestamp="20201030 18:39:48.971" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020543111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020616972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:48.680" endtime="20201030 18:39:48.971"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:48.979" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020543111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020616972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:48.972" endtime="20201030 18:39:48.979"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:48.980" endtime="20201030 18:39:48.982"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:48.677" endtime="20201030 18:39:48.982"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:48.675" endtime="20201030 18:39:48.982"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:39:48.986" level="INFO">${RESULT} = [{'diff': 7.386100000000145e-05}, {'diff': 7.423599999999836e-05}, {'diff': 7.445799999999947e-05}, {'diff': 7.405599999999943e-05}, {'diff': 7.381999999999875e-05}, {'diff': 7.405599999999943e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:39:48.983" endtime="20201030 18:39:48.987"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:39:48.990" level="INFO">${ACCURACY} = {'diff': [7.386100000000145e-05, 7.423599999999836e-05, 7.445799999999947e-05, 7.405599999999943e-05, 7.381999999999875e-05, 7.405599999999943e-05, 7.459799999999864e-05, 7.463900000000134e-05, 7.4153...</msg>
<status status="PASS" starttime="20201030 18:39:48.987" endtime="20201030 18:39:48.991"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:39:48.995" level="INFO">NAME: accuracy-TIMER_SLEEP-62-philip</msg>
<status status="PASS" starttime="20201030 18:39:48.994" endtime="20201030 18:39:48.995"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:39:48.997" level="INFO">VALUE: [7.386100000000145e-05, 7.423599999999836e-05, 7.445799999999947e-05, 7.405599999999943e-05, 7.381999999999875e-05, 7.405599999999943e-05, 7.459799999999864e-05, 7.463900000000134e-05, 7.415300000000041e-05, 7.369499999999862e-05, 7.445799999999947e-05, 7.409699999999866e-05, 7.456900000000002e-05, 7.440200000000119e-05, 7.456900000000002e-05, 7.381899999999927e-05, 7.384699999999841e-05, 7.39439999999994e-05, 7.404199999999986e-05, 7.37500000000009e-05, 7.437499999999805e-05, 7.459799999999864e-05, 7.391699999999973e-05, 7.386200000000093e-05, 7.4069000000003e-05, 7.465199999999797e-05, 7.445799999999947e-05, 7.381900000000274e-05, 7.387500000000102e-05, 7.398600000000158e-05, 7.413900000000084e-05, 7.416699999999998e-05, 7.418099999999955e-05, 7.437500000000152e-05, 7.372200000000176e-05, 7.395899999999844e-05, 7.388900000000059e-05, 7.386200000000093e-05, 7.392999999999983e-05, 7.376400000000047e-05, 7.434699999999891e-05, 7.390300000000016e-05, 7.408300000000256e-05, 7.454200000000036e-05, 7.404199999999986e-05, 7.433299999999934e-05, 7.376400000000047e-05, 7.401400000000072e-05, 7.412500000000127e-05, 7.37500000000009e-05]</msg>
<status status="PASS" starttime="20201030 18:39:48.996" endtime="20201030 18:39:48.999"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:48.991" endtime="20201030 18:39:48.999"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:39:49.003" endtime="20201030 18:39:49.023"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:49.002" endtime="20201030 18:39:49.023"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:49.000" endtime="20201030 18:39:49.023"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:48.641" endtime="20201030 18:39:49.024"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:48.641" endtime="20201030 18:39:49.024"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:49.033" endtime="20201030 18:39:49.050"></status>
</kw>
<msg timestamp="20201030 18:39:49.051" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:49.031" endtime="20201030 18:39:49.051"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:49.053" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:49.052" endtime="20201030 18:39:49.054"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:49.054" endtime="20201030 18:39:49.056"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:49.028" endtime="20201030 18:39:49.057"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:49.026" endtime="20201030 18:39:49.057"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:49.063" endtime="20201030 18:39:49.349"></status>
</kw>
<msg timestamp="20201030 18:39:49.352" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020330069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020404958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:49.062" endtime="20201030 18:39:49.353"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:49.360" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020330069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020404958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:49.354" endtime="20201030 18:39:49.361"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:49.362" endtime="20201030 18:39:49.363"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:49.059" endtime="20201030 18:39:49.364"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:49.058" endtime="20201030 18:39:49.364"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:39:49.368" level="INFO">${RESULT} = [{'diff': 7.488900000000159e-05}, {'diff': 7.481900000000027e-05}, {'diff': 7.48050000000007e-05}, {'diff': 7.552799999999832e-05}, {'diff': 7.533300000000034e-05}, {'diff': 7.506900000000052e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:39:49.365" endtime="20201030 18:39:49.368"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:39:49.373" level="INFO">${ACCURACY} = {'diff': [7.488900000000159e-05, 7.481900000000027e-05, 7.48050000000007e-05, 7.552799999999832e-05, 7.533300000000034e-05, 7.506900000000052e-05, 7.541699999999776e-05, 7.548599999999961e-05, 7.48199...</msg>
<status status="PASS" starttime="20201030 18:39:49.369" endtime="20201030 18:39:49.373"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:39:49.378" level="INFO">NAME: accuracy-TIMER_SLEEP-63-philip</msg>
<status status="PASS" starttime="20201030 18:39:49.377" endtime="20201030 18:39:49.378"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:39:49.380" level="INFO">VALUE: [7.488900000000159e-05, 7.481900000000027e-05, 7.48050000000007e-05, 7.552799999999832e-05, 7.533300000000034e-05, 7.506900000000052e-05, 7.541699999999776e-05, 7.548599999999961e-05, 7.481999999999975e-05, 7.486100000000245e-05, 7.545899999999994e-05, 7.529200000000111e-05, 7.468100000000005e-05, 7.518000000000108e-05, 7.532000000000025e-05, 7.469400000000015e-05, 7.4763999999998e-05, 7.545800000000047e-05, 7.467999999999711e-05, 7.551399999999875e-05, 7.54029999999982e-05, 7.474999999999843e-05, 7.486099999999898e-05, 7.47500000000019e-05, 7.563900000000234e-05, 7.488899999999812e-05, 7.488900000000159e-05, 7.483299999999984e-05, 7.488899999999812e-05, 7.506900000000052e-05, 7.516700000000098e-05, 7.518100000000055e-05, 7.50830000000001e-05, 7.497199999999954e-05, 7.479200000000061e-05, 7.486100000000245e-05, 7.566600000000201e-05, 7.520800000000022e-05, 7.551399999999875e-05, 7.56379999999994e-05, 7.559700000000016e-05, 7.486099999999898e-05, 7.505500000000095e-05, 7.533300000000034e-05, 7.555499999999798e-05, 7.506900000000052e-05, 7.56110000000032e-05, 7.540300000000166e-05, 7.534699999999991e-05, 7.547200000000004e-05]</msg>
<status status="PASS" starttime="20201030 18:39:49.379" endtime="20201030 18:39:49.381"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:49.374" endtime="20201030 18:39:49.381"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:39:49.385" endtime="20201030 18:39:49.404"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:49.383" endtime="20201030 18:39:49.405"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:49.382" endtime="20201030 18:39:49.405"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:49.025" endtime="20201030 18:39:49.405"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:49.024" endtime="20201030 18:39:49.406"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:49.414" endtime="20201030 18:39:49.432"></status>
</kw>
<msg timestamp="20201030 18:39:49.432" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:49.413" endtime="20201030 18:39:49.433"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:49.435" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:49.433" endtime="20201030 18:39:49.435"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:49.436" endtime="20201030 18:39:49.438"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:49.410" endtime="20201030 18:39:49.438"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:49.408" endtime="20201030 18:39:49.438"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:49.445" endtime="20201030 18:39:49.732"></status>
</kw>
<msg timestamp="20201030 18:39:49.735" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020381028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020457236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:49.443" endtime="20201030 18:39:49.735"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:49.743" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020381028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020457236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:49.736" endtime="20201030 18:39:49.743"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:49.744" endtime="20201030 18:39:49.746"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:49.441" endtime="20201030 18:39:49.746"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:49.439" endtime="20201030 18:39:49.747"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:39:49.751" level="INFO">${RESULT} = [{'diff': 7.620800000000122e-05}, {'diff': 7.597200000000054e-05}, {'diff': 7.623600000000036e-05}, {'diff': 7.599999999999968e-05}, {'diff': 7.616700000000198e-05}, {'diff': 7.611100000000023e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:39:49.748" endtime="20201030 18:39:49.751"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:39:49.755" level="INFO">${ACCURACY} = {'diff': [7.620800000000122e-05, 7.597200000000054e-05, 7.623600000000036e-05, 7.599999999999968e-05, 7.616700000000198e-05, 7.611100000000023e-05, 7.65700000000015e-05, 7.601299999999978e-05, 7.62920...</msg>
<status status="PASS" starttime="20201030 18:39:49.752" endtime="20201030 18:39:49.755"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:39:49.759" level="INFO">NAME: accuracy-TIMER_SLEEP-64-philip</msg>
<status status="PASS" starttime="20201030 18:39:49.758" endtime="20201030 18:39:49.760"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:39:49.762" level="INFO">VALUE: [7.620800000000122e-05, 7.597200000000054e-05, 7.623600000000036e-05, 7.599999999999968e-05, 7.616700000000198e-05, 7.611100000000023e-05, 7.65700000000015e-05, 7.601299999999978e-05, 7.629200000000211e-05, 7.574999999999943e-05, 7.636099999999701e-05, 7.580499999999823e-05, 7.629100000000263e-05, 7.597200000000054e-05, 7.587499999999955e-05, 7.597200000000054e-05, 7.569499999999715e-05, 7.604200000000186e-05, 7.630600000000168e-05, 7.622200000000079e-05, 7.5763999999999e-05, 7.656999999999803e-05, 7.622300000000026e-05, 7.586099999999998e-05, 7.587499999999955e-05, 7.644399999999843e-05, 7.599999999999968e-05, 7.569399999999768e-05, 7.661099999999726e-05, 7.623600000000036e-05, 7.618100000000155e-05, 7.59310000000013e-05, 7.591699999999826e-05, 7.61249999999998e-05, 7.652799999999932e-05, 7.66250000000003e-05, 7.570800000000072e-05, 7.587499999999955e-05, 7.577799999999857e-05, 7.57500000000029e-05, 7.615299999999894e-05, 7.651399999999975e-05, 7.61249999999998e-05, 7.665299999999944e-05, 7.616600000000251e-05, 7.584700000000041e-05, 7.591699999999826e-05, 7.615300000000241e-05, 7.629099999999917e-05, 7.618000000000208e-05]</msg>
<status status="PASS" starttime="20201030 18:39:49.760" endtime="20201030 18:39:49.763"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:49.756" endtime="20201030 18:39:49.763"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:39:49.767" endtime="20201030 18:39:49.786"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:49.765" endtime="20201030 18:39:49.787"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:49.764" endtime="20201030 18:39:49.787"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:49.407" endtime="20201030 18:39:49.787"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:49.406" endtime="20201030 18:39:49.788"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:49.796" endtime="20201030 18:39:49.819"></status>
</kw>
<msg timestamp="20201030 18:39:49.819" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:49.794" endtime="20201030 18:39:49.820"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:49.822" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:49.820" endtime="20201030 18:39:49.822"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:49.823" endtime="20201030 18:39:49.824"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:49.792" endtime="20201030 18:39:49.825"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:49.790" endtime="20201030 18:39:49.825"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:49.832" endtime="20201030 18:39:50.117"></status>
</kw>
<msg timestamp="20201030 18:39:50.120" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023576042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023652875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:49.830" endtime="20201030 18:39:50.120"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:50.128" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023576042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023652875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:50.121" endtime="20201030 18:39:50.129"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:50.129" endtime="20201030 18:39:50.131"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:49.828" endtime="20201030 18:39:50.132"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:49.826" endtime="20201030 18:39:50.132"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:39:50.136" level="INFO">${RESULT} = [{'diff': 7.683300000000184e-05}, {'diff': 7.670799999999825e-05}, {'diff': 7.737500000000105e-05}, {'diff': 7.677799999999957e-05}, {'diff': 7.688900000000012e-05}, {'diff': 7.661200000000021e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:39:50.133" endtime="20201030 18:39:50.136"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:39:50.140" level="INFO">${ACCURACY} = {'diff': [7.683300000000184e-05, 7.670799999999825e-05, 7.737500000000105e-05, 7.677799999999957e-05, 7.688900000000012e-05, 7.661200000000021e-05, 7.716699999999951e-05, 7.669399999999868e-05, 7.6944...</msg>
<status status="PASS" starttime="20201030 18:39:50.137" endtime="20201030 18:39:50.140"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:39:50.144" level="INFO">NAME: accuracy-TIMER_SLEEP-65-philip</msg>
<status status="PASS" starttime="20201030 18:39:50.143" endtime="20201030 18:39:50.145"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:39:50.147" level="INFO">VALUE: [7.683300000000184e-05, 7.670799999999825e-05, 7.737500000000105e-05, 7.677799999999957e-05, 7.688900000000012e-05, 7.661200000000021e-05, 7.716699999999951e-05, 7.669399999999868e-05, 7.69440000000024e-05, 7.733299999999887e-05, 7.695800000000197e-05, 7.687500000000055e-05, 7.755499999999999e-05, 7.769399999999968e-05, 7.731999999999878e-05, 7.69029999999997e-05, 7.688900000000012e-05, 7.729200000000311e-05, 7.75839999999986e-05, 7.736099999999801e-05, 7.66250000000003e-05, 7.711100000000123e-05, 7.748600000000161e-05, 7.679099999999967e-05, 7.74310000000028e-05, 7.675000000000043e-05, 7.722199999999832e-05, 7.680600000000218e-05, 7.716699999999951e-05, 7.729199999999964e-05, 7.683399999999785e-05, 7.711100000000123e-05, 7.74030000000002e-05, 7.688900000000012e-05, 7.692999999999936e-05, 7.720800000000222e-05, 7.699999999999721e-05, 7.6764e-05, 7.679200000000261e-05, 7.756999999999903e-05, 7.686100000000098e-05, 7.687500000000055e-05, 7.718100000000255e-05, 7.687500000000055e-05, 7.6764e-05, 7.69310000000023e-05, 7.691700000000273e-05, 7.675000000000043e-05, 7.694399999999893e-05, 7.700000000000068e-05]</msg>
<status status="PASS" starttime="20201030 18:39:50.146" endtime="20201030 18:39:50.149"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:50.141" endtime="20201030 18:39:50.149"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:39:50.153" endtime="20201030 18:39:50.172"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:50.151" endtime="20201030 18:39:50.173"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:50.150" endtime="20201030 18:39:50.173"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:49.788" endtime="20201030 18:39:50.173"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:49.788" endtime="20201030 18:39:50.174"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:50.182" endtime="20201030 18:39:50.201"></status>
</kw>
<msg timestamp="20201030 18:39:50.201" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:50.181" endtime="20201030 18:39:50.201"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:50.203" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:50.202" endtime="20201030 18:39:50.204"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:50.204" endtime="20201030 18:39:50.206"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:50.178" endtime="20201030 18:39:50.207"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:50.176" endtime="20201030 18:39:50.207"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:50.213" endtime="20201030 18:39:50.499"></status>
</kw>
<msg timestamp="20201030 18:39:50.502" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019772333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019850139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:50.212" endtime="20201030 18:39:50.502"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:50.510" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019772333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019850139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:50.503" endtime="20201030 18:39:50.511"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:50.511" endtime="20201030 18:39:50.513"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:50.209" endtime="20201030 18:39:50.514"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:50.208" endtime="20201030 18:39:50.514"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:39:50.518" level="INFO">${RESULT} = [{'diff': 7.780599999999971e-05}, {'diff': 7.769499999999915e-05}, {'diff': 7.787500000000155e-05}, {'diff': 7.81389999999979e-05}, {'diff': 7.802699999999788e-05}, {'diff': 7.86389999999984e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:39:50.515" endtime="20201030 18:39:50.518"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:39:50.523" level="INFO">${ACCURACY} = {'diff': [7.780599999999971e-05, 7.769499999999915e-05, 7.787500000000155e-05, 7.81389999999979e-05, 7.802699999999788e-05, 7.86389999999984e-05, 7.858300000000012e-05, 7.788900000000112e-05, 7.841600...</msg>
<status status="PASS" starttime="20201030 18:39:50.519" endtime="20201030 18:39:50.523"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:39:50.527" level="INFO">NAME: accuracy-TIMER_SLEEP-66-philip</msg>
<status status="PASS" starttime="20201030 18:39:50.526" endtime="20201030 18:39:50.528"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:39:50.530" level="INFO">VALUE: [7.780599999999971e-05, 7.769499999999915e-05, 7.787500000000155e-05, 7.81389999999979e-05, 7.802699999999788e-05, 7.86389999999984e-05, 7.858300000000012e-05, 7.788900000000112e-05, 7.841600000000129e-05, 7.822199999999932e-05, 7.86389999999984e-05, 7.827800000000107e-05, 7.773599999999839e-05, 7.787500000000155e-05, 7.815300000000094e-05, 7.763900000000087e-05, 7.773599999999839e-05, 7.774999999999796e-05, 7.813799999999843e-05, 7.841600000000129e-05, 7.773600000000186e-05, 7.86250000000023e-05, 7.8458e-05, 7.78189999999998e-05, 7.86389999999984e-05, 7.774999999999796e-05, 7.829200000000064e-05, 7.783400000000232e-05, 7.800000000000168e-05, 7.820900000000269e-05, 7.833399999999935e-05, 7.823699999999836e-05, 7.80129999999983e-05, 7.817999999999714e-05, 7.773599999999839e-05, 7.847199999999957e-05, 7.843100000000033e-05, 7.861099999999926e-05, 7.816700000000051e-05, 7.8458e-05, 7.85839999999996e-05, 7.86389999999984e-05, 7.769499999999915e-05, 7.793099999999983e-05, 7.802799999999735e-05, 7.862499999999883e-05, 7.769399999999968e-05, 7.843000000000086e-05, 7.86250000000023e-05, 7.845899999999947e-05]</msg>
<status status="PASS" starttime="20201030 18:39:50.528" endtime="20201030 18:39:50.531"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:50.524" endtime="20201030 18:39:50.531"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:39:50.535" endtime="20201030 18:39:50.554"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:50.533" endtime="20201030 18:39:50.555"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:50.532" endtime="20201030 18:39:50.555"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:50.174" endtime="20201030 18:39:50.555"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:50.174" endtime="20201030 18:39:50.555"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:50.564" endtime="20201030 18:39:50.582"></status>
</kw>
<msg timestamp="20201030 18:39:50.583" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:50.562" endtime="20201030 18:39:50.583"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:50.585" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:50.584" endtime="20201030 18:39:50.585"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:50.586" endtime="20201030 18:39:50.588"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:50.560" endtime="20201030 18:39:50.588"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:50.558" endtime="20201030 18:39:50.589"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:50.595" endtime="20201030 18:39:50.906"></status>
</kw>
<msg timestamp="20201030 18:39:50.909" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02036275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020441875, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:39:50.594" endtime="20201030 18:39:50.909"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:50.917" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02036275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020441875, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:39:50.910" endtime="20201030 18:39:50.918"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:50.918" endtime="20201030 18:39:50.920"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:50.591" endtime="20201030 18:39:50.920"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:50.589" endtime="20201030 18:39:50.921"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:39:50.925" level="INFO">${RESULT} = [{'diff': 7.91250000000028e-05}, {'diff': 7.883400000000332e-05}, {'diff': 7.963799999999993e-05}, {'diff': 7.941700000000176e-05}, {'diff': 7.901400000000225e-05}, {'diff': 7.930499999999827e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:39:50.922" endtime="20201030 18:39:50.925"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:39:50.929" level="INFO">${ACCURACY} = {'diff': [7.91250000000028e-05, 7.883400000000332e-05, 7.963799999999993e-05, 7.941700000000176e-05, 7.901400000000225e-05, 7.930499999999827e-05, 7.904200000000139e-05, 7.927699999999913e-05, 7.86940...</msg>
<status status="PASS" starttime="20201030 18:39:50.926" endtime="20201030 18:39:50.929"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:39:50.933" level="INFO">NAME: accuracy-TIMER_SLEEP-67-philip</msg>
<status status="PASS" starttime="20201030 18:39:50.932" endtime="20201030 18:39:50.934"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:39:50.936" level="INFO">VALUE: [7.91250000000028e-05, 7.883400000000332e-05, 7.963799999999993e-05, 7.941700000000176e-05, 7.901400000000225e-05, 7.930499999999827e-05, 7.904200000000139e-05, 7.927699999999913e-05, 7.869400000000068e-05, 7.92779999999986e-05, 7.923599999999989e-05, 7.922200000000032e-05, 7.872199999999982e-05, 7.962499999999983e-05, 7.958299999999766e-05, 7.882000000000028e-05, 7.909799999999967e-05, 7.961100000000026e-05, 7.88190000000008e-05, 7.917999999999814e-05, 7.949999999999971e-05, 7.902800000000182e-05, 7.95970000000007e-05, 7.869400000000068e-05, 7.92779999999986e-05, 7.887499999999908e-05, 7.869400000000068e-05, 7.877800000000157e-05, 7.873599999999939e-05, 7.912499999999933e-05, 7.947300000000004e-05, 7.899999999999921e-05, 7.952700000000285e-05, 7.933300000000088e-05, 7.961100000000026e-05, 7.96389999999994e-05, 7.897200000000007e-05, 7.940299999999872e-05, 7.958299999999766e-05, 7.952800000000232e-05, 7.94450000000009e-05, 7.95840000000006e-05, 7.880600000000071e-05, 7.916700000000151e-05, 7.929199999999817e-05, 7.868000000000111e-05, 7.868000000000111e-05, 7.924999999999946e-05, 7.880500000000124e-05, 7.912499999999933e-05]</msg>
<status status="PASS" starttime="20201030 18:39:50.934" endtime="20201030 18:39:50.937"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:50.930" endtime="20201030 18:39:50.937"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:39:50.941" endtime="20201030 18:39:50.960"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:50.939" endtime="20201030 18:39:50.961"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:50.938" endtime="20201030 18:39:50.961"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:50.556" endtime="20201030 18:39:50.961"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:50.556" endtime="20201030 18:39:50.961"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:50.970" endtime="20201030 18:39:50.989"></status>
</kw>
<msg timestamp="20201030 18:39:50.989" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:50.968" endtime="20201030 18:39:50.989"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:50.992" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:50.990" endtime="20201030 18:39:50.992"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:50.993" endtime="20201030 18:39:50.994"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:50.966" endtime="20201030 18:39:50.995"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:50.964" endtime="20201030 18:39:50.995"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:51.002" endtime="20201030 18:39:51.287"></status>
</kw>
<msg timestamp="20201030 18:39:51.290" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020482319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020562917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:51.000" endtime="20201030 18:39:51.290"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:51.298" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020482319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020562917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:51.291" endtime="20201030 18:39:51.298"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:51.299" endtime="20201030 18:39:51.301"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:50.997" endtime="20201030 18:39:51.301"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:50.996" endtime="20201030 18:39:51.302"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:39:51.306" level="INFO">${RESULT} = [{'diff': 8.059800000000117e-05}, {'diff': 8.044499999999843e-05}, {'diff': 8.02230000000008e-05}, {'diff': 7.988899999999965e-05}, {'diff': 8.030499999999927e-05}, {'diff': 8.052799999999985e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:39:51.303" endtime="20201030 18:39:51.306"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:39:51.310" level="INFO">${ACCURACY} = {'diff': [8.059800000000117e-05, 8.044499999999843e-05, 8.02230000000008e-05, 7.988899999999965e-05, 8.030499999999927e-05, 8.052799999999985e-05, 8.019399999999871e-05, 8.011100000000076e-05, 8.04720...</msg>
<status status="PASS" starttime="20201030 18:39:51.307" endtime="20201030 18:39:51.310"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:39:51.314" level="INFO">NAME: accuracy-TIMER_SLEEP-68-philip</msg>
<status status="PASS" starttime="20201030 18:39:51.313" endtime="20201030 18:39:51.315"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:39:51.317" level="INFO">VALUE: [8.059800000000117e-05, 8.044499999999843e-05, 8.02230000000008e-05, 7.988899999999965e-05, 8.030499999999927e-05, 8.052799999999985e-05, 8.019399999999871e-05, 8.011100000000076e-05, 8.047200000000157e-05, 8.058299999999866e-05, 7.981999999999781e-05, 8.031999999999831e-05, 8.062500000000083e-05, 7.99719999999976e-05, 7.976300000000006e-05, 8.034700000000145e-05, 8.058299999999866e-05, 8.012500000000033e-05, 8.058300000000213e-05, 7.984699999999748e-05, 8.009699999999773e-05, 7.981899999999834e-05, 8.022200000000132e-05, 8.011100000000076e-05, 8.05970000000017e-05, 7.991700000000226e-05, 8.038900000000015e-05, 8.054099999999995e-05, 8.011200000000024e-05, 8.009699999999773e-05, 7.979199999999867e-05, 8.058299999999866e-05, 8.023600000000089e-05, 8.030599999999874e-05, 8.031999999999831e-05, 8.059699999999823e-05, 8.006999999999806e-05, 7.974999999999996e-05, 7.980600000000171e-05, 7.990299999999922e-05, 7.987500000000008e-05, 8.019399999999871e-05, 8.036099999999755e-05, 8.019499999999818e-05, 7.98329999999979e-05, 8.000000000000021e-05, 7.976399999999953e-05, 8.050000000000071e-05, 7.968100000000158e-05, 7.986100000000051e-05]</msg>
<status status="PASS" starttime="20201030 18:39:51.315" endtime="20201030 18:39:51.323"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:51.311" endtime="20201030 18:39:51.323"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:39:51.327" endtime="20201030 18:39:51.346"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:51.325" endtime="20201030 18:39:51.347"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:51.324" endtime="20201030 18:39:51.347"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:50.962" endtime="20201030 18:39:51.348"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:50.962" endtime="20201030 18:39:51.348"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:51.356" endtime="20201030 18:39:51.373"></status>
</kw>
<msg timestamp="20201030 18:39:51.374" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:51.355" endtime="20201030 18:39:51.374"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:51.376" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:51.375" endtime="20201030 18:39:51.377"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:51.377" endtime="20201030 18:39:51.379"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:51.352" endtime="20201030 18:39:51.380"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:51.350" endtime="20201030 18:39:51.380"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:51.386" endtime="20201030 18:39:51.671"></status>
</kw>
<msg timestamp="20201030 18:39:51.674" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019612889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019694236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:51.385" endtime="20201030 18:39:51.675"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:51.682" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019612889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019694236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:51.675" endtime="20201030 18:39:51.683"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:51.684" endtime="20201030 18:39:51.685"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:51.382" endtime="20201030 18:39:51.686"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:51.381" endtime="20201030 18:39:51.686"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:39:51.690" level="INFO">${RESULT} = [{'diff': 8.134699999999898e-05}, {'diff': 8.090300000000022e-05}, {'diff': 8.084699999999848e-05}, {'diff': 8.125000000000146e-05}, {'diff': 8.148599999999867e-05}, {'diff': 8.130599999999974e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:39:51.687" endtime="20201030 18:39:51.690"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:39:51.695" level="INFO">${ACCURACY} = {'diff': [8.134699999999898e-05, 8.090300000000022e-05, 8.084699999999848e-05, 8.125000000000146e-05, 8.148599999999867e-05, 8.130599999999974e-05, 8.1458999999999e-05, 8.093099999999936e-05, 8.102800...</msg>
<status status="PASS" starttime="20201030 18:39:51.691" endtime="20201030 18:39:51.695"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:39:51.700" level="INFO">NAME: accuracy-TIMER_SLEEP-69-philip</msg>
<status status="PASS" starttime="20201030 18:39:51.699" endtime="20201030 18:39:51.700"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:39:51.702" level="INFO">VALUE: [8.134699999999898e-05, 8.090300000000022e-05, 8.084699999999848e-05, 8.125000000000146e-05, 8.148599999999867e-05, 8.130599999999974e-05, 8.1458999999999e-05, 8.093099999999936e-05, 8.102800000000035e-05, 8.105500000000002e-05, 8.148599999999867e-05, 8.092999999999989e-05, 8.112500000000133e-05, 8.131899999999984e-05, 8.105599999999949e-05, 8.102800000000035e-05, 8.119499999999918e-05, 8.075000000000096e-05, 8.076400000000053e-05, 8.162499999999837e-05, 8.098699999999764e-05, 8.098599999999817e-05, 8.090199999999728e-05, 8.169499999999968e-05, 8.098600000000164e-05, 8.080499999999977e-05, 8.104199999999992e-05, 8.147200000000257e-05, 8.16529999999975e-05, 8.1152999999997e-05, 8.129200000000017e-05, 8.111100000000177e-05, 8.109699999999873e-05, 8.097300000000154e-05, 8.138899999999769e-05, 8.16659999999976e-05, 8.151399999999781e-05, 8.076400000000053e-05, 8.088900000000065e-05, 8.098599999999817e-05, 8.086100000000151e-05, 8.140300000000072e-05, 8.163899999999794e-05, 8.140300000000072e-05, 8.140299999999726e-05, 8.094399999999946e-05, 8.077700000000063e-05, 8.098599999999817e-05, 8.148600000000214e-05, 8.158299999999966e-05]</msg>
<status status="PASS" starttime="20201030 18:39:51.701" endtime="20201030 18:39:51.703"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:51.696" endtime="20201030 18:39:51.703"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:39:51.707" endtime="20201030 18:39:51.726"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:51.705" endtime="20201030 18:39:51.727"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:51.704" endtime="20201030 18:39:51.727"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:51.349" endtime="20201030 18:39:51.728"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:51.348" endtime="20201030 18:39:51.728"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:51.736" endtime="20201030 18:39:51.754"></status>
</kw>
<msg timestamp="20201030 18:39:51.755" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:51.735" endtime="20201030 18:39:51.755"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:51.757" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:51.756" endtime="20201030 18:39:51.757"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:51.758" endtime="20201030 18:39:51.760"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:51.732" endtime="20201030 18:39:51.760"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:51.730" endtime="20201030 18:39:51.761"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:51.767" endtime="20201030 18:39:52.053"></status>
</kw>
<msg timestamp="20201030 18:39:52.057" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019548403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019630542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:51.765" endtime="20201030 18:39:52.057"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:52.065" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019548403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019630542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:52.058" endtime="20201030 18:39:52.065"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:52.066" endtime="20201030 18:39:52.068"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:51.763" endtime="20201030 18:39:52.068"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:51.761" endtime="20201030 18:39:52.069"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:39:52.072" level="INFO">${RESULT} = [{'diff': 8.21390000000019e-05}, {'diff': 8.257000000000056e-05}, {'diff': 8.2152999999998e-05}, {'diff': 8.19589999999995e-05}, {'diff': 8.22919999999977e-05}, {'diff': 8.257000000000056e-05}, {'diff...</msg>
<status status="PASS" starttime="20201030 18:39:52.069" endtime="20201030 18:39:52.073"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:39:52.077" level="INFO">${ACCURACY} = {'diff': [8.21390000000019e-05, 8.257000000000056e-05, 8.2152999999998e-05, 8.19589999999995e-05, 8.22919999999977e-05, 8.257000000000056e-05, 8.2459e-05, 8.200000000000221e-05, 8.265199999999903e-05,...</msg>
<status status="PASS" starttime="20201030 18:39:52.073" endtime="20201030 18:39:52.077"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:39:52.081" level="INFO">NAME: accuracy-TIMER_SLEEP-70-philip</msg>
<status status="PASS" starttime="20201030 18:39:52.080" endtime="20201030 18:39:52.081"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:39:52.083" level="INFO">VALUE: [8.21390000000019e-05, 8.257000000000056e-05, 8.2152999999998e-05, 8.19589999999995e-05, 8.22919999999977e-05, 8.257000000000056e-05, 8.2459e-05, 8.200000000000221e-05, 8.265199999999903e-05, 8.21109999999993e-05, 8.18329999999999e-05, 8.240300000000172e-05, 8.251399999999881e-05, 8.202799999999788e-05, 8.184699999999948e-05, 8.237499999999912e-05, 8.199999999999874e-05, 8.222299999999932e-05, 8.258400000000013e-05, 8.262499999999937e-05, 8.23049999999978e-05, 8.187499999999862e-05, 8.236099999999955e-05, 8.269500000000068e-05, 8.176400000000153e-05, 8.232000000000031e-05, 8.225000000000246e-05, 8.186099999999905e-05, 8.207000000000006e-05, 8.254200000000142e-05, 8.240300000000172e-05, 8.26529999999985e-05, 8.174999999999849e-05, 8.175000000000196e-05, 8.238899999999869e-05, 8.223599999999942e-05, 8.179200000000067e-05, 8.238899999999869e-05, 8.199999999999874e-05, 8.248599999999967e-05, 8.19309999999969e-05, 8.216700000000104e-05, 8.19719999999996e-05, 8.186200000000199e-05, 8.177700000000163e-05, 8.193000000000089e-05, 8.238899999999869e-05, 8.209699999999973e-05, 8.20970000000032e-05, 8.169400000000021e-05]</msg>
<status status="PASS" starttime="20201030 18:39:52.082" endtime="20201030 18:39:52.084"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:52.077" endtime="20201030 18:39:52.085"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:39:52.088" endtime="20201030 18:39:52.108"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:52.087" endtime="20201030 18:39:52.108"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:52.086" endtime="20201030 18:39:52.109"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:51.729" endtime="20201030 18:39:52.109"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:51.728" endtime="20201030 18:39:52.109"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:52.118" endtime="20201030 18:39:52.137"></status>
</kw>
<msg timestamp="20201030 18:39:52.138" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:52.116" endtime="20201030 18:39:52.138"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:52.140" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:52.139" endtime="20201030 18:39:52.141"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:52.141" endtime="20201030 18:39:52.143"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:52.114" endtime="20201030 18:39:52.144"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:52.112" endtime="20201030 18:39:52.144"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:52.150" endtime="20201030 18:39:52.437"></status>
</kw>
<msg timestamp="20201030 18:39:52.440" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020534431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020617681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:52.149" endtime="20201030 18:39:52.440"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:52.448" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020534431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020617681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:52.441" endtime="20201030 18:39:52.448"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:52.449" endtime="20201030 18:39:52.450"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:52.146" endtime="20201030 18:39:52.451"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:52.145" endtime="20201030 18:39:52.451"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:39:52.455" level="INFO">${RESULT} = [{'diff': 8.324999999999999e-05}, {'diff': 8.302799999999888e-05}, {'diff': 8.291599999999885e-05}, {'diff': 8.352699999999991e-05}, {'diff': 8.334700000000098e-05}, {'diff': 8.359699999999776e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:39:52.452" endtime="20201030 18:39:52.456"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:39:52.459" level="INFO">${ACCURACY} = {'diff': [8.324999999999999e-05, 8.302799999999888e-05, 8.291599999999885e-05, 8.352699999999991e-05, 8.334700000000098e-05, 8.359699999999776e-05, 8.291699999999833e-05, 8.352799999999938e-05, 8.2820...</msg>
<status status="PASS" starttime="20201030 18:39:52.456" endtime="20201030 18:39:52.460"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:39:52.464" level="INFO">NAME: accuracy-TIMER_SLEEP-71-philip</msg>
<status status="PASS" starttime="20201030 18:39:52.463" endtime="20201030 18:39:52.464"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:39:52.466" level="INFO">VALUE: [8.324999999999999e-05, 8.302799999999888e-05, 8.291599999999885e-05, 8.352699999999991e-05, 8.334700000000098e-05, 8.359699999999776e-05, 8.291699999999833e-05, 8.352799999999938e-05, 8.282000000000081e-05, 8.32919999999987e-05, 8.319500000000118e-05, 8.354199999999895e-05, 8.299999999999974e-05, 8.369399999999874e-05, 8.337500000000012e-05, 8.305500000000202e-05, 8.31659999999991e-05, 8.269400000000121e-05, 8.267999999999817e-05, 8.359700000000123e-05, 8.323600000000042e-05, 8.31110000000003e-05, 8.322200000000085e-05, 8.280600000000124e-05, 8.270900000000025e-05, 8.336100000000055e-05, 8.322200000000085e-05, 8.341599999999935e-05, 8.31110000000003e-05, 8.34720000000011e-05, 8.274999999999949e-05, 8.298600000000017e-05, 8.287499999999962e-05, 8.299999999999974e-05, 8.36529999999995e-05, 8.31110000000003e-05, 8.323600000000042e-05, 8.336100000000055e-05, 8.36659999999996e-05, 8.356899999999862e-05, 8.308300000000116e-05, 8.317999999999867e-05, 8.319500000000118e-05, 8.270800000000078e-05, 8.334700000000098e-05, 8.326399999999956e-05, 8.287499999999962e-05, 8.299999999999974e-05, 8.295800000000103e-05, 8.365200000000003e-05]</msg>
<status status="PASS" starttime="20201030 18:39:52.465" endtime="20201030 18:39:52.468"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:52.460" endtime="20201030 18:39:52.468"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:39:52.472" endtime="20201030 18:39:52.491"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:52.471" endtime="20201030 18:39:52.492"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:52.469" endtime="20201030 18:39:52.492"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:52.110" endtime="20201030 18:39:52.493"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:52.110" endtime="20201030 18:39:52.493"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:52.501" endtime="20201030 18:39:52.520"></status>
</kw>
<msg timestamp="20201030 18:39:52.520" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:52.500" endtime="20201030 18:39:52.520"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:52.523" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:52.521" endtime="20201030 18:39:52.523"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:52.524" endtime="20201030 18:39:52.525"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:52.497" endtime="20201030 18:39:52.526"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:52.495" endtime="20201030 18:39:52.526"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:52.533" endtime="20201030 18:39:52.818"></status>
</kw>
<msg timestamp="20201030 18:39:52.821" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020295486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020380014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:52.531" endtime="20201030 18:39:52.822"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:52.829" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020295486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020380014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:52.822" endtime="20201030 18:39:52.830"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:52.831" endtime="20201030 18:39:52.832"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:52.529" endtime="20201030 18:39:52.833"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:52.527" endtime="20201030 18:39:52.833"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:39:52.837" level="INFO">${RESULT} = [{'diff': 8.452799999999691e-05}, {'diff': 8.458399999999866e-05}, {'diff': 8.409699999999826e-05}, {'diff': 8.381999999999834e-05}, {'diff': 8.405599999999902e-05}, {'diff': 8.452699999999744e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:39:52.834" endtime="20201030 18:39:52.837"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:39:52.842" level="INFO">${ACCURACY} = {'diff': [8.452799999999691e-05, 8.458399999999866e-05, 8.409699999999826e-05, 8.381999999999834e-05, 8.405599999999902e-05, 8.452699999999744e-05, 8.394400000000246e-05, 8.386100000000105e-05, 8.3764...</msg>
<status status="PASS" starttime="20201030 18:39:52.838" endtime="20201030 18:39:52.842"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:39:52.847" level="INFO">NAME: accuracy-TIMER_SLEEP-72-philip</msg>
<status status="PASS" starttime="20201030 18:39:52.845" endtime="20201030 18:39:52.847"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:39:52.849" level="INFO">VALUE: [8.452799999999691e-05, 8.458399999999866e-05, 8.409699999999826e-05, 8.381999999999834e-05, 8.405599999999902e-05, 8.452699999999744e-05, 8.394400000000246e-05, 8.386100000000105e-05, 8.376400000000006e-05, 8.418099999999915e-05, 8.380600000000224e-05, 8.434700000000198e-05, 8.433299999999894e-05, 8.39859999999977e-05, 8.409700000000173e-05, 8.397300000000107e-05, 8.413799999999749e-05, 8.440300000000026e-05, 8.429100000000023e-05, 8.395800000000203e-05, 8.372199999999788e-05, 8.427800000000013e-05, 8.422199999999838e-05, 8.422199999999838e-05, 8.43469999999985e-05, 8.407000000000206e-05, 8.404199999999945e-05, 8.368099999999865e-05, 8.416699999999958e-05, 8.387500000000062e-05, 8.392999999999942e-05, 8.400000000000074e-05, 8.454199999999995e-05, 8.41660000000001e-05, 8.458299999999919e-05, 8.436099999999808e-05, 8.381899999999887e-05, 8.380600000000224e-05, 8.418099999999915e-05, 8.369500000000168e-05, 8.39309999999989e-05, 8.369500000000168e-05, 8.398600000000117e-05, 8.381900000000234e-05, 8.448600000000167e-05, 8.462500000000137e-05, 8.381899999999887e-05, 8.413900000000044e-05, 8.383400000000138e-05, 8.416700000000304e-05]</msg>
<status status="PASS" starttime="20201030 18:39:52.848" endtime="20201030 18:39:52.850"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:52.843" endtime="20201030 18:39:52.850"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:39:52.854" endtime="20201030 18:39:52.873"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:52.852" endtime="20201030 18:39:52.874"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:52.851" endtime="20201030 18:39:52.874"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:52.494" endtime="20201030 18:39:52.874"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:52.493" endtime="20201030 18:39:52.875"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:52.883" endtime="20201030 18:39:52.901"></status>
</kw>
<msg timestamp="20201030 18:39:52.902" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:52.882" endtime="20201030 18:39:52.902"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:52.904" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:52.903" endtime="20201030 18:39:52.904"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:52.905" endtime="20201030 18:39:52.907"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:52.879" endtime="20201030 18:39:52.907"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:52.877" endtime="20201030 18:39:52.908"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:52.915" endtime="20201030 18:39:53.202"></status>
</kw>
<msg timestamp="20201030 18:39:53.205" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020374833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020459792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:52.913" endtime="20201030 18:39:53.205"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:53.213" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020374833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020459792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:53.206" endtime="20201030 18:39:53.213"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:53.214" endtime="20201030 18:39:53.216"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:52.910" endtime="20201030 18:39:53.216"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:52.908" endtime="20201030 18:39:53.217"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:39:53.221" level="INFO">${RESULT} = [{'diff': 8.49590000000025e-05}, {'diff': 8.534800000000245e-05}, {'diff': 8.518100000000015e-05}, {'diff': 8.534800000000245e-05}, {'diff': 8.541600000000135e-05}, {'diff': 8.515199999999806e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:39:53.218" endtime="20201030 18:39:53.221"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:39:53.225" level="INFO">${ACCURACY} = {'diff': [8.49590000000025e-05, 8.534800000000245e-05, 8.518100000000015e-05, 8.534800000000245e-05, 8.541600000000135e-05, 8.515199999999806e-05, 8.48050000000003e-05, 8.554200000000095e-05, 8.561100...</msg>
<status status="PASS" starttime="20201030 18:39:53.222" endtime="20201030 18:39:53.225"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:39:53.229" level="INFO">NAME: accuracy-TIMER_SLEEP-73-philip</msg>
<status status="PASS" starttime="20201030 18:39:53.228" endtime="20201030 18:39:53.230"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:39:53.232" level="INFO">VALUE: [8.49590000000025e-05, 8.534800000000245e-05, 8.518100000000015e-05, 8.534800000000245e-05, 8.541600000000135e-05, 8.515199999999806e-05, 8.48050000000003e-05, 8.554200000000095e-05, 8.56110000000028e-05, 8.500000000000174e-05, 8.558300000000019e-05, 8.477800000000063e-05, 8.537500000000212e-05, 8.46530000000005e-05, 8.543000000000092e-05, 8.523599999999895e-05, 8.476300000000159e-05, 8.542999999999745e-05, 8.556900000000062e-05, 8.468000000000017e-05, 8.518100000000015e-05, 8.5153000000001e-05, 8.49309999999999e-05, 8.469500000000268e-05, 8.520899999999929e-05, 8.543099999999693e-05, 8.51799999999972e-05, 8.506900000000012e-05, 8.51799999999972e-05, 8.481899999999987e-05, 8.499999999999827e-05, 8.522199999999938e-05, 8.505600000000002e-05, 8.536099999999908e-05, 8.475000000000149e-05, 8.470799999999931e-05, 8.534700000000298e-05, 8.536099999999908e-05, 8.500000000000174e-05, 8.501299999999837e-05, 8.526399999999809e-05, 8.529100000000123e-05, 8.476400000000106e-05, 8.541600000000135e-05, 8.531900000000037e-05, 8.530600000000027e-05, 8.470799999999931e-05, 8.49309999999999e-05, 8.469499999999922e-05, 8.481999999999934e-05]</msg>
<status status="PASS" starttime="20201030 18:39:53.230" endtime="20201030 18:39:53.232"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:53.226" endtime="20201030 18:39:53.233"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:39:53.237" endtime="20201030 18:39:53.256"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:53.235" endtime="20201030 18:39:53.257"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:53.234" endtime="20201030 18:39:53.257"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:52.876" endtime="20201030 18:39:53.257"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:52.875" endtime="20201030 18:39:53.258"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:53.266" endtime="20201030 18:39:53.288"></status>
</kw>
<msg timestamp="20201030 18:39:53.289" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:53.265" endtime="20201030 18:39:53.289"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:53.291" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:53.290" endtime="20201030 18:39:53.291"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:53.292" endtime="20201030 18:39:53.294"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:53.262" endtime="20201030 18:39:53.294"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:53.260" endtime="20201030 18:39:53.295"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:53.301" endtime="20201030 18:39:53.587"></status>
</kw>
<msg timestamp="20201030 18:39:53.590" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022885611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022971708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:53.300" endtime="20201030 18:39:53.591"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:53.598" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022885611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022971708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:53.591" endtime="20201030 18:39:53.599"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:53.600" endtime="20201030 18:39:53.601"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:53.297" endtime="20201030 18:39:53.602"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:53.295" endtime="20201030 18:39:53.602"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:39:53.606" level="INFO">${RESULT} = [{'diff': 8.609700000000026e-05}, {'diff': 8.638899999999922e-05}, {'diff': 8.636100000000008e-05}, {'diff': 8.670900000000079e-05}, {'diff': 8.641699999999836e-05}, {'diff': 8.663900000000294e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:39:53.603" endtime="20201030 18:39:53.606"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:39:53.610" level="INFO">${ACCURACY} = {'diff': [8.609700000000026e-05, 8.638899999999922e-05, 8.636100000000008e-05, 8.670900000000079e-05, 8.641699999999836e-05, 8.663900000000294e-05, 8.634799999999998e-05, 8.657000000000109e-05, 8.6679...</msg>
<status status="PASS" starttime="20201030 18:39:53.607" endtime="20201030 18:39:53.610"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:39:53.615" level="INFO">NAME: accuracy-TIMER_SLEEP-74-philip</msg>
<status status="PASS" starttime="20201030 18:39:53.614" endtime="20201030 18:39:53.615"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:39:53.617" level="INFO">VALUE: [8.609700000000026e-05, 8.638899999999922e-05, 8.636100000000008e-05, 8.670900000000079e-05, 8.641699999999836e-05, 8.663900000000294e-05, 8.634799999999998e-05, 8.657000000000109e-05, 8.66799999999987e-05, 8.651400000000281e-05, 8.645800000000106e-05, 8.611099999999983e-05, 8.659699999999729e-05, 8.627800000000213e-05, 8.659700000000076e-05, 8.640299999999879e-05, 8.629199999999823e-05, 8.57920000000012e-05, 8.622200000000038e-05, 8.604200000000145e-05, 8.658400000000066e-05, 8.595900000000004e-05, 8.658300000000119e-05, 8.573599999999945e-05, 8.576399999999859e-05, 8.569400000000074e-05, 8.5847e-05, 8.572199999999988e-05, 8.657000000000109e-05, 8.623599999999995e-05, 8.618100000000115e-05, 8.574999999999902e-05, 8.587499999999915e-05, 8.618000000000167e-05, 8.597200000000013e-05, 8.594400000000099e-05, 8.655600000000152e-05, 8.611099999999983e-05, 8.606900000000112e-05, 8.647200000000063e-05, 8.651400000000281e-05, 8.641699999999836e-05, 8.622200000000038e-05, 8.636199999999955e-05, 8.613900000000244e-05, 8.587499999999915e-05, 8.611099999999983e-05, 8.588900000000219e-05, 8.570800000000031e-05, 8.592999999999795e-05]</msg>
<status status="PASS" starttime="20201030 18:39:53.616" endtime="20201030 18:39:53.619"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:53.611" endtime="20201030 18:39:53.619"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:39:53.623" endtime="20201030 18:39:53.642"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:53.621" endtime="20201030 18:39:53.643"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:53.620" endtime="20201030 18:39:53.643"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:53.258" endtime="20201030 18:39:53.643"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:53.258" endtime="20201030 18:39:53.643"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:53.652" endtime="20201030 18:39:53.670"></status>
</kw>
<msg timestamp="20201030 18:39:53.671" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:53.651" endtime="20201030 18:39:53.671"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:53.673" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:53.672" endtime="20201030 18:39:53.673"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:53.674" endtime="20201030 18:39:53.676"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:53.648" endtime="20201030 18:39:53.676"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:53.646" endtime="20201030 18:39:53.677"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:53.685" endtime="20201030 18:39:53.972"></status>
</kw>
<msg timestamp="20201030 18:39:53.975" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019538194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019625389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:53.682" endtime="20201030 18:39:53.975"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:53.983" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019538194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019625389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:53.976" endtime="20201030 18:39:53.983"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:53.984" endtime="20201030 18:39:53.986"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:53.679" endtime="20201030 18:39:53.986"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:53.677" endtime="20201030 18:39:53.987"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:39:53.990" level="INFO">${RESULT} = [{'diff': 8.719500000000172e-05}, {'diff': 8.695799999999809e-05}, {'diff': 8.723600000000095e-05}, {'diff': 8.71250000000004e-05}, {'diff': 8.765200000000056e-05}, {'diff': 8.720799999999834e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:39:53.987" endtime="20201030 18:39:53.991"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:39:53.995" level="INFO">${ACCURACY} = {'diff': [8.719500000000172e-05, 8.695799999999809e-05, 8.723600000000095e-05, 8.71250000000004e-05, 8.765200000000056e-05, 8.720799999999834e-05, 8.669400000000174e-05, 8.765200000000056e-05, 8.76110...</msg>
<status status="PASS" starttime="20201030 18:39:53.991" endtime="20201030 18:39:53.996"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:39:54.000" level="INFO">NAME: accuracy-TIMER_SLEEP-75-philip</msg>
<status status="PASS" starttime="20201030 18:39:53.999" endtime="20201030 18:39:54.000"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:39:54.003" level="INFO">VALUE: [8.719500000000172e-05, 8.695799999999809e-05, 8.723600000000095e-05, 8.71250000000004e-05, 8.765200000000056e-05, 8.720799999999834e-05, 8.669400000000174e-05, 8.765200000000056e-05, 8.761100000000133e-05, 8.733299999999847e-05, 8.762499999999743e-05, 8.740299999999979e-05, 8.697200000000113e-05, 8.663899999999947e-05, 8.675000000000002e-05, 8.686100000000058e-05, 8.709799999999726e-05, 8.725000000000052e-05, 8.756899999999915e-05, 8.755499999999958e-05, 8.675000000000002e-05, 8.677799999999916e-05, 8.676399999999959e-05, 8.734799999999751e-05, 8.715299999999954e-05, 8.66530000000025e-05, 8.709700000000126e-05, 8.724999999999705e-05, 8.74860000000012e-05, 8.693099999999843e-05, 8.75129999999974e-05, 8.722200000000138e-05, 8.690299999999929e-05, 8.734699999999804e-05, 8.74449999999985e-05, 8.741699999999936e-05, 8.763900000000047e-05, 8.675000000000002e-05, 8.687499999999668e-05, 8.736200000000055e-05, 8.722299999999739e-05, 8.726400000000009e-05, 8.663799999999999e-05, 8.741599999999988e-05, 8.73470000000015e-05, 8.741699999999936e-05, 8.675000000000002e-05, 8.695799999999809e-05, 8.736100000000108e-05, 8.725000000000052e-05]</msg>
<status status="PASS" starttime="20201030 18:39:54.001" endtime="20201030 18:39:54.003"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:53.996" endtime="20201030 18:39:54.004"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:39:54.008" endtime="20201030 18:39:54.027"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:54.006" endtime="20201030 18:39:54.028"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:54.005" endtime="20201030 18:39:54.028"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:53.644" endtime="20201030 18:39:54.028"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:53.644" endtime="20201030 18:39:54.028"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:54.037" endtime="20201030 18:39:54.055"></status>
</kw>
<msg timestamp="20201030 18:39:54.055" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:54.035" endtime="20201030 18:39:54.055"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:54.058" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:54.056" endtime="20201030 18:39:54.058"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:54.059" endtime="20201030 18:39:54.060"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:54.033" endtime="20201030 18:39:54.061"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:54.031" endtime="20201030 18:39:54.061"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:54.068" endtime="20201030 18:39:54.356"></status>
</kw>
<msg timestamp="20201030 18:39:54.359" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019544597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019633153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:54.066" endtime="20201030 18:39:54.359"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:54.369" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019544597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019633153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:54.362" endtime="20201030 18:39:54.370"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:54.371" endtime="20201030 18:39:54.372"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:54.064" endtime="20201030 18:39:54.373"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:54.062" endtime="20201030 18:39:54.374"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:39:54.378" level="INFO">${RESULT} = [{'diff': 8.855600000000005e-05}, {'diff': 8.847299999999864e-05}, {'diff': 8.818099999999968e-05}, {'diff': 8.777700000000069e-05}, {'diff': 8.824999999999805e-05}, {'diff': 8.836099999999861e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:39:54.374" endtime="20201030 18:39:54.378"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:39:54.382" level="INFO">${ACCURACY} = {'diff': [8.855600000000005e-05, 8.847299999999864e-05, 8.818099999999968e-05, 8.777700000000069e-05, 8.824999999999805e-05, 8.836099999999861e-05, 8.822199999999891e-05, 8.786099999999811e-05, 8.7944...</msg>
<status status="PASS" starttime="20201030 18:39:54.379" endtime="20201030 18:39:54.382"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:39:54.387" level="INFO">NAME: accuracy-TIMER_SLEEP-76-philip</msg>
<status status="PASS" starttime="20201030 18:39:54.386" endtime="20201030 18:39:54.387"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:39:54.389" level="INFO">VALUE: [8.855600000000005e-05, 8.847299999999864e-05, 8.818099999999968e-05, 8.777700000000069e-05, 8.824999999999805e-05, 8.836099999999861e-05, 8.822199999999891e-05, 8.786099999999811e-05, 8.794400000000299e-05, 8.79860000000017e-05, 8.786100000000158e-05, 8.827800000000066e-05, 8.863900000000147e-05, 8.780600000000277e-05, 8.775000000000102e-05, 8.863799999999852e-05, 8.865300000000104e-05, 8.855500000000058e-05, 8.829100000000076e-05, 8.815300000000054e-05, 8.863900000000147e-05, 8.765300000000004e-05, 8.776400000000059e-05, 8.852800000000091e-05, 8.788900000000072e-05, 8.781999999999887e-05, 8.826400000000109e-05, 8.800000000000127e-05, 8.81250000000014e-05, 8.79999999999978e-05, 8.795799999999909e-05, 8.79999999999978e-05, 8.836100000000208e-05, 8.809700000000226e-05, 8.775000000000102e-05, 8.800000000000127e-05, 8.777800000000016e-05, 8.866600000000113e-05, 8.811199999999783e-05, 8.788900000000072e-05, 8.859700000000276e-05, 8.858299999999972e-05, 8.792999999999995e-05, 8.81800000000002e-05, 8.851400000000134e-05, 8.7944999999999e-05, 8.836100000000208e-05, 8.841700000000036e-05, 8.829200000000023e-05, 8.783299999999897e-05]</msg>
<status status="PASS" starttime="20201030 18:39:54.388" endtime="20201030 18:39:54.390"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:54.383" endtime="20201030 18:39:54.391"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:39:54.394" endtime="20201030 18:39:54.414"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:54.393" endtime="20201030 18:39:54.414"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:54.392" endtime="20201030 18:39:54.415"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:54.029" endtime="20201030 18:39:54.415"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:54.029" endtime="20201030 18:39:54.415"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:54.432" endtime="20201030 18:39:54.456"></status>
</kw>
<msg timestamp="20201030 18:39:54.457" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:54.428" endtime="20201030 18:39:54.457"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:54.462" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:54.459" endtime="20201030 18:39:54.462"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:54.464" endtime="20201030 18:39:54.467"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:54.423" endtime="20201030 18:39:54.469"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:54.419" endtime="20201030 18:39:54.470"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:54.483" endtime="20201030 18:39:54.776"></status>
</kw>
<msg timestamp="20201030 18:39:54.779" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.030648597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030738028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:54.480" endtime="20201030 18:39:54.779"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:54.787" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.030648597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030738028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:54.780" endtime="20201030 18:39:54.788"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:54.789" endtime="20201030 18:39:54.790"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:54.474" endtime="20201030 18:39:54.791"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:54.471" endtime="20201030 18:39:54.791"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:39:54.796" level="INFO">${RESULT} = [{'diff': 8.943100000000093e-05}, {'diff': 8.93060000000008e-05}, {'diff': 8.94730000000031e-05}, {'diff': 8.923599999999948e-05}, {'diff': 8.952699999999897e-05}, {'diff': 8.876400000000159e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:39:54.792" endtime="20201030 18:39:54.796"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:39:54.800" level="INFO">${ACCURACY} = {'diff': [8.943100000000093e-05, 8.93060000000008e-05, 8.94730000000031e-05, 8.923599999999948e-05, 8.952699999999897e-05, 8.876400000000159e-05, 8.952799999999844e-05, 8.901399999999837e-05, 8.922199...</msg>
<status status="PASS" starttime="20201030 18:39:54.797" endtime="20201030 18:39:54.800"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:39:54.804" level="INFO">NAME: accuracy-TIMER_SLEEP-77-philip</msg>
<status status="PASS" starttime="20201030 18:39:54.803" endtime="20201030 18:39:54.805"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:39:54.807" level="INFO">VALUE: [8.943100000000093e-05, 8.93060000000008e-05, 8.94730000000031e-05, 8.923599999999948e-05, 8.952699999999897e-05, 8.876400000000159e-05, 8.952799999999844e-05, 8.901399999999837e-05, 8.922199999999991e-05, 8.91250000000024e-05, 8.947200000000016e-05, 8.937499999999571e-05, 8.905600000000402e-05, 8.918100000000068e-05, 8.907000000000359e-05, 8.926299999999915e-05, 8.872199999999941e-05, 8.934700000000351e-05, 8.970899999999338e-05, 8.954200000000495e-05, 8.905499999999761e-05, 8.888900000000172e-05, 8.904099999999804e-05, 8.943099999999399e-05, 8.940300000000179e-05, 8.869499999999975e-05, 8.936200000000255e-05, 8.952699999999897e-05, 8.941600000000188e-05, 8.940200000000231e-05, 8.883300000000344e-05, 8.870799999999984e-05, 8.930600000000427e-05, 8.926399999999862e-05, 8.88199999999964e-05, 8.941700000000136e-05, 8.916600000000163e-05, 8.874999999999855e-05, 8.951399999999887e-05, 8.90129999999989e-05, 8.893000000000095e-05, 8.89999999999988e-05, 8.954199999999801e-05, 8.922199999999991e-05, 8.891700000000086e-05, 8.877800000000463e-05, 8.869499999999975e-05, 8.869499999999975e-05, 8.938900000000222e-05, 8.880599999999683e-05]</msg>
<status status="PASS" starttime="20201030 18:39:54.805" endtime="20201030 18:39:54.808"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:54.801" endtime="20201030 18:39:54.809"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:39:54.813" endtime="20201030 18:39:54.832"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:54.811" endtime="20201030 18:39:54.833"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:54.810" endtime="20201030 18:39:54.833"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:54.416" endtime="20201030 18:39:54.833"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:54.415" endtime="20201030 18:39:54.833"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:54.842" endtime="20201030 18:39:54.862"></status>
</kw>
<msg timestamp="20201030 18:39:54.863" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:54.840" endtime="20201030 18:39:54.863"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:54.865" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:54.864" endtime="20201030 18:39:54.865"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:54.866" endtime="20201030 18:39:54.868"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:54.838" endtime="20201030 18:39:54.868"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:54.836" endtime="20201030 18:39:54.869"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:54.875" endtime="20201030 18:39:55.164"></status>
</kw>
<msg timestamp="20201030 18:39:55.167" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020145, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02023525, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201030 18:39:54.874" endtime="20201030 18:39:55.167"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:55.175" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020145, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02023525, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201030 18:39:55.168" endtime="20201030 18:39:55.176"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:55.177" endtime="20201030 18:39:55.178"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:54.871" endtime="20201030 18:39:55.179"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:54.869" endtime="20201030 18:39:55.179"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:39:55.183" level="INFO">${RESULT} = [{'diff': 9.025000000000005e-05}, {'diff': 9.0639e-05}, {'diff': 9.065299999999957e-05}, {'diff': 8.970900000000032e-05}, {'diff': 8.988799999999977e-05}, {'diff': 8.987499999999968e-05}, {'diff': 9.0...</msg>
<status status="PASS" starttime="20201030 18:39:55.180" endtime="20201030 18:39:55.184"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:39:55.189" level="INFO">${ACCURACY} = {'diff': [9.025000000000005e-05, 9.0639e-05, 9.065299999999957e-05, 8.970900000000032e-05, 8.988799999999977e-05, 8.987499999999968e-05, 9.056900000000215e-05, 8.987499999999968e-05, 9.058299999999825...</msg>
<status status="PASS" starttime="20201030 18:39:55.184" endtime="20201030 18:39:55.189"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:39:55.193" level="INFO">NAME: accuracy-TIMER_SLEEP-78-philip</msg>
<status status="PASS" starttime="20201030 18:39:55.192" endtime="20201030 18:39:55.194"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:39:55.196" level="INFO">VALUE: [9.025000000000005e-05, 9.0639e-05, 9.065299999999957e-05, 8.970900000000032e-05, 8.988799999999977e-05, 8.987499999999968e-05, 9.056900000000215e-05, 8.987499999999968e-05, 9.058299999999825e-05, 9.004100000000251e-05, 8.96939999999978e-05, 9.025000000000005e-05, 9.03060000000018e-05, 9.015299999999907e-05, 9.004199999999851e-05, 9.019500000000125e-05, 8.991600000000238e-05, 9.023600000000048e-05, 9.041599999999941e-05, 9.034700000000104e-05, 9.022200000000091e-05, 9.025000000000005e-05, 9.009700000000079e-05, 9.004200000000198e-05, 9.011099999999689e-05, 9.052799999999944e-05, 8.980599999999783e-05, 8.986100000000011e-05, 9.033400000000094e-05, 8.988899999999925e-05, 9.030499999999886e-05, 9.048600000000073e-05, 9.040299999999932e-05, 8.998600000000023e-05, 8.99999999999998e-05, 8.990300000000229e-05, 9.018099999999821e-05, 8.986099999999664e-05, 9.022300000000039e-05, 9.027799999999919e-05, 9.051399999999987e-05, 9.000000000000327e-05, 9.01800000000022e-05, 9.043100000000193e-05, 9.056900000000215e-05, 9.043100000000193e-05, 9.022200000000091e-05, 9.047200000000116e-05, 8.982000000000087e-05, 9.018100000000168e-05]</msg>
<status status="PASS" starttime="20201030 18:39:55.194" endtime="20201030 18:39:55.197"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:55.190" endtime="20201030 18:39:55.197"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:39:55.201" endtime="20201030 18:39:55.221"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:55.200" endtime="20201030 18:39:55.221"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:55.198" endtime="20201030 18:39:55.222"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:54.834" endtime="20201030 18:39:55.222"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:54.834" endtime="20201030 18:39:55.222"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:55.240" endtime="20201030 18:39:55.262"></status>
</kw>
<msg timestamp="20201030 18:39:55.263" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:55.236" endtime="20201030 18:39:55.263"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:55.268" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:55.265" endtime="20201030 18:39:55.269"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:55.270" endtime="20201030 18:39:55.274"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:55.230" endtime="20201030 18:39:55.275"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:55.225" endtime="20201030 18:39:55.276"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:55.291" endtime="20201030 18:39:55.587"></status>
</kw>
<msg timestamp="20201030 18:39:55.590" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.030207111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030298431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:55.287" endtime="20201030 18:39:55.590"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:55.598" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.030207111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030298431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:55.591" endtime="20201030 18:39:55.599"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:55.600" endtime="20201030 18:39:55.601"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:55.281" endtime="20201030 18:39:55.602"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:55.278" endtime="20201030 18:39:55.602"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:39:55.606" level="INFO">${RESULT} = [{'diff': 9.132000000000237e-05}, {'diff': 9.070800000000184e-05}, {'diff': 9.105599999999908e-05}, {'diff': 9.118099999999921e-05}, {'diff': 9.06520000000001e-05}, {'diff': 9.083300000000197e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:39:55.603" endtime="20201030 18:39:55.607"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:39:55.611" level="INFO">${ACCURACY} = {'diff': [9.132000000000237e-05, 9.070800000000184e-05, 9.105599999999908e-05, 9.118099999999921e-05, 9.06520000000001e-05, 9.083300000000197e-05, 9.098600000000123e-05, 9.075000000000055e-05, 9.08059...</msg>
<status status="PASS" starttime="20201030 18:39:55.607" endtime="20201030 18:39:55.611"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:39:55.615" level="INFO">NAME: accuracy-TIMER_SLEEP-79-philip</msg>
<status status="PASS" starttime="20201030 18:39:55.614" endtime="20201030 18:39:55.616"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:39:55.618" level="INFO">VALUE: [9.132000000000237e-05, 9.070800000000184e-05, 9.105599999999908e-05, 9.118099999999921e-05, 9.06520000000001e-05, 9.083300000000197e-05, 9.098600000000123e-05, 9.075000000000055e-05, 9.080599999999883e-05, 9.088900000000025e-05, 9.165300000000057e-05, 9.109800000000473e-05, 9.16250000000049e-05, 9.165200000000456e-05, 9.069400000000227e-05, 9.159699999999882e-05, 9.111100000000483e-05, 9.122200000000191e-05, 9.122200000000191e-05, 9.112499999999746e-05, 9.141699999999642e-05, 9.127800000000019e-05, 9.0945000000002e-05, 9.068100000000218e-05, 9.123700000000096e-05, 9.108299999999875e-05, 9.094400000000252e-05, 9.162499999999796e-05, 9.151400000000087e-05, 9.111099999999789e-05, 9.106899999999918e-05, 9.14859999999948e-05, 9.105599999999908e-05, 9.10000000000008e-05, 9.068100000000218e-05, 9.163900000000447e-05, 9.136100000000508e-05, 9.1332999999999e-05, 9.076400000000012e-05, 9.137499999999771e-05, 9.116699999999617e-05, 9.111099999999789e-05, 9.099999999999386e-05, 9.154200000000001e-05, 9.095800000000209e-05, 9.147300000000164e-05, 9.088899999999678e-05, 9.130499999999986e-05, 9.098600000000123e-05, 9.156899999999968e-05]</msg>
<status status="PASS" starttime="20201030 18:39:55.616" endtime="20201030 18:39:55.619"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:55.612" endtime="20201030 18:39:55.619"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:39:55.623" endtime="20201030 18:39:55.643"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:55.621" endtime="20201030 18:39:55.643"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:55.620" endtime="20201030 18:39:55.643"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:55.223" endtime="20201030 18:39:55.644"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:55.222" endtime="20201030 18:39:55.644"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:55.653" endtime="20201030 18:39:55.673"></status>
</kw>
<msg timestamp="20201030 18:39:55.674" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:55.651" endtime="20201030 18:39:55.674"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:55.677" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:55.675" endtime="20201030 18:39:55.677"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:55.678" endtime="20201030 18:39:55.679"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:55.649" endtime="20201030 18:39:55.680"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:55.647" endtime="20201030 18:39:55.680"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:55.687" endtime="20201030 18:39:55.973"></status>
</kw>
<msg timestamp="20201030 18:39:55.977" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021160194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021252764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:55.686" endtime="20201030 18:39:55.977"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:55.985" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021160194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021252764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:55.978" endtime="20201030 18:39:55.985"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:55.986" endtime="20201030 18:39:55.988"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:55.683" endtime="20201030 18:39:55.988"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:55.681" endtime="20201030 18:39:55.989"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:39:55.993" level="INFO">${RESULT} = [{'diff': 9.257000000000015e-05}, {'diff': 9.259699999999982e-05}, {'diff': 9.240299999999785e-05}, {'diff': 9.266700000000114e-05}, {'diff': 9.170799999999937e-05}, {'diff': 9.208299999999975e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:39:55.990" endtime="20201030 18:39:55.993"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:39:55.997" level="INFO">${ACCURACY} = {'diff': [9.257000000000015e-05, 9.259699999999982e-05, 9.240299999999785e-05, 9.266700000000114e-05, 9.170799999999937e-05, 9.208299999999975e-05, 9.190300000000082e-05, 9.168000000000023e-05, 9.2638...</msg>
<status status="PASS" starttime="20201030 18:39:55.994" endtime="20201030 18:39:55.997"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:39:56.002" level="INFO">NAME: accuracy-TIMER_SLEEP-80-philip</msg>
<status status="PASS" starttime="20201030 18:39:56.001" endtime="20201030 18:39:56.002"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:39:56.004" level="INFO">VALUE: [9.257000000000015e-05, 9.259699999999982e-05, 9.240299999999785e-05, 9.266700000000114e-05, 9.170799999999937e-05, 9.208299999999975e-05, 9.190300000000082e-05, 9.168000000000023e-05, 9.263899999999853e-05, 9.2639000000002e-05, 9.20000000000018e-05, 9.261199999999886e-05, 9.1945000000003e-05, 9.19719999999992e-05, 9.186099999999864e-05, 9.198699999999824e-05, 9.26659999999982e-05, 9.187500000000168e-05, 9.240200000000184e-05, 9.198600000000223e-05, 9.248600000000273e-05, 9.255500000000111e-05, 9.212499999999846e-05, 9.175000000000155e-05, 9.237500000000218e-05, 9.234800000000251e-05, 9.236099999999914e-05, 9.247200000000316e-05, 9.256900000000068e-05, 9.180500000000036e-05, 9.205500000000061e-05, 9.170799999999937e-05, 9.252800000000144e-05, 9.193099999999996e-05, 9.166700000000014e-05, 9.234699999999957e-05, 9.24589999999996e-05, 9.218100000000021e-05, 9.229200000000076e-05, 9.16939999999998e-05, 9.175000000000155e-05, 9.199999999999833e-05, 9.220799999999987e-05, 9.208299999999975e-05, 9.16939999999998e-05, 9.230600000000033e-05, 9.172299999999842e-05, 9.224999999999858e-05, 9.176399999999765e-05, 9.263799999999905e-05]</msg>
<status status="PASS" starttime="20201030 18:39:56.003" endtime="20201030 18:39:56.006"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:55.998" endtime="20201030 18:39:56.007"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:39:56.011" endtime="20201030 18:39:56.030"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:56.009" endtime="20201030 18:39:56.031"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:56.008" endtime="20201030 18:39:56.031"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:55.645" endtime="20201030 18:39:56.031"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:55.644" endtime="20201030 18:39:56.032"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:56.041" endtime="20201030 18:39:56.060"></status>
</kw>
<msg timestamp="20201030 18:39:56.060" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:56.039" endtime="20201030 18:39:56.060"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:56.063" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:56.061" endtime="20201030 18:39:56.063"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:56.064" endtime="20201030 18:39:56.066"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:56.036" endtime="20201030 18:39:56.066"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:56.034" endtime="20201030 18:39:56.067"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:56.073" endtime="20201030 18:39:56.359"></status>
</kw>
<msg timestamp="20201030 18:39:56.363" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021172139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021264847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:56.072" endtime="20201030 18:39:56.363"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:56.371" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021172139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021264847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:56.364" endtime="20201030 18:39:56.371"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:56.372" endtime="20201030 18:39:56.374"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:56.069" endtime="20201030 18:39:56.374"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:56.067" endtime="20201030 18:39:56.375"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:39:56.379" level="INFO">${RESULT} = [{'diff': 9.270800000000037e-05}, {'diff': 9.281900000000093e-05}, {'diff': 9.298599999999976e-05}, {'diff': 9.274999999999908e-05}, {'diff': 9.294499999999706e-05}, {'diff': 9.299999999999933e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:39:56.376" endtime="20201030 18:39:56.379"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:39:56.384" level="INFO">${ACCURACY} = {'diff': [9.270800000000037e-05, 9.281900000000093e-05, 9.298599999999976e-05, 9.274999999999908e-05, 9.294499999999706e-05, 9.299999999999933e-05, 9.327800000000219e-05, 9.293100000000096e-05, 9.2764...</msg>
<status status="PASS" starttime="20201030 18:39:56.380" endtime="20201030 18:39:56.384"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:39:56.389" level="INFO">NAME: accuracy-TIMER_SLEEP-81-philip</msg>
<status status="PASS" starttime="20201030 18:39:56.388" endtime="20201030 18:39:56.389"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:39:56.391" level="INFO">VALUE: [9.270800000000037e-05, 9.281900000000093e-05, 9.298599999999976e-05, 9.274999999999908e-05, 9.294499999999706e-05, 9.299999999999933e-05, 9.327800000000219e-05, 9.293100000000096e-05, 9.276400000000212e-05, 9.293000000000148e-05, 9.34720000000007e-05, 9.309700000000032e-05, 9.355599999999811e-05, 9.318099999999774e-05, 9.363899999999953e-05, 9.280599999999736e-05, 9.334700000000057e-05, 9.294500000000053e-05, 9.28330000000005e-05, 9.270800000000037e-05, 9.312499999999946e-05, 9.349999999999983e-05, 9.305500000000161e-05, 9.315300000000207e-05, 9.322199999999697e-05, 9.28200000000004e-05, 9.298599999999976e-05, 9.347300000000017e-05, 9.287499999999921e-05, 9.327799999999872e-05, 9.341599999999894e-05, 9.327699999999925e-05, 9.317999999999826e-05, 9.311099999999989e-05, 9.288900000000225e-05, 9.316699999999817e-05, 9.358300000000125e-05, 9.280599999999736e-05, 9.268100000000071e-05, 9.304199999999804e-05, 9.279199999999779e-05, 9.308300000000075e-05, 9.281899999999746e-05, 9.355599999999811e-05, 9.329100000000229e-05, 9.336100000000014e-05, 9.359699999999735e-05, 9.319500000000078e-05, 9.362499999999996e-05, 9.318000000000173e-05]</msg>
<status status="PASS" starttime="20201030 18:39:56.390" endtime="20201030 18:39:56.396"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:56.385" endtime="20201030 18:39:56.397"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:39:56.401" endtime="20201030 18:39:56.420"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:56.399" endtime="20201030 18:39:56.421"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:56.398" endtime="20201030 18:39:56.421"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:56.033" endtime="20201030 18:39:56.422"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:56.032" endtime="20201030 18:39:56.422"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:56.431" endtime="20201030 18:39:56.451"></status>
</kw>
<msg timestamp="20201030 18:39:56.451" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:56.429" endtime="20201030 18:39:56.451"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:56.454" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:56.452" endtime="20201030 18:39:56.454"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:56.455" endtime="20201030 18:39:56.456"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:56.427" endtime="20201030 18:39:56.457"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:56.424" endtime="20201030 18:39:56.457"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:56.464" endtime="20201030 18:39:56.751"></status>
</kw>
<msg timestamp="20201030 18:39:56.754" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020693306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020787611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:56.463" endtime="20201030 18:39:56.755"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:56.763" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020693306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020787611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:56.756" endtime="20201030 18:39:56.763"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:56.764" endtime="20201030 18:39:56.766"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:56.460" endtime="20201030 18:39:56.766"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:56.458" endtime="20201030 18:39:56.767"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:39:56.771" level="INFO">${RESULT} = [{'diff': 9.430499999999939e-05}, {'diff': 9.395799999999815e-05}, {'diff': 9.368099999999824e-05}, {'diff': 9.39720000000012e-05}, {'diff': 9.398600000000076e-05}, {'diff': 9.452799999999997e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:39:56.768" endtime="20201030 18:39:56.771"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:39:56.775" level="INFO">${ACCURACY} = {'diff': [9.430499999999939e-05, 9.395799999999815e-05, 9.368099999999824e-05, 9.39720000000012e-05, 9.398600000000076e-05, 9.452799999999997e-05, 9.463900000000053e-05, 9.391700000000239e-05, 9.43470...</msg>
<status status="PASS" starttime="20201030 18:39:56.772" endtime="20201030 18:39:56.776"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:39:56.780" level="INFO">NAME: accuracy-TIMER_SLEEP-82-philip</msg>
<status status="PASS" starttime="20201030 18:39:56.779" endtime="20201030 18:39:56.780"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:39:56.783" level="INFO">VALUE: [9.430499999999939e-05, 9.395799999999815e-05, 9.368099999999824e-05, 9.39720000000012e-05, 9.398600000000076e-05, 9.452799999999997e-05, 9.463900000000053e-05, 9.391700000000239e-05, 9.434700000000157e-05, 9.400000000000033e-05, 9.39859999999973e-05, 9.412500000000046e-05, 9.46530000000001e-05, 9.394400000000205e-05, 9.41529999999996e-05, 9.429199999999929e-05, 9.459800000000129e-05, 9.379199999999879e-05, 9.423700000000049e-05, 9.465200000000062e-05, 9.459700000000182e-05, 9.367999999999876e-05, 9.388899999999978e-05, 9.426400000000015e-05, 9.454200000000301e-05, 9.370900000000085e-05, 9.422199999999797e-05, 9.436100000000114e-05, 9.406999999999818e-05, 9.387500000000021e-05, 9.381900000000193e-05, 9.458299999999878e-05, 9.398600000000076e-05, 9.445800000000212e-05, 9.383299999999803e-05, 9.412500000000046e-05, 9.416699999999917e-05, 9.381999999999793e-05, 9.456999999999868e-05, 9.420900000000135e-05, 9.405599999999861e-05, 9.409699999999785e-05, 9.393000000000248e-05, 9.368000000000223e-05, 9.381899999999846e-05, 9.375000000000008e-05, 9.463900000000053e-05, 9.383299999999803e-05, 9.38200000000014e-05, 9.425000000000058e-05]</msg>
<status status="PASS" starttime="20201030 18:39:56.781" endtime="20201030 18:39:56.783"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:56.776" endtime="20201030 18:39:56.784"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:39:56.788" endtime="20201030 18:39:56.807"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:56.786" endtime="20201030 18:39:56.808"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:56.785" endtime="20201030 18:39:56.808"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:56.423" endtime="20201030 18:39:56.809"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:56.422" endtime="20201030 18:39:56.809"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:56.818" endtime="20201030 18:39:56.841"></status>
</kw>
<msg timestamp="20201030 18:39:56.841" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:56.816" endtime="20201030 18:39:56.841"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:56.844" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:56.842" endtime="20201030 18:39:56.844"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:56.845" endtime="20201030 18:39:56.847"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:56.813" endtime="20201030 18:39:56.847"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:56.811" endtime="20201030 18:39:56.848"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:56.854" endtime="20201030 18:39:57.140"></status>
</kw>
<msg timestamp="20201030 18:39:57.144" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023721722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023817028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:56.853" endtime="20201030 18:39:57.144"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:57.152" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023721722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023817028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:57.145" endtime="20201030 18:39:57.152"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:57.153" endtime="20201030 18:39:57.155"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:56.850" endtime="20201030 18:39:57.155"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:56.848" endtime="20201030 18:39:57.156"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:39:57.160" level="INFO">${RESULT} = [{'diff': 9.530599999999986e-05}, {'diff': 9.552800000000097e-05}, {'diff': 9.466699999999967e-05}, {'diff': 9.493099999999949e-05}, {'diff': 9.504200000000004e-05}, {'diff': 9.562500000000196e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:39:57.156" endtime="20201030 18:39:57.160"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:39:57.164" level="INFO">${ACCURACY} = {'diff': [9.530599999999986e-05, 9.552800000000097e-05, 9.466699999999967e-05, 9.493099999999949e-05, 9.504200000000004e-05, 9.562500000000196e-05, 9.511100000000189e-05, 9.480499999999989e-05, 9.4764...</msg>
<status status="PASS" starttime="20201030 18:39:57.161" endtime="20201030 18:39:57.164"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:39:57.168" level="INFO">NAME: accuracy-TIMER_SLEEP-83-philip</msg>
<status status="PASS" starttime="20201030 18:39:57.167" endtime="20201030 18:39:57.169"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:39:57.171" level="INFO">VALUE: [9.530599999999986e-05, 9.552800000000097e-05, 9.466699999999967e-05, 9.493099999999949e-05, 9.504200000000004e-05, 9.562500000000196e-05, 9.511100000000189e-05, 9.480499999999989e-05, 9.476400000000065e-05, 9.47079999999989e-05, 9.556900000000021e-05, 9.476400000000065e-05, 9.543099999999999e-05, 9.493000000000001e-05, 9.541700000000042e-05, 9.49729999999982e-05, 9.48469999999986e-05, 9.552699999999803e-05, 9.504200000000004e-05, 9.555600000000011e-05, 9.494399999999958e-05, 9.531999999999943e-05, 9.509700000000232e-05, 9.476400000000065e-05, 9.481999999999893e-05, 9.493099999999949e-05, 9.538899999999781e-05, 9.545799999999965e-05, 9.47079999999989e-05, 9.508299999999928e-05, 9.536099999999867e-05, 9.518099999999974e-05, 9.5333000000003e-05, 9.527800000000072e-05, 9.512500000000146e-05, 9.500000000000133e-05, 9.516700000000017e-05, 9.516700000000017e-05, 9.469399999999933e-05, 9.561100000000239e-05, 9.555500000000064e-05, 9.562499999999849e-05, 9.488900000000078e-05, 9.558299999999978e-05, 9.556999999999968e-05, 9.511100000000189e-05, 9.473600000000151e-05, 9.543000000000051e-05, 9.505500000000014e-05, 9.526400000000115e-05]</msg>
<status status="PASS" starttime="20201030 18:39:57.170" endtime="20201030 18:39:57.172"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:57.165" endtime="20201030 18:39:57.173"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:39:57.177" endtime="20201030 18:39:57.196"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:57.175" endtime="20201030 18:39:57.197"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:57.174" endtime="20201030 18:39:57.197"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:56.810" endtime="20201030 18:39:57.197"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:56.809" endtime="20201030 18:39:57.198"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:57.206" endtime="20201030 18:39:57.225"></status>
</kw>
<msg timestamp="20201030 18:39:57.225" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:57.205" endtime="20201030 18:39:57.226"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:57.228" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:57.227" endtime="20201030 18:39:57.228"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:57.229" endtime="20201030 18:39:57.231"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:57.202" endtime="20201030 18:39:57.231"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:57.200" endtime="20201030 18:39:57.232"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:57.238" endtime="20201030 18:39:57.546"></status>
</kw>
<msg timestamp="20201030 18:39:57.550" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019784597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019881, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:39:57.237" endtime="20201030 18:39:57.550"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:57.558" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019784597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019881, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:39:57.551" endtime="20201030 18:39:57.559"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:57.560" endtime="20201030 18:39:57.561"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:57.234" endtime="20201030 18:39:57.562"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:57.232" endtime="20201030 18:39:57.562"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:39:57.566" level="INFO">${RESULT} = [{'diff': 9.640299999999838e-05}, {'diff': 9.662499999999949e-05}, {'diff': 9.623600000000301e-05}, {'diff': 9.663899999999906e-05}, {'diff': 9.62920000000013e-05}, {'diff': 9.576299999999871e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:39:57.563" endtime="20201030 18:39:57.567"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:39:57.571" level="INFO">${ACCURACY} = {'diff': [9.640299999999838e-05, 9.662499999999949e-05, 9.623600000000301e-05, 9.663899999999906e-05, 9.62920000000013e-05, 9.576299999999871e-05, 9.636099999999967e-05, 9.568000000000076e-05, 9.59300...</msg>
<status status="PASS" starttime="20201030 18:39:57.567" endtime="20201030 18:39:57.572"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:39:57.576" level="INFO">NAME: accuracy-TIMER_SLEEP-84-philip</msg>
<status status="PASS" starttime="20201030 18:39:57.575" endtime="20201030 18:39:57.576"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:39:57.578" level="INFO">VALUE: [9.640299999999838e-05, 9.662499999999949e-05, 9.623600000000301e-05, 9.663899999999906e-05, 9.62920000000013e-05, 9.576299999999871e-05, 9.636099999999967e-05, 9.568000000000076e-05, 9.593000000000101e-05, 9.62080000000004e-05, 9.608300000000028e-05, 9.63059999999974e-05, 9.61669999999977e-05, 9.599999999999886e-05, 9.637499999999924e-05, 9.611099999999942e-05, 9.572199999999947e-05, 9.609699999999985e-05, 9.652800000000197e-05, 9.568000000000076e-05, 9.640300000000185e-05, 9.622199999999997e-05, 9.633300000000053e-05, 9.59859999999993e-05, 9.607000000000018e-05, 9.625000000000258e-05, 9.640300000000185e-05, 9.609699999999985e-05, 9.604100000000157e-05, 9.61530000000016e-05, 9.62080000000004e-05, 9.62920000000013e-05, 9.655600000000111e-05, 9.630600000000086e-05, 9.663899999999906e-05, 9.652800000000197e-05, 9.629100000000182e-05, 9.641699999999795e-05, 9.642999999999805e-05, 9.638899999999881e-05, 9.583300000000003e-05, 9.640299999999838e-05, 9.640299999999838e-05, 9.63470000000001e-05, 9.604200000000104e-05, 9.669400000000133e-05, 9.59859999999993e-05, 9.583300000000003e-05, 9.659700000000035e-05, 9.663899999999906e-05]</msg>
<status status="PASS" starttime="20201030 18:39:57.577" endtime="20201030 18:39:57.579"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:57.572" endtime="20201030 18:39:57.580"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:39:57.583" endtime="20201030 18:39:57.603"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:57.582" endtime="20201030 18:39:57.603"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:57.581" endtime="20201030 18:39:57.604"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:57.199" endtime="20201030 18:39:57.604"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:57.198" endtime="20201030 18:39:57.604"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:57.613" endtime="20201030 18:39:57.632"></status>
</kw>
<msg timestamp="20201030 18:39:57.632" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:57.611" endtime="20201030 18:39:57.632"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:57.635" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:57.633" endtime="20201030 18:39:57.635"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:57.636" endtime="20201030 18:39:57.637"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:57.609" endtime="20201030 18:39:57.638"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:57.607" endtime="20201030 18:39:57.638"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:57.645" endtime="20201030 18:39:57.932"></status>
</kw>
<msg timestamp="20201030 18:39:57.935" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019943069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020040236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:57.643" endtime="20201030 18:39:57.935"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:57.943" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019943069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020040236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:57.936" endtime="20201030 18:39:57.943"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:57.944" endtime="20201030 18:39:57.946"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:57.641" endtime="20201030 18:39:57.946"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:57.639" endtime="20201030 18:39:57.947"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:39:57.951" level="INFO">${RESULT} = [{'diff': 9.71669999999987e-05}, {'diff': 9.691700000000192e-05}, {'diff': 9.765299999999963e-05}, {'diff': 9.75279999999995e-05}, {'diff': 9.701399999999943e-05}, {'diff': 9.762500000000049e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:39:57.947" endtime="20201030 18:39:57.951"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:39:57.955" level="INFO">${ACCURACY} = {'diff': [9.71669999999987e-05, 9.691700000000192e-05, 9.765299999999963e-05, 9.75279999999995e-05, 9.701399999999943e-05, 9.762500000000049e-05, 9.706899999999824e-05, 9.75409999999996e-05, 9.7179999...</msg>
<status status="PASS" starttime="20201030 18:39:57.952" endtime="20201030 18:39:57.955"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:39:57.959" level="INFO">NAME: accuracy-TIMER_SLEEP-85-philip</msg>
<status status="PASS" starttime="20201030 18:39:57.958" endtime="20201030 18:39:57.960"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:39:57.962" level="INFO">VALUE: [9.71669999999987e-05, 9.691700000000192e-05, 9.765299999999963e-05, 9.75279999999995e-05, 9.701399999999943e-05, 9.762500000000049e-05, 9.706899999999824e-05, 9.75409999999996e-05, 9.71799999999988e-05, 9.681900000000146e-05, 9.72920000000023e-05, 9.734699999999763e-05, 9.755599999999864e-05, 9.708299999999781e-05, 9.67920000000018e-05, 9.705599999999814e-05, 9.758399999999778e-05, 9.763900000000006e-05, 9.763900000000006e-05, 9.756899999999874e-05, 9.730500000000239e-05, 9.75279999999995e-05, 9.677800000000222e-05, 9.731999999999796e-05, 9.741699999999895e-05, 9.686100000000017e-05, 9.673599999999657e-05, 9.688899999999931e-05, 9.676399999999918e-05, 9.747200000000122e-05, 9.765299999999963e-05, 9.733299999999806e-05, 9.697200000000072e-05, 9.668099999999777e-05, 9.723600000000054e-05, 9.726399999999968e-05, 9.75409999999996e-05, 9.734800000000057e-05, 9.688799999999984e-05, 9.677699999999928e-05, 9.681900000000146e-05, 9.730499999999892e-05, 9.75279999999995e-05, 9.72080000000014e-05, 9.718100000000174e-05, 9.743100000000199e-05, 9.744499999999809e-05, 9.737500000000024e-05, 9.744400000000208e-05, 9.750000000000036e-05]</msg>
<status status="PASS" starttime="20201030 18:39:57.960" endtime="20201030 18:39:57.963"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:57.956" endtime="20201030 18:39:57.963"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:39:57.967" endtime="20201030 18:39:57.987"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:57.965" endtime="20201030 18:39:57.987"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:57.964" endtime="20201030 18:39:57.988"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:57.605" endtime="20201030 18:39:57.988"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:57.604" endtime="20201030 18:39:57.988"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:57.998" endtime="20201030 18:39:58.019"></status>
</kw>
<msg timestamp="20201030 18:39:58.019" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:57.996" endtime="20201030 18:39:58.020"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:58.022" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:58.021" endtime="20201030 18:39:58.022"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:58.023" endtime="20201030 18:39:58.025"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:57.993" endtime="20201030 18:39:58.025"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:57.991" endtime="20201030 18:39:58.025"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:58.032" endtime="20201030 18:39:58.319"></status>
</kw>
<msg timestamp="20201030 18:39:58.322" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022623722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022722319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:58.031" endtime="20201030 18:39:58.322"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:58.330" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022623722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022722319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:58.323" endtime="20201030 18:39:58.331"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:58.332" endtime="20201030 18:39:58.333"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:58.028" endtime="20201030 18:39:58.334"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:58.026" endtime="20201030 18:39:58.334"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:39:58.338" level="INFO">${RESULT} = [{'diff': 9.859700000000235e-05}, {'diff': 9.829100000000035e-05}, {'diff': 9.76799999999993e-05}, {'diff': 9.841699999999995e-05}, {'diff': 9.840300000000038e-05}, {'diff': 9.818099999999927e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:39:58.335" endtime="20201030 18:39:58.339"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:39:58.342" level="INFO">${ACCURACY} = {'diff': [9.859700000000235e-05, 9.829100000000035e-05, 9.76799999999993e-05, 9.841699999999995e-05, 9.840300000000038e-05, 9.818099999999927e-05, 9.863900000000106e-05, 9.794499999999859e-05, 9.81530...</msg>
<status status="PASS" starttime="20201030 18:39:58.339" endtime="20201030 18:39:58.343"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:39:58.347" level="INFO">NAME: accuracy-TIMER_SLEEP-86-philip</msg>
<status status="PASS" starttime="20201030 18:39:58.346" endtime="20201030 18:39:58.347"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:39:58.349" level="INFO">VALUE: [9.859700000000235e-05, 9.829100000000035e-05, 9.76799999999993e-05, 9.841699999999995e-05, 9.840300000000038e-05, 9.818099999999927e-05, 9.863900000000106e-05, 9.794499999999859e-05, 9.815300000000013e-05, 9.805499999999967e-05, 9.808300000000228e-05, 9.787500000000074e-05, 9.847199999999875e-05, 9.788900000000031e-05, 9.81799999999998e-05, 9.794499999999859e-05, 9.862500000000149e-05, 9.808399999999828e-05, 9.784699999999813e-05, 9.800000000000086e-05, 9.787499999999727e-05, 9.781899999999899e-05, 9.843000000000005e-05, 9.772200000000147e-05, 9.793099999999902e-05, 9.84860000000018e-05, 9.781999999999846e-05, 9.840300000000038e-05, 9.845900000000213e-05, 9.793099999999902e-05, 9.769499999999834e-05, 9.865200000000116e-05, 9.863900000000106e-05, 9.85280000000005e-05, 9.815300000000013e-05, 9.841699999999995e-05, 9.794399999999912e-05, 9.83609999999982e-05, 9.838900000000081e-05, 9.83059999999994e-05, 9.818099999999927e-05, 9.83479999999981e-05, 9.795800000000215e-05, 9.843000000000005e-05, 9.776400000000018e-05, 9.79999999999974e-05, 9.837500000000124e-05, 9.834699999999863e-05, 9.83609999999982e-05, 9.818099999999927e-05]</msg>
<status status="PASS" starttime="20201030 18:39:58.348" endtime="20201030 18:39:58.351"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:58.343" endtime="20201030 18:39:58.352"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:39:58.355" endtime="20201030 18:39:58.375"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:58.354" endtime="20201030 18:39:58.375"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:58.353" endtime="20201030 18:39:58.376"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:57.989" endtime="20201030 18:39:58.376"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:57.988" endtime="20201030 18:39:58.376"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:58.385" endtime="20201030 18:39:58.404"></status>
</kw>
<msg timestamp="20201030 18:39:58.405" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:58.383" endtime="20201030 18:39:58.405"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:58.407" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:58.406" endtime="20201030 18:39:58.408"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:58.408" endtime="20201030 18:39:58.410"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:58.381" endtime="20201030 18:39:58.411"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:58.379" endtime="20201030 18:39:58.411"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:58.418" endtime="20201030 18:39:58.703"></status>
</kw>
<msg timestamp="20201030 18:39:58.706" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020152181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0202515, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:39:58.416" endtime="20201030 18:39:58.706"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:58.714" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020152181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0202515, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:39:58.707" endtime="20201030 18:39:58.715"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:58.715" endtime="20201030 18:39:58.717"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:58.413" endtime="20201030 18:39:58.718"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:58.412" endtime="20201030 18:39:58.718"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:39:58.722" level="INFO">${RESULT} = [{'diff': 9.931899999999702e-05}, {'diff': 9.876400000000118e-05}, {'diff': 9.938899999999834e-05}, {'diff': 9.891700000000045e-05}, {'diff': 9.95280000000015e-05}, {'diff': 9.956999999999674e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:39:58.719" endtime="20201030 18:39:58.722"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:39:58.727" level="INFO">${ACCURACY} = {'diff': [9.931899999999702e-05, 9.876400000000118e-05, 9.938899999999834e-05, 9.891700000000045e-05, 9.95280000000015e-05, 9.956999999999674e-05, 9.959699999999988e-05, 9.912500000000199e-05, 9.92359...</msg>
<status status="PASS" starttime="20201030 18:39:58.723" endtime="20201030 18:39:58.727"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:39:58.732" level="INFO">NAME: accuracy-TIMER_SLEEP-87-philip</msg>
<status status="PASS" starttime="20201030 18:39:58.731" endtime="20201030 18:39:58.732"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:39:58.734" level="INFO">VALUE: [9.931899999999702e-05, 9.876400000000118e-05, 9.938899999999834e-05, 9.891700000000045e-05, 9.95280000000015e-05, 9.956999999999674e-05, 9.959699999999988e-05, 9.912500000000199e-05, 9.923599999999907e-05, 9.93479999999991e-05, 9.877699999999781e-05, 9.893000000000055e-05, 9.940300000000138e-05, 9.890300000000088e-05, 9.875000000000161e-05, 9.970800000000044e-05, 9.929199999999735e-05, 9.929200000000082e-05, 9.916699999999723e-05, 9.965299999999816e-05, 9.927700000000178e-05, 9.898599999999882e-05, 9.9028000000001e-05, 9.927800000000125e-05, 9.962500000000249e-05, 9.908399999999928e-05, 9.93470000000031e-05, 9.876399999999771e-05, 9.947299999999923e-05, 9.877799999999728e-05, 9.893100000000002e-05, 9.956900000000074e-05, 9.934699999999963e-05, 9.955500000000117e-05, 9.918100000000027e-05, 9.965300000000163e-05, 9.925000000000211e-05, 9.909700000000285e-05, 9.868099999999977e-05, 9.945899999999966e-05, 9.897299999999873e-05, 9.906900000000024e-05, 9.890300000000088e-05, 9.947199999999976e-05, 9.886100000000217e-05, 9.887500000000174e-05, 9.912499999999852e-05, 9.88059999999999e-05, 9.870900000000238e-05, 9.948700000000227e-05]</msg>
<status status="PASS" starttime="20201030 18:39:58.733" endtime="20201030 18:39:58.735"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:58.728" endtime="20201030 18:39:58.735"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:39:58.739" endtime="20201030 18:39:58.759"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:58.738" endtime="20201030 18:39:58.759"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:58.736" endtime="20201030 18:39:58.760"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:58.377" endtime="20201030 18:39:58.760"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:58.376" endtime="20201030 18:39:58.760"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:58.769" endtime="20201030 18:39:58.787"></status>
</kw>
<msg timestamp="20201030 18:39:58.788" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:58.767" endtime="20201030 18:39:58.788"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:58.790" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:58.789" endtime="20201030 18:39:58.790"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:58.791" endtime="20201030 18:39:58.793"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:58.765" endtime="20201030 18:39:58.793"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:58.762" endtime="20201030 18:39:58.794"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:58.800" endtime="20201030 18:39:59.087"></status>
</kw>
<msg timestamp="20201030 18:39:59.090" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020337694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020437514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:58.799" endtime="20201030 18:39:59.090"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:59.098" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020337694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020437514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:59.091" endtime="20201030 18:39:59.099"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:59.100" endtime="20201030 18:39:59.101"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:58.796" endtime="20201030 18:39:59.102"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:58.794" endtime="20201030 18:39:59.102"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:39:59.106" level="INFO">${RESULT} = [{'diff': 9.982000000000046e-05}, {'diff': 9.99999999999994e-05}, {'diff': 0.0001003480000000001}, {'diff': 0.00010015299999999866}, {'diff': 0.00010062500000000002}, {'diff': 0.00010063800000000012},...</msg>
<status status="PASS" starttime="20201030 18:39:59.103" endtime="20201030 18:39:59.107"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:39:59.111" level="INFO">${ACCURACY} = {'diff': [9.982000000000046e-05, 9.99999999999994e-05, 0.0001003480000000001, 0.00010015299999999866, 0.00010062500000000002, 0.00010063800000000012, 0.000100415999999999, 0.00010033299999999759, 9.99...</msg>
<status status="PASS" starttime="20201030 18:39:59.107" endtime="20201030 18:39:59.111"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:39:59.115" level="INFO">NAME: accuracy-TIMER_SLEEP-88-philip</msg>
<status status="PASS" starttime="20201030 18:39:59.114" endtime="20201030 18:39:59.116"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:39:59.118" level="INFO">VALUE: [9.982000000000046e-05, 9.99999999999994e-05, 0.0001003480000000001, 0.00010015299999999866, 0.00010062500000000002, 0.00010063800000000012, 0.000100415999999999, 0.00010033299999999759, 9.994399999999765e-05, 9.970800000000044e-05, 0.00010043100000000152, 0.00010051399999999946, 9.997200000000026e-05, 9.980599999999742e-05, 0.00010011199999999942, 9.991600000000198e-05, 0.00010030499999999845, 0.00010024999999999964, 0.00010029199999999835, 9.987499999999927e-05, 0.00010012500000000299, 0.00010001399999999896, 0.00010009700000000038, 0.00010057000000000121, 9.994500000000059e-05, 9.992999999999808e-05, 9.966600000000173e-05, 0.00010034699999999716, 0.00010020800000000094, 9.981900000000099e-05, 9.988899999999884e-05, 0.00010020900000000041, 0.0001002220000000005, 0.00010038899999999934, 0.00010062500000000002, 0.00010006899999999777, 9.9722e-05, 0.00010001399999999896, 9.981900000000099e-05, 0.00010011099999999995, 0.00010012499999999952, 9.983300000000056e-05, 9.987500000000274e-05, 0.00010044500000000109, 0.00010027799999999878, 0.00010018100000000127, 0.00010034700000000063, 0.00010019400000000137, 9.987499999999927e-05, 9.977799999999828e-05]</msg>
<status status="PASS" starttime="20201030 18:39:59.116" endtime="20201030 18:39:59.119"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:59.112" endtime="20201030 18:39:59.119"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:39:59.123" endtime="20201030 18:39:59.143"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:59.122" endtime="20201030 18:39:59.143"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:59.120" endtime="20201030 18:39:59.144"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:58.761" endtime="20201030 18:39:59.144"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:58.760" endtime="20201030 18:39:59.144"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:59.153" endtime="20201030 18:39:59.174"></status>
</kw>
<msg timestamp="20201030 18:39:59.175" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:59.152" endtime="20201030 18:39:59.175"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:59.177" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:59.176" endtime="20201030 18:39:59.178"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:59.178" endtime="20201030 18:39:59.180"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:59.149" endtime="20201030 18:39:59.181"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:59.147" endtime="20201030 18:39:59.181"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:59.188" endtime="20201030 18:39:59.473"></status>
</kw>
<msg timestamp="20201030 18:39:59.476" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021704222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02180575, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:39:59.186" endtime="20201030 18:39:59.476"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:59.484" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021704222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02180575, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:39:59.477" endtime="20201030 18:39:59.485"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:59.485" endtime="20201030 18:39:59.487"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:59.183" endtime="20201030 18:39:59.488"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:59.182" endtime="20201030 18:39:59.488"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:39:59.492" level="INFO">${RESULT} = [{'diff': 0.00010152800000000003}, {'diff': 0.00010120800000000194}, {'diff': 0.00010077800000000275}, {'diff': 0.0001008610000000007}, {'diff': 0.0001006939999999984}, {'diff': 0.00010079100000000285...</msg>
<status status="PASS" starttime="20201030 18:39:59.489" endtime="20201030 18:39:59.492"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:39:59.496" level="INFO">${ACCURACY} = {'diff': [0.00010152800000000003, 0.00010120800000000194, 0.00010077800000000275, 0.0001008610000000007, 0.0001006939999999984, 0.00010079100000000285, 0.00010165300000000016, 0.00010111100000000095, ...</msg>
<status status="PASS" starttime="20201030 18:39:59.493" endtime="20201030 18:39:59.497"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:39:59.501" level="INFO">NAME: accuracy-TIMER_SLEEP-89-philip</msg>
<status status="PASS" starttime="20201030 18:39:59.500" endtime="20201030 18:39:59.501"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:39:59.503" level="INFO">VALUE: [0.00010152800000000003, 0.00010120800000000194, 0.00010077800000000275, 0.0001008610000000007, 0.0001006939999999984, 0.00010079100000000285, 0.00010165300000000016, 0.00010111100000000095, 0.0001015419999999996, 0.00010088899999999984, 0.00010101300000000049, 0.00010129199999999935, 0.00010101399999999996, 0.00010111100000000095, 0.00010097200000000126, 0.00010120800000000194, 0.00010137500000000077, 0.00010070799999999797, 0.00010166699999999973, 0.00010129199999999935, 0.00010116699999999923, 0.00010143099999999905, 0.00010115299999999966, 0.00010091700000000245, 0.00010165300000000016, 0.00010069400000000187, 0.00010154100000000013, 0.0001006939999999984, 0.00010111100000000095, 0.00010077799999999928, 0.00010140299999999991, 0.00010091700000000245, 0.00010105600000000214, 0.00010163900000000059, 0.0001013060000000024, 0.00010156999999999874, 0.0001012359999999976, 0.00010092999999999908, 0.00010129099999999988, 0.00010111100000000095, 0.00010112500000000052, 0.00010156900000000274, 0.00010158399999999831, 0.00010147200000000176, 0.00010093100000000202, 0.00010158400000000178, 0.0001008610000000007, 0.00010090199999999994, 0.00010073600000000058, 0.00010129099999999988]</msg>
<status status="PASS" starttime="20201030 18:39:59.502" endtime="20201030 18:39:59.505"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:59.497" endtime="20201030 18:39:59.506"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:39:59.510" endtime="20201030 18:39:59.529"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:59.508" endtime="20201030 18:39:59.530"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:59.507" endtime="20201030 18:39:59.530"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:59.145" endtime="20201030 18:39:59.530"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:59.144" endtime="20201030 18:39:59.531"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:59.540" endtime="20201030 18:39:59.559"></status>
</kw>
<msg timestamp="20201030 18:39:59.560" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:59.538" endtime="20201030 18:39:59.560"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:59.562" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:59.561" endtime="20201030 18:39:59.563"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:59.563" endtime="20201030 18:39:59.565"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:59.535" endtime="20201030 18:39:59.566"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:59.533" endtime="20201030 18:39:59.566"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:59.573" endtime="20201030 18:39:59.874"></status>
</kw>
<msg timestamp="20201030 18:39:59.877" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020549042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020650917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:59.571" endtime="20201030 18:39:59.877"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:59.885" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020549042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020650917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:59.878" endtime="20201030 18:39:59.886"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:59.887" endtime="20201030 18:39:59.888"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:59.569" endtime="20201030 18:39:59.889"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:59.567" endtime="20201030 18:39:59.889"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:39:59.893" level="INFO">${RESULT} = [{'diff': 0.00010187500000000127}, {'diff': 0.00010209800000000185}, {'diff': 0.00010258399999999931}, {'diff': 0.000101722000000002}, {'diff': 0.00010238900000000134}, {'diff': 0.00010222199999999904...</msg>
<status status="PASS" starttime="20201030 18:39:59.890" endtime="20201030 18:39:59.893"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:39:59.898" level="INFO">${ACCURACY} = {'diff': [0.00010187500000000127, 0.00010209800000000185, 0.00010258399999999931, 0.000101722000000002, 0.00010238900000000134, 0.00010222199999999904, 0.00010175000000000115, 0.00010230599999999992, ...</msg>
<status status="PASS" starttime="20201030 18:39:59.894" endtime="20201030 18:39:59.899"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:39:59.903" level="INFO">NAME: accuracy-TIMER_SLEEP-90-philip</msg>
<status status="PASS" starttime="20201030 18:39:59.902" endtime="20201030 18:39:59.903"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:39:59.906" level="INFO">VALUE: [0.00010187500000000127, 0.00010209800000000185, 0.00010258399999999931, 0.000101722000000002, 0.00010238900000000134, 0.00010222199999999904, 0.00010175000000000115, 0.00010230599999999992, 0.000101819999999999, 0.00010205599999999967, 0.00010245899999999919, 0.00010208399999999881, 0.00010212500000000152, 0.00010229100000000088, 0.00010223600000000208, 0.00010194399999999965, 0.00010222199999999904, 0.00010175000000000115, 0.00010177800000000028, 0.00010180599999999942, 0.00010259799999999888, 0.00010194499999999912, 0.00010243000000000058, 0.00010220800000000294, 0.00010256900000000027, 0.00010212499999999805, 0.00010174999999999768, 0.00010230599999999992, 0.0001022359999999986, 0.00010223600000000208, 0.00010270799999999997, 0.00010241700000000048, 0.00010240199999999797, 0.00010173600000000158, 0.00010259699999999941, 0.00010263900000000159, 0.00010194399999999965, 0.00010211099999999848, 0.00010233299999999959, 0.00010211099999999848, 0.00010234699999999916, 0.0001023619999999982, 0.00010266599999999779, 0.00010258299999999984, 0.00010206899999999977, 0.00010187500000000127, 0.0001025000000000019, 0.00010229200000000035, 0.00010195899999999869, 0.00010256999999999974]</msg>
<status status="PASS" starttime="20201030 18:39:59.904" endtime="20201030 18:39:59.906"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:59.899" endtime="20201030 18:39:59.907"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:39:59.911" endtime="20201030 18:39:59.930"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:59.909" endtime="20201030 18:39:59.931"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:59.908" endtime="20201030 18:39:59.931"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:59.531" endtime="20201030 18:39:59.931"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:59.531" endtime="20201030 18:39:59.932"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:59.941" endtime="20201030 18:39:59.960"></status>
</kw>
<msg timestamp="20201030 18:39:59.961" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:59.939" endtime="20201030 18:39:59.961"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:39:59.963" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:39:59.962" endtime="20201030 18:39:59.964"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:59.964" endtime="20201030 18:39:59.966"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:59.936" endtime="20201030 18:39:59.967"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:59.934" endtime="20201030 18:39:59.967"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:39:59.974" endtime="20201030 18:40:00.261"></status>
</kw>
<msg timestamp="20201030 18:40:00.264" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020480944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020584153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:39:59.972" endtime="20201030 18:40:00.265"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:40:00.273" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020480944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020584153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:40:00.265" endtime="20201030 18:40:00.273"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:40:00.274" endtime="20201030 18:40:00.276"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:59.970" endtime="20201030 18:40:00.276"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:59.968" endtime="20201030 18:40:00.277"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:40:00.281" level="INFO">${RESULT} = [{'diff': 0.00010320899999999994}, {'diff': 0.0001030000000000024}, {'diff': 0.00010286099999999923}, {'diff': 0.00010366700000000173}, {'diff': 0.00010263900000000159}, {'diff': 0.0001032910000000018...</msg>
<status status="PASS" starttime="20201030 18:40:00.278" endtime="20201030 18:40:00.281"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:40:00.285" level="INFO">${ACCURACY} = {'diff': [0.00010320899999999994, 0.0001030000000000024, 0.00010286099999999923, 0.00010366700000000173, 0.00010263900000000159, 0.00010329100000000188, 0.00010316599999999829, 0.00010327800000000179,...</msg>
<status status="PASS" starttime="20201030 18:40:00.282" endtime="20201030 18:40:00.285"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:40:00.290" level="INFO">NAME: accuracy-TIMER_SLEEP-91-philip</msg>
<status status="PASS" starttime="20201030 18:40:00.288" endtime="20201030 18:40:00.290"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:40:00.292" level="INFO">VALUE: [0.00010320899999999994, 0.0001030000000000024, 0.00010286099999999923, 0.00010366700000000173, 0.00010263900000000159, 0.00010329100000000188, 0.00010316599999999829, 0.00010327800000000179, 0.00010293100000000055, 0.0001027359999999991, 0.00010316700000000123, 0.00010287500000000227, 0.00010283300000000009, 0.00010302699999999859, 0.00010284699999999966, 0.00010320800000000047, 0.00010322200000000004, 0.00010355600000000117, 0.00010277800000000128, 0.00010322200000000004, 0.0001030139999999985, 0.00010276399999999825, 0.00010312499999999905, 0.0001028619999999987, 0.00010284699999999966, 0.0001032359999999996, 0.00010276400000000172, 0.0001028610000000027, 0.00010291699999999751, 0.00010311099999999948, 0.00010275000000000215, 0.00010309800000000285, 0.00010294400000000065, 0.00010309799999999938, 0.00010326399999999875, 0.00010361099999999998, 0.00010290299999999794, 0.0001030420000000011, 0.00010336099999999973, 0.00010366700000000173, 0.00010330600000000092, 0.00010298599999999936, 0.00010281900000000052, 0.00010326399999999875, 0.0001030550000000012, 0.00010361099999999998, 0.00010333300000000059, 0.00010288899999999837, 0.00010312499999999905, 0.0001032359999999996]</msg>
<status status="PASS" starttime="20201030 18:40:00.291" endtime="20201030 18:40:00.293"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:00.286" endtime="20201030 18:40:00.293"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:40:00.297" endtime="20201030 18:40:00.317"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:00.296" endtime="20201030 18:40:00.318"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:00.294" endtime="20201030 18:40:00.318"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:59.933" endtime="20201030 18:40:00.318"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:59.932" endtime="20201030 18:40:00.318"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:40:00.327" endtime="20201030 18:40:00.351"></status>
</kw>
<msg timestamp="20201030 18:40:00.351" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:40:00.326" endtime="20201030 18:40:00.351"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:40:00.354" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:40:00.352" endtime="20201030 18:40:00.354"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:40:00.355" endtime="20201030 18:40:00.357"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:00.323" endtime="20201030 18:40:00.357"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:00.321" endtime="20201030 18:40:00.358"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:40:00.364" endtime="20201030 18:40:00.651"></status>
</kw>
<msg timestamp="20201030 18:40:00.654" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023681861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02378625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:40:00.363" endtime="20201030 18:40:00.655"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:40:00.662" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023681861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02378625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:40:00.655" endtime="20201030 18:40:00.663"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:40:00.664" endtime="20201030 18:40:00.665"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:00.360" endtime="20201030 18:40:00.666"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:00.358" endtime="20201030 18:40:00.666"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:40:00.671" level="INFO">${RESULT} = [{'diff': 0.00010438899999999987}, {'diff': 0.00010427799999999932}, {'diff': 0.00010404199999999864}, {'diff': 0.00010412500000000005}, {'diff': 0.00010465299999999969}, {'diff': 0.000103930999999998...</msg>
<status status="PASS" starttime="20201030 18:40:00.667" endtime="20201030 18:40:00.671"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:40:00.675" level="INFO">${ACCURACY} = {'diff': [0.00010438899999999987, 0.00010427799999999932, 0.00010404199999999864, 0.00010412500000000005, 0.00010465299999999969, 0.00010393099999999808, 0.00010412500000000005, 0.00010395800000000122...</msg>
<status status="PASS" starttime="20201030 18:40:00.672" endtime="20201030 18:40:00.675"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:40:00.679" level="INFO">NAME: accuracy-TIMER_SLEEP-92-philip</msg>
<status status="PASS" starttime="20201030 18:40:00.678" endtime="20201030 18:40:00.680"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:40:00.682" level="INFO">VALUE: [0.00010438899999999987, 0.00010427799999999932, 0.00010404199999999864, 0.00010412500000000005, 0.00010465299999999969, 0.00010393099999999808, 0.00010412500000000005, 0.00010395800000000122, 0.00010394399999999818, 0.00010413899999999962, 0.00010394399999999818, 0.00010384700000000066, 0.00010456999999999828, 0.00010376399999999925, 0.0001038749999999998, 0.00010409700000000091, 0.0001043880000000004, 0.00010466599999999979, 0.00010368099999999783, 0.0001040139999999995, 0.00010391699999999851, 0.00010394500000000112, 0.00010397200000000079, 0.00010379199999999839, 0.00010458400000000131, 0.000104514, 0.00010374999999999968, 0.00010465200000000022, 0.0001037079999999975, 0.00010447200000000129, 0.00010394499999999765, 0.0001042360000000006, 0.00010411099999999701, 0.00010436100000000073, 0.00010383400000000056, 0.00010463900000000012, 0.00010429099999999941, 0.0001045689999999988, 0.00010374999999999968, 0.00010463900000000012, 0.0001040139999999995, 0.00010386100000000023, 0.00010362499999999955, 0.00010393100000000155, 0.00010409700000000091, 0.00010391700000000198, 0.00010440199999999997, 0.00010465299999999969, 0.00010436100000000073, 0.00010377799999999882]</msg>
<status status="PASS" starttime="20201030 18:40:00.680" endtime="20201030 18:40:00.736"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:00.676" endtime="20201030 18:40:00.737"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:40:00.743" endtime="20201030 18:40:00.762"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:00.741" endtime="20201030 18:40:00.763"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:00.738" endtime="20201030 18:40:00.763"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:00.319" endtime="20201030 18:40:00.763"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:00.319" endtime="20201030 18:40:00.763"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:40:00.772" endtime="20201030 18:40:00.790"></status>
</kw>
<msg timestamp="20201030 18:40:00.791" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:40:00.770" endtime="20201030 18:40:00.791"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:40:00.793" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:40:00.792" endtime="20201030 18:40:00.794"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:40:00.794" endtime="20201030 18:40:00.796"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:00.768" endtime="20201030 18:40:00.797"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:00.766" endtime="20201030 18:40:00.797"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:40:00.803" endtime="20201030 18:40:01.090"></status>
</kw>
<msg timestamp="20201030 18:40:01.093" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019584042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019688903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:40:00.802" endtime="20201030 18:40:01.093"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:40:01.101" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019584042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019688903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:40:01.094" endtime="20201030 18:40:01.101"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:40:01.102" endtime="20201030 18:40:01.103"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:00.799" endtime="20201030 18:40:01.104"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:00.798" endtime="20201030 18:40:01.104"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:40:01.109" level="INFO">${RESULT} = [{'diff': 0.00010486100000000123}, {'diff': 0.00010562500000000155}, {'diff': 0.0001053750000000013}, {'diff': 0.0001047499999999972}, {'diff': 0.00010516599999999682}, {'diff': 0.00010511100000000148...</msg>
<status status="PASS" starttime="20201030 18:40:01.105" endtime="20201030 18:40:01.109"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:40:01.113" level="INFO">${ACCURACY} = {'diff': [0.00010486100000000123, 0.00010562500000000155, 0.0001053750000000013, 0.0001047499999999972, 0.00010516599999999682, 0.00010511100000000148, 0.0001050689999999993, 0.00010530499999999998, 0...</msg>
<status status="PASS" starttime="20201030 18:40:01.110" endtime="20201030 18:40:01.113"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:40:01.118" level="INFO">NAME: accuracy-TIMER_SLEEP-93-philip</msg>
<status status="PASS" starttime="20201030 18:40:01.116" endtime="20201030 18:40:01.118"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:40:01.120" level="INFO">VALUE: [0.00010486100000000123, 0.00010562500000000155, 0.0001053750000000013, 0.0001047499999999972, 0.00010516599999999682, 0.00010511100000000148, 0.0001050689999999993, 0.00010530499999999998, 0.00010511100000000148, 0.00010476400000000025, 0.00010566600000000079, 0.00010534699999999869, 0.00010473599999999764, 0.00010481900000000252, 0.00010512500000000105, 0.00010531899999999955, 0.00010470800000000197, 0.00010536099999999826, 0.00010562500000000155, 0.00010504199999999964, 0.00010530599999999946, 0.00010505600000000268, 0.00010540200000000097, 0.00010499999999999746, 0.0001050140000000005, 0.00010558300000000284, 0.00010511100000000148, 0.0001050140000000005, 0.0001053200000000025, 0.00010540300000000044, 0.00010511100000000148, 0.00010466700000000273, 0.00010480599999999896, 0.0001046949999999984, 0.0001050140000000005, 0.00010498600000000136, 0.00010476399999999678, 0.000105514000000001, 0.00010470800000000197, 0.00010469399999999893, 0.00010509699999999844, 0.00010558399999999885, 0.00010498599999999789, 0.00010475000000000068, 0.0001055689999999998, 0.00010483299999999862, 0.00010498599999999789, 0.00010500000000000093, 0.00010565300000000069, 0.00010512500000000105]</msg>
<status status="PASS" starttime="20201030 18:40:01.119" endtime="20201030 18:40:01.121"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:01.114" endtime="20201030 18:40:01.121"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:40:01.125" endtime="20201030 18:40:01.145"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:01.124" endtime="20201030 18:40:01.145"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:01.122" endtime="20201030 18:40:01.145"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:00.764" endtime="20201030 18:40:01.146"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:00.764" endtime="20201030 18:40:01.146"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:40:01.155" endtime="20201030 18:40:01.174"></status>
</kw>
<msg timestamp="20201030 18:40:01.175" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:40:01.153" endtime="20201030 18:40:01.175"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:40:01.178" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:40:01.176" endtime="20201030 18:40:01.179"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:40:01.181" endtime="20201030 18:40:01.184"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:01.151" endtime="20201030 18:40:01.185"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:01.148" endtime="20201030 18:40:01.186"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:40:01.200" endtime="20201030 18:40:01.492"></status>
</kw>
<msg timestamp="20201030 18:40:01.495" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020600986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020706972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:40:01.196" endtime="20201030 18:40:01.496"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:40:01.503" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020600986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020706972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:40:01.497" endtime="20201030 18:40:01.504"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:40:01.505" endtime="20201030 18:40:01.506"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:01.191" endtime="20201030 18:40:01.507"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:01.187" endtime="20201030 18:40:01.507"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:40:01.511" level="INFO">${RESULT} = [{'diff': 0.00010598599999999889}, {'diff': 0.00010629100000000141}, {'diff': 0.00010663900000000212}, {'diff': 0.00010593100000000008}, {'diff': 0.00010563900000000112}, {'diff': 0.000106055000000000...</msg>
<status status="PASS" starttime="20201030 18:40:01.508" endtime="20201030 18:40:01.511"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:40:01.515" level="INFO">${ACCURACY} = {'diff': [0.00010598599999999889, 0.00010629100000000141, 0.00010663900000000212, 0.00010593100000000008, 0.00010563900000000112, 0.00010605500000000073, 0.00010641700000000101, 0.00010586199999999824...</msg>
<status status="PASS" starttime="20201030 18:40:01.512" endtime="20201030 18:40:01.515"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:40:01.520" level="INFO">NAME: accuracy-TIMER_SLEEP-94-philip</msg>
<status status="PASS" starttime="20201030 18:40:01.519" endtime="20201030 18:40:01.520"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:40:01.523" level="INFO">VALUE: [0.00010598599999999889, 0.00010629100000000141, 0.00010663900000000212, 0.00010593100000000008, 0.00010563900000000112, 0.00010605500000000073, 0.00010641700000000101, 0.00010586199999999824, 0.0001057079999999995, 0.00010569399999999993, 0.0001065829999999969, 0.0001061949999999999, 0.0001062499999999987, 0.00010663899999999865, 0.00010652800000000157, 0.00010570899999999897, 0.00010618100000000033, 0.00010599999999999846, 0.00010651300000000252, 0.00010665300000000169, 0.00010638900000000187, 0.0001067080000000005, 0.00010634799999999917, 0.0001062499999999987, 0.00010629099999999794, 0.00010623599999999914, 0.00010623599999999914, 0.00010608299999999987, 0.00010615299999999772, 0.00010622200000000304, 0.00010569399999999993, 0.00010630500000000098, 0.00010662500000000255, 0.00010604099999999769, 0.00010611100000000248, 0.00010630600000000046, 0.00010616599999999782, 0.00010613899999999815, 0.00010601399999999803, 0.00010581900000000005, 0.0001057499999999982, 0.00010575000000000168, 0.00010634699999999969, 0.00010580599999999996, 0.0001058889999999979, 0.00010611099999999901, 0.00010594400000000018, 0.00010580499999999701, 0.0001065690000000008, 0.00010651399999999853]</msg>
<status status="PASS" starttime="20201030 18:40:01.521" endtime="20201030 18:40:01.529"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:01.516" endtime="20201030 18:40:01.530"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:40:01.534" endtime="20201030 18:40:01.554"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:01.532" endtime="20201030 18:40:01.554"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:01.531" endtime="20201030 18:40:01.555"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:01.147" endtime="20201030 18:40:01.555"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:01.146" endtime="20201030 18:40:01.555"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:40:01.568" endtime="20201030 18:40:01.588"></status>
</kw>
<msg timestamp="20201030 18:40:01.589" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:40:01.565" endtime="20201030 18:40:01.589"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:40:01.593" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:40:01.591" endtime="20201030 18:40:01.593"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:40:01.594" endtime="20201030 18:40:01.597"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:01.562" endtime="20201030 18:40:01.598"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:01.559" endtime="20201030 18:40:01.598"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:40:01.607" endtime="20201030 18:40:01.894"></status>
</kw>
<msg timestamp="20201030 18:40:01.897" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024562583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024669583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:40:01.605" endtime="20201030 18:40:01.897"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:40:01.905" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024562583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024669583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:40:01.898" endtime="20201030 18:40:01.905"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:40:01.906" endtime="20201030 18:40:01.908"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:01.601" endtime="20201030 18:40:01.908"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:01.599" endtime="20201030 18:40:01.909"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:40:01.912" level="INFO">${RESULT} = [{'diff': 0.00010699999999999946}, {'diff': 0.00010757000000000128}, {'diff': 0.00010699999999999946}, {'diff': 0.00010699999999999946}, {'diff': 0.00010712499999999958}, {'diff': 0.000107458000000001...</msg>
<status status="PASS" starttime="20201030 18:40:01.909" endtime="20201030 18:40:01.913"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:40:01.917" level="INFO">${ACCURACY} = {'diff': [0.00010699999999999946, 0.00010757000000000128, 0.00010699999999999946, 0.00010699999999999946, 0.00010712499999999958, 0.00010745800000000125, 0.00010741700000000201, 0.00010676399999999878...</msg>
<status status="PASS" starttime="20201030 18:40:01.913" endtime="20201030 18:40:01.918"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:40:01.922" level="INFO">NAME: accuracy-TIMER_SLEEP-95-philip</msg>
<status status="PASS" starttime="20201030 18:40:01.921" endtime="20201030 18:40:01.922"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:40:01.924" level="INFO">VALUE: [0.00010699999999999946, 0.00010757000000000128, 0.00010699999999999946, 0.00010699999999999946, 0.00010712499999999958, 0.00010745800000000125, 0.00010741700000000201, 0.00010676399999999878, 0.00010693100000000108, 0.00010676400000000225, 0.00010726399999999928, 0.00010676399999999878, 0.00010754100000000266, 0.00010693000000000161, 0.00010695800000000075, 0.00010719400000000143, 0.00010745800000000125, 0.00010675000000000268, 0.00010676400000000225, 0.00010673599999999964, 0.00010697200000000032, 0.0001067629999999993, 0.00010765300000000269, 0.00010730499999999851, 0.00010666600000000179, 0.00010734699999999722, 0.00010718000000000186, 0.00010744399999999821, 0.00010695800000000075, 0.00010663900000000212, 0.0001066950000000004, 0.00010681900000000105, 0.00010737499999999983, 0.00010698599999999989, 0.0001067499999999992, 0.0001075279999999991, 0.00010711100000000001, 0.00010740300000000244, 0.0001070279999999986, 0.00010672299999999954, 0.00010752800000000257, 0.00010741599999999907, 0.00010741599999999907, 0.0001070560000000012, 0.00010737499999999983, 0.00010741599999999907, 0.00010722200000000057, 0.00010759700000000094, 0.00010693100000000108, 0.00010758300000000137]</msg>
<status status="PASS" starttime="20201030 18:40:01.923" endtime="20201030 18:40:01.925"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:01.918" endtime="20201030 18:40:01.926"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:40:01.929" endtime="20201030 18:40:01.949"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:01.928" endtime="20201030 18:40:01.949"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:01.927" endtime="20201030 18:40:01.950"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:01.557" endtime="20201030 18:40:01.950"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:01.556" endtime="20201030 18:40:01.950"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:40:01.959" endtime="20201030 18:40:01.978"></status>
</kw>
<msg timestamp="20201030 18:40:01.978" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:40:01.957" endtime="20201030 18:40:01.979"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:40:01.981" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:40:01.979" endtime="20201030 18:40:01.981"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:40:01.982" endtime="20201030 18:40:01.983"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:01.955" endtime="20201030 18:40:01.984"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:01.953" endtime="20201030 18:40:01.984"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:40:01.991" endtime="20201030 18:40:02.279"></status>
</kw>
<msg timestamp="20201030 18:40:02.282" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019770417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019879042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:40:01.989" endtime="20201030 18:40:02.282"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:40:02.290" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019770417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019879042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:40:02.283" endtime="20201030 18:40:02.291"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:40:02.291" endtime="20201030 18:40:02.293"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:01.987" endtime="20201030 18:40:02.294"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:01.985" endtime="20201030 18:40:02.294"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:40:02.298" level="INFO">${RESULT} = [{'diff': 0.00010862500000000108}, {'diff': 0.00010818100000000233}, {'diff': 0.00010805499999999926}, {'diff': 0.00010852699999999715}, {'diff': 0.00010780500000000248}, {'diff': 0.000107875000000000...</msg>
<status status="PASS" starttime="20201030 18:40:02.295" endtime="20201030 18:40:02.298"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:40:02.302" level="INFO">${ACCURACY} = {'diff': [0.00010862500000000108, 0.00010818100000000233, 0.00010805499999999926, 0.00010852699999999715, 0.00010780500000000248, 0.00010787500000000033, 0.00010836099999999779, 0.00010829199999999942...</msg>
<status status="PASS" starttime="20201030 18:40:02.299" endtime="20201030 18:40:02.302"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:40:02.306" level="INFO">NAME: accuracy-TIMER_SLEEP-96-philip</msg>
<status status="PASS" starttime="20201030 18:40:02.305" endtime="20201030 18:40:02.307"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:40:02.309" level="INFO">VALUE: [0.00010862500000000108, 0.00010818100000000233, 0.00010805499999999926, 0.00010852699999999715, 0.00010780500000000248, 0.00010787500000000033, 0.00010836099999999779, 0.00010829199999999942, 0.00010816699999999929, 0.0001077219999999976, 0.00010829199999999942, 0.00010842999999999964, 0.00010787500000000033, 0.00010863900000000065, 0.00010773600000000064, 0.00010773599999999717, 0.00010856899999999933, 0.00010779200000000239, 0.00010772200000000107, 0.00010865299999999675, 0.00010829199999999942, 0.00010829099999999994, 0.00010834700000000169, 0.00010792999999999914, 0.0001077219999999976, 0.00010780600000000196, 0.00010854199999999967, 0.00010866699999999979, 0.00010784800000000067, 0.00010800000000000046, 0.00010795800000000175, 0.00010836100000000126, 0.00010781899999999858, 0.00010804100000000316, 0.00010843099999999911, 0.00010841699999999954, 0.00010804199999999917, 0.0001080699999999983, 0.00010830599999999899, 0.00010787500000000033, 0.00010858300000000237, 0.00010812499999999711, 0.00010863900000000065, 0.00010797199999999785, 0.00010863900000000065, 0.00010811100000000101, 0.00010770900000000097, 0.00010791599999999957, 0.0001080560000000022, 0.00010781999999999806]</msg>
<status status="PASS" starttime="20201030 18:40:02.308" endtime="20201030 18:40:02.310"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:02.303" endtime="20201030 18:40:02.310"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:40:02.314" endtime="20201030 18:40:02.333"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:02.312" endtime="20201030 18:40:02.334"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:02.311" endtime="20201030 18:40:02.334"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:01.951" endtime="20201030 18:40:02.334"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:01.951" endtime="20201030 18:40:02.335"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:40:02.343" endtime="20201030 18:40:02.363"></status>
</kw>
<msg timestamp="20201030 18:40:02.363" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:40:02.342" endtime="20201030 18:40:02.363"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:40:02.366" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:40:02.364" endtime="20201030 18:40:02.366"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:40:02.367" endtime="20201030 18:40:02.368"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:02.339" endtime="20201030 18:40:02.369"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:02.337" endtime="20201030 18:40:02.369"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:40:02.376" endtime="20201030 18:40:02.662"></status>
</kw>
<msg timestamp="20201030 18:40:02.665" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020562417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020671556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:40:02.374" endtime="20201030 18:40:02.666"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:40:02.674" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020562417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020671556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:40:02.666" endtime="20201030 18:40:02.674"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:40:02.675" endtime="20201030 18:40:02.677"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:02.372" endtime="20201030 18:40:02.677"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:02.370" endtime="20201030 18:40:02.677"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:40:02.681" level="INFO">${RESULT} = [{'diff': 0.00010913900000000115}, {'diff': 0.00010965200000000175}, {'diff': 0.00010880500000000001}, {'diff': 0.00010894399999999971}, {'diff': 0.00010934699999999922}, {'diff': 0.000109305999999999...</msg>
<status status="PASS" starttime="20201030 18:40:02.678" endtime="20201030 18:40:02.682"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:40:02.685" level="INFO">${ACCURACY} = {'diff': [0.00010913900000000115, 0.00010965200000000175, 0.00010880500000000001, 0.00010894399999999971, 0.00010934699999999922, 0.00010930599999999999, 0.00010936099999999879, 0.00010941699999999707...</msg>
<status status="PASS" starttime="20201030 18:40:02.682" endtime="20201030 18:40:02.686"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:40:02.690" level="INFO">NAME: accuracy-TIMER_SLEEP-97-philip</msg>
<status status="PASS" starttime="20201030 18:40:02.689" endtime="20201030 18:40:02.690"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:40:02.693" level="INFO">VALUE: [0.00010913900000000115, 0.00010965200000000175, 0.00010880500000000001, 0.00010894399999999971, 0.00010934699999999922, 0.00010930599999999999, 0.00010936099999999879, 0.00010941699999999707, 0.00010952799999999763, 0.00010916700000000029, 0.00010945799999999978, 0.00010867999999999989, 0.00010883300000000262, 0.00010922200000000257, 0.0001090699999999993, 0.00010945799999999978, 0.00010893099999999961, 0.00010941700000000054, 0.00010924999999999824, 0.00010869399999999946, 0.00010900000000000146, 0.00010884699999999872, 0.00010936100000000226, 0.00010919399999999996, 0.0001095699999999998, 0.0001095280000000011, 0.00010891700000000004, 0.00010941700000000054, 0.00010958399999999938, 0.00010877800000000035, 0.00010869399999999946, 0.00010963899999999818, 0.00010893000000000014, 0.00010891700000000004, 0.00010893099999999961, 0.00010962499999999861, 0.0001088340000000021, 0.00010952799999999763, 0.0001095829999999999, 0.00010929100000000094, 0.00010894399999999971, 0.00010909699999999897, 0.00010898599999999842, 0.00010920799999999953, 0.00010881999999999906, 0.00010966700000000079, 0.00010926299999999833, 0.0001094029999999975, 0.0001095829999999999, 0.00010899999999999799]</msg>
<status status="PASS" starttime="20201030 18:40:02.691" endtime="20201030 18:40:02.694"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:02.686" endtime="20201030 18:40:02.694"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:40:02.698" endtime="20201030 18:40:02.718"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:02.697" endtime="20201030 18:40:02.718"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:02.695" endtime="20201030 18:40:02.719"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:02.335" endtime="20201030 18:40:02.719"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:02.335" endtime="20201030 18:40:02.719"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:40:02.728" endtime="20201030 18:40:02.748"></status>
</kw>
<msg timestamp="20201030 18:40:02.748" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:40:02.726" endtime="20201030 18:40:02.749"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:40:02.751" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:40:02.749" endtime="20201030 18:40:02.751"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:40:02.752" endtime="20201030 18:40:02.754"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:02.724" endtime="20201030 18:40:02.754"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:02.722" endtime="20201030 18:40:02.754"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:40:02.761" endtime="20201030 18:40:03.047"></status>
</kw>
<msg timestamp="20201030 18:40:03.050" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020118569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020228889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:40:02.759" endtime="20201030 18:40:03.051"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:40:03.058" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020118569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020228889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:40:03.051" endtime="20201030 18:40:03.059"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:40:03.060" endtime="20201030 18:40:03.063"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:02.757" endtime="20201030 18:40:03.063"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:02.755" endtime="20201030 18:40:03.064"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:40:03.068" level="INFO">${RESULT} = [{'diff': 0.00011032000000000056}, {'diff': 0.00011033400000000013}, {'diff': 0.00010998599999999942}, {'diff': 0.00011065199999999928}, {'diff': 0.00010987499999999886}, {'diff': 0.000109944000000000...</msg>
<status status="PASS" starttime="20201030 18:40:03.064" endtime="20201030 18:40:03.068"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:40:03.073" level="INFO">${ACCURACY} = {'diff': [0.00011032000000000056, 0.00011033400000000013, 0.00010998599999999942, 0.00011065199999999928, 0.00010987499999999886, 0.00010994400000000071, 0.00011036099999999979, 0.00011011099999999954...</msg>
<status status="PASS" starttime="20201030 18:40:03.069" endtime="20201030 18:40:03.073"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:40:03.078" level="INFO">NAME: accuracy-TIMER_SLEEP-98-philip</msg>
<status status="PASS" starttime="20201030 18:40:03.077" endtime="20201030 18:40:03.078"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:40:03.080" level="INFO">VALUE: [0.00011032000000000056, 0.00011033400000000013, 0.00010998599999999942, 0.00011065199999999928, 0.00010987499999999886, 0.00010994400000000071, 0.00011036099999999979, 0.00011011099999999954, 0.00011045800000000078, 0.00011011100000000301, 0.00010974999999999874, 0.00011013899999999868, 0.00011015299999999825, 0.00011063899999999918, 0.00011063799999999971, 0.0001102220000000001, 0.00011029099999999847, 0.00011056900000000133, 0.0001097769999999984, 0.0001102220000000001, 0.00011030600000000099, 0.00011009799999999945, 0.00011062499999999961, 0.00011024999999999924, 0.00010979099999999797, 0.00010987499999999886, 0.00010988899999999843, 0.0001100700000000003, 0.0001104029999999985, 0.00011016699999999782, 0.00010998699999999889, 0.00011012499999999911, 0.00011044400000000121, 0.00011025000000000271, 0.00011034700000000022, 0.00011056999999999734, 0.00010987500000000233, 0.00011019500000000043, 0.00011030599999999752, 0.00011002799999999813, 0.00011016700000000129, 0.00010988800000000243, 0.00010979100000000144, 0.00010970800000000003, 0.00011034700000000022, 0.00011030500000000151, 0.00011055600000000124, 0.00011029200000000142, 0.00011012500000000258, 0.0001105700000000008]</msg>
<status status="PASS" starttime="20201030 18:40:03.079" endtime="20201030 18:40:03.081"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:03.074" endtime="20201030 18:40:03.081"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:40:03.085" endtime="20201030 18:40:03.105"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:03.084" endtime="20201030 18:40:03.105"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:03.082" endtime="20201030 18:40:03.106"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:02.720" endtime="20201030 18:40:03.106"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:02.719" endtime="20201030 18:40:03.106"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:40:03.115" endtime="20201030 18:40:03.136"></status>
</kw>
<msg timestamp="20201030 18:40:03.136" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:40:03.113" endtime="20201030 18:40:03.137"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:40:03.139" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:40:03.137" endtime="20201030 18:40:03.139"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:40:03.140" endtime="20201030 18:40:03.142"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:03.111" endtime="20201030 18:40:03.142"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:03.108" endtime="20201030 18:40:03.143"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:40:03.149" endtime="20201030 18:40:03.437"></status>
</kw>
<msg timestamp="20201030 18:40:03.440" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020649292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020760944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:40:03.147" endtime="20201030 18:40:03.440"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:40:03.448" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020649292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020760944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:40:03.441" endtime="20201030 18:40:03.448"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:40:03.449" endtime="20201030 18:40:03.450"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:03.145" endtime="20201030 18:40:03.451"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:03.143" endtime="20201030 18:40:03.451"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:40:03.455" level="INFO">${RESULT} = [{'diff': 0.00011165200000000028}, {'diff': 0.0001115700000000018}, {'diff': 0.00011130599999999852}, {'diff': 0.0001114159999999996}, {'diff': 0.00011111100000000054}, {'diff': 0.00011141600000000307...</msg>
<status status="PASS" starttime="20201030 18:40:03.452" endtime="20201030 18:40:03.456"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:40:03.459" level="INFO">${ACCURACY} = {'diff': [0.00011165200000000028, 0.0001115700000000018, 0.00011130599999999852, 0.0001114159999999996, 0.00011111100000000054, 0.00011141600000000307, 0.0001115419999999992, 0.00011129200000000242, 0...</msg>
<status status="PASS" starttime="20201030 18:40:03.456" endtime="20201030 18:40:03.460"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:40:03.465" level="INFO">NAME: accuracy-TIMER_SLEEP-99-philip</msg>
<status status="PASS" starttime="20201030 18:40:03.464" endtime="20201030 18:40:03.465"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:40:03.467" level="INFO">VALUE: [0.00011165200000000028, 0.0001115700000000018, 0.00011130599999999852, 0.0001114159999999996, 0.00011111100000000054, 0.00011141600000000307, 0.0001115419999999992, 0.00011129200000000242, 0.00011112500000000011, 0.00011111100000000054, 0.00011074999999999974, 0.00011163900000000018, 0.0001113619999999968, 0.00011063799999999971, 0.00011084700000000072, 0.00011166699999999932, 0.00011136100000000079, 0.0001115830000000019, 0.00011068099999999789, 0.00011156999999999834, 0.00011093100000000161, 0.0001112229999999971, 0.00011129099999999947, 0.00011092999999999867, 0.00011087499999999986, 0.00011111099999999707, 0.00011073600000000017, 0.00011155599999999877, 0.00011111100000000054, 0.00011088899999999943, 0.00011130599999999852, 0.00011115299999999925, 0.00011163900000000018, 0.00011161100000000104, 0.00011130500000000251, 0.00011123600000000067, 0.00011063900000000265, 0.00011111100000000054, 0.00011095900000000075, 0.0001113480000000007, 0.00011098699999999989, 0.00011134700000000122, 0.00011125000000000024, 0.00011117999999999892, 0.00011097200000000085, 0.0001110419999999987, 0.00011119500000000143, 0.00011074999999999974, 0.00011075000000000321, 0.00011127799999999938]</msg>
<status status="PASS" starttime="20201030 18:40:03.466" endtime="20201030 18:40:03.468"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:03.460" endtime="20201030 18:40:03.469"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:40:03.472" endtime="20201030 18:40:03.492"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:03.471" endtime="20201030 18:40:03.493"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:03.470" endtime="20201030 18:40:03.493"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:03.107" endtime="20201030 18:40:03.493"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:03.106" endtime="20201030 18:40:03.493"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:40:03.502" endtime="20201030 18:40:03.522"></status>
</kw>
<msg timestamp="20201030 18:40:03.522" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:40:03.500" endtime="20201030 18:40:03.523"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:40:03.525" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:40:03.523" endtime="20201030 18:40:03.525"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:40:03.526" endtime="20201030 18:40:03.528"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:03.498" endtime="20201030 18:40:03.528"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:03.496" endtime="20201030 18:40:03.529"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:40:03.535" endtime="20201030 18:40:03.821"></status>
</kw>
<msg timestamp="20201030 18:40:03.824" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020724542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02083675, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:40:03.533" endtime="20201030 18:40:03.824"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:40:03.832" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020724542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02083675, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:40:03.825" endtime="20201030 18:40:03.832"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:40:03.833" endtime="20201030 18:40:03.835"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:03.531" endtime="20201030 18:40:03.835"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:03.529" endtime="20201030 18:40:03.836"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:40:03.840" level="INFO">${RESULT} = [{'diff': 0.00011220800000000253}, {'diff': 0.00011198600000000142}, {'diff': 0.00011258299999999943}, {'diff': 0.00011230500000000004}, {'diff': 0.00011169499999999846}, {'diff': 0.000112250000000001...</msg>
<status status="PASS" starttime="20201030 18:40:03.837" endtime="20201030 18:40:03.840"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:40:03.844" level="INFO">${ACCURACY} = {'diff': [0.00011220800000000253, 0.00011198600000000142, 0.00011258299999999943, 0.00011230500000000004, 0.00011169499999999846, 0.00011225000000000124, 0.00011176400000000031, 0.00011263900000000118...</msg>
<status status="PASS" starttime="20201030 18:40:03.841" endtime="20201030 18:40:03.844"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:40:03.848" level="INFO">NAME: accuracy-TIMER_SLEEP-100-philip</msg>
<status status="PASS" starttime="20201030 18:40:03.847" endtime="20201030 18:40:03.849"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:40:03.852" level="INFO">VALUE: [0.00011220800000000253, 0.00011198600000000142, 0.00011258299999999943, 0.00011230500000000004, 0.00011169499999999846, 0.00011225000000000124, 0.00011176400000000031, 0.00011263900000000118, 0.00011256899999999986, 0.00011169400000000246, 0.00011262499999999814, 0.00011234700000000222, 0.00011168099999999889, 0.00011229199999999995, 0.00011258299999999943, 0.00011212500000000111, 0.0001120969999999985, 0.00011262500000000161, 0.00011209700000000197, 0.00011247199999999888, 0.00011255599999999977, 0.00011227800000000038, 0.00011166699999999932, 0.00011190200000000053, 0.00011262500000000161, 0.00011216600000000035, 0.00011188899999999696, 0.0001123480000000017, 0.00011256899999999986, 0.00011218099999999939, 0.00011211100000000154, 0.00011265300000000075, 0.00011241700000000007, 0.00011177799999999988, 0.0001124160000000006, 0.00011170799999999856, 0.0001124030000000005, 0.00011251400000000106, 0.00011169500000000193, 0.00011238900000000093, 0.00011194499999999871, 0.00011188899999999696, 0.00011180499999999954, 0.00011237500000000136, 0.00011262500000000161, 0.00011170800000000203, 0.00011263900000000118, 0.00011205600000000274, 0.00011234699999999875, 0.00011183399999999816]</msg>
<status status="PASS" starttime="20201030 18:40:03.849" endtime="20201030 18:40:03.852"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:03.845" endtime="20201030 18:40:03.853"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:40:03.857" endtime="20201030 18:40:03.876"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:03.855" endtime="20201030 18:40:03.877"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:03.854" endtime="20201030 18:40:03.877"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:03.494" endtime="20201030 18:40:03.877"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:03.494" endtime="20201030 18:40:03.878"></status>
</kw>
<status status="PASS" starttime="20201030 18:39:25.019" endtime="20201030 18:40:03.878"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:40:03.882" endtime="20201030 18:40:03.901"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:03.880" endtime="20201030 18:40:03.902"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:03.879" endtime="20201030 18:40:03.902"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
</tags>
<status status="PASS" starttime="20201030 18:39:21.922" endtime="20201030 18:40:03.902" critical="yes"></status>
</test>
<status status="PASS" starttime="20201030 18:38:32.583" endtime="20201030 18:40:03.906"></status>
</suite>
<suite id="s1-s4" name="Sleep Jitter" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/03__sleep_jitter.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 18:40:03.961" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 18:40:03.969" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 18:40:05.066" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 18:40:03.959" endtime="20201030 18:40:05.067"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 18:40:08.070" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20201030 18:40:05.068" endtime="20201030 18:40:08.071"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:03.958" endtime="20201030 18:40:08.072"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:40:08.077" endtime="20201030 18:40:08.344"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:08.074" endtime="20201030 18:40:08.345"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:40:08.357" endtime="20201030 18:40:11.379"></status>
</kw>
<msg timestamp="20201030 18:40:11.380" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:40:08.356" endtime="20201030 18:40:11.380"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:40:11.385" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:40:11.382" endtime="20201030 18:40:11.386"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:40:11.392" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:40:11.388" endtime="20201030 18:40:11.392"></status>
</kw>
<status status="FAIL" starttime="20201030 18:40:08.353" endtime="20201030 18:40:11.394"></status>
</kw>
<status status="FAIL" starttime="20201030 18:40:08.351" endtime="20201030 18:40:11.395"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:08.350" endtime="20201030 18:40:11.395"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:40:11.403" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:40:11.402" endtime="20201030 18:40:11.404"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:11.397" endtime="20201030 18:40:11.404"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:08.349" endtime="20201030 18:40:11.405"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:08.349" endtime="20201030 18:40:11.405"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:40:11.407" endtime="20201030 18:40:11.410"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:08.347" endtime="20201030 18:40:11.411"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:40:11.413" endtime="20201030 18:40:11.417"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:08.346" endtime="20201030 18:40:11.418"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:03.957" endtime="20201030 18:40:11.418"></status>
</kw>
<test id="s1-s4-t1" name="0 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:40:11.430" endtime="20201030 18:40:11.451"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:11.427" endtime="20201030 18:40:11.452"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:40:11.479" endtime="20201030 18:40:14.503"></status>
</kw>
<msg timestamp="20201030 18:40:14.504" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:40:11.476" endtime="20201030 18:40:14.504"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:40:14.509" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:40:14.506" endtime="20201030 18:40:14.510"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:40:14.517" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:40:14.511" endtime="20201030 18:40:14.517"></status>
</kw>
<status status="FAIL" starttime="20201030 18:40:11.470" endtime="20201030 18:40:14.519"></status>
</kw>
<status status="FAIL" starttime="20201030 18:40:11.465" endtime="20201030 18:40:14.520"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:11.463" endtime="20201030 18:40:14.521"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:40:14.528" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:40:14.527" endtime="20201030 18:40:14.529"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:14.522" endtime="20201030 18:40:14.529"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:11.461" endtime="20201030 18:40:14.530"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:11.460" endtime="20201030 18:40:14.530"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:40:14.532" endtime="20201030 18:40:14.535"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:11.457" endtime="20201030 18:40:14.536"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:11.454" endtime="20201030 18:40:14.537"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:11.424" endtime="20201030 18:40:14.537"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>0</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:40:14.554" endtime="20201030 18:40:20.680"></status>
</kw>
<msg timestamp="20201030 18:40:20.681" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0\r\n'], 'data': [{'bg-timer-count': '0'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:40:14.551" endtime="20201030 18:40:20.682"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:40:20.687" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0\r\n'], 'data': [{'bg-timer-count': '0'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:40:20.684" endtime="20201030 18:40:20.687"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:40:20.689" endtime="20201030 18:40:20.692"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:14.546" endtime="20201030 18:40:20.693"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:14.541" endtime="20201030 18:40:20.694"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:40:20.700" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'bg-timer-count': 0, 'main-timer-interval': 100000}</msg>
<status status="PASS" starttime="20201030 18:40:20.696" endtime="20201030 18:40:20.701"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:40:20.709" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 18:40:20.707" endtime="20201030 18:40:20.709"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:40:20.713" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 18:40:20.711" endtime="20201030 18:40:20.714"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:20.702" endtime="20201030 18:40:20.715"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:40:20.722" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 18:40:20.720" endtime="20201030 18:40:20.723"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:40:20.727" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 18:40:20.725" endtime="20201030 18:40:20.728"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:20.716" endtime="20201030 18:40:20.729"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:40:20.733" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 18:40:20.732" endtime="20201030 18:40:20.734"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:40:20.735" level="INFO">VALUE: 0</msg>
<status status="PASS" starttime="20201030 18:40:20.734" endtime="20201030 18:40:20.735"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:20.730" endtime="20201030 18:40:20.736"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:40:20.743" endtime="20201030 18:40:21.050"></status>
</kw>
<msg timestamp="20201030 18:40:21.053" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.116149722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.216175139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:40:20.741" endtime="20201030 18:40:21.054"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:40:21.061" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.116149722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.216175139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:40:21.055" endtime="20201030 18:40:21.062"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:40:21.063" endtime="20201030 18:40:21.064"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:20.738" endtime="20201030 18:40:21.065"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:20.737" endtime="20201030 18:40:21.065"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 18:40:21.069" level="INFO">${FILTERED} = [{'diff': 0.10002541700000034}, {'diff': 0.10001009699999974}, {'diff': 0.10000994399999996}, {'diff': 0.10001094500000018}, {'diff': 0.10001095799999993}, {'diff': 0.10001095900000001}, {'diff': 0.10...</msg>
<status status="PASS" starttime="20201030 18:40:21.066" endtime="20201030 18:40:21.069"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:40:21.073" level="INFO">${RESULT} = {'diff': [0.10002541700000034, 0.10001009699999974, 0.10000994399999996, 0.10001094500000018, 0.10001095799999993, 0.10001095900000001, 0.10001093099999991, 0.1000109440000001, 0.10001097299999984, 0....</msg>
<status status="PASS" starttime="20201030 18:40:21.070" endtime="20201030 18:40:21.073"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:40:21.077" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 18:40:21.076" endtime="20201030 18:40:21.078"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:40:21.080" level="INFO">VALUE: [0.10002541700000034, 0.10001009699999974, 0.10000994399999996, 0.10001094500000018, 0.10001095799999993, 0.10001095900000001, 0.10001093099999991, 0.1000109440000001, 0.10001097299999984, 0.10001093000000072, 0.10001095800000037, 0.10001097199999975, 0.10001091600000045, 0.10001095799999948, 0.10001094500000018, 0.10001095800000037, 0.10001094500000018, 0.10001097199999975, 0.1000109870000001, 0.10001083400000077, 0.10001095799999948, 0.10001094500000018, 0.10001095800000037, 0.1000110000000003, 0.10001088899999999, 0.1000108329999998, 0.10001095899999957, 0.10001097199999975, 0.10001094500000018, 0.10001095800000037, 0.1000109440000001, 0.10001097199999975, 0.1000109999999994, 0.10001083399999988, 0.10001101400000056, 0.10001083399999988, 0.10001095800000037, 0.10001095799999948, 0.10001095799999948, 0.10001095800000037, 0.10001097199999975, 0.10001095799999948, 0.10001095900000045, 0.10001095800000037, 0.10001095899999957, 0.10001097199999975, 0.10001097300000072, 0.1000109999999994, 0.10001091700000053, 0.10001084700000007, 0.10001093099999991]</msg>
<status status="PASS" starttime="20201030 18:40:21.078" endtime="20201030 18:40:21.080"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:21.074" endtime="20201030 18:40:21.081"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:40:21.084" endtime="20201030 18:40:21.104"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:21.083" endtime="20201030 18:40:21.104"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:21.082" endtime="20201030 18:40:21.105"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:14.539" endtime="20201030 18:40:21.105"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
</tags>
<status status="PASS" starttime="20201030 18:40:11.419" endtime="20201030 18:40:21.106" critical="yes"></status>
</test>
<test id="s1-s4-t2" name="5 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:40:21.112" endtime="20201030 18:40:21.132"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:21.111" endtime="20201030 18:40:21.132"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:40:21.146" endtime="20201030 18:40:24.167"></status>
</kw>
<msg timestamp="20201030 18:40:24.168" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:40:21.144" endtime="20201030 18:40:24.168"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:40:24.173" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:40:24.170" endtime="20201030 18:40:24.174"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:40:24.179" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:40:24.175" endtime="20201030 18:40:24.180"></status>
</kw>
<status status="FAIL" starttime="20201030 18:40:21.142" endtime="20201030 18:40:24.181"></status>
</kw>
<status status="FAIL" starttime="20201030 18:40:21.139" endtime="20201030 18:40:24.182"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:21.138" endtime="20201030 18:40:24.183"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:40:24.191" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:40:24.189" endtime="20201030 18:40:24.192"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:24.185" endtime="20201030 18:40:24.192"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:21.137" endtime="20201030 18:40:24.192"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:21.137" endtime="20201030 18:40:24.193"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:40:24.194" endtime="20201030 18:40:24.197"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:21.135" endtime="20201030 18:40:24.198"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:21.133" endtime="20201030 18:40:24.199"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:21.109" endtime="20201030 18:40:24.200"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>5</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:40:24.218" endtime="20201030 18:40:30.341"></status>
</kw>
<msg timestamp="20201030 18:40:30.342" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'bg-timer-count': '5'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:40:24.214" endtime="20201030 18:40:30.342"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:40:30.347" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'bg-timer-count': '5'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:40:30.344" endtime="20201030 18:40:30.348"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:40:30.350" endtime="20201030 18:40:30.354"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:24.209" endtime="20201030 18:40:30.355"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:24.204" endtime="20201030 18:40:30.356"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:40:30.361" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'bg-timer-count': 5, 'main-timer-interval': 100000}</msg>
<status status="PASS" starttime="20201030 18:40:30.357" endtime="20201030 18:40:30.361"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:40:30.369" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 18:40:30.367" endtime="20201030 18:40:30.370"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:40:30.375" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 18:40:30.371" endtime="20201030 18:40:30.376"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:30.362" endtime="20201030 18:40:30.377"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:40:30.385" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 18:40:30.383" endtime="20201030 18:40:30.386"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:40:30.389" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 18:40:30.388" endtime="20201030 18:40:30.390"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:30.379" endtime="20201030 18:40:30.391"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:40:30.399" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 18:40:30.397" endtime="20201030 18:40:30.400"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:40:30.404" level="INFO">VALUE: 5</msg>
<status status="PASS" starttime="20201030 18:40:30.402" endtime="20201030 18:40:30.404"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:30.392" endtime="20201030 18:40:30.404"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:40:30.412" endtime="20201030 18:40:30.712"></status>
</kw>
<msg timestamp="20201030 18:40:30.715" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.095819444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.195859319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:40:30.410" endtime="20201030 18:40:30.715"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:40:30.723" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.095819444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.195859319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:40:30.716" endtime="20201030 18:40:30.723"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:40:30.724" endtime="20201030 18:40:30.725"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:30.408" endtime="20201030 18:40:30.726"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:30.405" endtime="20201030 18:40:30.726"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 18:40:30.730" level="INFO">${FILTERED} = [{'diff': 0.10003987500000022}, {'diff': 0.09999619400000004}, {'diff': 0.10000998600000033}, {'diff': 0.10001082000000006}, {'diff': 0.100010916}, {'diff': 0.100010916}, {'diff': 0.10001093000000028}...</msg>
<status status="PASS" starttime="20201030 18:40:30.727" endtime="20201030 18:40:30.730"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:40:30.735" level="INFO">${RESULT} = {'diff': [0.10003987500000022, 0.09999619400000004, 0.10000998600000033, 0.10001082000000006, 0.100010916, 0.100010916, 0.10001093000000028, 0.10001093099999991, 0.1000109720000002, 0.1000108329999998...</msg>
<status status="PASS" starttime="20201030 18:40:30.731" endtime="20201030 18:40:30.735"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:40:30.739" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 18:40:30.738" endtime="20201030 18:40:30.739"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:40:30.741" level="INFO">VALUE: [0.10003987500000022, 0.09999619400000004, 0.10000998600000033, 0.10001082000000006, 0.100010916, 0.100010916, 0.10001093000000028, 0.10001093099999991, 0.1000109720000002, 0.1000108329999998, 0.10001092999999983, 0.10001094500000018, 0.10001090300000026, 0.10001093099999991, 0.1000109440000001, 0.10001094500000018, 0.10001091699999964, 0.1000109440000001, 0.10001090200000018, 0.10001092999999983, 0.10001094500000018, 0.1000109449999993, 0.10001093000000072, 0.10001091599999956, 0.10001095900000045, 0.10001091699999964, 0.1000110000000003, 0.10001087500000061, 0.10001080600000023, 0.10001091699999964, 0.10001101400000056, 0.10001080600000023, 0.10001093099999991, 0.10001093099999991, 0.10001095800000037, 0.10001094500000018, 0.10001091699999964, 0.1000109440000001, 0.1000110000000003, 0.10001083399999988, 0.10001091600000045, 0.10001095799999948, 0.10001093099999991, 0.10001095799999948, 0.10001091600000045, 0.10001095899999957, 0.10001093099999991, 0.1000109440000001, 0.10001094500000018, 0.1000109449999993, 0.10001095800000037]</msg>
<status status="PASS" starttime="20201030 18:40:30.740" endtime="20201030 18:40:30.742"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:30.736" endtime="20201030 18:40:30.743"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:40:30.746" endtime="20201030 18:40:30.766"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:30.745" endtime="20201030 18:40:30.766"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:30.744" endtime="20201030 18:40:30.767"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:24.201" endtime="20201030 18:40:30.767"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
</tags>
<status status="PASS" starttime="20201030 18:40:21.107" endtime="20201030 18:40:30.767" critical="yes"></status>
</test>
<test id="s1-s4-t3" name="10 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:40:30.774" endtime="20201030 18:40:30.793"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:30.772" endtime="20201030 18:40:30.794"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:40:30.808" endtime="20201030 18:40:33.829"></status>
</kw>
<msg timestamp="20201030 18:40:33.830" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:40:30.805" endtime="20201030 18:40:33.830"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:40:33.835" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:40:33.832" endtime="20201030 18:40:33.836"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:40:33.841" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:40:33.837" endtime="20201030 18:40:33.842"></status>
</kw>
<status status="FAIL" starttime="20201030 18:40:30.803" endtime="20201030 18:40:33.843"></status>
</kw>
<status status="FAIL" starttime="20201030 18:40:30.800" endtime="20201030 18:40:33.844"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:30.799" endtime="20201030 18:40:33.845"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:40:33.852" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:40:33.851" endtime="20201030 18:40:33.854"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:33.847" endtime="20201030 18:40:33.854"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:30.798" endtime="20201030 18:40:33.854"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:30.797" endtime="20201030 18:40:33.855"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:40:33.856" endtime="20201030 18:40:33.859"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:30.796" endtime="20201030 18:40:33.860"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:30.794" endtime="20201030 18:40:33.861"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:30.771" endtime="20201030 18:40:33.862"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>10</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:40:33.878" endtime="20201030 18:40:40.001"></status>
</kw>
<msg timestamp="20201030 18:40:40.002" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'bg-timer-count': '10'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:40:33.876" endtime="20201030 18:40:40.003"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:40:40.007" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'bg-timer-count': '10'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:40:40.004" endtime="20201030 18:40:40.008"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:40:40.010" endtime="20201030 18:40:40.014"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:33.872" endtime="20201030 18:40:40.015"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:33.866" endtime="20201030 18:40:40.016"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:40:40.021" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'bg-timer-count': 10, 'main-timer-interval': 100000}</msg>
<status status="PASS" starttime="20201030 18:40:40.018" endtime="20201030 18:40:40.021"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:40:40.029" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 18:40:40.027" endtime="20201030 18:40:40.030"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:40:40.034" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 18:40:40.032" endtime="20201030 18:40:40.034"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:40.023" endtime="20201030 18:40:40.035"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:40:40.043" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 18:40:40.041" endtime="20201030 18:40:40.044"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:40:40.047" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 18:40:40.045" endtime="20201030 18:40:40.048"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:40.037" endtime="20201030 18:40:40.049"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:40:40.057" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 18:40:40.055" endtime="20201030 18:40:40.058"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:40:40.061" level="INFO">VALUE: 10</msg>
<status status="PASS" starttime="20201030 18:40:40.059" endtime="20201030 18:40:40.062"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:40.050" endtime="20201030 18:40:40.063"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:40:40.077" endtime="20201030 18:40:40.387"></status>
</kw>
<msg timestamp="20201030 18:40:40.390" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.094114722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.194221653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:40:40.073" endtime="20201030 18:40:40.391"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:40:40.399" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.094114722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.194221653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:40:40.392" endtime="20201030 18:40:40.399"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:40:40.400" endtime="20201030 18:40:40.401"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:40.068" endtime="20201030 18:40:40.402"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:40.064" endtime="20201030 18:40:40.402"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 18:40:40.407" level="INFO">${FILTERED} = [{'diff': 0.10010693100000001}, {'diff': 0.09992937499999988}, {'diff': 0.10000997200000006}, {'diff': 0.10001095799999993}, {'diff': 0.1000109440000001}, {'diff': 0.10001094500000018}, {'diff': 0.100...</msg>
<status status="PASS" starttime="20201030 18:40:40.403" endtime="20201030 18:40:40.408"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:40:40.412" level="INFO">${RESULT} = {'diff': [0.10010693100000001, 0.09992937499999988, 0.10000997200000006, 0.10001095799999993, 0.1000109440000001, 0.10001094500000018, 0.10001095799999993, 0.10001095799999993, 0.10001094500000018, 0....</msg>
<status status="PASS" starttime="20201030 18:40:40.409" endtime="20201030 18:40:40.412"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:40:40.416" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 18:40:40.415" endtime="20201030 18:40:40.416"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:40:40.418" level="INFO">VALUE: [0.10010693100000001, 0.09992937499999988, 0.10000997200000006, 0.10001095799999993, 0.1000109440000001, 0.10001094500000018, 0.10001095799999993, 0.10001095799999993, 0.10001094500000018, 0.1000109720000002, 0.10001095899999957, 0.1000109440000001, 0.10001102799999995, 0.1000108329999998, 0.10001094500000018, 0.10001098600000002, 0.10001093099999991, 0.10001098600000002, 0.10001092999999983, 0.10001104200000022, 0.10001080500000015, 0.10001097299999984, 0.10001095800000037, 0.10001094500000018, 0.10001095799999948, 0.1000109440000001, 0.10001093099999991, 0.10001093099999991, 0.10001095800000037, 0.10001091699999964, 0.10001097300000072, 0.10001091599999956, 0.10001095800000037, 0.10001093099999991, 0.10001093099999991, 0.10001097199999975, 0.10001091700000053, 0.10001097199999975, 0.10001091599999956, 0.10001094500000018, 0.10001098600000002, 0.10001081899999953, 0.10001098600000002, 0.10001092999999983, 0.10001093000000072, 0.1000109449999993, 0.10001094500000018, 0.1000109440000001, 0.10001095900000045, 0.10001094399999921, 0.10001092999999983]</msg>
<status status="PASS" starttime="20201030 18:40:40.417" endtime="20201030 18:40:40.419"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:40.412" endtime="20201030 18:40:40.420"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:40:40.424" endtime="20201030 18:40:40.443"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:40.422" endtime="20201030 18:40:40.444"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:40.421" endtime="20201030 18:40:40.444"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:33.863" endtime="20201030 18:40:40.444"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
</tags>
<status status="PASS" starttime="20201030 18:40:30.769" endtime="20201030 18:40:40.445" critical="yes"></status>
</test>
<test id="s1-s4-t4" name="15 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:40:40.452" endtime="20201030 18:40:40.471"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:40.450" endtime="20201030 18:40:40.472"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:40:40.486" endtime="20201030 18:40:43.509"></status>
</kw>
<msg timestamp="20201030 18:40:43.510" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:40:40.484" endtime="20201030 18:40:43.510"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:40:43.515" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:40:43.512" endtime="20201030 18:40:43.516"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:40:43.522" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:40:43.518" endtime="20201030 18:40:43.523"></status>
</kw>
<status status="FAIL" starttime="20201030 18:40:40.482" endtime="20201030 18:40:43.524"></status>
</kw>
<status status="FAIL" starttime="20201030 18:40:40.478" endtime="20201030 18:40:43.525"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:40.477" endtime="20201030 18:40:43.526"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:40:43.534" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:40:43.533" endtime="20201030 18:40:43.535"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:43.528" endtime="20201030 18:40:43.536"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:40.476" endtime="20201030 18:40:43.536"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:40.476" endtime="20201030 18:40:43.537"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:40:43.538" endtime="20201030 18:40:43.542"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:40.474" endtime="20201030 18:40:43.543"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:40.472" endtime="20201030 18:40:43.544"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:40.449" endtime="20201030 18:40:43.544"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>15</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:40:43.562" endtime="20201030 18:40:49.688"></status>
</kw>
<msg timestamp="20201030 18:40:49.689" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15\r\n'], 'data': [{'bg-timer-count': '15'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:40:43.559" endtime="20201030 18:40:49.689"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:40:49.695" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15\r\n'], 'data': [{'bg-timer-count': '15'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:40:49.691" endtime="20201030 18:40:49.695"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:40:49.698" endtime="20201030 18:40:49.702"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:43.553" endtime="20201030 18:40:49.703"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:43.549" endtime="20201030 18:40:49.704"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:40:49.709" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'bg-timer-count': 15, 'main-timer-interval': 100000}</msg>
<status status="PASS" starttime="20201030 18:40:49.705" endtime="20201030 18:40:49.710"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:40:49.718" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 18:40:49.716" endtime="20201030 18:40:49.719"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:40:49.723" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 18:40:49.721" endtime="20201030 18:40:49.723"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:49.711" endtime="20201030 18:40:49.725"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:40:49.733" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 18:40:49.731" endtime="20201030 18:40:49.734"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:40:49.737" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 18:40:49.736" endtime="20201030 18:40:49.738"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:49.726" endtime="20201030 18:40:49.738"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:40:49.743" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 18:40:49.741" endtime="20201030 18:40:49.744"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:40:49.746" level="INFO">VALUE: 15</msg>
<status status="PASS" starttime="20201030 18:40:49.744" endtime="20201030 18:40:49.746"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:49.739" endtime="20201030 18:40:49.746"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:40:49.753" endtime="20201030 18:40:50.054"></status>
</kw>
<msg timestamp="20201030 18:40:50.057" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.102037625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.202186458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:40:49.752" endtime="20201030 18:40:50.057"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:40:50.065" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.102037625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.202186458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:40:50.058" endtime="20201030 18:40:50.066"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:40:50.067" endtime="20201030 18:40:50.068"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:49.749" endtime="20201030 18:40:50.069"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:49.747" endtime="20201030 18:40:50.069"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 18:40:50.073" level="INFO">${FILTERED} = [{'diff': 0.10014883299999999}, {'diff': 0.09990694400000022}, {'diff': 0.09999007000000004}, {'diff': 0.10000991699999995}, {'diff': 0.10001098600000002}, {'diff': 0.1000108049999997}, {'diff': 0.100...</msg>
<status status="PASS" starttime="20201030 18:40:50.070" endtime="20201030 18:40:50.074"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:40:50.077" level="INFO">${RESULT} = {'diff': [0.10014883299999999, 0.09990694400000022, 0.09999007000000004, 0.10000991699999995, 0.10001098600000002, 0.1000108049999997, 0.10001095900000001, 0.10001091699999964, 0.10001094400000055, 0....</msg>
<status status="PASS" starttime="20201030 18:40:50.074" endtime="20201030 18:40:50.078"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:40:50.082" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 18:40:50.081" endtime="20201030 18:40:50.082"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:40:50.087" level="INFO">VALUE: [0.10014883299999999, 0.09990694400000022, 0.09999007000000004, 0.10000991699999995, 0.10001098600000002, 0.1000108049999997, 0.10001095900000001, 0.10001091699999964, 0.10001094400000055, 0.10001090299999937, 0.10001093099999991, 0.1000109310000008, 0.10001094399999921, 0.10001091600000045, 0.10001095799999948, 0.10001091700000053, 0.10001091699999964, 0.1000109440000001, 0.10001092999999983, 0.10001093099999991, 0.10001094500000018, 0.10001091600000045, 0.1000109440000001, 0.1000109449999993, 0.10001091700000053, 0.10001101399999968, 0.10001080600000023, 0.1000109449999993, 0.10001093000000072, 0.10001092999999983, 0.10001093099999991, 0.10001093099999991, 0.10001095800000037, 0.10001092999999983, 0.10001093099999991, 0.10001097199999975, 0.10001090200000018, 0.1000109440000001, 0.10001094500000018, 0.1000109440000001, 0.1000109440000001, 0.10001093099999991, 0.1000109310000008, 0.10001094399999921, 0.10001095899999957, 0.10001093099999991, 0.1000109440000001, 0.10001094500000018, 0.1000109449999993, 0.10001094400000099, 0.10001095900000045]</msg>
<status status="PASS" starttime="20201030 18:40:50.083" endtime="20201030 18:40:50.088"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:50.078" endtime="20201030 18:40:50.089"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:40:50.093" endtime="20201030 18:40:50.112"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:50.091" endtime="20201030 18:40:50.113"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:50.090" endtime="20201030 18:40:50.113"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:43.546" endtime="20201030 18:40:50.113"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
</tags>
<status status="PASS" starttime="20201030 18:40:40.446" endtime="20201030 18:40:50.114" critical="yes"></status>
</test>
<test id="s1-s4-t5" name="20 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:40:50.121" endtime="20201030 18:40:50.140"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:50.119" endtime="20201030 18:40:50.141"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:40:50.154" endtime="20201030 18:40:53.180"></status>
</kw>
<msg timestamp="20201030 18:40:53.181" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:40:50.153" endtime="20201030 18:40:53.182"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:40:53.190" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:40:53.185" endtime="20201030 18:40:53.192"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:40:53.201" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:40:53.194" endtime="20201030 18:40:53.202"></status>
</kw>
<status status="FAIL" starttime="20201030 18:40:50.150" endtime="20201030 18:40:53.205"></status>
</kw>
<status status="FAIL" starttime="20201030 18:40:50.148" endtime="20201030 18:40:53.207"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:50.146" endtime="20201030 18:40:53.209"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:40:53.221" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:40:53.219" endtime="20201030 18:40:53.222"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:53.212" endtime="20201030 18:40:53.222"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:50.145" endtime="20201030 18:40:53.222"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:50.145" endtime="20201030 18:40:53.223"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:40:53.224" endtime="20201030 18:40:53.228"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:50.143" endtime="20201030 18:40:53.229"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:50.142" endtime="20201030 18:40:53.230"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:50.118" endtime="20201030 18:40:53.231"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>20</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:40:53.251" endtime="20201030 18:40:59.373"></status>
</kw>
<msg timestamp="20201030 18:40:59.373" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20\r\n'], 'data': [{'bg-timer-count': '20'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:40:53.245" endtime="20201030 18:40:59.374"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:40:59.376" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20\r\n'], 'data': [{'bg-timer-count': '20'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:40:59.374" endtime="20201030 18:40:59.376"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:40:59.378" endtime="20201030 18:40:59.379"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:53.239" endtime="20201030 18:40:59.380"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:53.235" endtime="20201030 18:40:59.380"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:40:59.383" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'bg-timer-count': 20, 'main-timer-interval': 100000}</msg>
<status status="PASS" starttime="20201030 18:40:59.381" endtime="20201030 18:40:59.383"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:40:59.387" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 18:40:59.386" endtime="20201030 18:40:59.388"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:40:59.389" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 18:40:59.388" endtime="20201030 18:40:59.390"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:59.384" endtime="20201030 18:40:59.390"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:40:59.394" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 18:40:59.393" endtime="20201030 18:40:59.395"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:40:59.396" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 18:40:59.395" endtime="20201030 18:40:59.397"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:59.391" endtime="20201030 18:40:59.397"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:40:59.401" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 18:40:59.400" endtime="20201030 18:40:59.402"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:40:59.404" level="INFO">VALUE: 20</msg>
<status status="PASS" starttime="20201030 18:40:59.402" endtime="20201030 18:40:59.404"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:59.398" endtime="20201030 18:40:59.404"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:40:59.411" endtime="20201030 18:40:59.732"></status>
</kw>
<msg timestamp="20201030 18:40:59.735" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.121773417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.221956986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:40:59.409" endtime="20201030 18:40:59.735"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:40:59.743" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.121773417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.221956986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:40:59.736" endtime="20201030 18:40:59.743"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:40:59.744" endtime="20201030 18:40:59.746"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:59.407" endtime="20201030 18:40:59.747"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:59.405" endtime="20201030 18:40:59.747"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 18:40:59.751" level="INFO">${FILTERED} = [{'diff': 0.10018356899999992}, {'diff': 0.09987377800000008}, {'diff': 0.0999893329999999}, {'diff': 0.10000991699999995}, {'diff': 0.10001093099999991}, {'diff': 0.10001093099999991}, {'diff': 0.100...</msg>
<status status="PASS" starttime="20201030 18:40:59.748" endtime="20201030 18:40:59.751"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:40:59.756" level="INFO">${RESULT} = {'diff': [0.10018356899999992, 0.09987377800000008, 0.0999893329999999, 0.10000991699999995, 0.10001093099999991, 0.10001093099999991, 0.100010916, 0.10001092999999983, 0.10001094499999974, 0.10001091...</msg>
<status status="PASS" starttime="20201030 18:40:59.752" endtime="20201030 18:40:59.756"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:40:59.760" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 18:40:59.759" endtime="20201030 18:40:59.761"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:40:59.763" level="INFO">VALUE: [0.10018356899999992, 0.09987377800000008, 0.0999893329999999, 0.10000991699999995, 0.10001093099999991, 0.10001093099999991, 0.100010916, 0.10001092999999983, 0.10001094499999974, 0.10001091699999964, 0.10001093099999991, 0.10001092999999983, 0.10001092999999983, 0.10001094500000018, 0.1000109440000001, 0.10001090200000018, 0.10001092999999983, 0.10001093099999991, 0.10001094500000018, 0.10001091699999964, 0.1000109440000001, 0.10001094500000018, 0.10001094500000018, 0.10001090300000026, 0.1000109440000001, 0.1000109449999993, 0.10001091700000053, 0.10001095799999948, 0.10001091600000045, 0.10001094500000018, 0.10001093099999991, 0.10001098600000002, 0.10001081900000042, 0.10001094500000018, 0.1000109440000001, 0.10001092999999983, 0.10001093099999991, 0.10001097199999975, 0.10001091600000045, 0.10001097199999975, 0.10001083400000077, 0.10001098600000002, 0.1000108329999998, 0.10001094500000018, 0.10001093099999991, 0.1000109440000001, 0.10001094500000018, 0.10001094500000018, 0.10001094399999921, 0.10001097299999984, 0.10001097200000153]</msg>
<status status="PASS" starttime="20201030 18:40:59.762" endtime="20201030 18:40:59.764"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:59.757" endtime="20201030 18:40:59.764"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:40:59.768" endtime="20201030 18:40:59.788"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:59.767" endtime="20201030 18:40:59.788"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:59.765" endtime="20201030 18:40:59.789"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:53.232" endtime="20201030 18:40:59.789"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
</tags>
<status status="PASS" starttime="20201030 18:40:50.115" endtime="20201030 18:40:59.789" critical="yes"></status>
</test>
<test id="s1-s4-t6" name="25 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:40:59.796" endtime="20201030 18:40:59.816"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:59.795" endtime="20201030 18:40:59.816"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:40:59.830" endtime="20201030 18:41:02.852"></status>
</kw>
<msg timestamp="20201030 18:41:02.853" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:40:59.828" endtime="20201030 18:41:02.854"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:41:02.859" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:41:02.855" endtime="20201030 18:41:02.860"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:41:02.866" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:41:02.861" endtime="20201030 18:41:02.867"></status>
</kw>
<status status="FAIL" starttime="20201030 18:40:59.825" endtime="20201030 18:41:02.868"></status>
</kw>
<status status="FAIL" starttime="20201030 18:40:59.823" endtime="20201030 18:41:02.870"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:59.822" endtime="20201030 18:41:02.871"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:41:02.881" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:41:02.879" endtime="20201030 18:41:02.882"></status>
</kw>
<status status="PASS" starttime="20201030 18:41:02.874" endtime="20201030 18:41:02.882"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:59.821" endtime="20201030 18:41:02.882"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:59.820" endtime="20201030 18:41:02.883"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:41:02.884" endtime="20201030 18:41:02.888"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:59.819" endtime="20201030 18:41:02.889"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:59.817" endtime="20201030 18:41:02.890"></status>
</kw>
<status status="PASS" starttime="20201030 18:40:59.793" endtime="20201030 18:41:02.891"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>25</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:41:02.903" endtime="20201030 18:41:09.028"></status>
</kw>
<msg timestamp="20201030 18:41:09.029" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25\r\n'], 'data': [{'bg-timer-count': '25'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:41:02.902" endtime="20201030 18:41:09.029"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:41:09.034" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25\r\n'], 'data': [{'bg-timer-count': '25'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:41:09.031" endtime="20201030 18:41:09.035"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:41:09.038" endtime="20201030 18:41:09.041"></status>
</kw>
<status status="PASS" starttime="20201030 18:41:02.899" endtime="20201030 18:41:09.042"></status>
</kw>
<status status="PASS" starttime="20201030 18:41:02.895" endtime="20201030 18:41:09.043"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:41:09.049" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'bg-timer-count': 25, 'main-timer-interval': 100000}</msg>
<status status="PASS" starttime="20201030 18:41:09.045" endtime="20201030 18:41:09.049"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:41:09.058" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 18:41:09.055" endtime="20201030 18:41:09.059"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:41:09.062" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 18:41:09.060" endtime="20201030 18:41:09.063"></status>
</kw>
<status status="PASS" starttime="20201030 18:41:09.051" endtime="20201030 18:41:09.064"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:41:09.073" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 18:41:09.070" endtime="20201030 18:41:09.074"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:41:09.077" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 18:41:09.075" endtime="20201030 18:41:09.078"></status>
</kw>
<status status="PASS" starttime="20201030 18:41:09.065" endtime="20201030 18:41:09.079"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:41:09.088" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 18:41:09.085" endtime="20201030 18:41:09.088"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:41:09.092" level="INFO">VALUE: 25</msg>
<status status="PASS" starttime="20201030 18:41:09.090" endtime="20201030 18:41:09.093"></status>
</kw>
<status status="PASS" starttime="20201030 18:41:09.081" endtime="20201030 18:41:09.094"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:41:09.108" endtime="20201030 18:41:09.413"></status>
</kw>
<msg timestamp="20201030 18:41:09.416" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.096834014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.197064653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:41:09.105" endtime="20201030 18:41:09.416"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:41:09.424" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.096834014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.197064653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:41:09.417" endtime="20201030 18:41:09.425"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:41:09.426" endtime="20201030 18:41:09.427"></status>
</kw>
<status status="PASS" starttime="20201030 18:41:09.099" endtime="20201030 18:41:09.428"></status>
</kw>
<status status="PASS" starttime="20201030 18:41:09.095" endtime="20201030 18:41:09.428"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 18:41:09.432" level="INFO">${FILTERED} = [{'diff': 0.10023063899999984}, {'diff': 0.09983299999999984}, {'diff': 0.100019584}, {'diff': 0.09997456900000001}, {'diff': 0.10000993099999977}, {'diff': 0.10001095900000001}, {'diff': 0.1000109440...</msg>
<status status="PASS" starttime="20201030 18:41:09.429" endtime="20201030 18:41:09.433"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:41:09.436" level="INFO">${RESULT} = {'diff': [0.10023063899999984, 0.09983299999999984, 0.100019584, 0.09997456900000001, 0.10000993099999977, 0.10001095900000001, 0.1000109440000001, 0.10001094500000018, 0.10001097199999975, 0.10001095...</msg>
<status status="PASS" starttime="20201030 18:41:09.433" endtime="20201030 18:41:09.437"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:41:09.441" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 18:41:09.440" endtime="20201030 18:41:09.441"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:41:09.443" level="INFO">VALUE: [0.10023063899999984, 0.09983299999999984, 0.100019584, 0.09997456900000001, 0.10000993099999977, 0.10001095900000001, 0.1000109440000001, 0.10001094500000018, 0.10001097199999975, 0.10001095800000037, 0.10001093099999991, 0.1000109440000001, 0.10001097199999975, 0.10001093099999991, 0.10001097199999975, 0.10001093099999991, 0.10001095800000037, 0.10001095800000037, 0.1000109449999993, 0.10001095800000037, 0.1000110000000003, 0.10001084700000007, 0.10001094500000018, 0.10001095800000037, 0.10001095799999948, 0.10001094500000018, 0.1000110000000003, 0.10001084700000007, 0.10001095800000037, 0.10001098600000002, 0.10001094399999921, 0.1000110000000003, 0.10001088899999999, 0.1000108329999998, 0.10001095900000045, 0.10001095800000037, 0.10001095899999957, 0.10001097199999975, 0.10001095900000045, 0.10001095800000037, 0.10001097200000064, 0.1000109440000001, 0.10001091599999956, 0.10001092999999983, 0.10001095900000045, 0.10001092999999983, 0.10001101399999968, 0.10001077799999969, 0.10001097200000064, 0.10001094400000099, 0.10001090299999937]</msg>
<status status="PASS" starttime="20201030 18:41:09.442" endtime="20201030 18:41:09.444"></status>
</kw>
<status status="PASS" starttime="20201030 18:41:09.437" endtime="20201030 18:41:09.445"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:41:09.448" endtime="20201030 18:41:09.468"></status>
</kw>
<status status="PASS" starttime="20201030 18:41:09.447" endtime="20201030 18:41:09.469"></status>
</kw>
<status status="PASS" starttime="20201030 18:41:09.446" endtime="20201030 18:41:09.469"></status>
</kw>
<status status="PASS" starttime="20201030 18:41:02.892" endtime="20201030 18:41:09.469"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
</tags>
<status status="PASS" starttime="20201030 18:40:59.791" endtime="20201030 18:41:09.470" critical="yes"></status>
</test>
<status status="PASS" starttime="20201030 18:40:03.914" endtime="20201030 18:41:09.477"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_ztimer_benchmarks</item>
<item name="RIOT-Board">arduino-due</item>
<item name="RIOT-Version">2020.07</item>
</metadata>
<status status="FAIL" starttime="20201030 18:31:59.381" endtime="20201030 18:41:09.512"></status>
</suite>
<statistics>
<total>
<stat pass="12" fail="6">Critical Tests</stat>
<stat pass="12" fail="6">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="12" fail="6">APP_tests_ztimer_benchmarks</stat>
<stat pass="12" fail="6">BOARD_arduino-due</stat>
<stat pass="4" fail="6">dev</stat>
</tag>
<suite>
<stat pass="12" fail="6" id="s1" name="tests_ztimer_benchmarks">tests_ztimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_ztimer_benchmarks.Timer Version</stat>
<stat pass="3" fail="6" id="s1-s2" name="Timer Overhead">tests_ztimer_benchmarks.Timer Overhead</stat>
<stat pass="2" fail="0" id="s1-s3" name="Sleep Accuracy">tests_ztimer_benchmarks.Sleep Accuracy</stat>
<stat pass="6" fail="0" id="s1-s4" name="Sleep Jitter">tests_ztimer_benchmarks.Sleep Jitter</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
